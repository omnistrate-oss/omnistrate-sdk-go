/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package registration

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateProductTierBillingPlanRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProductTierBillingPlanRequestBody{}

// CreateProductTierBillingPlanRequestBody struct for CreateProductTierBillingPlanRequestBody
type CreateProductTierBillingPlanRequestBody struct {
	// Allow creates when payment not configured
	AllowCreatesWhenPaymentNotConfigured bool `json:"allowCreatesWhenPaymentNotConfigured"`
	// Maximum number of instances
	MaxNumberofInstances int64 `json:"maxNumberofInstances"`
	// Plan name
	PlanName string `json:"planName"`
	// Pricing in dollars.
	Pricing interface{} `json:"pricing"`
	AdditionalProperties map[string]interface{}
}

type _CreateProductTierBillingPlanRequestBody CreateProductTierBillingPlanRequestBody

// NewCreateProductTierBillingPlanRequestBody instantiates a new CreateProductTierBillingPlanRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProductTierBillingPlanRequestBody(allowCreatesWhenPaymentNotConfigured bool, maxNumberofInstances int64, planName string, pricing interface{}) *CreateProductTierBillingPlanRequestBody {
	this := CreateProductTierBillingPlanRequestBody{}
	this.AllowCreatesWhenPaymentNotConfigured = allowCreatesWhenPaymentNotConfigured
	this.MaxNumberofInstances = maxNumberofInstances
	this.PlanName = planName
	this.Pricing = pricing
	return &this
}

// NewCreateProductTierBillingPlanRequestBodyWithDefaults instantiates a new CreateProductTierBillingPlanRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProductTierBillingPlanRequestBodyWithDefaults() *CreateProductTierBillingPlanRequestBody {
	this := CreateProductTierBillingPlanRequestBody{}
	return &this
}

// GetAllowCreatesWhenPaymentNotConfigured returns the AllowCreatesWhenPaymentNotConfigured field value
func (o *CreateProductTierBillingPlanRequestBody) GetAllowCreatesWhenPaymentNotConfigured() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowCreatesWhenPaymentNotConfigured
}

// GetAllowCreatesWhenPaymentNotConfiguredOk returns a tuple with the AllowCreatesWhenPaymentNotConfigured field value
// and a boolean to check if the value has been set.
func (o *CreateProductTierBillingPlanRequestBody) GetAllowCreatesWhenPaymentNotConfiguredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowCreatesWhenPaymentNotConfigured, true
}

// SetAllowCreatesWhenPaymentNotConfigured sets field value
func (o *CreateProductTierBillingPlanRequestBody) SetAllowCreatesWhenPaymentNotConfigured(v bool) {
	o.AllowCreatesWhenPaymentNotConfigured = v
}

// GetMaxNumberofInstances returns the MaxNumberofInstances field value
func (o *CreateProductTierBillingPlanRequestBody) GetMaxNumberofInstances() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MaxNumberofInstances
}

// GetMaxNumberofInstancesOk returns a tuple with the MaxNumberofInstances field value
// and a boolean to check if the value has been set.
func (o *CreateProductTierBillingPlanRequestBody) GetMaxNumberofInstancesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxNumberofInstances, true
}

// SetMaxNumberofInstances sets field value
func (o *CreateProductTierBillingPlanRequestBody) SetMaxNumberofInstances(v int64) {
	o.MaxNumberofInstances = v
}

// GetPlanName returns the PlanName field value
func (o *CreateProductTierBillingPlanRequestBody) GetPlanName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value
// and a boolean to check if the value has been set.
func (o *CreateProductTierBillingPlanRequestBody) GetPlanNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlanName, true
}

// SetPlanName sets field value
func (o *CreateProductTierBillingPlanRequestBody) SetPlanName(v string) {
	o.PlanName = v
}

// GetPricing returns the Pricing field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *CreateProductTierBillingPlanRequestBody) GetPricing() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Pricing
}

// GetPricingOk returns a tuple with the Pricing field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProductTierBillingPlanRequestBody) GetPricingOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Pricing) {
		return nil, false
	}
	return &o.Pricing, true
}

// SetPricing sets field value
func (o *CreateProductTierBillingPlanRequestBody) SetPricing(v interface{}) {
	o.Pricing = v
}

func (o CreateProductTierBillingPlanRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProductTierBillingPlanRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["allowCreatesWhenPaymentNotConfigured"] = o.AllowCreatesWhenPaymentNotConfigured
	toSerialize["maxNumberofInstances"] = o.MaxNumberofInstances
	toSerialize["planName"] = o.PlanName
	if o.Pricing != nil {
		toSerialize["pricing"] = o.Pricing
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateProductTierBillingPlanRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"allowCreatesWhenPaymentNotConfigured",
		"maxNumberofInstances",
		"planName",
		"pricing",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateProductTierBillingPlanRequestBody := _CreateProductTierBillingPlanRequestBody{}

	err = json.Unmarshal(data, &varCreateProductTierBillingPlanRequestBody)

	if err != nil {
		return err
	}

	*o = CreateProductTierBillingPlanRequestBody(varCreateProductTierBillingPlanRequestBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "allowCreatesWhenPaymentNotConfigured")
		delete(additionalProperties, "maxNumberofInstances")
		delete(additionalProperties, "planName")
		delete(additionalProperties, "pricing")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateProductTierBillingPlanRequestBody struct {
	value *CreateProductTierBillingPlanRequestBody
	isSet bool
}

func (v NullableCreateProductTierBillingPlanRequestBody) Get() *CreateProductTierBillingPlanRequestBody {
	return v.value
}

func (v *NullableCreateProductTierBillingPlanRequestBody) Set(val *CreateProductTierBillingPlanRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProductTierBillingPlanRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProductTierBillingPlanRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProductTierBillingPlanRequestBody(val *CreateProductTierBillingPlanRequestBody) *NullableCreateProductTierBillingPlanRequestBody {
	return &NullableCreateProductTierBillingPlanRequestBody{value: val, isSet: true}
}

func (v NullableCreateProductTierBillingPlanRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProductTierBillingPlanRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


