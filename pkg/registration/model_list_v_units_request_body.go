/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package registration

import (
	"encoding/json"
	"fmt"
)

// checks if the ListVUnitsRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListVUnitsRequestBody{}

// ListVUnitsRequestBody struct for ListVUnitsRequestBody
type ListVUnitsRequestBody struct {
	// The infra / cloud provider name
	CloudProvider string `json:"cloudProvider"`
	// Region code specific to the cloud-provider
	Region string `json:"region"`
	AdditionalProperties map[string]interface{}
}

type _ListVUnitsRequestBody ListVUnitsRequestBody

// NewListVUnitsRequestBody instantiates a new ListVUnitsRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListVUnitsRequestBody(cloudProvider string, region string) *ListVUnitsRequestBody {
	this := ListVUnitsRequestBody{}
	this.CloudProvider = cloudProvider
	this.Region = region
	return &this
}

// NewListVUnitsRequestBodyWithDefaults instantiates a new ListVUnitsRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListVUnitsRequestBodyWithDefaults() *ListVUnitsRequestBody {
	this := ListVUnitsRequestBody{}
	return &this
}

// GetCloudProvider returns the CloudProvider field value
func (o *ListVUnitsRequestBody) GetCloudProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *ListVUnitsRequestBody) GetCloudProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *ListVUnitsRequestBody) SetCloudProvider(v string) {
	o.CloudProvider = v
}

// GetRegion returns the Region field value
func (o *ListVUnitsRequestBody) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *ListVUnitsRequestBody) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *ListVUnitsRequestBody) SetRegion(v string) {
	o.Region = v
}

func (o ListVUnitsRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListVUnitsRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cloudProvider"] = o.CloudProvider
	toSerialize["region"] = o.Region

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListVUnitsRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloudProvider",
		"region",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListVUnitsRequestBody := _ListVUnitsRequestBody{}

	err = json.Unmarshal(data, &varListVUnitsRequestBody)

	if err != nil {
		return err
	}

	*o = ListVUnitsRequestBody(varListVUnitsRequestBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cloudProvider")
		delete(additionalProperties, "region")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListVUnitsRequestBody struct {
	value *ListVUnitsRequestBody
	isSet bool
}

func (v NullableListVUnitsRequestBody) Get() *ListVUnitsRequestBody {
	return v.value
}

func (v *NullableListVUnitsRequestBody) Set(val *ListVUnitsRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableListVUnitsRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableListVUnitsRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListVUnitsRequestBody(val *ListVUnitsRequestBody) *NullableListVUnitsRequestBody {
	return &NullableListVUnitsRequestBody{value: val, isSet: true}
}

func (v NullableListVUnitsRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListVUnitsRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


