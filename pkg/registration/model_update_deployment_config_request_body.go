/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package registration

import (
	"encoding/json"
)

// checks if the UpdateDeploymentConfigRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateDeploymentConfigRequestBody{}

// UpdateDeploymentConfigRequestBody struct for UpdateDeploymentConfigRequestBody
type UpdateDeploymentConfigRequestBody struct {
	// A brief description of the deployment config
	Description *string `json:"description,omitempty"`
	InfraRollConfiguration *InfraRollConfiguration `json:"infraRollConfiguration,omitempty"`
	// Name of the deployment config
	Name *string `json:"name,omitempty"`
	RolloutPriorityList []string `json:"rolloutPriorityList,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateDeploymentConfigRequestBody UpdateDeploymentConfigRequestBody

// NewUpdateDeploymentConfigRequestBody instantiates a new UpdateDeploymentConfigRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDeploymentConfigRequestBody() *UpdateDeploymentConfigRequestBody {
	this := UpdateDeploymentConfigRequestBody{}
	return &this
}

// NewUpdateDeploymentConfigRequestBodyWithDefaults instantiates a new UpdateDeploymentConfigRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDeploymentConfigRequestBodyWithDefaults() *UpdateDeploymentConfigRequestBody {
	this := UpdateDeploymentConfigRequestBody{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateDeploymentConfigRequestBody) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDeploymentConfigRequestBody) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateDeploymentConfigRequestBody) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateDeploymentConfigRequestBody) SetDescription(v string) {
	o.Description = &v
}

// GetInfraRollConfiguration returns the InfraRollConfiguration field value if set, zero value otherwise.
func (o *UpdateDeploymentConfigRequestBody) GetInfraRollConfiguration() InfraRollConfiguration {
	if o == nil || IsNil(o.InfraRollConfiguration) {
		var ret InfraRollConfiguration
		return ret
	}
	return *o.InfraRollConfiguration
}

// GetInfraRollConfigurationOk returns a tuple with the InfraRollConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDeploymentConfigRequestBody) GetInfraRollConfigurationOk() (*InfraRollConfiguration, bool) {
	if o == nil || IsNil(o.InfraRollConfiguration) {
		return nil, false
	}
	return o.InfraRollConfiguration, true
}

// HasInfraRollConfiguration returns a boolean if a field has been set.
func (o *UpdateDeploymentConfigRequestBody) HasInfraRollConfiguration() bool {
	if o != nil && !IsNil(o.InfraRollConfiguration) {
		return true
	}

	return false
}

// SetInfraRollConfiguration gets a reference to the given InfraRollConfiguration and assigns it to the InfraRollConfiguration field.
func (o *UpdateDeploymentConfigRequestBody) SetInfraRollConfiguration(v InfraRollConfiguration) {
	o.InfraRollConfiguration = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateDeploymentConfigRequestBody) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDeploymentConfigRequestBody) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateDeploymentConfigRequestBody) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateDeploymentConfigRequestBody) SetName(v string) {
	o.Name = &v
}

// GetRolloutPriorityList returns the RolloutPriorityList field value if set, zero value otherwise.
func (o *UpdateDeploymentConfigRequestBody) GetRolloutPriorityList() []string {
	if o == nil || IsNil(o.RolloutPriorityList) {
		var ret []string
		return ret
	}
	return o.RolloutPriorityList
}

// GetRolloutPriorityListOk returns a tuple with the RolloutPriorityList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDeploymentConfigRequestBody) GetRolloutPriorityListOk() ([]string, bool) {
	if o == nil || IsNil(o.RolloutPriorityList) {
		return nil, false
	}
	return o.RolloutPriorityList, true
}

// HasRolloutPriorityList returns a boolean if a field has been set.
func (o *UpdateDeploymentConfigRequestBody) HasRolloutPriorityList() bool {
	if o != nil && !IsNil(o.RolloutPriorityList) {
		return true
	}

	return false
}

// SetRolloutPriorityList gets a reference to the given []string and assigns it to the RolloutPriorityList field.
func (o *UpdateDeploymentConfigRequestBody) SetRolloutPriorityList(v []string) {
	o.RolloutPriorityList = v
}

func (o UpdateDeploymentConfigRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateDeploymentConfigRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.InfraRollConfiguration) {
		toSerialize["infraRollConfiguration"] = o.InfraRollConfiguration
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RolloutPriorityList) {
		toSerialize["rolloutPriorityList"] = o.RolloutPriorityList
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateDeploymentConfigRequestBody) UnmarshalJSON(data []byte) (err error) {
	varUpdateDeploymentConfigRequestBody := _UpdateDeploymentConfigRequestBody{}

	err = json.Unmarshal(data, &varUpdateDeploymentConfigRequestBody)

	if err != nil {
		return err
	}

	*o = UpdateDeploymentConfigRequestBody(varUpdateDeploymentConfigRequestBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "infraRollConfiguration")
		delete(additionalProperties, "name")
		delete(additionalProperties, "rolloutPriorityList")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateDeploymentConfigRequestBody struct {
	value *UpdateDeploymentConfigRequestBody
	isSet bool
}

func (v NullableUpdateDeploymentConfigRequestBody) Get() *UpdateDeploymentConfigRequestBody {
	return v.value
}

func (v *NullableUpdateDeploymentConfigRequestBody) Set(val *UpdateDeploymentConfigRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDeploymentConfigRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDeploymentConfigRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDeploymentConfigRequestBody(val *UpdateDeploymentConfigRequestBody) *NullableUpdateDeploymentConfigRequestBody {
	return &NullableUpdateDeploymentConfigRequestBody{value: val, isSet: true}
}

func (v NullableUpdateDeploymentConfigRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDeploymentConfigRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


