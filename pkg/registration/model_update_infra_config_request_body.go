/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package registration

import (
	"encoding/json"
)

// checks if the UpdateInfraConfigRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInfraConfigRequestBody{}

// UpdateInfraConfigRequestBody struct for UpdateInfraConfigRequestBody
type UpdateInfraConfigRequestBody struct {
	// The compute config ID
	ComputeConfigId *string `json:"computeConfigId,omitempty"`
	CustomTag *EnvironmentVariable `json:"customTag,omitempty"`
	// The description for the infra config
	Description *string `json:"description,omitempty"`
	// The name of the infra config
	Name *string `json:"name,omitempty"`
	// The network config ID
	NetworkConfigId *string `json:"networkConfigId,omitempty"`
	// The storage config ID per compute node
	StorageConfigId *string `json:"storageConfigId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateInfraConfigRequestBody UpdateInfraConfigRequestBody

// NewUpdateInfraConfigRequestBody instantiates a new UpdateInfraConfigRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInfraConfigRequestBody() *UpdateInfraConfigRequestBody {
	this := UpdateInfraConfigRequestBody{}
	return &this
}

// NewUpdateInfraConfigRequestBodyWithDefaults instantiates a new UpdateInfraConfigRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInfraConfigRequestBodyWithDefaults() *UpdateInfraConfigRequestBody {
	this := UpdateInfraConfigRequestBody{}
	return &this
}

// GetComputeConfigId returns the ComputeConfigId field value if set, zero value otherwise.
func (o *UpdateInfraConfigRequestBody) GetComputeConfigId() string {
	if o == nil || IsNil(o.ComputeConfigId) {
		var ret string
		return ret
	}
	return *o.ComputeConfigId
}

// GetComputeConfigIdOk returns a tuple with the ComputeConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInfraConfigRequestBody) GetComputeConfigIdOk() (*string, bool) {
	if o == nil || IsNil(o.ComputeConfigId) {
		return nil, false
	}
	return o.ComputeConfigId, true
}

// HasComputeConfigId returns a boolean if a field has been set.
func (o *UpdateInfraConfigRequestBody) HasComputeConfigId() bool {
	if o != nil && !IsNil(o.ComputeConfigId) {
		return true
	}

	return false
}

// SetComputeConfigId gets a reference to the given string and assigns it to the ComputeConfigId field.
func (o *UpdateInfraConfigRequestBody) SetComputeConfigId(v string) {
	o.ComputeConfigId = &v
}

// GetCustomTag returns the CustomTag field value if set, zero value otherwise.
func (o *UpdateInfraConfigRequestBody) GetCustomTag() EnvironmentVariable {
	if o == nil || IsNil(o.CustomTag) {
		var ret EnvironmentVariable
		return ret
	}
	return *o.CustomTag
}

// GetCustomTagOk returns a tuple with the CustomTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInfraConfigRequestBody) GetCustomTagOk() (*EnvironmentVariable, bool) {
	if o == nil || IsNil(o.CustomTag) {
		return nil, false
	}
	return o.CustomTag, true
}

// HasCustomTag returns a boolean if a field has been set.
func (o *UpdateInfraConfigRequestBody) HasCustomTag() bool {
	if o != nil && !IsNil(o.CustomTag) {
		return true
	}

	return false
}

// SetCustomTag gets a reference to the given EnvironmentVariable and assigns it to the CustomTag field.
func (o *UpdateInfraConfigRequestBody) SetCustomTag(v EnvironmentVariable) {
	o.CustomTag = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateInfraConfigRequestBody) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInfraConfigRequestBody) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateInfraConfigRequestBody) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateInfraConfigRequestBody) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateInfraConfigRequestBody) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInfraConfigRequestBody) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateInfraConfigRequestBody) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateInfraConfigRequestBody) SetName(v string) {
	o.Name = &v
}

// GetNetworkConfigId returns the NetworkConfigId field value if set, zero value otherwise.
func (o *UpdateInfraConfigRequestBody) GetNetworkConfigId() string {
	if o == nil || IsNil(o.NetworkConfigId) {
		var ret string
		return ret
	}
	return *o.NetworkConfigId
}

// GetNetworkConfigIdOk returns a tuple with the NetworkConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInfraConfigRequestBody) GetNetworkConfigIdOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkConfigId) {
		return nil, false
	}
	return o.NetworkConfigId, true
}

// HasNetworkConfigId returns a boolean if a field has been set.
func (o *UpdateInfraConfigRequestBody) HasNetworkConfigId() bool {
	if o != nil && !IsNil(o.NetworkConfigId) {
		return true
	}

	return false
}

// SetNetworkConfigId gets a reference to the given string and assigns it to the NetworkConfigId field.
func (o *UpdateInfraConfigRequestBody) SetNetworkConfigId(v string) {
	o.NetworkConfigId = &v
}

// GetStorageConfigId returns the StorageConfigId field value if set, zero value otherwise.
func (o *UpdateInfraConfigRequestBody) GetStorageConfigId() string {
	if o == nil || IsNil(o.StorageConfigId) {
		var ret string
		return ret
	}
	return *o.StorageConfigId
}

// GetStorageConfigIdOk returns a tuple with the StorageConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInfraConfigRequestBody) GetStorageConfigIdOk() (*string, bool) {
	if o == nil || IsNil(o.StorageConfigId) {
		return nil, false
	}
	return o.StorageConfigId, true
}

// HasStorageConfigId returns a boolean if a field has been set.
func (o *UpdateInfraConfigRequestBody) HasStorageConfigId() bool {
	if o != nil && !IsNil(o.StorageConfigId) {
		return true
	}

	return false
}

// SetStorageConfigId gets a reference to the given string and assigns it to the StorageConfigId field.
func (o *UpdateInfraConfigRequestBody) SetStorageConfigId(v string) {
	o.StorageConfigId = &v
}

func (o UpdateInfraConfigRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateInfraConfigRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ComputeConfigId) {
		toSerialize["computeConfigId"] = o.ComputeConfigId
	}
	if !IsNil(o.CustomTag) {
		toSerialize["customTag"] = o.CustomTag
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NetworkConfigId) {
		toSerialize["networkConfigId"] = o.NetworkConfigId
	}
	if !IsNil(o.StorageConfigId) {
		toSerialize["storageConfigId"] = o.StorageConfigId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateInfraConfigRequestBody) UnmarshalJSON(data []byte) (err error) {
	varUpdateInfraConfigRequestBody := _UpdateInfraConfigRequestBody{}

	err = json.Unmarshal(data, &varUpdateInfraConfigRequestBody)

	if err != nil {
		return err
	}

	*o = UpdateInfraConfigRequestBody(varUpdateInfraConfigRequestBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "computeConfigId")
		delete(additionalProperties, "customTag")
		delete(additionalProperties, "description")
		delete(additionalProperties, "name")
		delete(additionalProperties, "networkConfigId")
		delete(additionalProperties, "storageConfigId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateInfraConfigRequestBody struct {
	value *UpdateInfraConfigRequestBody
	isSet bool
}

func (v NullableUpdateInfraConfigRequestBody) Get() *UpdateInfraConfigRequestBody {
	return v.value
}

func (v *NullableUpdateInfraConfigRequestBody) Set(val *UpdateInfraConfigRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInfraConfigRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInfraConfigRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInfraConfigRequestBody(val *UpdateInfraConfigRequestBody) *NullableUpdateInfraConfigRequestBody {
	return &NullableUpdateInfraConfigRequestBody{value: val, isSet: true}
}

func (v NullableUpdateInfraConfigRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInfraConfigRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


