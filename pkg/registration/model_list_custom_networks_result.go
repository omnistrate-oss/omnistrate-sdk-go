/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package registration

import (
	"encoding/json"
	"fmt"
)

// checks if the ListCustomNetworksResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListCustomNetworksResult{}

// ListCustomNetworksResult struct for ListCustomNetworksResult
type ListCustomNetworksResult struct {
	// List of custom networks
	CustomNetworks []CustomNetwork `json:"customNetworks"`
	AdditionalProperties map[string]interface{}
}

type _ListCustomNetworksResult ListCustomNetworksResult

// NewListCustomNetworksResult instantiates a new ListCustomNetworksResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListCustomNetworksResult(customNetworks []CustomNetwork) *ListCustomNetworksResult {
	this := ListCustomNetworksResult{}
	this.CustomNetworks = customNetworks
	return &this
}

// NewListCustomNetworksResultWithDefaults instantiates a new ListCustomNetworksResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListCustomNetworksResultWithDefaults() *ListCustomNetworksResult {
	this := ListCustomNetworksResult{}
	return &this
}

// GetCustomNetworks returns the CustomNetworks field value
func (o *ListCustomNetworksResult) GetCustomNetworks() []CustomNetwork {
	if o == nil {
		var ret []CustomNetwork
		return ret
	}

	return o.CustomNetworks
}

// GetCustomNetworksOk returns a tuple with the CustomNetworks field value
// and a boolean to check if the value has been set.
func (o *ListCustomNetworksResult) GetCustomNetworksOk() ([]CustomNetwork, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomNetworks, true
}

// SetCustomNetworks sets field value
func (o *ListCustomNetworksResult) SetCustomNetworks(v []CustomNetwork) {
	o.CustomNetworks = v
}

func (o ListCustomNetworksResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListCustomNetworksResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customNetworks"] = o.CustomNetworks

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListCustomNetworksResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customNetworks",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListCustomNetworksResult := _ListCustomNetworksResult{}

	err = json.Unmarshal(data, &varListCustomNetworksResult)

	if err != nil {
		return err
	}

	*o = ListCustomNetworksResult(varListCustomNetworksResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "customNetworks")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListCustomNetworksResult struct {
	value *ListCustomNetworksResult
	isSet bool
}

func (v NullableListCustomNetworksResult) Get() *ListCustomNetworksResult {
	return v.value
}

func (v *NullableListCustomNetworksResult) Set(val *ListCustomNetworksResult) {
	v.value = val
	v.isSet = true
}

func (v NullableListCustomNetworksResult) IsSet() bool {
	return v.isSet
}

func (v *NullableListCustomNetworksResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListCustomNetworksResult(val *ListCustomNetworksResult) *NullableListCustomNetworksResult {
	return &NullableListCustomNetworksResult{value: val, isSet: true}
}

func (v NullableListCustomNetworksResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListCustomNetworksResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


