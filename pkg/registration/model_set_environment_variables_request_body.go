/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package registration

import (
	"encoding/json"
)

// checks if the SetEnvironmentVariablesRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetEnvironmentVariablesRequestBody{}

// SetEnvironmentVariablesRequestBody struct for SetEnvironmentVariablesRequestBody
type SetEnvironmentVariablesRequestBody struct {
	// The environment variables that this resource requires
	EnvironmentVariables []EnvironmentVariable `json:"environmentVariables,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SetEnvironmentVariablesRequestBody SetEnvironmentVariablesRequestBody

// NewSetEnvironmentVariablesRequestBody instantiates a new SetEnvironmentVariablesRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetEnvironmentVariablesRequestBody() *SetEnvironmentVariablesRequestBody {
	this := SetEnvironmentVariablesRequestBody{}
	return &this
}

// NewSetEnvironmentVariablesRequestBodyWithDefaults instantiates a new SetEnvironmentVariablesRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetEnvironmentVariablesRequestBodyWithDefaults() *SetEnvironmentVariablesRequestBody {
	this := SetEnvironmentVariablesRequestBody{}
	return &this
}

// GetEnvironmentVariables returns the EnvironmentVariables field value if set, zero value otherwise.
func (o *SetEnvironmentVariablesRequestBody) GetEnvironmentVariables() []EnvironmentVariable {
	if o == nil || IsNil(o.EnvironmentVariables) {
		var ret []EnvironmentVariable
		return ret
	}
	return o.EnvironmentVariables
}

// GetEnvironmentVariablesOk returns a tuple with the EnvironmentVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetEnvironmentVariablesRequestBody) GetEnvironmentVariablesOk() ([]EnvironmentVariable, bool) {
	if o == nil || IsNil(o.EnvironmentVariables) {
		return nil, false
	}
	return o.EnvironmentVariables, true
}

// HasEnvironmentVariables returns a boolean if a field has been set.
func (o *SetEnvironmentVariablesRequestBody) HasEnvironmentVariables() bool {
	if o != nil && !IsNil(o.EnvironmentVariables) {
		return true
	}

	return false
}

// SetEnvironmentVariables gets a reference to the given []EnvironmentVariable and assigns it to the EnvironmentVariables field.
func (o *SetEnvironmentVariablesRequestBody) SetEnvironmentVariables(v []EnvironmentVariable) {
	o.EnvironmentVariables = v
}

func (o SetEnvironmentVariablesRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetEnvironmentVariablesRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnvironmentVariables) {
		toSerialize["environmentVariables"] = o.EnvironmentVariables
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SetEnvironmentVariablesRequestBody) UnmarshalJSON(data []byte) (err error) {
	varSetEnvironmentVariablesRequestBody := _SetEnvironmentVariablesRequestBody{}

	err = json.Unmarshal(data, &varSetEnvironmentVariablesRequestBody)

	if err != nil {
		return err
	}

	*o = SetEnvironmentVariablesRequestBody(varSetEnvironmentVariablesRequestBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "environmentVariables")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSetEnvironmentVariablesRequestBody struct {
	value *SetEnvironmentVariablesRequestBody
	isSet bool
}

func (v NullableSetEnvironmentVariablesRequestBody) Get() *SetEnvironmentVariablesRequestBody {
	return v.value
}

func (v *NullableSetEnvironmentVariablesRequestBody) Set(val *SetEnvironmentVariablesRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableSetEnvironmentVariablesRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableSetEnvironmentVariablesRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetEnvironmentVariablesRequestBody(val *SetEnvironmentVariablesRequestBody) *NullableSetEnvironmentVariablesRequestBody {
	return &NullableSetEnvironmentVariablesRequestBody{value: val, isSet: true}
}

func (v NullableSetEnvironmentVariablesRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetEnvironmentVariablesRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


