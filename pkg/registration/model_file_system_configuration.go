/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package registration

import (
	"encoding/json"
)

// checks if the FileSystemConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileSystemConfiguration{}

// FileSystemConfiguration struct for FileSystemConfiguration
type FileSystemConfiguration struct {
	EFSFileSystemConfiguration *EFSFileSystemConfiguration `json:"EFSFileSystemConfiguration,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FileSystemConfiguration FileSystemConfiguration

// NewFileSystemConfiguration instantiates a new FileSystemConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileSystemConfiguration() *FileSystemConfiguration {
	this := FileSystemConfiguration{}
	return &this
}

// NewFileSystemConfigurationWithDefaults instantiates a new FileSystemConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileSystemConfigurationWithDefaults() *FileSystemConfiguration {
	this := FileSystemConfiguration{}
	return &this
}

// GetEFSFileSystemConfiguration returns the EFSFileSystemConfiguration field value if set, zero value otherwise.
func (o *FileSystemConfiguration) GetEFSFileSystemConfiguration() EFSFileSystemConfiguration {
	if o == nil || IsNil(o.EFSFileSystemConfiguration) {
		var ret EFSFileSystemConfiguration
		return ret
	}
	return *o.EFSFileSystemConfiguration
}

// GetEFSFileSystemConfigurationOk returns a tuple with the EFSFileSystemConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileSystemConfiguration) GetEFSFileSystemConfigurationOk() (*EFSFileSystemConfiguration, bool) {
	if o == nil || IsNil(o.EFSFileSystemConfiguration) {
		return nil, false
	}
	return o.EFSFileSystemConfiguration, true
}

// HasEFSFileSystemConfiguration returns a boolean if a field has been set.
func (o *FileSystemConfiguration) HasEFSFileSystemConfiguration() bool {
	if o != nil && !IsNil(o.EFSFileSystemConfiguration) {
		return true
	}

	return false
}

// SetEFSFileSystemConfiguration gets a reference to the given EFSFileSystemConfiguration and assigns it to the EFSFileSystemConfiguration field.
func (o *FileSystemConfiguration) SetEFSFileSystemConfiguration(v EFSFileSystemConfiguration) {
	o.EFSFileSystemConfiguration = &v
}

func (o FileSystemConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileSystemConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EFSFileSystemConfiguration) {
		toSerialize["EFSFileSystemConfiguration"] = o.EFSFileSystemConfiguration
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FileSystemConfiguration) UnmarshalJSON(data []byte) (err error) {
	varFileSystemConfiguration := _FileSystemConfiguration{}

	err = json.Unmarshal(data, &varFileSystemConfiguration)

	if err != nil {
		return err
	}

	*o = FileSystemConfiguration(varFileSystemConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "EFSFileSystemConfiguration")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFileSystemConfiguration struct {
	value *FileSystemConfiguration
	isSet bool
}

func (v NullableFileSystemConfiguration) Get() *FileSystemConfiguration {
	return v.value
}

func (v *NullableFileSystemConfiguration) Set(val *FileSystemConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableFileSystemConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableFileSystemConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileSystemConfiguration(val *FileSystemConfiguration) *NullableFileSystemConfiguration {
	return &NullableFileSystemConfiguration{value: val, isSet: true}
}

func (v NullableFileSystemConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileSystemConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


