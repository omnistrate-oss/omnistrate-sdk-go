/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package registration

import (
	"encoding/json"
)

// checks if the ListResourceCapabilitiesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListResourceCapabilitiesResponse{}

// ListResourceCapabilitiesResponse struct for ListResourceCapabilitiesResponse
type ListResourceCapabilitiesResponse struct {
	// The configurationParameters to enable capabilities for the resource
	Capabilities []ResourceCapability `json:"capabilities,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListResourceCapabilitiesResponse ListResourceCapabilitiesResponse

// NewListResourceCapabilitiesResponse instantiates a new ListResourceCapabilitiesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListResourceCapabilitiesResponse() *ListResourceCapabilitiesResponse {
	this := ListResourceCapabilitiesResponse{}
	return &this
}

// NewListResourceCapabilitiesResponseWithDefaults instantiates a new ListResourceCapabilitiesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListResourceCapabilitiesResponseWithDefaults() *ListResourceCapabilitiesResponse {
	this := ListResourceCapabilitiesResponse{}
	return &this
}

// GetCapabilities returns the Capabilities field value if set, zero value otherwise.
func (o *ListResourceCapabilitiesResponse) GetCapabilities() []ResourceCapability {
	if o == nil || IsNil(o.Capabilities) {
		var ret []ResourceCapability
		return ret
	}
	return o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourceCapabilitiesResponse) GetCapabilitiesOk() ([]ResourceCapability, bool) {
	if o == nil || IsNil(o.Capabilities) {
		return nil, false
	}
	return o.Capabilities, true
}

// HasCapabilities returns a boolean if a field has been set.
func (o *ListResourceCapabilitiesResponse) HasCapabilities() bool {
	if o != nil && !IsNil(o.Capabilities) {
		return true
	}

	return false
}

// SetCapabilities gets a reference to the given []ResourceCapability and assigns it to the Capabilities field.
func (o *ListResourceCapabilitiesResponse) SetCapabilities(v []ResourceCapability) {
	o.Capabilities = v
}

func (o ListResourceCapabilitiesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListResourceCapabilitiesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Capabilities) {
		toSerialize["capabilities"] = o.Capabilities
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListResourceCapabilitiesResponse) UnmarshalJSON(data []byte) (err error) {
	varListResourceCapabilitiesResponse := _ListResourceCapabilitiesResponse{}

	err = json.Unmarshal(data, &varListResourceCapabilitiesResponse)

	if err != nil {
		return err
	}

	*o = ListResourceCapabilitiesResponse(varListResourceCapabilitiesResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "capabilities")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListResourceCapabilitiesResponse struct {
	value *ListResourceCapabilitiesResponse
	isSet bool
}

func (v NullableListResourceCapabilitiesResponse) Get() *ListResourceCapabilitiesResponse {
	return v.value
}

func (v *NullableListResourceCapabilitiesResponse) Set(val *ListResourceCapabilitiesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListResourceCapabilitiesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListResourceCapabilitiesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListResourceCapabilitiesResponse(val *ListResourceCapabilitiesResponse) *NullableListResourceCapabilitiesResponse {
	return &NullableListResourceCapabilitiesResponse{value: val, isSet: true}
}

func (v NullableListResourceCapabilitiesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListResourceCapabilitiesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


