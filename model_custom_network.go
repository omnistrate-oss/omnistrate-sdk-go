/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package omnistrategosdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CustomNetwork type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomNetwork{}

// CustomNetwork struct for CustomNetwork
type CustomNetwork struct {
	// CIDR block for the network
	Cidr *string `json:"cidr,omitempty"`
	// The name of the cloud provider that the instance is running on.
	CloudProviderName string `json:"cloudProviderName"`
	// The region of the cloud provider that the instance is running in.
	CloudProviderRegion string `json:"cloudProviderRegion"`
	// ID of a custom network
	Id string `json:"id"`
	// User friendly network name to help distinguish networks with same CIDRs
	Name *string `json:"name,omitempty"`
	NetworkFeaturesConfiguration *NetworkFeaturesConfiguration `json:"networkFeaturesConfiguration,omitempty"`
}

type _CustomNetwork CustomNetwork

// NewCustomNetwork instantiates a new CustomNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomNetwork(cloudProviderName string, cloudProviderRegion string, id string) *CustomNetwork {
	this := CustomNetwork{}
	var cidr string = "10.0.0.0/16"
	this.Cidr = &cidr
	this.CloudProviderName = cloudProviderName
	this.CloudProviderRegion = cloudProviderRegion
	this.Id = id
	return &this
}

// NewCustomNetworkWithDefaults instantiates a new CustomNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomNetworkWithDefaults() *CustomNetwork {
	this := CustomNetwork{}
	var cidr string = "10.0.0.0/16"
	this.Cidr = &cidr
	return &this
}

// GetCidr returns the Cidr field value if set, zero value otherwise.
func (o *CustomNetwork) GetCidr() string {
	if o == nil || IsNil(o.Cidr) {
		var ret string
		return ret
	}
	return *o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomNetwork) GetCidrOk() (*string, bool) {
	if o == nil || IsNil(o.Cidr) {
		return nil, false
	}
	return o.Cidr, true
}

// HasCidr returns a boolean if a field has been set.
func (o *CustomNetwork) HasCidr() bool {
	if o != nil && !IsNil(o.Cidr) {
		return true
	}

	return false
}

// SetCidr gets a reference to the given string and assigns it to the Cidr field.
func (o *CustomNetwork) SetCidr(v string) {
	o.Cidr = &v
}

// GetCloudProviderName returns the CloudProviderName field value
func (o *CustomNetwork) GetCloudProviderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProviderName
}

// GetCloudProviderNameOk returns a tuple with the CloudProviderName field value
// and a boolean to check if the value has been set.
func (o *CustomNetwork) GetCloudProviderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProviderName, true
}

// SetCloudProviderName sets field value
func (o *CustomNetwork) SetCloudProviderName(v string) {
	o.CloudProviderName = v
}

// GetCloudProviderRegion returns the CloudProviderRegion field value
func (o *CustomNetwork) GetCloudProviderRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProviderRegion
}

// GetCloudProviderRegionOk returns a tuple with the CloudProviderRegion field value
// and a boolean to check if the value has been set.
func (o *CustomNetwork) GetCloudProviderRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProviderRegion, true
}

// SetCloudProviderRegion sets field value
func (o *CustomNetwork) SetCloudProviderRegion(v string) {
	o.CloudProviderRegion = v
}

// GetId returns the Id field value
func (o *CustomNetwork) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CustomNetwork) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CustomNetwork) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CustomNetwork) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomNetwork) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CustomNetwork) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CustomNetwork) SetName(v string) {
	o.Name = &v
}

// GetNetworkFeaturesConfiguration returns the NetworkFeaturesConfiguration field value if set, zero value otherwise.
func (o *CustomNetwork) GetNetworkFeaturesConfiguration() NetworkFeaturesConfiguration {
	if o == nil || IsNil(o.NetworkFeaturesConfiguration) {
		var ret NetworkFeaturesConfiguration
		return ret
	}
	return *o.NetworkFeaturesConfiguration
}

// GetNetworkFeaturesConfigurationOk returns a tuple with the NetworkFeaturesConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomNetwork) GetNetworkFeaturesConfigurationOk() (*NetworkFeaturesConfiguration, bool) {
	if o == nil || IsNil(o.NetworkFeaturesConfiguration) {
		return nil, false
	}
	return o.NetworkFeaturesConfiguration, true
}

// HasNetworkFeaturesConfiguration returns a boolean if a field has been set.
func (o *CustomNetwork) HasNetworkFeaturesConfiguration() bool {
	if o != nil && !IsNil(o.NetworkFeaturesConfiguration) {
		return true
	}

	return false
}

// SetNetworkFeaturesConfiguration gets a reference to the given NetworkFeaturesConfiguration and assigns it to the NetworkFeaturesConfiguration field.
func (o *CustomNetwork) SetNetworkFeaturesConfiguration(v NetworkFeaturesConfiguration) {
	o.NetworkFeaturesConfiguration = &v
}

func (o CustomNetwork) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomNetwork) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cidr) {
		toSerialize["cidr"] = o.Cidr
	}
	toSerialize["cloudProviderName"] = o.CloudProviderName
	toSerialize["cloudProviderRegion"] = o.CloudProviderRegion
	toSerialize["id"] = o.Id
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NetworkFeaturesConfiguration) {
		toSerialize["networkFeaturesConfiguration"] = o.NetworkFeaturesConfiguration
	}
	return toSerialize, nil
}

func (o *CustomNetwork) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloudProviderName",
		"cloudProviderRegion",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomNetwork := _CustomNetwork{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomNetwork)

	if err != nil {
		return err
	}

	*o = CustomNetwork(varCustomNetwork)

	return err
}

type NullableCustomNetwork struct {
	value *CustomNetwork
	isSet bool
}

func (v NullableCustomNetwork) Get() *CustomNetwork {
	return v.value
}

func (v *NullableCustomNetwork) Set(val *CustomNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomNetwork(val *CustomNetwork) *NullableCustomNetwork {
	return &NullableCustomNetwork{value: val, isSet: true}
}

func (v NullableCustomNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


