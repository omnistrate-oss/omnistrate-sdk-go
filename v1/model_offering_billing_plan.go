/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the OfferingBillingPlan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OfferingBillingPlan{}

// OfferingBillingPlan struct for OfferingBillingPlan
type OfferingBillingPlan struct {
	// Maximum number of instances
	MaxNumberofInstances *int64 `json:"maxNumberofInstances,omitempty"`
}

// NewOfferingBillingPlan instantiates a new OfferingBillingPlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOfferingBillingPlan() *OfferingBillingPlan {
	this := OfferingBillingPlan{}
	return &this
}

// NewOfferingBillingPlanWithDefaults instantiates a new OfferingBillingPlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOfferingBillingPlanWithDefaults() *OfferingBillingPlan {
	this := OfferingBillingPlan{}
	return &this
}

// GetMaxNumberofInstances returns the MaxNumberofInstances field value if set, zero value otherwise.
func (o *OfferingBillingPlan) GetMaxNumberofInstances() int64 {
	if o == nil || IsNil(o.MaxNumberofInstances) {
		var ret int64
		return ret
	}
	return *o.MaxNumberofInstances
}

// GetMaxNumberofInstancesOk returns a tuple with the MaxNumberofInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferingBillingPlan) GetMaxNumberofInstancesOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxNumberofInstances) {
		return nil, false
	}
	return o.MaxNumberofInstances, true
}

// SetMaxNumberofInstances gets a reference to the given int64 and assigns it to the MaxNumberofInstances field.
func (o *OfferingBillingPlan) SetMaxNumberofInstances(v int64) {
	o.MaxNumberofInstances = &v
}

func (o OfferingBillingPlan) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OfferingBillingPlan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxNumberofInstances) {
		toSerialize["maxNumberofInstances"] = o.MaxNumberofInstances
	}
	return toSerialize, nil
}

type NullableOfferingBillingPlan struct {
	value *OfferingBillingPlan
	isSet bool
}

func (v NullableOfferingBillingPlan) Get() *OfferingBillingPlan {
	return v.value
}

func (v *NullableOfferingBillingPlan) Set(val *OfferingBillingPlan) {
	v.value = val
	v.isSet = true
}

func (v NullableOfferingBillingPlan) IsSet() bool {
	return v.isSet
}

func (v *NullableOfferingBillingPlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOfferingBillingPlan(val *OfferingBillingPlan) *NullableOfferingBillingPlan {
	return &NullableOfferingBillingPlan{value: val, isSet: true}
}

func (v NullableOfferingBillingPlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOfferingBillingPlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


