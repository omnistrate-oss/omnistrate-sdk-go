/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the AddComputeInstanceTypeRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddComputeInstanceTypeRequest2{}

// AddComputeInstanceTypeRequest2 struct for AddComputeInstanceTypeRequest2
type AddComputeInstanceTypeRequest2 struct {
	// The cloud provider for this compute instance type config
	CloudProviderName string `json:"cloudProviderName"`
	ConfigOverride *ComputeInstanceTypeConfigOverride `json:"configOverride,omitempty"`
	// The instance type for this compute instance type config
	InstanceType string `json:"instanceType"`
	AdditionalProperties map[string]interface{}
}

type _AddComputeInstanceTypeRequest2 AddComputeInstanceTypeRequest2

// NewAddComputeInstanceTypeRequest2 instantiates a new AddComputeInstanceTypeRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddComputeInstanceTypeRequest2(cloudProviderName string, instanceType string) *AddComputeInstanceTypeRequest2 {
	this := AddComputeInstanceTypeRequest2{}
	this.CloudProviderName = cloudProviderName
	this.InstanceType = instanceType
	return &this
}

// NewAddComputeInstanceTypeRequest2WithDefaults instantiates a new AddComputeInstanceTypeRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddComputeInstanceTypeRequest2WithDefaults() *AddComputeInstanceTypeRequest2 {
	this := AddComputeInstanceTypeRequest2{}
	return &this
}

// GetCloudProviderName returns the CloudProviderName field value
func (o *AddComputeInstanceTypeRequest2) GetCloudProviderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProviderName
}

// GetCloudProviderNameOk returns a tuple with the CloudProviderName field value
// and a boolean to check if the value has been set.
func (o *AddComputeInstanceTypeRequest2) GetCloudProviderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProviderName, true
}

// SetCloudProviderName sets field value
func (o *AddComputeInstanceTypeRequest2) SetCloudProviderName(v string) {
	o.CloudProviderName = v
}

// GetConfigOverride returns the ConfigOverride field value if set, zero value otherwise.
func (o *AddComputeInstanceTypeRequest2) GetConfigOverride() ComputeInstanceTypeConfigOverride {
	if o == nil || IsNil(o.ConfigOverride) {
		var ret ComputeInstanceTypeConfigOverride
		return ret
	}
	return *o.ConfigOverride
}

// GetConfigOverrideOk returns a tuple with the ConfigOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddComputeInstanceTypeRequest2) GetConfigOverrideOk() (*ComputeInstanceTypeConfigOverride, bool) {
	if o == nil || IsNil(o.ConfigOverride) {
		return nil, false
	}
	return o.ConfigOverride, true
}

// SetConfigOverride gets a reference to the given ComputeInstanceTypeConfigOverride and assigns it to the ConfigOverride field.
func (o *AddComputeInstanceTypeRequest2) SetConfigOverride(v ComputeInstanceTypeConfigOverride) {
	o.ConfigOverride = &v
}

// GetInstanceType returns the InstanceType field value
func (o *AddComputeInstanceTypeRequest2) GetInstanceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value
// and a boolean to check if the value has been set.
func (o *AddComputeInstanceTypeRequest2) GetInstanceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceType, true
}

// SetInstanceType sets field value
func (o *AddComputeInstanceTypeRequest2) SetInstanceType(v string) {
	o.InstanceType = v
}

func (o AddComputeInstanceTypeRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddComputeInstanceTypeRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cloudProviderName"] = o.CloudProviderName
	if !IsNil(o.ConfigOverride) {
		toSerialize["configOverride"] = o.ConfigOverride
	}
	toSerialize["instanceType"] = o.InstanceType

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AddComputeInstanceTypeRequest2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloudProviderName",
		"instanceType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddComputeInstanceTypeRequest2 := _AddComputeInstanceTypeRequest2{}

	err = json.Unmarshal(data, &varAddComputeInstanceTypeRequest2)

	if err != nil {
		return err
	}

	*o = AddComputeInstanceTypeRequest2(varAddComputeInstanceTypeRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cloudProviderName")
		delete(additionalProperties, "configOverride")
		delete(additionalProperties, "instanceType")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAddComputeInstanceTypeRequest2 struct {
	value *AddComputeInstanceTypeRequest2
	isSet bool
}

func (v NullableAddComputeInstanceTypeRequest2) Get() *AddComputeInstanceTypeRequest2 {
	return v.value
}

func (v *NullableAddComputeInstanceTypeRequest2) Set(val *AddComputeInstanceTypeRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableAddComputeInstanceTypeRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableAddComputeInstanceTypeRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddComputeInstanceTypeRequest2(val *AddComputeInstanceTypeRequest2) *NullableAddComputeInstanceTypeRequest2 {
	return &NullableAddComputeInstanceTypeRequest2{value: val, isSet: true}
}

func (v NullableAddComputeInstanceTypeRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddComputeInstanceTypeRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

