/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateStorageVolumeConfigRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateStorageVolumeConfigRequest2{}

// CreateStorageVolumeConfigRequest2 struct for CreateStorageVolumeConfigRequest2
type CreateStorageVolumeConfigRequest2 struct {
	// The type of the fixed storage for the cluster
	ClusterStorageType *string `json:"clusterStorageType,omitempty"`
	// A brief description of the context for the storage volume pool
	Description string `json:"description"`
	// Disable backup for the storage volume
	DisableBackup *bool `json:"disableBackup,omitempty"`
	// The IOPS provisioned for the configured instance storage type
	InstanceStorageIops *string `json:"instanceStorageIops,omitempty"`
	// The storage size (in Gi) provisioned for the configured instance storage type
	InstanceStorageSizeGi *string `json:"instanceStorageSizeGi,omitempty"`
	// The throughput (in MiBps) provisioned for the configured instance storage type
	InstanceStorageThroughputMiBps *string `json:"instanceStorageThroughputMiBps,omitempty"`
	// The type of the storage for a compute instance
	InstanceStorageType *string `json:"instanceStorageType,omitempty"`
	// Name of the storage volume pool
	Name string `json:"name"`
	// The storage resource ID
	StorageResourceID *string `json:"storageResourceID,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateStorageVolumeConfigRequest2 CreateStorageVolumeConfigRequest2

// NewCreateStorageVolumeConfigRequest2 instantiates a new CreateStorageVolumeConfigRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateStorageVolumeConfigRequest2(description string, name string) *CreateStorageVolumeConfigRequest2 {
	this := CreateStorageVolumeConfigRequest2{}
	this.Description = description
	this.Name = name
	return &this
}

// NewCreateStorageVolumeConfigRequest2WithDefaults instantiates a new CreateStorageVolumeConfigRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateStorageVolumeConfigRequest2WithDefaults() *CreateStorageVolumeConfigRequest2 {
	this := CreateStorageVolumeConfigRequest2{}
	return &this
}

// GetClusterStorageType returns the ClusterStorageType field value if set, zero value otherwise.
func (o *CreateStorageVolumeConfigRequest2) GetClusterStorageType() string {
	if o == nil || IsNil(o.ClusterStorageType) {
		var ret string
		return ret
	}
	return *o.ClusterStorageType
}

// GetClusterStorageTypeOk returns a tuple with the ClusterStorageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest2) GetClusterStorageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterStorageType) {
		return nil, false
	}
	return o.ClusterStorageType, true
}

// SetClusterStorageType gets a reference to the given string and assigns it to the ClusterStorageType field.
func (o *CreateStorageVolumeConfigRequest2) SetClusterStorageType(v string) {
	o.ClusterStorageType = &v
}

// GetDescription returns the Description field value
func (o *CreateStorageVolumeConfigRequest2) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest2) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateStorageVolumeConfigRequest2) SetDescription(v string) {
	o.Description = v
}

// GetDisableBackup returns the DisableBackup field value if set, zero value otherwise.
func (o *CreateStorageVolumeConfigRequest2) GetDisableBackup() bool {
	if o == nil || IsNil(o.DisableBackup) {
		var ret bool
		return ret
	}
	return *o.DisableBackup
}

// GetDisableBackupOk returns a tuple with the DisableBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest2) GetDisableBackupOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableBackup) {
		return nil, false
	}
	return o.DisableBackup, true
}

// SetDisableBackup gets a reference to the given bool and assigns it to the DisableBackup field.
func (o *CreateStorageVolumeConfigRequest2) SetDisableBackup(v bool) {
	o.DisableBackup = &v
}

// GetInstanceStorageIops returns the InstanceStorageIops field value if set, zero value otherwise.
func (o *CreateStorageVolumeConfigRequest2) GetInstanceStorageIops() string {
	if o == nil || IsNil(o.InstanceStorageIops) {
		var ret string
		return ret
	}
	return *o.InstanceStorageIops
}

// GetInstanceStorageIopsOk returns a tuple with the InstanceStorageIops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest2) GetInstanceStorageIopsOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceStorageIops) {
		return nil, false
	}
	return o.InstanceStorageIops, true
}

// SetInstanceStorageIops gets a reference to the given string and assigns it to the InstanceStorageIops field.
func (o *CreateStorageVolumeConfigRequest2) SetInstanceStorageIops(v string) {
	o.InstanceStorageIops = &v
}

// GetInstanceStorageSizeGi returns the InstanceStorageSizeGi field value if set, zero value otherwise.
func (o *CreateStorageVolumeConfigRequest2) GetInstanceStorageSizeGi() string {
	if o == nil || IsNil(o.InstanceStorageSizeGi) {
		var ret string
		return ret
	}
	return *o.InstanceStorageSizeGi
}

// GetInstanceStorageSizeGiOk returns a tuple with the InstanceStorageSizeGi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest2) GetInstanceStorageSizeGiOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceStorageSizeGi) {
		return nil, false
	}
	return o.InstanceStorageSizeGi, true
}

// SetInstanceStorageSizeGi gets a reference to the given string and assigns it to the InstanceStorageSizeGi field.
func (o *CreateStorageVolumeConfigRequest2) SetInstanceStorageSizeGi(v string) {
	o.InstanceStorageSizeGi = &v
}

// GetInstanceStorageThroughputMiBps returns the InstanceStorageThroughputMiBps field value if set, zero value otherwise.
func (o *CreateStorageVolumeConfigRequest2) GetInstanceStorageThroughputMiBps() string {
	if o == nil || IsNil(o.InstanceStorageThroughputMiBps) {
		var ret string
		return ret
	}
	return *o.InstanceStorageThroughputMiBps
}

// GetInstanceStorageThroughputMiBpsOk returns a tuple with the InstanceStorageThroughputMiBps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest2) GetInstanceStorageThroughputMiBpsOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceStorageThroughputMiBps) {
		return nil, false
	}
	return o.InstanceStorageThroughputMiBps, true
}

// SetInstanceStorageThroughputMiBps gets a reference to the given string and assigns it to the InstanceStorageThroughputMiBps field.
func (o *CreateStorageVolumeConfigRequest2) SetInstanceStorageThroughputMiBps(v string) {
	o.InstanceStorageThroughputMiBps = &v
}

// GetInstanceStorageType returns the InstanceStorageType field value if set, zero value otherwise.
func (o *CreateStorageVolumeConfigRequest2) GetInstanceStorageType() string {
	if o == nil || IsNil(o.InstanceStorageType) {
		var ret string
		return ret
	}
	return *o.InstanceStorageType
}

// GetInstanceStorageTypeOk returns a tuple with the InstanceStorageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest2) GetInstanceStorageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceStorageType) {
		return nil, false
	}
	return o.InstanceStorageType, true
}

// SetInstanceStorageType gets a reference to the given string and assigns it to the InstanceStorageType field.
func (o *CreateStorageVolumeConfigRequest2) SetInstanceStorageType(v string) {
	o.InstanceStorageType = &v
}

// GetName returns the Name field value
func (o *CreateStorageVolumeConfigRequest2) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest2) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateStorageVolumeConfigRequest2) SetName(v string) {
	o.Name = v
}

// GetStorageResourceID returns the StorageResourceID field value if set, zero value otherwise.
func (o *CreateStorageVolumeConfigRequest2) GetStorageResourceID() string {
	if o == nil || IsNil(o.StorageResourceID) {
		var ret string
		return ret
	}
	return *o.StorageResourceID
}

// GetStorageResourceIDOk returns a tuple with the StorageResourceID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest2) GetStorageResourceIDOk() (*string, bool) {
	if o == nil || IsNil(o.StorageResourceID) {
		return nil, false
	}
	return o.StorageResourceID, true
}

// SetStorageResourceID gets a reference to the given string and assigns it to the StorageResourceID field.
func (o *CreateStorageVolumeConfigRequest2) SetStorageResourceID(v string) {
	o.StorageResourceID = &v
}

func (o CreateStorageVolumeConfigRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateStorageVolumeConfigRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClusterStorageType) {
		toSerialize["clusterStorageType"] = o.ClusterStorageType
	}
	toSerialize["description"] = o.Description
	if !IsNil(o.DisableBackup) {
		toSerialize["disableBackup"] = o.DisableBackup
	}
	if !IsNil(o.InstanceStorageIops) {
		toSerialize["instanceStorageIops"] = o.InstanceStorageIops
	}
	if !IsNil(o.InstanceStorageSizeGi) {
		toSerialize["instanceStorageSizeGi"] = o.InstanceStorageSizeGi
	}
	if !IsNil(o.InstanceStorageThroughputMiBps) {
		toSerialize["instanceStorageThroughputMiBps"] = o.InstanceStorageThroughputMiBps
	}
	if !IsNil(o.InstanceStorageType) {
		toSerialize["instanceStorageType"] = o.InstanceStorageType
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.StorageResourceID) {
		toSerialize["storageResourceID"] = o.StorageResourceID
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateStorageVolumeConfigRequest2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateStorageVolumeConfigRequest2 := _CreateStorageVolumeConfigRequest2{}

	err = json.Unmarshal(data, &varCreateStorageVolumeConfigRequest2)

	if err != nil {
		return err
	}

	*o = CreateStorageVolumeConfigRequest2(varCreateStorageVolumeConfigRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "clusterStorageType")
		delete(additionalProperties, "description")
		delete(additionalProperties, "disableBackup")
		delete(additionalProperties, "instanceStorageIops")
		delete(additionalProperties, "instanceStorageSizeGi")
		delete(additionalProperties, "instanceStorageThroughputMiBps")
		delete(additionalProperties, "instanceStorageType")
		delete(additionalProperties, "name")
		delete(additionalProperties, "storageResourceID")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateStorageVolumeConfigRequest2 struct {
	value *CreateStorageVolumeConfigRequest2
	isSet bool
}

func (v NullableCreateStorageVolumeConfigRequest2) Get() *CreateStorageVolumeConfigRequest2 {
	return v.value
}

func (v *NullableCreateStorageVolumeConfigRequest2) Set(val *CreateStorageVolumeConfigRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateStorageVolumeConfigRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateStorageVolumeConfigRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateStorageVolumeConfigRequest2(val *CreateStorageVolumeConfigRequest2) *NullableCreateStorageVolumeConfigRequest2 {
	return &NullableCreateStorageVolumeConfigRequest2{value: val, isSet: true}
}

func (v NullableCreateStorageVolumeConfigRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateStorageVolumeConfigRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


