/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the RestoreResourceInstanceFromSnapshotRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreResourceInstanceFromSnapshotRequest2{}

// RestoreResourceInstanceFromSnapshotRequest2 struct for RestoreResourceInstanceFromSnapshotRequest2
type RestoreResourceInstanceFromSnapshotRequest2 struct {
	// The network type
	NetworkType *string `json:"network_type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RestoreResourceInstanceFromSnapshotRequest2 RestoreResourceInstanceFromSnapshotRequest2

// NewRestoreResourceInstanceFromSnapshotRequest2 instantiates a new RestoreResourceInstanceFromSnapshotRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreResourceInstanceFromSnapshotRequest2() *RestoreResourceInstanceFromSnapshotRequest2 {
	this := RestoreResourceInstanceFromSnapshotRequest2{}
	return &this
}

// NewRestoreResourceInstanceFromSnapshotRequest2WithDefaults instantiates a new RestoreResourceInstanceFromSnapshotRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreResourceInstanceFromSnapshotRequest2WithDefaults() *RestoreResourceInstanceFromSnapshotRequest2 {
	this := RestoreResourceInstanceFromSnapshotRequest2{}
	return &this
}

// GetNetworkType returns the NetworkType field value if set, zero value otherwise.
func (o *RestoreResourceInstanceFromSnapshotRequest2) GetNetworkType() string {
	if o == nil || IsNil(o.NetworkType) {
		var ret string
		return ret
	}
	return *o.NetworkType
}

// GetNetworkTypeOk returns a tuple with the NetworkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreResourceInstanceFromSnapshotRequest2) GetNetworkTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkType) {
		return nil, false
	}
	return o.NetworkType, true
}

// SetNetworkType gets a reference to the given string and assigns it to the NetworkType field.
func (o *RestoreResourceInstanceFromSnapshotRequest2) SetNetworkType(v string) {
	o.NetworkType = &v
}

func (o RestoreResourceInstanceFromSnapshotRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestoreResourceInstanceFromSnapshotRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkType) {
		toSerialize["network_type"] = o.NetworkType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RestoreResourceInstanceFromSnapshotRequest2) UnmarshalJSON(data []byte) (err error) {
	varRestoreResourceInstanceFromSnapshotRequest2 := _RestoreResourceInstanceFromSnapshotRequest2{}

	err = json.Unmarshal(data, &varRestoreResourceInstanceFromSnapshotRequest2)

	if err != nil {
		return err
	}

	*o = RestoreResourceInstanceFromSnapshotRequest2(varRestoreResourceInstanceFromSnapshotRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "network_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRestoreResourceInstanceFromSnapshotRequest2 struct {
	value *RestoreResourceInstanceFromSnapshotRequest2
	isSet bool
}

func (v NullableRestoreResourceInstanceFromSnapshotRequest2) Get() *RestoreResourceInstanceFromSnapshotRequest2 {
	return v.value
}

func (v *NullableRestoreResourceInstanceFromSnapshotRequest2) Set(val *RestoreResourceInstanceFromSnapshotRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreResourceInstanceFromSnapshotRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreResourceInstanceFromSnapshotRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreResourceInstanceFromSnapshotRequest2(val *RestoreResourceInstanceFromSnapshotRequest2) *NullableRestoreResourceInstanceFromSnapshotRequest2 {
	return &NullableRestoreResourceInstanceFromSnapshotRequest2{value: val, isSet: true}
}

func (v NullableRestoreResourceInstanceFromSnapshotRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreResourceInstanceFromSnapshotRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

