/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the ContainerImageConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainerImageConfiguration{}

// ContainerImageConfiguration struct for ContainerImageConfiguration
type ContainerImageConfiguration struct {
	Source *ContainerImageLocator `json:"source,omitempty"`
	Target *ContainerImageLocator `json:"target,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ContainerImageConfiguration ContainerImageConfiguration

// NewContainerImageConfiguration instantiates a new ContainerImageConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerImageConfiguration() *ContainerImageConfiguration {
	this := ContainerImageConfiguration{}
	return &this
}

// NewContainerImageConfigurationWithDefaults instantiates a new ContainerImageConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerImageConfigurationWithDefaults() *ContainerImageConfiguration {
	this := ContainerImageConfiguration{}
	return &this
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ContainerImageConfiguration) GetSource() ContainerImageLocator {
	if o == nil || IsNil(o.Source) {
		var ret ContainerImageLocator
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerImageConfiguration) GetSourceOk() (*ContainerImageLocator, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// SetSource gets a reference to the given ContainerImageLocator and assigns it to the Source field.
func (o *ContainerImageConfiguration) SetSource(v ContainerImageLocator) {
	o.Source = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *ContainerImageConfiguration) GetTarget() ContainerImageLocator {
	if o == nil || IsNil(o.Target) {
		var ret ContainerImageLocator
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerImageConfiguration) GetTargetOk() (*ContainerImageLocator, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// SetTarget gets a reference to the given ContainerImageLocator and assigns it to the Target field.
func (o *ContainerImageConfiguration) SetTarget(v ContainerImageLocator) {
	o.Target = &v
}

func (o ContainerImageConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainerImageConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ContainerImageConfiguration) UnmarshalJSON(data []byte) (err error) {
	varContainerImageConfiguration := _ContainerImageConfiguration{}

	err = json.Unmarshal(data, &varContainerImageConfiguration)

	if err != nil {
		return err
	}

	*o = ContainerImageConfiguration(varContainerImageConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "source")
		delete(additionalProperties, "target")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableContainerImageConfiguration struct {
	value *ContainerImageConfiguration
	isSet bool
}

func (v NullableContainerImageConfiguration) Get() *ContainerImageConfiguration {
	return v.value
}

func (v *NullableContainerImageConfiguration) Set(val *ContainerImageConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerImageConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerImageConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerImageConfiguration(val *ContainerImageConfiguration) *NullableContainerImageConfiguration {
	return &NullableContainerImageConfiguration{value: val, isSet: true}
}

func (v NullableContainerImageConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerImageConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


