/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the ListActionHooksResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListActionHooksResult{}

// ListActionHooksResult struct for ListActionHooksResult
type ListActionHooksResult struct {
	// The list of action hooks
	Hooks []RegisterActionHookRequestBody `json:"hooks"`
	AdditionalProperties map[string]interface{}
}

type _ListActionHooksResult ListActionHooksResult

// NewListActionHooksResult instantiates a new ListActionHooksResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListActionHooksResult(hooks []RegisterActionHookRequestBody) *ListActionHooksResult {
	this := ListActionHooksResult{}
	this.Hooks = hooks
	return &this
}

// NewListActionHooksResultWithDefaults instantiates a new ListActionHooksResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListActionHooksResultWithDefaults() *ListActionHooksResult {
	this := ListActionHooksResult{}
	return &this
}

// GetHooks returns the Hooks field value
func (o *ListActionHooksResult) GetHooks() []RegisterActionHookRequestBody {
	if o == nil {
		var ret []RegisterActionHookRequestBody
		return ret
	}

	return o.Hooks
}

// GetHooksOk returns a tuple with the Hooks field value
// and a boolean to check if the value has been set.
func (o *ListActionHooksResult) GetHooksOk() ([]RegisterActionHookRequestBody, bool) {
	if o == nil {
		return nil, false
	}
	return o.Hooks, true
}

// SetHooks sets field value
func (o *ListActionHooksResult) SetHooks(v []RegisterActionHookRequestBody) {
	o.Hooks = v
}

func (o ListActionHooksResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListActionHooksResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hooks"] = o.Hooks

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListActionHooksResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hooks",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListActionHooksResult := _ListActionHooksResult{}

	err = json.Unmarshal(data, &varListActionHooksResult)

	if err != nil {
		return err
	}

	*o = ListActionHooksResult(varListActionHooksResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "hooks")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListActionHooksResult struct {
	value *ListActionHooksResult
	isSet bool
}

func (v NullableListActionHooksResult) Get() *ListActionHooksResult {
	return v.value
}

func (v *NullableListActionHooksResult) Set(val *ListActionHooksResult) {
	v.value = val
	v.isSet = true
}

func (v NullableListActionHooksResult) IsSet() bool {
	return v.isSet
}

func (v *NullableListActionHooksResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListActionHooksResult(val *ListActionHooksResult) *NullableListActionHooksResult {
	return &NullableListActionHooksResult{value: val, isSet: true}
}

func (v NullableListActionHooksResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListActionHooksResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


