/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the DescribeServicesOrchestrationResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribeServicesOrchestrationResult{}

// DescribeServicesOrchestrationResult struct for DescribeServicesOrchestrationResult
type DescribeServicesOrchestrationResult struct {
	// The services deployment details
	ServicesTopology []ServiceDeploymentDetails `json:"ServicesTopology,omitempty"`
	// The time the services orchestration was created
	CreatedAt string `json:"createdAt"`
	// ID of a Services Orchestration
	Id string `json:"id"`
	// The reason why the orchestration failed
	OrchestrationFailedReason *string `json:"orchestrationFailedReason,omitempty"`
	// Custom result parameters of the services orchestration
	ResultParams interface{} `json:"resultParams,omitempty"`
	// The status of the services orchestration
	Status string `json:"status"`
	// The time the services orchestration was last updated
	UpdatedAt string `json:"updatedAt"`
	AdditionalProperties map[string]interface{}
}

type _DescribeServicesOrchestrationResult DescribeServicesOrchestrationResult

// NewDescribeServicesOrchestrationResult instantiates a new DescribeServicesOrchestrationResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeServicesOrchestrationResult(createdAt string, id string, status string, updatedAt string) *DescribeServicesOrchestrationResult {
	this := DescribeServicesOrchestrationResult{}
	this.CreatedAt = createdAt
	this.Id = id
	this.Status = status
	this.UpdatedAt = updatedAt
	return &this
}

// NewDescribeServicesOrchestrationResultWithDefaults instantiates a new DescribeServicesOrchestrationResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeServicesOrchestrationResultWithDefaults() *DescribeServicesOrchestrationResult {
	this := DescribeServicesOrchestrationResult{}
	return &this
}

// GetServicesTopology returns the ServicesTopology field value if set, zero value otherwise.
func (o *DescribeServicesOrchestrationResult) GetServicesTopology() []ServiceDeploymentDetails {
	if o == nil || IsNil(o.ServicesTopology) {
		var ret []ServiceDeploymentDetails
		return ret
	}
	return o.ServicesTopology
}

// GetServicesTopologyOk returns a tuple with the ServicesTopology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeServicesOrchestrationResult) GetServicesTopologyOk() ([]ServiceDeploymentDetails, bool) {
	if o == nil || IsNil(o.ServicesTopology) {
		return nil, false
	}
	return o.ServicesTopology, true
}

// SetServicesTopology gets a reference to the given []ServiceDeploymentDetails and assigns it to the ServicesTopology field.
func (o *DescribeServicesOrchestrationResult) SetServicesTopology(v []ServiceDeploymentDetails) {
	o.ServicesTopology = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *DescribeServicesOrchestrationResult) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *DescribeServicesOrchestrationResult) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *DescribeServicesOrchestrationResult) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetId returns the Id field value
func (o *DescribeServicesOrchestrationResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DescribeServicesOrchestrationResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DescribeServicesOrchestrationResult) SetId(v string) {
	o.Id = v
}

// GetOrchestrationFailedReason returns the OrchestrationFailedReason field value if set, zero value otherwise.
func (o *DescribeServicesOrchestrationResult) GetOrchestrationFailedReason() string {
	if o == nil || IsNil(o.OrchestrationFailedReason) {
		var ret string
		return ret
	}
	return *o.OrchestrationFailedReason
}

// GetOrchestrationFailedReasonOk returns a tuple with the OrchestrationFailedReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeServicesOrchestrationResult) GetOrchestrationFailedReasonOk() (*string, bool) {
	if o == nil || IsNil(o.OrchestrationFailedReason) {
		return nil, false
	}
	return o.OrchestrationFailedReason, true
}

// SetOrchestrationFailedReason gets a reference to the given string and assigns it to the OrchestrationFailedReason field.
func (o *DescribeServicesOrchestrationResult) SetOrchestrationFailedReason(v string) {
	o.OrchestrationFailedReason = &v
}

// GetResultParams returns the ResultParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DescribeServicesOrchestrationResult) GetResultParams() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ResultParams
}

// GetResultParamsOk returns a tuple with the ResultParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DescribeServicesOrchestrationResult) GetResultParamsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ResultParams) {
		return nil, false
	}
	return &o.ResultParams, true
}

// SetResultParams gets a reference to the given interface{} and assigns it to the ResultParams field.
func (o *DescribeServicesOrchestrationResult) SetResultParams(v interface{}) {
	o.ResultParams = v
}

// GetStatus returns the Status field value
func (o *DescribeServicesOrchestrationResult) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *DescribeServicesOrchestrationResult) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *DescribeServicesOrchestrationResult) SetStatus(v string) {
	o.Status = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *DescribeServicesOrchestrationResult) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *DescribeServicesOrchestrationResult) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *DescribeServicesOrchestrationResult) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o DescribeServicesOrchestrationResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeServicesOrchestrationResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServicesTopology) {
		toSerialize["ServicesTopology"] = o.ServicesTopology
	}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["id"] = o.Id
	if !IsNil(o.OrchestrationFailedReason) {
		toSerialize["orchestrationFailedReason"] = o.OrchestrationFailedReason
	}
	if o.ResultParams != nil {
		toSerialize["resultParams"] = o.ResultParams
	}
	toSerialize["status"] = o.Status
	toSerialize["updatedAt"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DescribeServicesOrchestrationResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
		"id",
		"status",
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeServicesOrchestrationResult := _DescribeServicesOrchestrationResult{}

	err = json.Unmarshal(data, &varDescribeServicesOrchestrationResult)

	if err != nil {
		return err
	}

	*o = DescribeServicesOrchestrationResult(varDescribeServicesOrchestrationResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ServicesTopology")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "id")
		delete(additionalProperties, "orchestrationFailedReason")
		delete(additionalProperties, "resultParams")
		delete(additionalProperties, "status")
		delete(additionalProperties, "updatedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDescribeServicesOrchestrationResult struct {
	value *DescribeServicesOrchestrationResult
	isSet bool
}

func (v NullableDescribeServicesOrchestrationResult) Get() *DescribeServicesOrchestrationResult {
	return v.value
}

func (v *NullableDescribeServicesOrchestrationResult) Set(val *DescribeServicesOrchestrationResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeServicesOrchestrationResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeServicesOrchestrationResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeServicesOrchestrationResult(val *DescribeServicesOrchestrationResult) *NullableDescribeServicesOrchestrationResult {
	return &NullableDescribeServicesOrchestrationResult{value: val, isSet: true}
}

func (v NullableDescribeServicesOrchestrationResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeServicesOrchestrationResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


