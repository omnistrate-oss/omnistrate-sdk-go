/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the ListSecretsResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListSecretsResult{}

// ListSecretsResult struct for ListSecretsResult
type ListSecretsResult struct {
	// List of secrets in the service environment
	Secrets []Secret `json:"secrets,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListSecretsResult ListSecretsResult

// NewListSecretsResult instantiates a new ListSecretsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListSecretsResult() *ListSecretsResult {
	this := ListSecretsResult{}
	return &this
}

// NewListSecretsResultWithDefaults instantiates a new ListSecretsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListSecretsResultWithDefaults() *ListSecretsResult {
	this := ListSecretsResult{}
	return &this
}

// GetSecrets returns the Secrets field value if set, zero value otherwise.
func (o *ListSecretsResult) GetSecrets() []Secret {
	if o == nil || IsNil(o.Secrets) {
		var ret []Secret
		return ret
	}
	return o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSecretsResult) GetSecretsOk() ([]Secret, bool) {
	if o == nil || IsNil(o.Secrets) {
		return nil, false
	}
	return o.Secrets, true
}

// SetSecrets gets a reference to the given []Secret and assigns it to the Secrets field.
func (o *ListSecretsResult) SetSecrets(v []Secret) {
	o.Secrets = v
}

func (o ListSecretsResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListSecretsResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Secrets) {
		toSerialize["secrets"] = o.Secrets
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListSecretsResult) UnmarshalJSON(data []byte) (err error) {
	varListSecretsResult := _ListSecretsResult{}

	err = json.Unmarshal(data, &varListSecretsResult)

	if err != nil {
		return err
	}

	*o = ListSecretsResult(varListSecretsResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "secrets")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListSecretsResult struct {
	value *ListSecretsResult
	isSet bool
}

func (v NullableListSecretsResult) Get() *ListSecretsResult {
	return v.value
}

func (v *NullableListSecretsResult) Set(val *ListSecretsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableListSecretsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableListSecretsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSecretsResult(val *ListSecretsResult) *NullableListSecretsResult {
	return &NullableListSecretsResult{value: val, isSet: true}
}

func (v NullableListSecretsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSecretsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


