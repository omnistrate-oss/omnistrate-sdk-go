/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the OnPremInstallerTools type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnPremInstallerTools{}

// OnPremInstallerTools struct for OnPremInstallerTools
type OnPremInstallerTools struct {
	HelperUserScript *OnPremCustomUserScript `json:"helperUserScript,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OnPremInstallerTools OnPremInstallerTools

// NewOnPremInstallerTools instantiates a new OnPremInstallerTools object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnPremInstallerTools() *OnPremInstallerTools {
	this := OnPremInstallerTools{}
	return &this
}

// NewOnPremInstallerToolsWithDefaults instantiates a new OnPremInstallerTools object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnPremInstallerToolsWithDefaults() *OnPremInstallerTools {
	this := OnPremInstallerTools{}
	return &this
}

// GetHelperUserScript returns the HelperUserScript field value if set, zero value otherwise.
func (o *OnPremInstallerTools) GetHelperUserScript() OnPremCustomUserScript {
	if o == nil || IsNil(o.HelperUserScript) {
		var ret OnPremCustomUserScript
		return ret
	}
	return *o.HelperUserScript
}

// GetHelperUserScriptOk returns a tuple with the HelperUserScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnPremInstallerTools) GetHelperUserScriptOk() (*OnPremCustomUserScript, bool) {
	if o == nil || IsNil(o.HelperUserScript) {
		return nil, false
	}
	return o.HelperUserScript, true
}

// SetHelperUserScript gets a reference to the given OnPremCustomUserScript and assigns it to the HelperUserScript field.
func (o *OnPremInstallerTools) SetHelperUserScript(v OnPremCustomUserScript) {
	o.HelperUserScript = &v
}

func (o OnPremInstallerTools) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnPremInstallerTools) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HelperUserScript) {
		toSerialize["helperUserScript"] = o.HelperUserScript
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OnPremInstallerTools) UnmarshalJSON(data []byte) (err error) {
	varOnPremInstallerTools := _OnPremInstallerTools{}

	err = json.Unmarshal(data, &varOnPremInstallerTools)

	if err != nil {
		return err
	}

	*o = OnPremInstallerTools(varOnPremInstallerTools)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "helperUserScript")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOnPremInstallerTools struct {
	value *OnPremInstallerTools
	isSet bool
}

func (v NullableOnPremInstallerTools) Get() *OnPremInstallerTools {
	return v.value
}

func (v *NullableOnPremInstallerTools) Set(val *OnPremInstallerTools) {
	v.value = val
	v.isSet = true
}

func (v NullableOnPremInstallerTools) IsSet() bool {
	return v.isSet
}

func (v *NullableOnPremInstallerTools) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnPremInstallerTools(val *OnPremInstallerTools) *NullableOnPremInstallerTools {
	return &NullableOnPremInstallerTools{value: val, isSet: true}
}

func (v NullableOnPremInstallerTools) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnPremInstallerTools) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


