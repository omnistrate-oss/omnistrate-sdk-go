/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the DeploymentCellConfigurations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentCellConfigurations{}

// DeploymentCellConfigurations struct for DeploymentCellConfigurations
type DeploymentCellConfigurations struct {
	// The deployment cell configurations per cloud provider.
	DeploymentCellConfigurationPerCloudProvider map[string]interface{} `json:"DeploymentCellConfigurationPerCloudProvider,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DeploymentCellConfigurations DeploymentCellConfigurations

// NewDeploymentCellConfigurations instantiates a new DeploymentCellConfigurations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentCellConfigurations() *DeploymentCellConfigurations {
	this := DeploymentCellConfigurations{}
	return &this
}

// NewDeploymentCellConfigurationsWithDefaults instantiates a new DeploymentCellConfigurations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentCellConfigurationsWithDefaults() *DeploymentCellConfigurations {
	this := DeploymentCellConfigurations{}
	return &this
}

// GetDeploymentCellConfigurationPerCloudProvider returns the DeploymentCellConfigurationPerCloudProvider field value if set, zero value otherwise.
func (o *DeploymentCellConfigurations) GetDeploymentCellConfigurationPerCloudProvider() map[string]interface{} {
	if o == nil || IsNil(o.DeploymentCellConfigurationPerCloudProvider) {
		var ret map[string]interface{}
		return ret
	}
	return o.DeploymentCellConfigurationPerCloudProvider
}

// GetDeploymentCellConfigurationPerCloudProviderOk returns a tuple with the DeploymentCellConfigurationPerCloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentCellConfigurations) GetDeploymentCellConfigurationPerCloudProviderOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DeploymentCellConfigurationPerCloudProvider) {
		return map[string]interface{}{}, false
	}
	return o.DeploymentCellConfigurationPerCloudProvider, true
}

// SetDeploymentCellConfigurationPerCloudProvider gets a reference to the given map[string]interface{} and assigns it to the DeploymentCellConfigurationPerCloudProvider field.
func (o *DeploymentCellConfigurations) SetDeploymentCellConfigurationPerCloudProvider(v map[string]interface{}) {
	o.DeploymentCellConfigurationPerCloudProvider = v
}

func (o DeploymentCellConfigurations) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentCellConfigurations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeploymentCellConfigurationPerCloudProvider) {
		toSerialize["DeploymentCellConfigurationPerCloudProvider"] = o.DeploymentCellConfigurationPerCloudProvider
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DeploymentCellConfigurations) UnmarshalJSON(data []byte) (err error) {
	varDeploymentCellConfigurations := _DeploymentCellConfigurations{}

	err = json.Unmarshal(data, &varDeploymentCellConfigurations)

	if err != nil {
		return err
	}

	*o = DeploymentCellConfigurations(varDeploymentCellConfigurations)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "DeploymentCellConfigurationPerCloudProvider")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDeploymentCellConfigurations struct {
	value *DeploymentCellConfigurations
	isSet bool
}

func (v NullableDeploymentCellConfigurations) Get() *DeploymentCellConfigurations {
	return v.value
}

func (v *NullableDeploymentCellConfigurations) Set(val *DeploymentCellConfigurations) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentCellConfigurations) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentCellConfigurations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentCellConfigurations(val *DeploymentCellConfigurations) *NullableDeploymentCellConfigurations {
	return &NullableDeploymentCellConfigurations{value: val, isSet: true}
}

func (v NullableDeploymentCellConfigurations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentCellConfigurations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


