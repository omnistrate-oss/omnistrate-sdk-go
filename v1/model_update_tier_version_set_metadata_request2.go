/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the UpdateTierVersionSetMetadataRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTierVersionSetMetadataRequest2{}

// UpdateTierVersionSetMetadataRequest2 struct for UpdateTierVersionSetMetadataRequest2
type UpdateTierVersionSetMetadataRequest2 struct {
	// Release notes for the version set.
	ReleaseNotes *string `json:"releaseNotes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateTierVersionSetMetadataRequest2 UpdateTierVersionSetMetadataRequest2

// NewUpdateTierVersionSetMetadataRequest2 instantiates a new UpdateTierVersionSetMetadataRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTierVersionSetMetadataRequest2() *UpdateTierVersionSetMetadataRequest2 {
	this := UpdateTierVersionSetMetadataRequest2{}
	return &this
}

// NewUpdateTierVersionSetMetadataRequest2WithDefaults instantiates a new UpdateTierVersionSetMetadataRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTierVersionSetMetadataRequest2WithDefaults() *UpdateTierVersionSetMetadataRequest2 {
	this := UpdateTierVersionSetMetadataRequest2{}
	return &this
}

// GetReleaseNotes returns the ReleaseNotes field value if set, zero value otherwise.
func (o *UpdateTierVersionSetMetadataRequest2) GetReleaseNotes() string {
	if o == nil || IsNil(o.ReleaseNotes) {
		var ret string
		return ret
	}
	return *o.ReleaseNotes
}

// GetReleaseNotesOk returns a tuple with the ReleaseNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTierVersionSetMetadataRequest2) GetReleaseNotesOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseNotes) {
		return nil, false
	}
	return o.ReleaseNotes, true
}

// SetReleaseNotes gets a reference to the given string and assigns it to the ReleaseNotes field.
func (o *UpdateTierVersionSetMetadataRequest2) SetReleaseNotes(v string) {
	o.ReleaseNotes = &v
}

func (o UpdateTierVersionSetMetadataRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTierVersionSetMetadataRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReleaseNotes) {
		toSerialize["releaseNotes"] = o.ReleaseNotes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateTierVersionSetMetadataRequest2) UnmarshalJSON(data []byte) (err error) {
	varUpdateTierVersionSetMetadataRequest2 := _UpdateTierVersionSetMetadataRequest2{}

	err = json.Unmarshal(data, &varUpdateTierVersionSetMetadataRequest2)

	if err != nil {
		return err
	}

	*o = UpdateTierVersionSetMetadataRequest2(varUpdateTierVersionSetMetadataRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "releaseNotes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateTierVersionSetMetadataRequest2 struct {
	value *UpdateTierVersionSetMetadataRequest2
	isSet bool
}

func (v NullableUpdateTierVersionSetMetadataRequest2) Get() *UpdateTierVersionSetMetadataRequest2 {
	return v.value
}

func (v *NullableUpdateTierVersionSetMetadataRequest2) Set(val *UpdateTierVersionSetMetadataRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTierVersionSetMetadataRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTierVersionSetMetadataRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTierVersionSetMetadataRequest2(val *UpdateTierVersionSetMetadataRequest2) *NullableUpdateTierVersionSetMetadataRequest2 {
	return &NullableUpdateTierVersionSetMetadataRequest2{value: val, isSet: true}
}

func (v NullableUpdateTierVersionSetMetadataRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTierVersionSetMetadataRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

