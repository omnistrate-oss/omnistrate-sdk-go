/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the GetTenantBillingStatusResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTenantBillingStatusResult{}

// GetTenantBillingStatusResult struct for GetTenantBillingStatusResult
type GetTenantBillingStatusResult struct {
	// List of billing providers
	BillingProviders []BillingProvider `json:"billingProviders,omitempty"`
	// Whether tenant billing is enabled for the organization
	Enabled *bool `json:"enabled,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetTenantBillingStatusResult GetTenantBillingStatusResult

// NewGetTenantBillingStatusResult instantiates a new GetTenantBillingStatusResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTenantBillingStatusResult() *GetTenantBillingStatusResult {
	this := GetTenantBillingStatusResult{}
	return &this
}

// NewGetTenantBillingStatusResultWithDefaults instantiates a new GetTenantBillingStatusResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTenantBillingStatusResultWithDefaults() *GetTenantBillingStatusResult {
	this := GetTenantBillingStatusResult{}
	return &this
}

// GetBillingProviders returns the BillingProviders field value if set, zero value otherwise.
func (o *GetTenantBillingStatusResult) GetBillingProviders() []BillingProvider {
	if o == nil || IsNil(o.BillingProviders) {
		var ret []BillingProvider
		return ret
	}
	return o.BillingProviders
}

// GetBillingProvidersOk returns a tuple with the BillingProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTenantBillingStatusResult) GetBillingProvidersOk() ([]BillingProvider, bool) {
	if o == nil || IsNil(o.BillingProviders) {
		return nil, false
	}
	return o.BillingProviders, true
}

// SetBillingProviders gets a reference to the given []BillingProvider and assigns it to the BillingProviders field.
func (o *GetTenantBillingStatusResult) SetBillingProviders(v []BillingProvider) {
	o.BillingProviders = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GetTenantBillingStatusResult) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTenantBillingStatusResult) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GetTenantBillingStatusResult) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o GetTenantBillingStatusResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTenantBillingStatusResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingProviders) {
		toSerialize["billingProviders"] = o.BillingProviders
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetTenantBillingStatusResult) UnmarshalJSON(data []byte) (err error) {
	varGetTenantBillingStatusResult := _GetTenantBillingStatusResult{}

	err = json.Unmarshal(data, &varGetTenantBillingStatusResult)

	if err != nil {
		return err
	}

	*o = GetTenantBillingStatusResult(varGetTenantBillingStatusResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "billingProviders")
		delete(additionalProperties, "enabled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetTenantBillingStatusResult struct {
	value *GetTenantBillingStatusResult
	isSet bool
}

func (v NullableGetTenantBillingStatusResult) Get() *GetTenantBillingStatusResult {
	return v.value
}

func (v *NullableGetTenantBillingStatusResult) Set(val *GetTenantBillingStatusResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTenantBillingStatusResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTenantBillingStatusResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTenantBillingStatusResult(val *GetTenantBillingStatusResult) *NullableGetTenantBillingStatusResult {
	return &NullableGetTenantBillingStatusResult{value: val, isSet: true}
}

func (v NullableGetTenantBillingStatusResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTenantBillingStatusResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


