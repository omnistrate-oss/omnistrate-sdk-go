/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the OnPremCustomUserScript type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnPremCustomUserScript{}

// OnPremCustomUserScript struct for OnPremCustomUserScript
type OnPremCustomUserScript struct {
	// Custom user script content
	Content string `json:"content"`
	AdditionalProperties map[string]interface{}
}

type _OnPremCustomUserScript OnPremCustomUserScript

// NewOnPremCustomUserScript instantiates a new OnPremCustomUserScript object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnPremCustomUserScript(content string) *OnPremCustomUserScript {
	this := OnPremCustomUserScript{}
	this.Content = content
	return &this
}

// NewOnPremCustomUserScriptWithDefaults instantiates a new OnPremCustomUserScript object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnPremCustomUserScriptWithDefaults() *OnPremCustomUserScript {
	this := OnPremCustomUserScript{}
	return &this
}

// GetContent returns the Content field value
func (o *OnPremCustomUserScript) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *OnPremCustomUserScript) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *OnPremCustomUserScript) SetContent(v string) {
	o.Content = v
}

func (o OnPremCustomUserScript) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnPremCustomUserScript) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["content"] = o.Content

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OnPremCustomUserScript) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"content",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOnPremCustomUserScript := _OnPremCustomUserScript{}

	err = json.Unmarshal(data, &varOnPremCustomUserScript)

	if err != nil {
		return err
	}

	*o = OnPremCustomUserScript(varOnPremCustomUserScript)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "content")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOnPremCustomUserScript struct {
	value *OnPremCustomUserScript
	isSet bool
}

func (v NullableOnPremCustomUserScript) Get() *OnPremCustomUserScript {
	return v.value
}

func (v *NullableOnPremCustomUserScript) Set(val *OnPremCustomUserScript) {
	v.value = val
	v.isSet = true
}

func (v NullableOnPremCustomUserScript) IsSet() bool {
	return v.isSet
}

func (v *NullableOnPremCustomUserScript) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnPremCustomUserScript(val *OnPremCustomUserScript) *NullableOnPremCustomUserScript {
	return &NullableOnPremCustomUserScript{value: val, isSet: true}
}

func (v NullableOnPremCustomUserScript) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnPremCustomUserScript) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

