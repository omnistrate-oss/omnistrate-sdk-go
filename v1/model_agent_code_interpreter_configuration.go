/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the AgentCodeInterpreterConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentCodeInterpreterConfiguration{}

// AgentCodeInterpreterConfiguration struct for AgentCodeInterpreterConfiguration
type AgentCodeInterpreterConfiguration struct {
	// List of allowed Python packages
	AllowedPackages []string `json:"allowedPackages,omitempty"`
	// Enable code interpreter for the agent
	Enabled *bool `json:"enabled,omitempty"`
	// Code interpreter provider
	Provider *string `json:"provider,omitempty"`
	// Code execution timeout in seconds
	Timeout *int64 `json:"timeout,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AgentCodeInterpreterConfiguration AgentCodeInterpreterConfiguration

// NewAgentCodeInterpreterConfiguration instantiates a new AgentCodeInterpreterConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentCodeInterpreterConfiguration() *AgentCodeInterpreterConfiguration {
	this := AgentCodeInterpreterConfiguration{}
	var enabled bool = false
	this.Enabled = &enabled
	var provider string = "agentcore"
	this.Provider = &provider
	var timeout int64 = 60
	this.Timeout = &timeout
	return &this
}

// NewAgentCodeInterpreterConfigurationWithDefaults instantiates a new AgentCodeInterpreterConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentCodeInterpreterConfigurationWithDefaults() *AgentCodeInterpreterConfiguration {
	this := AgentCodeInterpreterConfiguration{}
	var enabled bool = false
	this.Enabled = &enabled
	var provider string = "agentcore"
	this.Provider = &provider
	var timeout int64 = 60
	this.Timeout = &timeout
	return &this
}

// GetAllowedPackages returns the AllowedPackages field value if set, zero value otherwise.
func (o *AgentCodeInterpreterConfiguration) GetAllowedPackages() []string {
	if o == nil || IsNil(o.AllowedPackages) {
		var ret []string
		return ret
	}
	return o.AllowedPackages
}

// GetAllowedPackagesOk returns a tuple with the AllowedPackages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentCodeInterpreterConfiguration) GetAllowedPackagesOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedPackages) {
		return nil, false
	}
	return o.AllowedPackages, true
}

// SetAllowedPackages gets a reference to the given []string and assigns it to the AllowedPackages field.
func (o *AgentCodeInterpreterConfiguration) SetAllowedPackages(v []string) {
	o.AllowedPackages = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *AgentCodeInterpreterConfiguration) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentCodeInterpreterConfiguration) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *AgentCodeInterpreterConfiguration) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *AgentCodeInterpreterConfiguration) GetProvider() string {
	if o == nil || IsNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentCodeInterpreterConfiguration) GetProviderOk() (*string, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *AgentCodeInterpreterConfiguration) SetProvider(v string) {
	o.Provider = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *AgentCodeInterpreterConfiguration) GetTimeout() int64 {
	if o == nil || IsNil(o.Timeout) {
		var ret int64
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentCodeInterpreterConfiguration) GetTimeoutOk() (*int64, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// SetTimeout gets a reference to the given int64 and assigns it to the Timeout field.
func (o *AgentCodeInterpreterConfiguration) SetTimeout(v int64) {
	o.Timeout = &v
}

func (o AgentCodeInterpreterConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentCodeInterpreterConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowedPackages) {
		toSerialize["allowedPackages"] = o.AllowedPackages
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AgentCodeInterpreterConfiguration) UnmarshalJSON(data []byte) (err error) {
	varAgentCodeInterpreterConfiguration := _AgentCodeInterpreterConfiguration{}

	err = json.Unmarshal(data, &varAgentCodeInterpreterConfiguration)

	if err != nil {
		return err
	}

	*o = AgentCodeInterpreterConfiguration(varAgentCodeInterpreterConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "allowedPackages")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "provider")
		delete(additionalProperties, "timeout")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAgentCodeInterpreterConfiguration struct {
	value *AgentCodeInterpreterConfiguration
	isSet bool
}

func (v NullableAgentCodeInterpreterConfiguration) Get() *AgentCodeInterpreterConfiguration {
	return v.value
}

func (v *NullableAgentCodeInterpreterConfiguration) Set(val *AgentCodeInterpreterConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentCodeInterpreterConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentCodeInterpreterConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentCodeInterpreterConfiguration(val *AgentCodeInterpreterConfiguration) *NullableAgentCodeInterpreterConfiguration {
	return &NullableAgentCodeInterpreterConfiguration{value: val, isSet: true}
}

func (v NullableAgentCodeInterpreterConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentCodeInterpreterConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


