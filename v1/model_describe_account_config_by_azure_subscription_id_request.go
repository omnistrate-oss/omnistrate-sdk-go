/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the DescribeAccountConfigByAzureSubscriptionIDRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribeAccountConfigByAzureSubscriptionIDRequest{}

// DescribeAccountConfigByAzureSubscriptionIDRequest struct for DescribeAccountConfigByAzureSubscriptionIDRequest
type DescribeAccountConfigByAzureSubscriptionIDRequest struct {
	// The Azure subscription ID
	AzureSubscriptionID string `json:"azureSubscriptionID"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _DescribeAccountConfigByAzureSubscriptionIDRequest DescribeAccountConfigByAzureSubscriptionIDRequest

// NewDescribeAccountConfigByAzureSubscriptionIDRequest instantiates a new DescribeAccountConfigByAzureSubscriptionIDRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeAccountConfigByAzureSubscriptionIDRequest(azureSubscriptionID string, token string) *DescribeAccountConfigByAzureSubscriptionIDRequest {
	this := DescribeAccountConfigByAzureSubscriptionIDRequest{}
	this.AzureSubscriptionID = azureSubscriptionID
	this.Token = token
	return &this
}

// NewDescribeAccountConfigByAzureSubscriptionIDRequestWithDefaults instantiates a new DescribeAccountConfigByAzureSubscriptionIDRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeAccountConfigByAzureSubscriptionIDRequestWithDefaults() *DescribeAccountConfigByAzureSubscriptionIDRequest {
	this := DescribeAccountConfigByAzureSubscriptionIDRequest{}
	return &this
}

// GetAzureSubscriptionID returns the AzureSubscriptionID field value
func (o *DescribeAccountConfigByAzureSubscriptionIDRequest) GetAzureSubscriptionID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AzureSubscriptionID
}

// GetAzureSubscriptionIDOk returns a tuple with the AzureSubscriptionID field value
// and a boolean to check if the value has been set.
func (o *DescribeAccountConfigByAzureSubscriptionIDRequest) GetAzureSubscriptionIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AzureSubscriptionID, true
}

// SetAzureSubscriptionID sets field value
func (o *DescribeAccountConfigByAzureSubscriptionIDRequest) SetAzureSubscriptionID(v string) {
	o.AzureSubscriptionID = v
}

// GetToken returns the Token field value
func (o *DescribeAccountConfigByAzureSubscriptionIDRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *DescribeAccountConfigByAzureSubscriptionIDRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *DescribeAccountConfigByAzureSubscriptionIDRequest) SetToken(v string) {
	o.Token = v
}

func (o DescribeAccountConfigByAzureSubscriptionIDRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeAccountConfigByAzureSubscriptionIDRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["azureSubscriptionID"] = o.AzureSubscriptionID
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DescribeAccountConfigByAzureSubscriptionIDRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"azureSubscriptionID",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeAccountConfigByAzureSubscriptionIDRequest := _DescribeAccountConfigByAzureSubscriptionIDRequest{}

	err = json.Unmarshal(data, &varDescribeAccountConfigByAzureSubscriptionIDRequest)

	if err != nil {
		return err
	}

	*o = DescribeAccountConfigByAzureSubscriptionIDRequest(varDescribeAccountConfigByAzureSubscriptionIDRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "azureSubscriptionID")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDescribeAccountConfigByAzureSubscriptionIDRequest struct {
	value *DescribeAccountConfigByAzureSubscriptionIDRequest
	isSet bool
}

func (v NullableDescribeAccountConfigByAzureSubscriptionIDRequest) Get() *DescribeAccountConfigByAzureSubscriptionIDRequest {
	return v.value
}

func (v *NullableDescribeAccountConfigByAzureSubscriptionIDRequest) Set(val *DescribeAccountConfigByAzureSubscriptionIDRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeAccountConfigByAzureSubscriptionIDRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeAccountConfigByAzureSubscriptionIDRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeAccountConfigByAzureSubscriptionIDRequest(val *DescribeAccountConfigByAzureSubscriptionIDRequest) *NullableDescribeAccountConfigByAzureSubscriptionIDRequest {
	return &NullableDescribeAccountConfigByAzureSubscriptionIDRequest{value: val, isSet: true}
}

func (v NullableDescribeAccountConfigByAzureSubscriptionIDRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeAccountConfigByAzureSubscriptionIDRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


