openapi: 3.0.3
info:
  description: REST API for Omnistrate Service Registration
  title: Omnistrate Registration API
  version: 2022-09-01-00
servers:
- url: https://api.omnistrate.cloud
tags:
- description: Common API for all Omnistrate API endpoints
  name: global-api
- name: service-api
- name: service-environment-api
- name: service-model-api
- name: product-tier-api
- name: service-api-api
- name: service-plan-api
- name: resource-api
- name: tier-version-set-api
- name: input-parameter-api
- name: output-parameter-api
- description: The external facing VUnit API
  name: vunit-api
- description: The infra config API manages the infra for Omnistrate resources
  name: infra-config-api
- description: The image config API manages the image config for Omnistrate entities
  name: image-config-api
- description: The deployment config API manages the deployment config for Omnistrate
    entities
  name: deployment-config-api
- description: The compute config API manages the compute config for Omnistrate entities
  name: compute-config-api
- description: The storage config API manages the storage config for Omnistrate entities
  name: storage-config-api
- description: The storage volume config API manages the storage volume config for
    Omnistrate entities
  name: storage-volume-config-api
- description: The network config API manages the network config for Omnistrate entities
  name: network-config-api
- description: The Availability Zone API provides read-only access to availability
    zones
  name: availability-zone-api
- description: The Region API provides read-only access to regions
  name: region-api
- description: The Cloud Provider API provides read-only access to cloud provider
    metadata
  name: cloud-provider-api
- description: The Demo API provides a demo of the system
  name: demo-api
- description: The Contactus API for customers to reach out to us
  name: contactus-api
- description: The signin API for customers to authenticate with us
  name: signin-api
- description: The Organization API for managing service provider organizations
  name: sp-organization-api
- description: The Signup API for customers to signup with us
  name: signup-api
- description: The Plan API is for payment info.  It's explicitly empty for free plans.
  name: plan-api
- description: The Usage API is for getting the last calendar month usage.
  name: usage-api
- description: The Invoices API gets the list of invoices for the organization
  name: invoice-api
- description: The user management API to manage user metadata
  name: users-api
- description: The Consumption Signin API signs the user into the consumption service
  name: consumption-user-api
- description: The Services Orchestration API manages the orchestration of services
  name: services-orchestration-api
- description: The Resource Instance API manages the instances of a resource
  name: resource-instance-api
- description: The Consumption Usage API retrieves the usage data for consumption
    users
  name: consumption-usage-api
- description: The Consumption Invoice API retrieves the invoice data for consumption
    users
  name: consumption-invoice-api
- description: The Consumption Invoice API retrieves the billing information for consumption
    users
  name: consumption-billing-api
- description: The Account Config API manages the access information for a Service
    Provider account
  name: account-config-api
- description: The Custom Domain API manages the delegated domain names for the Service
    Provider
  name: custom-domain-api
- description: The limit API manages the limit for Omnistrate entities
  name: limit-api
- description: The image registry API manages the image registry for Omnistrate resources
  name: image-registry-api
- description: The service offering API provides a public API to list all public services
  name: service-offering-api
- description: The set of APIs for auditing instance events for consumption side users.
  name: audit-events-api
- description: The subscription management API to manage subscription metadata
  name: subscription-api
- description: The subscription request API for end customers to issue subscription
    requests
  name: subscription-request-api
- name: identity-provider-api
- name: saas-portal-api
- name: helm-package-api
- name: compose-gen-api
- name: custom-network-api
- description: The API to manage stripe connected accounts
  name: stripe-connect-api
- description: The API to manage tenant billing
  name: tenant-billing-api
- description: The set of APIs to manage secrets for service providers.
  name: secrets-api
- description: The API to evaluate expressions.
  name: expression-evaluator-api
- description: The API to get the latest JSON schema for various extensions and spec
    types.
  name: schema-api
paths:
  /2022-09-01-00/accountconfig:
    post:
      operationId: account-config-api#CreateAccountConfig
      requestBody:
        content:
          application/json:
            example:
              awsAccessKey: Laudantium veniam nisi quisquam ex dolore.
              awsAccountID: "123456789012"
              awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
              awsSecretKey: Aut ducimus voluptas pariatur quos illo.
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              byoaInstanceID: instance-12345678
              cloudProviderId: Aut vel enim consectetur sit dolore iure.
              description: An AWS account hosting multiple dev environments
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
              gcpServiceAccountKey: Adipisci repellat unde mollitia voluptatem voluptatem.
              name: Dev AWS account
              ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
              ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            schema:
              $ref: "#/components/schemas/CreateAccountConfigRequest2"
        required: true
      responses:
        "202":
          content:
            application/json:
              example: Error doloremque qui numquam.
              schema:
                description: The ID of the registered account config
                example: Sed voluptas magni.
                type: string
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateAccountConfig account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/{id}:
    delete:
      operationId: account-config-api#DeleteAccountConfig
      parameters:
      - description: Account Config ID to operate on
        example: ac-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Account Config
          example: Est dolor dolores.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteAccountConfig account-config-api
      tags:
      - account-config-api
    get:
      operationId: account-config-api#DescribeAccountConfig
      parameters:
      - description: Account Config ID to operate on
        example: ac-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Account Config
          example: Eligendi adipisci reiciendis fuga sit.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                awsAccountID: "123456789012"
                awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                azureTenantID: 12345678-1234-1234-1234-123456789012
                byoaInstanceIDs:
                - instance-12345678
                - instance-abcdefgh
                cloudProviderId: Totam quis aut sint.
                description: An AWS account hosting multiple dev environments
                gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                gcpProjectID: my-project
                gcpProjectNumber: "123456789012"
                gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                id: Omnis perspiciatis sequi.
                name: Dev AWS account
                ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                status: PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
                statusMessage: Account is ready
              schema:
                $ref: "#/components/schemas/DescribeAccountConfigResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeAccountConfig account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/aws/{awsAccountID}:
    get:
      operationId: account-config-api#DescribeAccountConfigByAWSAccountID
      parameters:
      - description: The AWS account ID
        example: "123456789012"
        explode: false
        in: path
        name: awsAccountID
        required: true
        schema:
          description: The AWS account ID
          example: "123456789012"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                awsAccountID: "123456789012"
                awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml&param_CreateLoadBalancerPolicy=false
                awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                byoaInstanceIDs:
                - instance-12345678
                - instance-abcdefgh
                cloudProviderId: Vel aut eos non.
                description: An AWS account hosting multiple dev environments
                id: Ut sed harum dolorem.
                name: Dev AWS account
                status: PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
                statusMessage: Account is ready
              schema:
                $ref: "#/components/schemas/DescribeAccountConfigByAWSAccountIDResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeAccountConfigByAWSAccountID account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/azure/{azureSubscriptionID}:
    get:
      operationId: account-config-api#DescribeAccountConfigByAzureSubscriptionID
      parameters:
      - description: The Azure subscription ID
        example: 12345678-1234-1234-1234-123456789012
        explode: false
        in: path
        name: azureSubscriptionID
        required: true
        schema:
          description: The Azure subscription ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                azureTenantID: 12345678-1234-1234-1234-123456789012
                byoaInstanceIDs:
                - instance-12345678
                - instance-abcdefgh
                cloudProviderId: Illum nulla.
                description: An AWS account hosting multiple dev environments
                id: Impedit ullam.
                name: Dev AWS account
                status: PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
                statusMessage: Account is ready
              schema:
                $ref: "#/components/schemas/DescribeAccountConfigByAzureSubscriptionIDResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeAccountConfigByAzureSubscriptionID account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/byoa:
    get:
      operationId: account-config-api#ListBYOAConfig
      requestBody:
        content:
          application/json:
            example:
              cloudProviderName: aws|azure|gcp|all
            schema:
              $ref: "#/components/schemas/ListBYOAConfigRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                accountConfigs:
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: Distinctio provident doloremque quis.
                  description: An AWS account hosting multiple dev environments
                  gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: Aut id et reiciendis provident.
                  name: Dev AWS account
                  ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                  ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                  status: PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
                  statusMessage: Account is ready
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: Distinctio provident doloremque quis.
                  description: An AWS account hosting multiple dev environments
                  gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: Aut id et reiciendis provident.
                  name: Dev AWS account
                  ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                  ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                  status: PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
                  statusMessage: Account is ready
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: Distinctio provident doloremque quis.
                  description: An AWS account hosting multiple dev environments
                  gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: Aut id et reiciendis provident.
                  name: Dev AWS account
                  ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                  ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                  status: PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
                  statusMessage: Account is ready
                ids:
                - ac-12345678
                - ac-abcdefgh
                - ac-1234efgh
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListBYOAConfigResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list account configs"
      security:
      - api_key_header_Authorization: []
      summary: ListBYOAConfig account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/cloudprovider/{cloudProviderName}:
    get:
      operationId: account-config-api#ListAccountConfig
      parameters:
      - description: Cloud Provider name to filter on
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                accountConfigs:
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: Distinctio provident doloremque quis.
                  description: An AWS account hosting multiple dev environments
                  gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: Aut id et reiciendis provident.
                  name: Dev AWS account
                  ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                  ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                  status: PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
                  statusMessage: Account is ready
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: Distinctio provident doloremque quis.
                  description: An AWS account hosting multiple dev environments
                  gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: Aut id et reiciendis provident.
                  name: Dev AWS account
                  ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                  ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                  status: PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
                  statusMessage: Account is ready
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: Distinctio provident doloremque quis.
                  description: An AWS account hosting multiple dev environments
                  gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: Aut id et reiciendis provident.
                  name: Dev AWS account
                  ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                  ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                  status: PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
                  statusMessage: Account is ready
                ids:
                - ac-12345678
                - ac-abcdefgh
                - ac-1234efgh
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListAccountConfigResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list account configs"
      security:
      - api_key_header_Authorization: []
      summary: ListAccountConfig account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/gcp/{gcpProjectID}:
    get:
      operationId: account-config-api#DescribeAccountConfigByGCPProjectID
      parameters:
      - description: The GCP project ID
        example: my-project
        explode: false
        in: path
        name: gcpProjectID
        required: true
        schema:
          description: The GCP project ID
          example: my-project
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                byoaInstanceIDs:
                - instance-12345678
                - instance-abcdefgh
                cloudProviderId: Perspiciatis ut nihil assumenda repellendus quia.
                description: An AWS account hosting multiple dev environments
                gcpProjectID: my-project
                gcpProjectNumber: "123456789012"
                gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                id: Non necessitatibus laudantium ipsa quo.
                name: Dev AWS account
                status: PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
                statusMessage: Account is ready
              schema:
                $ref: "#/components/schemas/DescribeAccountConfigByGCPProjectIDResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeAccountConfigByGCPProjectID account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/identityid:
    get:
      description: Returns the identity id of the account config to be used in the
        trust policy of the account
      operationId: account-config-api#AccountConfigIdentityID
      responses:
        "200":
          content:
            application/json:
              example:
                id: Aut id repellat assumenda libero.
              schema:
                $ref: "#/components/schemas/AccountConfigIdentityIDResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get an account\
            \ config identity id"
      security:
      - api_key_header_Authorization: []
      summary: AccountConfigIdentityID account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/oci/{ociTenancyID}:
    get:
      operationId: account-config-api#DescribeAccountConfigByOCITenancyID
      parameters:
      - description: The Tenancy OCID for Oracle Cloud Infrastructure
        example: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
        explode: false
        in: path
        name: ociTenancyID
        required: true
        schema:
          description: The Tenancy OCID for Oracle Cloud Infrastructure
          example: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                byoaInstanceIDs:
                - instance-12345678
                - instance-abcdefgh
                cloudProviderId: Eum debitis vero.
                description: An OCI account hosting multiple dev environments
                id: Non impedit.
                name: Dev OCI account
                ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
                status: PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
                statusMessage: Account is ready
              schema:
                $ref: "#/components/schemas/DescribeAccountConfigByOCITenancyIDResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeAccountConfigByOCITenancyID account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/verify/{id}:
    post:
      operationId: account-config-api#VerifyAccountConfig
      parameters:
      - description: Account Config ID to operate on
        example: ac-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Account Config
          example: Aut iste doloremque minima fuga assumenda numquam.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list account configs"
      security:
      - api_key_header_Authorization: []
      summary: VerifyAccountConfig account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/availability-zone/{id}:
    get:
      operationId: availability-zone-api#DescribeAvailabilityZone
      parameters:
      - example: az-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an AZ
          example: Harum quia quia a.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cloudProviderName: aws|azure|gcp|all
                code: us-east-1a
                description: US East (N. Virginia) Availability Zone A
                id: Sint corporis nihil.
                regionCode: us-east-1
              schema:
                $ref: "#/components/schemas/DescribeAvailabilityZoneResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe an availability\
            \ zone"
      security:
      - api_key_header_Authorization: []
      summary: DescribeAvailabilityZone availability-zone-api
      tags:
      - availability-zone-api
  /2022-09-01-00/availability-zone/cloud-provider/{cloudProviderName}:
    get:
      operationId: availability-zone-api#ListAvailabilityZone
      parameters:
      - description: The cloud provider for this compute instance type config
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - az-12345678
                - az-87654321
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListAvailabilityZonesResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list availability\
            \ zones"
      security:
      - api_key_header_Authorization: []
      summary: ListAvailabilityZone availability-zone-api
      tags:
      - availability-zone-api
  /2022-09-01-00/availability-zone/code/{code}/cloud-provider/{cloudProviderName}:
    get:
      operationId: availability-zone-api#GetAvailabilityZoneByCode
      parameters:
      - description: Cloud-provider native availability zone code
        example: us-east-1a
        explode: false
        in: path
        name: code
        required: true
        schema:
          description: Cloud-provider native availability zone code
          example: us-east-1a
          type: string
        style: simple
      - description: The cloud provider for this compute instance type config
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: Laborum dolores incidunt similique officia provident distinctio.
              schema:
                example: Aut labore.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get an availability\
            \ zone by code"
      security:
      - api_key_header_Authorization: []
      summary: GetAvailabilityZoneByCode availability-zone-api
      tags:
      - availability-zone-api
  /2022-09-01-00/availability-zone/region/code/{regionCode}/cloud-provider/{cloudProviderName}:
    get:
      operationId: availability-zone-api#ListAvailabilityZonesByRegionCode
      parameters:
      - example: us-east-1
        explode: false
        in: path
        name: regionCode
        required: true
        schema:
          example: us-east-1
          type: string
        style: simple
      - description: The cloud provider for this compute instance type config
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - az-12345678
                - az-87654321
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListAvailabilityZonesByRegionCodeResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list availability\
            \ zones by region code"
      security:
      - api_key_header_Authorization: []
      summary: ListAvailabilityZonesByRegionCode availability-zone-api
      tags:
      - availability-zone-api
  /2022-09-01-00/change-password:
    post:
      operationId: signup-api#ChangePassword
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              password: password
              token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
            schema:
              $ref: "#/components/schemas/ChangePasswordRequest"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to change password"
      summary: ChangePassword signup-api
      tags:
      - signup-api
  /2022-09-01-00/cloud-provider:
    get:
      operationId: cloud-provider-api#ListCloudProvider
      parameters:
      - allowEmptyValue: true
        description: "Service ID. If specified together with serviceModelId,list the\
          \ cloud provider of the service model. Otherwise list all cloud provider."
        example: s-12345678
        explode: true
        in: query
        name: serviceId
        required: false
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: form
      - allowEmptyValue: true
        description: "Service model ID. If specified together with serviceId,list\
          \ the cloud provider of the service model. Otherwise list all cloud provider."
        example: sm-12345678
        explode: true
        in: query
        name: serviceModelId
        required: false
        schema:
          description: ID of a Service Model
          example: Sint eaque explicabo inventore.
          type: string
        style: form
      - allowEmptyValue: true
        description: "Product tier ID. If specified together with serviceId,list the\
          \ cloud provider of the product tier. Otherwise list all cloud provider."
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Debitis deserunt vitae dolor.
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - infra-12345678
                - infra-87654321
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListCloudProvidersResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list cloud providers"
      security:
      - api_key_header_Authorization: []
      summary: ListCloudProvider cloud-provider-api
      tags:
      - cloud-provider-api
  /2022-09-01-00/cloud-provider/{id}:
    get:
      operationId: cloud-provider-api#DescribeCloudProvider
      parameters:
      - description: ID of the CloudProvider
        example: infra-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an CloudProvider
          example: Aut a ut eum sapiente facere.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: Amazon Web Services
                id: Error dignissimos suscipit voluptatem et optio vitae.
                name: aws
              schema:
                $ref: "#/components/schemas/DescribeCloudProviderResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe an cloud\
            \ provider"
      security:
      - api_key_header_Authorization: []
      summary: DescribeCloudProvider cloud-provider-api
      tags:
      - cloud-provider-api
  /2022-09-01-00/cloud-provider/name/{name}:
    get:
      operationId: cloud-provider-api#GetCloudProviderByName
      parameters:
      - description: Name of the CloudProvider
        example: aws
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of the CloudProvider
          example: aws
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: Repellat autem quae nulla omnis consequatur.
              schema:
                example: Possimus impedit ratione ea vel doloribus placeat.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get an cloud provider\
            \ by name"
      security:
      - api_key_header_Authorization: []
      summary: GetCloudProviderByName cloud-provider-api
      tags:
      - cloud-provider-api
  /2022-09-01-00/compose-gen/image:
    get:
      operationId: compose-gen-api#CheckIfContainerImageAccessible
      parameters:
      - allowEmptyValue: true
        description: Registry where the image is stored
        example: docker.io
        explode: true
        in: query
        name: imageRegistry
        required: true
        schema:
          description: Registry where the image is stored
          example: docker.io
          type: string
        style: form
      - allowEmptyValue: true
        description: Username to access the image registry
        example: username
        explode: true
        in: query
        name: username
        required: false
        schema:
          description: Username to access the image registry
          example: username
          type: string
        style: form
      - allowEmptyValue: true
        description: Password to access the image registry
        example: password
        explode: true
        in: query
        name: password
        required: false
        schema:
          description: Password to access the image registry
          example: password
          type: string
        style: form
      - allowEmptyValue: true
        description: Name of the image along with the tag. Include the repository
          name if the image is not from the official repository
        example: library/mysql:5.7
        explode: true
        in: query
        name: image
        required: true
        schema:
          description: Name of the image along with the tag. Include the repository
            name if the image is not from the official repository
          example: library/mysql:5.7
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                errorMsg: Molestiae placeat velit similique animi.
                imageAccessible: true
              schema:
                $ref: "#/components/schemas/CheckIfContainerImageAccessibleResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to build a service\
            \ from compose spec"
      security:
      - api_key_header_Authorization: []
      summary: CheckIfContainerImageAccessible compose-gen-api
      tags:
      - compose-gen-api
    post:
      operationId: compose-gen-api#GenerateComposeSpecFromContainerImage
      requestBody:
        content:
          application/json:
            example:
              environmentVariables:
              - key: MYSQL_ROOT_PASSWORD
                value: password
              image: library/mysql:5.7
              imageRegistry: docker.io
              password: password
              username: username
            schema:
              $ref: "#/components/schemas/GenerateComposeSpecFromContainerImageRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                fileContent: Eligendi non aliquid.
              schema:
                $ref: "#/components/schemas/GenerateComposeSpecFromContainerImageResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to build a service\
            \ from compose spec"
      security:
      - api_key_header_Authorization: []
      summary: GenerateComposeSpecFromContainerImage compose-gen-api
      tags:
      - compose-gen-api
  /2022-09-01-00/contactus:
    post:
      operationId: contactus-api#Contactus
      requestBody:
        content:
          application/json:
            example:
              company: ABC
              email: abc@gmail.com
              message: this is a test
              name: John Doe
            schema:
              $ref: "#/components/schemas/ContactusRequest"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to contactus"
      summary: Contactus contactus-api
      tags:
      - contactus-api
  /2022-09-01-00/customdomain:
    get:
      operationId: custom-domain-api#ListCustomDomain
      responses:
        "200":
          content:
            application/json:
              example:
                CustomDomains:
                - customDomain: mydomain.dev
                  description: Description of the domain
                  id: Dolores officia similique.
                  name: Dev domain
                  route53Configuration:
                    awsAccountID: "123456789012"
                    awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
                  status: PENDING|VERIFYING|READY|FAILED
                  statusMessage: Account is ready
                - customDomain: mydomain.dev
                  description: Description of the domain
                  id: Dolores officia similique.
                  name: Dev domain
                  route53Configuration:
                    awsAccountID: "123456789012"
                    awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
                  status: PENDING|VERIFYING|READY|FAILED
                  statusMessage: Account is ready
                - customDomain: mydomain.dev
                  description: Description of the domain
                  id: Dolores officia similique.
                  name: Dev domain
                  route53Configuration:
                    awsAccountID: "123456789012"
                    awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
                  status: PENDING|VERIFYING|READY|FAILED
                  statusMessage: Account is ready
                ids:
                - cd-12345678
                - cd-abcdefgh
                - cd-1234efgh
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListCustomDomainResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list Custom Domains"
      security:
      - api_key_header_Authorization: []
      summary: ListCustomDomain custom-domain-api
      tags:
      - custom-domain-api
    post:
      operationId: custom-domain-api#CreateCustomDomain
      requestBody:
        content:
          application/json:
            example:
              customDomain: mydomain.dev
              description: Description of the domain
              name: Dev domain
              route53Configuration:
                awsAccountID: "123456789012"
            schema:
              $ref: "#/components/schemas/CreateCustomDomainRequest2"
        required: true
      responses:
        "202":
          content:
            application/json:
              example: Est ad maxime quo rerum necessitatibus.
              schema:
                description: The ID of the registered Custom Domain
                example: Eligendi ex maxime ipsam impedit eos.
                type: string
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create an Custom\
            \ Domain"
      security:
      - api_key_header_Authorization: []
      summary: CreateCustomDomain custom-domain-api
      tags:
      - custom-domain-api
  /2022-09-01-00/customdomain/{id}:
    delete:
      operationId: custom-domain-api#DeleteCustomDomain
      parameters:
      - description: custom domain ID to operate on
        example: cd-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Custom Domain
          example: Cumque recusandae et fugit deleniti maiores deserunt.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete an Custom\
            \ Domain"
      security:
      - api_key_header_Authorization: []
      summary: DeleteCustomDomain custom-domain-api
      tags:
      - custom-domain-api
    get:
      operationId: custom-domain-api#DescribeCustomDomain
      parameters:
      - description: custom domain ID to operate on
        example: cd-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Custom Domain
          example: Cupiditate voluptates consequatur iste ut.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                customDomain: mydomain.dev
                description: Description of the domain
                id: Eligendi error ut numquam in quo.
                name: Dev domain
                route53Configuration:
                  awsAccountID: "123456789012"
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
                status: PENDING|VERIFYING|READY|FAILED
                statusMessage: Account is ready
              schema:
                $ref: "#/components/schemas/DescribeCustomDomainResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe an Custom\
            \ Domain"
      security:
      - api_key_header_Authorization: []
      summary: DescribeCustomDomain custom-domain-api
      tags:
      - custom-domain-api
  /2022-09-01-00/customdomain/identityid:
    get:
      description: Returns the identity id of the Custom Domain to be used in the
        trust policy of the account
      operationId: custom-domain-api#CustomDomainIdentityID
      responses:
        "200":
          content:
            application/json:
              example:
                id: Maxime porro accusamus praesentium.
              schema:
                $ref: "#/components/schemas/CustomDomainIdentityIDResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get an Custom\
            \ Domain identity id"
      security:
      - api_key_header_Authorization: []
      summary: CustomDomainIdentityID custom-domain-api
      tags:
      - custom-domain-api
  /2022-09-01-00/customdomain/verify/{id}:
    post:
      operationId: custom-domain-api#VerifyCustomDomain
      parameters:
      - description: custom domain ID to operate on
        example: cd-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Custom Domain
          example: Cum aut provident.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list Custom Domains"
      security:
      - api_key_header_Authorization: []
      summary: VerifyCustomDomain custom-domain-api
      tags:
      - custom-domain-api
  /2022-09-01-00/customer-delete-user:
    delete:
      operationId: users-api#CustomerDeleteUser
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete user"
      security:
      - api_key_header_Authorization: []
      summary: CustomerDeleteUser users-api
      tags:
      - users-api
  /2022-09-01-00/customer-invite-user:
    post:
      operationId: users-api#CustomerInviteUser
      requestBody:
        content:
          application/json:
            example:
              email: abc@example.com
            schema:
              $ref: "#/components/schemas/CustomerInviteUserRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to invite user"
      security:
      - api_key_header_Authorization: []
      summary: CustomerInviteUser users-api
      tags:
      - users-api
  /2022-09-01-00/customer-login-with-identity-provider:
    post:
      operationId: users-api#CustomerLoginWithIdentityProvider
      requestBody:
        content:
          application/json:
            example:
              authorizationCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
              companyDescription: We sell xyz database software
              companyUrl: https://www.mywebsite.com
              environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
              identityProviderName: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
              invitedEmail: abc@gmail.com
              legalCompanyName: mywebsite
              redirectUri: https://www.example/redirect
              state: state
            schema:
              $ref: "#/components/schemas/CustomerLoginWithIdentityProviderRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                jwtToken: ""
              schema:
                $ref: "#/components/schemas/CustomerLoginWithIdentityProviderResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to signin"
      security:
      - api_key_header_Authorization: []
      summary: CustomerLoginWithIdentityProvider users-api
      tags:
      - users-api
  /2022-09-01-00/customer-reset-password:
    post:
      operationId: users-api#CustomerResetPassword
      requestBody:
        content:
          application/json:
            example:
              email: abc@example.com
            schema:
              $ref: "#/components/schemas/CustomerResetPasswordRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to signin"
      security:
      - api_key_header_Authorization: []
      summary: CustomerResetPassword users-api
      tags:
      - users-api
  /2022-09-01-00/customer-user-signin:
    post:
      operationId: users-api#CustomerSignin
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
              hashedPassword: deprecated
              password: password
            schema:
              $ref: "#/components/schemas/CustomerSigninRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                jwtToken: ""
              schema:
                $ref: "#/components/schemas/CustomerSigninResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to signin"
      security:
      - api_key_header_Authorization: []
      summary: CustomerSignin users-api
      tags:
      - users-api
  /2022-09-01-00/customer-user-signup:
    post:
      operationId: users-api#CustomerSignup
      requestBody:
        content:
          application/json:
            example:
              companyDescription: We sell xyz database software
              companyUrl: https://www.mywebsite.com
              email: abc@gmail.com
              legalCompanyName: mywebsite
              name: John Doe
              password: password
            schema:
              $ref: "#/components/schemas/CustomerSignupRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete user"
      security:
      - api_key_header_Authorization: []
      summary: CustomerSignup users-api
      tags:
      - users-api
  /2022-09-01-00/demo:
    post:
      operationId: demo-api#Demo
      requestBody:
        content:
          application/json:
            example:
              company: ABC
              email: abc@gmail.com
              name: John Doe
              phone: +1-234567890
            schema:
              $ref: "#/components/schemas/DemoRequest"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to demo"
      summary: Demo demo-api
      tags:
      - demo-api
  /2022-09-01-00/deployment-config:
    get:
      operationId: deployment-config-api#ListDeploymentConfigs
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - dc-12345678
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListDeploymentConfigsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list deployment\
            \ configs"
      security:
      - api_key_header_Authorization: []
      summary: ListDeploymentConfigs deployment-config-api
      tags:
      - deployment-config-api
    post:
      operationId: deployment-config-api#CreateDeploymentConfig
      requestBody:
        content:
          application/json:
            example:
              description: A production deployment config
              infraRollConfiguration:
                infraRolloutStrategy: APPLY_IMMEDIATELY
                maximumNumberOfResourceInstancesPerBatch: 1
                maximumUnavailableReplicas: 1
              name: Production
              rolloutPriorityList:
              - region-12345678
              - region-abcd1234
              - region-3c3c3c3c
            schema:
              $ref: "#/components/schemas/CreateDeploymentConfigRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Necessitatibus neque aliquid id maiores illum.
              schema:
                description: Deployment Config ID created
                example: Qui alias dolorem odio consectetur aut.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create the deployment\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateDeploymentConfig deployment-config-api
      tags:
      - deployment-config-api
  /2022-09-01-00/deployment-config/{id}:
    delete:
      operationId: deployment-config-api#DeleteDeploymentConfig
      parameters:
      - description: The deployment configuration ID
        example: dc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Deployment Config
          example: Et dolorem qui iste molestias.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete the deployment\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteDeploymentConfig deployment-config-api
      tags:
      - deployment-config-api
    get:
      operationId: deployment-config-api#DescribeDeploymentConfig
      parameters:
      - description: The deployment configuration ID
        examples:
          default:
            summary: default
            value: default
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The deployment configuration ID
          example: default
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: A production deployment config
                id: Quisquam voluptate.
                infraRollConfiguration:
                  infraRolloutStrategy: APPLY_IMMEDIATELY
                  maximumNumberOfResourceInstancesPerBatch: 1
                  maximumUnavailableReplicas: 1
                name: Production
                rolloutPriorityList:
                - region-12345678
                - region-abcd1234
                - region-3c3c3c3c
              schema:
                $ref: "#/components/schemas/DescribeDeploymentConfigResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe the deployment\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeDeploymentConfig deployment-config-api
      tags:
      - deployment-config-api
    patch:
      operationId: deployment-config-api#UpdateDeploymentConfig
      parameters:
      - description: The deployment configuration ID
        example: dc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Deployment Config
          example: Inventore hic.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A production deployment config
              infraRollConfiguration:
                infraRolloutStrategy: APPLY_IMMEDIATELY
                maximumNumberOfResourceInstancesPerBatch: 1
                maximumUnavailableReplicas: 1
              name: Production
              rolloutPriorityList:
              - region-12345678
              - region-abcd1234
              - region-3c3c3c3c
            schema:
              $ref: "#/components/schemas/UpdateDeploymentConfigRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update the deployment\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateDeploymentConfig deployment-config-api
      tags:
      - deployment-config-api
  /2022-09-01-00/environmentType/{environmentType}/secret/{name}:
    delete:
      operationId: secrets-api#DeleteSecret
      parameters:
      - description: The environment type for the secret
        example: DEV
        explode: false
        in: path
        name: environmentType
        required: true
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: simple
      - description: Name of the secret
        example: my-secret
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of the secret
          example: my-secret
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested secret is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete secret"
      security:
      - api_key_header_Authorization: []
      summary: DeleteSecret secrets-api
      tags:
      - secrets-api
    get:
      operationId: secrets-api#GetSecret
      parameters:
      - description: The environment type for the secret
        example: DEV
        explode: false
        in: path
        name: environmentType
        required: true
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: simple
      - description: Name of the secret
        example: my-secret
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of the secret
          example: my-secret
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                name: my-secret
                value: super-secret-value
              schema:
                $ref: "#/components/schemas/GetSecretResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested secret is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get secret"
      security:
      - api_key_header_Authorization: []
      summary: GetSecret secrets-api
      tags:
      - secrets-api
    put:
      operationId: secrets-api#SetSecret
      parameters:
      - description: The environment type for the secret
        example: DEV
        explode: false
        in: path
        name: environmentType
        required: true
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: simple
      - description: Name of the secret
        example: my-secret
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of the secret
          example: my-secret
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              value: super-secret-value
            schema:
              $ref: "#/components/schemas/SetSecretRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to set secret"
      security:
      - api_key_header_Authorization: []
      summary: SetSecret secrets-api
      tags:
      - secrets-api
  /2022-09-01-00/environmentType/{environmentType}/secrets:
    get:
      operationId: secrets-api#ListSecrets
      parameters:
      - description: The environment type for the secret
        example: DEV
        explode: false
        in: path
        name: environmentType
        required: true
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                secrets:
                - environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                  name: my-secret
                  value: super-secret-value
                - environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                  name: my-secret
                  value: super-secret-value
              schema:
                $ref: "#/components/schemas/ListSecretsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list secrets"
      security:
      - api_key_header_Authorization: []
      summary: ListSecrets secrets-api
      tags:
      - secrets-api
  /2022-09-01-00/health:
    get:
      description: Registration service health check endpoint
      operationId: global-api#registrationServiceHealth
      responses:
        "200":
          content:
            application/json:
              example:
                status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
              schema:
                $ref: "#/components/schemas/OmnistrateServiceHealthResult"
          description: OK response.
      summary: registrationServiceHealth global-api
      tags:
      - global-api
  /2022-09-01-00/helm-package:
    get:
      operationId: helm-package-api#ListHelmPackages
      parameters:
      - allowEmptyValue: true
        description: The chart name to filter by
        example: my-chart
        explode: true
        in: query
        name: chartName
        required: false
        schema:
          description: The chart name to filter by
          example: my-chart
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                helmPackages:
                - chartName: my-chart
                  chartRepoName: my-repo
                  chartRepoUrl: https://my-repo.com
                  chartValues:
                    key1: value1
                    key2: 3
                    key3:
                      key4: value4
                  chartVersion: 1.0.0
                  layeredChartValues:
                  - name: my-layer
                    scope:
                      '{{ $sys.cloudProviderName }}': aws
                    values:
                      global:
                        affinity:
                          nodeAffinity:
                            requiredDuringSchedulingIgnoredDuringExecution:
                              nodeSelectorTerms:
                              - matchExpressions:
                                - key: omnistrate.com/managed-by
                                  operator: In
                                  values:
                                  - omnistrate
                    valuesFile:
                      gitConfiguration:
                        accessToken: my-token
                        commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                        referenceName: tags/v1.0.0
                        repositoryUrl: https://github.com/username/myrepo
                        userName: my-user
                      path: helm/values/production.yaml
                  - name: my-layer
                    scope:
                      '{{ $sys.cloudProviderName }}': aws
                    values:
                      global:
                        affinity:
                          nodeAffinity:
                            requiredDuringSchedulingIgnoredDuringExecution:
                              nodeSelectorTerms:
                              - matchExpressions:
                                - key: omnistrate.com/managed-by
                                  operator: In
                                  values:
                                  - omnistrate
                    valuesFile:
                      gitConfiguration:
                        accessToken: my-token
                        commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                        referenceName: tags/v1.0.0
                        repositoryUrl: https://github.com/username/myrepo
                        userName: my-user
                      path: helm/values/production.yaml
                  namespace: default
                  password: my-password
                  username: my-user
                - chartName: my-chart
                  chartRepoName: my-repo
                  chartRepoUrl: https://my-repo.com
                  chartValues:
                    key1: value1
                    key2: 3
                    key3:
                      key4: value4
                  chartVersion: 1.0.0
                  layeredChartValues:
                  - name: my-layer
                    scope:
                      '{{ $sys.cloudProviderName }}': aws
                    values:
                      global:
                        affinity:
                          nodeAffinity:
                            requiredDuringSchedulingIgnoredDuringExecution:
                              nodeSelectorTerms:
                              - matchExpressions:
                                - key: omnistrate.com/managed-by
                                  operator: In
                                  values:
                                  - omnistrate
                    valuesFile:
                      gitConfiguration:
                        accessToken: my-token
                        commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                        referenceName: tags/v1.0.0
                        repositoryUrl: https://github.com/username/myrepo
                        userName: my-user
                      path: helm/values/production.yaml
                  - name: my-layer
                    scope:
                      '{{ $sys.cloudProviderName }}': aws
                    values:
                      global:
                        affinity:
                          nodeAffinity:
                            requiredDuringSchedulingIgnoredDuringExecution:
                              nodeSelectorTerms:
                              - matchExpressions:
                                - key: omnistrate.com/managed-by
                                  operator: In
                                  values:
                                  - omnistrate
                    valuesFile:
                      gitConfiguration:
                        accessToken: my-token
                        commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                        referenceName: tags/v1.0.0
                        repositoryUrl: https://github.com/username/myrepo
                        userName: my-user
                      path: helm/values/production.yaml
                  namespace: default
                  password: my-password
                  username: my-user
                - chartName: my-chart
                  chartRepoName: my-repo
                  chartRepoUrl: https://my-repo.com
                  chartValues:
                    key1: value1
                    key2: 3
                    key3:
                      key4: value4
                  chartVersion: 1.0.0
                  layeredChartValues:
                  - name: my-layer
                    scope:
                      '{{ $sys.cloudProviderName }}': aws
                    values:
                      global:
                        affinity:
                          nodeAffinity:
                            requiredDuringSchedulingIgnoredDuringExecution:
                              nodeSelectorTerms:
                              - matchExpressions:
                                - key: omnistrate.com/managed-by
                                  operator: In
                                  values:
                                  - omnistrate
                    valuesFile:
                      gitConfiguration:
                        accessToken: my-token
                        commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                        referenceName: tags/v1.0.0
                        repositoryUrl: https://github.com/username/myrepo
                        userName: my-user
                      path: helm/values/production.yaml
                  - name: my-layer
                    scope:
                      '{{ $sys.cloudProviderName }}': aws
                    values:
                      global:
                        affinity:
                          nodeAffinity:
                            requiredDuringSchedulingIgnoredDuringExecution:
                              nodeSelectorTerms:
                              - matchExpressions:
                                - key: omnistrate.com/managed-by
                                  operator: In
                                  values:
                                  - omnistrate
                    valuesFile:
                      gitConfiguration:
                        accessToken: my-token
                        commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                        referenceName: tags/v1.0.0
                        repositoryUrl: https://github.com/username/myrepo
                        userName: my-user
                      path: helm/values/production.yaml
                  namespace: default
                  password: my-password
                  username: my-user
              schema:
                $ref: "#/components/schemas/ListHelmPackagesResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list helm packages"
      security:
      - api_key_header_Authorization: []
      summary: ListHelmPackages helm-package-api
      tags:
      - helm-package-api
    put:
      operationId: helm-package-api#SaveHelmPackage
      requestBody:
        content:
          application/json:
            example:
              helmPackage:
                chartName: my-chart
                chartRepoName: my-repo
                chartRepoUrl: https://my-repo.com
                chartValues:
                  key1: value1
                  key2: 3
                  key3:
                    key4: value4
                chartVersion: 1.0.0
                layeredChartValues:
                - name: my-layer
                  scope:
                    '{{ $sys.cloudProviderName }}': aws
                  values:
                    global:
                      affinity:
                        nodeAffinity:
                          requiredDuringSchedulingIgnoredDuringExecution:
                            nodeSelectorTerms:
                            - matchExpressions:
                              - key: omnistrate.com/managed-by
                                operator: In
                                values:
                                - omnistrate
                  valuesFile:
                    gitConfiguration:
                      accessToken: my-token
                      commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    path: helm/values/production.yaml
                - name: my-layer
                  scope:
                    '{{ $sys.cloudProviderName }}': aws
                  values:
                    global:
                      affinity:
                        nodeAffinity:
                          requiredDuringSchedulingIgnoredDuringExecution:
                            nodeSelectorTerms:
                            - matchExpressions:
                              - key: omnistrate.com/managed-by
                                operator: In
                                values:
                                - omnistrate
                  valuesFile:
                    gitConfiguration:
                      accessToken: my-token
                      commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    path: helm/values/production.yaml
                - name: my-layer
                  scope:
                    '{{ $sys.cloudProviderName }}': aws
                  values:
                    global:
                      affinity:
                        nodeAffinity:
                          requiredDuringSchedulingIgnoredDuringExecution:
                            nodeSelectorTerms:
                            - matchExpressions:
                              - key: omnistrate.com/managed-by
                                operator: In
                                values:
                                - omnistrate
                  valuesFile:
                    gitConfiguration:
                      accessToken: my-token
                      commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    path: helm/values/production.yaml
                - name: my-layer
                  scope:
                    '{{ $sys.cloudProviderName }}': aws
                  values:
                    global:
                      affinity:
                        nodeAffinity:
                          requiredDuringSchedulingIgnoredDuringExecution:
                            nodeSelectorTerms:
                            - matchExpressions:
                              - key: omnistrate.com/managed-by
                                operator: In
                                values:
                                - omnistrate
                  valuesFile:
                    gitConfiguration:
                      accessToken: my-token
                      commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    path: helm/values/production.yaml
                namespace: default
                password: my-password
                username: my-user
            schema:
              $ref: "#/components/schemas/SaveHelmPackageRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a helm\
            \ package"
      security:
      - api_key_header_Authorization: []
      summary: SaveHelmPackage helm-package-api
      tags:
      - helm-package-api
  /2022-09-01-00/helm-package/{chartName}/{chartVersion}:
    delete:
      operationId: helm-package-api#DeleteHelmPackage
      parameters:
      - description: The chart name of the Helm package to delete
        example: my-chart
        explode: false
        in: path
        name: chartName
        required: true
        schema:
          description: The chart name of the Helm package to delete
          example: my-chart
          type: string
        style: simple
      - description: The chart version of the Helm package to delete
        example: 1.0.0
        explode: false
        in: path
        name: chartVersion
        required: true
        schema:
          description: The chart version of the Helm package to delete
          example: 1.0.0
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request to delete a helm\
            \ package"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a helm\
            \ package"
      security:
      - api_key_header_Authorization: []
      summary: DeleteHelmPackage helm-package-api
      tags:
      - helm-package-api
    get:
      operationId: helm-package-api#DescribeHelmPackage
      parameters:
      - description: The chart name of the Helm package to describe
        example: my-chart
        explode: false
        in: path
        name: chartName
        required: true
        schema:
          description: The chart name of the Helm package to describe
          example: my-chart
          type: string
        style: simple
      - description: The chart version of the Helm package to describe
        example: 1.0.0
        explode: false
        in: path
        name: chartVersion
        required: true
        schema:
          description: The chart version of the Helm package to describe
          example: 1.0.0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                chartName: my-chart
                chartRepoName: my-repo
                chartRepoUrl: https://my-repo.com
                chartValues:
                  key1: value1
                  key2: 3
                  key3:
                    key4: value4
                chartVersion: 1.0.0
                layeredChartValues:
                - name: my-layer
                  scope:
                    '{{ $sys.cloudProviderName }}': aws
                  values:
                    global:
                      affinity:
                        nodeAffinity:
                          requiredDuringSchedulingIgnoredDuringExecution:
                            nodeSelectorTerms:
                            - matchExpressions:
                              - key: omnistrate.com/managed-by
                                operator: In
                                values:
                                - omnistrate
                  valuesFile:
                    gitConfiguration:
                      accessToken: my-token
                      commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    path: helm/values/production.yaml
                - name: my-layer
                  scope:
                    '{{ $sys.cloudProviderName }}': aws
                  values:
                    global:
                      affinity:
                        nodeAffinity:
                          requiredDuringSchedulingIgnoredDuringExecution:
                            nodeSelectorTerms:
                            - matchExpressions:
                              - key: omnistrate.com/managed-by
                                operator: In
                                values:
                                - omnistrate
                  valuesFile:
                    gitConfiguration:
                      accessToken: my-token
                      commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    path: helm/values/production.yaml
                - name: my-layer
                  scope:
                    '{{ $sys.cloudProviderName }}': aws
                  values:
                    global:
                      affinity:
                        nodeAffinity:
                          requiredDuringSchedulingIgnoredDuringExecution:
                            nodeSelectorTerms:
                            - matchExpressions:
                              - key: omnistrate.com/managed-by
                                operator: In
                                values:
                                - omnistrate
                  valuesFile:
                    gitConfiguration:
                      accessToken: my-token
                      commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    path: helm/values/production.yaml
                - name: my-layer
                  scope:
                    '{{ $sys.cloudProviderName }}': aws
                  values:
                    global:
                      affinity:
                        nodeAffinity:
                          requiredDuringSchedulingIgnoredDuringExecution:
                            nodeSelectorTerms:
                            - matchExpressions:
                              - key: omnistrate.com/managed-by
                                operator: In
                                values:
                                - omnistrate
                  valuesFile:
                    gitConfiguration:
                      accessToken: my-token
                      commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    path: helm/values/production.yaml
                namespace: default
                password: my-password
                username: my-user
              schema:
                $ref: "#/components/schemas/HelmPackage"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request to describe a\
            \ helm package"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a helm\
            \ package"
      security:
      - api_key_header_Authorization: []
      summary: DescribeHelmPackage helm-package-api
      tags:
      - helm-package-api
  /2022-09-01-00/identity-provider:
    get:
      operationId: identity-provider-api#ListIdentityProviders
      responses:
        "200":
          content:
            application/json:
              example:
                identityProviders:
                - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
                  clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
                  clientSecret: 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
                  disabled: false
                  emailIdentifiers: company.com
                  environmentType: production
                  id: Quibusdam sint qui adipisci.
                  identityProviderName: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
                  loginButtonIconUrl: https://example.com/icon.png
                  loginButtonText: Login with Google
                  name: Google for my company
                  scopes: openid email profile
                  status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                  tokenEndpoint: https://oauth2.googleapis.com/token
                  userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
                - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
                  clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
                  clientSecret: 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
                  disabled: false
                  emailIdentifiers: company.com
                  environmentType: production
                  id: Quibusdam sint qui adipisci.
                  identityProviderName: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
                  loginButtonIconUrl: https://example.com/icon.png
                  loginButtonText: Login with Google
                  name: Google for my company
                  scopes: openid email profile
                  status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                  tokenEndpoint: https://oauth2.googleapis.com/token
                  userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
                - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
                  clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
                  clientSecret: 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
                  disabled: false
                  emailIdentifiers: company.com
                  environmentType: production
                  id: Quibusdam sint qui adipisci.
                  identityProviderName: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
                  loginButtonIconUrl: https://example.com/icon.png
                  loginButtonText: Login with Google
                  name: Google for my company
                  scopes: openid email profile
                  status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                  tokenEndpoint: https://oauth2.googleapis.com/token
                  userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
              schema:
                $ref: "#/components/schemas/ListIdentityProvidersResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list identity\
            \ providers"
      security:
      - api_key_header_Authorization: []
      summary: ListIdentityProviders identity-provider-api
      tags:
      - identity-provider-api
    post:
      operationId: identity-provider-api#CreateIdentityProvider
      requestBody:
        content:
          application/json:
            example:
              authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
              clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
              clientSecret: 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
              disabled: false
              emailIdentifiers: company.com
              environmentType: Quod porro qui atque fugit.
              identityProviderName: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
              loginButtonIconUrl: https://example.com/icon.png
              loginButtonText: Login with Google
              name: Google for my company
              scopes: openid email profile
              tokenEndpoint: https://oauth2.googleapis.com/token
              userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
            schema:
              $ref: "#/components/schemas/CreateIdentityProviderRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Consectetur ut.
              schema:
                description: Identity Provider ID created
                example: Atque inventore quo dolores consequatur.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create an identity\
            \ provider"
      security:
      - api_key_header_Authorization: []
      summary: CreateIdentityProvider identity-provider-api
      tags:
      - identity-provider-api
  /2022-09-01-00/identity-provider-render:
    get:
      operationId: identity-provider-api#RenderIdentityProviders
      parameters:
      - allowEmptyValue: true
        description: The environment type to render the identity provider for
        example: production
        explode: true
        in: query
        name: environmentType
        required: false
        schema:
          description: The environment type to render the identity provider for
          example: production
          type: string
        style: form
      - allowEmptyValue: true
        description: The URL to redirect to after successful authentication
        example: https://example.com/redirect
        explode: true
        in: query
        name: redirectUrl
        required: false
        schema:
          description: The URL to redirect to after successful authentication
          example: https://example.com/redirect
          type: string
        style: form
      - allowEmptyValue: true
        description: Login hint to pre-fill the identity provider login form
        example: user@domain.com
        explode: true
        in: query
        name: loginHint
        required: false
        schema:
          description: Login hint to pre-fill the identity provider login form
          example: user@domain.com
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                identityProviders:
                - emailIdentifiers: company.com
                  id: Voluptas excepturi eaque est et dolorem.
                  identityProviderName: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
                  loginButtonIconUrl: https://example.com/icon.png
                  loginButtonText: Login with Google
                  name: Google for my company
                  renderedAuthorizationEndpoint: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid
                    email profile&state=idpName-guid
                  state: state
                - emailIdentifiers: company.com
                  id: Voluptas excepturi eaque est et dolorem.
                  identityProviderName: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
                  loginButtonIconUrl: https://example.com/icon.png
                  loginButtonText: Login with Google
                  name: Google for my company
                  renderedAuthorizationEndpoint: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid
                    email profile&state=idpName-guid
                  state: state
              schema:
                $ref: "#/components/schemas/RenderIdentityProvidersResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to verify identity\
            \ provider"
      security:
      - api_key_header_Authorization: []
      summary: RenderIdentityProviders identity-provider-api
      tags:
      - identity-provider-api
  /2022-09-01-00/identity-provider-types:
    get:
      operationId: identity-provider-api#ListIdentityProviderTypes
      responses:
        "200":
          content:
            application/json:
              example:
                identityProviderTypes:
                - SupportCustomEndpoints: true
                  SupportCustomScopes: false
                  identityProviderName: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
                - SupportCustomEndpoints: true
                  SupportCustomScopes: false
                  identityProviderName: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
                - SupportCustomEndpoints: true
                  SupportCustomScopes: false
                  identityProviderName: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
              schema:
                $ref: "#/components/schemas/ListIdentityProviderTypesResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list identity\
            \ providers"
      security:
      - api_key_header_Authorization: []
      summary: ListIdentityProviderTypes identity-provider-api
      tags:
      - identity-provider-api
  /2022-09-01-00/identity-provider/{id}:
    delete:
      operationId: identity-provider-api#DeleteIdentityProvider
      parameters:
      - description: The Identity Provider ID
        example: idp-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Identity Provider
          example: Delectus laudantium saepe aut iusto voluptatem ipsa.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list identity\
            \ providers"
      security:
      - api_key_header_Authorization: []
      summary: DeleteIdentityProvider identity-provider-api
      tags:
      - identity-provider-api
    get:
      operationId: identity-provider-api#DescribeIdentityProvider
      parameters:
      - description: The Identity Provider ID
        example: idp-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Identity Provider
          example: Quia quaerat est.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
                clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
                clientSecret: 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
                disabled: false
                emailIdentifiers: company.com
                environmentType: production
                id: Eveniet officiis et tenetur adipisci.
                identityProviderName: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
                loginButtonIconUrl: https://example.com/icon.png
                loginButtonText: Login with Google
                name: Google for my company
                scopes: openid email profile
                status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                tokenEndpoint: https://oauth2.googleapis.com/token
                userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
              schema:
                $ref: "#/components/schemas/DescribeIdentityProviderResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list identity\
            \ providers"
      security:
      - api_key_header_Authorization: []
      summary: DescribeIdentityProvider identity-provider-api
      tags:
      - identity-provider-api
    patch:
      operationId: identity-provider-api#UpdateIdentityProvider
      parameters:
      - description: The Identity Provider ID
        example: idp-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Identity Provider
          example: Ut laboriosam deserunt amet dolorem quo.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
              clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
              clientSecret: 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
              disabled: false
              emailIdentifiers: company.com
              environmentType: production
              loginButtonIconUrl: https://example.com/icon.png
              loginButtonText: Login with Google
              name: Google for my company
              scopes: openid email profile
              tokenEndpoint: https://oauth2.googleapis.com/token
              userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
            schema:
              $ref: "#/components/schemas/UpdateIdentityProviderRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list identity\
            \ providers"
      security:
      - api_key_header_Authorization: []
      summary: UpdateIdentityProvider identity-provider-api
      tags:
      - identity-provider-api
    post:
      operationId: identity-provider-api#VerifyIdentityProvider
      parameters:
      - description: The Identity Provider ID
        example: idp-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Identity Provider
          example: Natus quam harum doloremque nobis et aliquam.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
                clientSecret: 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
                id: Sint suscipit harum.
                identityProviderName: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
                name: Google for my company
                status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
              schema:
                $ref: "#/components/schemas/VerifyIdentityProviderResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to verify identity\
            \ provider"
      security:
      - api_key_header_Authorization: []
      summary: VerifyIdentityProvider identity-provider-api
      tags:
      - identity-provider-api
  /2022-09-01-00/image-registry:
    get:
      operationId: image-registry-api#ListImageRegistry
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - ir-12345678
                - ir-abcdefgh
                - ir-abcd5678
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListImageRegistryResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list image registries"
      security:
      - api_key_header_Authorization: []
      summary: ListImageRegistry image-registry-api
      tags:
      - image-registry-api
    post:
      operationId: image-registry-api#CreateImageRegistry
      requestBody:
        content:
          application/json:
            example:
              description: DockerHub is a public Docker Image Registry
              host: docker.io
              name: DockerHub
              password: mypassword
              username: myusername
            schema:
              $ref: "#/components/schemas/CreateImageRegistryRequest2"
        required: true
      responses:
        "202":
          content:
            application/json:
              example: Vel dolorum voluptatem.
              schema:
                description: Image Registry ID created
                example: Ut pariatur animi accusamus.
                type: string
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create an image\
            \ registry"
      security:
      - api_key_header_Authorization: []
      summary: CreateImageRegistry image-registry-api
      tags:
      - image-registry-api
  /2022-09-01-00/image-registry/{id}:
    delete:
      operationId: image-registry-api#DeleteImageRegistry
      parameters:
      - description: The ID of the Image Registry
        example: ir-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Registry
          example: Qui unde ad corrupti dignissimos neque voluptatem.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete an image\
            \ registry"
      security:
      - api_key_header_Authorization: []
      summary: DeleteImageRegistry image-registry-api
      tags:
      - image-registry-api
    get:
      operationId: image-registry-api#DescribeImageRegistry
      parameters:
      - description: The ID of the Image Registry
        example: ir-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Registry
          example: Fuga quam.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: DockerHub is a public Docker Image Registry
                host: docker.io
                id: Voluptas voluptas.
                name: DockerHub
                password: mypassword
                username: myusername
              schema:
                $ref: "#/components/schemas/DescribeImageRegistryResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe an image\
            \ registry"
      security:
      - api_key_header_Authorization: []
      summary: DescribeImageRegistry image-registry-api
      tags:
      - image-registry-api
    patch:
      operationId: image-registry-api#UpdateImageRegistry
      parameters:
      - description: The ID of the Image Registry
        example: ir-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Registry
          example: Omnis expedita temporibus unde dolorem.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: DockerHub is a public Docker Image Registry
              host: docker.io
              name: DockerHub
              password: mypassword
              username: myusername
            schema:
              $ref: "#/components/schemas/UpdateImageRegistryRequest2"
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update an image\
            \ registry"
      security:
      - api_key_header_Authorization: []
      summary: UpdateImageRegistry image-registry-api
      tags:
      - image-registry-api
  /2022-09-01-00/invite-user:
    post:
      operationId: users-api#InviteUser
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
            schema:
              $ref: "#/components/schemas/InviteUserRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to invite user"
      security:
      - api_key_header_Authorization: []
      summary: InviteUser users-api
      tags:
      - users-api
  /2022-09-01-00/invoice:
    get:
      operationId: invoice-api#ListInvoices
      parameters:
      - allowEmptyValue: true
        description: "Billing provider. If specified, list invoices for the specified\
          \ billing provider."
        example: STRIPE
        explode: true
        in: query
        name: billingProvider
        required: false
        schema:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                invoices:
                - currency: USD
                  dueDate: 2023-10-01T00:00:00Z
                  invoiceDate: 2021-01-01T00:00:00.000Z
                  invoiceId: in_1234568
                  invoiceNumber: 2021-01-01-1234567890
                  invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
                  invoiceStatus: draft|open|paid|uncollectible|void
                  invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
                  paymentTerms: Net 30
                  taxAmount: 10
                  totalAmount: 110
                  totalAmountWithoutTax: 100
                - currency: USD
                  dueDate: 2023-10-01T00:00:00Z
                  invoiceDate: 2021-01-01T00:00:00.000Z
                  invoiceId: in_1234568
                  invoiceNumber: 2021-01-01-1234567890
                  invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
                  invoiceStatus: draft|open|paid|uncollectible|void
                  invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
                  paymentTerms: Net 30
                  taxAmount: 10
                  totalAmount: 110
                  totalAmountWithoutTax: 100
              schema:
                $ref: "#/components/schemas/ListInvoicesResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list invoices"
      security:
      - api_key_header_Authorization: []
      summary: ListInvoices invoice-api
      tags:
      - invoice-api
  /2022-09-01-00/json-schema:
    get:
      operationId: schema-api#GetJSONSchema
      parameters:
      - allowEmptyValue: true
        description: The type of the schema to retrieve
        example: x-omnistrate-service-plan|x-omnistrate-integrations|x-omnistrate-mode-internal|x-omnistrate-proxy-type|x-omnistrate-actionhooks|x-omnistrate-api-params|x-omnistrate-capabilities|x-omnistrate-compute|x-omnistrate-job-config|x-omnistrate-storage|x-omnistrate-image-registry-attributes|x-omnistrate-load-balancer|compose|service-plan|deployment-cell-amenities|system-parameters|services-orchestration-create-dsl|service-orchestration-modify-dsl
        explode: true
        in: query
        name: type
        required: true
        schema:
          description: The type of the schema to retrieve
          example: x-omnistrate-service-plan|x-omnistrate-integrations|x-omnistrate-mode-internal|x-omnistrate-proxy-type|x-omnistrate-actionhooks|x-omnistrate-api-params|x-omnistrate-capabilities|x-omnistrate-compute|x-omnistrate-job-config|x-omnistrate-storage|x-omnistrate-image-registry-attributes|x-omnistrate-load-balancer|compose|service-plan|deployment-cell-amenities|system-parameters|services-orchestration-create-dsl|service-orchestration-modify-dsl
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example: Eaque odio vitae.
              schema:
                example: Quo incidunt at et ea animi.
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested schema is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get JSON schema"
      summary: GetJSONSchema schema-api
      tags:
      - schema-api
  /2022-09-01-00/limit:
    get:
      operationId: limit-api#ListLimit
      requestBody:
        content:
          application/json:
            example:
              family: SERVICE
            schema:
              $ref: "#/components/schemas/ListLimitRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                keys:
                - MAX_VIRTUAL_CORES_PER_RESOURCE
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListLimitResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list limit"
      security:
      - api_key_header_Authorization: []
      summary: ListLimit limit-api
      tags:
      - limit-api
  /2022-09-01-00/limit/family/{family}/key/{key}:
    delete:
      operationId: limit-api#DeleteLimit
      parameters:
      - description: Limit family
        example: COMPUTE_INFRA
        explode: false
        in: path
        name: family
        required: true
        schema:
          description: The limit family
          example: SERVICE
          type: string
        style: simple
      - description: Unique key to identify the limit
        example: MAX_VIRTUAL_CORES_PER_RESOURCE
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: Unique key to identify the limit
          example: MAX_VIRTUAL_CORES_PER_RESOURCE
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete limit"
      security:
      - api_key_header_Authorization: []
      summary: DeleteLimit limit-api
      tags:
      - limit-api
    get:
      operationId: limit-api#DescribeLimit
      parameters:
      - description: Limit family
        example: COMPUTE_INFRA
        explode: false
        in: path
        name: family
        required: true
        schema:
          description: The limit family
          example: SERVICE
          type: string
        style: simple
      - description: Unique key to identify the limit
        example: MAX_VIRTUAL_CORES_PER_RESOURCE
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: Unique key to identify the limit
          example: MAX_VIRTUAL_CORES_PER_RESOURCE
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: A premium limit
                family: SERVICE
                key: MAX_VIRTUAL_CORES_PER_RESOURCE
                modifiable: true
                name: Premium Tier
                value: 4
              schema:
                $ref: "#/components/schemas/DescribeLimitResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe limit"
      security:
      - api_key_header_Authorization: []
      summary: DescribeLimit limit-api
      tags:
      - limit-api
    patch:
      operationId: limit-api#UpdateLimit
      parameters:
      - description: Limit family
        example: COMPUTE_INFRA
        explode: false
        in: path
        name: family
        required: true
        schema:
          description: The limit family
          example: SERVICE
          type: string
        style: simple
      - description: Unique key to identify the limit
        example: MAX_VIRTUAL_CORES_PER_RESOURCE
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: Unique key to identify the limit
          example: MAX_VIRTUAL_CORES_PER_RESOURCE
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A premium limit
              name: Premium Tier
              value: 4
            schema:
              $ref: "#/components/schemas/UpdateLimitRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update limit"
      security:
      - api_key_header_Authorization: []
      summary: UpdateLimit limit-api
      tags:
      - limit-api
  /2022-09-01-00/login-with-identity-provider:
    post:
      operationId: signin-api#LoginWithIdentityProvider
      requestBody:
        content:
          application/json:
            example:
              authorizationCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
              companyDescription: We sell xyz database software
              companyUrl: https://www.mywebsite.com
              deviceCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
              identityProviderName: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
              invitedEmail: abc@gmail.com
              legalCompanyName: mywebsite
              redirectUri: https://www.example/redirect
            schema:
              $ref: "#/components/schemas/LoginWithIdentityProviderRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                jwtToken: ""
              schema:
                $ref: "#/components/schemas/LoginWithIdentityProviderResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to login with identity\
            \ provider"
      summary: LoginWithIdentityProvider signin-api
      tags:
      - signin-api
  /2022-09-01-00/logout:
    post:
      operationId: users-api#Logout
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to logout"
      security:
      - api_key_header_Authorization: []
      summary: Logout users-api
      tags:
      - users-api
  /2022-09-01-00/org-users:
    get:
      operationId: users-api#DescribeUsersByOrg
      responses:
        "200":
          content:
            application/json:
              example:
                Id: org-aKQ8G13QeR
                orgUsers:
                - email: abc@gmail.com
                  invitedAt: 2023-01-10T00:00:00Z
                  name: John Doe
                  roleType: reader
                  userId: user-abcd1234
              schema:
                $ref: "#/components/schemas/DescribeUsersByOrgResult"
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: DescribeUsersByOrg users-api
      tags:
      - users-api
  /2022-09-01-00/plan:
    get:
      operationId: plan-api#DescribePlan
      responses:
        "200":
          content:
            application/json:
              example:
                modifiedAt: 2023-01-01T00:00:00Z
                paymentConfigured: true
                paymentInfoPortalURL: https://billing.stripe.com/p/session/abc123
                planCoreHourCost: 0.05
                planDescription: The starter plan is priced at 'X' units
                planFrequency: MONTHLY
                planMonthlyCost: 49
                planName: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
                startDate: 2023-01-01
              schema:
                $ref: "#/components/schemas/DescribePlanResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to add plan"
      security:
      - api_key_header_Authorization: []
      summary: DescribePlan plan-api
      tags:
      - plan-api
    post:
      operationId: plan-api#ChangePlan
      requestBody:
        content:
          application/json:
            example:
              planName: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
            schema:
              $ref: "#/components/schemas/ChangePlanRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to add plan"
      security:
      - api_key_header_Authorization: []
      summary: ChangePlan plan-api
      tags:
      - plan-api
  /2022-09-01-00/region/{id}:
    get:
      operationId: region-api#DescribeRegion
      parameters:
      - description: ID of the Region
        example: region-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Region
          example: Sint quod voluptas.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cloudProviderId: Magnam explicabo.
                cloudProviderName: aws|azure|gcp|all
                code: us-east-1
                description: US East (N. Virginia)
                id: Facere ut quae quam quibusdam quisquam.
              schema:
                $ref: "#/components/schemas/DescribeRegionResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a region"
      security:
      - api_key_header_Authorization: []
      summary: DescribeRegion region-api
      tags:
      - region-api
  /2022-09-01-00/region/cloudprovider/{cloudProviderName}:
    get:
      operationId: region-api#ListRegion
      parameters:
      - allowEmptyValue: true
        description: "Service ID. If specified together with serviceModelId,list the\
          \ regions of the service model. Otherwise list all regions."
        example: s-12345678
        explode: true
        in: query
        name: serviceId
        required: false
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: form
      - allowEmptyValue: true
        description: "Service model ID. If specified together with serviceId,list\
          \ the regions of the service model. Otherwise list all regions."
        example: sm-12345678
        explode: true
        in: query
        name: serviceModelId
        required: false
        schema:
          description: ID of a Service Model
          example: Consequatur illo ut.
          type: string
        style: form
      - allowEmptyValue: true
        description: "Product tier ID. If specified together with serviceId,list the\
          \ regions of the product tier. Otherwise list all regions."
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Quis et magni distinctio vel et autem.
          type: string
        style: form
      - allowEmptyValue: true
        description: "Model type. If specified, list regions for the specified model\
          \ type."
        example: CUSTOMER_HOSTED
        explode: true
        in: query
        name: modelType
        required: false
        schema:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        style: form
      - description: The cloud provider for this compute instance type config
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - region-12345678
                - region-87654321
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListRegionsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list regions"
      security:
      - api_key_header_Authorization: []
      summary: ListRegion region-api
      tags:
      - region-api
  /2022-09-01-00/region/code/{code}/cloud-provider/{cloudProviderName}:
    get:
      operationId: region-api#GetRegionByCode
      parameters:
      - description: Cloud-provider native region code
        example: us-east-1
        explode: false
        in: path
        name: code
        required: true
        schema:
          description: Cloud-provider native region code
          example: us-east-1
          minLength: 1
          type: string
        style: simple
      - description: The cloud provider for this compute instance type config
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: Dignissimos id praesentium necessitatibus aut autem ea.
              schema:
                example: Quos qui.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get a region by\
            \ code"
      security:
      - api_key_header_Authorization: []
      summary: GetRegionByCode region-api
      tags:
      - region-api
  /2022-09-01-00/reset-password:
    post:
      operationId: signup-api#ResetPassword
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to reset password"
      summary: ResetPassword signup-api
      tags:
      - signup-api
  /2022-09-01-00/resource-instance:
    get:
      operationId: resource-instance-api#ListAllResourceInstances
      parameters:
      - allowEmptyValue: true
        description: The environment type to filter by
        example: DEV
        explode: true
        in: query
        name: environmentType
        required: false
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                nextPageToken: next-token
                resourceInstances:
                - active: true
                  autoscalingEnabled: true
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  backupStatus:
                    backupPeriodInHours: 2
                    backupRetentionInDays: 7
                    earliestRestoreTime: 2021-09-01T00:00:00Z
                    lastBackupTime: 2021-09-01T00:00:00Z
                  cloud_provider: aws
                  created_at: 2023-01-10T00:00:00Z
                  createdByUserId: Qui accusantium qui dicta ea.
                  createdByUserName: John Doe
                  currentReplicas: "2"
                  customNetworkDetail:
                    cidr: 10.177.0.0/16
                    id: Ut impedit molestias aut necessitatibus.
                    name: Prod us-east-1
                  customTags:
                  - key: customKey1
                    value: customValue1
                  - key: customKey2
                    value: customValue2
                  detailedNetworkTopology:
                    r-abcd1234:
                      allowedIPRanges:
                      - 0.0.0.0/0
                      clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      clusterPorts:
                      - 3306
                      isJob: false
                      jobMetrics:
                      - additionalData:
                          exitCode: 0
                          status: Succeeded
                        endTime: 2023-01-01T10:05:00Z
                        metricType: cpu_core_seconds
                        startTime: 2023-01-01T10:00:00Z
                        value: 120.5
                      - additionalData:
                          peakMemoryUsage: 512MB
                        endTime: 2023-01-01T10:05:00Z
                        metricType: memory_mb_seconds
                        startTime: 2023-01-01T10:00:00Z
                        value: 2560
                      main: true
                      networkingType: PUBLIC
                      nodes:
                      - availabilityZone: us-east-2a
                        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        healthStatus: healthy
                        id: primary-0
                        ports:
                        - 3306
                        status: RUNNING
                      privateNetworkCIDR: 10.0.0.2/24
                      privateNetworkID: n-1234abcd
                      publiclyAccessible: true
                      resourceKey: primary
                      resourceName: Primary MySQL Instance
                  externalPayerId: external-payer-id-1234
                  gcpProjectID: my-project
                  highAvailability: true
                  id: instance-abcd1234
                  instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
                  kubernetesDashboardEndpoint:
                    dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                    deploymentCellID: hc-12345678
                  last_modified_at: 2023-01-20T00:00:00Z
                  maintenanceTasks:
                    backups:
                    - backup_id: bk-12345678
                    upgrade_paths:
                    - upgrade_path_id: up-9876543
                      upgrade_path_instance_status: PENDING
                      upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                      upgrade_path_status: IN_PROGRESS
                    - upgrade_path_id: up-12345548
                      upgrade_path_instance_status: PENDING
                      upgrade_path_released_at: 2023-01-01T09:00:00Z
                      upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                      upgrade_path_status: SCHEDULED
                  maxReplicas: "1"
                  minReplicas: "1"
                  network_type: PUBLIC|INTERNAL
                  productTierFeatures:
                    LOGS:
                      auth:
                        password: px3c4d5f6g7h8i
                        username: abcd1234
                      enabled: true
                      websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                    METRICS:
                      enabled: false
                  region: us-east-1
                  resourceID: Non sed omnis praesentium.
                  result_params:
                    param1: value1
                    param2: value2
                  serverlessEnabled: true
                  status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                  subscriptionId: sub-abcd1234
                  subscriptionLicense:
                    certificateBase64: public-cert
                    expirationDate: 2024-01-01T10:00:00Z
                    licenseBase64: license-file
                  subscriptionStatus: ACTIVE|SUSPENDED|TERMINATED|CANCELLED
                  tierVersion: "1.0"
                - active: true
                  autoscalingEnabled: true
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  backupStatus:
                    backupPeriodInHours: 2
                    backupRetentionInDays: 7
                    earliestRestoreTime: 2021-09-01T00:00:00Z
                    lastBackupTime: 2021-09-01T00:00:00Z
                  cloud_provider: aws
                  created_at: 2023-01-10T00:00:00Z
                  createdByUserId: Qui accusantium qui dicta ea.
                  createdByUserName: John Doe
                  currentReplicas: "2"
                  customNetworkDetail:
                    cidr: 10.177.0.0/16
                    id: Ut impedit molestias aut necessitatibus.
                    name: Prod us-east-1
                  customTags:
                  - key: customKey1
                    value: customValue1
                  - key: customKey2
                    value: customValue2
                  detailedNetworkTopology:
                    r-abcd1234:
                      allowedIPRanges:
                      - 0.0.0.0/0
                      clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      clusterPorts:
                      - 3306
                      isJob: false
                      jobMetrics:
                      - additionalData:
                          exitCode: 0
                          status: Succeeded
                        endTime: 2023-01-01T10:05:00Z
                        metricType: cpu_core_seconds
                        startTime: 2023-01-01T10:00:00Z
                        value: 120.5
                      - additionalData:
                          peakMemoryUsage: 512MB
                        endTime: 2023-01-01T10:05:00Z
                        metricType: memory_mb_seconds
                        startTime: 2023-01-01T10:00:00Z
                        value: 2560
                      main: true
                      networkingType: PUBLIC
                      nodes:
                      - availabilityZone: us-east-2a
                        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        healthStatus: healthy
                        id: primary-0
                        ports:
                        - 3306
                        status: RUNNING
                      privateNetworkCIDR: 10.0.0.2/24
                      privateNetworkID: n-1234abcd
                      publiclyAccessible: true
                      resourceKey: primary
                      resourceName: Primary MySQL Instance
                  externalPayerId: external-payer-id-1234
                  gcpProjectID: my-project
                  highAvailability: true
                  id: instance-abcd1234
                  instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
                  kubernetesDashboardEndpoint:
                    dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                    deploymentCellID: hc-12345678
                  last_modified_at: 2023-01-20T00:00:00Z
                  maintenanceTasks:
                    backups:
                    - backup_id: bk-12345678
                    upgrade_paths:
                    - upgrade_path_id: up-9876543
                      upgrade_path_instance_status: PENDING
                      upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                      upgrade_path_status: IN_PROGRESS
                    - upgrade_path_id: up-12345548
                      upgrade_path_instance_status: PENDING
                      upgrade_path_released_at: 2023-01-01T09:00:00Z
                      upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                      upgrade_path_status: SCHEDULED
                  maxReplicas: "1"
                  minReplicas: "1"
                  network_type: PUBLIC|INTERNAL
                  productTierFeatures:
                    LOGS:
                      auth:
                        password: px3c4d5f6g7h8i
                        username: abcd1234
                      enabled: true
                      websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                    METRICS:
                      enabled: false
                  region: us-east-1
                  resourceID: Non sed omnis praesentium.
                  result_params:
                    param1: value1
                    param2: value2
                  serverlessEnabled: true
                  status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                  subscriptionId: sub-abcd1234
                  subscriptionLicense:
                    certificateBase64: public-cert
                    expirationDate: 2024-01-01T10:00:00Z
                    licenseBase64: license-file
                  subscriptionStatus: ACTIVE|SUSPENDED|TERMINATED|CANCELLED
                  tierVersion: "1.0"
              schema:
                $ref: "#/components/schemas/ListAllResourceInstancesResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list all resource\
            \ instances"
      security:
      - api_key_header_Authorization: []
      summary: ListAllResourceInstances resource-instance-api
      tags:
      - resource-instance-api
  /2022-09-01-00/resource-instance/{id}/deployment-cell-dashboard/token:
    post:
      operationId: resource-instance-api#GenerateTokenForDeploymentCellDashboard
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: true
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The instance ID whose deployment cell dashboard token is to be
          generated
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                deploymentCellID: hc-12345678
                expirationTimestamp: 2021-01-01T00:00:00Z
                token: token
              schema:
                $ref: "#/components/schemas/GenerateTokenForDeploymentCellDashboardResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to generate a kubernetes\
            \ dashboard token."
      security:
      - api_key_header_Authorization: []
      summary: GenerateTokenForDeploymentCellDashboard resource-instance-api
      tags:
      - resource-instance-api
  /2022-09-01-00/resource-instance/{id}/version-upgrade:
    post:
      operationId: resource-instance-api#UpgradeResourceInstanceVersion
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              productTierKey: premium
              resourceKey: mysql
              serviceAPIVersion: v1
              serviceEnvironmentKey: dev
              serviceKey: service-orchestration
              serviceModelKey: hosted
              serviceProviderId: Dolores labore occaecati adipisci rem repellat cum.
              targetVersion: "2.0"
            schema:
              $ref: "#/components/schemas/UpgradeResourceInstanceVersionRequest2"
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: UpgradeResourceInstanceVersion resource-instance-api
      tags:
      - resource-instance-api
  /2022-09-01-00/resource-instance/{instanceId}/audit-events:
    get:
      operationId: audit-events-api#ListAuditEventsForInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The ID of the resource instance
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: The ID of the resource instance
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - eventSource: "Customer, Infra or Maintenance"
                  id: Molestiae blanditiis.
                  message: instance-abcd1234 created
                  orgId: Cumque ipsum voluptatem vel nam enim quis.
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: Aperiam consectetur.
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: Molestiae blanditiis.
                  message: instance-abcd1234 created
                  orgId: Cumque ipsum voluptatem vel nam enim quis.
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: Aperiam consectetur.
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: Molestiae blanditiis.
                  message: instance-abcd1234 created
                  orgId: Cumque ipsum voluptatem vel nam enim quis.
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: Aperiam consectetur.
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: Molestiae blanditiis.
                  message: instance-abcd1234 created
                  orgId: Cumque ipsum voluptatem vel nam enim quis.
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: Aperiam consectetur.
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                ids:
                - event-12345678
                nextPageToken: token
              schema:
                $ref: "#/components/schemas/ListAuditEventsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list event"
      security:
      - api_key_header_Authorization: []
      summary: ListAuditEventsForInstance audit-events-api
      tags:
      - audit-events-api
  /2022-09-01-00/resource-instance/{instanceId}/event:
    get:
      operationId: audit-events-api#DeprecatedListAuditEventsForInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The ID of the resource instance
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: The ID of the resource instance
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - eventSource: "Customer, Infra or Maintenance"
                  id: Molestiae blanditiis.
                  message: instance-abcd1234 created
                  orgId: Cumque ipsum voluptatem vel nam enim quis.
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: Aperiam consectetur.
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: Molestiae blanditiis.
                  message: instance-abcd1234 created
                  orgId: Cumque ipsum voluptatem vel nam enim quis.
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: Aperiam consectetur.
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: Molestiae blanditiis.
                  message: instance-abcd1234 created
                  orgId: Cumque ipsum voluptatem vel nam enim quis.
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: Aperiam consectetur.
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: Molestiae blanditiis.
                  message: instance-abcd1234 created
                  orgId: Cumque ipsum voluptatem vel nam enim quis.
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: Aperiam consectetur.
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                ids:
                - event-12345678
                nextPageToken: token
              schema:
                $ref: "#/components/schemas/ListAuditEventsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list event"
      security:
      - api_key_header_Authorization: []
      summary: DeprecatedListAuditEventsForInstance audit-events-api
      tags:
      - audit-events-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}
  : get:
      operationId: resource-instance-api#ListResourceInstances
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Blanditiis inventore maxime placeat sint et soluta.
          type: string
        style: simple
      - description: The service key
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service key
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - instance-abcd1234
                - instance-abcd1235
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListResourceInstancesResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list resource\
            \ instances"
      security:
      - api_key_header_Authorization: []
      summary: ListResourceInstances resource-instance-api
      tags:
      - resource-instance-api
    post:
      operationId: resource-instance-api#CreateResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Fugit ipsum debitis quia.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              cloud_provider: aws
              custom_network_id: n-1234567890
              customTags:
              - key: customKey1
                value: customValue1
              - key: customKey2
                value: customValue2
              externalBillingId: external-billing-id-1234
              network_type: PUBLIC|INTERNAL
              onprem_platform: OpenShift
              productTierVersion: "1.0"
              region: us-east-1
              requestParams:
                param1: value1
                param2: value2
            schema:
              $ref: "#/components/schemas/CreateResourceInstanceRequest2"
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                id: Aut qui voluptatum ipsa et reprehenderit delectus.
              schema:
                $ref: "#/components/schemas/CreateServicesOrchestrationResponseBody"
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: CreateResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}
  : delete:
      operationId: resource-instance-api#DeleteResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Vero dicta vel non quod.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: DeleteResourceInstance resource-instance-api
      tags:
      - resource-instance-api
    get:
      operationId: resource-instance-api#DescribeResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Quam nostrum maxime consectetur hic ut itaque.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                active: true
                autoscalingEnabled: true
                awsAccountID: "123456789012"
                azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                backupStatus:
                  backupPeriodInHours: 2
                  backupRetentionInDays: 7
                  earliestRestoreTime: 2021-09-01T00:00:00Z
                  lastBackupTime: 2021-09-01T00:00:00Z
                cloud_provider: aws
                created_at: 2023-01-10T00:00:00Z
                createdByUserId: Repellat dolores tempora accusamus aliquam.
                createdByUserName: John Doe
                currentReplicas: "2"
                customNetworkDetail:
                  cidr: 10.177.0.0/16
                  id: Ut impedit molestias aut necessitatibus.
                  name: Prod us-east-1
                customTags:
                - key: customKey1
                  value: customValue1
                - key: customKey2
                  value: customValue2
                detailedNetworkTopology:
                  r-abcd1234:
                    allowedIPRanges:
                    - 0.0.0.0/0
                    clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    clusterPorts:
                    - 3306
                    isJob: false
                    jobMetrics:
                    - additionalData:
                        exitCode: 0
                        status: Succeeded
                      endTime: 2023-01-01T10:05:00Z
                      metricType: cpu_core_seconds
                      startTime: 2023-01-01T10:00:00Z
                      value: 120.5
                    - additionalData:
                        peakMemoryUsage: 512MB
                      endTime: 2023-01-01T10:05:00Z
                      metricType: memory_mb_seconds
                      startTime: 2023-01-01T10:00:00Z
                      value: 2560
                    main: true
                    networkingType: PUBLIC
                    nodes:
                    - availabilityZone: us-east-2a
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      healthStatus: healthy
                      id: primary-0
                      ports:
                      - 3306
                      status: RUNNING
                    privateNetworkCIDR: 10.0.0.2/24
                    privateNetworkID: n-1234abcd
                    publiclyAccessible: true
                    resourceKey: primary
                    resourceName: Primary MySQL Instance
                externalPayerId: external-payer-id-1234
                gcpProjectID: my-project
                highAvailability: true
                id: instance-abcd1234
                instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
                kubernetesDashboardEndpoint:
                  dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                  deploymentCellID: hc-12345678
                last_modified_at: 2023-01-20T00:00:00Z
                maintenanceTasks:
                  backups:
                  - backup_id: bk-12345678
                  upgrade_paths:
                  - upgrade_path_id: up-9876543
                    upgrade_path_instance_status: PENDING
                    upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                    upgrade_path_status: IN_PROGRESS
                  - upgrade_path_id: up-12345548
                    upgrade_path_instance_status: PENDING
                    upgrade_path_released_at: 2023-01-01T09:00:00Z
                    upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                    upgrade_path_status: SCHEDULED
                maxReplicas: "1"
                minReplicas: "1"
                network_type: PUBLIC|INTERNAL
                productTierFeatures:
                  LOGS:
                    auth:
                      password: px3c4d5f6g7h8i
                      username: abcd1234
                    enabled: true
                    websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                  METRICS:
                    enabled: false
                region: us-east-1
                resourceID: At eveniet voluptatum quo sint.
                result_params:
                  param1: value1
                  param2: value2
                serverlessEnabled: true
                status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                subscriptionId: sub-abcd1234
                subscriptionLicense:
                  certificateBase64: public-cert
                  expirationDate: 2024-01-01T10:00:00Z
                  licenseBase64: license-file
                subscriptionStatus: ACTIVE|SUSPENDED|TERMINATED|CANCELLED
                tierVersion: "1.0"
              schema:
                $ref: "#/components/schemas/DescribeResourceInstanceResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: DescribeResourceInstance resource-instance-api
      tags:
      - resource-instance-api
    patch:
      operationId: resource-instance-api#UpdateResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Ut placeat recusandae.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              customTags:
              - key: customKey1
                value: customValue1
              - key: customKey2
                value: customValue2
              network_type: PUBLIC|INTERNAL
              requestParams:
                param1: value1
                param2: value2
            schema:
              $ref: "#/components/schemas/UpdateResourceInstanceRequest2"
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: UpdateResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/add-capacity
  : post:
      operationId: resource-instance-api#AddCapacityToResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Autem omnis.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              capacityToBeAdded: 3
            schema:
              $ref: "#/components/schemas/AddCapacityToResourceInstanceRequest2"
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to add capacity to\
            \ a resource instance"
      security:
      - api_key_header_Authorization: []
      summary: AddCapacityToResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/copy-snapshot
  : post:
      operationId: resource-instance-api#CopyResourceInstanceSnapshot
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Exercitationem voluptas suscipit.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              sourceSnapshotId: Eos et harum ea tenetur.
              targetRegion: us-west-2
            schema:
              $ref: "#/components/schemas/CopyResourceInstanceSnapshotRequest2"
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                snapshotId: Esse architecto et dolorum consequatur inventore ex.
              schema:
                $ref: "#/components/schemas/CopyResourceInstanceSnapshotResponseBody"
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to copy a resource\
            \ instance snapshot"
      security:
      - api_key_header_Authorization: []
      summary: CopyResourceInstanceSnapshot resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/custom-dns
  : delete:
      operationId: resource-instance-api#RemoveCustomDNSFromResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Minima corrupti.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: http-service
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: http-service
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: RemoveCustomDNSFromResourceInstance resource-instance-api
      tags:
      - resource-instance-api
    post:
      operationId: resource-instance-api#AddCustomDNSToResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Voluptatibus et.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: http-service
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: http-service
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              customDNS: my-custom-dns.com
              targetPort: 8080
            schema:
              $ref: "#/components/schemas/AddCustomDNSToResourceInstanceRequest2"
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: AddCustomDNSToResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/failover
  : post:
      operationId: resource-instance-api#FailoverResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Ab alias.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              failedReplicaAction: FAILOVER_ONLY|FAILOVER_AND_RESTART|FAILOVER_AND_RECREATE
              failedReplicaID: db-0
            schema:
              $ref: "#/components/schemas/FailoverResourceInstanceRequest2"
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to failover a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: FailoverResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/remove-capacity
  : post:
      operationId: resource-instance-api#RemoveCapacityFromResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Suscipit facilis accusamus aut.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              capacityToBeRemoved: 3
            schema:
              $ref: "#/components/schemas/RemoveCapacityFromResourceInstanceRequest2"
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to remove capacity\
            \ from a resource instance"
      security:
      - api_key_header_Authorization: []
      summary: RemoveCapacityFromResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/restart
  : post:
      operationId: resource-instance-api#RestartResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Ut a.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to restart a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: RestartResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/restore
  : post:
      operationId: resource-instance-api#RestoreResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Ipsa iste voluptates.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              network_type: PUBLIC|INTERNAL
              targetRestoreTime: 2021-09-01T00:00:00Z
            schema:
              $ref: "#/components/schemas/RestoreResourceInstanceRequest2"
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                id: Eveniet eius.
              schema:
                $ref: "#/components/schemas/CreateServicesOrchestrationResponseBody"
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: RestoreResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/snapshot
  : get:
      operationId: resource-instance-api#ListResourceInstanceSnapshots
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Et debitis autem voluptatem vel.
          type: string
        style: simple
      - description: The service key
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service key
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                snapshots:
                - completeTime: 2021-09-01T00:00:00Z
                  createdTime: 2021-09-01T00:00:00Z
                  encrypted: true
                  progress: 100
                  region: us-east-1
                  snapshotId: instance-ss-12345678
                  snapshotType: ManualSnapshot
                  status: completed
              schema:
                $ref: "#/components/schemas/ListResourceInstanceSnapshotsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list snapshots\
            \ of a resource instance"
      security:
      - api_key_header_Authorization: []
      summary: ListResourceInstanceSnapshots resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/start
  : post:
      operationId: resource-instance-api#StartResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Neque sunt culpa est ducimus et sed.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to start a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: StartResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/stop
  : post:
      operationId: resource-instance-api#StopResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Ipsam quis.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to stop a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: StopResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/snapshot/{snapshotId}/restore
  : post:
      operationId: resource-instance-api#RestoreResourceInstanceFromSnapshot
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Et non sit.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The snapshot ID
        example: instance-ss-abcd1234
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          description: ID of a Resource Instance Snapshot
          example: Officia exercitationem asperiores nulla.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              network_type: PUBLIC|INTERNAL
            schema:
              $ref: "#/components/schemas/RestoreResourceInstanceFromSnapshotRequest2"
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                id: Rerum ratione veniam modi provident rerum.
              schema:
                $ref: "#/components/schemas/CreateServicesOrchestrationResponseBody"
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: RestoreResourceInstanceFromSnapshot resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/audit-events
  : get:
      operationId: audit-events-api#ListAuditEventsForServicePlan
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Accusantium tempora dolores.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - eventSource: "Customer, Infra or Maintenance"
                  id: Molestiae blanditiis.
                  message: instance-abcd1234 created
                  orgId: Cumque ipsum voluptatem vel nam enim quis.
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: Aperiam consectetur.
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: Molestiae blanditiis.
                  message: instance-abcd1234 created
                  orgId: Cumque ipsum voluptatem vel nam enim quis.
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: Aperiam consectetur.
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                ids:
                - event-12345678
                nextPageToken: token
              schema:
                $ref: "#/components/schemas/ListAuditEventsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list event"
      security:
      - api_key_header_Authorization: []
      summary: ListAuditEventsForServicePlan audit-events-api
      tags:
      - audit-events-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/event
  : get:
      operationId: audit-events-api#DeprecatedListAuditEventsForServicePlan
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: A cumque consequuntur id aut.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - eventSource: "Customer, Infra or Maintenance"
                  id: Molestiae blanditiis.
                  message: instance-abcd1234 created
                  orgId: Cumque ipsum voluptatem vel nam enim quis.
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: Aperiam consectetur.
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: Molestiae blanditiis.
                  message: instance-abcd1234 created
                  orgId: Cumque ipsum voluptatem vel nam enim quis.
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: Aperiam consectetur.
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: Molestiae blanditiis.
                  message: instance-abcd1234 created
                  orgId: Cumque ipsum voluptatem vel nam enim quis.
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: Aperiam consectetur.
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: Molestiae blanditiis.
                  message: instance-abcd1234 created
                  orgId: Cumque ipsum voluptatem vel nam enim quis.
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: Aperiam consectetur.
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                ids:
                - event-12345678
                nextPageToken: token
              schema:
                $ref: "#/components/schemas/ListAuditEventsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list event"
      security:
      - api_key_header_Authorization: []
      summary: DeprecatedListAuditEventsForServicePlan audit-events-api
      tags:
      - audit-events-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/setup-kit
  : get:
      operationId: resource-instance-api#ResourceInstanceProvisionerSetupKit
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Vero ducimus sunt illo non sed facere.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to setup kit for\
            \ a resource instance"
      security:
      - api_key_header_Authorization: []
      summary: ResourceInstanceProvisionerSetupKit resource-instance-api
      tags:
      - resource-instance-api
  /2022-09-01-00/resource-instance/account-config/{id}:
    post:
      operationId: resource-instance-api#UpdateAccountConfigResourceInstance
      parameters:
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              serviceId: service-1234
              setConnection: true
              subscriptionId: sub-abcd1234
            schema:
              $ref: "#/components/schemas/UpdateAccountConfigResourceInstanceRequest2"
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: UpdateAccountConfigResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  /2022-09-01-00/resource-instance/audit-events:
    get:
      operationId: audit-events-api#ListAllAuditEvents
      parameters:
      - allowEmptyValue: true
        example: token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The next token to use for pagination
          example: token
          type: string
        style: form
      - allowEmptyValue: true
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        style: form
      - allowEmptyValue: true
        description: The service ID to list events for
        example: s-123456
        explode: true
        in: query
        name: serviceID
        required: false
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: form
      - allowEmptyValue: true
        example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
        explode: true
        in: query
        name: environmentType
        required: false
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: form
      - allowEmptyValue: true
        description: The event types to filter by
        example:
        - Facilis sit eius.
        - Eos voluptate.
        - Reprehenderit dolorem hic est ratione tenetur eius.
        explode: true
        in: query
        name: eventSourceTypes
        required: false
        schema:
          description: The event types to filter by
          example:
          - Fugit nihil porro voluptate nostrum.
          - Enim et et laboriosam odit quam aliquid.
          items:
            example: Qui praesentium sed.
            type: string
          type: array
        style: form
      - allowEmptyValue: true
        description: The instance ID to list events for
        example: instance-12345678
        explode: true
        in: query
        name: instanceID
        required: false
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: form
      - allowEmptyValue: true
        description: Start date of the events
        example: 2023-01-01T10:00:00Z
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: End date of the events
        example: 2024-01-01T10:00:00Z
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - eventSource: "Customer, Infra or Maintenance"
                  id: Molestiae blanditiis.
                  message: instance-abcd1234 created
                  orgId: Cumque ipsum voluptatem vel nam enim quis.
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: Aperiam consectetur.
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: Molestiae blanditiis.
                  message: instance-abcd1234 created
                  orgId: Cumque ipsum voluptatem vel nam enim quis.
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: Aperiam consectetur.
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                ids:
                - event-12345678
                nextPageToken: token
              schema:
                $ref: "#/components/schemas/ListAuditEventsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list all events"
      security:
      - api_key_header_Authorization: []
      summary: ListAllAuditEvents audit-events-api
      tags:
      - audit-events-api
  /2022-09-01-00/resource-instance/audit-events/{id}:
    get:
      operationId: audit-events-api#DescribeAuditEvent
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The ID of the event
        example: event-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Event
          example: Maiores aut iure blanditiis.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                eventSource: "Customer, Infra or Maintenance"
                id: Error ab.
                message: instance-abcd1234 created
                orgId: Placeat autem omnis incidunt id et.
                orgName: Acme Corporation
                resourceInstanceId: instance-abcd1234
                resourceName: Galera
                subscriptionId: sub-abcd1234
                time: 2023-01-10T00:00:00Z
                userId: Minus voluptate.
                userName: John Doe
                workflowFailures:
                - eventTime: 2020-01-01T00:00:00Z
                  message: Bootstrap failed for reason X
                - eventTime: 2020-01-01T00:01:00Z
                  message: Compute failed for reason Y
              schema:
                $ref: "#/components/schemas/DescribeAuditEventResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe event"
      security:
      - api_key_header_Authorization: []
      summary: DescribeAuditEvent audit-events-api
      tags:
      - audit-events-api
  /2022-09-01-00/resource-instance/billing-details:
    get:
      operationId: consumption-billing-api#DescribeConsumptionBillingDetails
      parameters:
      - allowEmptyValue: true
        description: Return Url used to configure payment methods links
        example: https://mysaasportal.com
        explode: true
        in: query
        name: returnUrl
        required: false
        schema:
          description: Return Url used to configure payment methods links
          example: https://mysaasportal.com
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                billingProviders:
                - paymentConfigurable: true
                  paymentConfigured: true
                  paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
                  type: STRIPE
                - balanceDueLink: https://billing.provider.com/balance-due
                  logoURL: https://example.com/logo.png
                  name: GovPay
                  paymentConfigurable: false
                  paymentConfigured: false
                  paymentInfoPortalURL: null
                  type: BRING_YOUR_OWN
                paymentConfigured: true
                paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
              schema:
                $ref: "#/components/schemas/DescribeConsumptionBillingDetailsResult"
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: DescribeConsumptionBillingDetails consumption-billing-api
      tags:
      - consumption-billing-api
  /2022-09-01-00/resource-instance/billing-status:
    get:
      operationId: consumption-billing-api#DescribeConsumptionBillingStatus
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
              schema:
                $ref: "#/components/schemas/DescribeConsumptionBillingStatusResult"
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: DescribeConsumptionBillingStatus consumption-billing-api
      tags:
      - consumption-billing-api
  /2022-09-01-00/resource-instance/custom-network:
    get:
      operationId: custom-network-api#ListCustomNetworks
      parameters:
      - allowEmptyValue: true
        description: The name of the cloud provider that custom network should be
          created in
        example: aws
        explode: true
        in: query
        name: cloudProviderName
        required: false
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: form
      - allowEmptyValue: true
        description: The region of the cloud provider that the network should be created
          in
        example: us-east-1
        explode: true
        in: query
        name: cloudProviderRegion
        required: false
        schema:
          description: The region of the cloud provider that the network should be
            created in
          example: us-east-1
          type: string
        style: form
      - allowEmptyValue: true
        description: "Flag indicating whether to return only custom networks, or to\
          \ include default and imported networks as well"
        example: false
        explode: true
        in: query
        name: customNetworksOnly
        required: false
        schema:
          description: "Flag indicating whether to return only custom networks, or\
            \ to include default and imported networks as well"
          example: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                customNetworks:
                - cidr: 10.0.0.0/16
                  cloudProviderName: aws|azure|gcp|all
                  cloudProviderRegion: us-east-1
                  id: Molestiae aut vero.
                  name: Prod us-east-1
                  networkDefinitionType: Default|Custom|Imported
                  networkFeaturesConfiguration:
                    isPrivateLinkEnabled: false
                  networkInstances:
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: Facere explicabo dolorum architecto ut.
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: Facere explicabo dolorum architecto ut.
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: Facere explicabo dolorum architecto ut.
                  owningUserId: Est asperiores velit et dolores quia explicabo.
                  owningUserName: John Doe
                  status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                - cidr: 10.0.0.0/16
                  cloudProviderName: aws|azure|gcp|all
                  cloudProviderRegion: us-east-1
                  id: Molestiae aut vero.
                  name: Prod us-east-1
                  networkDefinitionType: Default|Custom|Imported
                  networkFeaturesConfiguration:
                    isPrivateLinkEnabled: false
                  networkInstances:
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: Facere explicabo dolorum architecto ut.
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: Facere explicabo dolorum architecto ut.
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: Facere explicabo dolorum architecto ut.
                  owningUserId: Est asperiores velit et dolores quia explicabo.
                  owningUserName: John Doe
                  status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
              schema:
                $ref: "#/components/schemas/ListCustomNetworksResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list custom networks"
      security:
      - api_key_header_Authorization: []
      summary: ListCustomNetworks custom-network-api
      tags:
      - custom-network-api
    post:
      operationId: custom-network-api#CreateCustomNetwork
      requestBody:
        content:
          application/json:
            example:
              cidr: 10.0.0.0/16
              cloudProviderName: aws|azure|gcp|all
              cloudProviderRegion: us-east-1
              name: Prod us-east-1
              networkFeaturesConfiguration:
                isPrivateLinkEnabled: true
            schema:
              $ref: "#/components/schemas/CreateCustomNetworkRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                cidr: 10.0.0.0/16
                cloudProviderName: aws|azure|gcp|all
                cloudProviderRegion: us-east-1
                id: Cupiditate molestias aperiam minus atque.
                name: Prod us-east-1
                networkDefinitionType: Default|Custom|Imported
                networkFeaturesConfiguration:
                  isPrivateLinkEnabled: false
                networkInstances:
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: Facere explicabo dolorum architecto ut.
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: Facere explicabo dolorum architecto ut.
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: Facere explicabo dolorum architecto ut.
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: Facere explicabo dolorum architecto ut.
                owningUserId: Molestiae recusandae expedita sint quasi.
                owningUserName: John Doe
                status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
              schema:
                $ref: "#/components/schemas/CustomNetwork"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a custom\
            \ network"
      security:
      - api_key_header_Authorization: []
      summary: CreateCustomNetwork custom-network-api
      tags:
      - custom-network-api
  /2022-09-01-00/resource-instance/custom-network/{id}:
    delete:
      operationId: custom-network-api#DeleteCustomNetwork
      parameters:
      - description: ID of a custom network
        example: n-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a custom network
          example: Error nihil velit facere placeat.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request to delete a custom\
            \ network"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested custom network\
            \ is not found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a custom\
            \ network"
      security:
      - api_key_header_Authorization: []
      summary: DeleteCustomNetwork custom-network-api
      tags:
      - custom-network-api
    get:
      operationId: custom-network-api#DescribeCustomNetwork
      parameters:
      - description: ID of a custom network
        example: n-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a custom network
          example: Accusantium possimus dolorem.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cidr: 10.0.0.0/16
                cloudProviderName: aws|azure|gcp|all
                cloudProviderRegion: us-east-1
                id: Eligendi sunt.
                name: Prod us-east-1
                networkDefinitionType: Default|Custom|Imported
                networkFeaturesConfiguration:
                  isPrivateLinkEnabled: false
                networkInstances:
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: Facere explicabo dolorum architecto ut.
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: Facere explicabo dolorum architecto ut.
                owningUserId: Vero omnis ratione culpa et.
                owningUserName: John Doe
                status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
              schema:
                $ref: "#/components/schemas/CustomNetwork"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request to describe a\
            \ custom network"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested custom network\
            \ is not found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a custom\
            \ network"
      security:
      - api_key_header_Authorization: []
      summary: DescribeCustomNetwork custom-network-api
      tags:
      - custom-network-api
    patch:
      operationId: custom-network-api#UpdateCustomNetwork
      parameters:
      - description: ID of a custom network
        example: n-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a custom network
          example: Numquam architecto sint excepturi qui.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: Dev us-east-1
            schema:
              $ref: "#/components/schemas/UpdateCustomNetworkRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                cidr: 10.0.0.0/16
                cloudProviderName: aws|azure|gcp|all
                cloudProviderRegion: us-east-1
                id: Rerum molestiae.
                name: Prod us-east-1
                networkDefinitionType: Default|Custom|Imported
                networkFeaturesConfiguration:
                  isPrivateLinkEnabled: false
                networkInstances:
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: Facere explicabo dolorum architecto ut.
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: Facere explicabo dolorum architecto ut.
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: Facere explicabo dolorum architecto ut.
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: Facere explicabo dolorum architecto ut.
                owningUserId: Inventore nisi facere.
                owningUserName: John Doe
                status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
              schema:
                $ref: "#/components/schemas/CustomNetwork"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested custom network\
            \ is not found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a custom\
            \ network"
      security:
      - api_key_header_Authorization: []
      summary: UpdateCustomNetwork custom-network-api
      tags:
      - custom-network-api
  /2022-09-01-00/resource-instance/event/{id}:
    get:
      operationId: audit-events-api#DeprecatedDescribeAuditEvent
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The ID of the event
        example: event-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Event
          example: Aut debitis et non natus iusto.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                eventSource: "Customer, Infra or Maintenance"
                id: Beatae aut quod.
                message: instance-abcd1234 created
                orgId: Praesentium aut.
                orgName: Acme Corporation
                resourceInstanceId: instance-abcd1234
                resourceName: Galera
                subscriptionId: sub-abcd1234
                time: 2023-01-10T00:00:00Z
                userId: Distinctio sit totam.
                userName: John Doe
                workflowFailures:
                - eventTime: 2020-01-01T00:00:00Z
                  message: Bootstrap failed for reason X
                - eventTime: 2020-01-01T00:01:00Z
                  message: Compute failed for reason Y
              schema:
                $ref: "#/components/schemas/DescribeAuditEventResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe event"
      security:
      - api_key_header_Authorization: []
      summary: DeprecatedDescribeAuditEvent audit-events-api
      tags:
      - audit-events-api
  /2022-09-01-00/resource-instance/expression-evaluator:
    post:
      operationId: expression-evaluator-api#ExpressionEvaluator
      requestBody:
        content:
          application/json:
            example:
              deploymentCellID: Facere voluptatem voluptas.
              expression: "{{ $sys.network.externalClusterEndpoint }}"
              expressionMap:
                dbHost: "{{ $sys.database.host }}"
                dbPort: "{{ $var.port }}"
              instanceID: instance-12345678
              productTierID: Quia consequuntur aut sint.
              resourceKey: mysql
              serviceID: s-123456
            schema:
              $ref: "#/components/schemas/ExpressionEvaluatorRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                error: "failed to evaluate expression: ..."
                result: my-cluster.example.com
              schema:
                $ref: "#/components/schemas/ExpressionEvaluatorResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to evaluate expression"
      security:
      - api_key_header_Authorization: []
      summary: ExpressionEvaluator expression-evaluator-api
      tags:
      - expression-evaluator-api
  /2022-09-01-00/resource-instance/health:
    get:
      description: Consumption service health check endpoint
      operationId: global-api#consumptionServiceHealth
      responses:
        "200":
          content:
            application/json:
              example:
                status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
              schema:
                $ref: "#/components/schemas/OmnistrateServiceHealthResult"
          description: OK response.
      summary: consumptionServiceHealth global-api
      tags:
      - global-api
  /2022-09-01-00/resource-instance/invoice:
    get:
      operationId: consumption-invoice-api#ListConsumptionInvoices
      parameters:
      - allowEmptyValue: true
        description: "Billing provider. If specified, list invoices for the specified\
          \ billing provider."
        example: STRIPE
        explode: true
        in: query
        name: billingProvider
        required: false
        schema:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                invoices:
                - currency: USD
                  dueDate: 2023-10-01T00:00:00Z
                  invoiceDate: 2021-01-01T00:00:00.000Z
                  invoiceId: in_1234568
                  invoiceNumber: 2021-01-01-1234567890
                  invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
                  invoiceStatus: draft|open|paid|uncollectible|void
                  invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
                  paymentTerms: Net 30
                  taxAmount: 10
                  totalAmount: 110
                  totalAmountWithoutTax: 100
                - currency: USD
                  dueDate: 2023-10-01T00:00:00Z
                  invoiceDate: 2021-01-01T00:00:00.000Z
                  invoiceId: in_1234568
                  invoiceNumber: 2021-01-01-1234567890
                  invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
                  invoiceStatus: draft|open|paid|uncollectible|void
                  invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
                  paymentTerms: Net 30
                  taxAmount: 10
                  totalAmount: 110
                  totalAmountWithoutTax: 100
              schema:
                $ref: "#/components/schemas/ListInvoicesResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list invoices"
      security:
      - api_key_header_Authorization: []
      summary: ListConsumptionInvoices consumption-invoice-api
      tags:
      - consumption-invoice-api
  /2022-09-01-00/resource-instance/services-orchestration:
    get:
      operationId: services-orchestration-api#ListServicesOrchestrations
      responses:
        "200":
          content:
            application/json:
              example:
              - ServicesTopology:
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: instance-12345678
                  serviceId: s-123456
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Illum sed libero ut pariatur molestiae eius.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: instance-12345678
                  serviceId: s-123456
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Illum sed libero ut pariatur molestiae eius.
                createdAt: 2021-01-01T00:00:00Z
                id: Voluptatem aliquid.
                orchestrationFailedReason: Invalid DSL
                resultParams:
                  param1: value1
                  param2: value2
                status: PENDING
                updatedAt: 2021-01-01T00:00:00Z
              - ServicesTopology:
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: instance-12345678
                  serviceId: s-123456
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Illum sed libero ut pariatur molestiae eius.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: instance-12345678
                  serviceId: s-123456
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Illum sed libero ut pariatur molestiae eius.
                createdAt: 2021-01-01T00:00:00Z
                id: Voluptatem aliquid.
                orchestrationFailedReason: Invalid DSL
                resultParams:
                  param1: value1
                  param2: value2
                status: PENDING
                updatedAt: 2021-01-01T00:00:00Z
              schema:
                example:
                - ServicesTopology:
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: instance-12345678
                    serviceId: s-123456
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Illum sed libero ut pariatur molestiae eius.
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: instance-12345678
                    serviceId: s-123456
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Illum sed libero ut pariatur molestiae eius.
                  createdAt: 2021-01-01T00:00:00Z
                  id: Voluptatem aliquid.
                  orchestrationFailedReason: Invalid DSL
                  resultParams:
                    param1: value1
                    param2: value2
                  status: PENDING
                  updatedAt: 2021-01-01T00:00:00Z
                - ServicesTopology:
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: instance-12345678
                    serviceId: s-123456
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Illum sed libero ut pariatur molestiae eius.
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: instance-12345678
                    serviceId: s-123456
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Illum sed libero ut pariatur molestiae eius.
                  createdAt: 2021-01-01T00:00:00Z
                  id: Voluptatem aliquid.
                  orchestrationFailedReason: Invalid DSL
                  resultParams:
                    param1: value1
                    param2: value2
                  status: PENDING
                  updatedAt: 2021-01-01T00:00:00Z
                - ServicesTopology:
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: instance-12345678
                    serviceId: s-123456
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Illum sed libero ut pariatur molestiae eius.
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: instance-12345678
                    serviceId: s-123456
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Illum sed libero ut pariatur molestiae eius.
                  createdAt: 2021-01-01T00:00:00Z
                  id: Voluptatem aliquid.
                  orchestrationFailedReason: Invalid DSL
                  resultParams:
                    param1: value1
                    param2: value2
                  status: PENDING
                  updatedAt: 2021-01-01T00:00:00Z
                items:
                  $ref: "#/components/schemas/DescribeServicesOrchestrationResult"
                type: array
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list resource\
            \ instances"
      security:
      - api_key_header_Authorization: []
      summary: ListServicesOrchestrations services-orchestration-api
      tags:
      - services-orchestration-api
    post:
      operationId: services-orchestration-api#CreateServicesOrchestration
      requestBody:
        content:
          application/json:
            example:
              orchestrationCreateDSL: Hic repudiandae.
            schema:
              $ref: "#/components/schemas/CreateServicesOrchestrationRequest2"
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                id: Odio aperiam eum dolorem est voluptas.
              schema:
                $ref: "#/components/schemas/CreateServicesOrchestrationResponseBody"
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: CreateServicesOrchestration services-orchestration-api
      tags:
      - services-orchestration-api
  /2022-09-01-00/resource-instance/services-orchestration/{id}:
    delete:
      operationId: services-orchestration-api#DeleteServicesOrchestration
      parameters:
      - description: The ID of the services orchestration
        example: so-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Services Orchestration
          example: Nulla temporibus similique est assumenda neque ipsum.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: DeleteServicesOrchestration services-orchestration-api
      tags:
      - services-orchestration-api
    get:
      operationId: services-orchestration-api#DescribeServicesOrchestration
      parameters:
      - description: The ID of the services orchestration
        example: so-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Services Orchestration
          example: Repudiandae modi.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ServicesTopology:
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: instance-12345678
                  serviceId: s-123456
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Exercitationem a cum sit ea rem.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: instance-12345678
                  serviceId: s-123456
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Exercitationem a cum sit ea rem.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: instance-12345678
                  serviceId: s-123456
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Exercitationem a cum sit ea rem.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: instance-12345678
                  serviceId: s-123456
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Exercitationem a cum sit ea rem.
                createdAt: 2021-01-01T00:00:00Z
                id: Velit architecto natus maiores est accusantium voluptatem.
                orchestrationFailedReason: Invalid DSL
                resultParams:
                  param1: value1
                  param2: value2
                status: PENDING
                updatedAt: 2021-01-01T00:00:00Z
              schema:
                $ref: "#/components/schemas/DescribeServicesOrchestrationResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServicesOrchestration services-orchestration-api
      tags:
      - services-orchestration-api
    patch:
      operationId: services-orchestration-api#ModifyServicesOrchestration
      parameters:
      - description: The ID of the services orchestration
        example: so-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Services Orchestration
          example: Quia ea fugit.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              orchestrationModifyDSL: In harum doloribus accusamus vitae eveniet.
            schema:
              $ref: "#/components/schemas/ModifyServicesOrchestrationRequest2"
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: ModifyServicesOrchestration services-orchestration-api
      tags:
      - services-orchestration-api
  /2022-09-01-00/resource-instance/subscription-users:
    get:
      operationId: consumption-user-api#ListAllSubscriptionUsers
      parameters:
      - allowEmptyValue: true
        description: The environment type to filter by
        example: DEV
        explode: true
        in: query
        name: environmentType
        required: false
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                subscriptionUsers:
                - email: abc@gmail.com
                  name: John Doe
                  roleType: reader
                  userId: user-abcd1234
              schema:
                $ref: "#/components/schemas/ListAllSubscriptionUsersResult"
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list all subscription\
            \ users"
      security:
      - api_key_header_Authorization: []
      summary: ListAllSubscriptionUsers consumption-user-api
      tags:
      - consumption-user-api
  /2022-09-01-00/resource-instance/subscription/{subscriptionId}/invite-user:
    post:
      operationId: consumption-user-api#InviteUser
      parameters:
      - description: The subscription ID
        example: sub-abcd1234
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
            schema:
              $ref: "#/components/schemas/InviteConsumptionUserRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to invite user"
      security:
      - api_key_header_Authorization: []
      summary: InviteUser consumption-user-api
      tags:
      - consumption-user-api
  /2022-09-01-00/resource-instance/subscription/{subscriptionId}/revoke-user-role:
    delete:
      operationId: consumption-user-api#RevokeUserRole
      parameters:
      - description: The subscription ID
        example: sub-abcd1234
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
            schema:
              $ref: "#/components/schemas/RevokeConsumptionUserRoleRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete user"
      security:
      - api_key_header_Authorization: []
      summary: RevokeUserRole consumption-user-api
      tags:
      - consumption-user-api
  /2022-09-01-00/resource-instance/subscription/{subscriptionId}/subscription-users:
    get:
      operationId: consumption-user-api#DescribeUsersBySubscription
      parameters:
      - description: The subscription ID
        example: sub-abcd1234
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Id: sub-abcd1234
                subscriptionUsers:
                - email: abc@gmail.com
                  name: John Doe
                  roleType: reader
                  subscriptionId: sub-abcd1234
                  userId: user-abcd1234
              schema:
                $ref: "#/components/schemas/DescribeUsersBySubscriptionResult"
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: DescribeUsersBySubscription consumption-user-api
      tags:
      - consumption-user-api
  /2022-09-01-00/resource-instance/usage:
    get:
      operationId: consumption-usage-api#GetCurrentConsumptionUsage
      parameters:
      - allowEmptyValue: true
        description: The subscription ID to get usage for
        example: sub-12345678
        explode: true
        in: query
        name: subscriptionID
        required: false
        schema:
          description: ID of a Subscription
          example: Officiis aut.
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                endTime: 2021-01-01T00:00:00.000Z
                startTime: 2021-01-01T00:00:00.000Z
                usage:
                - dimension: core/hours
                  endTime: 2021-01-01T00:00:00.000Z
                  startTime: 2021-01-01T00:00:00.000Z
                  total: 0.67
              schema:
                $ref: "#/components/schemas/GetConsumptionUsageResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get usage"
      security:
      - api_key_header_Authorization: []
      summary: GetCurrentConsumptionUsage consumption-usage-api
      tags:
      - consumption-usage-api
  /2022-09-01-00/resource-instance/usage-per-day:
    get:
      operationId: consumption-usage-api#GetConsumptionUsagePerDay
      parameters:
      - allowEmptyValue: true
        description: Start date of the usage report
        example: 2023-01-01T10:00:00Z
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: End date of the usage report
        example: 2024-01-01T10:00:00Z
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: The subscription ID to get usage for
        example: sub-12345678
        explode: true
        in: query
        name: subscriptionID
        required: false
        schema:
          description: ID of a Subscription
          example: Aut voluptatum officia voluptatem.
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                endTime: 2021-01-01T00:00:00.000Z
                startTime: 2021-01-01T00:00:00.000Z
                usage:
                - dimension: core/hours
                  endTime: 2021-01-01T00:00:00.000Z
                  startTime: 2021-01-01T00:00:00.000Z
                  total: 0.67
              schema:
                $ref: "#/components/schemas/GetConsumptionUsageResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get usage"
      security:
      - api_key_header_Authorization: []
      summary: GetConsumptionUsagePerDay consumption-usage-api
      tags:
      - consumption-usage-api
  /2022-09-01-00/resource-instance/user/{id}/billing-details:
    get:
      operationId: consumption-user-api#DescribeUserBillingDetails
      parameters:
      - example: user-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a User
          example: Voluptatem debitis.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                billingEmbedURL: DEPRECATED
                name: John Dae
                paymentConfigured: true
                paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
                userId: Quod perferendis.
              schema:
                $ref: "#/components/schemas/DescribeConsumptionUserBillingDetailsResult"
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: DescribeUserBillingDetails consumption-user-api
      tags:
      - consumption-user-api
  /2022-09-01-00/resource-instance/user/signin:
    post:
      operationId: consumption-user-api#Signin
      responses:
        "200":
          content:
            application/json:
              example:
                token: g
              schema:
                $ref: "#/components/schemas/ConsumptionServiceAuthResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to signin"
      security:
      - basic_header_Authorization: []
      summary: Signin consumption-user-api
      tags:
      - consumption-user-api
  /2022-09-01-00/resource-instance/version:
    get:
      description: Consumption service version endpoint
      operationId: global-api#consumptionServiceVersion
      responses:
        "200":
          content:
            application/json:
              example:
                apiVersion: "1.0"
                buildCommitSHA: 1234567890abcdef1234567890abcdef12345678
                buildTimestamp: 2020-01-01T00:00:00Z
              schema:
                $ref: "#/components/schemas/OmnistrateServiceVersionResult"
          description: OK response.
      summary: consumptionServiceVersion global-api
      tags:
      - global-api
  /2022-09-01-00/revoke-user-role:
    delete:
      operationId: users-api#RevokeUserRole
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
            schema:
              $ref: "#/components/schemas/RevokeUserRoleRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete user"
      security:
      - api_key_header_Authorization: []
      summary: RevokeUserRole users-api
      tags:
      - users-api
  /2022-09-01-00/saas-portal:
    get:
      operationId: saas-portal-api#ListSaaSPortals
      responses:
        "200":
          content:
            application/json:
              example:
                saasPortals:
                - customDomain: mycustomdomain.com
                  customDomainStatus: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                  detailedNetworkTopology:
                    r-abcd1234:
                      allowedIPRanges:
                      - 0.0.0.0/0
                      clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      clusterPorts:
                      - 3306
                      main: true
                      networkingType: PUBLIC
                      nodes:
                      - availabilityZone: us-east-2a
                        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        healthStatus: healthy
                        id: primary-0
                        ports:
                        - 3306
                        status: RUNNING
                      privateNetworkCIDR: 10.0.0.2/24
                      privateNetworkID: n-1234abcd
                      publiclyAccessible: true
                      resourceKey: saasportal
                      resourceName: SaaS Portal
                  disablePasswordLogin: false
                  emailConfig:
                    smtpFromEmail: example@gmail.com
                    smtpHost: smtp.gmail.com
                    smtpPassword: password
                    smtpPort: 587
                    smtpUsername: username
                  endpoint: https://saas-portal.example.com
                  environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                  googleAnalyticsTagID: G-123456789
                  imageConfig:
                    imageName: myimage
                    imageRegistry: ghcr.io
                    imageTag: latest
                  status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                - customDomain: mycustomdomain.com
                  customDomainStatus: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                  detailedNetworkTopology:
                    r-abcd1234:
                      allowedIPRanges:
                      - 0.0.0.0/0
                      clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      clusterPorts:
                      - 3306
                      main: true
                      networkingType: PUBLIC
                      nodes:
                      - availabilityZone: us-east-2a
                        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        healthStatus: healthy
                        id: primary-0
                        ports:
                        - 3306
                        status: RUNNING
                      privateNetworkCIDR: 10.0.0.2/24
                      privateNetworkID: n-1234abcd
                      publiclyAccessible: true
                      resourceKey: saasportal
                      resourceName: SaaS Portal
                  disablePasswordLogin: false
                  emailConfig:
                    smtpFromEmail: example@gmail.com
                    smtpHost: smtp.gmail.com
                    smtpPassword: password
                    smtpPort: 587
                    smtpUsername: username
                  endpoint: https://saas-portal.example.com
                  environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                  googleAnalyticsTagID: G-123456789
                  imageConfig:
                    imageName: myimage
                    imageRegistry: ghcr.io
                    imageTag: latest
                  status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                - customDomain: mycustomdomain.com
                  customDomainStatus: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                  detailedNetworkTopology:
                    r-abcd1234:
                      allowedIPRanges:
                      - 0.0.0.0/0
                      clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      clusterPorts:
                      - 3306
                      main: true
                      networkingType: PUBLIC
                      nodes:
                      - availabilityZone: us-east-2a
                        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        healthStatus: healthy
                        id: primary-0
                        ports:
                        - 3306
                        status: RUNNING
                      privateNetworkCIDR: 10.0.0.2/24
                      privateNetworkID: n-1234abcd
                      publiclyAccessible: true
                      resourceKey: saasportal
                      resourceName: SaaS Portal
                  disablePasswordLogin: false
                  emailConfig:
                    smtpFromEmail: example@gmail.com
                    smtpHost: smtp.gmail.com
                    smtpPassword: password
                    smtpPort: 587
                    smtpUsername: username
                  endpoint: https://saas-portal.example.com
                  environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                  googleAnalyticsTagID: G-123456789
                  imageConfig:
                    imageName: myimage
                    imageRegistry: ghcr.io
                    imageTag: latest
                  status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                - customDomain: mycustomdomain.com
                  customDomainStatus: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                  detailedNetworkTopology:
                    r-abcd1234:
                      allowedIPRanges:
                      - 0.0.0.0/0
                      clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      clusterPorts:
                      - 3306
                      main: true
                      networkingType: PUBLIC
                      nodes:
                      - availabilityZone: us-east-2a
                        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        healthStatus: healthy
                        id: primary-0
                        ports:
                        - 3306
                        status: RUNNING
                      privateNetworkCIDR: 10.0.0.2/24
                      privateNetworkID: n-1234abcd
                      publiclyAccessible: true
                      resourceKey: saasportal
                      resourceName: SaaS Portal
                  disablePasswordLogin: false
                  emailConfig:
                    smtpFromEmail: example@gmail.com
                    smtpHost: smtp.gmail.com
                    smtpPassword: password
                    smtpPort: 587
                    smtpUsername: username
                  endpoint: https://saas-portal.example.com
                  environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                  googleAnalyticsTagID: G-123456789
                  imageConfig:
                    imageName: myimage
                    imageRegistry: ghcr.io
                    imageTag: latest
                  status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
              schema:
                $ref: "#/components/schemas/ListSaaSPortalsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list saas portals"
      security:
      - api_key_header_Authorization: []
      summary: ListSaaSPortals saas-portal-api
      tags:
      - saas-portal-api
  /2022-09-01-00/saas-portal-custom-domain:
    get:
      operationId: saas-portal-api#ListSaaSPortalCustomDomains
      responses:
        "200":
          content:
            application/json:
              example:
                customDomains:
                - clusterEndpoint: example.com
                  customDomain: mycustomdomain.com
                  description: My custom domain description
                  environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                  name: MyCustomDomain
                  status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                - clusterEndpoint: example.com
                  customDomain: mycustomdomain.com
                  description: My custom domain description
                  environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                  name: MyCustomDomain
                  status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
              schema:
                $ref: "#/components/schemas/ListSaaSPortalCustomDomainsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list saas portal\
            \ custom domains"
      security:
      - api_key_header_Authorization: []
      summary: ListSaaSPortalCustomDomains saas-portal-api
      tags:
      - saas-portal-api
    post:
      operationId: saas-portal-api#CreateSaaSPortalCustomDomain
      requestBody:
        content:
          application/json:
            example:
              customDomain: mycustomdomain.com
              description: My custom domain description
              environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
              name: MyCustomDomain
            schema:
              $ref: "#/components/schemas/CreateSaaSPortalCustomDomainRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create saas portal\
            \ custom domain"
      security:
      - api_key_header_Authorization: []
      summary: CreateSaaSPortalCustomDomain saas-portal-api
      tags:
      - saas-portal-api
  /2022-09-01-00/saas-portal-custom-domain/{environmentType}:
    delete:
      operationId: saas-portal-api#DeleteSaaSPortalCustomDomain
      parameters:
      - description: The environment type for the custom domain
        example: DEV
        explode: false
        in: path
        name: environmentType
        required: true
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete saas portal\
            \ custom domains"
      security:
      - api_key_header_Authorization: []
      summary: DeleteSaaSPortalCustomDomain saas-portal-api
      tags:
      - saas-portal-api
    patch:
      operationId: saas-portal-api#UpdateSaaSPortalCustomDomain
      parameters:
      - description: The environment type for the saas portal custom domain to update
        example: DEV
        explode: false
        in: path
        name: environmentType
        required: true
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              customDomain: mycustomdomain.com
              description: My custom domain description
              name: MyCustomDomain
            schema:
              $ref: "#/components/schemas/UpdateSaaSPortalCustomDomainRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update saas portal\
            \ custom domain"
      security:
      - api_key_header_Authorization: []
      summary: UpdateSaaSPortalCustomDomain saas-portal-api
      tags:
      - saas-portal-api
  /2022-09-01-00/saas-portal/{environmentType}:
    patch:
      operationId: saas-portal-api#UpdateSaaSPortal
      parameters:
      - description: The environment type for the saas portal custom domain to update
        example: DEV
        explode: false
        in: path
        name: environmentType
        required: true
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              customDomain: mycustomdomain.com
              disablePasswordLogin: false
              emailConfig:
                smtpFromEmail: example@gmail.com
                smtpHost: smtp.gmail.com
                smtpPassword: password
                smtpPort: 587
                smtpUsername: username
              googleAnalyticsTagID: G-123456789
              imageConfig:
                imageName: myimage
                imageRegistry: ghcr.io
                imageTag: latest
            schema:
              $ref: "#/components/schemas/UpdateSaaSPortalRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update saas portal"
      security:
      - api_key_header_Authorization: []
      summary: UpdateSaaSPortal saas-portal-api
      tags:
      - saas-portal-api
  /2022-09-01-00/service:
    get:
      operationId: service-api#ListService
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - s-12345678
                - s-abcdefgh
                - s-1234efgh
                nextPageToken: next-token
                services:
                - createdAt: 2019-01-01T00:00:00Z
                  description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: s-123456
                  key: mysql
                  name: MySQL multi-writer service
                  roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
                  serviceEnvironments:
                  - id: se-123456
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    sourceEnvironmentID: se-123456
                    sourceEnvironmentName: dev
                    type: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                    visibility: PUBLIC
                  - id: se-123456
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    sourceEnvironmentID: se-123456
                    sourceEnvironmentName: dev
                    type: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                    visibility: PUBLIC
                  serviceLogoURL: Quibusdam voluptas eos quam.
                  serviceProviderID: Facilis doloribus eius sit velit.
                  serviceProviderName: "Omnistrate, Inc."
                - createdAt: 2019-01-01T00:00:00Z
                  description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: s-123456
                  key: mysql
                  name: MySQL multi-writer service
                  roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
                  serviceEnvironments:
                  - id: se-123456
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    sourceEnvironmentID: se-123456
                    sourceEnvironmentName: dev
                    type: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                    visibility: PUBLIC
                  - id: se-123456
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    sourceEnvironmentID: se-123456
                    sourceEnvironmentName: dev
                    type: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                    visibility: PUBLIC
                  serviceLogoURL: Quibusdam voluptas eos quam.
                  serviceProviderID: Facilis doloribus eius sit velit.
                  serviceProviderName: "Omnistrate, Inc."
                - createdAt: 2019-01-01T00:00:00Z
                  description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: s-123456
                  key: mysql
                  name: MySQL multi-writer service
                  roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
                  serviceEnvironments:
                  - id: se-123456
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    sourceEnvironmentID: se-123456
                    sourceEnvironmentName: dev
                    type: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                    visibility: PUBLIC
                  - id: se-123456
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    sourceEnvironmentID: se-123456
                    sourceEnvironmentName: dev
                    type: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                    visibility: PUBLIC
                  serviceLogoURL: Quibusdam voluptas eos quam.
                  serviceProviderID: Facilis doloribus eius sit velit.
                  serviceProviderName: "Omnistrate, Inc."
                - createdAt: 2019-01-01T00:00:00Z
                  description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: s-123456
                  key: mysql
                  name: MySQL multi-writer service
                  roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
                  serviceEnvironments:
                  - id: se-123456
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    sourceEnvironmentID: se-123456
                    sourceEnvironmentName: dev
                    type: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                    visibility: PUBLIC
                  - id: se-123456
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    - description: A Basic product tier
                      modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                      name: Basic
                      productTierID: Non molestiae aut dicta iusto.
                      tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                    sourceEnvironmentID: se-123456
                    sourceEnvironmentName: dev
                    type: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                    visibility: PUBLIC
                  serviceLogoURL: Quibusdam voluptas eos quam.
                  serviceProviderID: Facilis doloribus eius sit velit.
                  serviceProviderName: "Omnistrate, Inc."
              schema:
                $ref: "#/components/schemas/ListServiceResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list services"
      security:
      - api_key_header_Authorization: []
      summary: ListService service-api
      tags:
      - service-api
    post:
      operationId: service-api#CreateService
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              name: MySQL multi-writer service
              serviceLogoURL: http://mohr.net/noe.aufderhar
            schema:
              $ref: "#/components/schemas/CreateServiceRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: s-123456
              schema:
                description: Service ID created
                example: s-123456
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a service"
      security:
      - api_key_header_Authorization: []
      summary: CreateService service-api
      tags:
      - service-api
  /2022-09-01-00/service-offering:
    get:
      operationId: service-offering-api#ListServiceOffering
      parameters:
      - allowEmptyValue: true
        description: Org Id
        example: org-12345678
        explode: true
        in: query
        name: orgId
        required: false
        schema:
          description: ID of an Org
          example: Aut autem commodi dicta aliquam ad aut.
          type: string
        style: form
      - allowEmptyValue: true
        description: The visibility of service offering
        example: PRIVATE
        explode: true
        in: query
        name: visibility
        required: false
        schema:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
        style: form
      - allowEmptyValue: true
        description: The environment type to filter by
        example: DEV
        explode: true
        in: query
        name: environmentType
        required: false
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                nextPageToken: next-token
                serviceIds:
                - s-12345678
                - s-abcdefgh
                services:
                - createdAt: 2019-01-01T00:00:00Z
                  isDeprecated: false
                  offerings:
                  - allowCreatesWhenPaymentNotConfigured: true
                    assets:
                      cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                      cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
                    maxNumberOfInstances: 4
                    productTierName: Premium
                    productTierURLKey: premium
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-12345678
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PRIVATE
                    serviceModelName: Bring Your Own Account
                    serviceModelURLKey: byoa
                  - productTierName: Basic
                    productTierURLKey: basic
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-abcdefgh
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PUBLIC
                    serviceModelName: Hosted
                    serviceModelURLKey: hosted
                  serviceDescription: MySQL is a relational database
                  serviceId: s-123456
                  serviceName: MySQL
                  serviceOrgId: Pariatur sunt nobis atque harum neque.
                  serviceProviderId: sp-9zrg9W8Are
                  serviceProviderName: "Omnistrate, Inc."
                  serviceURLKey: mysql
                - createdAt: 2019-01-01T00:00:00Z
                  isDeprecated: false
                  offerings:
                  - allowCreatesWhenPaymentNotConfigured: true
                    assets:
                      cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                      cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
                    maxNumberOfInstances: 4
                    productTierName: Premium
                    productTierURLKey: premium
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-12345678
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PRIVATE
                    serviceModelName: Bring Your Own Account
                    serviceModelURLKey: byoa
                  - productTierName: Basic
                    productTierURLKey: basic
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-abcdefgh
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PUBLIC
                    serviceModelName: Hosted
                    serviceModelURLKey: hosted
                  serviceDescription: MySQL is a relational database
                  serviceId: s-123456
                  serviceName: MySQL
                  serviceOrgId: Pariatur sunt nobis atque harum neque.
                  serviceProviderId: sp-9zrg9W8Are
                  serviceProviderName: "Omnistrate, Inc."
                  serviceURLKey: mysql
                - createdAt: 2019-01-01T00:00:00Z
                  isDeprecated: false
                  offerings:
                  - allowCreatesWhenPaymentNotConfigured: true
                    assets:
                      cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                      cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
                    maxNumberOfInstances: 4
                    productTierName: Premium
                    productTierURLKey: premium
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-12345678
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PRIVATE
                    serviceModelName: Bring Your Own Account
                    serviceModelURLKey: byoa
                  - productTierName: Basic
                    productTierURLKey: basic
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-abcdefgh
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PUBLIC
                    serviceModelName: Hosted
                    serviceModelURLKey: hosted
                  serviceDescription: MySQL is a relational database
                  serviceId: s-123456
                  serviceName: MySQL
                  serviceOrgId: Pariatur sunt nobis atque harum neque.
                  serviceProviderId: sp-9zrg9W8Are
                  serviceProviderName: "Omnistrate, Inc."
                  serviceURLKey: mysql
              schema:
                $ref: "#/components/schemas/ListServiceOfferingsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list service offerings"
      security:
      - api_key_header_Authorization: []
      summary: ListServiceOffering service-offering-api
      tags:
      - service-offering-api
  /2022-09-01-00/service-offering/{serviceId}:
    get:
      operationId: service-offering-api#DescribeServiceOffering
      parameters:
      - allowEmptyValue: true
        description: The visibility of service offering
        example: PRIVATE
        explode: true
        in: query
        name: visibility
        required: false
        schema:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
        style: form
      - allowEmptyValue: true
        description: The environment type to filter by
        example: DEV
        explode: true
        in: query
        name: environmentType
        required: false
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                createdAt: 2019-01-01T00:00:00Z
                isDeprecated: false
                offerings:
                - allowCreatesWhenPaymentNotConfigured: true
                  assets:
                    cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                    cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
                  maxNumberOfInstances: 4
                  productTierName: Premium
                  productTierURLKey: premium
                  resourceParameters:
                  - name: MySQL
                    urlKey: mysql
                  - name: Redis
                    urlKey: redis
                  serviceAPIID: sa-12345678
                  serviceAPIVersion: v1
                  serviceEnvironmentName: Production
                  serviceEnvironmentURLKey: prod
                  serviceEnvironmentVisibility: PRIVATE
                  serviceModelName: Bring Your Own Account
                  serviceModelURLKey: byoa
                - productTierName: Basic
                  productTierURLKey: basic
                  resourceParameters:
                  - name: MySQL
                    urlKey: mysql
                  - name: Redis
                    urlKey: redis
                  serviceAPIID: sa-abcdefgh
                  serviceAPIVersion: v1
                  serviceEnvironmentName: Production
                  serviceEnvironmentURLKey: prod
                  serviceEnvironmentVisibility: PUBLIC
                  serviceModelName: Hosted
                  serviceModelURLKey: hosted
                serviceDescription: MySQL is a relational database
                serviceId: s-123456
                serviceName: MySQL
                serviceOrgId: Commodi quo debitis commodi consequatur deserunt.
                serviceProviderId: sp-9zrg9W8Are
                serviceProviderName: "Omnistrate, Inc."
                serviceURLKey: mysql
              schema:
                $ref: "#/components/schemas/DescribeServiceOfferingResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a service\
            \ offering"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceOffering service-offering-api
      tags:
      - service-offering-api
  /2022-09-01-00/service-offering/{serviceId}/resource/{resourceId}/instance/{instanceId}:
    get:
      operationId: service-offering-api#DescribeServiceOfferingResource
      parameters:
      - allowEmptyValue: true
        description: The product tier Id
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Optio consequuntur laudantium blanditiis laborum repellat.
          type: string
        style: form
      - allowEmptyValue: true
        description: The product tier version
        example: 1.0.0
        explode: true
        in: query
        name: productTierVersion
        required: false
        schema:
          description: The product tier version
          example: 1.0.0
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The resource ID
        example: r-12345678
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          description: ID of a resource
          example: Dolor modi.
          type: string
        style: simple
      - description: The instance ID
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          default: none
          description: The instance ID
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                apis:
                - inputParameters:
                  - defaultValue: null
                    description: The name of the server
                    displayName: Server Name
                    isList: false
                    key: serverName
                    modifiable: true
                    options: null
                    required: true
                    type: string
                  - defaultValue: option1
                    description: The type of the server
                    displayName: Server Type
                    isList: false
                    key: serverType
                    modifiable: true
                    options:
                    - option1
                    - option2
                    required: true
                    type: string
                  outputParameters:
                  - description: The name of the server
                    displayName: Server Name
                    isList: false
                    key: serverName
                    type: string
                  - description: The type of the server
                    displayName: Server Type
                    isList: false
                    key: serverType
                    type: string
                  verb: create
                - inputParameters:
                  - defaultValue: null
                    description: The name of the server
                    displayName: Server Name
                    isList: false
                    key: serverName
                    modifiable: true
                    options: null
                    required: true
                    type: string
                  outputParameters:
                  - description: The name of the server
                    displayName: Server Name
                    isList: false
                    key: serverName
                    type: string
                  - description: The type of the server
                    displayName: Server Type
                    isList: false
                    key: serverType
                    type: string
                  verb: describe
              schema:
                $ref: "#/components/schemas/DescribeServiceOfferingResourceResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a service\
            \ offering resource"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceOfferingResource service-offering-api
      tags:
      - service-offering-api
  /2022-09-01-00/service/{id}:
    delete:
      operationId: service-api#DeleteService
      parameters:
      - description: The service ID to operate on
        example: s-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a service"
      security:
      - api_key_header_Authorization: []
      summary: DeleteService service-api
      tags:
      - service-api
    get:
      operationId: service-api#DescribeService
      parameters:
      - description: The service ID to operate on
        example: s-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                createdAt: 2019-01-01T00:00:00Z
                description: A MySQL SaaS specializing in multi-writer clusters for
                  high availability
                id: s-123456
                key: mysql
                name: MySQL multi-writer service
                roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
                serviceEnvironments:
                - id: se-123456
                  name: dev
                  promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  saasPortalStatus: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                  saasPortalUrl: https://saas-portal.example.com
                  servicePlans:
                  - description: A Basic product tier
                    modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                    name: Basic
                    productTierID: Non molestiae aut dicta iusto.
                    tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                  - description: A Basic product tier
                    modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                    name: Basic
                    productTierID: Non molestiae aut dicta iusto.
                    tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                  - description: A Basic product tier
                    modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                    name: Basic
                    productTierID: Non molestiae aut dicta iusto.
                    tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                  sourceEnvironmentID: se-123456
                  sourceEnvironmentName: dev
                  type: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                  visibility: PUBLIC
                - id: se-123456
                  name: dev
                  promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  saasPortalStatus: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                  saasPortalUrl: https://saas-portal.example.com
                  servicePlans:
                  - description: A Basic product tier
                    modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                    name: Basic
                    productTierID: Non molestiae aut dicta iusto.
                    tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                  - description: A Basic product tier
                    modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                    name: Basic
                    productTierID: Non molestiae aut dicta iusto.
                    tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                  - description: A Basic product tier
                    modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                    name: Basic
                    productTierID: Non molestiae aut dicta iusto.
                    tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                  sourceEnvironmentID: se-123456
                  sourceEnvironmentName: dev
                  type: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                  visibility: PUBLIC
                - id: se-123456
                  name: dev
                  promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  saasPortalStatus: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                  saasPortalUrl: https://saas-portal.example.com
                  servicePlans:
                  - description: A Basic product tier
                    modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                    name: Basic
                    productTierID: Non molestiae aut dicta iusto.
                    tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                  - description: A Basic product tier
                    modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                    name: Basic
                    productTierID: Non molestiae aut dicta iusto.
                    tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                  - description: A Basic product tier
                    modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                    name: Basic
                    productTierID: Non molestiae aut dicta iusto.
                    tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                  sourceEnvironmentID: se-123456
                  sourceEnvironmentName: dev
                  type: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                  visibility: PUBLIC
                serviceLogoURL: Accusantium ut saepe ipsum mollitia asperiores.
                serviceProviderID: Perspiciatis vel qui distinctio excepturi.
                serviceProviderName: "Omnistrate, Inc."
              schema:
                $ref: "#/components/schemas/DescribeServiceResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a service"
      security:
      - api_key_header_Authorization: []
      summary: DescribeService service-api
      tags:
      - service-api
    patch:
      operationId: service-api#UpdateService
      parameters:
      - description: The service ID to operate on
        example: s-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              name: MySQL multi-writer service
              serviceLogoURL: Earum sed aliquam ut eos.
            schema:
              $ref: "#/components/schemas/UpdateServiceRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update a service"
      security:
      - api_key_header_Authorization: []
      summary: UpdateService service-api
      tags:
      - service-api
  /2022-09-01-00/service/{id}/health:
    get:
      operationId: service-api#ServiceHealth
      parameters:
      - description: The ID of the service
        example: s-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                health: UP|DOWN|UNKNOWN
                id: s-123456
                report:
                  se-12345678:
                    sm-12345678:
                      vu-11111111: UNKNOWN
                      vu-12345678: UP
                      vu-87654321: DOWN
              schema:
                $ref: "#/components/schemas/ReportHealthResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get service health"
      security:
      - api_key_header_Authorization: []
      summary: ServiceHealth service-api
      tags:
      - service-api
  /2022-09-01-00/service/{serviceId}/compute-config:
    get:
      operationId: compute-config-api#ListComputeConfig
      parameters:
      - allowEmptyValue: true
        description: Is compute config managed by omnistrate
        example: false
        explode: true
        in: query
        name: managed
        required: false
        schema:
          description: Is compute config managed by omnistrate
          example: false
          type: boolean
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - cc-12345678
                - cc-abcdefgh
                - cc-1234efgh
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListComputeConfigsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list compute configs"
      security:
      - api_key_header_Authorization: []
      summary: ListComputeConfig compute-config-api
      tags:
      - compute-config-api
    post:
      operationId: compute-config-api#CreateComputeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              autoscalingPolicy:
                maxReplicas: 4
                minReplicas: 1
              cpuArchitecture: X86_64|ARM64
              description: my compute config description
              name: my compute config
              replicaCount: "3"
              resources:
                limits:
                  cpu: "1"
                  memory: 500Mi
                requests:
                  cpu: "0.5"
                  memory: 200Mi
              rootVolumeSizeGi: 10
              warmPoolConfiguration:
                minimumNodesInPool: 1
            schema:
              $ref: "#/components/schemas/CreateComputeConfigRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Nostrum possimus non nesciunt illo ut.
              schema:
                description: Compute Config ID created
                example: Beatae placeat voluptas laborum quibusdam autem.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create compute\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateComputeConfig compute-config-api
      tags:
      - compute-config-api
  /2022-09-01-00/service/{serviceId}/compute-config/{id}:
    delete:
      operationId: compute-config-api#DeleteComputeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: ID of the compute config
        example: cc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Compute Config
          example: Excepturi libero nisi laborum maiores aperiam in.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a compute\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteComputeConfig compute-config-api
      tags:
      - compute-config-api
    get:
      operationId: compute-config-api#DescribeComputeConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the compute config to describe. If not\
          \ specified, the latest version is described."
        example: Alias quia accusantium ut.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the compute config to describe. If\
            \ not specified, the latest version is described."
          example: Doloribus ipsam dolorem sit quas.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the compute config to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Sit eaque autem possimus officiis eos eveniet.
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: ID of the compute config
        example: cc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Compute Config
          example: Et sunt optio.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                autoscalingPolicy:
                  maxReplicas: 4
                  minReplicas: 1
                computeInstanceTypeConfigOverrides:
                  aws:
                    t3.micro:
                      instanceLifeCycleType: Spot
                      rootVolumeSizeGi: 10
                      warmPoolConfiguration:
                        minimumNodesInPool: 1
                    t3.small:
                      instanceLifeCycleType: OnDemand
                      warmPoolConfiguration:
                        minimumNodesInPool: 2
                  azure:
                    Standard_B1ls:
                      rootVolumeSizeGi: 10
                      warmPoolConfiguration:
                        minimumNodesInPool: 1
                cpuArchitecture: X86_64|ARM64
                description: my compute config description
                id: Velit qui sit rerum in corporis mollitia.
                infraConfigIDs:
                - ic-12345678
                - ic-abcdefgh
                instanceTypes:
                  aws:
                  - t3.micro
                  - t3.small
                  azure:
                  - Standard_B1ls
                  - Standard_B1ms
                  gcp:
                  - $var.instance_type
                name: my compute config
                replicaCount: "3"
                resources:
                  limits:
                    cpu: "1"
                    memory: 500Mi
                  requests:
                    cpu: "0.5"
                    memory: 200Mi
                rootVolumeSizeGi: 10
                serviceId: s-123456
                warmPoolConfiguration:
                  minimumNodesInPool: 1
              schema:
                $ref: "#/components/schemas/DescribeComputeConfigResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe compute\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeComputeConfig compute-config-api
      tags:
      - compute-config-api
    patch:
      operationId: compute-config-api#UpdateComputeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: ID of the compute config
        example: cc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Compute Config
          example: Magni excepturi quia consequatur.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              autoscalingPolicy:
                maxReplicas: 4
                minReplicas: 1
              cpuArchitecture: X86_64|ARM64
              description: my compute config description
              name: my compute config
              replicaCount: "3"
              resources:
                limits:
                  cpu: "1"
                  memory: 500Mi
                requests:
                  cpu: "0.5"
                  memory: 200Mi
              rootVolumeSizeGi: 10
              warmPoolConfiguration:
                minimumNodesInPool: 1
            schema:
              $ref: "#/components/schemas/UpdateComputeConfigRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update compute\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateComputeConfig compute-config-api
      tags:
      - compute-config-api
  /2022-09-01-00/service/{serviceId}/compute-config/{id}/instance-type:
    delete:
      operationId: compute-config-api#RemoveComputeInstanceType
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: ID of the compute config
        example: cc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Compute Config
          example: Similique et fuga aut.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              cloudProviderName: aws|azure|gcp|all
              instanceType: t3.micro
            schema:
              $ref: "#/components/schemas/RemoveComputeInstanceTypeRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to remove compute\
            \ instance type"
      security:
      - api_key_header_Authorization: []
      summary: RemoveComputeInstanceType compute-config-api
      tags:
      - compute-config-api
    post:
      operationId: compute-config-api#AddComputeInstanceType
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: ID of the compute config
        example: cc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Compute Config
          example: Nesciunt voluptate omnis similique aspernatur dignissimos repellat.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              cloudProviderName: aws|azure|gcp|all
              configOverride:
                instanceLifeCycleType: Spot
                labels:
                  env: prod
                rootVolumeSizeGi: 10
                taints:
                - effect: NoSchedule
                  key: env
                  value: prod
                warmPoolConfiguration:
                  minimumNodesInPool: 1
              instanceType: t3.micro
            schema:
              $ref: "#/components/schemas/AddComputeInstanceTypeRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to add compute instance\
            \ type"
      security:
      - api_key_header_Authorization: []
      summary: AddComputeInstanceType compute-config-api
      tags:
      - compute-config-api
  /2022-09-01-00/service/{serviceId}/compute-config/cloud-provider/{cloudProviderName}/instance-types:
    get:
      operationId: compute-config-api#ListComputeInstanceTypes
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The cloud provider for this compute instance type config
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                nextPageToken: next-token
                types:
                - m5.xlarge
                - c5.xlarge
                - r5.xlarge
              schema:
                $ref: "#/components/schemas/ListComputeInstanceTypesResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list compute instance\
            \ types"
      security:
      - api_key_header_Authorization: []
      summary: ListComputeInstanceTypes compute-config-api
      tags:
      - compute-config-api
  /2022-09-01-00/service/{serviceId}/environment:
    get:
      operationId: service-environment-api#ListServiceEnvironment
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - se-12345678
                - se-23456789
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListServiceEnvironmentsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list service environments"
      security:
      - api_key_header_Authorization: []
      summary: ListServiceEnvironment service-environment-api
      tags:
      - service-environment-api
    post:
      operationId: service-environment-api#CreateServiceEnvironment
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              autoApproveSubscription: false
              deploymentConfigId: Pariatur et laboriosam eligendi.
              description: The production environment for the MySQL multi-writer service
              name: Production
              serviceAuthPublicKey: |
                -----BEGIN PUBLIC KEY-----
                MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
                7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
                -----END PUBLIC KEY-----
              sourceEnvironmentId: se-123456
              type: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
              visibility: PUBLIC
            schema:
              $ref: "#/components/schemas/CreateServiceEnvironmentRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: se-123456
              schema:
                description: Service Environment ID created
                example: se-123456
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a service\
            \ environment"
      security:
      - api_key_header_Authorization: []
      summary: CreateServiceEnvironment service-environment-api
      tags:
      - service-environment-api
  /2022-09-01-00/service/{serviceId}/environment/{id}:
    delete:
      operationId: service-environment-api#DeleteServiceEnvironment
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the service environment
        example: se-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a service\
            \ environment"
      security:
      - api_key_header_Authorization: []
      summary: DeleteServiceEnvironment service-environment-api
      tags:
      - service-environment-api
    get:
      operationId: service-environment-api#DescribeServiceEnvironment
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the service environment
        example: se-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                autoApproveSubscription: false
                deploymentConfigId: Velit soluta esse.
                description: The production environment for the MySQL multi-writer
                  service
                id: se-123456
                key: production
                name: Production
                roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
                saasPortalStatus: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
                saasPortalUrl: https://saas-portal.example.com
                serviceAuthPublicKey: |
                  -----BEGIN PUBLIC KEY-----
                  MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
                  7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
                  -----END PUBLIC KEY-----
                serviceId: s-123456
                sourceEnvironmentId: se-123456
                type: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
                visibility: PUBLIC
              schema:
                $ref: "#/components/schemas/DescribeServiceEnvironmentResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a service\
            \ environment"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceEnvironment service-environment-api
      tags:
      - service-environment-api
    patch:
      operationId: service-environment-api#UpdateServiceEnvironment
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the service environment
        example: se-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              autoApproveSubscription: false
              deploymentConfigId: Enim eos corrupti.
              description: The production environment for the MySQL multi-writer service
              name: Production
              serviceAuthPublicKey: |
                -----BEGIN PUBLIC KEY-----
                MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
                7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
                -----END PUBLIC KEY-----
              sourceEnvironmentId: se-12345678
              visibility: PUBLIC
            schema:
              $ref: "#/components/schemas/UpdateServiceEnvironmentRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update a service\
            \ environment"
      security:
      - api_key_header_Authorization: []
      summary: UpdateServiceEnvironment service-environment-api
      tags:
      - service-environment-api
  /2022-09-01-00/service/{serviceId}/environment/{id}/promote:
    get:
      operationId: service-environment-api#PromoteServiceEnvironmentStatus
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the service environment
        example: se-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                targetEnvironmentID: se-123456
              - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                targetEnvironmentID: se-123456
              - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                targetEnvironmentID: se-123456
              schema:
                example:
                - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  targetEnvironmentID: se-123456
                - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  targetEnvironmentID: se-123456
                - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  targetEnvironmentID: se-123456
                items:
                  $ref: "#/components/schemas/EnvironmentPromotionStatus"
                type: array
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get the status\
            \ of a service environment promotion"
      security:
      - api_key_header_Authorization: []
      summary: PromoteServiceEnvironmentStatus service-environment-api
      tags:
      - service-environment-api
    post:
      operationId: service-environment-api#PromoteServiceEnvironment
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the service environment
        example: se-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              productTierId: Asperiores est rerum commodi.
            schema:
              $ref: "#/components/schemas/PromoteServiceEnvironmentRequest2"
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to promote a service\
            \ environment"
      security:
      - api_key_header_Authorization: []
      summary: PromoteServiceEnvironment service-environment-api
      tags:
      - service-environment-api
  /2022-09-01-00/service/{serviceId}/environment/{serviceEnvironmentId}/service-plan:
    get:
      operationId: service-plan-api#ListServicePlans
      parameters:
      - allowEmptyValue: true
        example: token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The next token to use for pagination
          example: token
          type: string
        style: form
      - allowEmptyValue: true
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        style: form
      - allowEmptyValue: true
        description: Skip the check for pending changes in the service plans
        example: false
        explode: true
        in: query
        name: skipHasPendingChangesCheck
        required: false
        schema:
          description: Skip the check for pending changes in the service plans
          example: false
          type: boolean
        style: form
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Service environment ID
        example: se-12345678
        explode: false
        in: path
        name: serviceEnvironmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                nextPageToken: next-token
                servicePlans:
                - AutoApproveSubscription: false
                  accountConfigIds:
                  - ac-12345678
                  - ac-23456789
                  activeAccountConfigIds:
                    aws: ac-12345678
                    gcp: ac-23456789
                  apiVersion: v1
                  awsRegions:
                  - us-east-2
                  - ca-central-1
                  azureRegions:
                  - northcentralus
                  deploymentConfigId: Aliquam qui nobis praesentium est iusto occaecati.
                  gcpRegions:
                  - us-central1
                  hasPendingChanges: true
                  isProductTierDisabled: true
                  latestMajorVersion: "3.0"
                  modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                  privateRegions:
                  - n/a
                  productTierDescription: A premium product tier
                  productTierDocumentation: Any documentation
                  productTierFeatures:
                    LOGS: true
                    METRICS: false
                  productTierId: Voluptatem occaecati.
                  productTierKey: premium
                  productTierName: Premium
                  productTierPlanDescription: A premium plan
                  productTierPricing:
                    price1: value1
                  productTierSupport: Any support
                  serviceApiDescription: A MySQL SaaS API specializing in multi-writer
                    multi-tenant clusters for high availability
                  serviceApiId: Corporis quae suscipit aut est.
                  serviceEnvironmentId: se-123456
                  serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
                    clusters for high availability
                  serviceModelFeatures:
                  - configuration:
                      status: "ON"
                    feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
                  - configuration:
                      status: "ON"
                    feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
                  - configuration:
                      status: "ON"
                    feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
                  serviceModelId: Ex ut ipsum odio distinctio.
                  serviceModelName: MySQL multi-writer service hosted model
                  tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                  versionSetStatus: Preferred|Active|Deprecated|Pending
                - AutoApproveSubscription: false
                  accountConfigIds:
                  - ac-12345678
                  - ac-23456789
                  activeAccountConfigIds:
                    aws: ac-12345678
                    gcp: ac-23456789
                  apiVersion: v1
                  awsRegions:
                  - us-east-2
                  - ca-central-1
                  azureRegions:
                  - northcentralus
                  deploymentConfigId: Aliquam qui nobis praesentium est iusto occaecati.
                  gcpRegions:
                  - us-central1
                  hasPendingChanges: true
                  isProductTierDisabled: true
                  latestMajorVersion: "3.0"
                  modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                  privateRegions:
                  - n/a
                  productTierDescription: A premium product tier
                  productTierDocumentation: Any documentation
                  productTierFeatures:
                    LOGS: true
                    METRICS: false
                  productTierId: Voluptatem occaecati.
                  productTierKey: premium
                  productTierName: Premium
                  productTierPlanDescription: A premium plan
                  productTierPricing:
                    price1: value1
                  productTierSupport: Any support
                  serviceApiDescription: A MySQL SaaS API specializing in multi-writer
                    multi-tenant clusters for high availability
                  serviceApiId: Corporis quae suscipit aut est.
                  serviceEnvironmentId: se-123456
                  serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
                    clusters for high availability
                  serviceModelFeatures:
                  - configuration:
                      status: "ON"
                    feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
                  - configuration:
                      status: "ON"
                    feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
                  - configuration:
                      status: "ON"
                    feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
                  serviceModelId: Ex ut ipsum odio distinctio.
                  serviceModelName: MySQL multi-writer service hosted model
                  tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                  versionSetStatus: Preferred|Active|Deprecated|Pending
              schema:
                $ref: "#/components/schemas/ListServicePlansResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list product tiers"
      security:
      - api_key_header_Authorization: []
      summary: ListServicePlans service-plan-api
      tags:
      - service-plan-api
  /2022-09-01-00/service/{serviceId}/image-config:
    post:
      operationId: image-config-api#CreateImageConfig
      parameters:
      - description: The service ID to use for the infra
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              customImageCommandsAndArgs:
                args:
                - -d
                - mysql
                commands:
                - echo
                - "Hello, World!"
              description: A image configuration for my new entity
              imageName: mysql
              imageRegistryId: Numquam voluptates autem qui.
              imageSignaturePublicKeyPEM: |
                -----BEGIN PUBLIC KEY-----
                MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
                7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
                -----END PUBLIC KEY-----
              imageTag: latest
              serviceEnvironmentId: se-123456
            schema:
              $ref: "#/components/schemas/CreateImageConfigRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Eum repellendus.
              schema:
                description: Image Config ID created
                example: Eveniet quibusdam perspiciatis nesciunt quisquam.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create the image\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateImageConfig image-config-api
      tags:
      - image-config-api
  /2022-09-01-00/service/{serviceId}/image-config/{id}:
    delete:
      operationId: image-config-api#DeleteImageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The image configuration ID
        example: imgc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Config
          example: Aut sed.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete the image\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteImageConfig image-config-api
      tags:
      - image-config-api
    get:
      operationId: image-config-api#DescribeImageConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the image config to describe. If not\
          \ specified, the latest version is described."
        example: Ipsum autem asperiores maiores animi placeat.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the image config to describe. If not\
            \ specified, the latest version is described."
          example: Rerum dolor et officiis porro consectetur.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the image config to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Quis autem maiores velit.
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The image configuration ID
        example: imgc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Config
          example: Quae sint voluptate temporibus sequi iusto sequi.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                customImageCommandsAndArgs:
                  args:
                  - -d
                  - mysql
                  commands:
                  - echo
                  - "Hello, World!"
                description: An image configuration for my new entity
                id: Magnam consequatur mollitia illum sed voluptatem repudiandae.
                imageName: mysql
                imageRegistryId: Possimus minima est.
                imageSignaturePublicKeyPEM: |
                  -----BEGIN PUBLIC KEY-----
                  MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
                  7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
                  -----END PUBLIC KEY-----
                imageTag: v1
                serviceEnvironmentId: se-123456
                serviceId: s-123456
              schema:
                $ref: "#/components/schemas/DescribeImageConfigResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe the image\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeImageConfig image-config-api
      tags:
      - image-config-api
    patch:
      operationId: image-config-api#UpdateImageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The image configuration ID
        example: imgc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Config
          example: Sed et quaerat hic sunt sunt.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              customImageCommandsAndArgs:
                args:
                - -d
                - mysql
                commands:
                - echo
                - "Hello, World!"
              description: An image configuration for my new entity
              imageName: mysql
              imageRegistryId: Iure consequatur incidunt vel illum.
              imageSignaturePublicKeyPEM: |
                -----BEGIN PUBLIC KEY-----
                MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
                7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
                -----END PUBLIC KEY-----
              imageTag: v1
            schema:
              $ref: "#/components/schemas/UpdateImageConfigRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update the image\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateImageConfig image-config-api
      tags:
      - image-config-api
  /2022-09-01-00/service/{serviceId}/image-config/{id}/release:
    post:
      operationId: image-config-api#ReleaseImageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The image configuration ID
        example: imgc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Config
          example: Illum unde dolorem ratione ea sit sunt.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              productTierId: Nihil veritatis.
            schema:
              $ref: "#/components/schemas/ReleaseImageConfigRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to release the image\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: ReleaseImageConfig image-config-api
      tags:
      - image-config-api
  /2022-09-01-00/service/{serviceId}/image-config/{id}/rollout:
    get:
      operationId: image-config-api#RolloutFleetImageStatus
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The image configuration ID
        example: imgc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Config
          example: Et ut culpa aspernatur.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING
              schema:
                $ref: "#/components/schemas/RolloutFleetImageStatusResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get the fleet\
            \ image rollout status"
      security:
      - api_key_header_Authorization: []
      summary: RolloutFleetImageStatus image-config-api
      tags:
      - image-config-api
    post:
      operationId: image-config-api#RolloutFleetImageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The image configuration ID
        example: imgc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Config
          example: Dignissimos aut aut sit et.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to rollout to the\
            \ fleet"
      security:
      - api_key_header_Authorization: []
      summary: RolloutFleetImageConfig image-config-api
      tags:
      - image-config-api
  /2022-09-01-00/service/{serviceId}/infra-config:
    post:
      operationId: infra-config-api#CreateInfraConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              computeConfigId: Reiciendis necessitatibus ut voluptas minima et.
              customTag:
                key: customKey
                value: customValue
              description: Infra config used for the base tier MySQL service
              name: MySQL Writer Infra Config
              networkConfigId: Nobis voluptatem qui id voluptas rerum.
              serviceEnvironmentId: se-123456
              storageConfigId: Quos adipisci voluptatem.
            schema:
              $ref: "#/components/schemas/CreateInfraConfigRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Quam beatae totam excepturi omnis provident hic.
              schema:
                description: Infra Config ID created
                example: Iste asperiores quas eveniet reiciendis.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create an infra\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateInfraConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}:
    delete:
      operationId: infra-config-api#DeleteInfraConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Distinctio consequatur atque voluptatem esse ipsum voluptatum.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete an infra\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteInfraConfig infra-config-api
      tags:
      - infra-config-api
    get:
      operationId: infra-config-api#DescribeInfraConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the infra config to describe. If not\
          \ specified, the latest version is described."
        example: Vel provident quia voluptas ea quia nemo.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the infra config to describe. If not\
            \ specified, the latest version is described."
          example: Id autem culpa ea sint ut esse.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the infra config to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Eos inventore magnam officiis.
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Aut reiciendis quo aperiam modi aut eligendi.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                computeConfigId: Nihil laudantium.
                customTag:
                  key: customKey
                  value: customValue
                description: Infra config used for the base tier MySQL service
                id: Dicta iste aperiam maxime incidunt sunt.
                name: MySQL Writer Infra Config
                networkConfigId: Aut voluptas et et.
                serviceEnvironmentId: se-123456
                serviceId: s-123456
                storageConfigId: Reprehenderit perferendis.
              schema:
                $ref: "#/components/schemas/DescribeInfraConfigResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe an infra\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeInfraConfig infra-config-api
      tags:
      - infra-config-api
    patch:
      operationId: infra-config-api#UpdateInfraConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Distinctio rem labore qui enim atque nulla.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              computeConfigId: Enim animi deleniti voluptatem quae repudiandae temporibus.
              customTag:
                key: customKey
                value: customValue
              description: Infra config used for the base tier MySQL service
              name: MySQL Writer Infra Config
              networkConfigId: Architecto quod aut deleniti est consequatur non.
              storageConfigId: Enim necessitatibus officia in et aut illo.
            schema:
              $ref: "#/components/schemas/UpdateInfraConfigRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update an infra\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateInfraConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/associated-resources:
    get:
      operationId: infra-config-api#ListAssociatedResources
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Possimus ut maiores.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: Praesentium explicabo ea enim ullam repellat.
                resourceIds:
                - r-12345678
                - r-abcdefgh
                serviceId: s-123456
              schema:
                $ref: "#/components/schemas/ListAssociatedResourcesResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list associated\
            \ resources"
      security:
      - api_key_header_Authorization: []
      summary: ListAssociatedResources infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/compute-config:
    delete:
      operationId: infra-config-api#DetachComputeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Reprehenderit architecto.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to detach a compute\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DetachComputeConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/network-config:
    delete:
      operationId: infra-config-api#DetachNetworkConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Magnam harum consequuntur.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to detach a network\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DetachNetworkConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/release:
    post:
      operationId: infra-config-api#ReleaseInfraConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Maiores rem rerum neque nisi quae magni.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              productTierId: Ipsum similique asperiores nobis blanditiis.
            schema:
              $ref: "#/components/schemas/ReleaseInfraConfigRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to release an infra\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: ReleaseInfraConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/rollout:
    post:
      operationId: infra-config-api#RolloutFleetInfra
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Sed qui qui.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to rollout to the\
            \ fleet"
      security:
      - api_key_header_Authorization: []
      summary: RolloutFleetInfra infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/rollout/status:
    get:
      operationId: infra-config-api#RolloutFleetInfraStatus
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Consequatur eaque facere architecto voluptate quo.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                status: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING
              schema:
                $ref: "#/components/schemas/RolloutFleetInfraStatusResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get the fleet\
            \ rollout infra status"
      security:
      - api_key_header_Authorization: []
      summary: RolloutFleetInfraStatus infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/storage-config:
    delete:
      operationId: infra-config-api#DetachStorageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Et veniam dolores rerum dignissimos.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to detach a storage\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DetachStorageConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/input-parameter:
    post:
      operationId: input-parameter-api#CreateInputParameter
      parameters:
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              defaultValue: default value
              dependentResourceId: Neque maxime molestiae cum dolor.
              description: Et nisi cum vel ullam.
              hasOptions: false
              isList: true
              key: h5
              labeledOptions:
                large: t3.xlarge
                medium: t3.large
                small: t3.medium
              limits:
                max: Omnis et recusandae amet voluptates.
                maxLength: Dolores enim molestiae.
                min: Odit voluptatem quae eaque voluptatibus voluptatem non.
                minLength: Nobis quia aut nihil.
              modifiable: true
              name: s8w
              options:
              - a
              - b
              - c
              - default value
              regex: "^[a-zA-Z0-9_-]+$"
              required: false
              resourceId: Possimus quae.
              tabIndex: 1
              type: Boolean|Float64|String|Resource|Secret|Password
            schema:
              $ref: "#/components/schemas/CreateInputParameterRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Molestiae ducimus rerum consequatur.
              schema:
                description: Input Parameter ID created
                example: Dolorum voluptatum consequatur hic suscipit tempore.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create an input\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: CreateInputParameter input-parameter-api
      tags:
      - input-parameter-api
  /2022-09-01-00/service/{serviceId}/input-parameter/{id}:
    delete:
      operationId: input-parameter-api#DeleteInputParameter
      parameters:
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: ID of the input parameter
        example: var-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Input Parameter
          example: Adipisci autem omnis culpa.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete an input\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: DeleteInputParameter input-parameter-api
      tags:
      - input-parameter-api
    get:
      operationId: input-parameter-api#DescribeInputParameter
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the instance to describe. If not specified,\
          \ the latest version is described."
        example: Amet temporibus.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the instance to describe. If not specified,\
            \ the latest version is described."
          example: Ipsa consequuntur consequatur voluptate modi.
          type: string
        style: form
      - allowEmptyValue: true
        description: Product tier id of the instance to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Omnis in officia.
          type: string
        style: form
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: ID of the input parameter
        example: var-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Input Parameter
          example: Dolor illo voluptas est.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                defaultValue: "true"
                dependentResourceId: Earum beatae quo dolorum voluptas eos harum.
                description: Nostrum natus voluptas praesentium molestiae rerum.
                hasOptions: false
                id: Nihil sed possimus.
                isList: false
                key: nz
                labeledOptions:
                  large: t3.xlarge
                  medium: t3.large
                  small: t3.medium
                limits:
                  max: Minus cupiditate sint neque qui.
                  maxLength: Mollitia rerum exercitationem rerum unde omnis.
                  min: Repellat voluptatem assumenda qui.
                  minLength: Qui voluptas enim hic dolores ipsam suscipit.
                modifiable: false
                name: jd
                options:
                - "true"
                - "false"
                regex: "^[a-zA-Z0-9_-]+$"
                required: false
                resourceId: Quisquam qui dolor quibusdam.
                serviceId: s-123456
                tabIndex: 1
                type: Boolean|Float64|String|Resource|Secret|Password
              schema:
                $ref: "#/components/schemas/DescribeInputParameterResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe an input\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: DescribeInputParameter input-parameter-api
      tags:
      - input-parameter-api
    patch:
      operationId: input-parameter-api#UpdateInputParameter
      parameters:
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: ID of the input parameter
        example: var-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Input Parameter
          example: Delectus recusandae et debitis praesentium id aperiam.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              defaultValue: "[\"1\", \"2.8\", \"3\"]"
              description: Aut expedita quidem ipsam.
              hasOptions: true
              labeledOptions:
                large: t3.xlarge
                medium: t3.large
                small: t3.medium
              limits:
                max: Omnis et recusandae amet voluptates.
                maxLength: Dolores enim molestiae.
                min: Odit voluptatem quae eaque voluptatibus voluptatem non.
                minLength: Nobis quia aut nihil.
              modifiable: false
              name: hs
              options:
              - "[\"1\", \"2.8\", \"3\"]"
              - "[\"3.4\", \"4.5\"]"
              regex: "^[0-9]+$"
              required: false
              tabIndex: 1
            schema:
              $ref: "#/components/schemas/UpdateInputParameterRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update an input\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: UpdateInputParameter input-parameter-api
      tags:
      - input-parameter-api
  /2022-09-01-00/service/{serviceId}/model:
    post:
      operationId: service-model-api#CreateServiceModel
      parameters:
      - description: The service this model is for
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              accountConfigIds:
              - ac-12345678
              - ac-23456789
              description: A MySQL Hosted SaaS specializing in multi-writer clusters
                for high availability
              features:
              - configuration:
                  status: "ON"
                feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
              - configuration:
                  status: "ON"
                feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
              modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
              name: MySQL multi-writer service hosted model
              serviceApiId: Dolorem nam accusamus earum consequatur qui fugiat.
            schema:
              $ref: "#/components/schemas/CreateServiceModelRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Veniam aperiam dolorem recusandae facilis assumenda inventore.
              schema:
                description: Service Model ID created
                example: Error perferendis in aut deleniti.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a service\
            \ model"
      security:
      - api_key_header_Authorization: []
      summary: CreateServiceModel service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/model/{id}:
    delete:
      operationId: service-model-api#DeleteServiceModel
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Dignissimos expedita quo.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a service\
            \ model"
      security:
      - api_key_header_Authorization: []
      summary: DeleteServiceModel service-model-api
      tags:
      - service-model-api
    get:
      operationId: service-model-api#DescribeServiceModel
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Quae et enim in est.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                accountConfigIds:
                - ac-12345678
                - ac-23456789
                activeAccountConfigIds:
                  aws: ac-12345678
                  gcp: ac-23456789
                description: A MySQL Hosted SaaS specializing in multi-writer clusters
                  for high availability
                features:
                - configuration:
                    status: "ON"
                  feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
                - configuration:
                    status: "ON"
                  feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
                id: Doloribus fuga eum impedit et eos cupiditate.
                key: mysql-multi-writer-service-hosted-model
                modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                name: MySQL multi-writer service hosted model
                productTiers:
                - pt-12345678
                - pt-87654321
                serviceApiId: Eum perspiciatis qui quia.
                serviceId: s-123456
              schema:
                $ref: "#/components/schemas/DescribeServiceModelResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a service\
            \ model"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceModel service-model-api
      tags:
      - service-model-api
    patch:
      operationId: service-model-api#UpdateServiceModel
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Atque dolore corporis.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL Hosted SaaS specializing in multi-writer clusters
                for high availability
              name: MySQL multi-writer service hosted model
            schema:
              $ref: "#/components/schemas/UpdateServiceModelRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update a service\
            \ model"
      security:
      - api_key_header_Authorization: []
      summary: UpdateServiceModel service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/model/{id}/account-config:
    delete:
      operationId: service-model-api#RemoveAccountConfigFromServiceModel
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Tempore nihil consequatur.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              accountConfigId: Et sit qui in et.
            schema:
              $ref: "#/components/schemas/RemoveAccountConfigFromServiceModelRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to remove an account\
            \ config from a service model"
      security:
      - api_key_header_Authorization: []
      summary: RemoveAccountConfigFromServiceModel service-model-api
      tags:
      - service-model-api
    post:
      operationId: service-model-api#AddAccountConfigToServiceModel
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Ea dolorem.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              accountConfigId: Quisquam molestias nam.
            schema:
              $ref: "#/components/schemas/AddAccountConfigToServiceModelRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to add an account\
            \ config to a service model"
      security:
      - api_key_header_Authorization: []
      summary: AddAccountConfigToServiceModel service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/model/{id}/account-config/{accountConfigId}/active:
    post:
      operationId: service-model-api#SetActiveAccountConfig
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Illum vitae corporis qui.
          type: string
        style: simple
      - description: The infrastructure account configuration ID
        example: ac-12345678
        explode: false
        in: path
        name: accountConfigId
        required: true
        schema:
          description: ID of an Account Config
          example: Est at voluptate.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to set the active\
            \ account config"
      security:
      - api_key_header_Authorization: []
      summary: SetActiveAccountConfig service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/model/{id}/feature:
    delete:
      operationId: service-model-api#DisableServiceModelFeature
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Non alias aut nostrum earum.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            schema:
              $ref: "#/components/schemas/DisableServiceModelFeatureRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used when the service model feature\
            \ could not be disabled"
      security:
      - api_key_header_Authorization: []
      summary: DisableServiceModelFeature service-model-api
      tags:
      - service-model-api
    put:
      operationId: service-model-api#EnableServiceModelFeature
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Aliquam ab iste rerum quasi autem.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            schema:
              $ref: "#/components/schemas/EnableServiceModelFeatureRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used when the service model feature\
            \ could not be enabled"
      security:
      - api_key_header_Authorization: []
      summary: EnableServiceModelFeature service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/model/{id}/release:
    get:
      operationId: service-model-api#ReleaseServiceModelStatus
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Laudantium vero.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                status: DEPLOYING|READY|PENDING|FAILED|NOT_CONFIGURED
              schema:
                $ref: "#/components/schemas/ReleaseServiceModelResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to release a service\
            \ model status"
      security:
      - api_key_header_Authorization: []
      summary: ReleaseServiceModelStatus service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/model/{serviceModelId}/product-tier:
    get:
      operationId: product-tier-api#ListProductTier
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Service model ID
        example: sm-12345678
        explode: false
        in: path
        name: serviceModelId
        required: true
        schema:
          description: ID of a Service Model
          example: Qui sequi.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - Aut rem et.
                - Quia maxime quia.
                - Odio totam consectetur quis doloremque sunt quia.
                - Consequatur numquam dolorem vel nemo.
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListProductTiersResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list product tiers"
      security:
      - api_key_header_Authorization: []
      summary: ListProductTier product-tier-api
      tags:
      - product-tier-api
  /2022-09-01-00/service/{serviceId}/model/{serviceModelId}/vunit:
    get:
      operationId: vunit-api#ListVUnits
      parameters:
      - description: Service ID for the VUnit
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Service Model ID for the VUnit
        example: sm-12345678
        explode: false
        in: path
        name: serviceModelId
        required: true
        schema:
          description: ID of a Service Model
          example: Veritatis non voluptas officia molestiae.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              cloudProvider: aws|azure|gcp|all
              region: us-west-2
            schema:
              $ref: "#/components/schemas/ListVUnitsRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                  aws:
                  - vu-12345678
                  - vu-abcdefgh
                  gcp:
                  - vu-1234efgh
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListVUnitsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list vunits"
      security:
      - api_key_header_Authorization: []
      summary: ListVUnits vunit-api
      tags:
      - vunit-api
  /2022-09-01-00/service/{serviceId}/model/copy/{sourceId}:
    post:
      operationId: service-model-api#CopyServiceModel
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The source service model ID
        example: sm-12345678
        explode: false
        in: path
        name: sourceId
        required: true
        schema:
          description: ID of a Service Model
          example: Voluptas in sint quo.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              accountConfigIds:
              - ac-12345678
              - ac-23456789
              description: A MySQL Hosted SaaS specializing in multi-writer clusters
                for high availability
              features:
              - configuration:
                  status: "ON"
                feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
              - configuration:
                  status: "ON"
                feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
              - configuration:
                  status: "ON"
                feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
              name: MySQL multi-writer service hosted model
              targetServiceModelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
              targetTierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
            schema:
              $ref: "#/components/schemas/CopyServiceModelRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Quisquam debitis quas sed consequatur quo.
              schema:
                description: New Service Model ID
                example: Facilis qui.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to copy a service\
            \ model"
      security:
      - api_key_header_Authorization: []
      summary: CopyServiceModel service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/network-config:
    get:
      operationId: network-config-api#ListNetworkConfig
      parameters:
      - allowEmptyValue: true
        description: Is network config managed by omnistrate
        example: false
        explode: true
        in: query
        name: managed
        required: false
        schema:
          description: Is network config managed by omnistrate
          example: false
          type: boolean
        style: form
      - description: The service ID to list network configs for
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - Provident iure consequatur distinctio fugiat eum qui.
                - Minima qui accusantium amet aut autem.
                - Alias quo est optio assumenda dignissimos.
                - Eum beatae asperiores.
                nextPageToken: token
              schema:
                $ref: "#/components/schemas/ListNetworkConfigsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list network configs"
      security:
      - api_key_header_Authorization: []
      summary: ListNetworkConfig network-config-api
      tags:
      - network-config-api
    post:
      operationId: network-config-api#CreateNetworkConfig
      parameters:
      - description: The ID of the service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A multi-zone HA network config
              endpointPerReplica: true
              internal: true
              name: Multi-zone
              openPorts:
              - 1299
              - 3306
              privateNetworkingConfiguration:
                privateLinkConfiguration:
                  awsPrivateLinkConfigurations:
                  - port: 80
                    targetGroupName: my-target-group
                  - port: 80
                    targetGroupName: my-target-group
                  - port: 80
                    targetGroupName: my-target-group
              publicNetworkingConfiguration:
                enableClusterLoadBalancer: true
                enableNodeLoadBalancer: true
              stableEgressIP: true
              tlsTerminationPort: 443
              zoneConfiguration: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
            schema:
              $ref: "#/components/schemas/CreateNetworkConfigRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Sed velit delectus vel officia.
              schema:
                description: Network Config ID created
                example: Qui temporibus.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create network\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateNetworkConfig network-config-api
      tags:
      - network-config-api
  /2022-09-01-00/service/{serviceId}/network-config/{id}:
    delete:
      operationId: network-config-api#DeleteNetworkConfig
      parameters:
      - description: The ID of the service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the network config
        example: nc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Network Config
          example: Doloremque dolorem consectetur doloremque iusto officia minima.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a network\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteNetworkConfig network-config-api
      tags:
      - network-config-api
    get:
      operationId: network-config-api#DescribeNetworkConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the network config to describe. If not\
          \ specified, the latest version is described."
        example: Laudantium deserunt fugiat maiores enim pariatur.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the network config to describe. If\
            \ not specified, the latest version is described."
          example: Pariatur sit ut vitae officiis.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the network config to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Est incidunt.
          type: string
        style: form
      - description: The ID of the service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the network config
        example: nc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Network Config
          example: Ducimus et exercitationem perferendis.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: A multi-zone HA network config
                endpointPerReplica: true
                id: Recusandae laborum.
                infraConfigIDs:
                - ic-12345678
                - ic-abcdefgh
                internal: true
                name: Multi-zone
                openPorts:
                - 1299
                - 3306
                privateNetworkingConfiguration:
                  privateLinkConfiguration:
                    awsPrivateLinkConfigurations:
                    - port: 80
                      targetGroupName: my-target-group
                    - port: 80
                      targetGroupName: my-target-group
                    - port: 80
                      targetGroupName: my-target-group
                publicNetworkingConfiguration:
                  enableClusterLoadBalancer: true
                  enableNodeLoadBalancer: true
                serviceId: s-123456
                stableEgressIP: true
                tlsTerminationPort: 443
                zoneConfiguration: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
              schema:
                $ref: "#/components/schemas/DescribeNetworkConfigResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe network\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeNetworkConfig network-config-api
      tags:
      - network-config-api
    patch:
      operationId: network-config-api#UpdateNetworkConfig
      parameters:
      - description: The ID of the service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the network config
        example: nc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Network Config
          example: Temporibus rem vitae ex voluptatum quos.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A multi-zone HA network config
              endpointPerReplica: true
              internal: true
              name: Multi-zone
              openPorts:
              - 1299
              - 3306
              privateNetworkingConfiguration:
                privateLinkConfiguration:
                  awsPrivateLinkConfigurations:
                  - port: 80
                    targetGroupName: my-target-group
                  - port: 80
                    targetGroupName: my-target-group
                  - port: 80
                    targetGroupName: my-target-group
              publicNetworkingConfiguration:
                enableClusterLoadBalancer: true
                enableNodeLoadBalancer: true
              stableEgressIP: true
              tlsTerminationPort: 443
              zoneConfiguration: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
            schema:
              $ref: "#/components/schemas/UpdateNetworkConfigRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update network\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateNetworkConfig network-config-api
      tags:
      - network-config-api
  /2022-09-01-00/service/{serviceId}/network/{id}:
    get:
      operationId: vunit-api#DescribeNetwork
      parameters:
      - description: Service ID context
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Network to operate on
        example: n-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Network
          example: Eum autem quidem.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cidr: 10.0.0.0/16
                id: Perferendis dolores quis dolor magni.
                networkConfigId: Voluptatem vitae.
                serviceId: s-123456
                type: PUBLIC
                vunitId: Omnis accusamus.
              schema:
                $ref: "#/components/schemas/DescribeNetworkResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a network"
      security:
      - api_key_header_Authorization: []
      summary: DescribeNetwork vunit-api
      tags:
      - vunit-api
  /2022-09-01-00/service/{serviceId}/output-parameter:
    post:
      operationId: output-parameter-api#CreateOutputParameter
      parameters:
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: Username of the user created in the target system
              genericCommandValueProvider:
                args:
                - -s
                - http://example.com/api/username
                command: curl
                environment:
                  PATH: /usr/local/bin:/usr/bin:/bin
                retryCount: 3
                shell: /bin/bash
                timeout: 30
                workingDir: /tmp
              key: username
              kubectlValueProvider:
                command: "get secret {{ $sys.id }}-creds -o jsonpath='{.data.username}'"
                context: production
                environment:
                  KUBECONFIG: /path/to/config
                namespace: default
                retryCount: 3
                timeout: 30
              name: Username
              resourceId: Id voluptatem et rerum vitae.
              value: johndoe
              valueRef: $var.username
              valueType: Boolean|Float64|String|Secret|Password
            schema:
              $ref: "#/components/schemas/CreateOutputParameterRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Ratione aut et aliquam iusto qui dolorem.
              schema:
                description: Output Parameter ID created
                example: Dignissimos alias soluta vel ut asperiores.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create an output\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: CreateOutputParameter output-parameter-api
      tags:
      - output-parameter-api
  /2022-09-01-00/service/{serviceId}/output-parameter/{id}:
    delete:
      operationId: output-parameter-api#DeleteOutputParameter
      parameters:
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the output parameter
        example: op-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Output Parameter
          example: Cumque est.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete an output\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: DeleteOutputParameter output-parameter-api
      tags:
      - output-parameter-api
    get:
      operationId: output-parameter-api#DescribeOutputParameter
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the resource to describe. If not specified,\
          \ the latest version is described."
        example: Dolores qui hic ipsa.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the resource to describe. If not specified,\
            \ the latest version is described."
          example: Omnis laboriosam eos iusto vel facilis officia.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the resource to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Nemo porro.
          type: string
        style: form
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the output parameter
        example: op-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Output Parameter
          example: Et pariatur nobis.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: Username of the user created in the target system
                genericCommandValueProvider:
                  args:
                  - -s
                  - http://example.com/api/username
                  command: curl
                  environment:
                    PATH: /usr/local/bin:/usr/bin:/bin
                  retryCount: 3
                  shell: /bin/bash
                  timeout: 30
                  workingDir: /tmp
                id: Sequi officiis facilis atque nulla voluptatibus.
                key: username
                kubectlValueProvider:
                  command: "get secret {{ $sys.id }}-creds -o jsonpath='{.data.username}'"
                  context: production
                  environment:
                    KUBECONFIG: /path/to/config
                  namespace: default
                  retryCount: 3
                  timeout: 30
                name: Username
                resourceId: Explicabo ut expedita dolores voluptatibus temporibus.
                serviceId: s-123456
                value: johndoe
                valueRef: $var.username
                valueType: Boolean|Float64|String|Secret|Password
              schema:
                $ref: "#/components/schemas/DescribeOutputParameterResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe an output\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: DescribeOutputParameter output-parameter-api
      tags:
      - output-parameter-api
    patch:
      operationId: output-parameter-api#UpdateOutputParameter
      parameters:
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the output parameter
        example: op-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Output Parameter
          example: Odit architecto et ipsum fugiat tempore.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: Username of the user created in the target system
              genericCommandValueProvider:
                args:
                - -s
                - http://example.com/api/username
                command: curl
                environment:
                  PATH: /usr/local/bin:/usr/bin:/bin
                retryCount: 3
                shell: /bin/bash
                timeout: 30
                workingDir: /tmp
              kubectlValueProvider:
                command: "get secret {{ $sys.id }}-creds -o jsonpath='{.data.username}'"
                context: production
                environment:
                  KUBECONFIG: /path/to/config
                namespace: default
                retryCount: 3
                timeout: 30
              name: Username
              value: johndoe
              valueRef: $var.username
              valueType: Boolean|Float64|String|Secret|Password
            schema:
              $ref: "#/components/schemas/UpdateOutputParameterRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update an output\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: UpdateOutputParameter output-parameter-api
      tags:
      - output-parameter-api
  /2022-09-01-00/service/{serviceId}/product-tier:
    post:
      operationId: product-tier-api#CreateProductTier
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              allowCreatesWhenPaymentNotConfigured: true
              autoApproveSubscription: false
              awsRegions:
              - us-east-2
              - ca-central-1
              azureRegions:
              - northcentralus
              billingProductID: abc123
              billingProviders:
              - STRIPE
              - BRING_YOUR_OWN
              defaultBillingProvider: STRIPE|BRING_YOUR_OWN
              deploymentConfiguration:
                onPremInstallerTools:
                  helperUserScript:
                    content: echo 'hello world'
                requirements:
                  minimumK8sVersion: 1.23.1
              description: A premium product tier
              documentation: Any documentation
              exportUsageMetering: true
              exportUsageMeteringConfig:
                GCS:
                  GCSBucketName: my_billing_bucket_name
                S3:
                  S3BucketArn: arn:aws:s3:::my_billing_bucket_name
                  S3BucketRegion: us-east-1
              gcpRegions:
              - us-central1
              isDisabled: false
              maxNumberOfInstances: 5
              name: Premium
              planDescription: A premium plan
              pricePerUnit:
                CPU core hours:
                  amount: 0.001
                  currency: USD
                Memory GiB hours:
                  amount: 1.0E-4
                  currency: USD
                Replica hours:
                  amount: 0.001
                  currency: USD
                Storage GiB hours:
                  amount: 1.0E-4
                  currency: USD
              pricing:
                price1: value1
              privateRegions:
              - n/a
              serviceModelId: Qui minus magnam sunt consequatur.
              support: Any support
              tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
            schema:
              $ref: "#/components/schemas/CreateProductTierRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Exercitationem ex.
              schema:
                description: Product Tier ID created
                example: Consequatur est voluptatem autem aspernatur.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a product\
            \ tier"
      security:
      - api_key_header_Authorization: []
      summary: CreateProductTier product-tier-api
      tags:
      - product-tier-api
  /2022-09-01-00/service/{serviceId}/product-tier/{id}:
    delete:
      operationId: product-tier-api#DeleteProductTier
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier
          example: Ipsum labore id saepe.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a product\
            \ tier"
      security:
      - api_key_header_Authorization: []
      summary: DeleteProductTier product-tier-api
      tags:
      - product-tier-api
    get:
      operationId: product-tier-api#DescribeProductTier
      parameters:
      - allowEmptyValue: true
        description: The version number for the specific version set
        example: "3.0"
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: The version number for the specific version set
          example: "3.0"
          type: string
        style: form
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier
          example: Ut voluptas doloremque.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                allowCreatesWhenPaymentNotConfigured: true
                apiGroups:
                  r-12345678: v1
                  r-23456789: v2
                  r-34567890: v3
                autoApproveSubscription: false
                awsRegions:
                - us-east-2
                - ca-central-1
                azureRegions:
                - northcentralus
                billingProductID: abc123
                billingProviders:
                - STRIPE
                - BRING_YOUR_OWN
                cloudProvidersConfigReadiness:
                  aws:
                    resourceA: missing terraform configuration
                    resourceB: missing cloudformation configuration
                defaultBillingProvider: STRIPE|BRING_YOUR_OWN
                deploymentConfiguration:
                  onPremInstallerTools:
                    helperUserScript:
                      content: echo 'hello world'
                  requirements:
                    minimumK8sVersion: 1.23.1
                description: A premium product tier
                documentation: Any documentation
                enabledFeatures:
                - configuration:
                    provider: native
                  feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                  scope: INTERNAL|CUSTOMER
                - configuration:
                    provider: native
                  feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                  scope: INTERNAL|CUSTOMER
                exportUsageMetering: true
                exportUsageMeteringConfig:
                  GCS:
                    GCSBucketName: my_billing_bucket_name
                  S3:
                    S3BucketArn: arn:aws:s3:::my_billing_bucket_name
                    S3BucketRegion: us-east-1
                features:
                  LOGS: true
                  METRICS: false
                gcpRegions:
                - us-central1
                id: Sint vel ducimus.
                isDisabled: false
                key: premium
                maxNumberOfInstances: 5
                name: Premium
                planDescription: A premium plan
                pricePerUnit:
                  CPU core hours:
                    amount: 0.001
                    currency: USD
                  Memory GiB hours:
                    amount: 1.0E-4
                    currency: USD
                  Replica hours:
                    amount: 0.001
                    currency: USD
                  Storage GiB hours:
                    amount: 1.0E-4
                    currency: USD
                pricing:
                  price1: value1
                privateRegions:
                - n/a
                serviceId: s-123456
                serviceModelId: Quasi a atque quae eius dolores.
                support: Any support
                tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
              schema:
                $ref: "#/components/schemas/DescribeProductTierResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a product\
            \ tier"
      security:
      - api_key_header_Authorization: []
      summary: DescribeProductTier product-tier-api
      tags:
      - product-tier-api
    patch:
      operationId: product-tier-api#UpdateProductTier
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier
          example: Est non esse odit reprehenderit occaecati recusandae.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              allowCreatesWhenPaymentNotConfigured: true
              autoApproveSubscription: false
              awsRegions:
              - us-east-2
              - ca-central-1
              azureRegions:
              - northcentralus
              billingProductID: abc123
              billingProviders:
              - STRIPE
              - BRING_YOUR_OWN
              defaultBillingProvider: STRIPE|BRING_YOUR_OWN
              deploymentConfiguration:
                onPremInstallerTools:
                  helperUserScript:
                    content: echo 'Hello World'
                requirements:
                  minimumK8sVersion: 1.23.1
              description: A premium product tier
              documentation: Any documentation
              exportUsageMetering: true
              exportUsageMeteringConfig:
                GCS:
                  GCSBucketName: my_billing_bucket_name
                S3:
                  S3BucketArn: arn:aws:s3:::my_billing_bucket_name
                  S3BucketRegion: us-east-1
              gcpRegions:
              - us-central1
              isDisabled: false
              maxNumberOfInstances: 5
              name: Premium
              planDescription: A premium plan
              pricePerUnit:
                CPU core hours:
                  amount: 0.001
                  currency: USD
                Memory GiB hours:
                  amount: 1.0E-4
                  currency: USD
                Replica hours:
                  amount: 0.001
                  currency: USD
                Storage GiB hours:
                  amount: 1.0E-4
                  currency: USD
              pricing:
                price1: value1
              privateRegions:
              - n/a
              support: Any support
              tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
            schema:
              $ref: "#/components/schemas/UpdateProductTierRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update a product\
            \ tier"
      security:
      - api_key_header_Authorization: []
      summary: UpdateProductTier product-tier-api
      tags:
      - product-tier-api
  /2022-09-01-00/service/{serviceId}/product-tier/{id}/feature:
    delete:
      operationId: product-tier-api#DisableProductTierFeature
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier
          example: Deleniti tenetur sequi ut.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
              scope: INTERNAL|CUSTOMER
            schema:
              $ref: "#/components/schemas/DisableProductTierFeatureRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used when the product tier feature\
            \ could not be disabled"
      security:
      - api_key_header_Authorization: []
      summary: DisableProductTierFeature product-tier-api
      tags:
      - product-tier-api
    put:
      operationId: product-tier-api#EnableProductTierFeature
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier
          example: Quia porro impedit commodi.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              configuration:
                S3BucketArn: arn:aws:s3:::my_billing_bucket_name
              feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
              scope: INTERNAL|CUSTOMER
            schema:
              $ref: "#/components/schemas/EnableProductTierFeatureRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used when the product tier feature\
            \ could not be enabled"
      security:
      - api_key_header_Authorization: []
      summary: EnableProductTierFeature product-tier-api
      tags:
      - product-tier-api
  /2022-09-01-00/service/{serviceId}/product-tier/{productTierId}/service-plan:
    get:
      operationId: service-plan-api#GetServicePlan
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Impedit qui.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                AutoApproveSubscription: false
                accountConfigIds:
                - ac-12345678
                - ac-23456789
                activeAccountConfigIds:
                  aws: ac-12345678
                  gcp: ac-23456789
                apiVersion: v1
                awsRegions:
                - us-east-2
                - ca-central-1
                azureRegions:
                - northcentralus
                deploymentConfigId: Quia suscipit sunt sed repudiandae.
                gcpRegions:
                - us-central1
                hasPendingChanges: true
                isProductTierDisabled: true
                latestMajorVersion: "3.0"
                modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
                privateRegions:
                - n/a
                productTierDescription: A premium product tier
                productTierDocumentation: Any documentation
                productTierFeatures:
                  LOGS: true
                  METRICS: false
                productTierId: Dolores nostrum.
                productTierKey: premium
                productTierName: Premium
                productTierPlanDescription: A premium plan
                productTierPricing:
                  price1: value1
                productTierSupport: Any support
                serviceApiDescription: A MySQL SaaS API specializing in multi-writer
                  multi-tenant clusters for high availability
                serviceApiId: Velit voluptatem aut ratione voluptas ad.
                serviceEnvironmentId: se-123456
                serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
                  clusters for high availability
                serviceModelFeatures:
                - configuration:
                    status: "ON"
                  feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
                - configuration:
                    status: "ON"
                  feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
                - configuration:
                    status: "ON"
                  feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
                - configuration:
                    status: "ON"
                  feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
                serviceModelId: Dolorem dolores saepe autem.
                serviceModelName: MySQL multi-writer service hosted model
                tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
                versionSetStatus: Preferred|Active|Deprecated|Pending
              schema:
                $ref: "#/components/schemas/GetServicePlanResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list product tiers"
      security:
      - api_key_header_Authorization: []
      summary: GetServicePlan service-plan-api
      tags:
      - service-plan-api
  /2022-09-01-00/service/{serviceId}/product-tier/copy/{sourceId}:
    post:
      operationId: product-tier-api#CopyProductTier
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The source product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: sourceId
        required: true
        schema:
          description: ID of a Product Tier
          example: Modi reiciendis quae accusamus vero facere repudiandae.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              allowCreatesWhenPaymentNotConfigured: true
              autoApproveSubscription: false
              awsRegions:
              - us-east-2
              - ca-central-1
              azureRegions:
              - northcentralus
              billingProductID: abc123
              description: A premium product tier
              documentation: Any documentation
              exportUsageMetering: true
              exportUsageMeteringConfig:
                GCS:
                  GCSBucketName: my_billing_bucket_name
                S3:
                  S3BucketArn: arn:aws:s3:::my_billing_bucket_name
                  S3BucketRegion: us-east-1
              gcpRegions:
              - us-central1
              maxNumberOfInstances: 5
              name: Premium
              planDescription: A premium plan
              pricePerUnit:
                CPU core hours:
                  amount: 0.001
                  currency: USD
                Memory GiB hours:
                  amount: 1.0E-4
                  currency: USD
                Replica hours:
                  amount: 0.001
                  currency: USD
                Storage GiB hours:
                  amount: 1.0E-4
                  currency: USD
              pricing:
                price1: value1
              privateRegions:
              - n/a
              serviceModelId: Libero dolorum cumque id ipsam autem officia.
              support: Any support
              targetTierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
            schema:
              $ref: "#/components/schemas/CopyProductTierRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Et consequuntur.
              schema:
                description: Product Tier ID created
                example: Sit deleniti in quam asperiores.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a product\
            \ tier"
      security:
      - api_key_header_Authorization: []
      summary: CopyProductTier product-tier-api
      tags:
      - product-tier-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/customer-version-set:
    get:
      operationId: tier-version-set-api#CustomerListTierVersionSets
      parameters:
      - allowEmptyValue: true
        example: token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The next token to use for pagination
          example: token
          type: string
        style: form
      - allowEmptyValue: true
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        style: form
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Enim autem.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                nextPageToken: next-token
                tierVersionSets:
                - autoApproveSubscription: false
                  baseVersion: "3.0"
                  createdAt: 2020-01-01T00:00:00Z
                  createdBy: John Doe
                  description: Ducimus eligendi labore aperiam odio.
                  enabledFeatures:
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  features:
                    LOGS: true
                    METRICS: false
                  instanceCount: 12
                  latestUpgradePathId: In et qui possimus voluptatum voluptate.
                  name: Regular version set
                  parentVersion: "2.0"
                  productTierId: Qui ut sed.
                  releasedAt: 2020-01-01T00:00:00Z
                  releasedBy: John Doe
                  resources:
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  serviceId: s-123456
                  serviceModelId: Sapiente ducimus.
                  status: Preferred|Active|Deprecated|Pending
                  type: Major|Incremental|UserDefined
                  updatedAt: 2020-01-01T00:00:00Z
                  version: "3.0"
                - autoApproveSubscription: false
                  baseVersion: "3.0"
                  createdAt: 2020-01-01T00:00:00Z
                  createdBy: John Doe
                  description: Ducimus eligendi labore aperiam odio.
                  enabledFeatures:
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  features:
                    LOGS: true
                    METRICS: false
                  instanceCount: 12
                  latestUpgradePathId: In et qui possimus voluptatum voluptate.
                  name: Regular version set
                  parentVersion: "2.0"
                  productTierId: Qui ut sed.
                  releasedAt: 2020-01-01T00:00:00Z
                  releasedBy: John Doe
                  resources:
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  serviceId: s-123456
                  serviceModelId: Sapiente ducimus.
                  status: Preferred|Active|Deprecated|Pending
                  type: Major|Incremental|UserDefined
                  updatedAt: 2020-01-01T00:00:00Z
                  version: "3.0"
                - autoApproveSubscription: false
                  baseVersion: "3.0"
                  createdAt: 2020-01-01T00:00:00Z
                  createdBy: John Doe
                  description: Ducimus eligendi labore aperiam odio.
                  enabledFeatures:
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  features:
                    LOGS: true
                    METRICS: false
                  instanceCount: 12
                  latestUpgradePathId: In et qui possimus voluptatum voluptate.
                  name: Regular version set
                  parentVersion: "2.0"
                  productTierId: Qui ut sed.
                  releasedAt: 2020-01-01T00:00:00Z
                  releasedBy: John Doe
                  resources:
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  serviceId: s-123456
                  serviceModelId: Sapiente ducimus.
                  status: Preferred|Active|Deprecated|Pending
                  type: Major|Incremental|UserDefined
                  updatedAt: 2020-01-01T00:00:00Z
                  version: "3.0"
                - autoApproveSubscription: false
                  baseVersion: "3.0"
                  createdAt: 2020-01-01T00:00:00Z
                  createdBy: John Doe
                  description: Ducimus eligendi labore aperiam odio.
                  enabledFeatures:
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  features:
                    LOGS: true
                    METRICS: false
                  instanceCount: 12
                  latestUpgradePathId: In et qui possimus voluptatum voluptate.
                  name: Regular version set
                  parentVersion: "2.0"
                  productTierId: Qui ut sed.
                  releasedAt: 2020-01-01T00:00:00Z
                  releasedBy: John Doe
                  resources:
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  serviceId: s-123456
                  serviceModelId: Sapiente ducimus.
                  status: Preferred|Active|Deprecated|Pending
                  type: Major|Incremental|UserDefined
                  updatedAt: 2020-01-01T00:00:00Z
                  version: "3.0"
              schema:
                $ref: "#/components/schemas/CustomerListTierVersionSetsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: CustomerListTierVersionSets tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set:
    get:
      operationId: tier-version-set-api#ListTierVersionSets
      parameters:
      - allowEmptyValue: true
        description: "If true, the latest major version is returned. The parameter\
          \ needs to be specified in isolation."
        example: true
        explode: true
        in: query
        name: latestMajorVersionOnly
        required: false
        schema:
          description: "If true, the latest major version is returned. The parameter\
            \ needs to be specified in isolation."
          example: true
          type: boolean
        style: form
      - allowEmptyValue: true
        description: Returns the latest incremental version for the given major version.
          The paramenter needs to be specified in isolation.
        example: "3.0"
        explode: true
        in: query
        name: latestIncrementalVersionForMajorVersion
        required: false
        schema:
          description: Returns the latest incremental version for the given major
            version. The paramenter needs to be specified in isolation.
          example: "3.0"
          type: string
        style: form
      - allowEmptyValue: true
        example: token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The next token to use for pagination
          example: token
          type: string
        style: form
      - allowEmptyValue: true
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        style: form
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Vero facilis officia odit magnam voluptatem.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                nextPageToken: next-token
                tierVersionSets:
                - autoApproveSubscription: false
                  baseVersion: "3.0"
                  createdAt: 2020-01-01T00:00:00Z
                  createdBy: John Doe
                  description: Ducimus eligendi labore aperiam odio.
                  enabledFeatures:
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  features:
                    LOGS: true
                    METRICS: false
                  instanceCount: 12
                  latestUpgradePathId: In et qui possimus voluptatum voluptate.
                  name: Regular version set
                  parentVersion: "2.0"
                  productTierId: Qui ut sed.
                  releasedAt: 2020-01-01T00:00:00Z
                  releasedBy: John Doe
                  resources:
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  serviceId: s-123456
                  serviceModelId: Sapiente ducimus.
                  status: Preferred|Active|Deprecated|Pending
                  type: Major|Incremental|UserDefined
                  updatedAt: 2020-01-01T00:00:00Z
                  version: "3.0"
                - autoApproveSubscription: false
                  baseVersion: "3.0"
                  createdAt: 2020-01-01T00:00:00Z
                  createdBy: John Doe
                  description: Ducimus eligendi labore aperiam odio.
                  enabledFeatures:
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  features:
                    LOGS: true
                    METRICS: false
                  instanceCount: 12
                  latestUpgradePathId: In et qui possimus voluptatum voluptate.
                  name: Regular version set
                  parentVersion: "2.0"
                  productTierId: Qui ut sed.
                  releasedAt: 2020-01-01T00:00:00Z
                  releasedBy: John Doe
                  resources:
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  serviceId: s-123456
                  serviceModelId: Sapiente ducimus.
                  status: Preferred|Active|Deprecated|Pending
                  type: Major|Incremental|UserDefined
                  updatedAt: 2020-01-01T00:00:00Z
                  version: "3.0"
                - autoApproveSubscription: false
                  baseVersion: "3.0"
                  createdAt: 2020-01-01T00:00:00Z
                  createdBy: John Doe
                  description: Ducimus eligendi labore aperiam odio.
                  enabledFeatures:
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  features:
                    LOGS: true
                    METRICS: false
                  instanceCount: 12
                  latestUpgradePathId: In et qui possimus voluptatum voluptate.
                  name: Regular version set
                  parentVersion: "2.0"
                  productTierId: Qui ut sed.
                  releasedAt: 2020-01-01T00:00:00Z
                  releasedBy: John Doe
                  resources:
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  serviceId: s-123456
                  serviceModelId: Sapiente ducimus.
                  status: Preferred|Active|Deprecated|Pending
                  type: Major|Incremental|UserDefined
                  updatedAt: 2020-01-01T00:00:00Z
                  version: "3.0"
                - autoApproveSubscription: false
                  baseVersion: "3.0"
                  createdAt: 2020-01-01T00:00:00Z
                  createdBy: John Doe
                  description: Ducimus eligendi labore aperiam odio.
                  enabledFeatures:
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  - configuration:
                      provider: native
                    feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                    scope: INTERNAL|CUSTOMER
                  features:
                    LOGS: true
                    METRICS: false
                  instanceCount: 12
                  latestUpgradePathId: In et qui possimus voluptatum voluptate.
                  name: Regular version set
                  parentVersion: "2.0"
                  productTierId: Qui ut sed.
                  releasedAt: 2020-01-01T00:00:00Z
                  releasedBy: John Doe
                  resources:
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: Corrupti architecto consequatur rerum beatae id.
                    imageConfigId: Illo mollitia.
                    infraConfigId: Veritatis quia accusantium ratione repellendus
                      ut consequatur.
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                    urlKey: myResource
                  serviceId: s-123456
                  serviceModelId: Sapiente ducimus.
                  status: Preferred|Active|Deprecated|Pending
                  type: Major|Incremental|UserDefined
                  updatedAt: 2020-01-01T00:00:00Z
                  version: "3.0"
              schema:
                $ref: "#/components/schemas/ListTierVersionSetsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: ListTierVersionSets tier-version-set-api
      tags:
      - tier-version-set-api
    post:
      operationId: tier-version-set-api#CreateTierVersionSet
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Veritatis molestias dolor et suscipit recusandae.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: Saepe fuga dolore tempora quasi facere praesentium.
              name: Major version set
              parentVersion: "2.0"
              type: Major|Incremental|UserDefined
            schema:
              $ref: "#/components/schemas/CreateTierVersionSetRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                version: "3.0"
              schema:
                $ref: "#/components/schemas/CreateTierVersionSetResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request."
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a version\
            \ set."
      security:
      - api_key_header_Authorization: []
      summary: CreateTierVersionSet tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}:
    get:
      operationId: tier-version-set-api#DescribeTierVersionSet
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Hic quia veritatis.
          type: string
        style: simple
      - description: The version number for the specific version set.
        example: "3.0"
        explode: false
        in: path
        name: version
        required: true
        schema:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                autoApproveSubscription: false
                baseVersion: "3.0"
                createdAt: 2020-01-01T00:00:00Z
                createdBy: John Doe
                description: Quo eaque dignissimos dolorum et et.
                enabledFeatures:
                - configuration:
                    provider: native
                  feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                  scope: INTERNAL|CUSTOMER
                - configuration:
                    provider: native
                  feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                  scope: INTERNAL|CUSTOMER
                - configuration:
                    provider: native
                  feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                  scope: INTERNAL|CUSTOMER
                features:
                  LOGS: true
                  METRICS: false
                instanceCount: 12
                latestUpgradePathId: Atque dolorem fuga aut saepe in.
                name: Regular version set
                parentVersion: "2.0"
                productTierId: Voluptas commodi.
                releasedAt: 2020-01-01T00:00:00Z
                releasedBy: John Doe
                resources:
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: Corrupti architecto consequatur rerum beatae id.
                  imageConfigId: Illo mollitia.
                  infraConfigId: Veritatis quia accusantium ratione repellendus ut
                    consequatur.
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                  urlKey: myResource
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: Corrupti architecto consequatur rerum beatae id.
                  imageConfigId: Illo mollitia.
                  infraConfigId: Veritatis quia accusantium ratione repellendus ut
                    consequatur.
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                  urlKey: myResource
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: Corrupti architecto consequatur rerum beatae id.
                  imageConfigId: Illo mollitia.
                  infraConfigId: Veritatis quia accusantium ratione repellendus ut
                    consequatur.
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                  urlKey: myResource
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: Corrupti architecto consequatur rerum beatae id.
                  imageConfigId: Illo mollitia.
                  infraConfigId: Veritatis quia accusantium ratione repellendus ut
                    consequatur.
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                  urlKey: myResource
                serviceId: s-123456
                serviceModelId: Tenetur tempora.
                status: Preferred|Active|Deprecated|Pending
                type: Major|Incremental|UserDefined
                updatedAt: 2020-01-01T00:00:00Z
                version: "3.0"
              schema:
                $ref: "#/components/schemas/TierVersionSet"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: DescribeTierVersionSet tier-version-set-api
      tags:
      - tier-version-set-api
    patch:
      operationId: tier-version-set-api#UpdateTierVersionSet
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Eligendi quis quas nobis ut fugit.
          type: string
        style: simple
      - description: The version number for the specific version set.
        example: "3.0"
        explode: false
        in: path
        name: version
        required: true
        schema:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: Updated version set name
            schema:
              $ref: "#/components/schemas/UpdateTierVersionSetRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                autoApproveSubscription: false
                baseVersion: "3.0"
                createdAt: 2020-01-01T00:00:00Z
                createdBy: John Doe
                description: Nemo sint ipsum temporibus cumque impedit repudiandae.
                enabledFeatures:
                - configuration:
                    provider: native
                  feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                  scope: INTERNAL|CUSTOMER
                - configuration:
                    provider: native
                  feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                  scope: INTERNAL|CUSTOMER
                - configuration:
                    provider: native
                  feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                  scope: INTERNAL|CUSTOMER
                - configuration:
                    provider: native
                  feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                  scope: INTERNAL|CUSTOMER
                features:
                  LOGS: true
                  METRICS: false
                instanceCount: 12
                latestUpgradePathId: Pariatur assumenda ex quidem possimus.
                name: Regular version set
                parentVersion: "2.0"
                productTierId: Saepe omnis fugiat aut dolorem odit velit.
                releasedAt: 2020-01-01T00:00:00Z
                releasedBy: John Doe
                resources:
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: Corrupti architecto consequatur rerum beatae id.
                  imageConfigId: Illo mollitia.
                  infraConfigId: Veritatis quia accusantium ratione repellendus ut
                    consequatur.
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                  urlKey: myResource
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: Corrupti architecto consequatur rerum beatae id.
                  imageConfigId: Illo mollitia.
                  infraConfigId: Veritatis quia accusantium ratione repellendus ut
                    consequatur.
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                  urlKey: myResource
                serviceId: s-123456
                serviceModelId: Velit assumenda qui est impedit cumque.
                status: Preferred|Active|Deprecated|Pending
                type: Major|Incremental|UserDefined
                updatedAt: 2020-01-01T00:00:00Z
                version: "3.0"
              schema:
                $ref: "#/components/schemas/TierVersionSet"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: UpdateTierVersionSet tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/deprecate:
    patch:
      operationId: tier-version-set-api#DeprecateTierVersionSet
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Distinctio dolore ea.
          type: string
        style: simple
      - description: The version number for the specific version set.
        example: "3.0"
        explode: false
        in: path
        name: version
        required: true
        schema:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                autoApproveSubscription: false
                baseVersion: "3.0"
                createdAt: 2020-01-01T00:00:00Z
                createdBy: John Doe
                description: Et molestias.
                enabledFeatures:
                - configuration:
                    provider: native
                  feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                  scope: INTERNAL|CUSTOMER
                - configuration:
                    provider: native
                  feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                  scope: INTERNAL|CUSTOMER
                features:
                  LOGS: true
                  METRICS: false
                instanceCount: 12
                latestUpgradePathId: Sint aut velit amet.
                name: Regular version set
                parentVersion: "2.0"
                productTierId: Dolor inventore.
                releasedAt: 2020-01-01T00:00:00Z
                releasedBy: John Doe
                resources:
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: Corrupti architecto consequatur rerum beatae id.
                  imageConfigId: Illo mollitia.
                  infraConfigId: Veritatis quia accusantium ratione repellendus ut
                    consequatur.
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                  urlKey: myResource
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: Corrupti architecto consequatur rerum beatae id.
                  imageConfigId: Illo mollitia.
                  infraConfigId: Veritatis quia accusantium ratione repellendus ut
                    consequatur.
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                  urlKey: myResource
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: Corrupti architecto consequatur rerum beatae id.
                  imageConfigId: Illo mollitia.
                  infraConfigId: Veritatis quia accusantium ratione repellendus ut
                    consequatur.
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                  urlKey: myResource
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: Corrupti architecto consequatur rerum beatae id.
                  imageConfigId: Illo mollitia.
                  infraConfigId: Veritatis quia accusantium ratione repellendus ut
                    consequatur.
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                  urlKey: myResource
                serviceId: s-123456
                serviceModelId: In iure.
                status: Preferred|Active|Deprecated|Pending
                type: Major|Incremental|UserDefined
                updatedAt: 2020-01-01T00:00:00Z
                version: "3.0"
              schema:
                $ref: "#/components/schemas/TierVersionSet"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: DeprecateTierVersionSet tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/diff/{anotherVersion}:
    get:
      operationId: tier-version-set-api#DiffTierVersionSets
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Veritatis est voluptatum.
          type: string
        style: simple
      - description: The version number for the version set.
        example: "3.0"
        explode: false
        in: path
        name: version
        required: true
        schema:
          description: The version number for the version set.
          example: "3.0"
          type: string
        style: simple
      - description: The target version to compare against.
        example: "3.1"
        explode: false
        in: path
        name: anotherVersion
        required: true
        schema:
          description: The target version to compare against.
          example: "3.1"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                anotherVersion: "3.1"
                productTierId: Dicta mollitia voluptates temporibus quis fuga.
                resourceChangeSets:
                  Adipisci debitis voluptatem expedita laboriosam.:
                    categorizedResourceChanges:
                      Et inventore.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        status: NO_CHANGE|PENDING_CHANGE|NONE
                      Sequi officiis.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        status: NO_CHANGE|PENDING_CHANGE|NONE
                      Sunt provident ut quibusdam hic consequatur.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        status: NO_CHANGE|PENDING_CHANGE|NONE
                    imageConfigChanges:
                      changeState: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                      imageConfigId: Numquam sunt.
                      imageName: mysql
                    infraConfigChanges:
                      changeState: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                      infraConfigId: Illum ducimus ut quo assumenda ut.
                      name: MySQL Writer Infra Config
                    overallResourceStatus: NO_CHANGE|PENDING_CHANGE|NONE
                    productTierFeatureChanges: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                    resourceChanges: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                    resourceName: Aperiam laborum et ut velit dignissimos dolores.
                  Eos qui rem atque deserunt.:
                    categorizedResourceChanges:
                      Et inventore.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        status: NO_CHANGE|PENDING_CHANGE|NONE
                      Sequi officiis.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        status: NO_CHANGE|PENDING_CHANGE|NONE
                      Sunt provident ut quibusdam hic consequatur.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        status: NO_CHANGE|PENDING_CHANGE|NONE
                    imageConfigChanges:
                      changeState: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                      imageConfigId: Numquam sunt.
                      imageName: mysql
                    infraConfigChanges:
                      changeState: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                      infraConfigId: Illum ducimus ut quo assumenda ut.
                      name: MySQL Writer Infra Config
                    overallResourceStatus: NO_CHANGE|PENDING_CHANGE|NONE
                    productTierFeatureChanges: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                    resourceChanges: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                    resourceName: Aperiam laborum et ut velit dignissimos dolores.
                  Ut explicabo eum aut dolores consequatur dolor.:
                    categorizedResourceChanges:
                      Et inventore.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        status: NO_CHANGE|PENDING_CHANGE|NONE
                      Sequi officiis.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        status: NO_CHANGE|PENDING_CHANGE|NONE
                      Sunt provident ut quibusdam hic consequatur.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        status: NO_CHANGE|PENDING_CHANGE|NONE
                    imageConfigChanges:
                      changeState: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                      imageConfigId: Numquam sunt.
                      imageName: mysql
                    infraConfigChanges:
                      changeState: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                      infraConfigId: Illum ducimus ut quo assumenda ut.
                      name: MySQL Writer Infra Config
                    overallResourceStatus: NO_CHANGE|PENDING_CHANGE|NONE
                    productTierFeatureChanges: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                    resourceChanges: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                    resourceName: Aperiam laborum et ut velit dignissimos dolores.
                serviceId: s-123456
                version: "3.0"
              schema:
                $ref: "#/components/schemas/DiffTierVersionSetsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: DiffTierVersionSets tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/metadata:
    get:
      operationId: tier-version-set-api#DescribeTierVersionSetMetadata
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Culpa mollitia repellat libero minima sunt.
          type: string
        style: simple
      - description: The version number for the specific version set.
        example: "3.0"
        explode: false
        in: path
        name: version
        required: true
        schema:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                productTierId: Quia ut voluptates quidem consequatur est.
                releaseNotes: Sunt rerum et.
                serviceId: s-123456
                version: Maxime et.
              schema:
                $ref: "#/components/schemas/TierVersionSetMetadata"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: DescribeTierVersionSetMetadata tier-version-set-api
      tags:
      - tier-version-set-api
    patch:
      operationId: tier-version-set-api#UpdateTierVersionSetMetadata
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Modi voluptatibus est quidem totam.
          type: string
        style: simple
      - description: The version number for the specific version set.
        example: "3.0"
        explode: false
        in: path
        name: version
        required: true
        schema:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              releaseNotes: Animi libero.
            schema:
              $ref: "#/components/schemas/UpdateTierVersionSetMetadataRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                productTierId: Aut et earum.
                releaseNotes: Repellat ut maiores.
                serviceId: s-123456
                version: Quis dolores.
              schema:
                $ref: "#/components/schemas/TierVersionSetMetadata"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: UpdateTierVersionSetMetadata tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/promote:
    patch:
      operationId: tier-version-set-api#PromoteTierVersionSet
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Sapiente dolor perspiciatis sit.
          type: string
        style: simple
      - description: The version number for the specific version set.
        example: "3.0"
        explode: false
        in: path
        name: version
        required: true
        schema:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                autoApproveSubscription: false
                baseVersion: "3.0"
                createdAt: 2020-01-01T00:00:00Z
                createdBy: John Doe
                description: Omnis tempore quos.
                enabledFeatures:
                - configuration:
                    provider: native
                  feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                  scope: INTERNAL|CUSTOMER
                - configuration:
                    provider: native
                  feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                  scope: INTERNAL|CUSTOMER
                - configuration:
                    provider: native
                  feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                  scope: INTERNAL|CUSTOMER
                features:
                  LOGS: true
                  METRICS: false
                instanceCount: 12
                latestUpgradePathId: Vero quidem.
                name: Regular version set
                parentVersion: "2.0"
                productTierId: Fuga voluptatem iusto et maiores voluptates.
                releasedAt: 2020-01-01T00:00:00Z
                releasedBy: John Doe
                resources:
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: Corrupti architecto consequatur rerum beatae id.
                  imageConfigId: Illo mollitia.
                  infraConfigId: Veritatis quia accusantium ratione repellendus ut
                    consequatur.
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                  urlKey: myResource
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: Corrupti architecto consequatur rerum beatae id.
                  imageConfigId: Illo mollitia.
                  infraConfigId: Veritatis quia accusantium ratione repellendus ut
                    consequatur.
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                  urlKey: myResource
                serviceId: s-123456
                serviceModelId: Eum autem corrupti perspiciatis qui aut.
                status: Preferred|Active|Deprecated|Pending
                type: Major|Incremental|UserDefined
                updatedAt: 2020-01-01T00:00:00Z
                version: "3.0"
              schema:
                $ref: "#/components/schemas/TierVersionSet"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: PromoteTierVersionSet tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/release:
    patch:
      operationId: tier-version-set-api#ReleaseTierVersionSet
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Exercitationem quisquam soluta alias.
          type: string
        style: simple
      - description: The version number for the specific version set.
        example: "3.0"
        explode: false
        in: path
        name: version
        required: true
        schema:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              isPreferred: true
              name: Major version set
            schema:
              $ref: "#/components/schemas/ReleaseTierVersionSetRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                autoApproveSubscription: false
                baseVersion: "3.0"
                createdAt: 2020-01-01T00:00:00Z
                createdBy: John Doe
                description: Quos omnis veniam libero assumenda quo ex.
                enabledFeatures:
                - configuration:
                    provider: native
                  feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                  scope: INTERNAL|CUSTOMER
                - configuration:
                    provider: native
                  feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                  scope: INTERNAL|CUSTOMER
                - configuration:
                    provider: native
                  feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
                  scope: INTERNAL|CUSTOMER
                features:
                  LOGS: true
                  METRICS: false
                instanceCount: 12
                latestUpgradePathId: Sit nulla quos quae voluptate doloribus.
                name: Regular version set
                parentVersion: "2.0"
                productTierId: Voluptate aut aut quas rerum voluptates.
                releasedAt: 2020-01-01T00:00:00Z
                releasedBy: John Doe
                resources:
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: Corrupti architecto consequatur rerum beatae id.
                  imageConfigId: Illo mollitia.
                  infraConfigId: Veritatis quia accusantium ratione repellendus ut
                    consequatur.
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                  urlKey: myResource
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: Corrupti architecto consequatur rerum beatae id.
                  imageConfigId: Illo mollitia.
                  infraConfigId: Veritatis quia accusantium ratione repellendus ut
                    consequatur.
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                  urlKey: myResource
                serviceId: s-123456
                serviceModelId: Animi sit.
                status: Preferred|Active|Deprecated|Pending
                type: Major|Incremental|UserDefined
                updatedAt: 2020-01-01T00:00:00Z
                version: "3.0"
              schema:
                $ref: "#/components/schemas/TierVersionSet"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request."
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to release a version\
            \ set."
      security:
      - api_key_header_Authorization: []
      summary: ReleaseTierVersionSet tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/spec:
    get:
      operationId: tier-version-set-api#GetTierVersionSetSpec
      parameters:
      - allowEmptyValue: true
        description: "The version number for the specific version set. If not specified,\
          \ returns the latest preferred or active version."
        example: "3.0"
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: "The version number for the specific version set. If not specified,\
            \ returns the latest preferred or active version."
          example: "3.0"
          type: string
        style: form
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Natus ut eum ut necessitatibus commodi aut.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                createdAt: 2003-06-27T00:19:02Z
                productTierId: Temporibus dolores.
                serviceId: s-123456
                specContent: "{\"RawYAML\":\"bmFtZTogbXktc2VydmljZQpkZXBsb3ltZW50OgogIGhvc3RlZDoKICAgIGFjY291bnQ6IC4uLg==\"\
                  ,\"Configs\":{\"database_url\":\"cG9zdGdyZXM6Ly9sb2NhbGhvc3Q6NTQzMi9teWRi\"\
                  },\"Secrets\":{\"api_key\":\"c2VjcmV0X2FwaV9rZXlfdjEyMzQ1\"}}"
                updatedAt: 2006-09-07T01:56:23Z
                version: "1.0"
              schema:
                $ref: "#/components/schemas/GetTierVersionSetSpecResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get tier version\
            \ set spec"
      security:
      - api_key_header_Authorization: []
      summary: GetTierVersionSetSpec tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/specs:
    get:
      operationId: tier-version-set-api#ListTierVersionSetSpecs
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Quasi quod.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                specs:
                - createdAt: 1988-04-14T07:04:43Z
                  hasSpecFile: true
                  productTierId: Debitis in autem et dolores a fuga.
                  serviceId: s-123456
                  status: Active
                  updatedAt: 1980-01-01T01:54:00Z
                  version: "1.0"
                - createdAt: 1988-04-14T07:04:43Z
                  hasSpecFile: true
                  productTierId: Debitis in autem et dolores a fuga.
                  serviceId: s-123456
                  status: Active
                  updatedAt: 1980-01-01T01:54:00Z
                  version: "1.0"
              schema:
                $ref: "#/components/schemas/ListTierVersionSetSpecsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list tier version\
            \ set specs"
      security:
      - api_key_header_Authorization: []
      summary: ListTierVersionSetSpecs tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/producttier/{productTierId}/resource:
    get:
      operationId: resource-api#ListResources
      parameters:
      - allowEmptyValue: true
        description: Is resource managed by omnistrate
        example: false
        explode: true
        in: query
        name: managed
        required: false
        schema:
          description: Is resource managed by omnistrate
          example: false
          type: boolean
        style: form
      - allowEmptyValue: true
        description: "Product tier version of the instance to describe. If not specified,\
          \ the latest version is described."
        example: Ut sed vitae et quasi.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the instance to describe. If not specified,\
            \ the latest version is described."
          example: Sed dolores aut est.
          type: string
        style: form
      - description: The ID of the service to list resources for
        example: si-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Animi voluptatum qui voluptas nulla quis ad.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - r-12345678
                - r-abcdefgh
                - r-1234abcd
                nextPageToken: next-token
                resources:
                - actionHooks:
                  - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
                    scope: CLUSTER
                    type: INIT
                  additionalSecurityContext:
                    AddCapabilities:
                    - CAP_NET_ADMIN
                    - CAP_NET_RAW
                    DropCapabilities:
                    - CAP_NET_ADMIN
                    - CAP_NET_RAW
                    SupplementalGroupIDs:
                    - 1001
                    - 999
                  agentConfiguration:
                    codeInterpreter:
                      allowedPackages:
                      - pandas
                      - numpy
                      - matplotlib
                      enabled: true
                      provider: agentcore
                      timeout: 60
                    dockerfile: Dockerfile
                    evaluations:
                    - metrics:
                      - relevance
                      - helpfulness
                      name: response-quality
                      schedule: every 6 hours
                    memory:
                      enabled: true
                    monitoring:
                      enabled: true
                    vectorStore:
                      enabled: true
                  backupConfiguration:
                    backupPeriodInHours: 24
                    backupRetentionInDays: 7
                  blobStorageConfiguration:
                    GCSConfiguration: {}
                    S3Configuration: {}
                  capabilities:
                  - capability: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  containerImagesRegistryCopyConfiguration:
                    images:
                    - imageName: postgres
                      imageTag: "16"
                    - imageName: postgres
                      imageTag: "16"
                    - imageName: postgres
                      imageTag: "16"
                    pullSource:
                      credentials:
                        password: my-password
                        username: my-user
                      registryURL: https://my-registry.com
                      repositoryName: library
                    pushTarget:
                      credentials:
                        password: my-password
                        username: my-user
                      registryURL: https://my-registry.com
                      repositoryName: library
                  customLabels:
                    key: value
                  customSysCTLs:
                    net.ipv4.tcp_syncookies: "1"
                  customULimits:
                  - ULimitsName: NoProc
                    ULimitsType: Soft
                    ULimitsValue: 1000
                  - ULimitsName: NoFile
                    ULimitsType: Hard
                    ULimitsValue: 2048
                  dependencies:
                  - parameterMap:
                      clusterId: writerId
                      clusterOrg: userDatabase
                    resourceId: r-12345678
                  - parameterMap:
                      clusterId: readerId
                      clusterOrg: userDatabase
                    resourceId: r-abcdef12
                  description: An resource to manage a hosted public SaaS offering
                    of a multi-writer MySQL service
                  disable: "{{ $var.disableExtraComponents }}"
                  environmentVariables:
                  - name: MYSQL_ROOT_PASSWORD
                    value: password
                  fileSystemConfiguration:
                    EFSFileSystemConfiguration:
                      PerformanceMode: generalPurpose|maxIO
                      ProvisionedThroughputInMibps: 125
                      ThroughputMode: provisioned|bursting|elastic
                    GCPFilestoreConfiguration:
                      Capacity: 1024GiB
                      MaxIopsPerTb: 3000
                      Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
                  helmChartConfiguration:
                    autoDiscoverImagesTag: omnistrate/images
                    chartName: my-chart
                    chartRepoName: my-repo
                    chartRepoUrl: https://my-repo.com
                    chartValues:
                      key1: value1
                      key2: 3
                      key3:
                        key4: value4
                    chartVersion: 1.0.0
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    layeredChartValues:
                    - values:
                        global:
                          image:
                            tag: v1.0.0
                          replicaCount: 1
                          resources:
                            requests:
                              cpu: 100m
                              memory: 128Mi
                    - scope:
                        '{{ $sys.cloudProviderName }}': aws
                      valuesFile:
                        gitConfiguration:
                          accessToken: ghp_...
                          commitSHA: a1b2c3d4e5f6
                          path: aws/production.yaml
                          referenceName: refs/heads/main
                          repositoryUrl: https://github.com/org/helm-values
                    namespace: postgres
                    password: my-password
                    releaseName: my-release
                    runtimeConfiguration:
                      disableHooks: true
                      recreate: true
                      resetThenReuseValues: true
                      resetValues: true
                      reuseValues: true
                      skipCRDs: true
                      timeoutNanos: 1000000000
                      upgradeCRDs: true
                      wait: true
                      waitForJobs: true
                    username: my-user
                  id: Tenetur perspiciatis sint.
                  imageConfigId: Sed voluptatem sed aliquid illo consequatur quidem.
                  infraConfigId: Error est.
                  internal: true
                  isDeprecated: false
                  jobConfig:
                    activeDeadlineSeconds: 300
                    backoffLimit: 5
                  key: galera
                  kustomizeConfiguration:
                    disableReconciliation: false
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    gitConfiguration:
                      accessToken: my-token
                      commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    helmChartDependencies:
                    - chartName: cert-manager
                      chartVersion: v1.5.3
                    - chartName: nginx-ingress
                      chartVersion: v0.48.1
                    - chartName: external-dns
                      chartVersion: v0.7.0
                    - chartName: cnpg-operator
                      chartVersion: v0.23.1
                    kustomizePath: /kustomize
                  l4LoadBalancerConfiguration:
                    ingressPortConfiguration:
                    - associatedResourceIDs:
                      - r-12345678
                      - r-abcdef12
                      backendPort: 8080
                      ingressPort: 1234
                    - associatedResourceIDs:
                      - r-12345678
                      - r-abcdef12
                      backendPort: 8081
                      ingressPort: 5678
                    - associatedResourceIDs:
                      - r-vwxybz12
                      - r-poij122v
                      backendPort: 8082
                      ingressPort: 9012
                  l7LoadBalancerConfiguration:
                    paths:
                    - associatedResourceID: r-12345678
                      path: /path
                      port: 8080
                  name: Galera
                  onPremTerraformConfigurations:
                    OpenShift:
                      gitConfiguration:
                        referenceName: ref
                        repositoryUrl: gitUrl
                      privateModuleGitAccessTokens:
                        tokenName: accessToken
                      terraformPath: /project1/tf
                  operatorCRDConfiguration:
                    disableReconciliation: false
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    helmChartDependencies:
                    - chartName: cert-manager
                      chartVersion: v1.5.3
                    - chartName: nginx-ingress
                      chartVersion: v0.48.1
                    - chartName: external-dns
                      chartVersion: v0.7.0
                    - chartName: cnpg-operator
                      chartVersion: v0.23.1
                    outputParameters:
                      expiresAt: $out.status.notAfter
                      issuerName: letsencrypt-prod
                    readinessConditions:
                      $out.status.conditions[?(@.type=='Ready')].status: true
                    supplementalFiles:
                    - |
                      apiVersion: cert-manager.io/v1
                      kind: ClusterIssuer
                      metadata:
                        name: letsencrypt-prod
                      spec:
                        acme:
                          server: https://acme-v02.api.letsencrypt.org/directory
                    - |-
                      apiVersion: ingress.nginx.io/v1
                      kind: IngressClass
                      metadata:
                        name: nginx
                      spec:
                        controller: nginx.org/ingress-controller
                    template: |-
                      apiVersion: cert-manager.io/v1
                      kind: ClusterIssuer
                      metadata:
                        name: letsencrypt-prod
                      spec:
                        acme:
                          server: https://acme-v02.api.letsencrypt.org/directory
                          email: test@example.com
                          privateKeySecretRef:
                            name: letsencrypt-prod
                          solvers:
                          - http01:
                              ingress:
                                class: nginx
                  productTierId: Accusantium consequatur ad quo animi quidem praesentium.
                  proxyType: PortsBasedProxy
                  resourceType: '|Generic|PortsBasedProxy|L4LoadBalancer|L7LoadBalancer|FileSystem|OperatorCRD|HelmChart|Kustomize'
                  serviceId: s-123456
                  terraformConfigurations:
                    aws:
                      gitConfiguration:
                        referenceName: ref
                        repositoryUrl: gitUrl
                      privateModuleGitAccessTokens:
                        tokenName: accessToken
                      terraformPath: /project1/tf
                - actionHooks:
                  - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
                    scope: CLUSTER
                    type: INIT
                  additionalSecurityContext:
                    AddCapabilities:
                    - CAP_NET_ADMIN
                    - CAP_NET_RAW
                    DropCapabilities:
                    - CAP_NET_ADMIN
                    - CAP_NET_RAW
                    SupplementalGroupIDs:
                    - 1001
                    - 999
                  agentConfiguration:
                    codeInterpreter:
                      allowedPackages:
                      - pandas
                      - numpy
                      - matplotlib
                      enabled: true
                      provider: agentcore
                      timeout: 60
                    dockerfile: Dockerfile
                    evaluations:
                    - metrics:
                      - relevance
                      - helpfulness
                      name: response-quality
                      schedule: every 6 hours
                    memory:
                      enabled: true
                    monitoring:
                      enabled: true
                    vectorStore:
                      enabled: true
                  backupConfiguration:
                    backupPeriodInHours: 24
                    backupRetentionInDays: 7
                  blobStorageConfiguration:
                    GCSConfiguration: {}
                    S3Configuration: {}
                  capabilities:
                  - capability: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  containerImagesRegistryCopyConfiguration:
                    images:
                    - imageName: postgres
                      imageTag: "16"
                    - imageName: postgres
                      imageTag: "16"
                    - imageName: postgres
                      imageTag: "16"
                    pullSource:
                      credentials:
                        password: my-password
                        username: my-user
                      registryURL: https://my-registry.com
                      repositoryName: library
                    pushTarget:
                      credentials:
                        password: my-password
                        username: my-user
                      registryURL: https://my-registry.com
                      repositoryName: library
                  customLabels:
                    key: value
                  customSysCTLs:
                    net.ipv4.tcp_syncookies: "1"
                  customULimits:
                  - ULimitsName: NoProc
                    ULimitsType: Soft
                    ULimitsValue: 1000
                  - ULimitsName: NoFile
                    ULimitsType: Hard
                    ULimitsValue: 2048
                  dependencies:
                  - parameterMap:
                      clusterId: writerId
                      clusterOrg: userDatabase
                    resourceId: r-12345678
                  - parameterMap:
                      clusterId: readerId
                      clusterOrg: userDatabase
                    resourceId: r-abcdef12
                  description: An resource to manage a hosted public SaaS offering
                    of a multi-writer MySQL service
                  disable: "{{ $var.disableExtraComponents }}"
                  environmentVariables:
                  - name: MYSQL_ROOT_PASSWORD
                    value: password
                  fileSystemConfiguration:
                    EFSFileSystemConfiguration:
                      PerformanceMode: generalPurpose|maxIO
                      ProvisionedThroughputInMibps: 125
                      ThroughputMode: provisioned|bursting|elastic
                    GCPFilestoreConfiguration:
                      Capacity: 1024GiB
                      MaxIopsPerTb: 3000
                      Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
                  helmChartConfiguration:
                    autoDiscoverImagesTag: omnistrate/images
                    chartName: my-chart
                    chartRepoName: my-repo
                    chartRepoUrl: https://my-repo.com
                    chartValues:
                      key1: value1
                      key2: 3
                      key3:
                        key4: value4
                    chartVersion: 1.0.0
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    layeredChartValues:
                    - values:
                        global:
                          image:
                            tag: v1.0.0
                          replicaCount: 1
                          resources:
                            requests:
                              cpu: 100m
                              memory: 128Mi
                    - scope:
                        '{{ $sys.cloudProviderName }}': aws
                      valuesFile:
                        gitConfiguration:
                          accessToken: ghp_...
                          commitSHA: a1b2c3d4e5f6
                          path: aws/production.yaml
                          referenceName: refs/heads/main
                          repositoryUrl: https://github.com/org/helm-values
                    namespace: postgres
                    password: my-password
                    releaseName: my-release
                    runtimeConfiguration:
                      disableHooks: true
                      recreate: true
                      resetThenReuseValues: true
                      resetValues: true
                      reuseValues: true
                      skipCRDs: true
                      timeoutNanos: 1000000000
                      upgradeCRDs: true
                      wait: true
                      waitForJobs: true
                    username: my-user
                  id: Tenetur perspiciatis sint.
                  imageConfigId: Sed voluptatem sed aliquid illo consequatur quidem.
                  infraConfigId: Error est.
                  internal: true
                  isDeprecated: false
                  jobConfig:
                    activeDeadlineSeconds: 300
                    backoffLimit: 5
                  key: galera
                  kustomizeConfiguration:
                    disableReconciliation: false
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    gitConfiguration:
                      accessToken: my-token
                      commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    helmChartDependencies:
                    - chartName: cert-manager
                      chartVersion: v1.5.3
                    - chartName: nginx-ingress
                      chartVersion: v0.48.1
                    - chartName: external-dns
                      chartVersion: v0.7.0
                    - chartName: cnpg-operator
                      chartVersion: v0.23.1
                    kustomizePath: /kustomize
                  l4LoadBalancerConfiguration:
                    ingressPortConfiguration:
                    - associatedResourceIDs:
                      - r-12345678
                      - r-abcdef12
                      backendPort: 8080
                      ingressPort: 1234
                    - associatedResourceIDs:
                      - r-12345678
                      - r-abcdef12
                      backendPort: 8081
                      ingressPort: 5678
                    - associatedResourceIDs:
                      - r-vwxybz12
                      - r-poij122v
                      backendPort: 8082
                      ingressPort: 9012
                  l7LoadBalancerConfiguration:
                    paths:
                    - associatedResourceID: r-12345678
                      path: /path
                      port: 8080
                  name: Galera
                  onPremTerraformConfigurations:
                    OpenShift:
                      gitConfiguration:
                        referenceName: ref
                        repositoryUrl: gitUrl
                      privateModuleGitAccessTokens:
                        tokenName: accessToken
                      terraformPath: /project1/tf
                  operatorCRDConfiguration:
                    disableReconciliation: false
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    helmChartDependencies:
                    - chartName: cert-manager
                      chartVersion: v1.5.3
                    - chartName: nginx-ingress
                      chartVersion: v0.48.1
                    - chartName: external-dns
                      chartVersion: v0.7.0
                    - chartName: cnpg-operator
                      chartVersion: v0.23.1
                    outputParameters:
                      expiresAt: $out.status.notAfter
                      issuerName: letsencrypt-prod
                    readinessConditions:
                      $out.status.conditions[?(@.type=='Ready')].status: true
                    supplementalFiles:
                    - |
                      apiVersion: cert-manager.io/v1
                      kind: ClusterIssuer
                      metadata:
                        name: letsencrypt-prod
                      spec:
                        acme:
                          server: https://acme-v02.api.letsencrypt.org/directory
                    - |-
                      apiVersion: ingress.nginx.io/v1
                      kind: IngressClass
                      metadata:
                        name: nginx
                      spec:
                        controller: nginx.org/ingress-controller
                    template: |-
                      apiVersion: cert-manager.io/v1
                      kind: ClusterIssuer
                      metadata:
                        name: letsencrypt-prod
                      spec:
                        acme:
                          server: https://acme-v02.api.letsencrypt.org/directory
                          email: test@example.com
                          privateKeySecretRef:
                            name: letsencrypt-prod
                          solvers:
                          - http01:
                              ingress:
                                class: nginx
                  productTierId: Accusantium consequatur ad quo animi quidem praesentium.
                  proxyType: PortsBasedProxy
                  resourceType: '|Generic|PortsBasedProxy|L4LoadBalancer|L7LoadBalancer|FileSystem|OperatorCRD|HelmChart|Kustomize'
                  serviceId: s-123456
                  terraformConfigurations:
                    aws:
                      gitConfiguration:
                        referenceName: ref
                        repositoryUrl: gitUrl
                      privateModuleGitAccessTokens:
                        tokenName: accessToken
                      terraformPath: /project1/tf
                - actionHooks:
                  - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
                    scope: CLUSTER
                    type: INIT
                  additionalSecurityContext:
                    AddCapabilities:
                    - CAP_NET_ADMIN
                    - CAP_NET_RAW
                    DropCapabilities:
                    - CAP_NET_ADMIN
                    - CAP_NET_RAW
                    SupplementalGroupIDs:
                    - 1001
                    - 999
                  agentConfiguration:
                    codeInterpreter:
                      allowedPackages:
                      - pandas
                      - numpy
                      - matplotlib
                      enabled: true
                      provider: agentcore
                      timeout: 60
                    dockerfile: Dockerfile
                    evaluations:
                    - metrics:
                      - relevance
                      - helpfulness
                      name: response-quality
                      schedule: every 6 hours
                    memory:
                      enabled: true
                    monitoring:
                      enabled: true
                    vectorStore:
                      enabled: true
                  backupConfiguration:
                    backupPeriodInHours: 24
                    backupRetentionInDays: 7
                  blobStorageConfiguration:
                    GCSConfiguration: {}
                    S3Configuration: {}
                  capabilities:
                  - capability: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  containerImagesRegistryCopyConfiguration:
                    images:
                    - imageName: postgres
                      imageTag: "16"
                    - imageName: postgres
                      imageTag: "16"
                    - imageName: postgres
                      imageTag: "16"
                    pullSource:
                      credentials:
                        password: my-password
                        username: my-user
                      registryURL: https://my-registry.com
                      repositoryName: library
                    pushTarget:
                      credentials:
                        password: my-password
                        username: my-user
                      registryURL: https://my-registry.com
                      repositoryName: library
                  customLabels:
                    key: value
                  customSysCTLs:
                    net.ipv4.tcp_syncookies: "1"
                  customULimits:
                  - ULimitsName: NoProc
                    ULimitsType: Soft
                    ULimitsValue: 1000
                  - ULimitsName: NoFile
                    ULimitsType: Hard
                    ULimitsValue: 2048
                  dependencies:
                  - parameterMap:
                      clusterId: writerId
                      clusterOrg: userDatabase
                    resourceId: r-12345678
                  - parameterMap:
                      clusterId: readerId
                      clusterOrg: userDatabase
                    resourceId: r-abcdef12
                  description: An resource to manage a hosted public SaaS offering
                    of a multi-writer MySQL service
                  disable: "{{ $var.disableExtraComponents }}"
                  environmentVariables:
                  - name: MYSQL_ROOT_PASSWORD
                    value: password
                  fileSystemConfiguration:
                    EFSFileSystemConfiguration:
                      PerformanceMode: generalPurpose|maxIO
                      ProvisionedThroughputInMibps: 125
                      ThroughputMode: provisioned|bursting|elastic
                    GCPFilestoreConfiguration:
                      Capacity: 1024GiB
                      MaxIopsPerTb: 3000
                      Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
                  helmChartConfiguration:
                    autoDiscoverImagesTag: omnistrate/images
                    chartName: my-chart
                    chartRepoName: my-repo
                    chartRepoUrl: https://my-repo.com
                    chartValues:
                      key1: value1
                      key2: 3
                      key3:
                        key4: value4
                    chartVersion: 1.0.0
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    layeredChartValues:
                    - values:
                        global:
                          image:
                            tag: v1.0.0
                          replicaCount: 1
                          resources:
                            requests:
                              cpu: 100m
                              memory: 128Mi
                    - scope:
                        '{{ $sys.cloudProviderName }}': aws
                      valuesFile:
                        gitConfiguration:
                          accessToken: ghp_...
                          commitSHA: a1b2c3d4e5f6
                          path: aws/production.yaml
                          referenceName: refs/heads/main
                          repositoryUrl: https://github.com/org/helm-values
                    namespace: postgres
                    password: my-password
                    releaseName: my-release
                    runtimeConfiguration:
                      disableHooks: true
                      recreate: true
                      resetThenReuseValues: true
                      resetValues: true
                      reuseValues: true
                      skipCRDs: true
                      timeoutNanos: 1000000000
                      upgradeCRDs: true
                      wait: true
                      waitForJobs: true
                    username: my-user
                  id: Tenetur perspiciatis sint.
                  imageConfigId: Sed voluptatem sed aliquid illo consequatur quidem.
                  infraConfigId: Error est.
                  internal: true
                  isDeprecated: false
                  jobConfig:
                    activeDeadlineSeconds: 300
                    backoffLimit: 5
                  key: galera
                  kustomizeConfiguration:
                    disableReconciliation: false
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    gitConfiguration:
                      accessToken: my-token
                      commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    helmChartDependencies:
                    - chartName: cert-manager
                      chartVersion: v1.5.3
                    - chartName: nginx-ingress
                      chartVersion: v0.48.1
                    - chartName: external-dns
                      chartVersion: v0.7.0
                    - chartName: cnpg-operator
                      chartVersion: v0.23.1
                    kustomizePath: /kustomize
                  l4LoadBalancerConfiguration:
                    ingressPortConfiguration:
                    - associatedResourceIDs:
                      - r-12345678
                      - r-abcdef12
                      backendPort: 8080
                      ingressPort: 1234
                    - associatedResourceIDs:
                      - r-12345678
                      - r-abcdef12
                      backendPort: 8081
                      ingressPort: 5678
                    - associatedResourceIDs:
                      - r-vwxybz12
                      - r-poij122v
                      backendPort: 8082
                      ingressPort: 9012
                  l7LoadBalancerConfiguration:
                    paths:
                    - associatedResourceID: r-12345678
                      path: /path
                      port: 8080
                  name: Galera
                  onPremTerraformConfigurations:
                    OpenShift:
                      gitConfiguration:
                        referenceName: ref
                        repositoryUrl: gitUrl
                      privateModuleGitAccessTokens:
                        tokenName: accessToken
                      terraformPath: /project1/tf
                  operatorCRDConfiguration:
                    disableReconciliation: false
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    helmChartDependencies:
                    - chartName: cert-manager
                      chartVersion: v1.5.3
                    - chartName: nginx-ingress
                      chartVersion: v0.48.1
                    - chartName: external-dns
                      chartVersion: v0.7.0
                    - chartName: cnpg-operator
                      chartVersion: v0.23.1
                    outputParameters:
                      expiresAt: $out.status.notAfter
                      issuerName: letsencrypt-prod
                    readinessConditions:
                      $out.status.conditions[?(@.type=='Ready')].status: true
                    supplementalFiles:
                    - |
                      apiVersion: cert-manager.io/v1
                      kind: ClusterIssuer
                      metadata:
                        name: letsencrypt-prod
                      spec:
                        acme:
                          server: https://acme-v02.api.letsencrypt.org/directory
                    - |-
                      apiVersion: ingress.nginx.io/v1
                      kind: IngressClass
                      metadata:
                        name: nginx
                      spec:
                        controller: nginx.org/ingress-controller
                    template: |-
                      apiVersion: cert-manager.io/v1
                      kind: ClusterIssuer
                      metadata:
                        name: letsencrypt-prod
                      spec:
                        acme:
                          server: https://acme-v02.api.letsencrypt.org/directory
                          email: test@example.com
                          privateKeySecretRef:
                            name: letsencrypt-prod
                          solvers:
                          - http01:
                              ingress:
                                class: nginx
                  productTierId: Accusantium consequatur ad quo animi quidem praesentium.
                  proxyType: PortsBasedProxy
                  resourceType: '|Generic|PortsBasedProxy|L4LoadBalancer|L7LoadBalancer|FileSystem|OperatorCRD|HelmChart|Kustomize'
                  serviceId: s-123456
                  terraformConfigurations:
                    aws:
                      gitConfiguration:
                        referenceName: ref
                        repositoryUrl: gitUrl
                      privateModuleGitAccessTokens:
                        tokenName: accessToken
                      terraformPath: /project1/tf
              schema:
                $ref: "#/components/schemas/ListResourcesResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list resources"
      security:
      - api_key_header_Authorization: []
      summary: ListResources resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource:
    post:
      operationId: resource-api#CreateResource
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              additionalSecurityContext:
                AddCapabilities:
                - CAP_NET_ADMIN
                - CAP_NET_RAW
                DropCapabilities:
                - CAP_NET_ADMIN
                - CAP_NET_RAW
                SupplementalGroupIDs:
                - 1001
                - 999
              agentConfiguration:
                codeInterpreter:
                  allowedPackages:
                  - pandas
                  - numpy
                  - matplotlib
                  enabled: true
                  provider: agentcore
                  timeout: 60
                dockerfile: Dockerfile
                evaluations:
                - metrics:
                  - relevance
                  - helpfulness
                  name: response-quality
                  schedule: every 6 hours
                memory:
                  enabled: true
                monitoring:
                  enabled: true
                vectorStore:
                  enabled: true
              backupConfiguration:
                backupPeriodInHours: 24
                backupRetentionInDays: 7
              blobStorageConfiguration:
                GCSConfiguration: {}
                S3Configuration: {}
              containerImagesRegistryCopyConfiguration:
                images:
                - imageName: postgres
                  imageTag: "16"
                - imageName: postgres
                  imageTag: "16"
                - imageName: postgres
                  imageTag: "16"
                - imageName: postgres
                  imageTag: "16"
                pullSource:
                  credentials:
                    password: my-password
                    username: my-user
                  registryURL: https://my-registry.com
                  repositoryName: library
                pushTarget:
                  credentials:
                    password: my-password
                    username: my-user
                  registryURL: https://my-registry.com
                  repositoryName: library
              customLabels:
                key: value
              customSysCTLs:
                net.ipv4.tcp_syncookies: "1"
              customULimits:
              - ULimitsName: NoProc
                ULimitsType: Soft
                ULimitsValue: 1000
              - ULimitsName: NoFile
                ULimitsType: Hard
                ULimitsValue: 2048
              description: A resource to manage a hosted public SaaS offering of a
                multi-writer MySQL service
              disable: "{{ $var.disableExtraComponents }}"
              environmentVariables:
              - key: MYSQL_ROOT_PASSWORD
                value: password
              fileSystemConfiguration:
                EFSFileSystemConfiguration:
                  PerformanceMode: generalPurpose|maxIO
                  ProvisionedThroughputInMibps: 125
                  ThroughputMode: provisioned|bursting|elastic
                GCPFilestoreConfiguration:
                  Capacity: 1024GiB
                  MaxIopsPerTb: 3000
                  Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
              helmChartConfiguration:
                autoDiscoverImagesTag: omnistrate/images
                chartName: my-chart
                chartRepoName: my-repo
                chartRepoUrl: https://my-repo.com
                chartValues:
                  key1: value1
                  key2: 3
                  key3:
                    key4: value4
                chartVersion: 1.0.0
                endpointConfiguration:
                  admin:
                    host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                    networkingType: PRIVATE
                    ports:
                    - 8080
                    - 8081
                    primary: false
                  cluster:
                    host: https://my-endpoint.com
                    networkingType: PUBLIC
                    ports:
                    - 8080
                    - 8081
                    primary: true
                layeredChartValues:
                - values:
                    global:
                      image:
                        tag: v1.0.0
                      replicaCount: 1
                      resources:
                        requests:
                          cpu: 100m
                          memory: 128Mi
                - scope:
                    '{{ $sys.cloudProviderName }}': aws
                  valuesFile:
                    gitConfiguration:
                      accessToken: ghp_...
                      commitSHA: a1b2c3d4e5f6
                      path: aws/production.yaml
                      referenceName: refs/heads/main
                      repositoryUrl: https://github.com/org/helm-values
                namespace: postgres
                password: my-password
                releaseName: my-release
                runtimeConfiguration:
                  disableHooks: true
                  recreate: true
                  resetThenReuseValues: true
                  resetValues: true
                  reuseValues: true
                  skipCRDs: true
                  timeoutNanos: 1000000000
                  upgradeCRDs: true
                  wait: true
                  waitForJobs: true
                username: my-user
              imageConfigId: Similique non quod vitae vel cupiditate.
              infraConfigId: Earum non.
              internal: true
              isProxy: true
              jobConfig:
                activeDeadlineSeconds: 300
                backoffLimit: 5
              key: galera
              kustomizeConfiguration:
                disableReconciliation: false
                endpointConfiguration:
                  admin:
                    host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                    networkingType: PRIVATE
                    ports:
                    - 8080
                    - 8081
                    primary: false
                  cluster:
                    host: https://my-endpoint.com
                    networkingType: PUBLIC
                    ports:
                    - 8080
                    - 8081
                    primary: true
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                helmChartDependencies:
                - chartName: cert-manager
                  chartVersion: v1.5.3
                - chartName: nginx-ingress
                  chartVersion: v0.48.1
                - chartName: external-dns
                  chartVersion: v0.7.0
                - chartName: cnpg-operator
                  chartVersion: v0.23.1
                kustomizePath: /kustomize
              l4LoadBalancerConfiguration:
                ingressPortConfiguration:
                - associatedResourceIDs:
                  - r-12345678
                  - r-abcdef12
                  backendPort: 8080
                  ingressPort: 1234
                - associatedResourceIDs:
                  - r-12345678
                  - r-abcdef12
                  backendPort: 8081
                  ingressPort: 5678
                - associatedResourceIDs:
                  - r-vwxybz12
                  - r-poij122v
                  backendPort: 8082
                  ingressPort: 9012
              l7LoadBalancerConfiguration:
                paths:
                - associatedResourceID: r-12345678
                  path: /path
                  port: 8080
              name: Galera
              onPremTerraformConfigurations:
                OpenShift:
                  gitConfiguration:
                    referenceName: ref
                    repositoryUrl: gitUrl
                  privateModuleGitAccessTokens:
                    tokenName: accessToken
                  terraformPath: /project1/tf
              operatorCRDConfiguration:
                disableReconciliation: true
                endpointConfiguration:
                  admin:
                    host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                    networkingType: PRIVATE
                    ports:
                    - 8080
                    - 8081
                    primary: false
                  cluster:
                    host: https://my-endpoint.com
                    networkingType: PUBLIC
                    ports:
                    - 8080
                    - 8081
                    primary: true
                helmChartDependencies:
                - chartName: cert-manager
                  chartVersion: v1.5.3
                - chartName: nginx-ingress
                  chartVersion: v0.48.1
                - chartName: external-dns
                  chartVersion: v0.7.0
                - chartName: cnpg-operator
                  chartVersion: v0.23.1
                outputParameters:
                  expiresAt: $out.status.notAfter
                  issuerName: letsencrypt-prod
                readinessConditions:
                  $out.status.conditions[?(@.type=='Ready')].status: true
                supplementalFiles:
                - |
                  apiVersion: cert-manager.io/v1
                  kind: ClusterIssuer
                  metadata:
                    name: letsencrypt-prod
                  spec:
                    acme:
                      server: https://acme-v02.api.letsencrypt.org/directory
                - |-
                  apiVersion: ingress.nginx.io/v1
                  kind: IngressClass
                  metadata:
                    name: nginx
                  spec:
                    controller: nginx.org/ingress-controller
                template: |-
                  apiVersion: cert-manager.io/v1
                  kind: ClusterIssuer
                  metadata:
                    name: letsencrypt-prod
                  spec:
                    acme:
                      server: https://acme-v02.api.letsencrypt.org/directory
                      email: test@example.com
                      privateKeySecretRef:
                        name: letsencrypt-prod
                      solvers:
                      - http01:
                          ingress:
                            class: nginx
              productTierId: Corporis maxime nihil eaque et repudiandae et.
              proxyType: PortsBasedProxy
              resourceDependencies:
              - parameterMap:
                  userDatabase: clusterOrg
                  writerId: clusterWriterId
                resourceId: r-12345678
              - parameterMap:
                  readerId: clusterReaderId
                  userDatabase: clusterOrg
                resourceId: r-abcdef12
              resourceType: '|Generic|PortsBasedProxy|L4LoadBalancer|L7LoadBalancer|FileSystem|OperatorCRD|HelmChart|Kustomize'
              terraformConfigurations:
                aws:
                  gitConfiguration:
                    referenceName: ref
                    repositoryUrl: gitUrl
                  privateModuleGitAccessTokens:
                    tokenName: accessToken
                  terraformPath: /project1/tf
            schema:
              $ref: "#/components/schemas/CreateResourceRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Suscipit molestiae eius modi cumque.
              schema:
                description: resource ID created
                example: Optio qui eum animi pariatur consectetur.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create an resource"
      security:
      - api_key_header_Authorization: []
      summary: CreateResource resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}:
    delete:
      operationId: resource-api#DeleteResource
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Quae omnis nobis sint.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete an resource"
      security:
      - api_key_header_Authorization: []
      summary: DeleteResource resource-api
      tags:
      - resource-api
    get:
      operationId: resource-api#DescribeResource
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the resource to describe. If not specified,\
          \ the latest version is described."
        example: Nam minima dicta exercitationem accusamus.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the resource to describe. If not specified,\
            \ the latest version is described."
          example: Quia sequi.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the resource to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Eligendi sit laboriosam beatae.
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Vero doloribus optio velit atque amet.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                actionHooks:
                - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
                  scope: CLUSTER
                  type: INIT
                additionalSecurityContext:
                  AddCapabilities:
                  - CAP_NET_ADMIN
                  - CAP_NET_RAW
                  DropCapabilities:
                  - CAP_NET_ADMIN
                  - CAP_NET_RAW
                  SupplementalGroupIDs:
                  - 1001
                  - 999
                agentConfiguration:
                  codeInterpreter:
                    allowedPackages:
                    - pandas
                    - numpy
                    - matplotlib
                    enabled: true
                    provider: agentcore
                    timeout: 60
                  dockerfile: Dockerfile
                  evaluations:
                  - metrics:
                    - relevance
                    - helpfulness
                    name: response-quality
                    schedule: every 6 hours
                  memory:
                    enabled: true
                  monitoring:
                    enabled: true
                  vectorStore:
                    enabled: true
                backupConfiguration:
                  backupPeriodInHours: 24
                  backupRetentionInDays: 7
                blobStorageConfiguration:
                  GCSConfiguration: {}
                  S3Configuration: {}
                capabilities:
                - capability: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
                  configuration:
                    EnableAutoStop: true
                    MinimumNodesInPool: 5
                    PortsMappingProxyConfig:
                      MaxNumberOfClustersPerProxyInstance: 50
                      NumberOfPortsPerCluster: 4
                    ProxyId: r-123456
                    ReferenceProxyKey: resource-proxy
                    TargetPort: 5432
                - capability: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
                  configuration:
                    EnableAutoStop: true
                    MinimumNodesInPool: 5
                    PortsMappingProxyConfig:
                      MaxNumberOfClustersPerProxyInstance: 50
                      NumberOfPortsPerCluster: 4
                    ProxyId: r-123456
                    ReferenceProxyKey: resource-proxy
                    TargetPort: 5432
                - capability: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
                  configuration:
                    EnableAutoStop: true
                    MinimumNodesInPool: 5
                    PortsMappingProxyConfig:
                      MaxNumberOfClustersPerProxyInstance: 50
                      NumberOfPortsPerCluster: 4
                    ProxyId: r-123456
                    ReferenceProxyKey: resource-proxy
                    TargetPort: 5432
                - capability: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
                  configuration:
                    EnableAutoStop: true
                    MinimumNodesInPool: 5
                    PortsMappingProxyConfig:
                      MaxNumberOfClustersPerProxyInstance: 50
                      NumberOfPortsPerCluster: 4
                    ProxyId: r-123456
                    ReferenceProxyKey: resource-proxy
                    TargetPort: 5432
                containerImagesRegistryCopyConfiguration:
                  images:
                  - imageName: postgres
                    imageTag: "16"
                  - imageName: postgres
                    imageTag: "16"
                  - imageName: postgres
                    imageTag: "16"
                  pullSource:
                    credentials:
                      password: my-password
                      username: my-user
                    registryURL: https://my-registry.com
                    repositoryName: library
                  pushTarget:
                    credentials:
                      password: my-password
                      username: my-user
                    registryURL: https://my-registry.com
                    repositoryName: library
                customLabels:
                  key: value
                customSysCTLs:
                  net.ipv4.tcp_syncookies: "1"
                customULimits:
                - ULimitsName: NoProc
                  ULimitsType: Soft
                  ULimitsValue: 1000
                - ULimitsName: NoFile
                  ULimitsType: Hard
                  ULimitsValue: 2048
                dependencies:
                - parameterMap:
                    clusterId: writerId
                    clusterOrg: userDatabase
                  resourceId: r-12345678
                - parameterMap:
                    clusterId: readerId
                    clusterOrg: userDatabase
                  resourceId: r-abcdef12
                description: An resource to manage a hosted public SaaS offering of
                  a multi-writer MySQL service
                disable: "{{ $var.disableExtraComponents }}"
                environmentVariables:
                - name: MYSQL_ROOT_PASSWORD
                  value: password
                fileSystemConfiguration:
                  EFSFileSystemConfiguration:
                    PerformanceMode: generalPurpose|maxIO
                    ProvisionedThroughputInMibps: 125
                    ThroughputMode: provisioned|bursting|elastic
                  GCPFilestoreConfiguration:
                    Capacity: 1024GiB
                    MaxIopsPerTb: 3000
                    Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
                helmChartConfiguration:
                  autoDiscoverImagesTag: omnistrate/images
                  chartName: my-chart
                  chartRepoName: my-repo
                  chartRepoUrl: https://my-repo.com
                  chartValues:
                    key1: value1
                    key2: 3
                    key3:
                      key4: value4
                  chartVersion: 1.0.0
                  endpointConfiguration:
                    admin:
                      host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                      networkingType: PRIVATE
                      ports:
                      - 8080
                      - 8081
                      primary: false
                    cluster:
                      host: https://my-endpoint.com
                      networkingType: PUBLIC
                      ports:
                      - 8080
                      - 8081
                      primary: true
                  layeredChartValues:
                  - values:
                      global:
                        image:
                          tag: v1.0.0
                        replicaCount: 1
                        resources:
                          requests:
                            cpu: 100m
                            memory: 128Mi
                  - scope:
                      '{{ $sys.cloudProviderName }}': aws
                    valuesFile:
                      gitConfiguration:
                        accessToken: ghp_...
                        commitSHA: a1b2c3d4e5f6
                        path: aws/production.yaml
                        referenceName: refs/heads/main
                        repositoryUrl: https://github.com/org/helm-values
                  namespace: postgres
                  password: my-password
                  releaseName: my-release
                  runtimeConfiguration:
                    disableHooks: true
                    recreate: true
                    resetThenReuseValues: true
                    resetValues: true
                    reuseValues: true
                    skipCRDs: true
                    timeoutNanos: 1000000000
                    upgradeCRDs: true
                    wait: true
                    waitForJobs: true
                  username: my-user
                id: Ullam voluptatum voluptate nobis eveniet.
                imageConfigId: Velit nostrum est et blanditiis quis laboriosam.
                infraConfigId: Illum voluptas voluptas et iste laboriosam asperiores.
                internal: true
                isDeprecated: false
                jobConfig:
                  activeDeadlineSeconds: 300
                  backoffLimit: 5
                key: galera
                kustomizeConfiguration:
                  disableReconciliation: false
                  endpointConfiguration:
                    admin:
                      host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                      networkingType: PRIVATE
                      ports:
                      - 8080
                      - 8081
                      primary: false
                    cluster:
                      host: https://my-endpoint.com
                      networkingType: PUBLIC
                      ports:
                      - 8080
                      - 8081
                      primary: true
                  gitConfiguration:
                    accessToken: my-token
                    commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  helmChartDependencies:
                  - chartName: cert-manager
                    chartVersion: v1.5.3
                  - chartName: nginx-ingress
                    chartVersion: v0.48.1
                  - chartName: external-dns
                    chartVersion: v0.7.0
                  - chartName: cnpg-operator
                    chartVersion: v0.23.1
                  kustomizePath: /kustomize
                l4LoadBalancerConfiguration:
                  ingressPortConfiguration:
                  - associatedResourceIDs:
                    - r-12345678
                    - r-abcdef12
                    backendPort: 8080
                    ingressPort: 1234
                  - associatedResourceIDs:
                    - r-12345678
                    - r-abcdef12
                    backendPort: 8081
                    ingressPort: 5678
                  - associatedResourceIDs:
                    - r-vwxybz12
                    - r-poij122v
                    backendPort: 8082
                    ingressPort: 9012
                l7LoadBalancerConfiguration:
                  paths:
                  - associatedResourceID: r-12345678
                    path: /path
                    port: 8080
                name: Galera
                onPremTerraformConfigurations:
                  OpenShift:
                    gitConfiguration:
                      referenceName: ref
                      repositoryUrl: gitUrl
                    privateModuleGitAccessTokens:
                      tokenName: accessToken
                    terraformPath: /project1/tf
                operatorCRDConfiguration:
                  disableReconciliation: false
                  endpointConfiguration:
                    admin:
                      host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                      networkingType: PRIVATE
                      ports:
                      - 8080
                      - 8081
                      primary: false
                    cluster:
                      host: https://my-endpoint.com
                      networkingType: PUBLIC
                      ports:
                      - 8080
                      - 8081
                      primary: true
                  helmChartDependencies:
                  - chartName: cert-manager
                    chartVersion: v1.5.3
                  - chartName: nginx-ingress
                    chartVersion: v0.48.1
                  - chartName: external-dns
                    chartVersion: v0.7.0
                  - chartName: cnpg-operator
                    chartVersion: v0.23.1
                  outputParameters:
                    expiresAt: $out.status.notAfter
                    issuerName: letsencrypt-prod
                  readinessConditions:
                    $out.status.conditions[?(@.type=='Ready')].status: true
                  supplementalFiles:
                  - |
                    apiVersion: cert-manager.io/v1
                    kind: ClusterIssuer
                    metadata:
                      name: letsencrypt-prod
                    spec:
                      acme:
                        server: https://acme-v02.api.letsencrypt.org/directory
                  - |-
                    apiVersion: ingress.nginx.io/v1
                    kind: IngressClass
                    metadata:
                      name: nginx
                    spec:
                      controller: nginx.org/ingress-controller
                  template: |-
                    apiVersion: cert-manager.io/v1
                    kind: ClusterIssuer
                    metadata:
                      name: letsencrypt-prod
                    spec:
                      acme:
                        server: https://acme-v02.api.letsencrypt.org/directory
                        email: test@example.com
                        privateKeySecretRef:
                          name: letsencrypt-prod
                        solvers:
                        - http01:
                            ingress:
                              class: nginx
                productTierId: Laborum aspernatur.
                proxyType: PortsBasedProxy
                resourceType: '|Generic|PortsBasedProxy|L4LoadBalancer|L7LoadBalancer|FileSystem|OperatorCRD|HelmChart|Kustomize'
                serviceId: s-123456
                terraformConfigurations:
                  aws:
                    gitConfiguration:
                      referenceName: ref
                      repositoryUrl: gitUrl
                    privateModuleGitAccessTokens:
                      tokenName: accessToken
                    terraformPath: /project1/tf
              schema:
                $ref: "#/components/schemas/DescribeResourceResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe an resource"
      security:
      - api_key_header_Authorization: []
      summary: DescribeResource resource-api
      tags:
      - resource-api
    patch:
      operationId: resource-api#UpdateResource
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Quis sit velit iusto.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              additionalSecurityContext:
                AddCapabilities:
                - CAP_NET_ADMIN
                - CAP_NET_RAW
                DropCapabilities:
                - CAP_NET_ADMIN
                - CAP_NET_RAW
                SupplementalGroupIDs:
                - 1001
                - 999
              agentConfiguration:
                codeInterpreter:
                  allowedPackages:
                  - pandas
                  - numpy
                  - matplotlib
                  enabled: true
                  provider: agentcore
                  timeout: 60
                dockerfile: Dockerfile
                evaluations:
                - metrics:
                  - relevance
                  - helpfulness
                  name: response-quality
                  schedule: every 6 hours
                memory:
                  enabled: true
                monitoring:
                  enabled: true
                vectorStore:
                  enabled: true
              backupConfiguration:
                backupPeriodInHours: 24
                backupRetentionInDays: 7
              containerImagesRegistryCopyConfiguration:
                images:
                - imageName: postgres
                  imageTag: "16"
                - imageName: postgres
                  imageTag: "16"
                - imageName: postgres
                  imageTag: "16"
                - imageName: postgres
                  imageTag: "16"
                pullSource:
                  credentials:
                    password: my-password
                    username: my-user
                  registryURL: https://my-registry.com
                  repositoryName: library
                pushTarget:
                  credentials:
                    password: my-password
                    username: my-user
                  registryURL: https://my-registry.com
                  repositoryName: library
              customLabels:
                key: value
              customSysCTLs:
                net.ipv4.tcp_syncookies: "1"
              customULimits:
              - ULimitsName: NoProc
                ULimitsType: Soft
                ULimitsValue: 1000
              - ULimitsName: NoFile
                ULimitsType: Hard
                ULimitsValue: 2048
              dependencies:
              - parameterMap:
                  clusterId: writerId
                  clusterOrg: userDatabase
                resourceId: r-12345678
              - parameterMap:
                  clusterId: readerId
                  clusterOrg: userDatabase
                resourceId: r-abcdef12
              description: A resource to manage a hosted public SaaS offering of a
                multi-writer MySQL service
              disable: "{{ $var.disableExtraComponents }}"
              environmentVariables:
              - key: MYSQL_ROOT_PASSWORD
                value: password
              fileSystemConfiguration:
                EFSFileSystemConfiguration:
                  PerformanceMode: generalPurpose|maxIO
                  ProvisionedThroughputInMibps: 125
                  ThroughputMode: provisioned|bursting|elastic
                GCPFilestoreConfiguration:
                  Capacity: 1024GiB
                  MaxIopsPerTb: 3000
                  Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
              helmChartConfiguration:
                autoDiscoverImagesTag: omnistrate/images
                chartName: my-chart
                chartRepoName: my-repo
                chartRepoUrl: https://my-repo.com
                chartValues:
                  key1: value1
                  key2: 3
                  key3:
                    key4: value4
                chartVersion: 1.0.0
                endpointConfiguration:
                  admin:
                    host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                    networkingType: PRIVATE
                    ports:
                    - 8080
                    - 8081
                    primary: false
                  cluster:
                    host: https://my-endpoint.com
                    networkingType: PUBLIC
                    ports:
                    - 8080
                    - 8081
                    primary: true
                layeredChartValues:
                - values:
                    global:
                      image:
                        tag: v1.0.0
                      replicaCount: 1
                      resources:
                        requests:
                          cpu: 100m
                          memory: 128Mi
                - scope:
                    '{{ $sys.cloudProviderName }}': aws
                  valuesFile:
                    gitConfiguration:
                      accessToken: ghp_...
                      commitSHA: a1b2c3d4e5f6
                      path: aws/production.yaml
                      referenceName: refs/heads/main
                      repositoryUrl: https://github.com/org/helm-values
                namespace: postgres
                password: my-password
                releaseName: my-release
                runtimeConfiguration:
                  disableHooks: true
                  recreate: true
                  resetThenReuseValues: true
                  resetValues: true
                  reuseValues: true
                  skipCRDs: true
                  timeoutNanos: 1000000000
                  upgradeCRDs: true
                  wait: true
                  waitForJobs: true
                username: my-user
              imageConfigId: Assumenda esse sit sint sed debitis natus.
              infraConfigId: Est deleniti et iure et sit iste.
              jobConfig:
                activeDeadlineSeconds: 300
                backoffLimit: 5
              kustomizeConfiguration:
                disableReconciliation: false
                endpointConfiguration:
                  admin:
                    host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                    networkingType: PRIVATE
                    ports:
                    - 8080
                    - 8081
                    primary: false
                  cluster:
                    host: https://my-endpoint.com
                    networkingType: PUBLIC
                    ports:
                    - 8080
                    - 8081
                    primary: true
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                helmChartDependencies:
                - chartName: cert-manager
                  chartVersion: v1.5.3
                - chartName: nginx-ingress
                  chartVersion: v0.48.1
                - chartName: external-dns
                  chartVersion: v0.7.0
                - chartName: cnpg-operator
                  chartVersion: v0.23.1
                kustomizePath: /kustomize
              l4LoadBalancerConfiguration:
                ingressPortConfiguration:
                - associatedResourceIDs:
                  - r-12345678
                  - r-abcdef12
                  backendPort: 8080
                  ingressPort: 1234
                - associatedResourceIDs:
                  - r-12345678
                  - r-abcdef12
                  backendPort: 8081
                  ingressPort: 5678
                - associatedResourceIDs:
                  - r-vwxybz12
                  - r-poij122v
                  backendPort: 8082
                  ingressPort: 9012
              l7LoadBalancerConfiguration:
                paths:
                - associatedResourceID: r-12345678
                  path: /path
                  port: 8080
              name: Galera
              onPremTerraformConfigurations:
                OpenShift:
                  gitConfiguration:
                    referenceName: ref
                    repositoryUrl: gitUrl
                  privateModuleGitAccessTokens:
                    tokenName: accessToken
                  terraformPath: /project1/tf
              operatorCRDConfiguration:
                disableReconciliation: true
                endpointConfiguration:
                  admin:
                    host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                    networkingType: PRIVATE
                    ports:
                    - 8080
                    - 8081
                    primary: false
                  cluster:
                    host: https://my-endpoint.com
                    networkingType: PUBLIC
                    ports:
                    - 8080
                    - 8081
                    primary: true
                helmChartDependencies:
                - chartName: cert-manager
                  chartVersion: v1.5.3
                - chartName: nginx-ingress
                  chartVersion: v0.48.1
                - chartName: external-dns
                  chartVersion: v0.7.0
                - chartName: cnpg-operator
                  chartVersion: v0.23.1
                outputParameters:
                  expiresAt: $out.status.notAfter
                  issuerName: letsencrypt-prod
                readinessConditions:
                  $out.status.conditions[?(@.type=='Ready')].status: true
                supplementalFiles:
                - |
                  apiVersion: cert-manager.io/v1
                  kind: ClusterIssuer
                  metadata:
                    name: letsencrypt-prod
                  spec:
                    acme:
                      server: https://acme-v02.api.letsencrypt.org/directory
                - |-
                  apiVersion: ingress.nginx.io/v1
                  kind: IngressClass
                  metadata:
                    name: nginx
                  spec:
                    controller: nginx.org/ingress-controller
                template: |-
                  apiVersion: cert-manager.io/v1
                  kind: ClusterIssuer
                  metadata:
                    name: letsencrypt-prod
                  spec:
                    acme:
                      server: https://acme-v02.api.letsencrypt.org/directory
                      email: test@example.com
                      privateKeySecretRef:
                        name: letsencrypt-prod
                      solvers:
                      - http01:
                          ingress:
                            class: nginx
              terraformConfigurations:
                aws:
                  gitConfiguration:
                    referenceName: ref
                    repositoryUrl: gitUrl
                  privateModuleGitAccessTokens:
                    tokenName: accessToken
                  terraformPath: /project1/tf
            schema:
              $ref: "#/components/schemas/UpdateResourceRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update an resource"
      security:
      - api_key_header_Authorization: []
      summary: UpdateResource resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/action-hook:
    delete:
      operationId: resource-api#DeregisterActionHook
      parameters:
      - description: The ID of the service to which the hook belongs
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource to which the hook belongs
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Enim quis sed ea vero.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              scope: CLUSTER|NODE
              type: INIT|ADD|REMOVE|PROMOTE|DEMOTE|HEALTH_CHECK|READINESS_CHECK|STARTUP_CHECK|PRE_START|POST_START|PRE_UPGRADE|POST_UPGRADE|PRE_STOP|POST_STOP
            schema:
              $ref: "#/components/schemas/DeregisterActionHookRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to deregister an\
            \ action hook"
      security:
      - api_key_header_Authorization: []
      summary: DeregisterActionHook resource-api
      tags:
      - resource-api
    get:
      operationId: resource-api#ListActionHooks
      parameters:
      - description: The ID of the service to which the hook belongs
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource to which the hook belongs
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Debitis esse veniam architecto vitae qui quos.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                hooks:
                - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
                  customCommand:
                  - /bin/sh
                  - -c
                  customImage: my-custom-image:latest
                  scope: CLUSTER|NODE
                  type: INIT|ADD|REMOVE|PROMOTE|DEMOTE|HEALTH_CHECK|READINESS_CHECK|STARTUP_CHECK|PRE_START|POST_START|PRE_UPGRADE|POST_UPGRADE|PRE_STOP|POST_STOP
                - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
                  customCommand:
                  - /bin/sh
                  - -c
                  customImage: my-custom-image:latest
                  scope: CLUSTER|NODE
                  type: INIT|ADD|REMOVE|PROMOTE|DEMOTE|HEALTH_CHECK|READINESS_CHECK|STARTUP_CHECK|PRE_START|POST_START|PRE_UPGRADE|POST_UPGRADE|PRE_STOP|POST_STOP
                - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
                  customCommand:
                  - /bin/sh
                  - -c
                  customImage: my-custom-image:latest
                  scope: CLUSTER|NODE
                  type: INIT|ADD|REMOVE|PROMOTE|DEMOTE|HEALTH_CHECK|READINESS_CHECK|STARTUP_CHECK|PRE_START|POST_START|PRE_UPGRADE|POST_UPGRADE|PRE_STOP|POST_STOP
              schema:
                $ref: "#/components/schemas/ListActionHooksResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list action hooks"
      security:
      - api_key_header_Authorization: []
      summary: ListActionHooks resource-api
      tags:
      - resource-api
    post:
      operationId: resource-api#RegisterActionHook
      parameters:
      - description: The ID of the service to which the hook belongs
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource to which the hook belongs
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Totam laboriosam pariatur fugiat quaerat.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
              customCommand:
              - /bin/sh
              - -c
              customImage: my-custom-image:latest
              scope: CLUSTER|NODE
              type: INIT|ADD|REMOVE|PROMOTE|DEMOTE|HEALTH_CHECK|READINESS_CHECK|STARTUP_CHECK|PRE_START|POST_START|PRE_UPGRADE|POST_UPGRADE|PRE_STOP|POST_STOP
            schema:
              $ref: "#/components/schemas/RegisterActionHookRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to register an action\
            \ hook"
      security:
      - api_key_header_Authorization: []
      summary: RegisterActionHook resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/capability:
    delete:
      operationId: resource-api#DisableResourceCapability
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Debitis saepe at quod deleniti doloremque quisquam.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              capability: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
            schema:
              $ref: "#/components/schemas/DisableResourceCapabilityRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to disable resource\
            \ capabilities"
      security:
      - api_key_header_Authorization: []
      summary: DisableResourceCapability resource-api
      tags:
      - resource-api
    get:
      operationId: resource-api#ListResourceCapabilities
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the instance to describe. If not specified,\
          \ the latest version is described."
        example: Iste error minus.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the instance to describe. If not specified,\
            \ the latest version is described."
          example: Voluptas laudantium reiciendis.
          type: string
        style: form
      - allowEmptyValue: true
        description: Product tier id of the instance to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Velit et.
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Earum iusto.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                capabilities:
                - capability: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
                  configuration:
                    EnableAutoStop: true
                    MinimumNodesInPool: 5
                    PortsMappingProxyConfig:
                      MaxNumberOfClustersPerProxyInstance: 50
                      NumberOfPortsPerCluster: 4
                    ProxyId: r-123456
                    ReferenceProxyKey: resource-proxy
                    TargetPort: 5432
                - capability: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
                  configuration:
                    EnableAutoStop: true
                    MinimumNodesInPool: 5
                    PortsMappingProxyConfig:
                      MaxNumberOfClustersPerProxyInstance: 50
                      NumberOfPortsPerCluster: 4
                    ProxyId: r-123456
                    ReferenceProxyKey: resource-proxy
                    TargetPort: 5432
                - capability: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
                  configuration:
                    EnableAutoStop: true
                    MinimumNodesInPool: 5
                    PortsMappingProxyConfig:
                      MaxNumberOfClustersPerProxyInstance: 50
                      NumberOfPortsPerCluster: 4
                    ProxyId: r-123456
                    ReferenceProxyKey: resource-proxy
                    TargetPort: 5432
                - capability: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
                  configuration:
                    EnableAutoStop: true
                    MinimumNodesInPool: 5
                    PortsMappingProxyConfig:
                      MaxNumberOfClustersPerProxyInstance: 50
                      NumberOfPortsPerCluster: 4
                    ProxyId: r-123456
                    ReferenceProxyKey: resource-proxy
                    TargetPort: 5432
              schema:
                $ref: "#/components/schemas/ListResourceCapabilitiesResponse"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to disable resource\
            \ capabilities"
      security:
      - api_key_header_Authorization: []
      summary: ListResourceCapabilities resource-api
      tags:
      - resource-api
    put:
      operationId: resource-api#EnableResourceCapability
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Sed veniam officia unde.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              capability: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            schema:
              $ref: "#/components/schemas/EnableResourceCapabilityRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to enable resource\
            \ capabilities"
      security:
      - api_key_header_Authorization: []
      summary: EnableResourceCapability resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/dependent-resource:
    get:
      operationId: resource-api#ListDependentResource
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Inventore nihil quia unde sapiente voluptatibus.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: Sunt doloribus animi et alias perferendis dolor.
                ids:
                - r-12345678
                - r-abcdefgh
                - r-1234abcd
                nextPageToken: next-token
                serviceId: s-123456
              schema:
                $ref: "#/components/schemas/ListDependentResourcesResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list resources"
      security:
      - api_key_header_Authorization: []
      summary: ListDependentResource resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/deprecate:
    patch:
      operationId: resource-api#DeprecateResource
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Quia eligendi enim suscipit.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to deprecate an resource"
      security:
      - api_key_header_Authorization: []
      summary: DeprecateResource resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/environment-variables:
    delete:
      operationId: resource-api#UnsetEnvironmentVariables
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Quibusdam omnis molestiae consequatur.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              environmentVariables:
              - key: MYSQL_ROOT_PASSWORD
                value: password
            schema:
              $ref: "#/components/schemas/UnsetEnvironmentVariablesRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to remove environment\
            \ variables from a resource"
      security:
      - api_key_header_Authorization: []
      summary: UnsetEnvironmentVariables resource-api
      tags:
      - resource-api
    patch:
      operationId: resource-api#SetEnvironmentVariables
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Voluptate delectus fugit.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              environmentVariables:
              - key: MYSQL_ROOT_PASSWORD
                value: password
            schema:
              $ref: "#/components/schemas/SetEnvironmentVariablesRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to add environment\
            \ variables to a resource"
      security:
      - api_key_header_Authorization: []
      summary: SetEnvironmentVariables resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/file:
    get:
      operationId: resource-api#ListFiles
      parameters:
      - allowEmptyValue: true
        description: ProductTierId of the config file to describe
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Eius fugiat et.
          type: string
        style: form
      - allowEmptyValue: true
        description: "Product tier version of the config file to describe. If missing,\
          \ last version is described"
        example: "1.0"
        explode: true
        in: query
        name: productTierVersion
        required: false
        schema:
          description: "Product tier version of the config file to describe. If missing,\
            \ last version is described"
          example: "1.0"
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Quas est quidem quos odit consequatur.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                files:
                - description: A file to store the configuration for the resource
                  fileId: Ipsa quaerat eveniet nam.
                  mountPath: /etc/config
                  name: file.txt
                  size: 1234
                  type: Config|Secret
                  uploadTime: 2023-01-10T00:00:00Z
                  uploadedBy: user
                - description: A file to store the configuration for the resource
                  fileId: Ipsa quaerat eveniet nam.
                  mountPath: /etc/config
                  name: file.txt
                  size: 1234
                  type: Config|Secret
                  uploadTime: 2023-01-10T00:00:00Z
                  uploadedBy: user
                - description: A file to store the configuration for the resource
                  fileId: Ipsa quaerat eveniet nam.
                  mountPath: /etc/config
                  name: file.txt
                  size: 1234
                  type: Config|Secret
                  uploadTime: 2023-01-10T00:00:00Z
                  uploadedBy: user
                - description: A file to store the configuration for the resource
                  fileId: Ipsa quaerat eveniet nam.
                  mountPath: /etc/config
                  name: file.txt
                  size: 1234
                  type: Config|Secret
                  uploadTime: 2023-01-10T00:00:00Z
                  uploadedBy: user
              schema:
                $ref: "#/components/schemas/ListFilesResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list files"
      security:
      - api_key_header_Authorization: []
      summary: ListFiles resource-api
      tags:
      - resource-api
    post:
      operationId: resource-api#AddFile
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Aut iure et illo molestiae dolor et.
          type: string
        style: simple
      - description: "Content-Type header, must define value for multipart boundary."
        example: multipart/form-data; boundary=boundary
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          default: multipart/form-data; boundary=boundary
          description: "Content-Type header, must define value for multipart boundary."
          example: multipart/form-data; boundary=boundary
          pattern: "multipart/[^;]+; boundary=.+"
          type: string
        style: simple
      - description: The name of the file
        example: file.txt
        explode: false
        in: header
        name: Name
        required: true
        schema:
          description: The name of the file
          example: file.txt
          type: string
        style: simple
      - description: The description of the file
        example: A file to store the configuration for the resource
        explode: false
        in: header
        name: Description
        required: true
        schema:
          description: The description of the file
          example: A file to store the configuration for the resource
          type: string
        style: simple
      - description: The type of the file
        example: Config
        explode: false
        in: header
        name: FileType
        required: true
        schema:
          description: The type of the file
          example: Config|Secret
          type: string
        style: simple
      - description: The mount path of the file
        example: /etc/config
        explode: false
        in: header
        name: MountPath
        required: true
        schema:
          description: The mount path of the file
          example: /etc/config
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: Nam saepe.
              schema:
                example: Quisquam rerum ipsa.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "415":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_media_type: Error returned when the Content-Type header\
            \ does not define a multipart request."
      security:
      - api_key_header_Authorization: []
      summary: AddFile resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/file/{fileId}:
    delete:
      operationId: resource-api#RemoveFile
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Expedita sint corporis fuga et enim.
          type: string
        style: simple
      - description: The ID of the file
        example: file-12345678
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          description: ID of a File
          example: Blanditiis velit sint rerum omnis.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when the requested file is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a file"
      security:
      - api_key_header_Authorization: []
      summary: RemoveFile resource-api
      tags:
      - resource-api
    get:
      operationId: resource-api#GetFile
      parameters:
      - allowEmptyValue: true
        description: Product Tier ID of the config files to list
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Ab molestiae illum.
          type: string
        style: form
      - allowEmptyValue: true
        description: "Product Tier version of the config files to list. If missing,\
          \ last version is used"
        example: "1.0"
        explode: true
        in: query
        name: productTierVersion
        required: false
        schema:
          description: "Product Tier version of the config files to list. If missing,\
            \ last version is used"
          example: "1.0"
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Placeat nobis dolorem provident quia sed.
          type: string
        style: simple
      - description: The ID of the file
        example: f-12345678
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          description: ID of a File
          example: Excepturi et consequatur sit cum.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: OK response.
          headers:
            Content-Length:
              description: Length is the downloaded content length in bytes.
              example: 4194304
              explode: false
              schema:
                description: Length is the downloaded content length in bytes.
                example: 4194304
                format: int64
                type: integer
              style: simple
            Content-Type:
              description: "Content-Type header, must define value for multipart boundary."
              example: multipart/form-data; boundary=boundary
              explode: false
              schema:
                default: multipart/form-data; boundary=boundary
                description: "Content-Type header, must define value for multipart\
                  \ boundary."
                example: multipart/form-data; boundary=boundary
                type: string
              style: simple
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when the requested file is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a file"
      security:
      - api_key_header_Authorization: []
      summary: GetFile resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/file/{fileId}/content:
    put:
      operationId: resource-api#UpdateFileContent
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Sapiente quia at incidunt sed laboriosam dignissimos.
          type: string
        style: simple
      - description: The ID of the file
        example: f-12345678
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          description: ID of a File
          example: Ratione recusandae ut voluptatibus.
          type: string
        style: simple
      - description: "Content-Type header, must define value for multipart boundary."
        example: multipart/form-data; boundary=boundary
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          default: multipart/form-data; boundary=boundary
          description: "Content-Type header, must define value for multipart boundary."
          example: multipart/form-data; boundary=boundary
          pattern: "multipart/[^;]+; boundary=.+"
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
      security:
      - api_key_header_Authorization: []
      summary: UpdateFileContent resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/file/{fileId}/metadata:
    patch:
      operationId: resource-api#UpdateFileMetadata
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Ut aliquid sunt et explicabo.
          type: string
        style: simple
      - description: The ID of the file
        example: f-12345678
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          description: ID of a File
          example: Ex id.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A file to store the configuration for the resource
              mountPath: /etc/config
              name: file.txt
            schema:
              $ref: "#/components/schemas/UpdateFileMetadataRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
      security:
      - api_key_header_Authorization: []
      summary: UpdateFileMetadata resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/metrics:
    delete:
      operationId: resource-api#DeregisterResourceMetricsConfig
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Est adipisci laudantium id fuga porro.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response on failure to register resource metrics"
      security:
      - api_key_header_Authorization: []
      summary: DeregisterResourceMetricsConfig resource-api
      tags:
      - resource-api
    get:
      operationId: resource-api#DescribeResourceMetricsConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the resource to describe. If not specified,\
          \ the latest version is described."
        example: Quos dolorum.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the resource to describe. If not specified,\
            \ the latest version is described."
          example: Sit qui quis et quia consequatur possimus.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the resource to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Omnis consequatur.
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Consectetur labore.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: Voluptatem neque ea culpa.
                metricEndpoint: http://localhost:9187/metrics
                serviceId: s-123456
              schema:
                $ref: "#/components/schemas/Describeresourcemetricsconfigresult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response when the requested resource is not found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response when requested resource is in an invalid\
            \ state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response on failure to describe resource metrics"
      security:
      - api_key_header_Authorization: []
      summary: DescribeResourceMetricsConfig resource-api
      tags:
      - resource-api
    post:
      operationId: resource-api#RegisterResourceMetricsConfig
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Aliquid aut modi quasi ut et.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              metricEndpoint: http://localhost:9187/metrics
            schema:
              $ref: "#/components/schemas/RegisterResourceMetricsConfigRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response on failure to register resource metrics"
      security:
      - api_key_header_Authorization: []
      summary: RegisterResourceMetricsConfig resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/resource-dependency/{resourceDependencyId}:
    delete:
      operationId: resource-api#RemoveResourceDependency
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Autem est exercitationem placeat vel voluptatem.
          type: string
        style: simple
      - description: The ID of the resource dependency to remove
        example: r-12345678
        explode: false
        in: path
        name: resourceDependencyId
        required: true
        schema:
          description: ID of a resource
          example: Reprehenderit aliquam voluptatem.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to remove a resource\
            \ dependency from a resource"
      security:
      - api_key_header_Authorization: []
      summary: RemoveResourceDependency resource-api
      tags:
      - resource-api
    post:
      operationId: resource-api#AddResourceDependency
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Inventore exercitationem.
          type: string
        style: simple
      - description: The ID of the resource to be added as a dependency
        example: r-12345678
        explode: false
        in: path
        name: resourceDependencyId
        required: true
        schema:
          description: ID of a resource
          example: Tempore est dicta temporibus voluptatem.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              parameterMap:
                clusterId: writerId
                clusterOrg: userDatabase
            schema:
              $ref: "#/components/schemas/AddResourceDependencyRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to add a resource\
            \ dependency to a resource"
      security:
      - api_key_header_Authorization: []
      summary: AddResourceDependency resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{resourceId}/input-parameter:
    get:
      operationId: input-parameter-api#ListInputParameter
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the instance to describe. If not specified,\
          \ the latest version is described."
        example: Quos vero consequuntur ipsa in qui accusamus.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the instance to describe. If not specified,\
            \ the latest version is described."
          example: Voluptatem sequi aliquam odit ratione aspernatur quam.
          type: string
        style: form
      - allowEmptyValue: true
        description: Product tier id of the instance to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Est eaque ut eligendi voluptatibus aperiam.
          type: string
        style: form
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource that this input parameter belongs to
        example: r-12345678
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          description: ID of a resource
          example: Sunt omnis vero ratione molestiae eos earum.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - ip-12345678
                - ip-12345679
                inputParameters:
                - defaultValue: "true"
                  dependentResourceId: Voluptates ducimus qui eaque.
                  description: Et voluptatem ex quam.
                  hasOptions: false
                  id: Adipisci provident officiis dolore veniam sunt alias.
                  isList: true
                  key: "5"
                  labeledOptions:
                    large: t3.xlarge
                    medium: t3.large
                    small: t3.medium
                  limits:
                    max: Minus cupiditate sint neque qui.
                    maxLength: Mollitia rerum exercitationem rerum unde omnis.
                    min: Repellat voluptatem assumenda qui.
                    minLength: Qui voluptas enim hic dolores ipsam suscipit.
                  modifiable: true
                  name: rd
                  options:
                  - "true"
                  - "false"
                  regex: "^[a-zA-Z0-9_-]+$"
                  required: false
                  resourceId: Consequuntur in id commodi.
                  serviceId: s-123456
                  tabIndex: 1
                  type: Boolean|Float64|String|Resource|Secret|Password
                - defaultValue: "true"
                  dependentResourceId: Voluptates ducimus qui eaque.
                  description: Et voluptatem ex quam.
                  hasOptions: false
                  id: Adipisci provident officiis dolore veniam sunt alias.
                  isList: true
                  key: "5"
                  labeledOptions:
                    large: t3.xlarge
                    medium: t3.large
                    small: t3.medium
                  limits:
                    max: Minus cupiditate sint neque qui.
                    maxLength: Mollitia rerum exercitationem rerum unde omnis.
                    min: Repellat voluptatem assumenda qui.
                    minLength: Qui voluptas enim hic dolores ipsam suscipit.
                  modifiable: true
                  name: rd
                  options:
                  - "true"
                  - "false"
                  regex: "^[a-zA-Z0-9_-]+$"
                  required: false
                  resourceId: Consequuntur in id commodi.
                  serviceId: s-123456
                  tabIndex: 1
                  type: Boolean|Float64|String|Resource|Secret|Password
                - defaultValue: "true"
                  dependentResourceId: Voluptates ducimus qui eaque.
                  description: Et voluptatem ex quam.
                  hasOptions: false
                  id: Adipisci provident officiis dolore veniam sunt alias.
                  isList: true
                  key: "5"
                  labeledOptions:
                    large: t3.xlarge
                    medium: t3.large
                    small: t3.medium
                  limits:
                    max: Minus cupiditate sint neque qui.
                    maxLength: Mollitia rerum exercitationem rerum unde omnis.
                    min: Repellat voluptatem assumenda qui.
                    minLength: Qui voluptas enim hic dolores ipsam suscipit.
                  modifiable: true
                  name: rd
                  options:
                  - "true"
                  - "false"
                  regex: "^[a-zA-Z0-9_-]+$"
                  required: false
                  resourceId: Consequuntur in id commodi.
                  serviceId: s-123456
                  tabIndex: 1
                  type: Boolean|Float64|String|Resource|Secret|Password
                - defaultValue: "true"
                  dependentResourceId: Voluptates ducimus qui eaque.
                  description: Et voluptatem ex quam.
                  hasOptions: false
                  id: Adipisci provident officiis dolore veniam sunt alias.
                  isList: true
                  key: "5"
                  labeledOptions:
                    large: t3.xlarge
                    medium: t3.large
                    small: t3.medium
                  limits:
                    max: Minus cupiditate sint neque qui.
                    maxLength: Mollitia rerum exercitationem rerum unde omnis.
                    min: Repellat voluptatem assumenda qui.
                    minLength: Qui voluptas enim hic dolores ipsam suscipit.
                  modifiable: true
                  name: rd
                  options:
                  - "true"
                  - "false"
                  regex: "^[a-zA-Z0-9_-]+$"
                  required: false
                  resourceId: Consequuntur in id commodi.
                  serviceId: s-123456
                  tabIndex: 1
                  type: Boolean|Float64|String|Resource|Secret|Password
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListInputParametersResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list input parameters"
      security:
      - api_key_header_Authorization: []
      summary: ListInputParameter input-parameter-api
      tags:
      - input-parameter-api
  /2022-09-01-00/service/{serviceId}/resource/{resourceId}/output-parameter:
    get:
      operationId: output-parameter-api#ListOutputParameter
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the resource to describe. If not specified,\
          \ the latest version is described."
        example: Optio asperiores aperiam consequatur.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the resource to describe. If not specified,\
            \ the latest version is described."
          example: Et aut necessitatibus aperiam tenetur.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the resource to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Voluptas aspernatur rerum cupiditate placeat aut.
          type: string
        style: form
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource that this output parameter belongs to
        example: r-12345678
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          description: ID of a resource
          example: Facilis rerum necessitatibus voluptas.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - op-12345678
                nextPageToken: next-token
                outputParameters:
                - description: Username of the user created in the target system
                  genericCommandValueProvider:
                    args:
                    - -s
                    - http://example.com/api/username
                    command: curl
                    environment:
                      PATH: /usr/local/bin:/usr/bin:/bin
                    retryCount: 3
                    shell: /bin/bash
                    timeout: 30
                    workingDir: /tmp
                  id: Velit sed inventore qui.
                  key: username
                  kubectlValueProvider:
                    command: "get secret {{ $sys.id }}-creds -o jsonpath='{.data.username}'"
                    context: production
                    environment:
                      KUBECONFIG: /path/to/config
                    namespace: default
                    retryCount: 3
                    timeout: 30
                  name: Username
                  resourceId: Eum sed et quam quidem quia.
                  serviceId: s-123456
                  value: johndoe
                  valueRef: $var.username
                  valueType: Boolean|Float64|String|Secret|Password
                - description: Username of the user created in the target system
                  genericCommandValueProvider:
                    args:
                    - -s
                    - http://example.com/api/username
                    command: curl
                    environment:
                      PATH: /usr/local/bin:/usr/bin:/bin
                    retryCount: 3
                    shell: /bin/bash
                    timeout: 30
                    workingDir: /tmp
                  id: Velit sed inventore qui.
                  key: username
                  kubectlValueProvider:
                    command: "get secret {{ $sys.id }}-creds -o jsonpath='{.data.username}'"
                    context: production
                    environment:
                      KUBECONFIG: /path/to/config
                    namespace: default
                    retryCount: 3
                    timeout: 30
                  name: Username
                  resourceId: Eum sed et quam quidem quia.
                  serviceId: s-123456
                  value: johndoe
                  valueRef: $var.username
                  valueType: Boolean|Float64|String|Secret|Password
              schema:
                $ref: "#/components/schemas/ListOutputParametersResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list output parameters"
      security:
      - api_key_header_Authorization: []
      summary: ListOutputParameter output-parameter-api
      tags:
      - output-parameter-api
  /2022-09-01-00/service/{serviceId}/service-api:
    post:
      operationId: service-api-api#CreateServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL SaaS API specializing in multi-writer multi-tenant
                clusters for high availability
              serviceEnvironmentId: se-123456
            schema:
              $ref: "#/components/schemas/CreateServiceAPIRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Perferendis molestiae id qui impedit magnam amet.
              schema:
                description: Service API ID created
                example: Sit necessitatibus.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a service\
            \ API"
      security:
      - api_key_header_Authorization: []
      summary: CreateServiceAPI service-api-api
      tags:
      - service-api-api
  /2022-09-01-00/service/{serviceId}/service-api/{id}:
    delete:
      operationId: service-api-api#DeleteServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Et quos quos inventore tempore.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a service\
            \ API"
      security:
      - api_key_header_Authorization: []
      summary: DeleteServiceAPI service-api-api
      tags:
      - service-api-api
    get:
      operationId: service-api-api#DescribeServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Et quia dolores fuga est nobis voluptatum.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                apiVersion: v1
                deploymentConfigId: Aut assumenda a et minima.
                description: A MySQL SaaS API specializing in multi-writer multi-tenant
                  clusters for high availability
                id: Ut dolore incidunt accusantium sed.
                serviceEnvironmentId: se-123456
                serviceId: s-123456
                serviceName: mysql
              schema:
                $ref: "#/components/schemas/DescribeServiceAPIResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a service\
            \ API"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceAPI service-api-api
      tags:
      - service-api-api
    patch:
      operationId: service-api-api#UpdateServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Ducimus et qui.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL SaaS API specializing in multi-writer multi-tenant
                clusters for high availability
            schema:
              $ref: "#/components/schemas/UpdateServiceAPIRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update a service\
            \ API"
      security:
      - api_key_header_Authorization: []
      summary: UpdateServiceAPI service-api-api
      tags:
      - service-api-api
  /2022-09-01-00/service/{serviceId}/service-api/{id}/all-pending-changes:
    delete:
      operationId: service-api-api#DiscardPendingChanges
      parameters:
      - allowEmptyValue: true
        description: ProductTierID of the resource to describe pending changes forNeeds
          to specified in combination with the product tier version
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Explicabo non dolor.
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Odit ut aut autem doloremque accusamus molestiae.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe pending\
            \ changes to a service API"
      security:
      - api_key_header_Authorization: []
      summary: DiscardPendingChanges service-api-api
      tags:
      - service-api-api
    get:
      operationId: service-api-api#DescribePendingChanges
      parameters:
      - allowEmptyValue: true
        description: ProductTierID of the resource to describe pending changes forNeeds
          to specified in combination with the product tier version
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Rerum in.
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Ea nemo voluptatem ipsam odit quis.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: In ut consequatur debitis repellat voluptatum.
                resourceChangeSets:
                  Impedit eum quam dicta praesentium impedit dignissimos.:
                    categorizedResourceChanges:
                      Et inventore.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        status: NO_CHANGE|PENDING_CHANGE|NONE
                      Sequi officiis.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        status: NO_CHANGE|PENDING_CHANGE|NONE
                      Sunt provident ut quibusdam hic consequatur.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        status: NO_CHANGE|PENDING_CHANGE|NONE
                    imageConfigChanges:
                      changeState: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                      imageConfigId: Numquam sunt.
                      imageName: mysql
                    infraConfigChanges:
                      changeState: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                      infraConfigId: Illum ducimus ut quo assumenda ut.
                      name: MySQL Writer Infra Config
                    overallResourceStatus: NO_CHANGE|PENDING_CHANGE|NONE
                    productTierFeatureChanges: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                    resourceChanges: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                    resourceName: Aperiam laborum et ut velit dignissimos dolores.
                  In velit et ut voluptas.:
                    categorizedResourceChanges:
                      Et inventore.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        status: NO_CHANGE|PENDING_CHANGE|NONE
                      Sequi officiis.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        status: NO_CHANGE|PENDING_CHANGE|NONE
                      Sunt provident ut quibusdam hic consequatur.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        status: NO_CHANGE|PENDING_CHANGE|NONE
                    imageConfigChanges:
                      changeState: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                      imageConfigId: Numquam sunt.
                      imageName: mysql
                    infraConfigChanges:
                      changeState: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                      infraConfigId: Illum ducimus ut quo assumenda ut.
                      name: MySQL Writer Infra Config
                    overallResourceStatus: NO_CHANGE|PENDING_CHANGE|NONE
                    productTierFeatureChanges: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                    resourceChanges: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                    resourceName: Aperiam laborum et ut velit dignissimos dolores.
                  Rerum non corrupti hic molestiae.:
                    categorizedResourceChanges:
                      Et inventore.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        status: NO_CHANGE|PENDING_CHANGE|NONE
                      Sequi officiis.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        status: NO_CHANGE|PENDING_CHANGE|NONE
                      Sunt provident ut quibusdam hic consequatur.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                          name: Customer metrics
                        status: NO_CHANGE|PENDING_CHANGE|NONE
                    imageConfigChanges:
                      changeState: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                      imageConfigId: Numquam sunt.
                      imageName: mysql
                    infraConfigChanges:
                      changeState: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                      infraConfigId: Illum ducimus ut quo assumenda ut.
                      name: MySQL Writer Infra Config
                    overallResourceStatus: NO_CHANGE|PENDING_CHANGE|NONE
                    productTierFeatureChanges: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                    resourceChanges: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
                    resourceName: Aperiam laborum et ut velit dignissimos dolores.
                serviceId: s-123456
              schema:
                $ref: "#/components/schemas/DescribePendingChangesResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe pending\
            \ changes to a service API"
      security:
      - api_key_header_Authorization: []
      summary: DescribePendingChanges service-api-api
      tags:
      - service-api-api
  /2022-09-01-00/service/{serviceId}/service-api/{id}/deprecate:
    post:
      operationId: service-api-api#DeprecateServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Corrupti et.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to deprecate a service\
            \ API"
      security:
      - api_key_header_Authorization: []
      summary: DeprecateServiceAPI service-api-api
      tags:
      - service-api-api
  /2022-09-01-00/service/{serviceId}/service-api/{id}/release:
    post:
      operationId: service-api-api#ReleaseServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Velit in accusamus et omnis eveniet blanditiis.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              copySpecFromPreviousVersion: false
              dryRun: false
              isPreferred: true
              productTierId: Alias in vel ut doloremque quasi.
              versionSetName: v1
              versionSetType: Major|Incremental|UserDefined
            schema:
              $ref: "#/components/schemas/ReleaseServiceAPIRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to release a service\
            \ API"
      security:
      - api_key_header_Authorization: []
      summary: ReleaseServiceAPI service-api-api
      tags:
      - service-api-api
  /2022-09-01-00/service/{serviceId}/serviceapi/{serviceApiId}/model:
    get:
      operationId: service-model-api#ListServiceModel
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: serviceApiId
        required: true
        schema:
          description: ID of a Service API
          example: Commodi ducimus reprehenderit eaque explicabo.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - sm-12345678
                - sm-87654321
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListServiceModelsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list service models"
      security:
      - api_key_header_Authorization: []
      summary: ListServiceModel service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/serviceenvironment/{serviceEnvironmentId}/image-config:
    get:
      operationId: image-config-api#ListImageConfigs
      parameters:
      - description: The service ID to use for the infra
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID
        example: se-12345678
        explode: false
        in: path
        name: serviceEnvironmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - imgc-12345678
                - imgc-87654321
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListImageConfigsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list image configs"
      security:
      - api_key_header_Authorization: []
      summary: ListImageConfigs image-config-api
      tags:
      - image-config-api
  /2022-09-01-00/service/{serviceId}/serviceenvironment/{serviceEnvironmentId}/infra-config:
    get:
      operationId: infra-config-api#ListInfraConfig
      parameters:
      - allowEmptyValue: true
        description: Is infra config managed by omnistrate
        example: false
        explode: true
        in: query
        name: managed
        required: false
        schema:
          description: Is infra config managed by omnistrate
          example: false
          type: boolean
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID
        example: se-12345678
        explode: false
        in: path
        name: serviceEnvironmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - ic-12345678
                - ic-abcdefgh
                - ic-1234efgh
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListInfraConfigResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list infra configs"
      security:
      - api_key_header_Authorization: []
      summary: ListInfraConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/serviceenvironment/{serviceEnvironmentId}/service-api:
    get:
      operationId: service-api-api#ListServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID
        example: se-12345678
        explode: false
        in: path
        name: serviceEnvironmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - sa-12345678
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListServiceAPIsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list service APIs"
      security:
      - api_key_header_Authorization: []
      summary: ListServiceAPI service-api-api
      tags:
      - service-api-api
  /2022-09-01-00/service/{serviceId}/storage-config:
    get:
      operationId: storage-config-api#ListStorageConfig
      parameters:
      - allowEmptyValue: true
        description: Is storage config managed by omnistrate
        example: false
        explode: true
        in: query
        name: managed
        required: false
        schema:
          description: Is storage config managed by omnistrate
          example: false
          type: boolean
        style: form
      - description: The service id to filter by
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - sc-12345678
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListStorageConfigsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list storage configs"
      security:
      - api_key_header_Authorization: []
      summary: ListStorageConfig storage-config-api
      tags:
      - storage-config-api
    post:
      operationId: storage-config-api#CreateStorageConfig
      parameters:
      - description: The service to which this storage config belongs
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: my-storage-config-description
              name: my-storage-config
            schema:
              $ref: "#/components/schemas/CreateStorageConfigRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Possimus mollitia cumque natus.
              schema:
                description: Storage Config ID created
                example: Id error reprehenderit nihil occaecati qui tempore.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create storage\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateStorageConfig storage-config-api
      tags:
      - storage-config-api
  /2022-09-01-00/service/{serviceId}/storage-config/{id}:
    delete:
      operationId: storage-config-api#DeleteStorageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage config ID
        example: sc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Config
          example: Sit odio voluptas est optio.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a storage\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteStorageConfig storage-config-api
      tags:
      - storage-config-api
    get:
      operationId: storage-config-api#DescribeStorageConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the storage config to describe. If not\
          \ specified, the latest version is described."
        example: Voluptatem aut qui.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the storage config to describe. If\
            \ not specified, the latest version is described."
          example: Autem modi odio.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the storage config to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Voluptatem sed dolor et.
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage config ID
        example: sc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Config
          example: Enim reiciendis eum aut.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: my-storage-config-description
                id: Consequatur voluptatem earum.
                infraConfigIDs:
                - ic-12345678
                - ic-abcdefgh
                name: my-storage-config
                serviceId: s-123456
                volumes:
                  svc-12345678:
                  - /data
                  - /mnt/logs
                  svc-23456789:
                  - /config
              schema:
                $ref: "#/components/schemas/DescribeStorageConfigResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe storage\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeStorageConfig storage-config-api
      tags:
      - storage-config-api
    patch:
      operationId: storage-config-api#UpdateStorageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage config ID
        example: sc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Config
          example: Unde repellendus.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: my-storage-config-description
              name: my-storage-config
            schema:
              $ref: "#/components/schemas/UpdateStorageConfigRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update storage\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateStorageConfig storage-config-api
      tags:
      - storage-config-api
  /2022-09-01-00/service/{serviceId}/storage-config/{id}/volume/{storageVolumeConfigId}:
    delete:
      operationId: storage-config-api#RemoveStorageVolumeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage config ID
        example: sc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Config
          example: Inventore adipisci.
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: storageVolumeConfigId
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Repellendus quis.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              mountPath: /data
            schema:
              $ref: "#/components/schemas/RemoveStorageVolumeConfigRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to remove storage\
            \ volume config"
      security:
      - api_key_header_Authorization: []
      summary: RemoveStorageVolumeConfig storage-config-api
      tags:
      - storage-config-api
    put:
      operationId: storage-config-api#AddStorageVolumeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage config ID
        example: sc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Config
          example: Doloremque dolores quaerat aut.
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: storageVolumeConfigId
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Aliquam excepturi.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              mountPath: /data
            schema:
              $ref: "#/components/schemas/AddStorageVolumeConfigRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to add storage volume\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: AddStorageVolumeConfig storage-config-api
      tags:
      - storage-config-api
  /2022-09-01-00/service/{serviceId}/storage-volume-config:
    get:
      operationId: storage-volume-config-api#ListStorageVolumeConfig
      parameters:
      - allowEmptyValue: true
        description: Is storage volume config managed by omnistrate
        example: false
        explode: true
        in: query
        name: managed
        required: false
        schema:
          description: Is storage volume config managed by omnistrate
          example: false
          type: boolean
        style: form
      - description: The service to list storage volume configs for
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - svc-12345678
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListStorageVolumeConfigsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list storage volume\
            \ configs"
      security:
      - api_key_header_Authorization: []
      summary: ListStorageVolumeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
    post:
      operationId: storage-volume-config-api#CreateStorageVolumeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              clusterStorageType: S3|$var.storageType|AWS::EFS
              description: A storage volume set to store the MySQL data directory
              disableBackup: false
              instanceStorageIops: $var.storageIops
              instanceStorageSizeGi: $var.storage_size
              instanceStorageThroughputMiBps: "128"
              instanceStorageType: $var.storageType
              name: MySQL Data Volume
              storageResourceID: r-12345678
            schema:
              $ref: "#/components/schemas/CreateStorageVolumeConfigRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Quo praesentium rerum illo cum eveniet.
              schema:
                description: Storage Volume Config ID created
                example: Sapiente aliquid enim est dolorem.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create storage\
            \ volume config"
      security:
      - api_key_header_Authorization: []
      summary: CreateStorageVolumeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
  /2022-09-01-00/service/{serviceId}/storage-volume-config/{id}:
    delete:
      operationId: storage-volume-config-api#DeleteStorageVolumeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Odio non odio fugiat.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a storage\
            \ volume config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteStorageVolumeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
    get:
      operationId: storage-volume-config-api#DescribeStorageVolumeConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the network config to describe. If not\
          \ specified, the latest version is described."
        example: Ipsam voluptatem earum at.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the network config to describe. If\
            \ not specified, the latest version is described."
          example: Vel dolorem quia corrupti at.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the network config to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Soluta non inventore in eaque consequatur repellendus.
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Magnam nostrum nesciunt unde.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cloudProviderName: aws|azure|gcp|all
                clusterStorageType: S3|$var.storageType|AWS::EFS
                description: A storage volume set to store the MySQL data directory
                disableBackup: false
                id: Numquam impedit iure placeat.
                instanceStorageIops: "7500"
                instanceStorageSizeGi: "128"
                instanceStorageThroughputMiBps: "128"
                instanceStorageType: $var.storageType
                name: MySQL Data Volume
                serviceId: s-123456
                storageResourceID: r-12345678
              schema:
                $ref: "#/components/schemas/DescribeStorageVolumeConfigResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe storage\
            \ volume config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeStorageVolumeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
    patch:
      operationId: storage-volume-config-api#UpdateStorageVolumeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Dolor officiis beatae atque.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A storage volume set to store the MySQL data directory
              disableBackup: false
              name: MySQL Data Volume
            schema:
              $ref: "#/components/schemas/UpdateStorageVolumeConfigRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update storage\
            \ volume config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateStorageVolumeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
  /2022-09-01-00/service/{serviceId}/storage-volume-config/{id}/instance:
    patch:
      operationId: storage-volume-config-api#UpdateInstanceStorageVolumeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Ea natus nobis praesentium et autem qui.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              instanceStorageIops: "7500"
              instanceStorageThroughputMiBps: "128"
              instanceStorageType: AWS::EBS_GP2
            schema:
              $ref: "#/components/schemas/UpdateInstanceStorageVolumeConfigRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update instance\
            \ storage volume type config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateInstanceStorageVolumeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
  /2022-09-01-00/service/{serviceId}/storage-volume-config/{id}/size:
    patch:
      operationId: storage-volume-config-api#UpdateStorageVolumeSizeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Deserunt et ut.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              instanceStorageSizeGi: $var.storage_size
            schema:
              $ref: "#/components/schemas/UpdateStorageVolumeSizeConfigRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update storage\
            \ volume size config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateStorageVolumeSizeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
  /2022-09-01-00/service/{serviceId}/vunit/{id}:
    get:
      operationId: vunit-api#DescribeVUnit
      parameters:
      - description: Service ID for the VUnit
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: VUnit to operate on
        example: vu-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a VUnit
          example: Architecto fugit alias magni voluptas.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cloudProvider: aws|azure|gcp|all
                id: Et repellendus a maxime ea et ipsa.
                networkIds:
                - n-12345678
                - n-abcdefgh
                - n-1234efgh
                region: us-west-2
                serviceId: s-123456
                serviceModelId: Neque sint.
              schema:
                $ref: "#/components/schemas/DescribeVUnitResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a vunit"
      security:
      - api_key_header_Authorization: []
      summary: DescribeVUnit vunit-api
      tags:
      - vunit-api
  /2022-09-01-00/service/composespec:
    post:
      operationId: service-api#CreateServiceFromComposeSpec
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              fileContent: Beatae placeat in et ea ut non.
              fileFormat: text/plain
              fileName: mysql.yaml
              name: MySQL multi-writer service
              serviceLogoURL: http://mueller.com/cristopher
            schema:
              $ref: "#/components/schemas/CreateServiceFromComposeSpecRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: s-123456
              schema:
                description: Service ID created
                example: s-123456
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a service"
      security:
      - api_key_header_Authorization: []
      summary: CreateServiceFromComposeSpec service-api
      tags:
      - service-api
    put:
      operationId: service-api#BuildServiceFromComposeSpec
      requestBody:
        content:
          application/json:
            example:
              configs:
                Alias ad molestias odio quo sit.: Temporibus est repellat omnis dolores.
                Aut fugit maiores est voluptas facilis.: Quia ut earum ea similique.
                Quis soluta.: Possimus consectetur qui et mollitia et.
              description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              dryrun: true
              environment: dev
              environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
              fileContent: Qui eligendi odit.
              forceCreateNewServicePlanVersion: true
              name: MySQL multi-writer service
              release: true
              releaseAsPreferred: true
              releaseVersionName: mysql
              secrets:
                Laboriosam iste eaque consequuntur architecto minima.: Natus voluptatum.
              serviceLogoURL: http://durgan.info/zachery
            schema:
              $ref: "#/components/schemas/BuildServiceFromComposeSpecRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                isNewServicePlanVersionCreated: true
                productTierID: Consequatur facilis.
                serviceEnvironmentID: se-123456
                serviceID: s-123456
                undefinedResources:
                  mysql: r-12345678
              schema:
                $ref: "#/components/schemas/BuildServiceFromComposeSpecResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to build a service\
            \ from compose spec"
      security:
      - api_key_header_Authorization: []
      summary: BuildServiceFromComposeSpec service-api
      tags:
      - service-api
  /2022-09-01-00/service/serviceplanspec:
    put:
      operationId: service-api#BuildServiceFromServicePlanSpec
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              dryrun: true
              environment: dev
              environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
              fileContent: Sit explicabo non laboriosam.
              forceCreateNewServicePlanVersion: true
              name: MySQL multi-writer service
              release: true
              releaseAsPreferred: true
              releaseVersionName: mysql
              serviceLogoURL: http://hegmannokeefe.net/cristian
            schema:
              $ref: "#/components/schemas/BuildServiceFromServicePlanSpecRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                isNewServicePlanVersionCreated: true
                productTierID: Quisquam eum fuga temporibus similique.
                serviceEnvironmentID: se-123456
                serviceID: s-123456
                undefinedResources:
                  mysql: r-12345678
              schema:
                $ref: "#/components/schemas/BuildServiceFromServicePlanSpecResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to build a service\
            \ from compose spec"
      security:
      - api_key_header_Authorization: []
      summary: BuildServiceFromServicePlanSpec service-api
      tags:
      - service-api
  /2022-09-01-00/signin:
    post:
      operationId: signin-api#Signin
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              hashedPassword: deprecated
              password: password
            schema:
              $ref: "#/components/schemas/SigninRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                jwtToken: ""
              schema:
                $ref: "#/components/schemas/SigninResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to signin"
      summary: Signin signin-api
      tags:
      - signin-api
  /2022-09-01-00/signup:
    post:
      operationId: signup-api#Signup
      requestBody:
        content:
          application/json:
            example:
              companyDescription: We sell xyz database software
              companyUrl: https://www.mywebsite.com
              email: abc@gmail.com
              legalCompanyName: mywebsite
              name: John Doe
              password: password
            schema:
              $ref: "#/components/schemas/SignupRequest"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to signup"
      summary: Signup signup-api
      tags:
      - signup-api
  /2022-09-01-00/sp-organization:
    get:
      operationId: sp-organization-api#DescribeServiceProviderOrganization
      responses:
        "200":
          content:
            application/json:
              example:
                DefaultDeploymentCellConfigurations:
                  DeploymentCellConfigurationPerCloudProvider:
                    AWS:
                      Amenities:
                      - Description: DNS server for Kubernetes clusters.
                        IsManaged: true
                        Name: CoreDNS
                        Type: HelmChart
                      - Description: Service mesh for microservices.
                        IsManaged: false
                        Name: Istio
                        Properties:
                          ChartName: istio-base
                          ChartValues:
                            pilot:
                              traceSampling: 1
                          ChartVersion: 1.18.2
                          RepoURL: https://istio-release.storage.googleapis.com/charts
                        Type: HelmChart
                DeploymentCellConfigurationsPerEnv:
                  DEV:
                    DeploymentCellConfigurationPerCloudProvider:
                      GCP:
                        Amenities:
                        - Description: Distributed tracing system.
                          IsManaged: true
                          Name: Jaeger
                          Type: HelmChart
                  PROD:
                    DeploymentCellConfigurationPerCloudProvider:
                      AWS:
                        Amenities:
                        - Description: Ensures high availability across multiple zones.
                          IsManaged: true
                          Name: Prometheus
                          Type: HelmChart
                        - Description: Provides dashboards and visualizations.
                          IsManaged: false
                          Name: Grafana
                          Properties:
                            ChartName: grafana
                            ChartValues:
                              adminPassword: securepassword
                              adminUser: admin
                            ChartVersion: 6.17.4
                            RepoURL: https://grafana.github.io/helm-charts
                          Type: HelmChart
                id: Architecto id rerum ratione ratione.
                isPerEnvClusterEnabled: true
              schema:
                $ref: "#/components/schemas/DescribeServiceProviderOrganizationResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe service\
            \ provider organization"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceProviderOrganization sp-organization-api
      tags:
      - sp-organization-api
    patch:
      operationId: sp-organization-api#ModifyServiceProviderOrganization
      requestBody:
        content:
          application/json:
            example:
              DeploymentCellConfigurations:
                PROD:
                  DeploymentCellConfigurationPerCloudProvider:
                    AWS:
                      Amenities:
                      - Description: Ensures high availability across multiple zones.
                        IsManaged: true
                        Name: Prometheus
                        Type: HelmChart
                      - Description: Provides dashboards and visualizations.
                        IsManaged: false
                        Name: Grafana
                        Properties:
                          ChartName: grafana
                          ChartValues:
                            adminPassword: securepassword
                            adminUser: admin
                          ChartVersion: 6.17.4
                          RepoURL: https://grafana.github.io/helm-charts
                        Type: HelmChart
            schema:
              $ref: "#/components/schemas/ModifyServiceProviderOrganizationRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to modify service\
            \ provider organization"
      security:
      - api_key_header_Authorization: []
      summary: ModifyServiceProviderOrganization sp-organization-api
      tags:
      - sp-organization-api
  /2022-09-01-00/stripe-setup:
    get:
      operationId: stripe-connect-api#GetStripeAuthorizeUrl
      responses:
        "200":
          content:
            application/json:
              example:
                authorizeURL: https://connect.stripe.com/oauth/authorize?response_type=code&client_id=ca_12345678&scope=read_write&state=12345678
              schema:
                $ref: "#/components/schemas/StripeAuthorizeURLResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list invoices"
      security:
      - api_key_header_Authorization: []
      summary: GetStripeAuthorizeUrl stripe-connect-api
      tags:
      - stripe-connect-api
    post:
      operationId: stripe-connect-api#CompleteOAuthConnection
      requestBody:
        content:
          application/json:
            example:
              code: ac_12345678
              state: "12345678"
            schema:
              $ref: "#/components/schemas/CompleteOAuthConnectionRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                stripeUserID: acct_12345678
              schema:
                $ref: "#/components/schemas/CompleteOAuthConnectionResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list invoices"
      security:
      - api_key_header_Authorization: []
      summary: CompleteOAuthConnection stripe-connect-api
      tags:
      - stripe-connect-api
  /2022-09-01-00/subscription:
    get:
      operationId: subscription-api#ListSubscriptions
      parameters:
      - allowEmptyValue: true
        description: Service Id
        example: service-12345678
        explode: true
        in: query
        name: serviceId
        required: false
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: form
      - allowEmptyValue: true
        description: The environment type to filter by
        example: DEV
        explode: true
        in: query
        name: environmentType
        required: false
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - sub-12345678
                - sub-abcdefgh
                - sub-1234efgh
                nextPageToken: next-token
                subscriptions:
                - accountConfigIdentityId: Et asperiores velit quibusdam.
                  allowCreatesWhenPaymentNotConfigured: true
                  cloudProviderNames:
                  - aws
                  - gcp
                  createdAt: 2019-01-01T00:00:00Z
                  defaultSubscription: true
                  id: Qui sequi.
                  maxNumberOfInstances: 10
                  paymentMethodConfigured: true
                  productTierId: Dolor deleniti deleniti aut.
                  productTierName: Omnistrate Multi Tenancy
                  roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
                  rootUserId: Tempore ab et nihil.
                  serviceId: s-123456
                  serviceLogoURL: Placeat officia illum illo aut.
                  serviceName: MySQL multi-writer service
                  serviceOrgId: Et consequatur commodi ipsum qui illo et.
                  serviceOrgName: Omnistrate
                  status: ACTIVE|SUSPENDED|TERMINATED|CANCELLED
                  subscriptionOwnerName: John Doe
                - accountConfigIdentityId: Et asperiores velit quibusdam.
                  allowCreatesWhenPaymentNotConfigured: true
                  cloudProviderNames:
                  - aws
                  - gcp
                  createdAt: 2019-01-01T00:00:00Z
                  defaultSubscription: true
                  id: Qui sequi.
                  maxNumberOfInstances: 10
                  paymentMethodConfigured: true
                  productTierId: Dolor deleniti deleniti aut.
                  productTierName: Omnistrate Multi Tenancy
                  roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
                  rootUserId: Tempore ab et nihil.
                  serviceId: s-123456
                  serviceLogoURL: Placeat officia illum illo aut.
                  serviceName: MySQL multi-writer service
                  serviceOrgId: Et consequatur commodi ipsum qui illo et.
                  serviceOrgName: Omnistrate
                  status: ACTIVE|SUSPENDED|TERMINATED|CANCELLED
                  subscriptionOwnerName: John Doe
                - accountConfigIdentityId: Et asperiores velit quibusdam.
                  allowCreatesWhenPaymentNotConfigured: true
                  cloudProviderNames:
                  - aws
                  - gcp
                  createdAt: 2019-01-01T00:00:00Z
                  defaultSubscription: true
                  id: Qui sequi.
                  maxNumberOfInstances: 10
                  paymentMethodConfigured: true
                  productTierId: Dolor deleniti deleniti aut.
                  productTierName: Omnistrate Multi Tenancy
                  roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
                  rootUserId: Tempore ab et nihil.
                  serviceId: s-123456
                  serviceLogoURL: Placeat officia illum illo aut.
                  serviceName: MySQL multi-writer service
                  serviceOrgId: Et consequatur commodi ipsum qui illo et.
                  serviceOrgName: Omnistrate
                  status: ACTIVE|SUSPENDED|TERMINATED|CANCELLED
                  subscriptionOwnerName: John Doe
              schema:
                $ref: "#/components/schemas/ListSubscriptionsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list subscriptions"
      security:
      - api_key_header_Authorization: []
      summary: ListSubscriptions subscription-api
      tags:
      - subscription-api
    post:
      operationId: subscription-api#CreateSubscription
      requestBody:
        content:
          application/json:
            example:
              productTierId: Id sed excepturi occaecati.
              serviceId: s-123456
            schema:
              $ref: "#/components/schemas/CreateSubscriptionRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Cumque magnam in ratione ea voluptates quia.
              schema:
                description: Subscription ID created
                example: Deleniti quod.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a subscription"
      security:
      - api_key_header_Authorization: []
      summary: CreateSubscription subscription-api
      tags:
      - subscription-api
  /2022-09-01-00/subscription/{id}:
    delete:
      operationId: subscription-api#DeleteSubscription
      parameters:
      - description: The subscription ID
        example: sub-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription
          example: Iusto quidem est.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a subscription"
      security:
      - api_key_header_Authorization: []
      summary: DeleteSubscription subscription-api
      tags:
      - subscription-api
    get:
      operationId: subscription-api#DescribeSubscription
      parameters:
      - description: The subscription ID
        example: sub-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription
          example: Officia architecto eum sit.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                accountConfigIdentityId: Ex et.
                allowCreatesWhenPaymentNotConfigured: true
                cloudProviderNames:
                - aws
                - gcp
                createdAt: 2019-01-01T00:00:00Z
                defaultSubscription: true
                id: Et minus.
                maxNumberOfInstances: 10
                paymentMethodConfigured: true
                productTierId: Nihil aut.
                productTierName: Omnistrate Multi Tenancy
                roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
                rootUserId: Et numquam magnam totam.
                serviceId: s-123456
                serviceLogoURL: Quos vitae ratione est.
                serviceName: MySQL multi-writer service
                serviceOrgId: Quasi qui.
                serviceOrgName: Omnistrate
                status: ACTIVE|SUSPENDED|TERMINATED|CANCELLED
                subscriptionOwnerName: John Doe
              schema:
                $ref: "#/components/schemas/DescribeSubscriptionResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a subscription"
      security:
      - api_key_header_Authorization: []
      summary: DescribeSubscription subscription-api
      tags:
      - subscription-api
  /2022-09-01-00/subscription/request:
    get:
      operationId: subscription-request-api#ListSubscriptionRequests
      parameters:
      - allowEmptyValue: true
        description: The status of the subscription request to filter by
        example: PENDING
        explode: true
        in: query
        name: status
        required: false
        schema:
          description: The status of the subscription request
          example: PENDING|APPROVED|DENIED|CANCELLED
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - subr-12345678
                - subr-abcdefgh
                - subr-1234efgh
                nextPageToken: next-token
                subscriptionRequests:
                - createdAt: 2019-01-01T00:00:00Z
                  id: Consectetur sed aliquid.
                  productTierId: Consectetur error.
                  productTierName: Omnistrate Multi Tenancy
                  rootUserEmail: abc@gmail.com
                  rootUserId: Modi aliquam sit cupiditate.
                  rootUserName: John Doe
                  serviceId: s-123456
                  serviceLogoURL: Dolores exercitationem a debitis error reprehenderit.
                  serviceName: MySQL multi-writer service
                  status: PENDING|APPROVED|DENIED|CANCELLED
                  updatedAt: 2019-01-01T00:00:00Z
                  updatedByUserId: Possimus ullam voluptas.
                  updatedByUserName: John Doe
                - createdAt: 2019-01-01T00:00:00Z
                  id: Consectetur sed aliquid.
                  productTierId: Consectetur error.
                  productTierName: Omnistrate Multi Tenancy
                  rootUserEmail: abc@gmail.com
                  rootUserId: Modi aliquam sit cupiditate.
                  rootUserName: John Doe
                  serviceId: s-123456
                  serviceLogoURL: Dolores exercitationem a debitis error reprehenderit.
                  serviceName: MySQL multi-writer service
                  status: PENDING|APPROVED|DENIED|CANCELLED
                  updatedAt: 2019-01-01T00:00:00Z
                  updatedByUserId: Possimus ullam voluptas.
                  updatedByUserName: John Doe
                - createdAt: 2019-01-01T00:00:00Z
                  id: Consectetur sed aliquid.
                  productTierId: Consectetur error.
                  productTierName: Omnistrate Multi Tenancy
                  rootUserEmail: abc@gmail.com
                  rootUserId: Modi aliquam sit cupiditate.
                  rootUserName: John Doe
                  serviceId: s-123456
                  serviceLogoURL: Dolores exercitationem a debitis error reprehenderit.
                  serviceName: MySQL multi-writer service
                  status: PENDING|APPROVED|DENIED|CANCELLED
                  updatedAt: 2019-01-01T00:00:00Z
                  updatedByUserId: Possimus ullam voluptas.
                  updatedByUserName: John Doe
                - createdAt: 2019-01-01T00:00:00Z
                  id: Consectetur sed aliquid.
                  productTierId: Consectetur error.
                  productTierName: Omnistrate Multi Tenancy
                  rootUserEmail: abc@gmail.com
                  rootUserId: Modi aliquam sit cupiditate.
                  rootUserName: John Doe
                  serviceId: s-123456
                  serviceLogoURL: Dolores exercitationem a debitis error reprehenderit.
                  serviceName: MySQL multi-writer service
                  status: PENDING|APPROVED|DENIED|CANCELLED
                  updatedAt: 2019-01-01T00:00:00Z
                  updatedByUserId: Possimus ullam voluptas.
                  updatedByUserName: John Doe
              schema:
                $ref: "#/components/schemas/ListSubscriptionRequestsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a subscription"
      security:
      - api_key_header_Authorization: []
      summary: ListSubscriptionRequests subscription-request-api
      tags:
      - subscription-request-api
    post:
      operationId: subscription-request-api#CreateSubscriptionRequest
      requestBody:
        content:
          application/json:
            example:
              productTierId: Quis et minima dolor.
              serviceId: s-123456
            schema:
              $ref: "#/components/schemas/CreateSubscriptionRequestRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Qui aut repudiandae laboriosam.
              schema:
                description: Subscription request ID created
                example: Sit vel et.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a subscription"
      security:
      - api_key_header_Authorization: []
      summary: CreateSubscriptionRequest subscription-request-api
      tags:
      - subscription-request-api
  /2022-09-01-00/subscription/request/{id}:
    delete:
      operationId: subscription-request-api#CancelSubscriptionRequest
      parameters:
      - description: The subscription ID
        example: subr-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription Request
          example: Itaque tenetur natus dolor.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a subscription"
      security:
      - api_key_header_Authorization: []
      summary: CancelSubscriptionRequest subscription-request-api
      tags:
      - subscription-request-api
    get:
      operationId: subscription-request-api#DescribeSubscriptionRequest
      parameters:
      - description: The subscription ID
        example: subr-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription Request
          example: Esse rem ipsum.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                createdAt: 2019-01-01T00:00:00Z
                id: Recusandae aut.
                productTierId: Adipisci accusamus ipsam tempore non corporis.
                productTierName: Omnistrate Multi Tenancy
                rootUserEmail: abc@gmail.com
                rootUserId: Quo iusto.
                rootUserName: John Doe
                serviceId: s-123456
                serviceLogoURL: A ut fugit omnis qui facilis vel.
                serviceName: MySQL multi-writer service
                status: PENDING|APPROVED|DENIED|CANCELLED
                updatedAt: 2019-01-01T00:00:00Z
                updatedByUserId: Cum soluta et.
                updatedByUserName: John Doe
              schema:
                $ref: "#/components/schemas/DescribeSubscriptionRequestResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a subscription"
      security:
      - api_key_header_Authorization: []
      summary: DescribeSubscriptionRequest subscription-request-api
      tags:
      - subscription-request-api
  /2022-09-01-00/tenant-billing:
    get:
      operationId: tenant-billing-api#GetTenantBillingStatus
      responses:
        "200":
          content:
            application/json:
              example:
                billingProviders:
                - connectClientID: ca_1234567890
                  status: ENABLED
                  stripeCustomerID: cus_1234567890
                  type: STRIPE
                - balanceDueLink: https://billing.provider.com/balance-due
                  logoURL: https://example.com/logo.png
                  name: GovPay
                  status: ENABLED
                  type: BRING_YOUR_OWN
                enabled: true
              schema:
                $ref: "#/components/schemas/GetTenantBillingStatusResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list billing providers"
      security:
      - api_key_header_Authorization: []
      summary: GetTenantBillingStatus tenant-billing-api
      tags:
      - tenant-billing-api
  /2022-09-01-00/tenant-billing/disable:
    delete:
      operationId: tenant-billing-api#DisableTenantBilling
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to disable tenant\
            \ billing"
      security:
      - api_key_header_Authorization: []
      summary: DisableTenantBilling tenant-billing-api
      tags:
      - tenant-billing-api
  /2022-09-01-00/tenant-billing/disable/{billingProviderType}:
    delete:
      operationId: tenant-billing-api#DisableBillingProvider
      parameters:
      - description: The type of billing provider to enable
        example: STRIPE
        explode: false
        in: path
        name: billingProviderType
        required: true
        schema:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to disable billing\
            \ provider"
      security:
      - api_key_header_Authorization: []
      summary: DisableBillingProvider tenant-billing-api
      tags:
      - tenant-billing-api
  /2022-09-01-00/tenant-billing/enable:
    post:
      operationId: tenant-billing-api#EnableTenantBilling
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to enable tenant\
            \ billing"
      security:
      - api_key_header_Authorization: []
      summary: EnableTenantBilling tenant-billing-api
      tags:
      - tenant-billing-api
  /2022-09-01-00/tenant-billing/enable/{billingProviderType}:
    post:
      operationId: tenant-billing-api#EnableBillingProvider
      parameters:
      - description: The type of billing provider to enable
        example: STRIPE
        explode: false
        in: path
        name: billingProviderType
        required: true
        schema:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              balanceDueLink: https://billing.provider.com/balance-due. Only present
                when the billing provider is BRING_YOUR_OWN
              logoURL: https://example.com/logo.png
              name: Stripe
            schema:
              $ref: "#/components/schemas/EnableBillingProviderRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to enable billing\
            \ provider"
      security:
      - api_key_header_Authorization: []
      summary: EnableBillingProvider tenant-billing-api
      tags:
      - tenant-billing-api
  /2022-09-01-00/update-password:
    post:
      operationId: users-api#UpdatePassword
      requestBody:
        content:
          application/json:
            example:
              currentPassword: currentPassword
              currentPasswordHash: currentPasswordHash
              password: password
            schema:
              $ref: "#/components/schemas/UpdatePasswordRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update password"
      security:
      - api_key_header_Authorization: []
      summary: UpdatePassword users-api
      tags:
      - users-api
  /2022-09-01-00/usage:
    get:
      operationId: usage-api#GetCurrentUsage
      responses:
        "200":
          content:
            application/json:
              example:
                endTime: 2021-01-01T00:00:00.000Z
                planName: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
                startTime: 2021-01-01T00:00:00.000Z
                usage:
                - dimension: core/hours
                  endTime: 2021-01-01T00:00:00.000Z
                  startTime: 2021-01-01T00:00:00.000Z
                  total: 0.67
              schema:
                $ref: "#/components/schemas/GetUsageResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get usage"
      security:
      - api_key_header_Authorization: []
      summary: GetCurrentUsage usage-api
      tags:
      - usage-api
  /2022-09-01-00/usage-per-day:
    get:
      operationId: usage-api#GetUsagePerDay
      parameters:
      - allowEmptyValue: true
        description: Start date of the usage report
        example: 2023-01-01T10:00:00Z
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: End date of the usage report
        example: 2024-01-01T10:00:00Z
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                endTime: 2021-01-01T00:00:00.000Z
                planName: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
                startTime: 2021-01-01T00:00:00.000Z
                usage:
                - dimension: core/hours
                  endTime: 2021-01-01T00:00:00.000Z
                  startTime: 2021-01-01T00:00:00.000Z
                  total: 0.67
              schema:
                $ref: "#/components/schemas/GetUsageResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get usage"
      security:
      - api_key_header_Authorization: []
      summary: GetUsagePerDay usage-api
      tags:
      - usage-api
  /2022-09-01-00/user:
    delete:
      operationId: users-api#DeleteUser
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete user"
      security:
      - api_key_header_Authorization: []
      summary: DeleteUser users-api
      tags:
      - users-api
    get:
      operationId: users-api#DescribeUser
      responses:
        "200":
          content:
            application/json:
              example:
                address:
                  addressLine1: 1234 Main St
                  addressLine2: Apt 123
                  addressLine3: Building 123
                  city: San Francisco
                  country: US
                  state: CA
                  zip: "94123"
                createdAt: 2023-01-10T00:00:00Z
                email: abc@gmail.com
                enabled: true
                id: user-abcd1234
                lastModifiedAt: 2023-01-20T00:00:00Z
                name: John Dae
                orgCookiePolicy: Ullam nulla quo.
                orgDescription: ACME Inc.
                orgFavIconURL: Non fuga.
                orgId: org-aKQ8G13QeR
                orgLogoURL: Et eos.
                orgName: ACME
                orgPrivacyPolicy: Maxime qui ut quis.
                orgSupportEmail: support@example.com
                orgTermsOfUse: Debitis aut magni culpa harum.
                orgURL: something.acme
                planName: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
                roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
                status: ACTIVE|NOT_ENABLED
              schema:
                $ref: "#/components/schemas/DescribeUserResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: DescribeUser users-api
      tags:
      - users-api
  /2022-09-01-00/user/{id}:
    patch:
      operationId: users-api#UpdateUser
      parameters:
      - description: The User ID
        example: user-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The User ID
          example: user-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              address:
                addressLine1: 1234 Main St
                addressLine2: Apt 123
                addressLine3: Building 123
                city: San Francisco
                country: US
                state: CA
                zip: "94123"
              name: John Dae
              orgCookiePolicy: Fugit officiis minima.
              orgDescription: ACME Inc.
              orgFavIconURL: http://cassinromaguera.net/helene
              orgLogoURL: http://hermiston.info/muhammad.connelly
              orgName: ACME
              orgPrivacyPolicy: Voluptatibus magni officia cum error saepe eos.
              orgSupportEmail: support@example.com
              orgTermsOfUse: Beatae necessitatibus eligendi est laudantium consequatur
                minima.
              orgURL: something.acme
            schema:
              $ref: "#/components/schemas/UpdateUserRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: UpdateUser users-api
      tags:
      - users-api
  /2022-09-01-00/users/{id}/regenerate-token:
    post:
      operationId: signup-api#RegenerateToken
      parameters:
      - example: user-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: user-abcd1234
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to regenerate token"
      summary: RegenerateToken signup-api
      tags:
      - signup-api
  /2022-09-01-00/validate-token:
    post:
      operationId: signup-api#ValidateToken
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
            schema:
              $ref: "#/components/schemas/ValidateTokenRequest"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to validate the token"
      summary: ValidateToken signup-api
      tags:
      - signup-api
  /2022-09-01-00/version:
    get:
      description: Registration service version endpoint
      operationId: global-api#registrationServiceVersion
      responses:
        "200":
          content:
            application/json:
              example:
                apiVersion: "1.0"
                buildCommitSHA: 1234567890abcdef1234567890abcdef12345678
                buildTimestamp: 2020-01-01T00:00:00Z
              schema:
                $ref: "#/components/schemas/OmnistrateServiceVersionResult"
          description: OK response.
      summary: registrationServiceVersion global-api
      tags:
      - global-api
components:
  schemas:
    APIEntity:
      example:
        inputParameters:
        - defaultValue: null
          description: The name of the server
          displayName: Server Name
          isList: false
          key: serverName
          modifiable: true
          options: null
          required: true
          type: string
        - defaultValue: option1
          description: The type of the server
          displayName: Server Type
          isList: false
          key: serverType
          modifiable: true
          options:
          - option1
          - option2
          required: true
          type: string
        outputParameters:
        - description: The name of the server
          displayName: Server Name
          isList: false
          key: serverName
          type: string
        - description: The type of the server
          displayName: Server Type
          isList: false
          key: serverType
          type: string
        verb: CREATE|DESCRIBE|LIST|UPDATE|DELETE
      properties:
        inputParameters:
          description: The input parameters
          example:
          - defaultValue: null
            description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            modifiable: true
            options: null
            required: true
            type: string
          - defaultValue: option1
            description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            modifiable: true
            options:
            - option1
            - option2
            required: true
            type: string
          items:
            $ref: "#/components/schemas/InputParameterEntity"
          type: array
        outputParameters:
          description: The output parameters
          example:
          - description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            type: string
          - description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            type: string
          items:
            $ref: "#/components/schemas/OutputParameterEntity"
          type: array
        verb:
          description: The API verb
          example: CREATE|DESCRIBE|LIST|UPDATE|DELETE
          type: string
      required:
      - inputParameters
      - outputParameters
      - verb
      type: object
    AWSPrivateLinkConfiguration:
      example:
        port: 80
        targetGroupName: my-target-group
      properties:
        port:
          description: The port of the target group
          example: 80
          format: int64
          type: integer
        targetGroupName:
          description: The target group name
          example: my-target-group
          type: string
      required:
      - port
      - targetGroupName
      type: object
    AWSPrivateLinkConfigurations:
      description: The list of private link configurations
      example:
      - port: 80
        targetGroupName: my-target-group
      - port: 80
        targetGroupName: my-target-group
      items:
        $ref: "#/components/schemas/AWSPrivateLinkConfiguration"
      type: array
    AcceleratorConfiguration:
      description: Accelerator configuration for compute nodes
      example:
        count: 1
        type: nvidia-tesla-t4
      properties:
        count:
          description: Number of accelerators to attach
          example: 1
          format: int64
          minimum: 1
          type: integer
        type:
          description: Type of accelerator (GPU)
          enum:
          - nvidia-tesla-t4
          - nvidia-tesla-v100
          - nvidia-tesla-p100
          - nvidia-tesla-p4
          - nvidia-tesla-t4-vws
          - nvidia-tesla-p100-vws
          - nvidia-tesla-p4-vws
          - nvidia-a100
          - nvidia-a40
          - nvidia-h100
          - nvidia-l4
          example: nvidia-tesla-t4
          type: string
      required:
      - count
      - type
      type: object
    AccountConfigIdentityIDRequest:
      example:
        token: i
      properties:
        token:
          description: JWT token used to perform authorization
          example: ne
          minLength: 1
          type: string
      required:
      - token
      type: object
    AccountConfigIdentityIDResult:
      example:
        id: org-12345678
      properties:
        id:
          description: ID of an Org
          example: Perspiciatis maiores.
          type: string
      required:
      - id
      type: object
    AcknowledgeEventRequest:
      example:
        id: e-123456
        token: pa
      properties:
        id:
          description: ID of a Event
          example: Hic saepe pariatur libero voluptas sit.
          type: string
        token:
          description: JWT token used to perform authorization
          example: "2"
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    ActionHook:
      example:
        commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
        customCommand:
        - /bin/sh
        - -c
        customImage: my-custom-image:latest
        scope: CLUSTER
        type: ADD
      properties:
        commandTemplate:
          description: The Base64 encoded command template to execute
          example: ZWNobyAiaGVsbG8gd29ybGQi
          type: string
        customCommand:
          description: The custom command to execute the hook with
          example:
          - /bin/sh
          - -c
          items:
            example: Sunt libero iusto a.
            type: string
          type: array
        customImage:
          description: The custom image to execute the hook
          example: my-custom-image:latest
          type: string
        scope:
          description: The scope of the hook
          example: CLUSTER|NODE
          type: string
        type:
          description: The type of hook to execute
          example: INIT|ADD|REMOVE|PROMOTE|DEMOTE|HEALTH_CHECK|READINESS_CHECK|STARTUP_CHECK|PRE_START|POST_START|PRE_UPGRADE|POST_UPGRADE|PRE_STOP|POST_STOP
          type: string
      required:
      - commandTemplate
      - scope
      - type
      type: object
    AddAccountConfigToServiceModelRequest:
      example:
        accountConfigId: ac-12345678
        id: sm-12345678
        serviceId: s-12345678
        token: s
      properties:
        accountConfigId:
          description: ID of an Account Config
          example: Qui quasi.
          type: string
        id:
          description: ID of a Service Model
          example: Est occaecati laborum nemo.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: y5d
          minLength: 1
          type: string
      required:
      - accountConfigId
      - id
      - serviceId
      - token
      type: object
    AddAccountConfigToServiceModelRequest2:
      example:
        accountConfigId: Delectus aut fugit adipisci dolorem explicabo.
      properties:
        accountConfigId:
          description: The infrastructure account configuration ID
          example: Provident minus sed.
          type: string
      required:
      - accountConfigId
      type: object
    AddCapacityToResourceInstanceRequest:
      example:
        capacityToBeAdded: 3
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: t
      properties:
        capacityToBeAdded:
          description: Number of replicas to be added
          example: 3
          format: int64
          type: integer
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Dolor laudantium.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: rju
          minLength: 1
          type: string
      required:
      - capacityToBeAdded
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    AddCapacityToResourceInstanceRequest2:
      example:
        capacityToBeAdded: 3
      properties:
        capacityToBeAdded:
          description: Number of replicas to be added
          example: 3
          format: int64
          type: integer
      required:
      - capacityToBeAdded
      type: object
    AddComputeInstanceTypeRequest:
      example:
        cloudProviderName: aws
        configOverride:
          instanceLifeCycleType: Spot
          labels:
            env: prod
          rootVolumeSizeGi: 10
          taints:
          - effect: NoSchedule
            key: env
            value: prod
          warmPoolConfiguration:
            minimumNodesInPool: 1
        id: cc-12345678
        instanceType: t3.micro
        serviceId: s-12345678
        token: i
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        configOverride:
          $ref: "#/components/schemas/ComputeInstanceTypeConfigOverride"
        id:
          description: ID of a Compute Config
          example: Ut natus debitis ea rerum architecto.
          type: string
        instanceType:
          description: The instance type for this compute instance type config
          example: t3.micro
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: nx
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - id
      - instanceType
      - serviceId
      - token
      type: object
    AddComputeInstanceTypeRequest2:
      example:
        cloudProviderName: aws|azure|gcp|all
        configOverride:
          instanceLifeCycleType: Spot
          labels:
            env: prod
          rootVolumeSizeGi: 10
          taints:
          - effect: NoSchedule
            key: env
            value: prod
          warmPoolConfiguration:
            minimumNodesInPool: 1
        instanceType: t3.micro
      properties:
        cloudProviderName:
          description: The cloud provider for this compute instance type config
          example: aws|azure|gcp|all
          type: string
        configOverride:
          $ref: "#/components/schemas/ComputeInstanceTypeConfigOverride"
        instanceType:
          description: The instance type for this compute instance type config
          example: t3.micro
          type: string
      required:
      - cloudProviderName
      - instanceType
      type: object
    AddCustomDNSToResourceInstanceRequest:
      example:
        customDNS: my-custom-dns.com
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: http-service
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        targetPort: 8080
        token: k
      properties:
        customDNS:
          description: The custom DNS to add
          example: my-custom-dns.com
          type: string
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: http-service
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Earum odit vero odit.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        targetPort:
          description: The target port
          example: 8080
          format: int64
          type: integer
        token:
          description: JWT token used to perform authorization
          example: fl5
          minLength: 1
          type: string
      required:
      - customDNS
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    AddCustomDNSToResourceInstanceRequest2:
      example:
        customDNS: my-custom-dns.com
        targetPort: 8080
      properties:
        customDNS:
          description: The custom DNS to add
          example: my-custom-dns.com
          type: string
        targetPort:
          description: The target port
          example: 8080
          format: int64
          type: integer
      required:
      - customDNS
      type: object
    AddFileRequest:
      example:
        content_type: multipart/form-data; boundary=boundary
        description: A file to store the configuration for the resource
        fileType: Config
        id: r-12345678
        mountPath: /etc/config
        name: file.txt
        serviceId: s-12345678
        token: gd
      properties:
        content_type:
          default: multipart/form-data; boundary=boundary
          description: "Content-Type header, must define value for multipart boundary."
          example: multipart/form-data; boundary=boundary
          pattern: "multipart/[^;]+; boundary=.+"
          type: string
        description:
          description: The description of the file
          example: A file to store the configuration for the resource
          type: string
        fileType:
          description: The type of the file
          example: Config|Secret
          type: string
        id:
          description: ID of a resource
          example: Et voluptatibus.
          type: string
        mountPath:
          description: The mount path of the file
          example: /etc/config
          type: string
        name:
          description: The name of the file
          example: file.txt
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: v7
          minLength: 1
          type: string
      required:
      - content_type
      - description
      - fileType
      - id
      - mountPath
      - name
      - serviceId
      - token
      type: object
    AddResourceDependencyRequest:
      example:
        id: r-12345678
        parameterMap:
          clusterId: writerId
          clusterOrg: userDatabase
        resourceDependencyId: r-12345678
        serviceId: s-12345678
        token: ad
      properties:
        id:
          description: ID of a resource
          example: A aliquid libero sit dolores.
          type: string
        parameterMap:
          additionalProperties:
            example: Consectetur distinctio odio magnam temporibus nemo est.
            type: string
          description: A map of the source parameter to the dependency resource parameter
          example:
            clusterId: writerId
            clusterOrg: userDatabase
          type: object
        resourceDependencyId:
          description: ID of a resource
          example: Saepe ut saepe nulla eaque.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: w
          minLength: 1
          type: string
      required:
      - id
      - resourceDependencyId
      - serviceId
      - token
      type: object
    AddResourceDependencyRequest2:
      example:
        parameterMap:
          clusterId: writerId
          clusterOrg: userDatabase
      properties:
        parameterMap:
          additionalProperties:
            example: Deserunt omnis autem earum sit.
            type: string
          description: A map of the source parameter to the dependency resource parameter
          example:
            clusterId: writerId
            clusterOrg: userDatabase
          type: object
      type: object
    AddStorageVolumeConfigRequest:
      example:
        id: sc-12345678
        mountPath: /data
        serviceId: s-12345678
        storageVolumeConfigId: svc-12345678
        token: "8"
      properties:
        id:
          description: ID of a Storage Config
          example: Minima porro molestias mollitia eos harum.
          type: string
        mountPath:
          description: The path where the storage volume will be mounted
          example: /data
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        storageVolumeConfigId:
          description: ID of a Storage Volume Config
          example: Non in.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 0z6
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - storageVolumeConfigId
      - token
      type: object
    AddStorageVolumeConfigRequest2:
      example:
        mountPath: /data
      properties:
        mountPath:
          description: The path where the storage volume will be mounted
          example: /data
          type: string
      type: object
    AdditionalSecurityContext:
      example:
        AddCapabilities:
        - CAP_NET_ADMIN
        - CAP_NET_RAW
        DropCapabilities:
        - CAP_NET_ADMIN
        - CAP_NET_RAW
        SupplementalGroupIDs:
        - 1001
        - 999
      properties:
        AddCapabilities:
          description: Capabilities to add
          example:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          items:
            example: Voluptas omnis.
            type: string
          type: array
        DropCapabilities:
          description: Capabilities to drop
          example:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          items:
            example: Excepturi aliquid blanditiis est velit veniam aliquam.
            type: string
          type: array
        SupplementalGroupIDs:
          description: Supplemental group IDs
          example:
          - 1001
          - 999
          items:
            example: 3974493682719462768
            format: int64
            type: integer
          type: array
      type: object
    Address:
      example:
        addressLine1: 1234 Main St
        addressLine2: Apt 123
        addressLine3: Building 123
        city: San Francisco
        country: US
        state: CA
        zip: "94123"
      properties:
        addressLine1:
          description: The street address
          example: 1234 Main St
          type: string
        addressLine2:
          description: Address Line 2
          example: Apt 123
          type: string
        addressLine3:
          description: Address Line 3
          example: Building 123
          type: string
        city:
          description: Name of the City
          example: San Francisco
          type: string
        country:
          description: Name of the Country
          example: US
          type: string
        state:
          description: Name of the State/Province/Region
          example: CA
          type: string
        zip:
          description: Zip code
          example: "94123"
          type: string
      required:
      - addressLine1
      - city
      - country
      - state
      - zip
      type: object
    AgentCodeInterpreterConfiguration:
      example:
        allowedPackages:
        - pandas
        - numpy
        - matplotlib
        enabled: true
        provider: agentcore
        timeout: 60
      properties:
        allowedPackages:
          description: List of allowed Python packages
          example:
          - pandas
          - numpy
          - matplotlib
          items:
            example: Earum quo quis.
            type: string
          type: array
        enabled:
          default: false
          description: Enable code interpreter for the agent
          example: true
          type: boolean
        provider:
          default: agentcore
          description: Code interpreter provider
          example: agentcore
          type: string
        timeout:
          default: 60
          description: Code execution timeout in seconds
          example: 60
          format: int64
          type: integer
      type: object
    AgentConfiguration:
      example:
        codeInterpreter:
          allowedPackages:
          - pandas
          - numpy
          - matplotlib
          enabled: true
          provider: agentcore
          timeout: 60
        dockerfile: Dockerfile
        evaluations:
        - metrics:
          - relevance
          - helpfulness
          name: response-quality
          schedule: every 6 hours
        memory:
          enabled: true
        monitoring:
          enabled: true
        vectorStore:
          enabled: true
      properties:
        codeInterpreter:
          $ref: "#/components/schemas/AgentCodeInterpreterConfiguration"
        dockerfile:
          description: The Dockerfile path for the agent container
          example: Dockerfile
          type: string
        evaluations:
          description: Evaluation configurations for the agent
          example:
          - metrics:
            - relevance
            - helpfulness
            name: response-quality
            schedule: every 6 hours
          items:
            $ref: "#/components/schemas/AgentEvaluation"
          type: array
        memory:
          $ref: "#/components/schemas/AgentMemoryConfiguration"
        monitoring:
          $ref: "#/components/schemas/AgentMonitoringConfiguration"
        vectorStore:
          $ref: "#/components/schemas/AgentVectorStoreConfiguration"
      required:
      - codeInterpreter
      - dockerfile
      - evaluations
      - memory
      - monitoring
      - vectorStore
      type: object
    AgentEvaluation:
      example:
        metrics:
        - relevance
        - helpfulness
        name: response-quality
        schedule: every 6 hours
      properties:
        metrics:
          description: Metrics to evaluate
          example:
          - relevance
          - helpfulness
          items:
            example: Dolore delectus.
            type: string
          type: array
        name:
          description: Name of the evaluation
          example: response-quality
          type: string
        schedule:
          description: Evaluation schedule
          example: every 6 hours
          type: string
      required:
      - metrics
      - name
      - schedule
      type: object
    AgentMemoryConfiguration:
      example:
        enabled: false
      properties:
        enabled:
          default: false
          description: Enable memory store for agent context persistence
          example: false
          type: boolean
      type: object
    AgentMonitoringConfiguration:
      example:
        enabled: true
      properties:
        enabled:
          default: false
          description: Enable monitoring for the agent
          example: true
          type: boolean
      type: object
    AgentVectorStoreConfiguration:
      example:
        enabled: true
      properties:
        enabled:
          default: false
          description: Enable vector store for the agent
          example: false
          type: boolean
      type: object
    Amenity:
      example:
        Description: Ensures high availability across multiple zones.
        IsManaged: true
        Name: Prometheus
        Properties:
          Et architecto sequi qui ut.: Saepe saepe corrupti.
          Inventore ad sit.: Ea culpa velit rerum quibusdam adipisci nam.
          Sit iusto praesentium.: Quia enim omnis consequuntur rerum molestias eveniet.
        Type: HelmChart
      properties:
        Description:
          description: A description of the amenity.
          example: Ensures high availability across multiple zones.
          type: string
        IsManaged:
          description: Whether the amenity is managed by the system.
          example: true
          type: boolean
        Name:
          description: The name of the amenity.
          example: Prometheus
          type: string
        Properties:
          additionalProperties: true
          description: The properties of the amenity.
          example:
            Adipisci enim et libero aspernatur.: Repellat voluptas consequuntur.
            Maxime est possimus quisquam dignissimos porro vitae.: Possimus recusandae
              accusantium eveniet qui dolorem debitis.
            Minima molestias nihil.: Placeat et.
          type: object
        Type:
          description: The type of the amenity.
          example: HelmChart
          type: string
      type: object
    AutoScalingMetricSpec:
      example:
        metricEndpoint: http://localhost:9187/metrics
        metricLabelName: label
        metricLabelValue: value
        metricName: metric_name
      properties:
        metricEndpoint:
          description: The local host endpoint to supply prometheus metric
          example: http://localhost:9187/metrics
          type: string
        metricLabelName:
          description: The prometheus metric label name for scaling
          example: label
          type: string
        metricLabelValue:
          description: The prometheus metric label value for scaling
          example: value
          type: string
        metricName:
          description: The prometheus metric name for scaling
          example: metric_name
          type: string
      required:
      - metricEndpoint
      - metricLabelName
      - metricLabelValue
      - metricName
      type: object
    AutoscalingPolicy:
      description: Autoscaling policy for compute nodes
      example:
        idleMinutesBeforeScalingDown: 1
        idleThreshold: 1
        maxReplicas: "4"
        minReplicas: "1"
        overUtilizedMinutesBeforeScalingUp: 1
        overUtilizedThreshold: 1
        scalingMetric:
          metricEndpoint: http://localhost:9187/metrics
          metricLabelName: label
          metricLabelValue: value
          metricName: metric_name
      properties:
        idleMinutesBeforeScalingDown:
          default: 5
          description: Minutes before scaling down the compute nodes in idle state
          example: 1
          format: int64
          type: integer
        idleThreshold:
          default: 20
          description: Metric value below threshold will be considered to be idle
          example: 1
          format: int64
          type: integer
        maxReplicas:
          description: Maximum number of compute nodes to provision
          example: "4"
          type: string
        minReplicas:
          description: Minimum number of compute nodes to provision
          example: "1"
          type: string
        overUtilizedMinutesBeforeScalingUp:
          default: 5
          description: Minutes before scaling up the compute nodes in overUtilized
            state
          example: 1
          format: int64
          type: integer
        overUtilizedThreshold:
          default: 80
          description: Metric value beyond threshold will be considered to be overUtilized
          example: 1
          format: int64
          type: integer
        scalingMetric:
          $ref: "#/components/schemas/AutoScalingMetricSpec"
      required:
      - maxReplicas
      - minReplicas
      type: object
    BackendPortConfiguration:
      example:
        associatedResourceIDs:
        - r-12345678
        - r-abcdef12
        backendPort: 8080
        ingressPort: 1234
      properties:
        associatedResourceIDs:
          description: The IDs of the resource associated with the backend port
          example:
          - r-12345678
          - r-abcdef12
          items:
            description: ID of a resource
            example: Expedita pariatur quas.
            type: string
          type: array
        backendPort:
          description: The port to forward traffic to
          example: 8080
          format: int64
          type: integer
        ingressPort:
          description: The ingress port to configure on the load balancer
          example: 1234
          format: int64
          type: integer
      required:
      - associatedResourceIDs
      - backendPort
      - ingressPort
      type: object
    BackupConfiguration:
      example:
        backupPeriodInHours: 24
        backupRetentionInDays: 7
      properties:
        backupPeriodInHours:
          description: The period in hours to take backups
          example: 24
          format: int64
          type: integer
        backupRetentionInDays:
          description: The number of days to retain backups
          example: 7
          format: int64
          type: integer
      required:
      - backupPeriodInHours
      - backupRetentionInDays
      type: object
    BackupStatus:
      example:
        backupPeriodInHours: 2
        backupRetentionInDays: 7
        earliestRestoreTime: 2021-09-01T00:00:00Z
        lastBackupTime: 2021-09-01T00:00:00Z
      properties:
        backupPeriodInHours:
          description: The backup period in hours
          example: 2
          format: int64
          type: integer
        backupRetentionInDays:
          description: The backup retention in days
          example: 7
          format: int64
          type: integer
        earliestRestoreTime:
          description: The earliest restore time
          example: 2021-09-01T00:00:00Z
          type: string
        lastBackupTime:
          description: The last backup time
          example: 2021-09-01T00:00:00Z
          type: string
      required:
      - backupPeriodInHours
      - backupRetentionInDays
      type: object
    BillingProvider:
      example:
        balanceDueLink: https://billing.provider.com/balance-due. Only present when
          the billing provider is BRING_YOUR_OWN
        connectClientID: ca_1234567890
        logoURL: https://example.com/logo.png
        name: GovPay
        status: ENABLED | DISABLED | PENDING
        stripeCustomerID: cus_1234567890
        type: STRIPE
      properties:
        balanceDueLink:
          description: The URL to the balance due page
          example: https://billing.provider.com/balance-due. Only present when the
            billing provider is BRING_YOUR_OWN
          type: string
        connectClientID:
          description: The Stripe Connect Client ID associated with the billing provider.
            Only present when the billing provider is STRIPE
          example: ca_1234567890
          type: string
        logoURL:
          description: The URL of the logo for the billing provider. Only present
            when the billing provider is BRING_YOUR_OWN
          example: https://example.com/logo.png
          type: string
        name:
          description: A custom name for the billing provider. Only present when the
            billing provider is BRING_YOUR_OWN
          example: GovPay
          type: string
        status:
          description: The status of the billing provider
          example: ENABLED | DISABLED | PENDING
          type: string
        stripeCustomerID:
          description: The Stripe Customer ID associated with the billing provider.
            Only present when the billing provider is STRIPE
          example: cus_1234567890
          type: string
        type:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
      required:
      - status
      - type
      type: object
    BlobStorageConfiguration:
      example:
        GCSConfiguration: {}
        S3Configuration: {}
      properties:
        GCSConfiguration:
          example: {}
          type: object
        S3Configuration:
          example: {}
          type: object
      type: object
    BuildServiceFromComposeSpecRequest:
      example:
        configs:
          Eveniet aut sint in officiis.: Ipsum vel alias.
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        dryrun: true
        environment: dev
        environmentType: DEV
        fileContent: Vero rem a quam.
        forceCreateNewServicePlanVersion: true
        name: MySQL multi-writer service
        release: true
        releaseAsPreferred: true
        releaseVersionName: mysql
        secrets:
          Laudantium laboriosam minima repudiandae porro ut dolorem.: Facere itaque
            non qui cumque.
          Mollitia rerum voluptatem blanditiis.: Quo molestiae explicabo et nihil
            aut.
          Sint fuga.: Magni possimus eos.
        serviceLogoURL: http://lang.com/billy
        token: fi
      properties:
        configs:
          additionalProperties:
            example: Animi deleniti.
            type: string
          description: Configs for the service. Key is the compose spec name of the
            config and value is base64 encoded config content
          example:
            Est ipsum consequuntur odit doloremque voluptas.: Perspiciatis totam corporis
              modi.
            Excepturi et.: Eaque corporis quidem et cum beatae.
          type: object
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        dryrun:
          description: "If set to true, performs a dry run of the build operation\
            \ without making any changes"
          example: true
          type: boolean
        environment:
          description: The environment to build the service in
          example: dev
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        fileContent:
          description: Base64 encoded Compose Spec YAML in docker compose format
          example: Commodi excepturi fuga provident reiciendis.
          type: string
        forceCreateNewServicePlanVersion:
          description: Force create a new service plan version when the service is
            released
          example: true
          type: boolean
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        release:
          description: Release the service after building
          example: true
          type: boolean
        releaseAsPreferred:
          description: Release the service as preferred
          example: true
          type: boolean
        releaseVersionName:
          description: Release version name
          example: mysql
          type: string
        secrets:
          additionalProperties:
            example: Voluptatem delectus.
            type: string
          description: Secrets for the service. Key is the compose spec name of the
            secret and value is base64 encoded secret content
          example:
            Praesentium omnis ipsa.: Voluptate quam nihil libero quia et commodi.
          type: object
        serviceLogoURL:
          description: The logo for the service
          example: http://hellerluettgen.name/wilhelm
          format: uri
          type: string
        token:
          description: JWT token used to perform authorization
          example: m
          minLength: 1
          type: string
      required:
      - fileContent
      - name
      - token
      type: object
    BuildServiceFromComposeSpecRequest2:
      example:
        configs:
          Consequatur ducimus impedit.: Assumenda vitae vel.
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        dryrun: true
        environment: dev
        environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
        fileContent: Sit et porro.
        forceCreateNewServicePlanVersion: true
        name: MySQL multi-writer service
        release: true
        releaseAsPreferred: true
        releaseVersionName: mysql
        secrets:
          Soluta deleniti saepe quos.: Autem qui ab debitis omnis eos praesentium.
        serviceLogoURL: http://kovacek.org/aniya
      properties:
        configs:
          additionalProperties:
            example: Odit est soluta cumque vero et molestiae.
            type: string
          description: Configs for the service. Key is the compose spec name of the
            config and value is base64 encoded config content
          example:
            Eos rerum mollitia.: Omnis sequi qui.
          type: object
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        dryrun:
          description: "If set to true, performs a dry run of the build operation\
            \ without making any changes"
          example: true
          type: boolean
        environment:
          description: The environment to build the service in
          example: dev
          type: string
        environmentType:
          description: The type of the environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        fileContent:
          description: Base64 encoded Compose Spec YAML in docker compose format
          example: Eum rerum et ad delectus eos labore.
          type: string
        forceCreateNewServicePlanVersion:
          description: Force create a new service plan version when the service is
            released
          example: true
          type: boolean
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        release:
          description: Release the service after building
          example: true
          type: boolean
        releaseAsPreferred:
          description: Release the service as preferred
          example: true
          type: boolean
        releaseVersionName:
          description: Release version name
          example: mysql
          type: string
        secrets:
          additionalProperties:
            example: Praesentium explicabo sed.
            type: string
          description: Secrets for the service. Key is the compose spec name of the
            secret and value is base64 encoded secret content
          example:
            Inventore quaerat cumque nesciunt aliquid totam consequuntur.: Qui hic
              minima repellendus itaque voluptatem.
            Quia qui.: Debitis dolor.
          type: object
        serviceLogoURL:
          description: The logo for the service
          example: http://dickinsonkemmer.com/kareem.rath
          format: uri
          type: string
      required:
      - fileContent
      - name
      type: object
    BuildServiceFromComposeSpecResult:
      example:
        isNewServicePlanVersionCreated: true
        productTierID: pt-12345678
        serviceEnvironmentID: se-12345678
        serviceID: s-12345678
        undefinedResources:
          mysql: r-12345678
      properties:
        isNewServicePlanVersionCreated:
          description: Indicates if a new service plan version was created
          example: true
          type: boolean
        productTierID:
          description: ID of a Product Tier
          example: Dolorem ut aliquid impedit voluptas deserunt.
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        undefinedResources:
          additionalProperties:
            description: ID of a resource
            example: Sit aut vel soluta id sit.
            type: string
          description: Resources that appear in the service plan but were not defined
            in the spec. These resources were not processed during the build.
          example:
            mysql: r-12345678
          type: object
      required:
      - productTierID
      - serviceEnvironmentID
      - serviceID
      type: object
    BuildServiceFromServicePlanSpecRequest:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        dryrun: true
        environment: dev
        environmentType: DEV
        fileContent: Modi ullam sint est tempora officiis.
        forceCreateNewServicePlanVersion: true
        name: MySQL multi-writer service
        release: true
        releaseAsPreferred: true
        releaseVersionName: mysql
        serviceLogoURL: http://goyette.name/lenna.becker
        token: fjf
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        dryrun:
          description: "If set to true, performs a dry run of the build operation\
            \ without making any changes"
          example: true
          type: boolean
        environment:
          description: The environment to build the service in
          example: dev
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        fileContent:
          description: Base64 encoded Compose Spec YAML in service plan configuration
            format
          example: Dicta assumenda repellendus consequuntur.
          type: string
        forceCreateNewServicePlanVersion:
          description: Force create a new service plan version when the service is
            released
          example: true
          type: boolean
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        release:
          description: Release the service after building
          example: true
          type: boolean
        releaseAsPreferred:
          description: Release the service as preferred
          example: true
          type: boolean
        releaseVersionName:
          description: Release version name
          example: mysql
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: http://russel.net/armando_jewess
          format: uri
          type: string
        token:
          description: JWT token used to perform authorization
          example: hi
          minLength: 1
          type: string
      required:
      - fileContent
      - name
      - token
      type: object
    BuildServiceFromServicePlanSpecRequest2:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        dryrun: true
        environment: dev
        environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
        fileContent: Vel ducimus.
        forceCreateNewServicePlanVersion: true
        name: MySQL multi-writer service
        release: true
        releaseAsPreferred: true
        releaseVersionName: mysql
        serviceLogoURL: http://bahringer.info/jerod
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        dryrun:
          description: "If set to true, performs a dry run of the build operation\
            \ without making any changes"
          example: true
          type: boolean
        environment:
          description: The environment to build the service in
          example: dev
          type: string
        environmentType:
          description: The type of the environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        fileContent:
          description: Base64 encoded Compose Spec YAML in service plan configuration
            format
          example: Maiores distinctio quo earum nostrum dolor quia.
          type: string
        forceCreateNewServicePlanVersion:
          description: Force create a new service plan version when the service is
            released
          example: true
          type: boolean
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        release:
          description: Release the service after building
          example: true
          type: boolean
        releaseAsPreferred:
          description: Release the service as preferred
          example: true
          type: boolean
        releaseVersionName:
          description: Release version name
          example: mysql
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: http://cronin.net/daniela_jenkins
          format: uri
          type: string
      required:
      - fileContent
      - name
      type: object
    BuildServiceFromServicePlanSpecResult:
      example:
        isNewServicePlanVersionCreated: true
        productTierID: pt-12345678
        serviceEnvironmentID: se-12345678
        serviceID: s-12345678
        undefinedResources:
          mysql: r-12345678
      properties:
        isNewServicePlanVersionCreated:
          description: Indicates if a new service plan version was created
          example: true
          type: boolean
        productTierID:
          description: ID of a Product Tier
          example: Harum eum mollitia fuga corrupti aliquid.
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        undefinedResources:
          additionalProperties:
            description: ID of a resource
            example: Ipsum reiciendis.
            type: string
          description: Resources that appear in the service plan but were not defined
            in the spec. These resources were not processed during the build.
          example:
            mysql: r-12345678
          type: object
      required:
      - productTierID
      - serviceEnvironmentID
      - serviceID
      type: object
    CancelSubscriptionRequestRequest:
      example:
        id: subr-12345678
        token: fs
      properties:
        id:
          description: ID of a Subscription Request
          example: Ad vero possimus velit at.
          type: string
        token:
          description: JWT token used to perform authorization
          example: mea
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    Change:
      example:
        attributes:
          resourceId: r-12345678
        changeType: PENDING_NEW
        name: Customer metrics
      properties:
        attributes:
          additionalProperties:
            example: Odit veniam id laborum repellendus facere quibusdam.
            type: string
          description: Additional setting/component attributes
          example:
            resourceId: r-12345678
          type: object
        changeType:
          description: State of the configuration change
          example: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
          type: string
        name:
          description: The name of the setting/component that changed
          example: Customer metrics
          type: string
      required:
      - attributes
      - changeType
      - name
      type: object
    ChangePasswordRequest:
      example:
        email: abc@gmail.com
        password: password
        token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
        token:
          example: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
          minLength: 1
          type: string
      required:
      - email
      - password
      - token
      type: object
    ChangePlanRequest:
      example:
        planName: STARTER
        token: v2i
      properties:
        planName:
          description: This parameter is used to select the appropriate Product Plan
          example: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
          type: string
        token:
          description: JWT token used to perform authorization
          example: "5"
          minLength: 1
          type: string
      required:
      - planName
      - token
      type: object
    ChangePlanRequest2:
      example:
        planName: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
      properties:
        planName:
          description: The name of the plan this user is changing to
          example: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
          type: string
      required:
      - planName
      type: object
    ChangeSet:
      example:
        categorizedResourceChanges:
          Deserunt et sed.:
            changes:
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            status: PENDING_UPDATE
        imageConfigChanges:
          changeState: PENDING_NEW
          imageConfigId: imgc-12345678
          imageName: mysql
        infraConfigChanges:
          changeState: PENDING_NEW
          infraConfigId: ic-12345678
          name: MySQL Writer Infra Config
        overallResourceStatus: PENDING_UPDATE
        productTierFeatureChanges: PENDING_UPDATE
        resourceChanges: PENDING_DELETE
        resourceName: Beatae et aliquid.
      properties:
        categorizedResourceChanges:
          additionalProperties:
            $ref: "#/components/schemas/ChangeSummary"
          description: "Summary of all changes within a resource for each category\
            \ (ie. image, infra, product tier feature, etc.)"
          example:
            Deserunt et sed.:
              changes:
              - attributes:
                  resourceId: r-12345678
                changeType: PENDING_NEW
                name: Customer metrics
              - attributes:
                  resourceId: r-12345678
                changeType: PENDING_NEW
                name: Customer metrics
              - attributes:
                  resourceId: r-12345678
                changeType: PENDING_NEW
                name: Customer metrics
              - attributes:
                  resourceId: r-12345678
                changeType: PENDING_NEW
                name: Customer metrics
              status: PENDING_UPDATE
          type: object
        imageConfigChanges:
          $ref: "#/components/schemas/ImageConfigChangeSummary"
        infraConfigChanges:
          $ref: "#/components/schemas/InfraConfigChangeSummary"
        overallResourceStatus:
          description: Summary status of the changes
          example: NO_CHANGE|PENDING_CHANGE|NONE
          type: string
        productTierFeatureChanges:
          description: State of the configuration change
          example: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
          type: string
        resourceChanges:
          description: State of the configuration change
          example: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
          type: string
        resourceName:
          description: The name of the resource
          example: Qui quia error tenetur aut.
          type: string
      required:
      - categorizedResourceChanges
      - overallResourceStatus
      type: object
    ChangeSummary:
      example:
        changes:
        - attributes:
            resourceId: r-12345678
          changeType: PENDING_NEW
          name: Customer metrics
        - attributes:
            resourceId: r-12345678
          changeType: PENDING_NEW
          name: Customer metrics
        status: PENDING_UPDATE
      properties:
        changes:
          description: List of individual changes
          example:
          - attributes:
              resourceId: r-12345678
            changeType: PENDING_NEW
            name: Customer metrics
          - attributes:
              resourceId: r-12345678
            changeType: PENDING_NEW
            name: Customer metrics
          items:
            $ref: "#/components/schemas/Change"
          type: array
        status:
          description: Summary status of the changes
          example: NO_CHANGE|PENDING_CHANGE|NONE
          type: string
      required:
      - changes
      - status
      type: object
    ChartValuesRef:
      example:
        name: my-layer
        scope:
          '{{ $sys.cloudProviderName }}': aws
        values:
          global:
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: omnistrate.com/managed-by
                      operator: In
                      values:
                      - omnistrate
        valuesFile:
          gitConfiguration:
            accessToken: my-token
            commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
            referenceName: tags/v1.0.0
            repositoryUrl: https://github.com/username/myrepo
            userName: my-user
          path: helm/values/production.yaml
      properties:
        name:
          description: The name of the layer
          example: my-layer
          type: string
        scope:
          additionalProperties:
            example: Quis atque quas perspiciatis nobis.
            type: string
          description: "Scope condition for applying these chart values (can be used\
            \ with either values or valuesFile). Key is the parameter name which supports\
            \ template expressions like '{{ $sys.cloudProviderName }}', value is the\
            \ expected value. "
          example:
            '{{ $sys.cloudProviderName }}': aws
          type: object
        values:
          description: Inline chart values as a map (mutually exclusive with valuesFile)
          example:
            global:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: omnistrate.com/managed-by
                        operator: In
                        values:
                        - omnistrate
        valuesFile:
          $ref: "#/components/schemas/ValuesFile"
      type: object
    CheckIfContainerImageAccessibleRequest:
      example:
        image: library/mysql:5.7
        imageRegistry: docker.io
        password: password
        token: 2t
        username: username
      properties:
        image:
          description: Name of the image along with the tag. Include the repository
            name if the image is not from the official repository
          example: library/mysql:5.7
          type: string
        imageRegistry:
          description: Registry where the image is stored
          example: docker.io
          type: string
        password:
          description: Password to access the image registry
          example: password
          type: string
        token:
          description: JWT token used to perform authorization
          example: g
          minLength: 1
          type: string
        username:
          description: Username to access the image registry
          example: username
          type: string
      required:
      - image
      - imageRegistry
      - token
      type: object
    CheckIfContainerImageAccessibleResult:
      example:
        errorMsg: Magnam ut cupiditate labore saepe quod.
        imageAccessible: false
      properties:
        errorMsg:
          description: Error message if the image is not accessible
          example: Suscipit necessitatibus incidunt cum ut nihil.
          type: string
        imageAccessible:
          description: Indicates if the image is accessible
          example: false
          type: boolean
      required:
      - imageAccessible
      type: object
    CloudProviderHealthSummary:
      example:
        cloudProvider: aws
        deployingInstances: 5833092438744347296
        healthyInstances: 1961521559880952891
        message: Cloud provider is healthy
        regionalHealthSummary:
          Eos ab repudiandae error tenetur.:
            deployingInstances: 79145319162971650
            deploymentCellHealthSummary:
              Adipisci dolorem magni repellat eaque et corporis.:
                deployingInstances: 2815081149714630162
                healthyInstances: 4560033033971347510
                hostClusterID: hc-12345678
                message: Cell is healthy
                status: Healthy
                totalInstances: 2958002397655630058
                unhealthyInstances: 862492030087821158
                unknownInstances: 7745684624529770236
            healthyInstances: 8592109167329660831
            message: Region is healthy
            region: us-east-1
            status: Healthy
            totalInstances: 4103756041245898708
            unhealthyInstances: 6681312086099148734
            unknownInstances: 6563968201280819844
        status: Healthy
        totalInstances: 9079293623805142571
        unhealthyInstances: 256658631837670936
        unknownInstances: 3427636814445850589
      properties:
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        deployingInstances:
          description: The number of instances currently deploying
          example: 4226019728802557438
          format: int64
          type: integer
        healthyInstances:
          description: The number of healthy instances in the cloud provider
          example: 5794258808093273953
          format: int64
          type: integer
        message:
          description: The status message
          example: Cloud provider is healthy
          type: string
        regionalHealthSummary:
          additionalProperties:
            $ref: "#/components/schemas/RegionalHealthSummary"
          description: The summary of health by region
          example:
            Nulla sint distinctio veritatis quas mollitia.:
              deployingInstances: 79145319162971650
              deploymentCellHealthSummary:
                Adipisci dolorem magni repellat eaque et corporis.:
                  deployingInstances: 2815081149714630162
                  healthyInstances: 4560033033971347510
                  hostClusterID: hc-12345678
                  message: Cell is healthy
                  status: Healthy
                  totalInstances: 2958002397655630058
                  unhealthyInstances: 862492030087821158
                  unknownInstances: 7745684624529770236
              healthyInstances: 8592109167329660831
              message: Region is healthy
              region: us-east-1
              status: Healthy
              totalInstances: 4103756041245898708
              unhealthyInstances: 6681312086099148734
              unknownInstances: 6563968201280819844
            Possimus quod et est.:
              deployingInstances: 79145319162971650
              deploymentCellHealthSummary:
                Adipisci dolorem magni repellat eaque et corporis.:
                  deployingInstances: 2815081149714630162
                  healthyInstances: 4560033033971347510
                  hostClusterID: hc-12345678
                  message: Cell is healthy
                  status: Healthy
                  totalInstances: 2958002397655630058
                  unhealthyInstances: 862492030087821158
                  unknownInstances: 7745684624529770236
              healthyInstances: 8592109167329660831
              message: Region is healthy
              region: us-east-1
              status: Healthy
              totalInstances: 4103756041245898708
              unhealthyInstances: 6681312086099148734
              unknownInstances: 6563968201280819844
          type: object
        status:
          description: The status of the cloud provider
          example: Healthy
          type: string
        totalInstances:
          description: The total number of instances in the cloud provider
          example: 8750068704550465757
          format: int64
          type: integer
        unhealthyInstances:
          description: The number of unhealthy instances in the cloud provider
          example: 1467998826816057513
          format: int64
          type: integer
        unknownInstances:
          description: The number of instances with unknown status
          example: 789068139016437993
          format: int64
          type: integer
      required:
      - cloudProvider
      - deployingInstances
      - healthyInstances
      - message
      - regionalHealthSummary
      - status
      - totalInstances
      - unhealthyInstances
      type: object
    CloudProvidersConfigReadiness:
      additionalProperties:
        $ref: "#/components/schemas/PerCloudProviderConfigReadiness"
      description: The readiness of the cloud providers configurations
      example:
        aws:
          resourceA: missing terraform configuration
          resourceB: missing cloudformation configuration
      type: object
    ClusterEndpoint:
      example:
        endpoint: https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
        healthStatus: HEALTHY
        networkingType: PUBLIC
        openPorts:
        - 30000
        - 30001
        primary: true
      properties:
        endpoint:
          default: ""
          description: The endpoint
          example: https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
          type: string
        healthStatus:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        networkingType:
          description: The networking type for this resource
          example: PUBLIC
          type: string
        openPorts:
          description: The open ports
          example:
          - 30000
          - 30001
          items:
            example: 356849031607817306
            format: int64
            type: integer
          type: array
        primary:
          default: false
          description: Whether this is the primary endpoint
          example: true
          type: boolean
      type: object
    CompleteOAuthConnectionRequest:
      example:
        code: ac_12345678
        state: "12345678"
        token: sc
      properties:
        code:
          description: Authorization code from Stripe
          example: ac_12345678
          type: string
        state:
          description: Random string used on the authorize URL
          example: "12345678"
          type: string
        token:
          description: JWT token used to perform authorization
          example: "766"
          minLength: 1
          type: string
      required:
      - token
      type: object
    CompleteOAuthConnectionRequest2:
      example:
        code: ac_12345678
        state: "12345678"
      properties:
        code:
          description: Authorization code from Stripe
          example: ac_12345678
          type: string
        state:
          description: Random string used on the authorize URL
          example: "12345678"
          type: string
      type: object
    CompleteOAuthConnectionResult:
      example:
        stripeUserID: acct_12345678
      properties:
        stripeUserID:
          description: Stripe User ID
          example: acct_12345678
          type: string
      type: object
    ComputeInstanceTypeConfigOverride:
      example:
        acceleratorConfiguration:
          count: 1
          type: nvidia-tesla-t4
        instanceLifeCycleType: Spot|OnDemand
        labels:
          env: prod
        rootVolumeSizeGi: 10
        rootVolumeSizeGiAPIParam: $var.root_volume_size_gi
        taints:
        - effect: NoSchedule
          key: env
          value: prod
        warmPoolConfiguration:
          minimumNodesInPool: 1
      properties:
        acceleratorConfiguration:
          $ref: "#/components/schemas/AcceleratorConfiguration"
        instanceLifeCycleType:
          description: The instance life cycle type for this compute instance type
            config
          example: Spot|OnDemand
          type: string
        labels:
          additionalProperties:
            example: Sit corrupti et voluptatem dolores dolor.
            type: string
          description: Labels for the compute instance type config
          example:
            env: prod
          type: object
        rootVolumeSizeGi:
          description: Size of the root volume in Gi
          example: 10
          format: int64
          type: integer
        rootVolumeSizeGiAPIParam:
          description: Size of the root volume in Gi as a string
          example: $var.root_volume_size_gi
          type: string
        taints:
          description: Taints for the compute instance type config
          example:
          - effect: NoSchedule
            key: env
            value: prod
          items:
            $ref: "#/components/schemas/TaintConfiguration"
          type: array
        warmPoolConfiguration:
          $ref: "#/components/schemas/WarmPoolConfiguration"
      type: object
    ConsumptionServiceAuthRequest:
      example:
        password: Aut rem aut eveniet tempora.
        username: Accusamus odit nisi qui.
      properties:
        password:
          example: Aliquid ipsam quis voluptas deleniti autem est.
          type: string
        username:
          example: Sint ex ut non illum.
          type: string
      required:
      - password
      - username
      type: object
    ConsumptionServiceAuthResult:
      example:
        token: q1a
      properties:
        token:
          description: JWT token used to perform authorization
          example: yxe
          minLength: 1
          type: string
      required:
      - token
      type: object
    ContactusRequest:
      example:
        company: ABC
        email: abc@gmail.com
        message: this is a test
        name: John Doe
      properties:
        company:
          example: ABC
          minLength: 1
          type: string
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        message:
          example: this is a test
          minLength: 1
          type: string
        name:
          example: John Doe
          minLength: 1
          type: string
      required:
      - company
      - email
      - message
      - name
      type: object
    ContainerImage:
      example:
        imageName: postgres
        imageTag: "16"
      properties:
        imageName:
          description: The name of the container image
          example: postgres
          type: string
        imageTag:
          description: The tag of the container image
          example: "16"
          type: string
      required:
      - imageName
      - imageTag
      type: object
    ContainerImageRegistryCredentials:
      example:
        password: my-password
        username: my-user
      properties:
        password:
          description: The password to authenticate with the container image registry
          example: my-password
          type: string
        username:
          description: The username to authenticate with the container image registry
          example: my-user
          type: string
      required:
      - password
      - username
      type: object
    ContainerImagesRegistry:
      example:
        credentials:
          password: my-password
          username: my-user
        registryURL: https://my-registry.com
        repositoryName: library
      properties:
        credentials:
          $ref: "#/components/schemas/ContainerImageRegistryCredentials"
        registryURL:
          description: "The URL of the container image registry (if not provided,\
            \ defaults to the DockerHub)"
          example: https://my-registry.com
          type: string
        repositoryName:
          description: The name of the container image repository
          example: library
          type: string
      required:
      - registryURL
      - repositoryName
      type: object
    ContainerImagesRegistryCopyConfiguration:
      example:
        images:
        - imageName: postgres
          imageTag: "16"
        - imageName: postgres
          imageTag: "16"
        pullSource:
          credentials:
            password: my-password
            username: my-user
          registryURL: https://my-registry.com
          repositoryName: library
        pushTarget:
          credentials:
            password: my-password
            username: my-user
          registryURL: https://my-registry.com
          repositoryName: library
      properties:
        images:
          description: The list of container images to copy from source to target
          example:
          - imageName: postgres
            imageTag: "16"
          - imageName: postgres
            imageTag: "16"
          - imageName: postgres
            imageTag: "16"
          - imageName: postgres
            imageTag: "16"
          items:
            $ref: "#/components/schemas/ContainerImage"
          type: array
        pullSource:
          $ref: "#/components/schemas/ContainerImagesRegistry"
        pushTarget:
          $ref: "#/components/schemas/ContainerImagesRegistry"
      type: object
    CopyProductTierRequest:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        billingProductID: abc123
        description: A premium product tier
        documentation: Any documentation
        exportUsageMetering: true
        exportUsageMeteringConfig:
          GCS:
            GCSBucketName: my_billing_bucket_name
          S3:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
            S3BucketRegion: us-east-1
        gcpRegions:
        - us-central1
        maxNumberOfInstances: 5
        name: Premium
        planDescription: A premium plan
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Replica hours:
            amount: 0.001
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        pricing:
          price1: value1
        privateRegions:
        - n/a
        serviceId: s-12345678
        serviceModelId: sm-12345678
        sourceId: pt-12345678
        support: Any support
        targetTierType: OMNISTRATE_DEDICATED_TENANCY
        token: 8ha
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Quam eum nihil libero velit.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this product tier is available on
          example:
          - northcentralus
          items:
            example: Repellendus qui qui nihil possimus.
            type: string
          type: array
        billingProductID:
          description: Optional billing product ID for tax purposes
          example: abc123
          type: string
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        exportUsageMetering:
          description: Export usage metering data
          example: true
          type: boolean
        exportUsageMeteringConfig:
          additionalProperties: true
          description: Export usage metering data configuration
          example:
            GCS:
              GCSBucketName: my_billing_bucket_name
            S3:
              S3BucketArn: arn:aws:s3:::my_billing_bucket_name
              S3BucketRegion: us-east-1
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Deleniti blanditiis ratione non iusto.
            type: string
          type: array
        maxNumberOfInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricePerUnit:
          additionalProperties: true
          description: Price per unit.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Replica hours:
              amount: 0.001
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        pricing:
          description: Pricing
          example:
            price1: value1
        privateRegions:
          description: The Private cloud regions that this product tier is available
            on
          example:
          - n/a
          items:
            example: Consectetur sunt velit placeat.
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Quis quia ut sit excepturi temporibus.
          type: string
        sourceId:
          description: ID of a Product Tier
          example: Asperiores incidunt.
          type: string
        support:
          description: Support
          example: Any support
          type: string
        targetTierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        token:
          description: JWT token used to perform authorization
          example: i
          minLength: 1
          type: string
      required:
      - description
      - name
      - serviceId
      - serviceModelId
      - sourceId
      - token
      type: object
    CopyProductTierRequest2:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        billingProductID: abc123
        description: A premium product tier
        documentation: Any documentation
        exportUsageMetering: true
        exportUsageMeteringConfig:
          GCS:
            GCSBucketName: my_billing_bucket_name
          S3:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
            S3BucketRegion: us-east-1
        gcpRegions:
        - us-central1
        maxNumberOfInstances: 5
        name: Premium
        planDescription: A premium plan
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Replica hours:
            amount: 0.001
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        pricing:
          price1: value1
        privateRegions:
        - n/a
        serviceModelId: Qui vel aspernatur explicabo nostrum expedita.
        support: Any support
        targetTierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Facilis consequuntur.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this product tier is available on
          example:
          - northcentralus
          items:
            example: Nemo veritatis vitae dolores.
            type: string
          type: array
        billingProductID:
          description: Optional billing product ID for tax purposes
          example: abc123
          type: string
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        exportUsageMetering:
          description: Export usage metering data
          example: true
          type: boolean
        exportUsageMeteringConfig:
          additionalProperties: true
          description: Export usage metering data configuration
          example:
            GCS:
              GCSBucketName: my_billing_bucket_name
            S3:
              S3BucketArn: arn:aws:s3:::my_billing_bucket_name
              S3BucketRegion: us-east-1
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Magnam facere enim pariatur maxime.
            type: string
          type: array
        maxNumberOfInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricePerUnit:
          additionalProperties: true
          description: Price per unit.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Replica hours:
              amount: 0.001
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        pricing:
          description: Pricing
          example:
            price1: value1
        privateRegions:
          description: The Private cloud regions that this product tier is available
            on
          example:
          - n/a
          items:
            example: Expedita et quas.
            type: string
          type: array
        serviceModelId:
          description: Service model ID
          example: Laboriosam sed quaerat.
          type: string
        support:
          description: Support
          example: Any support
          type: string
        targetTierType:
          description: Tier type
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
      required:
      - description
      - name
      - serviceModelId
      type: object
    CopyResourceInstanceSnapshotRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        sourceSnapshotId: instance-ss-abcd1234
        subscriptionId: sub-abcd1234
        targetRegion: us-west-2
        token: l
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Id autem mollitia cupiditate.
          type: string
        sourceSnapshotId:
          description: ID of a Resource Instance Snapshot
          example: Ea vel provident labore.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        targetRegion:
          description: The target region to copy the snapshot to
          example: us-west-2
          type: string
        token:
          description: JWT token used to perform authorization
          example: wr
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - targetRegion
      - token
      type: object
    CopyResourceInstanceSnapshotRequest2:
      example:
        sourceSnapshotId: Sint molestias cumque.
        targetRegion: us-west-2
      properties:
        sourceSnapshotId:
          description: The source snapshot ID
          example: Quia alias dolorem et consequuntur.
          type: string
        targetRegion:
          description: The target region to copy the snapshot to
          example: us-west-2
          type: string
      required:
      - targetRegion
      type: object
    CopyResourceInstanceSnapshotResponseBody:
      example:
        snapshotId: Non et dolores officiis.
      properties:
        snapshotId:
          description: The new snapshot ID created as a result of the copy operation
          example: Voluptatem nulla ipsa tenetur commodi.
          type: string
      required:
      - snapshotId
      type: object
    CopyServiceModelRequest:
      example:
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        features:
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        name: MySQL multi-writer service hosted model
        serviceId: s-12345678
        sourceId: sm-12345678
        targetServiceModelType: CUSTOMER_HOSTED
        targetTierType: OMNISTRATE_DEDICATED_TENANCY
        token: c57
      properties:
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            description: ID of an Account Config
            example: Et perspiciatis quia dignissimos magni debitis.
            type: string
          type: array
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        features:
          description: Enabled service model features
          example:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          items:
            $ref: "#/components/schemas/ServiceModelFeatureDetail"
          type: array
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceId:
          description: ID of a Service Model
          example: Vitae impedit.
          type: string
        targetServiceModelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        targetTierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        token:
          description: JWT token used to perform authorization
          example: 9c
          minLength: 1
          type: string
      required:
      - description
      - name
      - serviceId
      - sourceId
      - targetServiceModelType
      - token
      type: object
    CopyServiceModelRequest2:
      example:
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        features:
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        name: MySQL multi-writer service hosted model
        targetServiceModelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
        targetTierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
      properties:
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            example: A consequatur sed reiciendis modi illo.
            type: string
          type: array
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        features:
          description: Enabled service model features
          example:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          items:
            $ref: "#/components/schemas/ServiceModelFeatureDetail"
          type: array
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        targetServiceModelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        targetTierType:
          description: Target product tier type
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
      required:
      - description
      - name
      - targetServiceModelType
      type: object
    CreateAccountConfigRequest:
      description: Account configuration including the role required to access
      example:
        awsAccessKey: Et qui ut neque esse.
        awsAccountID: "123456789012"
        awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
        awsSecretKey: Voluptates beatae ipsam omnis esse quaerat cumque.
        azureSubscriptionID: 12345678-1234-1234-1234-123456789012
        azureTenantID: 12345678-1234-1234-1234-123456789012
        byoaInstanceID: instance-12345678
        cloudProviderId: infra-12345678
        description: An AWS account hosting multiple dev environments
        gcpProjectID: my-project
        gcpProjectNumber: "123456789012"
        gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
        gcpServiceAccountKey: Accusamus tenetur non omnis placeat.
        name: Dev AWS account
        ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
        ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
        token: zc
      properties:
        awsAccessKey:
          description: The AWS access key
          example: Perferendis dolores voluptate ut.
          type: string
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        awsBootstrapRoleARN:
          description: The security role ARN or service account ARN that grants access
            to operate the infra
          example: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          type: string
        awsSecretKey:
          description: The AWS secret key
          example: Earum quasi qui reiciendis praesentium placeat.
          type: string
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        azureTenantID:
          description: The Azure tenant ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        byoaInstanceID:
          description: The BYOA instance ID that this account config is tied to
          example: instance-12345678
          type: string
        cloudProviderId:
          description: ID of an CloudProvider
          example: Rerum et expedita.
          type: string
        description:
          description: The description for the account
          example: An AWS account hosting multiple dev environments
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        gcpProjectNumber:
          description: The GCP project number
          example: "123456789012"
          type: string
        gcpServiceAccountEmail:
          description: The GCP service account email
          example: bootstrap@my-project.iam.gserviceaccount.com
          type: string
        gcpServiceAccountKey:
          description: The GCP service account key
          example: Sit provident impedit harum laudantium autem laborum.
          type: string
        name:
          description: The name of the account
          example: Dev AWS account
          type: string
        ociDomainID:
          description: The Domain OCID for Oracle Cloud Infrastructure
          example: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          type: string
        ociTenancyID:
          description: The Tenancy OCID for Oracle Cloud Infrastructure
          example: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          type: string
        token:
          description: JWT token used to perform authorization
          example: 05u
          minLength: 1
          type: string
      required:
      - cloudProviderId
      - description
      - name
      - token
      type: object
    CreateAccountConfigRequest2:
      example:
        awsAccessKey: Et atque inventore consectetur.
        awsAccountID: "123456789012"
        awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
        awsSecretKey: Maiores minus et autem dolores voluptatem.
        azureSubscriptionID: 12345678-1234-1234-1234-123456789012
        azureTenantID: 12345678-1234-1234-1234-123456789012
        byoaInstanceID: instance-12345678
        cloudProviderId: Et quibusdam quia ut eveniet velit id.
        description: An AWS account hosting multiple dev environments
        gcpProjectID: my-project
        gcpProjectNumber: "123456789012"
        gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
        gcpServiceAccountKey: Eaque possimus qui.
        name: Dev AWS account
        ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
        ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
      properties:
        awsAccessKey:
          description: The AWS access key
          example: Voluptatum aut voluptatem.
          type: string
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        awsBootstrapRoleARN:
          description: The security role ARN or service account ARN that grants access
            to operate the infra
          example: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          type: string
        awsSecretKey:
          description: The AWS secret key
          example: Voluptate sint corrupti consequatur perferendis placeat ab.
          type: string
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        azureTenantID:
          description: The Azure tenant ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        byoaInstanceID:
          description: The BYOA instance ID that this account config is tied to
          example: instance-12345678
          type: string
        cloudProviderId:
          description: Cloud Provider ID to operate on
          example: Cumque voluptatibus at voluptatum.
          type: string
        description:
          description: The description for the account
          example: An AWS account hosting multiple dev environments
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        gcpProjectNumber:
          description: The GCP project number
          example: "123456789012"
          type: string
        gcpServiceAccountEmail:
          description: The GCP service account email
          example: bootstrap@my-project.iam.gserviceaccount.com
          type: string
        gcpServiceAccountKey:
          description: The GCP service account key
          example: Qui quos nihil tenetur eveniet magnam.
          type: string
        name:
          description: The name of the account
          example: Dev AWS account
          type: string
        ociDomainID:
          description: The Domain OCID for Oracle Cloud Infrastructure
          example: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          type: string
        ociTenancyID:
          description: The Tenancy OCID for Oracle Cloud Infrastructure
          example: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          type: string
      required:
      - cloudProviderId
      - description
      - name
      type: object
    CreateComputeConfigRequest:
      example:
        autoscalingPolicy:
          maxReplicas: 4
          minReplicas: 1
        cpuArchitecture: X86_64|ARM64
        description: my compute config description
        name: my compute config
        replicaCount: "3"
        resources:
          limits:
            cpu: "1"
            memory: 500Mi
          requests:
            cpu: "0.5"
            memory: 200Mi
        rootVolumeSizeGi: 10
        serviceId: s-12345678
        token: b
        warmPoolConfiguration:
          minimumNodesInPool: 1
      properties:
        autoscalingPolicy:
          $ref: "#/components/schemas/AutoscalingPolicy"
        cpuArchitecture:
          description: Processor architecture
          example: X86_64|ARM64
          type: string
        description:
          description: Description of the compute config
          example: my compute config description
          minLength: 1
          type: string
        name:
          description: Name of the compute config
          example: my compute config
          minLength: 1
          type: string
        replicaCount:
          description: Number of replicas to provision for this logical pool of nodes
            per instance of the resource
          example: "3"
          type: string
        resources:
          $ref: "#/components/schemas/ResourceSpec"
        rootVolumeSizeGi:
          description: Size of the root volume in Gi
          example: 10
          format: int64
          type: integer
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: h
          minLength: 1
          type: string
        warmPoolConfiguration:
          $ref: "#/components/schemas/WarmPoolConfiguration"
      required:
      - description
      - name
      - serviceId
      - token
      type: object
    CreateComputeConfigRequest2:
      example:
        autoscalingPolicy:
          maxReplicas: 4
          minReplicas: 1
        cpuArchitecture: X86_64|ARM64
        description: my compute config description
        name: my compute config
        replicaCount: "3"
        resources:
          limits:
            cpu: "1"
            memory: 500Mi
          requests:
            cpu: "0.5"
            memory: 200Mi
        rootVolumeSizeGi: 10
        warmPoolConfiguration:
          minimumNodesInPool: 1
      properties:
        autoscalingPolicy:
          $ref: "#/components/schemas/AutoscalingPolicy"
        cpuArchitecture:
          description: Processor architecture
          example: X86_64|ARM64
          type: string
        description:
          description: Description of the compute config
          example: my compute config description
          minLength: 1
          type: string
        name:
          description: Name of the compute config
          example: my compute config
          minLength: 1
          type: string
        replicaCount:
          description: Number of replicas to provision for this logical pool of nodes
            per instance of the resource
          example: "3"
          type: string
        resources:
          $ref: "#/components/schemas/ResourceSpec"
        rootVolumeSizeGi:
          description: Size of the root volume in Gi
          example: 10
          format: int64
          type: integer
        warmPoolConfiguration:
          $ref: "#/components/schemas/WarmPoolConfiguration"
      required:
      - description
      - name
      type: object
    CreateCustomDomainRequest:
      description: Custom domain including the role required to access
      example:
        customDomain: mydomain.dev
        description: Description of the domain
        name: Dev domain
        route53Configuration:
          awsAccountID: "123456789012"
        token: e6
      properties:
        customDomain:
          description: The root domain of the domain to use as suffix
          example: mydomain.dev
          type: string
        description:
          description: The description for the domain
          example: Description of the domain
          type: string
        name:
          description: The name of the custom domain
          example: Dev domain
          type: string
        route53Configuration:
          $ref: "#/components/schemas/Route53Configuration"
        token:
          description: JWT token used to perform authorization
          example: dv6
          minLength: 1
          type: string
      required:
      - customDomain
      - description
      - name
      - route53Configuration
      - token
      type: object
    CreateCustomDomainRequest2:
      example:
        customDomain: mydomain.dev
        description: Description of the domain
        name: Dev domain
        route53Configuration:
          awsAccountID: "123456789012"
      properties:
        customDomain:
          description: The root domain of the domain to use as suffix
          example: mydomain.dev
          type: string
        description:
          description: The description for the domain
          example: Description of the domain
          type: string
        name:
          description: The name of the custom domain
          example: Dev domain
          type: string
        route53Configuration:
          $ref: "#/components/schemas/Route53Configuration"
      required:
      - customDomain
      - description
      - name
      - route53Configuration
      type: object
    CreateCustomNetworkRequest:
      example:
        cidr: 10.0.0.0/16
        cloudProviderName: aws
        cloudProviderRegion: us-east-1
        name: Prod us-east-1
        networkFeaturesConfiguration:
          isPrivateLinkEnabled: true
        token: cp
      properties:
        cidr:
          default: 10.0.0.0/16
          description: CIDR block for the network
          example: 10.0.0.0/16
          format: cidr
          type: string
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        cloudProviderRegion:
          description: The region of the cloud provider that the instance is running
            in.
          example: us-east-1
          type: string
        name:
          description: User friendly network name to help distinguish networks with
            same CIDRs
          example: Prod us-east-1
          type: string
        networkFeaturesConfiguration:
          $ref: "#/components/schemas/NetworkFeaturesConfiguration"
        token:
          description: JWT token used to perform authorization
          example: xyg
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - cloudProviderRegion
      - token
      type: object
    CreateCustomNetworkRequest2:
      example:
        cidr: 10.0.0.0/16
        cloudProviderName: aws|azure|gcp|all
        cloudProviderRegion: us-east-1
        name: Prod us-east-1
        networkFeaturesConfiguration:
          isPrivateLinkEnabled: true
      properties:
        cidr:
          default: 10.0.0.0/16
          description: CIDR block for the network
          example: 10.0.0.0/16
          format: cidr
          type: string
        cloudProviderName:
          description: The name of the cloud provider that the instance is running
            on.
          example: aws|azure|gcp|all
          type: string
        cloudProviderRegion:
          description: The region of the cloud provider that the instance is running
            in.
          example: us-east-1
          type: string
        name:
          description: User friendly network name to help distinguish networks with
            same CIDRs
          example: Prod us-east-1
          type: string
        networkFeaturesConfiguration:
          $ref: "#/components/schemas/NetworkFeaturesConfiguration"
      required:
      - cloudProviderName
      - cloudProviderRegion
      type: object
    CreateDeploymentConfigRequest:
      example:
        description: A production deployment config
        infraRollConfiguration:
          infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
          maximumNumberOfResourceInstancesPerBatch: 1
          maximumUnavailableReplicas: 1
        name: Production
        rolloutPriorityList:
        - region-12345678
        - region-abcd1234
        - region-3c3c3c3c
        token: "691"
      properties:
        description:
          description: A brief description of the deployment config
          example: A production deployment config
          type: string
        infraRollConfiguration:
          $ref: "#/components/schemas/InfraRollConfiguration"
        name:
          description: Name of the deployment config
          example: Production
          type: string
        rolloutPriorityList:
          example:
          - region-12345678
          - region-abcd1234
          - region-3c3c3c3c
          items:
            description: ID of a Region
            example: Delectus est.
            type: string
          type: array
        token:
          description: JWT token used to perform authorization
          example: 6g
          minLength: 1
          type: string
      required:
      - description
      - name
      - token
      type: object
    CreateDeploymentConfigRequest2:
      example:
        description: A production deployment config
        infraRollConfiguration:
          infraRolloutStrategy: APPLY_IMMEDIATELY
          maximumNumberOfResourceInstancesPerBatch: 1
          maximumUnavailableReplicas: 1
        name: Production
        rolloutPriorityList:
        - region-12345678
        - region-abcd1234
        - region-3c3c3c3c
      properties:
        description:
          description: A brief description of the deployment config
          example: A production deployment config
          type: string
        infraRollConfiguration:
          $ref: "#/components/schemas/InfraRollConfiguration"
        name:
          description: Name of the deployment config
          example: Production
          type: string
        rolloutPriorityList:
          example:
          - region-12345678
          - region-abcd1234
          - region-3c3c3c3c
          items:
            example: Rem quod sunt exercitationem quia voluptatum.
            type: string
          type: array
      required:
      - description
      - name
      type: object
    CreateIdentityProviderRequest:
      example:
        authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
        disabled: false
        emailIdentifiers: company.com
        environmentType: Aut suscipit ea provident ipsa.
        identityProviderName: Google
        loginButtonIconUrl: https://example.com/icon.png
        loginButtonText: Login with Google
        name: Google for my company
        scopes: openid email profile
        token: e0o
        tokenEndpoint: https://oauth2.googleapis.com/token
        userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
      properties:
        authorizationEndpoint:
          description: The authorization endpoint of the Identity Provider
          example: https://accounts.google.com/o/oauth2/auth
          type: string
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
        disabled:
          description: Whether the Identity Provider is disabled
          example: false
          type: boolean
        emailIdentifiers:
          description: The email identifiers to use for the Identity Provider
          example: company.com
          type: string
        environmentType:
          description: The type of environment to filter costs by
          example: Illo natus nisi dolor libero corporis.
          type: string
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        loginButtonIconUrl:
          description: The URL of the icon to use for the login button
          example: https://example.com/icon.png
          type: string
        loginButtonText:
          description: The text to use for the login button
          example: Login with Google
          type: string
        name:
          description: The name of the Identity Provider
          example: Google for my company
          type: string
        scopes:
          description: The scopes to request from the Identity Provider
          example: openid email profile
          type: string
        token:
          description: JWT token used to perform authorization
          example: wt
          minLength: 1
          type: string
        tokenEndpoint:
          description: The token endpoint of the Identity Provider
          example: https://oauth2.googleapis.com/token
          type: string
        userInfoEndpoint:
          description: The user info endpoint of the Identity Provider
          example: https://www.googleapis.com/oauth2/v3/userinfo
          type: string
      required:
      - clientId
      - clientSecret
      - identityProviderName
      - token
      type: object
    CreateIdentityProviderRequest2:
      example:
        authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
        disabled: false
        emailIdentifiers: company.com
        environmentType: Nemo vero ad blanditiis a quis fugiat.
        identityProviderName: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
        loginButtonIconUrl: https://example.com/icon.png
        loginButtonText: Login with Google
        name: Google for my company
        scopes: openid email profile
        tokenEndpoint: https://oauth2.googleapis.com/token
        userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
      properties:
        authorizationEndpoint:
          description: The authorization endpoint of the Identity Provider
          example: https://accounts.google.com/o/oauth2/auth
          type: string
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
        disabled:
          description: Whether the Identity Provider is disabled
          example: false
          type: boolean
        emailIdentifiers:
          description: The email identifiers to use for the Identity Provider
          example: company.com
          type: string
        environmentType:
          description: The type of environment to filter costs by
          example: Ut sit nam modi nihil magni.
          type: string
        identityProviderName:
          description: The type of the Identity Provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        loginButtonIconUrl:
          description: The URL of the icon to use for the login button
          example: https://example.com/icon.png
          type: string
        loginButtonText:
          description: The text to use for the login button
          example: Login with Google
          type: string
        name:
          description: The name of the Identity Provider
          example: Google for my company
          type: string
        scopes:
          description: The scopes to request from the Identity Provider
          example: openid email profile
          type: string
        tokenEndpoint:
          description: The token endpoint of the Identity Provider
          example: https://oauth2.googleapis.com/token
          type: string
        userInfoEndpoint:
          description: The user info endpoint of the Identity Provider
          example: https://www.googleapis.com/oauth2/v3/userinfo
          type: string
      required:
      - clientId
      - clientSecret
      - identityProviderName
      type: object
    CreateImageConfigRequest:
      description: Create the image configuration required to bring up a new entity
      example:
        customImageCommandsAndArgs:
          args:
          - -d
          - mysql
          commands:
          - echo
          - "Hello, World!"
        description: A image configuration for my new entity
        imageName: mysql
        imageRegistryId: ir-12345678
        imageSignaturePublicKeyPEM: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        imageTag: latest
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        token: 8sf
      properties:
        customImageCommandsAndArgs:
          $ref: "#/components/schemas/CustomImageCommandsAndArgs"
        description:
          description: A brief description of the image configuration
          example: A image configuration for my new entity
          type: string
        imageName:
          description: Name of the container image
          example: mysql
          minLength: 1
          type: string
        imageRegistryId:
          description: ID of an Image Registry
          example: Ab aut nihil quos qui.
          type: string
        imageSignaturePublicKeyPEM:
          description: PEM-encoded Public key part of the key used to sign the container
            image
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        imageTag:
          default: latest
          description: Tag representing the specific software image version
          example: latest
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: s
          minLength: 1
          type: string
      required:
      - description
      - imageName
      - serviceEnvironmentId
      - serviceId
      - token
      type: object
    CreateImageConfigRequest2:
      example:
        customImageCommandsAndArgs:
          args:
          - -d
          - mysql
          commands:
          - echo
          - "Hello, World!"
        description: A image configuration for my new entity
        imageName: mysql
        imageRegistryId: Rem repudiandae quia.
        imageSignaturePublicKeyPEM: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        imageTag: latest
        serviceEnvironmentId: se-123456
      properties:
        customImageCommandsAndArgs:
          $ref: "#/components/schemas/CustomImageCommandsAndArgs"
        description:
          description: A brief description of the image configuration
          example: A image configuration for my new entity
          type: string
        imageName:
          description: Name of the container image
          example: mysql
          minLength: 1
          type: string
        imageRegistryId:
          description: The image registry ID to use for the infra
          example: Explicabo veniam cumque quis.
          type: string
        imageSignaturePublicKeyPEM:
          description: PEM-encoded Public key part of the key used to sign the container
            image
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        imageTag:
          default: latest
          description: Tag representing the specific software image version
          example: latest
          type: string
        serviceEnvironmentId:
          description: The service environment ID
          example: se-123456
          type: string
      required:
      - description
      - imageName
      - serviceEnvironmentId
      type: object
    CreateImageRegistryRequest:
      description: Create an HTTP API v2 Docker Image Registry
      example:
        description: DockerHub is a public Docker Image Registry
        host: docker.io
        name: DockerHub
        password: mypassword
        token: "9"
        username: myusername
      properties:
        description:
          description: A brief description of the Image Registry
          example: DockerHub is a public Docker Image Registry
          type: string
        host:
          description: The Image Registry host
          example: docker.io
          type: string
        name:
          description: Name of the Image Registry
          example: DockerHub
          type: string
        password:
          description: The password to use when authenticating to the Image Registry
          example: mypassword
          type: string
        token:
          description: JWT token used to perform authorization
          example: "71"
          minLength: 1
          type: string
        username:
          description: The username to use when authenticating to the Image Registry
          example: myusername
          type: string
      required:
      - description
      - host
      - name
      - token
      type: object
    CreateImageRegistryRequest2:
      example:
        description: DockerHub is a public Docker Image Registry
        host: docker.io
        name: DockerHub
        password: mypassword
        username: myusername
      properties:
        description:
          description: A brief description of the Image Registry
          example: DockerHub is a public Docker Image Registry
          type: string
        host:
          description: The Image Registry host
          example: docker.io
          type: string
        name:
          description: Name of the Image Registry
          example: DockerHub
          type: string
        password:
          description: The password to use when authenticating to the Image Registry
          example: mypassword
          type: string
        username:
          description: The username to use when authenticating to the Image Registry
          example: myusername
          type: string
      required:
      - description
      - host
      - name
      type: object
    CreateInfraConfigRequest:
      description: Create the infra required to host a resource
      example:
        computeConfigId: cc-12345678
        customTag:
          key: customKey
          value: customValue
        description: Infra config used for the base tier MySQL service
        name: MySQL Writer Infra Config
        networkConfigId: nc-12345678
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        storageConfigId: sc-12345678
        token: u
      properties:
        computeConfigId:
          description: ID of a Compute Config
          example: Delectus sunt voluptatem.
          type: string
        customTag:
          $ref: "#/components/schemas/CustomTag"
        description:
          description: The description for the infra config
          example: Infra config used for the base tier MySQL service
          type: string
        name:
          description: The name of the infra config
          example: MySQL Writer Infra Config
          type: string
        networkConfigId:
          description: ID of a Network Config
          example: Non atque blanditiis placeat et et.
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        storageConfigId:
          description: ID of a Storage Config
          example: Est id.
          type: string
        token:
          description: JWT token used to perform authorization
          example: lld
          minLength: 1
          type: string
      required:
      - description
      - name
      - serviceEnvironmentId
      - serviceId
      - token
      type: object
    CreateInfraConfigRequest2:
      example:
        computeConfigId: A impedit nobis molestias earum molestiae.
        customTag:
          key: customKey
          value: customValue
        description: Infra config used for the base tier MySQL service
        name: MySQL Writer Infra Config
        networkConfigId: Nostrum distinctio ea voluptas ea ipsa.
        serviceEnvironmentId: se-123456
        storageConfigId: Veniam quaerat perspiciatis at voluptatem.
      properties:
        computeConfigId:
          description: The compute config ID
          example: Voluptatem neque iste rem ex.
          type: string
        customTag:
          $ref: "#/components/schemas/CustomTag"
        description:
          description: The description for the infra config
          example: Infra config used for the base tier MySQL service
          type: string
        name:
          description: The name of the infra config
          example: MySQL Writer Infra Config
          type: string
        networkConfigId:
          description: The network config ID
          example: Vel et velit dolorum voluptatem aut.
          type: string
        serviceEnvironmentId:
          description: The service environment ID
          example: se-123456
          type: string
        storageConfigId:
          description: The storage config ID
          example: Qui asperiores quia soluta laboriosam.
          type: string
      required:
      - description
      - name
      - serviceEnvironmentId
      type: object
    CreateInputParameterRequest:
      example:
        defaultValue: default value
        dependentResourceId: r-12345678
        description: Non corporis velit autem id.
        hasOptions: false
        isList: false
        key: "y"
        labeledOptions:
          large: t3.xlarge
          medium: t3.large
          small: t3.medium
        limits:
          max: Vel voluptas.
          maxLength: Architecto assumenda et voluptas perferendis enim.
          min: Beatae voluptas mollitia.
          minLength: Nemo inventore tempora.
        modifiable: true
        name: "0"
        options:
        - a
        - b
        - c
        - default value
        regex: "^[a-zA-Z0-9_-]+$"
        required: true
        resourceId: r-12345678
        serviceId: s-12345678
        tabIndex: 1
        token: f
        type: Boolean|Float64|String|Resource|Secret|Password
      properties:
        defaultValue:
          description: Default value to use for an optional input parameter represented
            as a string
          example: default value
          type: string
        dependentResourceId:
          description: ID of a resource
          example: Illo neque dignissimos quaerat.
          type: string
        description:
          description: A brief description of the input parameter
          example: Maxime error non ad tenetur.
          type: string
        hasOptions:
          default: false
          description: Marks the input parameter to be selectable from a list of values
          example: true
          type: boolean
        isList:
          default: false
          description: Marks the input parameter as a list of values
          example: true
          type: boolean
        key:
          description: Key of the input parameter
          example: 7ih
          minLength: 1
          pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
          type: string
        labeledOptions:
          additionalProperties:
            example: Perferendis culpa.
            type: string
          description: "A map for labeled options. The key is the label and the value\
            \ is the option. When the option is selected, the label will be displayed\
            \ to the end customer. Specify either options or labeledOptions when defining\
            \ the input parameter."
          example:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          type: object
        limits:
          $ref: "#/components/schemas/Limits"
        modifiable:
          description: Marks the input parameter as immutable
          example: true
          type: boolean
        name:
          description: External name for the input parameter
          example: vm
          minLength: 1
          type: string
        options:
          description: A list of options to restrict the value of the input parameter
            to (represented as a string)
          example:
          - a
          - b
          - c
          - default value
          items:
            example: Consequuntur modi et dolor nihil quibusdam placeat.
            type: string
          type: array
        regex:
          description: Regular expression pattern for validating the input parameter
            value
          example: "^[a-zA-Z0-9_-]+$"
          type: string
        required:
          description: Enforces the input parameter as a required parameter
          example: false
          type: boolean
        resourceId:
          description: ID of a resource
          example: Iure voluptatem alias veritatis consequatur beatae recusandae.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        tabIndex:
          default: 0
          description: Index for parameter ordering in the SaaS portal
          example: 1
          format: int64
          type: integer
        token:
          description: JWT token used to perform authorization
          example: j8
          minLength: 1
          type: string
        type:
          description: Type of the variable encoding the value
          example: Boolean|Float64|String|Resource|Secret|Password
          type: string
      required:
      - description
      - key
      - modifiable
      - name
      - required
      - resourceId
      - serviceId
      - token
      - type
      type: object
    CreateInputParameterRequest2:
      example:
        defaultValue: default value
        dependentResourceId: Nihil doloremque eveniet eum ad fuga iure.
        description: Qui debitis consequatur.
        hasOptions: false
        isList: false
        key: 5u
        labeledOptions:
          large: t3.xlarge
          medium: t3.large
          small: t3.medium
        limits:
          max: Omnis et recusandae amet voluptates.
          maxLength: Dolores enim molestiae.
          min: Odit voluptatem quae eaque voluptatibus voluptatem non.
          minLength: Nobis quia aut nihil.
        modifiable: false
        name: 7e
        options:
        - a
        - b
        - c
        - default value
        regex: "^[a-zA-Z0-9_-]+$"
        required: false
        resourceId: Ut optio et et.
        tabIndex: 1
        type: Boolean|Float64|String|Resource|Secret|Password
      properties:
        defaultValue:
          description: Default value to use for an optional input parameter represented
            as a string
          example: default value
          type: string
        dependentResourceId:
          description: The ID of the resource whose instance this input parameter
            depends on
          example: Explicabo adipisci animi.
          type: string
        description:
          description: A brief description of the input parameter
          example: Aliquam officia animi debitis.
          type: string
        hasOptions:
          default: false
          description: Marks the input parameter to be selectable from a list of values
          example: false
          type: boolean
        isList:
          default: false
          description: Marks the input parameter as a list of values
          example: true
          type: boolean
        key:
          description: Key of the input parameter
          example: 4uv
          minLength: 1
          pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
          type: string
        labeledOptions:
          additionalProperties:
            example: Voluptatum repudiandae ea et laboriosam earum.
            type: string
          description: "A map for labeled options. The key is the label and the value\
            \ is the option. When the option is selected, the label will be displayed\
            \ to the end customer. Specify either options or labeledOptions when defining\
            \ the input parameter."
          example:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          type: object
        limits:
          $ref: "#/components/schemas/Limits"
        modifiable:
          description: Marks the input parameter as immutable
          example: true
          type: boolean
        name:
          description: External name for the input parameter
          example: h
          minLength: 1
          type: string
        options:
          description: A list of options to restrict the value of the input parameter
            to (represented as a string)
          example:
          - a
          - b
          - c
          - default value
          items:
            example: Exercitationem est est.
            type: string
          type: array
        regex:
          description: Regular expression pattern for validating the input parameter
            value
          example: "^[a-zA-Z0-9_-]+$"
          type: string
        required:
          description: Enforces the input parameter as a required parameter
          example: false
          type: boolean
        resourceId:
          description: The ID of the resource that this input parameter belongs to
          example: Quisquam beatae accusamus optio voluptas tenetur.
          type: string
        tabIndex:
          default: 0
          description: Index for parameter ordering in the SaaS portal
          example: 1
          format: int64
          type: integer
        type:
          example: Boolean|Float64|String|Resource|Secret|Password
          type: string
      required:
      - description
      - key
      - modifiable
      - name
      - required
      - resourceId
      - type
      type: object
    CreateNetworkConfigRequest:
      example:
        description: A multi-zone HA network config
        endpointPerReplica: true
        internal: true
        name: Multi-zone
        openPorts:
        - 1299
        - 3306
        privateNetworkingConfiguration:
          privateLinkConfiguration:
            awsPrivateLinkConfigurations:
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
        publicNetworkingConfiguration:
          enableClusterLoadBalancer: true
          enableNodeLoadBalancer: true
        serviceId: s-12345678
        stableEgressIP: true
        tlsTerminationPort: 443
        token: r
        zoneConfiguration: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
      properties:
        description:
          description: A brief description of the network config
          example: A multi-zone HA network config
          type: string
        endpointPerReplica:
          description: Generates a DNS endpoint per-replica for this network config
          example: true
          type: boolean
        internal:
          default: false
          description: Restrict access to this network config to the internal network
          example: true
          type: boolean
        name:
          description: Name of the network config
          example: Multi-zone
          type: string
        openPorts:
          description: Ports to map to the generated DNS endpoint
          example:
          - 1299
          - 3306
          items:
            example: 7638612866980702415
            format: int64
            type: integer
          type: array
        privateNetworkingConfiguration:
          $ref: "#/components/schemas/PrivateNetworkingConfiguration"
        publicNetworkingConfiguration:
          $ref: "#/components/schemas/PublicNetworkingConfiguration"
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        stableEgressIP:
          description: Enable stable egress IP
          example: true
          type: boolean
        tlsTerminationPort:
          description: The port that hosts the reverse proxy for TLS termination
          example: 443
          format: int64
          type: integer
        token:
          description: JWT token used to perform authorization
          example: o
          minLength: 1
          type: string
        zoneConfiguration:
          description: The preferred type of zonal availability for this resource
            and the specific zone(s) to deploy in
          example: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
          type: string
      required:
      - description
      - endpointPerReplica
      - name
      - serviceId
      - token
      type: object
    CreateNetworkConfigRequest2:
      example:
        description: A multi-zone HA network config
        endpointPerReplica: true
        internal: true
        name: Multi-zone
        openPorts:
        - 1299
        - 3306
        privateNetworkingConfiguration:
          privateLinkConfiguration:
            awsPrivateLinkConfigurations:
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
        publicNetworkingConfiguration:
          enableClusterLoadBalancer: true
          enableNodeLoadBalancer: true
        stableEgressIP: true
        tlsTerminationPort: 443
        zoneConfiguration: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
      properties:
        description:
          description: A brief description of the network config
          example: A multi-zone HA network config
          type: string
        endpointPerReplica:
          description: Generates a DNS endpoint per-replica for this network config
          example: true
          type: boolean
        internal:
          default: false
          description: Restrict access to this network config to the internal network
          example: true
          type: boolean
        name:
          description: Name of the network config
          example: Multi-zone
          type: string
        openPorts:
          description: Ports to map to the generated DNS endpoint
          example:
          - 1299
          - 3306
          items:
            example: 1997390048610779195
            format: int64
            type: integer
          type: array
        privateNetworkingConfiguration:
          $ref: "#/components/schemas/PrivateNetworkingConfiguration"
        publicNetworkingConfiguration:
          $ref: "#/components/schemas/PublicNetworkingConfiguration"
        stableEgressIP:
          description: Enable stable egress IP
          example: true
          type: boolean
        tlsTerminationPort:
          description: The port that hosts the reverse proxy for TLS termination
          example: 443
          format: int64
          type: integer
        zoneConfiguration:
          description: The preferred type of zonal availability for this resource
            and the specific zone(s) to deploy in
          example: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
          type: string
      required:
      - description
      - endpointPerReplica
      - name
      type: object
    CreateOutputParameterRequest:
      example:
        description: Username of the user created in the target system
        genericCommandValueProvider:
          args:
          - -s
          - http://example.com/api/username
          command: curl
          environment:
            PATH: /usr/local/bin:/usr/bin:/bin
          retryCount: 3
          shell: /bin/bash
          timeout: 30
          workingDir: /tmp
        key: username
        kubectlValueProvider:
          command: "get secret {{ $sys.id }}-creds -o jsonpath='{.data.username}'"
          context: production
          environment:
            KUBECONFIG: /path/to/config
          namespace: default
          retryCount: 3
          timeout: 30
        name: Username
        resourceId: r-12345678
        serviceId: s-12345678
        token: "014"
        value: johndoe
        valueRef: $var.username
        valueType: Boolean|Float64|String|Secret|Password
      properties:
        description:
          description: Description of the output variable being exported
          example: Username of the user created in the target system
          minLength: 1
          type: string
        genericCommandValueProvider:
          $ref: "#/components/schemas/GenericCommandValueProviderConfig"
        key:
          description: Key of the output variable being exported
          example: username
          minLength: 1
          pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
          type: string
        kubectlValueProvider:
          $ref: "#/components/schemas/KubectlValueProviderConfig"
        name:
          description: External name of the output variable being exported
          example: Username
          minLength: 1
          type: string
        resourceId:
          description: ID of a resource
          example: Nulla quidem.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: q
          minLength: 1
          type: string
        value:
          description: Value of the output variable being exported
          example: johndoe
          type: string
        valueRef:
          description: Reference to another variable that will be used to set the
            value of the output variable being exported
          example: $var.username
          type: string
        valueType:
          description: Type of the variable encoding the value
          example: Boolean|Float64|String|Secret|Password
          type: string
      required:
      - description
      - key
      - name
      - resourceId
      - serviceId
      - token
      type: object
    CreateOutputParameterRequest2:
      example:
        description: Username of the user created in the target system
        genericCommandValueProvider:
          args:
          - -s
          - http://example.com/api/username
          command: curl
          environment:
            PATH: /usr/local/bin:/usr/bin:/bin
          retryCount: 3
          shell: /bin/bash
          timeout: 30
          workingDir: /tmp
        key: username
        kubectlValueProvider:
          command: "get secret {{ $sys.id }}-creds -o jsonpath='{.data.username}'"
          context: production
          environment:
            KUBECONFIG: /path/to/config
          namespace: default
          retryCount: 3
          timeout: 30
        name: Username
        resourceId: Nulla voluptatem dolores fugit.
        value: johndoe
        valueRef: $var.username
        valueType: Boolean|Float64|String|Secret|Password
      properties:
        description:
          description: Description of the output variable being exported
          example: Username of the user created in the target system
          minLength: 1
          type: string
        genericCommandValueProvider:
          $ref: "#/components/schemas/GenericCommandValueProviderConfig"
        key:
          description: Key of the output variable being exported
          example: username
          minLength: 1
          pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
          type: string
        kubectlValueProvider:
          $ref: "#/components/schemas/KubectlValueProviderConfig"
        name:
          description: External name of the output variable being exported
          example: Username
          minLength: 1
          type: string
        resourceId:
          description: The ID of the resource that this output parameter belongs to
          example: Non sunt reiciendis.
          type: string
        value:
          description: Value of the output variable being exported
          example: johndoe
          type: string
        valueRef:
          description: Reference to another variable that will be used to set the
            value of the output variable being exported
          example: $var.username
          type: string
        valueType:
          example: Boolean|Float64|String|Secret|Password
          type: string
      required:
      - description
      - key
      - name
      - resourceId
      type: object
    CreatePipelineRequest:
      example:
        description: MySQL SaaS promotion pipeline
        name: my-pipeline
        serviceEnvironmentSequence:
        - se-12345678
        - se-23456789
        serviceId: s-12345678
        token: 7k
      properties:
        description:
          description: Description of the pipeline
          example: MySQL SaaS promotion pipeline
          type: string
        name:
          description: Name of the pipeline
          example: my-pipeline
          type: string
        serviceEnvironmentSequence:
          description: Sequence of service environments to be deployed in the pipeline
          example:
          - se-12345678
          - se-23456789
          items:
            description: ID of a Service Environment
            example: se-123456
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: nn
          minLength: 1
          type: string
      required:
      - description
      - name
      - serviceEnvironmentSequence
      - serviceId
      - token
      type: object
    CreateProductTierRequest:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        billingProductID: abc123
        billingProviders:
        - STRIPE
        - BRING_YOUR_OWN
        defaultBillingProvider: STRIPE
        deploymentConfiguration:
          onPremInstallerTools:
            helperUserScript:
              content: echo 'hello world'
          requirements:
            minimumK8sVersion: 1.23.1
        description: A premium product tier
        documentation: Any documentation
        exportUsageMetering: true
        exportUsageMeteringConfig:
          GCS:
            GCSBucketName: my_billing_bucket_name
          S3:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
            S3BucketRegion: us-east-1
        gcpRegions:
        - us-central1
        isDisabled: false
        maxNumberOfInstances: 5
        name: Premium
        planDescription: A premium plan
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Replica hours:
            amount: 0.001
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        pricing:
          price1: value1
        privateRegions:
        - n/a
        serviceId: s-12345678
        serviceModelId: sm-12345678
        support: Any support
        tierType: OMNISTRATE_DEDICATED_TENANCY
        token: ov
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Quas ea voluptatem eius modi ullam.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this product tier is available on
          example:
          - northcentralus
          items:
            example: Labore et optio cum.
            type: string
          type: array
        billingProductID:
          description: Optional billing product ID for tax purposes
          example: abc123
          type: string
        billingProviders:
          description: List of billing providers to be used for the product tier
          example:
          - STRIPE
          - BRING_YOUR_OWN
          items:
            description: The billing provider type
            example: STRIPE|BRING_YOUR_OWN
            type: string
          type: array
        defaultBillingProvider:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        deploymentConfiguration:
          $ref: "#/components/schemas/ProductTierDeploymentConfiguration"
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        exportUsageMetering:
          description: Export usage metering data
          example: true
          type: boolean
        exportUsageMeteringConfig:
          additionalProperties: true
          description: Export usage metering data configuration
          example:
            GCS:
              GCSBucketName: my_billing_bucket_name
            S3:
              S3BucketArn: arn:aws:s3:::my_billing_bucket_name
              S3BucketRegion: us-east-1
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Et sed error sit.
            type: string
          type: array
        isDisabled:
          description: Create the product tier in a disabled state. Enabling the product
            tier will let end-customers subscribe and use the service plan.
          example: false
          type: boolean
        maxNumberOfInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricePerUnit:
          additionalProperties: true
          description: Price per unit.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Replica hours:
              amount: 0.001
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        pricing:
          description: Pricing
          example:
            price1: value1
        privateRegions:
          description: The private regions that this product tier is available on
          example:
          - n/a
          items:
            example: Ut voluptatum.
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Consequatur aut voluptatem.
          type: string
        support:
          description: Support
          example: Any support
          type: string
        tierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        token:
          description: JWT token used to perform authorization
          example: ti
          minLength: 1
          type: string
      required:
      - description
      - name
      - planDescription
      - serviceId
      - serviceModelId
      - tierType
      - token
      type: object
    CreateProductTierRequest2:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        billingProductID: abc123
        billingProviders:
        - STRIPE
        - BRING_YOUR_OWN
        defaultBillingProvider: STRIPE|BRING_YOUR_OWN
        deploymentConfiguration:
          onPremInstallerTools:
            helperUserScript:
              content: echo 'hello world'
          requirements:
            minimumK8sVersion: 1.23.1
        description: A premium product tier
        documentation: Any documentation
        exportUsageMetering: true
        exportUsageMeteringConfig:
          GCS:
            GCSBucketName: my_billing_bucket_name
          S3:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
            S3BucketRegion: us-east-1
        gcpRegions:
        - us-central1
        isDisabled: false
        maxNumberOfInstances: 5
        name: Premium
        planDescription: A premium plan
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Replica hours:
            amount: 0.001
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        pricing:
          price1: value1
        privateRegions:
        - n/a
        serviceModelId: Eligendi nihil voluptates perspiciatis.
        support: Any support
        tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Amet mollitia alias.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this product tier is available on
          example:
          - northcentralus
          items:
            example: Quidem ut minus quis sunt.
            type: string
          type: array
        billingProductID:
          description: Optional billing product ID for tax purposes
          example: abc123
          type: string
        billingProviders:
          description: List of billing providers to be used for the product tier
          example:
          - STRIPE
          - BRING_YOUR_OWN
          items:
            example: STRIPE|BRING_YOUR_OWN
            type: string
          type: array
        defaultBillingProvider:
          description: The default billing provider to be used for the product tier
          example: STRIPE|BRING_YOUR_OWN
          type: string
        deploymentConfiguration:
          $ref: "#/components/schemas/ProductTierDeploymentConfiguration"
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        exportUsageMetering:
          description: Export usage metering data
          example: true
          type: boolean
        exportUsageMeteringConfig:
          additionalProperties: true
          description: Export usage metering data configuration
          example:
            GCS:
              GCSBucketName: my_billing_bucket_name
            S3:
              S3BucketArn: arn:aws:s3:::my_billing_bucket_name
              S3BucketRegion: us-east-1
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Sunt est culpa libero pariatur excepturi.
            type: string
          type: array
        isDisabled:
          description: Create the product tier in a disabled state. Enabling the product
            tier will let end-customers subscribe and use the service plan.
          example: false
          type: boolean
        maxNumberOfInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricePerUnit:
          additionalProperties: true
          description: Price per unit.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Replica hours:
              amount: 0.001
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        pricing:
          description: Pricing
          example:
            price1: value1
        privateRegions:
          description: The private regions that this product tier is available on
          example:
          - n/a
          items:
            example: Nam harum voluptatem saepe esse iste eligendi.
            type: string
          type: array
        serviceModelId:
          description: Service model ID
          example: Officia cum blanditiis doloribus blanditiis excepturi ipsam.
          type: string
        support:
          description: Support
          example: Any support
          type: string
        tierType:
          description: Tier type
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
      required:
      - description
      - name
      - planDescription
      - serviceModelId
      - tierType
      type: object
    CreateResourceInstanceRequest:
      example:
        cloud_provider: aws
        custom_network_id: n-1234567890
        customTags:
        - key: customKey1
          value: customValue1
        - key: customKey2
          value: customValue2
        externalBillingId: external-billing-id-1234
        network_type: PUBLIC|INTERNAL
        onprem_platform: OpenShift
        productTierKey: premium
        productTierVersion: "1.0"
        region: us-east-1
        requestParams:
          param1: value1
          param2: value2
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: ut6
      properties:
        cloud_provider:
          description: The cloud provider name
          example: aws
          type: string
        custom_network_id:
          description: Custom network for resource
          example: n-1234567890
          type: string
        customTags:
          description: The custom tags for the resource instance
          example:
          - key: customKey1
            value: customValue1
          - key: customKey2
            value: customValue2
          items:
            $ref: "#/components/schemas/CustomTag"
          type: array
        externalBillingId:
          description: This externalBillingId is deprecated and will be removed in
            the future
          example: external-billing-id-1234
          type: string
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        onprem_platform:
          description: OnPrem platform
          example: OpenShift
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        productTierVersion:
          description: The product tier version
          example: "1.0"
          type: string
        region:
          description: The region code
          example: us-east-1
          type: string
        requestParams:
          description: The request parameters
          example:
            param1: value1
            param2: value2
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Ipsa voluptas quam.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: dy
          minLength: 1
          type: string
      required:
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    CreateResourceInstanceRequest2:
      example:
        cloud_provider: aws
        custom_network_id: n-1234567890
        customTags:
        - key: customKey1
          value: customValue1
        - key: customKey2
          value: customValue2
        externalBillingId: external-billing-id-1234
        network_type: PUBLIC|INTERNAL
        onprem_platform: OpenShift
        productTierVersion: "1.0"
        region: us-east-1
        requestParams:
          param1: value1
          param2: value2
      properties:
        cloud_provider:
          description: The cloud provider name
          example: aws
          type: string
        custom_network_id:
          description: Custom network for resource
          example: n-1234567890
          type: string
        customTags:
          description: The custom tags for the resource instance
          example:
          - key: customKey1
            value: customValue1
          - key: customKey2
            value: customValue2
          items:
            $ref: "#/components/schemas/CustomTag"
          type: array
        externalBillingId:
          description: This externalBillingId is deprecated and will be removed in
            the future
          example: external-billing-id-1234
          type: string
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        onprem_platform:
          description: OnPrem platform
          example: OpenShift
          type: string
        productTierVersion:
          description: The product tier version
          example: "1.0"
          type: string
        region:
          description: The region code
          example: us-east-1
          type: string
        requestParams:
          description: The request parameters
          example:
            param1: value1
            param2: value2
      type: object
    CreateResourceRequest:
      example:
        additionalSecurityContext:
          AddCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          DropCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          SupplementalGroupIDs:
          - 1001
          - 999
        agentConfiguration:
          codeInterpreter:
            allowedPackages:
            - pandas
            - numpy
            - matplotlib
            enabled: true
            provider: agentcore
            timeout: 60
          dockerfile: Dockerfile
          evaluations:
          - metrics:
            - relevance
            - helpfulness
            name: response-quality
            schedule: every 6 hours
          memory:
            enabled: true
          monitoring:
            enabled: true
          vectorStore:
            enabled: true
        backupConfiguration:
          backupPeriodInHours: 24
          backupRetentionInDays: 7
        blobStorageConfiguration:
          GCSConfiguration: {}
          S3Configuration: {}
        containerImagesRegistryCopyConfiguration:
          images:
          - imageName: postgres
            imageTag: "16"
          - imageName: postgres
            imageTag: "16"
          pullSource:
            credentials:
              password: my-password
              username: my-user
            registryURL: https://my-registry.com
            repositoryName: library
          pushTarget:
            credentials:
              password: my-password
              username: my-user
            registryURL: https://my-registry.com
            repositoryName: library
        customLabels:
          key: value
        customSysCTLs:
          net.ipv4.tcp_syncookies: "1"
        customULimits:
        - ULimitsName: NoProc
          ULimitsType: Soft
          ULimitsValue: 1000
        - ULimitsName: NoFile
          ULimitsType: Hard
          ULimitsValue: 2048
        description: A resource to manage a hosted public SaaS offering of a multi-writer
          MySQL service
        disable: "{{ $var.disableExtraComponents }}"
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        fileSystemConfiguration:
          EFSFileSystemConfiguration:
            PerformanceMode: generalPurpose|maxIO
            ProvisionedThroughputInMibps: 125
            ThroughputMode: provisioned|bursting|elastic
          GCPFilestoreConfiguration:
            Capacity: 1024GiB
            MaxIopsPerTb: 3000
            Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
        helmChartConfiguration:
          autoDiscoverImagesTag: omnistrate/images
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          layeredChartValues:
          - values:
              global:
                image:
                  tag: v1.0.0
                replicaCount: 1
                resources:
                  requests:
                    cpu: 100m
                    memory: 128Mi
          - scope:
              '{{ $sys.cloudProviderName }}': aws
            valuesFile:
              gitConfiguration:
                accessToken: ghp_...
                commitSHA: a1b2c3d4e5f6
                path: aws/production.yaml
                referenceName: refs/heads/main
                repositoryUrl: https://github.com/org/helm-values
          namespace: postgres
          password: my-password
          releaseName: my-release
          runtimeConfiguration:
            disableHooks: true
            recreate: true
            resetThenReuseValues: true
            resetValues: true
            reuseValues: true
            skipCRDs: true
            timeoutNanos: 1000000000
            upgradeCRDs: true
            wait: true
            waitForJobs: true
          username: my-user
        imageConfigId: imgc-12345678
        infraConfigId: ic-12345678
        internal: true
        isProxy: true
        jobConfig:
          activeDeadlineSeconds: 300
          backoffLimit: 5
        key: galera
        kustomizeConfiguration:
          disableReconciliation: false
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          gitConfiguration:
            accessToken: my-token
            commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
            referenceName: tags/v1.0.0
            repositoryUrl: https://github.com/username/myrepo
            userName: my-user
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          kustomizePath: /kustomize
        l4LoadBalancerConfiguration:
          ingressPortConfiguration:
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8080
            ingressPort: 1234
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8081
            ingressPort: 5678
          - associatedResourceIDs:
            - r-vwxybz12
            - r-poij122v
            backendPort: 8082
            ingressPort: 9012
        l7LoadBalancerConfiguration:
          paths:
          - associatedResourceID: r-12345678
            path: /path
            port: 8080
        name: Galera
        onPremTerraformConfigurations:
          OpenShift:
            gitConfiguration:
              referenceName: ref
              repositoryUrl: gitUrl
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
        operatorCRDConfiguration:
          disableReconciliation: false
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          outputParameters:
            expiresAt: $out.status.notAfter
            issuerName: letsencrypt-prod
          readinessConditions:
            $out.status.conditions[?(@.type=='Ready')].status: true
          supplementalFiles:
          - |
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
          - |-
            apiVersion: ingress.nginx.io/v1
            kind: IngressClass
            metadata:
              name: nginx
            spec:
              controller: nginx.org/ingress-controller
          template: |-
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
                email: test@example.com
                privateKeySecretRef:
                  name: letsencrypt-prod
                solvers:
                - http01:
                    ingress:
                      class: nginx
        productTierId: pt-12345678
        proxyType: PortsBasedProxy
        resourceDependencies:
        - parameterMap:
            userDatabase: clusterOrg
            writerId: clusterWriterId
          resourceId: r-12345678
        - parameterMap:
            readerId: clusterReaderId
            userDatabase: clusterOrg
          resourceId: r-abcdef12
        resourceType: Generic
        serviceId: s-12345678
        terraformConfigurations:
          aws:
            gitConfiguration:
              referenceName: ref
              repositoryUrl: gitUrl
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
        token: 8lp
      properties:
        additionalSecurityContext:
          $ref: "#/components/schemas/AdditionalSecurityContext"
        agentConfiguration:
          $ref: "#/components/schemas/AgentConfiguration"
        backupConfiguration:
          $ref: "#/components/schemas/BackupConfiguration"
        blobStorageConfiguration:
          $ref: "#/components/schemas/BlobStorageConfiguration"
        containerImagesRegistryCopyConfiguration:
          $ref: "#/components/schemas/ContainerImagesRegistryCopyConfiguration"
        customLabels:
          additionalProperties:
            example: Voluptatem quibusdam magnam.
            type: string
          description: Custom labels for the resource
          example:
            key: value
          type: object
        customSysCTLs:
          additionalProperties:
            example: Iusto facere sunt.
            type: string
          description: Custom sysctl settings for the resource
          example:
            net.ipv4.tcp_syncookies: "1"
          type: object
        customULimits:
          description: Custom ulimits for the resource
          example:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          items:
            $ref: "#/components/schemas/CustomULimits"
          type: array
        description:
          description: A brief description of the resource
          example: A resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          type: string
        disable:
          description: "Allows resource to be disabled. Expression returning true/false\
            \ can be used as value. Resource is enabled by default, if this property\
            \ is not set."
          example: "{{ $var.disableExtraComponents }}"
          type: string
        environmentVariables:
          description: The environment variables that this resource requires
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: "#/components/schemas/EnvironmentVariable"
          type: array
        fileSystemConfiguration:
          $ref: "#/components/schemas/FileSystemConfiguration"
        helmChartConfiguration:
          $ref: "#/components/schemas/HelmChartConfiguration"
        imageConfigId:
          description: ID of an Image Config
          example: Dolores illum suscipit aspernatur qui.
          type: string
        infraConfigId:
          description: ID of an Infra Config
          example: Id est quae.
          type: string
        internal:
          default: false
          description: Whether this resource is internal or not
          example: true
          type: boolean
        isProxy:
          default: false
          description: Whether this resource is a proxy or not
          example: true
          type: boolean
        jobConfig:
          $ref: "#/components/schemas/JobConfig"
        key:
          description: The key of the resource
          example: galera
          type: string
        kustomizeConfiguration:
          $ref: "#/components/schemas/KustomizeConfiguration"
        l4LoadBalancerConfiguration:
          $ref: "#/components/schemas/L4LoadBalancerConfiguration"
        l7LoadBalancerConfiguration:
          $ref: "#/components/schemas/L7LoadBalancerConfiguration"
        name:
          description: Name of the resource
          example: Galera
          type: string
        onPremTerraformConfigurations:
          additionalProperties:
            $ref: "#/components/schemas/TerraformConfiguration"
          description: The Terraform configurations for an OnPrem platform
          example:
            OpenShift:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          type: object
        operatorCRDConfiguration:
          $ref: "#/components/schemas/OperatorCRDConfiguration"
        productTierId:
          description: ID of a Product Tier
          example: Repellendus et quaerat laudantium neque id et.
          type: string
        proxyType:
          default: PortsBasedProxy
          description: A proxy type of resource
          example: PortsBasedProxy
          type: string
        resourceDependencies:
          example:
          - parameterMap:
              userDatabase: clusterOrg
              writerId: clusterWriterId
            resourceId: r-12345678
          - parameterMap:
              readerId: clusterReaderId
              userDatabase: clusterOrg
            resourceId: r-abcdef12
          items:
            $ref: "#/components/schemas/ResourceDependency"
          type: array
        resourceType:
          description: The type of the resource
          example: '|Generic|PortsBasedProxy|L4LoadBalancer|L7LoadBalancer|FileSystem|OperatorCRD|HelmChart|Kustomize'
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        terraformConfigurations:
          additionalProperties:
            $ref: "#/components/schemas/TerraformConfiguration"
          description: The Terraform configurations for cloud providers
          example:
            aws:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          type: object
        token:
          description: JWT token used to perform authorization
          example: d
          minLength: 1
          type: string
      required:
      - description
      - name
      - productTierId
      - serviceId
      - token
      type: object
    CreateResourceRequest2:
      example:
        additionalSecurityContext:
          AddCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          DropCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          SupplementalGroupIDs:
          - 1001
          - 999
        agentConfiguration:
          codeInterpreter:
            allowedPackages:
            - pandas
            - numpy
            - matplotlib
            enabled: true
            provider: agentcore
            timeout: 60
          dockerfile: Dockerfile
          evaluations:
          - metrics:
            - relevance
            - helpfulness
            name: response-quality
            schedule: every 6 hours
          memory:
            enabled: true
          monitoring:
            enabled: true
          vectorStore:
            enabled: true
        backupConfiguration:
          backupPeriodInHours: 24
          backupRetentionInDays: 7
        blobStorageConfiguration:
          GCSConfiguration: {}
          S3Configuration: {}
        containerImagesRegistryCopyConfiguration:
          images:
          - imageName: postgres
            imageTag: "16"
          - imageName: postgres
            imageTag: "16"
          - imageName: postgres
            imageTag: "16"
          - imageName: postgres
            imageTag: "16"
          pullSource:
            credentials:
              password: my-password
              username: my-user
            registryURL: https://my-registry.com
            repositoryName: library
          pushTarget:
            credentials:
              password: my-password
              username: my-user
            registryURL: https://my-registry.com
            repositoryName: library
        customLabels:
          key: value
        customSysCTLs:
          net.ipv4.tcp_syncookies: "1"
        customULimits:
        - ULimitsName: NoProc
          ULimitsType: Soft
          ULimitsValue: 1000
        - ULimitsName: NoFile
          ULimitsType: Hard
          ULimitsValue: 2048
        description: A resource to manage a hosted public SaaS offering of a multi-writer
          MySQL service
        disable: "{{ $var.disableExtraComponents }}"
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        fileSystemConfiguration:
          EFSFileSystemConfiguration:
            PerformanceMode: generalPurpose|maxIO
            ProvisionedThroughputInMibps: 125
            ThroughputMode: provisioned|bursting|elastic
          GCPFilestoreConfiguration:
            Capacity: 1024GiB
            MaxIopsPerTb: 3000
            Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
        helmChartConfiguration:
          autoDiscoverImagesTag: omnistrate/images
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          layeredChartValues:
          - values:
              global:
                image:
                  tag: v1.0.0
                replicaCount: 1
                resources:
                  requests:
                    cpu: 100m
                    memory: 128Mi
          - scope:
              '{{ $sys.cloudProviderName }}': aws
            valuesFile:
              gitConfiguration:
                accessToken: ghp_...
                commitSHA: a1b2c3d4e5f6
                path: aws/production.yaml
                referenceName: refs/heads/main
                repositoryUrl: https://github.com/org/helm-values
          namespace: postgres
          password: my-password
          releaseName: my-release
          runtimeConfiguration:
            disableHooks: true
            recreate: true
            resetThenReuseValues: true
            resetValues: true
            reuseValues: true
            skipCRDs: true
            timeoutNanos: 1000000000
            upgradeCRDs: true
            wait: true
            waitForJobs: true
          username: my-user
        imageConfigId: Quas consequatur tempora illum animi dolore consequatur.
        infraConfigId: Sint sed iste voluptatem.
        internal: false
        isProxy: true
        jobConfig:
          activeDeadlineSeconds: 300
          backoffLimit: 5
        key: galera
        kustomizeConfiguration:
          disableReconciliation: false
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          gitConfiguration:
            accessToken: my-token
            commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
            referenceName: tags/v1.0.0
            repositoryUrl: https://github.com/username/myrepo
            userName: my-user
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          kustomizePath: /kustomize
        l4LoadBalancerConfiguration:
          ingressPortConfiguration:
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8080
            ingressPort: 1234
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8081
            ingressPort: 5678
          - associatedResourceIDs:
            - r-vwxybz12
            - r-poij122v
            backendPort: 8082
            ingressPort: 9012
        l7LoadBalancerConfiguration:
          paths:
          - associatedResourceID: r-12345678
            path: /path
            port: 8080
        name: Galera
        onPremTerraformConfigurations:
          OpenShift:
            gitConfiguration:
              referenceName: ref
              repositoryUrl: gitUrl
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
        operatorCRDConfiguration:
          disableReconciliation: true
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          outputParameters:
            expiresAt: $out.status.notAfter
            issuerName: letsencrypt-prod
          readinessConditions:
            $out.status.conditions[?(@.type=='Ready')].status: true
          supplementalFiles:
          - |
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
          - |-
            apiVersion: ingress.nginx.io/v1
            kind: IngressClass
            metadata:
              name: nginx
            spec:
              controller: nginx.org/ingress-controller
          template: |-
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
                email: test@example.com
                privateKeySecretRef:
                  name: letsencrypt-prod
                solvers:
                - http01:
                    ingress:
                      class: nginx
        productTierId: Vel ea.
        proxyType: PortsBasedProxy
        resourceDependencies:
        - parameterMap:
            userDatabase: clusterOrg
            writerId: clusterWriterId
          resourceId: r-12345678
        - parameterMap:
            readerId: clusterReaderId
            userDatabase: clusterOrg
          resourceId: r-abcdef12
        resourceType: '|Generic|PortsBasedProxy|L4LoadBalancer|L7LoadBalancer|FileSystem|OperatorCRD|HelmChart|Kustomize'
        terraformConfigurations:
          aws:
            gitConfiguration:
              referenceName: ref
              repositoryUrl: gitUrl
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
      properties:
        additionalSecurityContext:
          $ref: "#/components/schemas/AdditionalSecurityContext"
        agentConfiguration:
          $ref: "#/components/schemas/AgentConfiguration"
        backupConfiguration:
          $ref: "#/components/schemas/BackupConfiguration"
        blobStorageConfiguration:
          $ref: "#/components/schemas/BlobStorageConfiguration"
        containerImagesRegistryCopyConfiguration:
          $ref: "#/components/schemas/ContainerImagesRegistryCopyConfiguration"
        customLabels:
          additionalProperties:
            example: Adipisci sed aliquid porro.
            type: string
          description: Custom labels for the resource
          example:
            key: value
          type: object
        customSysCTLs:
          additionalProperties:
            example: A hic minima.
            type: string
          description: Custom sysctl settings for the resource
          example:
            net.ipv4.tcp_syncookies: "1"
          type: object
        customULimits:
          description: Custom ulimits for the resource
          example:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          items:
            $ref: "#/components/schemas/CustomULimits"
          type: array
        description:
          description: A brief description of the resource
          example: A resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          type: string
        disable:
          description: "Allows resource to be disabled. Expression returning true/false\
            \ can be used as value. Resource is enabled by default, if this property\
            \ is not set."
          example: "{{ $var.disableExtraComponents }}"
          type: string
        environmentVariables:
          description: The environment variables that this resource requires
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: "#/components/schemas/EnvironmentVariable"
          type: array
        fileSystemConfiguration:
          $ref: "#/components/schemas/FileSystemConfiguration"
        helmChartConfiguration:
          $ref: "#/components/schemas/HelmChartConfiguration"
        imageConfigId:
          description: The ID of the image configuration that this resource refers
            to
          example: Dolor qui accusamus nesciunt.
          type: string
        infraConfigId:
          description: The ID of the infrastructure configuration that this resource
            refers to
          example: Aut suscipit minus est placeat.
          type: string
        internal:
          default: false
          description: Whether this resource is internal or not
          example: false
          type: boolean
        isProxy:
          default: false
          description: Whether this resource is a proxy or not
          example: false
          type: boolean
        jobConfig:
          $ref: "#/components/schemas/JobConfig"
        key:
          description: The key of the resource
          example: galera
          type: string
        kustomizeConfiguration:
          $ref: "#/components/schemas/KustomizeConfiguration"
        l4LoadBalancerConfiguration:
          $ref: "#/components/schemas/L4LoadBalancerConfiguration"
        l7LoadBalancerConfiguration:
          $ref: "#/components/schemas/L7LoadBalancerConfiguration"
        name:
          description: Name of the resource
          example: Galera
          type: string
        onPremTerraformConfigurations:
          additionalProperties:
            $ref: "#/components/schemas/TerraformConfiguration"
          description: The Terraform configurations for various OnPrem platforms
          example:
            OpenShift:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          type: object
        operatorCRDConfiguration:
          $ref: "#/components/schemas/OperatorCRDConfiguration"
        productTierId:
          description: The product tier ID
          example: Esse expedita atque eaque neque.
          type: string
        proxyType:
          default: PortsBasedProxy
          description: A proxy type of resource
          example: PortsBasedProxy
          type: string
        resourceDependencies:
          example:
          - parameterMap:
              userDatabase: clusterOrg
              writerId: clusterWriterId
            resourceId: r-12345678
          - parameterMap:
              readerId: clusterReaderId
              userDatabase: clusterOrg
            resourceId: r-abcdef12
          items:
            $ref: "#/components/schemas/ResourceDependency"
          type: array
        resourceType:
          description: The type of the resource
          example: '|Generic|PortsBasedProxy|L4LoadBalancer|L7LoadBalancer|FileSystem|OperatorCRD|HelmChart|Kustomize'
          type: string
        terraformConfigurations:
          additionalProperties:
            $ref: "#/components/schemas/TerraformConfiguration"
          description: The Terraform configurations for various cloud providers
          example:
            aws:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          type: object
      required:
      - description
      - name
      - productTierId
      type: object
    CreateSaaSPortalCustomDomainRequest:
      example:
        customDomain: mycustomdomain.com
        description: My custom domain description
        environmentType: DEV
        name: MyCustomDomain
        token: 2qc
      properties:
        customDomain:
          description: The custom domain
          example: mycustomdomain.com
          type: string
        description:
          description: The custom domain description
          example: My custom domain description
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        name:
          description: The custom domain name
          example: MyCustomDomain
          type: string
        token:
          description: JWT token used to perform authorization
          example: xx
          minLength: 1
          type: string
      required:
      - customDomain
      - description
      - environmentType
      - name
      - token
      type: object
    CreateSaaSPortalCustomDomainRequest2:
      example:
        customDomain: mycustomdomain.com
        description: My custom domain description
        environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
        name: MyCustomDomain
      properties:
        customDomain:
          description: The custom domain
          example: mycustomdomain.com
          type: string
        description:
          description: The custom domain description
          example: My custom domain description
          type: string
        environmentType:
          description: The environment type for the custom domain
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        name:
          description: The custom domain name
          example: MyCustomDomain
          type: string
      required:
      - customDomain
      - description
      - environmentType
      - name
      type: object
    CreateServiceAPIRequest:
      example:
        description: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
          for high availability
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        token: ydy
      properties:
        description:
          description: A brief description of the service API bundle
          example: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
            for high availability
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 5pq
          minLength: 1
          type: string
      required:
      - description
      - serviceEnvironmentId
      - serviceId
      - token
      type: object
    CreateServiceAPIRequest2:
      example:
        description: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
          for high availability
        serviceEnvironmentId: se-123456
      properties:
        description:
          description: A brief description of the service API bundle
          example: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
            for high availability
          type: string
        serviceEnvironmentId:
          description: The service environment ID
          example: se-123456
          type: string
      required:
      - description
      - serviceEnvironmentId
      type: object
    CreateServiceEnvironmentRequest:
      example:
        autoApproveSubscription: false
        deploymentConfigId: dc-12345678
        description: The production environment for the MySQL multi-writer service
        name: Production
        serviceAuthPublicKey: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        serviceId: s-12345678
        sourceEnvironmentId: se-12345678
        token: 4si
        type: DEV
        visibility: PUBLIC
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        deploymentConfigId:
          description: ID of a Deployment Config
          example: Eaque voluptatum.
          type: string
        description:
          description: A brief description of the service environment
          example: The production environment for the MySQL multi-writer service
          type: string
        name:
          description: Name of the Service Environment
          example: Production
          type: string
        serviceAuthPublicKey:
          description: PEM-encoded Public key part of the key used to sign the JWT
            tokens for the service control plane APIs
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ba
          minLength: 1
          type: string
        type:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - deploymentConfigId
      - description
      - name
      - serviceId
      - token
      type: object
    CreateServiceEnvironmentRequest2:
      example:
        autoApproveSubscription: false
        deploymentConfigId: Nam illum harum.
        description: The production environment for the MySQL multi-writer service
        name: Production
        serviceAuthPublicKey: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        sourceEnvironmentId: se-123456
        type: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
        visibility: PUBLIC
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        deploymentConfigId:
          description: The deployment configuration ID
          example: Aut officiis dolorem.
          type: string
        description:
          description: A brief description of the service environment
          example: The production environment for the MySQL multi-writer service
          type: string
        name:
          description: Name of the Service Environment
          example: Production
          type: string
        serviceAuthPublicKey:
          description: PEM-encoded Public key part of the key used to sign the JWT
            tokens for the service control plane APIs
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        sourceEnvironmentId:
          description: The ID of the service environment to use for promoting changes
            to this environment
          example: se-123456
          type: string
        type:
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - deploymentConfigId
      - description
      - name
      type: object
    CreateServiceFromComposeSpecRequest:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        fileContent: Tempora culpa enim nostrum est enim non.
        fileFormat: text/plain
        fileName: mysql.yaml
        name: MySQL multi-writer service
        serviceLogoURL: http://streich.name/jessica.stamm
        token: 2q
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        fileContent:
          description: Base64 encoded Compose Spec YAML in docker compose format
          example: Quis suscipit quos earum ducimus.
          type: string
        fileFormat:
          description: MIME type of file format
          example: text/plain
          type: string
        fileName:
          description: Name of compose spec YAML file that is uploaded
          example: mysql.yaml
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: http://thompson.info/imelda
          format: uri
          type: string
        token:
          description: JWT token used to perform authorization
          example: 6a
          minLength: 1
          type: string
      required:
      - description
      - fileContent
      - fileFormat
      - fileName
      - name
      - token
      type: object
    CreateServiceFromComposeSpecRequest2:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        fileContent: Perferendis sunt quia.
        fileFormat: text/plain
        fileName: mysql.yaml
        name: MySQL multi-writer service
        serviceLogoURL: http://yost.biz/vaughn.kihn
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        fileContent:
          description: Base64 encoded Compose Spec YAML in docker compose format
          example: Non esse atque.
          type: string
        fileFormat:
          description: MIME type of file format
          example: text/plain
          type: string
        fileName:
          description: Name of compose spec YAML file that is uploaded
          example: mysql.yaml
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: http://little.info/lennie
          format: uri
          type: string
      required:
      - description
      - fileContent
      - fileFormat
      - fileName
      - name
      type: object
    CreateServiceModelRequest:
      example:
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        features:
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        modelType: CUSTOMER_HOSTED
        name: MySQL multi-writer service hosted model
        serviceApiId: sa-12345678
        serviceId: s-12345678
        token: nf
      properties:
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            description: ID of an Account Config
            example: Repudiandae quam.
            type: string
          type: array
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        features:
          description: Enabled service model features
          example:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          items:
            $ref: "#/components/schemas/ServiceModelFeatureDetail"
          type: array
        modelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        serviceApiId:
          description: ID of a Service API
          example: Minus accusamus pariatur.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "21"
          minLength: 1
          type: string
      required:
      - description
      - modelType
      - name
      - serviceApiId
      - serviceId
      - token
      type: object
    CreateServiceModelRequest2:
      example:
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        features:
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        modelType: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
        name: MySQL multi-writer service hosted model
        serviceApiId: Qui rerum dolorem.
      properties:
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            example: Aliquid laborum est exercitationem.
            type: string
          type: array
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        features:
          description: Enabled service model features
          example:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          items:
            $ref: "#/components/schemas/ServiceModelFeatureDetail"
          type: array
        modelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        serviceApiId:
          description: The service API this model is for
          example: Doloribus quos ullam nobis.
          type: string
      required:
      - description
      - modelType
      - name
      - serviceApiId
      type: object
    CreateServiceRequest:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        name: MySQL multi-writer service
        serviceLogoURL: http://rutherford.info/wilma.schumm
        token: c8z
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: http://johnson.com/wilma.weissnat
          format: uri
          type: string
        token:
          description: JWT token used to perform authorization
          example: "7"
          minLength: 1
          type: string
      required:
      - description
      - name
      - token
      type: object
    CreateServiceRequest2:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        name: MySQL multi-writer service
        serviceLogoURL: http://veum.com/clementina
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: http://mclaughlin.biz/dustin.wiegand
          format: uri
          type: string
      required:
      - description
      - name
      type: object
    CreateServicesOrchestrationRequest:
      example:
        orchestrationCreateDSL: Nam odit voluptates.
        token: u
      properties:
        orchestrationCreateDSL:
          description: base64 encoded content of service orchestration create DSL
          example: Officiis quas.
          type: string
        token:
          description: JWT token used to perform authorization
          example: w8
          minLength: 1
          type: string
      required:
      - orchestrationCreateDSL
      - token
      type: object
    CreateServicesOrchestrationRequest2:
      example:
        orchestrationCreateDSL: Deserunt doloribus accusantium necessitatibus quam
          voluptatem.
      properties:
        orchestrationCreateDSL:
          description: base64 encoded content of service orchestration create DSL
          example: Est nulla porro est velit blanditiis.
          type: string
      required:
      - orchestrationCreateDSL
      type: object
    CreateServicesOrchestrationResponseBody:
      example:
        id: Cum quis.
      properties:
        id:
          description: Services Orchestration Id
          example: Inventore dolorem ut consequatur.
          type: string
      type: object
    CreateStorageConfigRequest:
      example:
        description: my-storage-config-description
        name: my-storage-config
        serviceId: s-12345678
        token: v
      properties:
        description:
          description: Description of the storage config
          example: my-storage-config-description
          minLength: 1
          type: string
        name:
          description: Name of the storage config
          example: my-storage-config
          minLength: 1
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: g15
          minLength: 1
          type: string
      required:
      - description
      - name
      - serviceId
      - token
      type: object
    CreateStorageConfigRequest2:
      example:
        description: my-storage-config-description
        name: my-storage-config
      properties:
        description:
          description: Description of the storage config
          example: my-storage-config-description
          minLength: 1
          type: string
        name:
          description: Name of the storage config
          example: my-storage-config
          minLength: 1
          type: string
      required:
      - description
      - name
      type: object
    CreateStorageVolumeConfigRequest:
      example:
        clusterStorageType: S3|$var.storageType|AWS::EFS
        description: A storage volume set to store the MySQL data directory
        disableBackup: false
        instanceStorageIops: $var.storageIops
        instanceStorageSizeGi: $var.storage_size
        instanceStorageThroughputMiBps: "128"
        instanceStorageType: $var.storageType
        name: MySQL Data Volume
        serviceId: s-12345678
        storageResourceID: r-12345678
        token: "8"
      properties:
        clusterStorageType:
          description: The type of the fixed storage for the cluster
          example: S3|$var.storageType|AWS::EFS
          type: string
        description:
          description: A brief description of the context for the storage volume pool
          example: A storage volume set to store the MySQL data directory
          type: string
        disableBackup:
          description: Disable backup for the storage volume
          example: false
          type: boolean
        instanceStorageIops:
          description: The IOPS provisioned for the configured instance storage type
          example: $var.storageIops
          type: string
        instanceStorageSizeGi:
          description: The storage size (in Gi) provisioned for the configured instance
            storage type
          example: $var.storage_size
          type: string
        instanceStorageThroughputMiBps:
          description: The throughput (in MiBps) provisioned for the configured instance
            storage type
          example: "128"
          type: string
        instanceStorageType:
          description: The type of the storage for a compute instance
          example: $var.storageType
          type: string
        name:
          description: Name of the storage volume pool
          example: MySQL Data Volume
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        storageResourceID:
          description: The storage resource ID
          example: r-12345678
          type: string
        token:
          description: JWT token used to perform authorization
          example: r
          minLength: 1
          type: string
      required:
      - description
      - name
      - serviceId
      - token
      type: object
    CreateStorageVolumeConfigRequest2:
      example:
        clusterStorageType: S3|$var.storageType|AWS::EFS
        description: A storage volume set to store the MySQL data directory
        disableBackup: false
        instanceStorageIops: $var.storageIops
        instanceStorageSizeGi: $var.storage_size
        instanceStorageThroughputMiBps: "128"
        instanceStorageType: $var.storageType
        name: MySQL Data Volume
        storageResourceID: r-12345678
      properties:
        clusterStorageType:
          description: The type of the fixed storage for the cluster
          example: S3|$var.storageType|AWS::EFS
          type: string
        description:
          description: A brief description of the context for the storage volume pool
          example: A storage volume set to store the MySQL data directory
          type: string
        disableBackup:
          description: Disable backup for the storage volume
          example: false
          type: boolean
        instanceStorageIops:
          description: The IOPS provisioned for the configured instance storage type
          example: $var.storageIops
          type: string
        instanceStorageSizeGi:
          description: The storage size (in Gi) provisioned for the configured instance
            storage type
          example: $var.storage_size
          type: string
        instanceStorageThroughputMiBps:
          description: The throughput (in MiBps) provisioned for the configured instance
            storage type
          example: "128"
          type: string
        instanceStorageType:
          description: The type of the storage for a compute instance
          example: $var.storageType
          type: string
        name:
          description: Name of the storage volume pool
          example: MySQL Data Volume
          type: string
        storageResourceID:
          description: The storage resource ID
          example: r-12345678
          type: string
      required:
      - description
      - name
      type: object
    CreateSubscriptionRequest:
      example:
        productTierId: pt-12345678
        serviceId: s-12345678
        token: "8"
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Eius numquam culpa saepe iure dolorem.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: pyf
          minLength: 1
          type: string
      required:
      - productTierId
      - serviceId
      - token
      type: object
    CreateSubscriptionRequest2:
      example:
        productTierId: Eos architecto ab quia harum quia ipsam.
        serviceId: s-123456
      properties:
        productTierId:
          description: The product tier ID
          example: Harum nesciunt recusandae.
          type: string
        serviceId:
          description: The service ID
          example: s-123456
          type: string
      required:
      - productTierId
      - serviceId
      type: object
    CreateSubscriptionRequestRequest:
      example:
        productTierId: pt-12345678
        serviceId: s-12345678
        token: rws
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Suscipit ad ex officiis in quibusdam officiis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: q
          minLength: 1
          type: string
      required:
      - productTierId
      - serviceId
      - token
      type: object
    CreateSubscriptionRequestRequest2:
      example:
        productTierId: Rerum tempora perferendis.
        serviceId: s-123456
      properties:
        productTierId:
          description: The product tier ID
          example: Eius harum itaque ex ullam.
          type: string
        serviceId:
          description: The service ID
          example: s-123456
          type: string
      required:
      - productTierId
      - serviceId
      type: object
    CreateTierVersionSetRequest:
      example:
        description: Sunt voluptas.
        name: Major version set
        parentVersion: "2.0"
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: h
        type: Major|Incremental|UserDefined
      properties:
        description:
          description: A brief description of the product-tier version set.
          example: Temporibus et fuga.
          type: string
        name:
          description: The name of the product-tier version set.
          example: Major version set
          type: string
        parentVersion:
          description: The parent version of this version set.
          example: "2.0"
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Illo autem rem.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: s3
          minLength: 1
          type: string
        type:
          description: The version-set type of the product-tier.
          example: Major|Incremental|UserDefined
          type: string
      required:
      - productTierId
      - serviceId
      - token
      - type
      type: object
    CreateTierVersionSetRequest2:
      example:
        description: Pariatur in qui velit laborum distinctio earum.
        name: Major version set
        parentVersion: "2.0"
        type: Major|Incremental|UserDefined
      properties:
        description:
          description: A brief description of the product-tier version set.
          example: Id hic minima esse non aliquam.
          type: string
        name:
          description: The name of the product-tier version set.
          example: Major version set
          type: string
        parentVersion:
          description: The parent version of this version set.
          example: "2.0"
          type: string
        type:
          description: The version-set type of the product-tier.
          example: Major|Incremental|UserDefined
          type: string
      required:
      - type
      type: object
    CreateTierVersionSetResult:
      example:
        version: "3.0"
      properties:
        version:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
      required:
      - version
      type: object
    CreateUpgradePathRequest:
      example:
        description: An upgrade path migrating clusters from one LTS version to another
        name: LTS upgrade path
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        sourceVersion: "567.0"
        targetVersion: "589.0"
        token: lh
      properties:
        description:
          description: A brief description of the upgrade path
          example: An upgrade path migrating clusters from one LTS version to another
          type: string
        name:
          description: Name of the upgrade path
          example: LTS upgrade path
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceVersion:
          description: Version of the Entity to operate on
          example: "1.0"
          minLength: 1
          type: string
        targetVersion:
          description: Version of the Entity to operate on
          example: "1.0"
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: bv8
          minLength: 1
          type: string
      required:
      - description
      - name
      - serviceEnvironmentId
      - sourceVersion
      - targetVersion
      - token
      type: object
    CustomDNSEndpoint:
      example:
        aRecordTarget: 1.1.1.1
        cnameTarget: cname-target.com
        dnsHost: https://my-custom-endpoint.com
        dnsName: https://my-custom-endpoint.com
        enabled: true
        name: DNS to access the dashboard
        status: READY
      properties:
        aRecordTarget:
          example: 1.1.1.1
          type: string
        cnameTarget:
          example: cname-target.com
          type: string
        dnsHost:
          example: https://my-custom-endpoint.com
          type: string
        dnsName:
          description: "DEPRECATED: Use dnsHost instead"
          example: https://my-custom-endpoint.com
          type: string
        enabled:
          example: true
          type: boolean
        name:
          example: DNS to access the dashboard
          type: string
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
      required:
      - enabled
      type: object
    CustomDomain:
      example:
        clusterEndpoint: example.com
        customDomain: mycustomdomain.com
        description: My custom domain description
        environmentType: DEV
        name: MyCustomDomain
        status: READY
      properties:
        clusterEndpoint:
          description: The cluster endpoint for the saas portal instance
          example: example.com
          type: string
        customDomain:
          description: The custom domain
          example: mycustomdomain.com
          type: string
        description:
          description: The custom domain description
          example: My custom domain description
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        name:
          description: The custom domain name
          example: MyCustomDomain
          type: string
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
      required:
      - clusterEndpoint
      - customDomain
      - description
      - environmentType
      - name
      - status
      type: object
    CustomDomainIdentityIDRequest:
      example:
        token: q7t
      properties:
        token:
          description: JWT token used to perform authorization
          example: 0om
          minLength: 1
          type: string
      required:
      - token
      type: object
    CustomDomainIdentityIDResult:
      example:
        id: org-12345678
      properties:
        id:
          description: ID of an Org
          example: Qui deleniti voluptas totam quaerat.
          type: string
      required:
      - id
      type: object
    CustomImageCommandsAndArgs:
      description: Commands and arguments to run in the container
      example:
        args:
        - -d
        - mysql
        commands:
        - echo
        - "Hello, World!"
      properties:
        args:
          description: Arguments to pass to the container
          example:
          - -d
          - mysql
          items:
            example: Blanditiis molestias.
            type: string
          type: array
        commands:
          description: Commands to run in the container
          example:
          - echo
          - "Hello, World!"
          items:
            example: Deleniti ipsa accusantium.
            type: string
          type: array
      type: object
    CustomNetwork:
      example:
        cidr: 10.0.0.0/16
        cloudProviderName: aws
        cloudProviderRegion: us-east-1
        id: n-12345678
        name: Prod us-east-1
        networkDefinitionType: Custom
        networkFeaturesConfiguration:
          isPrivateLinkEnabled: true
        networkInstances:
        - awsAccountID: "123456789012"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          cloudProviderNativeNetworkId: vpc-12345678
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          hostClusterID: hc-12345678
        - awsAccountID: "123456789012"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          cloudProviderNativeNetworkId: vpc-12345678
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          hostClusterID: hc-12345678
        - awsAccountID: "123456789012"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          cloudProviderNativeNetworkId: vpc-12345678
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          hostClusterID: hc-12345678
        owningUserId: user-12345678
        owningUserName: John Doe
        status: Ready
      properties:
        cidr:
          default: 10.0.0.0/16
          description: CIDR block for the network
          example: 10.0.0.0/16
          type: string
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        cloudProviderRegion:
          description: The region of the cloud provider that the instance is running
            in.
          example: us-east-1
          type: string
        id:
          description: ID of a custom network
          example: Cupiditate molestiae dolorem dolorum maxime.
          type: string
        name:
          description: User friendly network name to help distinguish networks with
            same CIDRs
          example: Prod us-east-1
          type: string
        networkDefinitionType:
          description: Type of the network definition
          example: Default|Custom|Imported
          type: string
        networkFeaturesConfiguration:
          $ref: "#/components/schemas/NetworkFeaturesConfiguration"
        networkInstances:
          description: List of network instances created within this custom network
          example:
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          items:
            $ref: "#/components/schemas/CustomNetworkInstance"
          type: array
        owningUserId:
          description: ID of a User
          example: Iste ea.
          type: string
        owningUserName:
          description: The name of the user that created and owns the custom network
          example: John Doe
          type: string
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
      required:
      - cloudProviderName
      - cloudProviderRegion
      - id
      type: object
    CustomNetworkInstance:
      example:
        awsAccountID: "123456789012"
        azureSubscriptionID: 12345678-1234-1234-1234-123456789012
        azureTenantID: 12345678-1234-1234-1234-123456789012
        cloudProviderNativeNetworkId: vpc-12345678
        gcpProjectID: my-project
        gcpProjectNumber: "123456789012"
        hostClusterID: hc-12345678
      properties:
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        azureTenantID:
          description: The Azure tenant ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        cloudProviderNativeNetworkId:
          description: The ID of the network within cloud provider account
          example: vpc-12345678
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        gcpProjectNumber:
          description: The GCP project number
          example: "123456789012"
          type: string
        hostClusterID:
          description: ID of a Host Cluster
          example: Quia aut dolorem ab placeat et.
          type: string
      type: object
    CustomNetworkResourceDetail:
      description: Details of custom network used for instance
      example:
        cidr: 10.177.0.0/16
        id: n-12345678
        name: Prod us-east-1
      properties:
        cidr:
          description: CIDR block of the network
          example: 10.177.0.0/16
          type: string
        id:
          description: ID of a custom network
          example: Dolorum porro sed labore enim deleniti a.
          type: string
        name:
          description: User friendly network name
          example: Prod us-east-1
          type: string
      type: object
    CustomTag:
      description: Custom tag
      example:
        key: customKey
        value: customValue
      properties:
        key:
          description: Key of the custom tag
          example: customKey
          type: string
        value:
          description: Value of the custom tag
          example: customValue
          type: string
      required:
      - key
      - value
      type: object
    CustomULimits:
      example:
        ULimitsName: nofile
        ULimitsType: Soft
        ULimitsValue: 1000
      properties:
        ULimitsName:
          description: The name of the ulimit
          example: core|nofile|rss|stack|nproc|msgqueue
          type: string
        ULimitsType:
          example: Soft|Hard
          type: string
        ULimitsValue:
          description: The value of the ulimit
          example: 1000
          format: int64
          type: integer
      required:
      - ULimitsName
      - ULimitsType
      - ULimitsValue
      type: object
    CustomerBillingProvider:
      example:
        balanceDueLink: https://billing.provider.com/balance-due
        logoURL: https://example.com/logo.png
        name: Stripe
        paymentConfigurable: true
        paymentConfigured: true
        paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
        type: STRIPE
      properties:
        balanceDueLink:
          description: The URL to the balance due page. Only present when the payment
            channel is BRING_YOUR_OWN
          example: https://billing.provider.com/balance-due
          type: string
        logoURL:
          description: The URL of the logo for the payment channel. Only present when
            the payment channel is BRING_YOUR_OWN
          example: https://example.com/logo.png
          type: string
        name:
          description: A custom name for the payment channel
          example: Stripe
          type: string
        paymentConfigurable:
          description: Whether the payment channel payment information can be configured.
          example: true
          type: boolean
        paymentConfigured:
          description: Whether the customer has configured their payment information.
          example: true
          type: boolean
        paymentInfoPortalURL:
          description: The URL from the billing provide to redirect users to so they
            can enter their payment information.  Only present when first adding payment
            information
          example: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
          type: string
        type:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
      required:
      - type
      type: object
    CustomerDeleteUserRequest:
      example:
        token: tat
      properties:
        token:
          description: JWT token used to perform authorization
          example: s
          minLength: 1
          type: string
      required:
      - token
      type: object
    CustomerInviteUserRequest:
      example:
        email: abc@example.com
        token: 9g
      properties:
        email:
          example: abc@example.com
          format: email
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: ho
          minLength: 1
          type: string
      required:
      - email
      - token
      type: object
    CustomerInviteUserRequest2:
      example:
        email: abc@example.com
      properties:
        email:
          example: abc@example.com
          format: email
          minLength: 1
          type: string
      required:
      - email
      type: object
    CustomerListTierVersionSetsRequest:
      example:
        nextPageToken: token
        pageSize: 10
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: 4fp
      properties:
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        productTierId:
          description: ID of a Product Tier
          example: In rerum veritatis minima dolorum aut consequatur.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 2s
          minLength: 1
          type: string
      required:
      - productTierId
      - serviceId
      - token
      type: object
    CustomerListTierVersionSetsResult:
      example:
        nextPageToken: next-token
        tierVersionSets:
        - autoApproveSubscription: false
          baseVersion: "3.0"
          createdAt: 2020-01-01T00:00:00Z
          createdBy: John Doe
          description: Labore facilis officia placeat autem optio porro.
          enabledFeatures:
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          features:
            LOGS: true
            METRICS: false
          instanceCount: 12
          latestUpgradePathId: upgrade-12345678
          name: Regular version set
          parentVersion: "2.0"
          productTierId: Beatae beatae.
          releasedAt: 2020-01-01T00:00:00Z
          releasedBy: John Doe
          resources:
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
            urlKey: myResource
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
            urlKey: myResource
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
            urlKey: myResource
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
            urlKey: myResource
          serviceId: s-12345678
          serviceModelId: Deserunt ab est sequi rem ab in.
          status: Preferred|Active|Deprecated|Pending
          type: Major|Incremental|UserDefined
          updatedAt: 2020-01-01T00:00:00Z
          version: "3.0"
        - autoApproveSubscription: false
          baseVersion: "3.0"
          createdAt: 2020-01-01T00:00:00Z
          createdBy: John Doe
          description: Labore facilis officia placeat autem optio porro.
          enabledFeatures:
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          features:
            LOGS: true
            METRICS: false
          instanceCount: 12
          latestUpgradePathId: upgrade-12345678
          name: Regular version set
          parentVersion: "2.0"
          productTierId: Beatae beatae.
          releasedAt: 2020-01-01T00:00:00Z
          releasedBy: John Doe
          resources:
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
            urlKey: myResource
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
            urlKey: myResource
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
            urlKey: myResource
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
            urlKey: myResource
          serviceId: s-12345678
          serviceModelId: Deserunt ab est sequi rem ab in.
          status: Preferred|Active|Deprecated|Pending
          type: Major|Incremental|UserDefined
          updatedAt: 2020-01-01T00:00:00Z
          version: "3.0"
      properties:
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        tierVersionSets:
          description: List of product-tier version sets.
          example:
          - autoApproveSubscription: false
            baseVersion: "3.0"
            createdAt: 2020-01-01T00:00:00Z
            createdBy: John Doe
            description: Labore facilis officia placeat autem optio porro.
            enabledFeatures:
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            features:
              LOGS: true
              METRICS: false
            instanceCount: 12
            latestUpgradePathId: upgrade-12345678
            name: Regular version set
            parentVersion: "2.0"
            productTierId: Beatae beatae.
            releasedAt: 2020-01-01T00:00:00Z
            releasedBy: John Doe
            resources:
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            serviceId: s-12345678
            serviceModelId: Deserunt ab est sequi rem ab in.
            status: Preferred|Active|Deprecated|Pending
            type: Major|Incremental|UserDefined
            updatedAt: 2020-01-01T00:00:00Z
            version: "3.0"
          - autoApproveSubscription: false
            baseVersion: "3.0"
            createdAt: 2020-01-01T00:00:00Z
            createdBy: John Doe
            description: Labore facilis officia placeat autem optio porro.
            enabledFeatures:
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            features:
              LOGS: true
              METRICS: false
            instanceCount: 12
            latestUpgradePathId: upgrade-12345678
            name: Regular version set
            parentVersion: "2.0"
            productTierId: Beatae beatae.
            releasedAt: 2020-01-01T00:00:00Z
            releasedBy: John Doe
            resources:
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            serviceId: s-12345678
            serviceModelId: Deserunt ab est sequi rem ab in.
            status: Preferred|Active|Deprecated|Pending
            type: Major|Incremental|UserDefined
            updatedAt: 2020-01-01T00:00:00Z
            version: "3.0"
          - autoApproveSubscription: false
            baseVersion: "3.0"
            createdAt: 2020-01-01T00:00:00Z
            createdBy: John Doe
            description: Labore facilis officia placeat autem optio porro.
            enabledFeatures:
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            features:
              LOGS: true
              METRICS: false
            instanceCount: 12
            latestUpgradePathId: upgrade-12345678
            name: Regular version set
            parentVersion: "2.0"
            productTierId: Beatae beatae.
            releasedAt: 2020-01-01T00:00:00Z
            releasedBy: John Doe
            resources:
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            serviceId: s-12345678
            serviceModelId: Deserunt ab est sequi rem ab in.
            status: Preferred|Active|Deprecated|Pending
            type: Major|Incremental|UserDefined
            updatedAt: 2020-01-01T00:00:00Z
            version: "3.0"
          items:
            $ref: "#/components/schemas/TierVersionSet"
          type: array
      required:
      - tierVersionSets
      type: object
    CustomerLoginWithIdentityProviderRequest:
      example:
        authorizationCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        environmentType: DEV
        identityProviderName: Google
        invitedEmail: abc@gmail.com
        legalCompanyName: mywebsite
        redirectUri: https://www.example/redirect
        state: state
        token: "23"
      properties:
        authorizationCode:
          description: The authorization code from the Identity Provider
          example: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
          type: string
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        invitedEmail:
          description: Email address that the user was invited with
          example: abc@gmail.com
          format: email
          type: string
        legalCompanyName:
          example: mywebsite
          minLength: 1
          type: string
        redirectUri:
          description: The redirect URI used to get the authorization code
          example: https://www.example/redirect
          type: string
        state:
          description: The state parameter used to prevent CSRF attacks
          example: state
          type: string
        token:
          description: JWT token used to perform authorization
          example: "6"
          minLength: 1
          type: string
      required:
      - authorizationCode
      - token
      type: object
    CustomerLoginWithIdentityProviderRequest2:
      example:
        authorizationCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
        identityProviderName: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
        invitedEmail: abc@gmail.com
        legalCompanyName: mywebsite
        redirectUri: https://www.example/redirect
        state: state
      properties:
        authorizationCode:
          description: The authorization code from the Identity Provider
          example: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
          type: string
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        environmentType:
          description: The environment type of the portal that the customer is signing
            in to
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        identityProviderName:
          description: The name or type of the Identity Provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        invitedEmail:
          description: Email address that the user was invited with
          example: abc@gmail.com
          format: email
          type: string
        legalCompanyName:
          example: mywebsite
          minLength: 1
          type: string
        redirectUri:
          description: The redirect URI used to get the authorization code
          example: https://www.example/redirect
          type: string
        state:
          description: The state parameter used to prevent CSRF attacks
          example: state
          type: string
      required:
      - authorizationCode
      type: object
    CustomerLoginWithIdentityProviderResult:
      example:
        jwtToken: ""
      properties:
        jwtToken:
          description: The jwt token
          example: ""
          type: string
      required:
      - jwtToken
      type: object
    CustomerResetPasswordRequest:
      example:
        email: abc@example.com
        token: 8cm
      properties:
        email:
          example: abc@example.com
          format: email
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: v4x
          minLength: 1
          type: string
      required:
      - email
      - token
      type: object
    CustomerResetPasswordRequest2:
      example:
        email: abc@example.com
      properties:
        email:
          example: abc@example.com
          format: email
          minLength: 1
          type: string
      required:
      - email
      type: object
    CustomerSigninRequest:
      example:
        email: abc@gmail.com
        environmentType: DEV
        hashedPassword: deprecated
        password: password
        token: l6
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        hashedPassword:
          example: deprecated
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: y50
          minLength: 1
          type: string
      required:
      - email
      - token
      type: object
    CustomerSigninRequest2:
      example:
        email: abc@gmail.com
        environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
        hashedPassword: deprecated
        password: password
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        environmentType:
          description: The environment type of the portal that the customer is signing
            in to
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        hashedPassword:
          example: deprecated
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
      required:
      - email
      type: object
    CustomerSigninResult:
      example:
        jwtToken: ""
      properties:
        jwtToken:
          description: The jwt token
          example: ""
          type: string
      required:
      - jwtToken
      type: object
    CustomerSignupRequest:
      example:
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        email: abc@gmail.com
        legalCompanyName: mywebsite
        name: John Doe
        password: password
        token: 2t
      properties:
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        email:
          description: Email address of the end-user
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        legalCompanyName:
          default: ""
          example: mywebsite
          type: string
        name:
          description: Name of the end-user
          example: John Doe
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: e
          minLength: 1
          type: string
      required:
      - email
      - name
      - password
      - token
      type: object
    CustomerSignupRequest2:
      example:
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        email: abc@gmail.com
        legalCompanyName: mywebsite
        name: John Doe
        password: password
      properties:
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        email:
          description: Email address of the end-user
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        legalCompanyName:
          default: ""
          example: mywebsite
          type: string
        name:
          description: Name of the end-user
          example: John Doe
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
      required:
      - email
      - name
      - password
      type: object
    DeRegisterResourceMetricsConfigRequest:
      example:
        id: r-12345678
        serviceId: s-12345678
        token: r
      properties:
        id:
          description: ID of a resource
          example: Fugiat eveniet reprehenderit eos amet et fuga.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: w9
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteAccountConfigRequest:
      example:
        id: ac-12345678
        token: "0"
      properties:
        id:
          description: ID of an Account Config
          example: Omnis ab quae.
          type: string
        token:
          description: JWT token used to perform authorization
          example: x
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteComputeConfigRequest:
      example:
        id: cc-12345678
        serviceId: s-12345678
        token: d
      properties:
        id:
          description: ID of a Compute Config
          example: Veritatis enim quasi modi vel officia ipsam.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 4u
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteCustomDomainRequest:
      example:
        id: cd-12345678
        token: ti
      properties:
        id:
          description: ID of an Custom Domain
          example: Ut dolor.
          type: string
        token:
          description: JWT token used to perform authorization
          example: "n"
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteCustomNetworkRequest:
      example:
        id: n-12345678
        token: 3r8
      properties:
        id:
          description: ID of a custom network
          example: Rem illum.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 9wt
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteDeploymentConfigRequest:
      example:
        id: dc-12345678
        token: "7"
      properties:
        id:
          description: ID of a Deployment Config
          example: Omnis dolorum.
          type: string
        token:
          description: JWT token used to perform authorization
          example: "6"
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteHelmPackageRequest:
      example:
        chartName: my-chart
        chartVersion: 1.0.0
        token: p
      properties:
        chartName:
          description: The chart name of the Helm package to delete
          example: my-chart
          type: string
        chartVersion:
          description: The chart version of the Helm package to delete
          example: 1.0.0
          type: string
        token:
          description: JWT token used to perform authorization
          example: "0"
          minLength: 1
          type: string
      required:
      - chartName
      - chartVersion
      - token
      type: object
    DeleteIdentityProviderRequest:
      example:
        id: idp-12345678
        token: 2gv
      properties:
        id:
          description: ID of an Identity Provider
          example: Explicabo qui eaque.
          type: string
        token:
          description: JWT token used to perform authorization
          example: g
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteImageConfigRequest:
      description: Delete an image configuration
      example:
        id: imgc-12345678
        serviceId: s-12345678
        token: be
      properties:
        id:
          description: ID of an Image Config
          example: Qui quam ullam amet ullam facilis officia.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 2mj
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteImageRegistryRequest:
      description: Delete an HTTP API v2 Docker Image Registry
      example:
        id: ir-12345678
        token: 26o
      properties:
        id:
          description: ID of an Image Registry
          example: Non voluptatem voluptatem et.
          type: string
        token:
          description: JWT token used to perform authorization
          example: z
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteInfraConfigRequest:
      example:
        id: ic-12345678
        serviceId: s-12345678
        token: xo
      properties:
        id:
          description: ID of an Infra Config
          example: Non autem omnis quaerat perspiciatis atque sint.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "88"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteInputParameterRequest:
      example:
        id: var-12345678
        serviceId: s-12345678
        token: wsi
      properties:
        id:
          description: ID of an Input Parameter
          example: Qui quisquam qui.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 4v
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteLimitRequest:
      example:
        family: COMPUTE_INFRA
        key: MAX_VIRTUAL_CORES_PER_RESOURCE
        token: z
      properties:
        family:
          description: The limit family
          example: SERVICE
          type: string
        key:
          description: Unique key to identify the limit
          example: MAX_VIRTUAL_CORES_PER_RESOURCE
          type: string
        token:
          description: JWT token used to perform authorization
          example: "9"
          minLength: 1
          type: string
      required:
      - family
      - key
      - token
      type: object
    DeleteNetworkConfigRequest:
      example:
        id: nc-12345678
        serviceId: s-12345678
        token: p
      properties:
        id:
          description: ID of a Network Config
          example: Iure similique.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ku
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteOutputParameterRequest:
      example:
        id: op-12345678
        serviceId: s-12345678
        token: k
      properties:
        id:
          description: ID of an Output Parameter
          example: Aut omnis eum.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: k
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeletePipelineRequest:
      example:
        id: p-12345678
        serviceId: s-12345678
        token: hi
      properties:
        id:
          description: ID of a Pipeline
          example: Optio aperiam doloremque sunt.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: by
          minLength: 1
          type: string
      required:
      - token
      type: object
    DeleteProductTierRequest:
      example:
        id: pt-12345678
        serviceId: s-12345678
        token: r
      properties:
        id:
          description: ID of a Product Tier
          example: Laborum commodi dolores quisquam nemo omnis quaerat.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: e
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: ue
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Inventore adipisci architecto sequi.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: x
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    DeleteResourceRequest:
      example:
        id: r-12345678
        serviceId: s-12345678
        token: nz
      properties:
        id:
          description: ID of a resource
          example: Ullam architecto.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: d5
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteSaaSPortalCustomDomainRequest:
      example:
        environmentType: DEV
        token: nh
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        token:
          description: JWT token used to perform authorization
          example: qn
          minLength: 1
          type: string
      required:
      - environmentType
      - token
      type: object
    DeleteSecretRequest:
      example:
        environmentType: DEV
        name: my-secret
        token: t67
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        name:
          description: Name of the secret
          example: my-secret
          type: string
        token:
          description: JWT token used to perform authorization
          example: m7l
          minLength: 1
          type: string
      required:
      - environmentType
      - name
      - token
      type: object
    DeleteServiceAPIRequest:
      example:
        id: sa-12345678
        serviceId: s-12345678
        token: g
      properties:
        id:
          description: ID of a Service API
          example: Sit non enim dicta delectus.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: lrt
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteServiceEnvironmentRequest:
      example:
        id: se-12345678
        serviceId: s-12345678
        token: g6z
      properties:
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: yme
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteServiceModelRequest:
      example:
        id: sm-12345678
        serviceId: s-12345678
        token: f
      properties:
        id:
          description: ID of a Service Model
          example: Veritatis ut.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: v
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteServiceRequest:
      example:
        id: s-12345678
        token: f
      properties:
        id:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: a5e
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteServicesOrchestrationRequest:
      example:
        id: so-12345678
        token: 9j
      properties:
        id:
          description: ID of a Services Orchestration
          example: Dolores explicabo reiciendis illo iusto soluta repellat.
          type: string
        token:
          description: JWT token used to perform authorization
          example: fo
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteStorageConfigRequest:
      example:
        id: sc-12345678
        serviceId: s-12345678
        token: j
      properties:
        id:
          description: ID of a Storage Config
          example: Quae veritatis unde adipisci veniam eos dolore.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: h
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteStorageVolumeConfigRequest:
      example:
        id: svc-12345678
        serviceId: s-12345678
        token: zuz
      properties:
        id:
          description: ID of a Storage Volume Config
          example: Qui quidem.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: o
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteSubscriptionRequest:
      example:
        id: sub-12345678
        token: "23"
      properties:
        id:
          description: ID of a Subscription
          example: Tempora occaecati quod enim facilis nulla et.
          type: string
        token:
          description: JWT token used to perform authorization
          example: um
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteUpgradePathRequest:
      example:
        id: up-12345678
        serviceId: s-12345678
        token: bgb
      properties:
        id:
          description: ID of an Upgrade Path
          example: Et corporis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: n2
          minLength: 1
          type: string
      required:
      - token
      type: object
    DeleteUserRequest:
      example:
        token: "1"
      properties:
        token:
          description: JWT token used to perform authorization
          example: lyt
          minLength: 1
          type: string
      required:
      - token
      type: object
    DemoRequest:
      example:
        company: ABC
        email: abc@gmail.com
        name: John Doe
        phone: +1-234567890
      properties:
        company:
          example: ABC
          minLength: 1
          type: string
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        name:
          example: John Doe
          minLength: 1
          type: string
        phone:
          example: +1-234567890
          type: string
      required:
      - company
      - email
      - name
      type: object
    DeploymentCellConfiguration:
      example:
        Amenities:
        - Description: Ensures high availability across multiple zones.
          IsManaged: true
          Name: Prometheus
          Properties:
            Nihil aliquam deserunt aut exercitationem.: Vel voluptatem.
            Odio ipsum amet.: Ut vel labore.
            Ullam exercitationem est.: Officia excepturi quaerat debitis.
          Type: HelmChart
        - Description: Ensures high availability across multiple zones.
          IsManaged: true
          Name: Prometheus
          Properties:
            Nihil aliquam deserunt aut exercitationem.: Vel voluptatem.
            Odio ipsum amet.: Ut vel labore.
            Ullam exercitationem est.: Officia excepturi quaerat debitis.
          Type: HelmChart
        - Description: Ensures high availability across multiple zones.
          IsManaged: true
          Name: Prometheus
          Properties:
            Nihil aliquam deserunt aut exercitationem.: Vel voluptatem.
            Odio ipsum amet.: Ut vel labore.
            Ullam exercitationem est.: Officia excepturi quaerat debitis.
          Type: HelmChart
      properties:
        Amenities:
          description: The amenities available in the deployment cell.
          example:
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Nihil aliquam deserunt aut exercitationem.: Vel voluptatem.
              Odio ipsum amet.: Ut vel labore.
              Ullam exercitationem est.: Officia excepturi quaerat debitis.
            Type: HelmChart
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Nihil aliquam deserunt aut exercitationem.: Vel voluptatem.
              Odio ipsum amet.: Ut vel labore.
              Ullam exercitationem est.: Officia excepturi quaerat debitis.
            Type: HelmChart
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Nihil aliquam deserunt aut exercitationem.: Vel voluptatem.
              Odio ipsum amet.: Ut vel labore.
              Ullam exercitationem est.: Officia excepturi quaerat debitis.
            Type: HelmChart
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Nihil aliquam deserunt aut exercitationem.: Vel voluptatem.
              Odio ipsum amet.: Ut vel labore.
              Ullam exercitationem est.: Officia excepturi quaerat debitis.
            Type: HelmChart
          items:
            $ref: "#/components/schemas/Amenity"
          type: array
      type: object
    DeploymentCellConfigurations:
      example:
        DeploymentCellConfigurationPerCloudProvider:
          aws|azure|gcp|all:
            Amenities:
            - Description: Ensures high availability across multiple zones.
              IsManaged: true
              Name: Prometheus
              Properties:
                Nihil aliquam deserunt aut exercitationem.: Vel voluptatem.
                Odio ipsum amet.: Ut vel labore.
                Ullam exercitationem est.: Officia excepturi quaerat debitis.
              Type: HelmChart
            - Description: Ensures high availability across multiple zones.
              IsManaged: true
              Name: Prometheus
              Properties:
                Nihil aliquam deserunt aut exercitationem.: Vel voluptatem.
                Odio ipsum amet.: Ut vel labore.
                Ullam exercitationem est.: Officia excepturi quaerat debitis.
              Type: HelmChart
            - Description: Ensures high availability across multiple zones.
              IsManaged: true
              Name: Prometheus
              Properties:
                Nihil aliquam deserunt aut exercitationem.: Vel voluptatem.
                Odio ipsum amet.: Ut vel labore.
                Ullam exercitationem est.: Officia excepturi quaerat debitis.
              Type: HelmChart
            - Description: Ensures high availability across multiple zones.
              IsManaged: true
              Name: Prometheus
              Properties:
                Nihil aliquam deserunt aut exercitationem.: Vel voluptatem.
                Odio ipsum amet.: Ut vel labore.
                Ullam exercitationem est.: Officia excepturi quaerat debitis.
              Type: HelmChart
      properties:
        DeploymentCellConfigurationPerCloudProvider:
          additionalProperties:
            $ref: "#/components/schemas/DeploymentCellConfiguration"
          description: The deployment cell configurations per cloud provider.
          example:
            aws|azure|gcp|all:
              Amenities:
              - Description: Ensures high availability across multiple zones.
                IsManaged: true
                Name: Prometheus
                Properties:
                  Nihil aliquam deserunt aut exercitationem.: Vel voluptatem.
                  Odio ipsum amet.: Ut vel labore.
                  Ullam exercitationem est.: Officia excepturi quaerat debitis.
                Type: HelmChart
              - Description: Ensures high availability across multiple zones.
                IsManaged: true
                Name: Prometheus
                Properties:
                  Nihil aliquam deserunt aut exercitationem.: Vel voluptatem.
                  Odio ipsum amet.: Ut vel labore.
                  Ullam exercitationem est.: Officia excepturi quaerat debitis.
                Type: HelmChart
              - Description: Ensures high availability across multiple zones.
                IsManaged: true
                Name: Prometheus
                Properties:
                  Nihil aliquam deserunt aut exercitationem.: Vel voluptatem.
                  Odio ipsum amet.: Ut vel labore.
                  Ullam exercitationem est.: Officia excepturi quaerat debitis.
                Type: HelmChart
              - Description: Ensures high availability across multiple zones.
                IsManaged: true
                Name: Prometheus
                Properties:
                  Nihil aliquam deserunt aut exercitationem.: Vel voluptatem.
                  Odio ipsum amet.: Ut vel labore.
                  Ullam exercitationem est.: Officia excepturi quaerat debitis.
                Type: HelmChart
          type: object
      type: object
    DeploymentCellHealthDetail:
      example:
        cloudProvider: aws
        hostClusterID: hc-12345678
        instanceHealth:
          Exercitationem sit officia ut rerum.:
            instanceID: instance-12345678
            lifeCycleStatus: RUNNING
            resourcesHealth:
              Molestiae eum et dolorem ea architecto quia.:
                nodesHealth:
                  Nesciunt deleniti iste ullam.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                  Recusandae voluptatum cumque.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                resourceID: resource-12345678
                resourceKey: primary
                resourceType: Kustomize
                status: HEALTHY
              Rerum assumenda inventore qui saepe distinctio dolor.:
                nodesHealth:
                  Nesciunt deleniti iste ullam.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                  Recusandae voluptatum cumque.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                resourceID: resource-12345678
                resourceKey: primary
                resourceType: Kustomize
                status: HEALTHY
            status: HEALTHY
          Ipsam ipsa.:
            instanceID: instance-12345678
            lifeCycleStatus: RUNNING
            resourcesHealth:
              Molestiae eum et dolorem ea architecto quia.:
                nodesHealth:
                  Nesciunt deleniti iste ullam.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                  Recusandae voluptatum cumque.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                resourceID: resource-12345678
                resourceKey: primary
                resourceType: Kustomize
                status: HEALTHY
              Rerum assumenda inventore qui saepe distinctio dolor.:
                nodesHealth:
                  Nesciunt deleniti iste ullam.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                  Recusandae voluptatum cumque.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                resourceID: resource-12345678
                resourceKey: primary
                resourceType: Kustomize
                status: HEALTHY
            status: HEALTHY
          Qui possimus fugit voluptatem.:
            instanceID: instance-12345678
            lifeCycleStatus: RUNNING
            resourcesHealth:
              Molestiae eum et dolorem ea architecto quia.:
                nodesHealth:
                  Nesciunt deleniti iste ullam.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                  Recusandae voluptatum cumque.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                resourceID: resource-12345678
                resourceKey: primary
                resourceType: Kustomize
                status: HEALTHY
              Rerum assumenda inventore qui saepe distinctio dolor.:
                nodesHealth:
                  Nesciunt deleniti iste ullam.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                  Recusandae voluptatum cumque.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                resourceID: resource-12345678
                resourceKey: primary
                resourceType: Kustomize
                status: HEALTHY
            status: HEALTHY
        regionCode: us-west-1
        serviceEnvironmentName: prod
        serviceName: mysql
      properties:
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        hostClusterID:
          description: ID of a Host Cluster
          example: Magni occaecati inventore et.
          type: string
        instanceHealth:
          additionalProperties:
            $ref: "#/components/schemas/InstanceHealthSummary"
          description: The health summary of the instances by instance ID
          example:
            Aut quis rerum reiciendis.:
              instanceID: instance-12345678
              lifeCycleStatus: RUNNING
              resourcesHealth:
                Molestiae eum et dolorem ea architecto quia.:
                  nodesHealth:
                    Nesciunt deleniti iste ullam.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                    Recusandae voluptatum cumque.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                  resourceID: resource-12345678
                  resourceKey: primary
                  resourceType: Kustomize
                  status: HEALTHY
                Rerum assumenda inventore qui saepe distinctio dolor.:
                  nodesHealth:
                    Nesciunt deleniti iste ullam.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                    Recusandae voluptatum cumque.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                  resourceID: resource-12345678
                  resourceKey: primary
                  resourceType: Kustomize
                  status: HEALTHY
              status: HEALTHY
            Hic ut ea.:
              instanceID: instance-12345678
              lifeCycleStatus: RUNNING
              resourcesHealth:
                Molestiae eum et dolorem ea architecto quia.:
                  nodesHealth:
                    Nesciunt deleniti iste ullam.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                    Recusandae voluptatum cumque.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                  resourceID: resource-12345678
                  resourceKey: primary
                  resourceType: Kustomize
                  status: HEALTHY
                Rerum assumenda inventore qui saepe distinctio dolor.:
                  nodesHealth:
                    Nesciunt deleniti iste ullam.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                    Recusandae voluptatum cumque.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                  resourceID: resource-12345678
                  resourceKey: primary
                  resourceType: Kustomize
                  status: HEALTHY
              status: HEALTHY
          type: object
        regionCode:
          description: The region code of the host cluster
          example: us-west-1
          type: string
        serviceEnvironmentName:
          description: The name of the service environment
          example: prod
          type: string
        serviceName:
          description: The name of the service
          example: mysql
          type: string
      type: object
    DeploymentCellHealthRequest:
      example:
        hostClusterID: hc-12345678
        serviceEnvironmentID: se-12345678
        serviceID: s-12345678
        token: yvg
      properties:
        hostClusterID:
          description: ID of a Host Cluster
          example: Et aut totam odio tenetur dolores.
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: y8m
          minLength: 1
          type: string
      required:
      - token
      type: object
    DeploymentCellHealthSummary:
      example:
        deployingInstances: 1345064342683378279
        healthyInstances: 4089394307752198615
        hostClusterID: hc-12345678
        message: Cell is healthy
        status: Healthy
        totalInstances: 7409011565951414150
        unhealthyInstances: 249786330626996987
        unknownInstances: 6395889566166867997
      properties:
        deployingInstances:
          description: The number of instances currently deploying
          example: 2796152639782031600
          format: int64
          type: integer
        healthyInstances:
          description: The number of healthy instances in the cell
          example: 7945484588997122309
          format: int64
          type: integer
        hostClusterID:
          description: ID of a Host Cluster
          example: Dolore fugit excepturi consequatur.
          type: string
        message:
          description: The status message
          example: Cell is healthy
          type: string
        status:
          description: The status of the cell
          example: Healthy
          type: string
        totalInstances:
          description: The total number of instances in the cell
          example: 3561262802537734974
          format: int64
          type: integer
        unhealthyInstances:
          description: The number of unhealthy instances in the cell
          example: 6964707015682027580
          format: int64
          type: integer
        unknownInstances:
          description: The number of instances with unknown status
          example: 818224991432459322
          format: int64
          type: integer
      required:
      - deployingInstances
      - healthyInstances
      - hostClusterID
      - message
      - status
      - totalInstances
      - unhealthyInstances
      type: object
    DeprecateResourceRequest:
      example:
        id: r-12345678
        serviceId: s-12345678
        token: "0"
      properties:
        id:
          description: ID of a resource
          example: Corporis molestiae eos eum et.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "4"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeprecateServiceAPIRequest:
      example:
        id: sa-12345678
        serviceId: s-12345678
        token: bw2
      properties:
        id:
          description: ID of a Service API
          example: Quod vel suscipit dignissimos dolorem.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "9"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeprecateTierVersionSetRequest:
      example:
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: ue
        version: "3.0"
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Veniam est.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: evl
          minLength: 1
          type: string
        version:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
      required:
      - productTierId
      - serviceId
      - token
      - version
      type: object
    DeregisterActionHookRequest:
      example:
        id: r-12345678
        scope: CLUSTER
        serviceId: s-12345678
        token: mrs
        type: ADD
      properties:
        id:
          description: ID of a resource
          example: Nemo dolorem dolorum aspernatur.
          type: string
        scope:
          description: The scope of the hook
          example: CLUSTER|NODE
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: yx
          minLength: 1
          type: string
        type:
          description: The type of hook to execute
          example: INIT|ADD|REMOVE|PROMOTE|DEMOTE|HEALTH_CHECK|READINESS_CHECK|STARTUP_CHECK|PRE_START|POST_START|PRE_UPGRADE|POST_UPGRADE|PRE_STOP|POST_STOP
          type: string
      required:
      - id
      - scope
      - serviceId
      - token
      - type
      type: object
    DeregisterActionHookRequest2:
      example:
        scope: CLUSTER|NODE
        type: INIT|ADD|REMOVE|PROMOTE|DEMOTE|HEALTH_CHECK|READINESS_CHECK|STARTUP_CHECK|PRE_START|POST_START|PRE_UPGRADE|POST_UPGRADE|PRE_STOP|POST_STOP
      properties:
        scope:
          description: The scope of the hook
          example: CLUSTER|NODE
          type: string
        type:
          description: The type of hook to execute
          example: INIT|ADD|REMOVE|PROMOTE|DEMOTE|HEALTH_CHECK|READINESS_CHECK|STARTUP_CHECK|PRE_START|POST_START|PRE_UPGRADE|POST_UPGRADE|PRE_STOP|POST_STOP
          type: string
      required:
      - scope
      - type
      type: object
    DescribeAccountConfigByAWSAccountIDRequest:
      example:
        awsAccountID: "123456789012"
        token: "66"
      properties:
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        token:
          description: JWT token used to perform authorization
          example: s
          minLength: 1
          type: string
      required:
      - awsAccountID
      - token
      type: object
    DescribeAccountConfigByAWSAccountIDResult:
      description: Account configuration including the role required to access
      example:
        awsAccountID: "123456789012"
        awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
        awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml&param_CreateLoadBalancerPolicy=false
        awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
        byoaInstanceIDs:
        - instance-12345678
        - instance-abcdefgh
        cloudProviderId: infra-12345678
        description: An AWS account hosting multiple dev environments
        id: ac-12345678
        name: Dev AWS account
        status: READY
        statusMessage: Account is ready
      properties:
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        awsBootstrapRoleARN:
          description: The security role ARN or service account ARN that grants access
            to operate the infra
          example: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          type: string
        awsCloudFormationNoLBTemplateURL:
          description: The URL to the CloudFormation template (no LoadBalancer policy
            version)
          example: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml&param_CreateLoadBalancerPolicy=false
          type: string
        awsCloudFormationTemplateURL:
          description: The URL to the CloudFormation template
          example: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          type: string
        byoaInstanceIDs:
          description: The BYOA instance IDs that this account config is tied to
          example:
          - instance-12345678
          - instance-abcdefgh
          items:
            example: Omnis quae ipsum dolore error.
            type: string
          type: array
        cloudProviderId:
          description: ID of an CloudProvider
          example: Reprehenderit tempore neque commodi.
          type: string
        description:
          description: The description for the account
          example: An AWS account hosting multiple dev environments
          type: string
        id:
          description: ID of an Account Config
          example: Illo expedita deleniti.
          type: string
        name:
          description: The name of the account
          example: Dev AWS account
          type: string
        status:
          description: The status of the account configuration
          example: PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
          type: string
        statusMessage:
          description: The status message of the account
          example: Account is ready
          type: string
      required:
      - awsAccountID
      - awsBootstrapRoleARN
      - cloudProviderId
      - description
      - id
      - name
      - status
      - statusMessage
      type: object
    DescribeAccountConfigByAzureSubscriptionIDRequest:
      example:
        azureSubscriptionID: 12345678-1234-1234-1234-123456789012
        token: "7"
      properties:
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        token:
          description: JWT token used to perform authorization
          example: p
          minLength: 1
          type: string
      required:
      - azureSubscriptionID
      - token
      type: object
    DescribeAccountConfigByAzureSubscriptionIDResult:
      description: Account configuration for Azure
      example:
        azureSubscriptionID: 12345678-1234-1234-1234-123456789012
        azureTenantID: 12345678-1234-1234-1234-123456789012
        byoaInstanceIDs:
        - instance-12345678
        - instance-abcdefgh
        cloudProviderId: infra-12345678
        description: An AWS account hosting multiple dev environments
        id: ac-12345678
        name: Dev AWS account
        status: READY
        statusMessage: Account is ready
      properties:
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        azureTenantID:
          description: The Azure tenant ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        byoaInstanceIDs:
          description: The BYOA instance IDs that this account config is tied to
          example:
          - instance-12345678
          - instance-abcdefgh
          items:
            example: Reiciendis perferendis dolores reprehenderit quaerat iure.
            type: string
          type: array
        cloudProviderId:
          description: ID of an CloudProvider
          example: Aut non ut ea aperiam.
          type: string
        description:
          description: The description for the account
          example: An AWS account hosting multiple dev environments
          type: string
        id:
          description: ID of an Account Config
          example: Reprehenderit laborum eligendi quis eligendi.
          type: string
        name:
          description: The name of the account
          example: Dev AWS account
          type: string
        status:
          description: The status of the account configuration
          example: PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
          type: string
        statusMessage:
          description: The status message of the account
          example: Account is ready
          type: string
      required:
      - azureSubscriptionID
      - azureTenantID
      - cloudProviderId
      - description
      - id
      - name
      - status
      - statusMessage
      type: object
    DescribeAccountConfigByGCPProjectIDRequest:
      example:
        gcpProjectID: my-project
        token: g
      properties:
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        token:
          description: JWT token used to perform authorization
          example: c5
          minLength: 1
          type: string
      required:
      - gcpProjectID
      - token
      type: object
    DescribeAccountConfigByGCPProjectIDResult:
      description: Account configuration including the role required to access
      example:
        byoaInstanceIDs:
        - instance-12345678
        - instance-abcdefgh
        cloudProviderId: infra-12345678
        description: An AWS account hosting multiple dev environments
        gcpProjectID: my-project
        gcpProjectNumber: "123456789012"
        gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
        id: ac-12345678
        name: Dev AWS account
        status: READY
        statusMessage: Account is ready
      properties:
        byoaInstanceIDs:
          description: The BYOA instance IDs that this account config is tied to
          example:
          - instance-12345678
          - instance-abcdefgh
          items:
            example: Maiores beatae velit qui repellat fugiat.
            type: string
          type: array
        cloudProviderId:
          description: ID of an CloudProvider
          example: Harum rerum exercitationem error et sed.
          type: string
        description:
          description: The description for the account
          example: An AWS account hosting multiple dev environments
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        gcpProjectNumber:
          description: The GCP project number
          example: "123456789012"
          type: string
        gcpServiceAccountEmail:
          description: The GCP service account email
          example: bootstrap@my-project.iam.gserviceaccount.com
          type: string
        id:
          description: ID of an Account Config
          example: Architecto modi.
          type: string
        name:
          description: The name of the account
          example: Dev AWS account
          type: string
        status:
          description: The status of the account configuration
          example: PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
          type: string
        statusMessage:
          description: The status message of the account
          example: Account is ready
          type: string
      required:
      - cloudProviderId
      - description
      - gcpProjectID
      - gcpProjectNumber
      - gcpServiceAccountEmail
      - id
      - name
      - status
      - statusMessage
      type: object
    DescribeAccountConfigByOCITenancyIDRequest:
      example:
        ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
        token: y8y
      properties:
        ociTenancyID:
          description: The Tenancy OCID for Oracle Cloud Infrastructure
          example: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          type: string
        token:
          description: JWT token used to perform authorization
          example: e
          minLength: 1
          type: string
      required:
      - ociTenancyID
      - token
      type: object
    DescribeAccountConfigByOCITenancyIDResult:
      description: Account configuration for OCI
      example:
        byoaInstanceIDs:
        - instance-12345678
        - instance-abcdefgh
        cloudProviderId: infra-12345678
        description: An OCI account hosting multiple dev environments
        id: ac-12345678
        name: Dev OCI account
        ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
        ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
        status: READY
        statusMessage: Account is ready
      properties:
        byoaInstanceIDs:
          description: The BYOA instance IDs that this account config is tied to
          example:
          - instance-12345678
          - instance-abcdefgh
          items:
            example: Soluta distinctio dolor autem.
            type: string
          type: array
        cloudProviderId:
          description: ID of an CloudProvider
          example: Nobis laborum aut.
          type: string
        description:
          description: The description for the account
          example: An OCI account hosting multiple dev environments
          type: string
        id:
          description: ID of an Account Config
          example: Est rerum eius.
          type: string
        name:
          description: The name of the account
          example: Dev OCI account
          type: string
        ociDomainID:
          description: The Domain OCID for Oracle Cloud Infrastructure
          example: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          type: string
        ociTenancyID:
          description: The Tenancy OCID for Oracle Cloud Infrastructure
          example: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          type: string
        status:
          description: The status of the account configuration
          example: PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
          type: string
        statusMessage:
          description: The status message of the account
          example: Account is ready
          type: string
      required:
      - cloudProviderId
      - description
      - id
      - name
      - ociDomainID
      - ociTenancyID
      - status
      - statusMessage
      type: object
    DescribeAccountConfigRequest:
      example:
        id: ac-12345678
        token: dhk
      properties:
        id:
          description: ID of an Account Config
          example: Molestiae voluptatum sit.
          type: string
        token:
          description: JWT token used to perform authorization
          example: ke1
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeAccountConfigResult:
      description: Account configuration including the role required to access
      example:
        awsAccountID: "123456789012"
        awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
        awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
        awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
        azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
        azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
        azureSubscriptionID: 12345678-1234-1234-1234-123456789012
        azureTenantID: 12345678-1234-1234-1234-123456789012
        byoaInstanceIDs:
        - instance-12345678
        - instance-abcdefgh
        cloudProviderId: infra-12345678
        description: An AWS account hosting multiple dev environments
        gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
        gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
        gcpProjectID: my-project
        gcpProjectNumber: "123456789012"
        gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
        id: ac-12345678
        name: Dev AWS account
        ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
        ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
        ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
        ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
        status: READY
        statusMessage: Account is ready
      properties:
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        awsBootstrapRoleARN:
          description: The security role ARN or service account ARN that grants access
            to operate the infra
          example: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          type: string
        awsCloudFormationNoLBTemplateURL:
          description: The URL to the CloudFormation template (no LoadBalancer policy
            version)
          example: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          type: string
        awsCloudFormationTemplateURL:
          description: The URL to the CloudFormation template
          example: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          type: string
        azureBootstrapShellCommand:
          description: The Azure bootstrap shell command
          example: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          type: string
        azureDisconnectShellCommand:
          description: The Azure disconnect shell command
          example: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          type: string
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        azureTenantID:
          description: The Azure tenant ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        byoaInstanceIDs:
          description: The BYOA instance IDs that this account config is tied to
          example:
          - instance-12345678
          - instance-abcdefgh
          items:
            example: Et placeat aut eveniet quibusdam ea sed.
            type: string
          type: array
        cloudProviderId:
          description: ID of an CloudProvider
          example: Fugiat quia impedit aliquid hic.
          type: string
        description:
          description: The description for the account
          example: An AWS account hosting multiple dev environments
          type: string
        gcpBootstrapShellCommand:
          description: The GCP bootstrap shell command
          example: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          type: string
        gcpDisconnectShellCommand:
          description: The GCP disconnect shell command
          example: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        gcpProjectNumber:
          description: The GCP project number
          example: "123456789012"
          type: string
        gcpServiceAccountEmail:
          description: The GCP service account email
          example: bootstrap@my-project.iam.gserviceaccount.com
          type: string
        id:
          description: ID of an Account Config
          example: Ab pariatur qui.
          type: string
        name:
          description: The name of the account
          example: Dev AWS account
          type: string
        ociBootstrapShellCommand:
          description: The OCI bootstrap shell command
          example: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          type: string
        ociDisconnectShellCommand:
          description: The OCI disconnect shell command
          example: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          type: string
        ociDomainID:
          description: The Domain OCID for Oracle Cloud Infrastructure
          example: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          type: string
        ociTenancyID:
          description: The Tenancy OCID for Oracle Cloud Infrastructure
          example: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          type: string
        status:
          description: The status of the account configuration
          example: PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
          type: string
        statusMessage:
          description: The status message of the account
          example: Account is ready
          type: string
      required:
      - cloudProviderId
      - description
      - id
      - name
      - status
      - statusMessage
      type: object
    DescribeAuditEventRequest:
      example:
        id: event-12345678
        subscriptionId: sub-abcd1234
        token: r
      properties:
        id:
          description: ID of a Event
          example: Sint velit.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: xgq
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeAuditEventResult:
      example:
        eventSource: "Customer, Infra or Maintenance"
        id: event-12345678
        message: instance-abcd1234 created
        orgId: org-12345678
        orgName: Acme Corporation
        resourceInstanceId: instance-abcd1234
        resourceName: Galera
        subscriptionId: sub-abcd1234
        time: 2023-01-10T00:00:00Z
        userId: user-12345678
        userName: John Doe
        workflowFailures:
        - eventTime: 2020-01-01T00:00:00Z
          message: Bootstrap failed for reason X
        - eventTime: 2020-01-01T00:01:00Z
          message: Compute failed for reason Y
      properties:
        eventSource:
          description: The event source
          example: "Customer, Infra or Maintenance"
          type: string
        id:
          description: ID of a Event
          example: Eum magnam nemo quas illo animi molestiae.
          type: string
        message:
          description: Resource Instance of message
          example: instance-abcd1234 created
          type: string
        orgId:
          description: ID of an Org
          example: Eos voluptatem.
          type: string
        orgName:
          description: The organization name of the user that caused the event
          example: Acme Corporation
          type: string
        resourceInstanceId:
          description: Instance Id of the resource instance
          example: instance-abcd1234
          type: string
        resourceName:
          description: Name of the resource
          example: Galera
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        time:
          description: The event time
          example: 2023-01-10T00:00:00Z
          type: string
        userId:
          description: ID of a User
          example: Natus vero dolores.
          type: string
        userName:
          description: The user name of the user that caused the event
          example: John Doe
          type: string
        workflowFailures:
          description: The list of workflow events that indicate failures
          example:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
          items:
            $ref: "#/components/schemas/WorkflowFailure"
          type: array
      required:
      - id
      - message
      - resourceInstanceId
      - resourceName
      - subscriptionId
      - time
      type: object
    DescribeAvailabilityZoneRequest:
      example:
        id: az-12345678
        token: 0uy
      properties:
        id:
          description: ID of an AZ
          example: Quo sint pariatur corporis delectus.
          type: string
        token:
          description: JWT token used to perform authorization
          example: cl
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeAvailabilityZoneResult:
      example:
        cloudProviderName: aws
        code: us-east-1a
        description: US East (N. Virginia) Availability Zone A
        id: az-12345678
        regionCode: us-east-1
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        code:
          description: Cloud-provider native availability zone code
          example: us-east-1a
          type: string
        description:
          description: Description of the AvailabilityZone
          example: US East (N. Virginia) Availability Zone A
          type: string
        id:
          description: ID of an AZ
          example: Rerum est consectetur voluptatibus possimus iusto.
          type: string
        regionCode:
          description: Cloud-provider native region code
          example: us-east-1
          type: string
      required:
      - cloudProviderName
      - code
      - description
      - id
      - regionCode
      type: object
    DescribeCloudProviderRequest:
      example:
        id: infra-12345678
        token: e3
      properties:
        id:
          description: ID of an CloudProvider
          example: Et enim voluptatem.
          type: string
        token:
          description: JWT token used to perform authorization
          example: u
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeCloudProviderResult:
      example:
        description: Amazon Web Services
        id: infra-12345678
        name: aws
      properties:
        description:
          description: Description of the CloudProvider
          example: Amazon Web Services
          type: string
        id:
          description: ID of an CloudProvider
          example: Necessitatibus tenetur labore eos delectus ea et.
          type: string
        name:
          description: Name of the CloudProvider
          example: aws
          type: string
      required:
      - description
      - id
      - name
      type: object
    DescribeComputeConfigRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Molestiae qui eveniet ut blanditiis tempore cumque.
        id: cc-12345678
        serviceId: s-12345678
        token: ma
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Autem suscipit dolor quibusdam vitae.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Omnis temporibus sunt accusantium aut ducimus.
          type: string
        id:
          description: ID of a Compute Config
          example: Tenetur in soluta exercitationem excepturi asperiores.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: t
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeComputeConfigResult:
      example:
        autoscalingPolicy:
          maxReplicas: 4
          minReplicas: 1
        computeInstanceTypeConfigOverrides:
          aws:
            t3.micro:
              instanceLifeCycleType: Spot
              rootVolumeSizeGi: 10
              warmPoolConfiguration:
                minimumNodesInPool: 1
            t3.small:
              instanceLifeCycleType: OnDemand
              warmPoolConfiguration:
                minimumNodesInPool: 2
          azure:
            Standard_B1ls:
              rootVolumeSizeGi: 10
              warmPoolConfiguration:
                minimumNodesInPool: 1
        cpuArchitecture: X86_64|ARM64
        description: my compute config description
        id: cc-12345678
        infraConfigIDs:
        - ic-12345678
        - ic-abcdefgh
        instanceTypes:
          aws:
          - t3.micro
          - t3.small
          azure:
          - Standard_B1ls
          - Standard_B1ms
          gcp:
          - $var.instance_type
        name: my compute config
        replicaCount: "3"
        resources:
          limits:
            cpu: "1"
            memory: 500Mi
          requests:
            cpu: "0.5"
            memory: 200Mi
        rootVolumeSizeGi: 10
        serviceId: s-12345678
        warmPoolConfiguration:
          minimumNodesInPool: 1
      properties:
        autoscalingPolicy:
          $ref: "#/components/schemas/AutoscalingPolicy"
        computeInstanceTypeConfigOverrides:
          additionalProperties:
            additionalProperties:
              $ref: "#/components/schemas/ComputeInstanceTypeConfigOverride"
            example:
              Consequatur et accusantium maiores dolor eligendi.:
                acceleratorConfiguration:
                  count: 1
                  type: nvidia-tesla-t4
                instanceLifeCycleType: Spot|OnDemand
                labels:
                  env: prod
                rootVolumeSizeGi: 10
                rootVolumeSizeGiAPIParam: $var.root_volume_size_gi
                taints:
                - effect: NoSchedule
                  key: env
                  value: prod
                warmPoolConfiguration:
                  minimumNodesInPool: 1
            type: object
          description: The compute instance type config overrides for this compute
            config
          example:
            aws:
              t3.micro:
                instanceLifeCycleType: Spot
                rootVolumeSizeGi: 10
                warmPoolConfiguration:
                  minimumNodesInPool: 1
              t3.small:
                instanceLifeCycleType: OnDemand
                warmPoolConfiguration:
                  minimumNodesInPool: 2
            azure:
              Standard_B1ls:
                rootVolumeSizeGi: 10
                warmPoolConfiguration:
                  minimumNodesInPool: 1
          type: object
        cpuArchitecture:
          description: Processor architecture
          example: X86_64|ARM64
          type: string
        description:
          description: Description of the compute config
          example: my compute config description
          type: string
        id:
          description: ID of a Compute Config
          example: Dolorem nisi est rerum earum hic cupiditate.
          type: string
        infraConfigIDs:
          description: The list of infra config IDs associated with the compute config.
          example:
          - ic-12345678
          - ic-abcdefgh
          items:
            description: ID of an Infra Config
            example: Consequatur sapiente.
            type: string
          type: array
        instanceTypes:
          additionalProperties:
            example:
            - Ipsum sequi id sequi dolores dolores est.
            - Eum assumenda qui quia.
            - Repellat labore eum temporibus labore.
            - Pariatur pariatur tempore atque doloremque est.
            items:
              example: Quaerat nostrum dolorem quo.
              type: string
            type: array
          description: The instance types for this compute config
          example:
            aws:
            - t3.micro
            - t3.small
            azure:
            - Standard_B1ls
            - Standard_B1ms
            gcp:
            - $var.instance_type
          type: object
        name:
          description: Name of the compute config
          example: my compute config
          type: string
        replicaCount:
          description: Number of replicas to provision for this logical pool of nodes
            per instance of the resource
          example: "3"
          type: string
        resources:
          $ref: "#/components/schemas/ResourceSpec"
        rootVolumeSizeGi:
          description: Size of the root volume in Gi
          example: 10
          format: int64
          type: integer
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        warmPoolConfiguration:
          $ref: "#/components/schemas/WarmPoolConfiguration"
      required:
      - description
      - id
      - name
      - replicaCount
      - serviceId
      type: object
    DescribeConsumptionBillingDetailsRequest:
      example:
        returnUrl: https://mysaasportal.com
        token: 5q
      properties:
        returnUrl:
          description: Return Url used to configure payment methods links
          example: https://mysaasportal.com
          type: string
        token:
          description: JWT token used to perform authorization
          example: 4u
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribeConsumptionBillingDetailsResult:
      example:
        billingProviders:
        - paymentConfigurable: true
          paymentConfigured: true
          paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
          type: STRIPE
        - balanceDueLink: https://billing.provider.com/balance-due
          logoURL: https://example.com/logo.png
          name: GovPay
          paymentConfigurable: false
          paymentConfigured: false
          paymentInfoPortalURL: null
          type: BRING_YOUR_OWN
        paymentConfigured: true
        paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
      properties:
        billingProviders:
          description: The billing providers available for the customer.
          example:
          - paymentConfigurable: true
            paymentConfigured: true
            paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
            type: STRIPE
          - balanceDueLink: https://billing.provider.com/balance-due
            logoURL: https://example.com/logo.png
            name: GovPay
            paymentConfigurable: false
            paymentConfigured: false
            paymentInfoPortalURL: null
            type: BRING_YOUR_OWN
          items:
            $ref: "#/components/schemas/CustomerBillingProvider"
          type: array
        paymentConfigured:
          description: Deprecated. Whether the customer has configured their payment
            information.
          example: true
          type: boolean
        paymentInfoPortalURL:
          description: Deprecated. The URL from the billing provide to redirect users
            to so they can enter their payment information.  Only present when first
            adding payment information
          example: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
          type: string
      required:
      - paymentConfigured
      type: object
    DescribeConsumptionBillingStatusRequest:
      example:
        token: hus
      properties:
        token:
          description: JWT token used to perform authorization
          example: 7u1
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribeConsumptionBillingStatusResult:
      example:
        enabled: true
      properties:
        enabled:
          description: Whether billing is enabled
          example: true
          type: boolean
      type: object
    DescribeConsumptionUserBillingDetailsRequest:
      example:
        id: user-abcd1234
        token: hbl
      properties:
        id:
          description: ID of a User
          example: Quod aut sint blanditiis magnam odit.
          type: string
        token:
          description: JWT token used to perform authorization
          example: spx
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeConsumptionUserBillingDetailsResult:
      example:
        billingEmbedURL: DEPRECATED
        name: John Dae
        paymentConfigured: true
        paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
        userId: user-abcd1234
      properties:
        billingEmbedURL:
          description: DEPRECATED
          example: DEPRECATED
          type: string
        name:
          description: "DEPRECATED: The name of the user"
          example: John Dae
          type: string
        paymentConfigured:
          description: Whether the customer has configured their payment information.
          example: true
          type: boolean
        paymentInfoPortalURL:
          description: The URL from the billing provide to redirect users to so they
            can enter their payment information.  Only present when first adding payment
            information
          example: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
          type: string
        userId:
          description: ID of a User
          example: Aut incidunt quam laudantium quasi.
          type: string
      required:
      - paymentConfigured
      type: object
    DescribeCustomDomainRequest:
      example:
        id: cd-12345678
        token: v
      properties:
        id:
          description: ID of an Custom Domain
          example: Natus illum earum.
          type: string
        token:
          description: JWT token used to perform authorization
          example: ov
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeCustomDomainResult:
      description: Custom domain including the role required to access
      example:
        customDomain: mydomain.dev
        description: Description of the domain
        id: cd-12345678
        name: Dev domain
        route53Configuration:
          awsAccountID: "123456789012"
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
        status: READY
        statusMessage: Account is ready
      properties:
        customDomain:
          description: The root domain of the domain to use as suffix
          example: mydomain.dev
          type: string
        description:
          description: The description for the domain
          example: Description of the domain
          type: string
        id:
          description: ID of an Custom Domain
          example: Fuga quo sunt sed ut aut.
          type: string
        name:
          description: The name of the custom domain
          example: Dev domain
          type: string
        route53Configuration:
          $ref: "#/components/schemas/Route53ConfigurationDescription"
        status:
          example: PENDING|VERIFYING|READY|FAILED
          type: string
        statusMessage:
          description: The status message of the custom domain
          example: Account is ready
          type: string
      required:
      - customDomain
      - description
      - id
      - name
      - route53Configuration
      type: object
    DescribeCustomNetworkRequest:
      example:
        id: n-12345678
        token: "0"
      properties:
        id:
          description: ID of a custom network
          example: Quos doloremque soluta laborum facere.
          type: string
        token:
          description: JWT token used to perform authorization
          example: y2e
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeDeploymentConfigRequest:
      example:
        id: default
        token: fl
      properties:
        id:
          description: The deployment configuration ID
          example: default
          type: string
        token:
          description: JWT token used to perform authorization
          example: o1u
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeDeploymentConfigResult:
      example:
        description: A production deployment config
        id: dc-12345678
        infraRollConfiguration:
          infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
          maximumNumberOfResourceInstancesPerBatch: 1
          maximumUnavailableReplicas: 1
        name: Production
        rolloutPriorityList:
        - region-12345678
        - region-abcd1234
        - region-3c3c3c3c
      properties:
        description:
          description: A brief description of the deployment config
          example: A production deployment config
          type: string
        id:
          description: ID of a Deployment Config
          example: Unde nobis.
          type: string
        infraRollConfiguration:
          $ref: "#/components/schemas/InfraRollConfiguration"
        name:
          description: Name of the deployment config
          example: Production
          type: string
        rolloutPriorityList:
          example:
          - region-12345678
          - region-abcd1234
          - region-3c3c3c3c
          items:
            description: ID of a Region
            example: Quidem et temporibus.
            type: string
          type: array
      required:
      - description
      - id
      - infraRollConfiguration
      - name
      - rolloutPriorityList
      type: object
    DescribeHelmPackageRequest:
      example:
        chartName: my-chart
        chartVersion: 1.0.0
        token: it
      properties:
        chartName:
          description: The chart name of the Helm package to describe
          example: my-chart
          type: string
        chartVersion:
          description: The chart version of the Helm package to describe
          example: 1.0.0
          type: string
        token:
          description: JWT token used to perform authorization
          example: "92"
          minLength: 1
          type: string
      required:
      - chartName
      - chartVersion
      - token
      type: object
    DescribeIdentityProviderRequest:
      example:
        id: idp-12345678
        token: 87v
      properties:
        id:
          description: ID of an Identity Provider
          example: Amet placeat nemo quos minima.
          type: string
        token:
          description: JWT token used to perform authorization
          example: q
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeIdentityProviderResult:
      example:
        authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
        disabled: false
        emailIdentifiers: company.com
        environmentType: production
        id: idp-12345678
        identityProviderName: Google
        loginButtonIconUrl: https://example.com/icon.png
        loginButtonText: Login with Google
        name: Google for my company
        scopes: openid email profile
        status: Ready
        tokenEndpoint: https://oauth2.googleapis.com/token
        userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
      properties:
        authorizationEndpoint:
          description: The authorization endpoint of the Identity Provider
          example: https://accounts.google.com/o/oauth2/auth
          type: string
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
        disabled:
          description: Whether the Identity Provider is disabled
          example: false
          type: boolean
        emailIdentifiers:
          description: The email identifiers to use for the Identity Provider
          example: company.com
          type: string
        environmentType:
          description: The type of environment for the Identity Provider
          example: production
          type: string
        id:
          description: ID of an Identity Provider
          example: Voluptas provident debitis voluptas eveniet provident.
          type: string
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        loginButtonIconUrl:
          description: The URL of the icon to use for the login button
          example: https://example.com/icon.png
          type: string
        loginButtonText:
          description: The text to use for the login button
          example: Login with Google
          type: string
        name:
          description: The name of the Identity Provider
          example: Google for my company
          type: string
        scopes:
          description: The scopes to request from the Identity Provider
          example: openid email profile
          type: string
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        tokenEndpoint:
          description: The token endpoint of the Identity Provider
          example: https://oauth2.googleapis.com/token
          type: string
        userInfoEndpoint:
          description: The user info endpoint of the Identity Provider
          example: https://www.googleapis.com/oauth2/v3/userinfo
          type: string
      required:
      - clientId
      - id
      - identityProviderName
      - status
      type: object
    DescribeIdentityProviderTypeResult:
      example:
        SupportCustomEndpoints: true
        SupportCustomScopes: false
        identityProviderName: Google
      properties:
        SupportCustomEndpoints:
          description: Whether the Identity Provider supports custom endpoints
          example: true
          type: boolean
        SupportCustomScopes:
          description: Whether the Identity Provider supports custom scopes
          example: false
          type: boolean
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
      required:
      - SupportCustomEndpoints
      - SupportCustomScopes
      - identityProviderName
      type: object
    DescribeImageConfigRequest:
      description: Describe an image configuration
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Nesciunt voluptatem facilis hic ipsa.
        id: imgc-12345678
        serviceId: s-12345678
        token: rm
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Nulla est.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Odit quo cumque cumque et aut.
          type: string
        id:
          description: ID of an Image Config
          example: Libero aut nisi eum deleniti aliquam aliquid.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: z
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeImageConfigResult:
      example:
        customImageCommandsAndArgs:
          args:
          - -d
          - mysql
          commands:
          - echo
          - "Hello, World!"
        description: An image configuration for my new entity
        id: imgc-12345678
        imageName: mysql
        imageRegistryId: ir-12345678
        imageSignaturePublicKeyPEM: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        imageTag: v1
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
      properties:
        customImageCommandsAndArgs:
          $ref: "#/components/schemas/CustomImageCommandsAndArgs"
        description:
          description: A brief description of the image configuration
          example: An image configuration for my new entity
          type: string
        id:
          description: ID of an Image Config
          example: Saepe maiores animi occaecati.
          type: string
        imageName:
          description: Name of the container image
          example: mysql
          minLength: 1
          type: string
        imageRegistryId:
          description: ID of an Image Registry
          example: Aliquid et.
          type: string
        imageSignaturePublicKeyPEM:
          description: PEM-encoded Public key part of the key used to sign the container
            image
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        imageTag:
          default: latest
          description: Tag representing the software image version that is currently
            preferred
          example: v1
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - description
      - id
      - imageName
      - imageRegistryId
      - imageTag
      - serviceEnvironmentId
      - serviceId
      type: object
    DescribeImageRegistryRequest:
      description: Describe an HTTP API v2 Docker Image Registry
      example:
        id: ir-12345678
        token: wa
      properties:
        id:
          description: ID of an Image Registry
          example: Voluptas quibusdam maiores et inventore laudantium fugit.
          type: string
        token:
          description: JWT token used to perform authorization
          example: js
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeImageRegistryResult:
      example:
        description: DockerHub is a public Docker Image Registry
        host: docker.io
        id: ir-12345678
        name: DockerHub
        password: mypassword
        username: myusername
      properties:
        description:
          description: A brief description of the Image Registry
          example: DockerHub is a public Docker Image Registry
          type: string
        host:
          description: The Image Registry host
          example: docker.io
          type: string
        id:
          description: ID of an Image Registry
          example: Ducimus doloremque cumque sit dolorem.
          type: string
        name:
          description: Name of the Image Registry
          example: DockerHub
          type: string
        password:
          description: The password to use when authenticating to the Image Registry
          example: mypassword
          type: string
        username:
          description: The username to use when authenticating to the Image Registry
          example: myusername
          type: string
      required:
      - description
      - host
      - id
      - name
      type: object
    DescribeInfraConfigRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Animi et dolores aliquid soluta.
        id: ic-12345678
        serviceId: s-12345678
        token: ce0
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Totam a sed sit et ut incidunt.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Sit possimus doloremque suscipit itaque dolor earum.
          type: string
        id:
          description: ID of an Infra Config
          example: Mollitia aut temporibus.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: qf
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeInfraConfigResult:
      example:
        computeConfigId: cc-12345678
        customTag:
          key: customKey
          value: customValue
        description: Infra config used for the base tier MySQL service
        id: ic-12345678
        name: MySQL Writer Infra Config
        networkConfigId: nc-12345678
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        storageConfigId: sc-12345678
      properties:
        computeConfigId:
          description: ID of a Compute Config
          example: Quasi odit facilis eveniet.
          type: string
        customTag:
          $ref: "#/components/schemas/CustomTag"
        description:
          description: The description for the infra config
          example: Infra config used for the base tier MySQL service
          type: string
        id:
          description: ID of an Infra Config
          example: Recusandae delectus distinctio rerum impedit.
          type: string
        name:
          description: The name of the infra config
          example: MySQL Writer Infra Config
          type: string
        networkConfigId:
          description: ID of a Network Config
          example: Et qui laudantium voluptatem error alias.
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        storageConfigId:
          description: ID of a Storage Config
          example: Et aut.
          type: string
      required:
      - description
      - id
      - name
      - serviceEnvironmentId
      - serviceId
      type: object
    DescribeInputParameterRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Autem officiis corporis amet.
        id: var-12345678
        serviceId: s-12345678
        token: "3"
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Reiciendis fugit.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Dolore aliquid eius et exercitationem.
          type: string
        id:
          description: ID of an Input Parameter
          example: Veniam vitae iure delectus omnis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ug
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeInputParameterResult:
      example:
        defaultValue: "true"
        dependentResourceId: r-12345678
        description: Laboriosam eos necessitatibus voluptatem.
        hasOptions: false
        id: var-12345678
        isList: false
        key: 2y
        labeledOptions:
          large: t3.xlarge
          medium: t3.large
          small: t3.medium
        limits:
          max: Vel voluptas.
          maxLength: Architecto assumenda et voluptas perferendis enim.
          min: Beatae voluptas mollitia.
          minLength: Nemo inventore tempora.
        modifiable: false
        name: 8hb
        options:
        - "true"
        - "false"
        regex: "^[a-zA-Z0-9_-]+$"
        required: false
        resourceId: r-12345678
        serviceId: s-12345678
        tabIndex: 1
        type: Boolean|Float64|String|Resource|Secret|Password
      properties:
        defaultValue:
          description: Default value to use for an optional input parameter represented
            as a string
          example: "true"
          type: string
        dependentResourceId:
          description: ID of a resource
          example: Qui sit culpa ut ut dolorem accusantium.
          type: string
        description:
          description: A brief description of the input parameter
          example: Voluptatem quis quia dolorem.
          type: string
        hasOptions:
          default: false
          description: Marks the input parameter to be selectable from a list of values
          example: false
          type: boolean
        id:
          description: ID of an Input Parameter
          example: Voluptas quam vel voluptatem tempora.
          type: string
        isList:
          default: false
          description: Marks the input parameter as a list of values
          example: false
          type: boolean
        key:
          description: Key of the input parameter
          example: "68"
          minLength: 1
          type: string
        labeledOptions:
          additionalProperties:
            example: Sint qui cupiditate laudantium quaerat vel.
            type: string
          description: "A map for labeled options. The key is the label and the value\
            \ is the option. When the option is selected, the label will be displayed\
            \ to the end customer."
          example:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          type: object
        limits:
          $ref: "#/components/schemas/Limits"
        modifiable:
          description: Marks the input parameter as immutable
          example: false
          type: boolean
        name:
          description: External name for the input parameter
          example: "45"
          minLength: 1
          type: string
        options:
          description: A list of options to restrict the value of the input parameter
            to (represented as a string)
          example:
          - "true"
          - "false"
          items:
            example: Ducimus id molestiae labore tempore id.
            type: string
          type: array
        regex:
          description: Regular expression pattern for validating the input parameter
            value
          example: "^[a-zA-Z0-9_-]+$"
          type: string
        required:
          description: Enforces the input parameter as a required parameter
          example: true
          type: boolean
        resourceId:
          description: ID of a resource
          example: Nihil ut.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        tabIndex:
          default: 0
          description: Index for parameter ordering in the SaaS portal
          example: 1
          format: int64
          type: integer
        type:
          description: Type of the variable encoding the value
          example: Boolean|Float64|String|Resource|Secret|Password
          type: string
      required:
      - description
      - id
      - isList
      - key
      - modifiable
      - name
      - required
      - resourceId
      - serviceId
      - type
      type: object
    DescribeLimitRequest:
      example:
        family: COMPUTE_INFRA
        key: MAX_VIRTUAL_CORES_PER_RESOURCE
        token: 2b0
      properties:
        family:
          description: The limit family
          example: SERVICE
          type: string
        key:
          description: Unique key to identify the limit
          example: MAX_VIRTUAL_CORES_PER_RESOURCE
          type: string
        token:
          description: JWT token used to perform authorization
          example: aj
          minLength: 1
          type: string
      required:
      - family
      - key
      - token
      type: object
    DescribeLimitResult:
      example:
        description: A premium limit
        family: COMPUTE_INFRA
        key: MAX_VIRTUAL_CORES_PER_RESOURCE
        modifiable: true
        name: Premium Tier
        value: 4
      properties:
        description:
          description: A brief description of the limit
          example: A premium limit
          type: string
        family:
          description: The limit family
          example: SERVICE
          type: string
        key:
          description: Unique key to identify the limit
          example: MAX_VIRTUAL_CORES_PER_RESOURCE
          type: string
        modifiable:
          description: Whether the limit can be modified
          example: true
          type: boolean
        name:
          description: Name of the limit
          example: Premium Tier
          type: string
        value:
          description: Value of the limit being enforced
          example: 4
          format: int64
          type: integer
      required:
      - description
      - family
      - key
      - modifiable
      - name
      - value
      type: object
    DescribeNetworkConfigRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Quia eligendi.
        id: nc-12345678
        serviceId: s-12345678
        token: 1b
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Velit accusantium fuga iure aspernatur porro enim.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Et voluptatibus nam.
          type: string
        id:
          description: ID of a Network Config
          example: Nostrum molestiae.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: qlx
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeNetworkConfigResult:
      example:
        description: A multi-zone HA network config
        endpointPerReplica: true
        id: nc-12345678
        infraConfigIDs:
        - ic-12345678
        - ic-abcdefgh
        internal: true
        name: Multi-zone
        openPorts:
        - 1299
        - 3306
        privateNetworkingConfiguration:
          privateLinkConfiguration:
            awsPrivateLinkConfigurations:
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
        publicNetworkingConfiguration:
          enableClusterLoadBalancer: true
          enableNodeLoadBalancer: true
        serviceId: s-12345678
        stableEgressIP: true
        tlsTerminationPort: 443
        zoneConfiguration: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
      properties:
        description:
          description: A brief description of the network config
          example: A multi-zone HA network config
          type: string
        endpointPerReplica:
          description: Generates a DNS endpoint per-replica for this network config
          example: true
          type: boolean
        id:
          description: ID of a Network Config
          example: Nihil rerum error et consequatur et.
          type: string
        infraConfigIDs:
          description: The list of infra config IDs associated with the compute config.
          example:
          - ic-12345678
          - ic-abcdefgh
          items:
            description: ID of an Infra Config
            example: Autem eos.
            type: string
          type: array
        internal:
          description: Restrict access to this network config to the internal network
          example: true
          type: boolean
        name:
          description: Name of the network config
          example: Multi-zone
          type: string
        openPorts:
          description: Ports to map to the generated DNS endpoint
          example:
          - 1299
          - 3306
          items:
            example: 2400293899098199759
            format: int64
            type: integer
          type: array
        privateNetworkingConfiguration:
          $ref: "#/components/schemas/PrivateNetworkingConfiguration"
        publicNetworkingConfiguration:
          $ref: "#/components/schemas/PublicNetworkingConfiguration"
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        stableEgressIP:
          description: Create an external node load balancer per node rather than
            expose the node ip directly
          example: true
          type: boolean
        tlsTerminationPort:
          description: The port that hosts the reverse proxy for TLS termination
          example: 443
          format: int64
          type: integer
        zoneConfiguration:
          description: The preferred type of zonal availability for this resource
            and the specific zone(s) to deploy in
          example: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
          type: string
      required:
      - description
      - endpointPerReplica
      - id
      - internal
      - name
      - openPorts
      - serviceId
      - stableEgressIP
      - zoneConfiguration
      type: object
    DescribeNetworkRequest:
      example:
        id: n-12345678
        serviceId: s-12345678
        token: 92n
      properties:
        id:
          description: ID of a Network
          example: Ut dolor.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 9a
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeNetworkResult:
      example:
        cidr: 10.0.0.0/16
        id: n-12345678
        networkConfigId: nc-12345678
        serviceId: s-12345678
        type: PUBLIC
        vunitId: vu-12345678
      properties:
        cidr:
          description: CIDR block for the network
          example: 10.0.0.0/16
          type: string
        id:
          description: ID of a Network
          example: Cum provident.
          type: string
        networkConfigId:
          description: ID of a Network Config
          example: Ipsa ex.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        type:
          description: The type of network
          example: PUBLIC
          type: string
        vunitId:
          description: ID of a VUnit
          example: Voluptas dolore assumenda in molestiae.
          type: string
      type: object
    DescribeOutputParameterRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Et aut rerum.
        id: op-12345678
        serviceId: s-12345678
        token: xj
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Voluptatem autem.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Magnam delectus veritatis deleniti est.
          type: string
        id:
          description: ID of an Output Parameter
          example: In voluptatibus.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: kci
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeOutputParameterResult:
      example:
        description: Username of the user created in the target system
        genericCommandValueProvider:
          args:
          - -s
          - http://example.com/api/username
          command: curl
          environment:
            PATH: /usr/local/bin:/usr/bin:/bin
          retryCount: 3
          shell: /bin/bash
          timeout: 30
          workingDir: /tmp
        id: op-12345678
        key: username
        kubectlValueProvider:
          command: "get secret {{ $sys.id }}-creds -o jsonpath='{.data.username}'"
          context: production
          environment:
            KUBECONFIG: /path/to/config
          namespace: default
          retryCount: 3
          timeout: 30
        name: Username
        resourceId: r-12345678
        serviceId: s-12345678
        value: johndoe
        valueRef: $var.username
        valueType: Boolean|Float64|String|Secret|Password
      properties:
        description:
          description: Description of the output variable being exported
          example: Username of the user created in the target system
          minLength: 1
          type: string
        genericCommandValueProvider:
          $ref: "#/components/schemas/GenericCommandValueProviderConfig"
        id:
          description: ID of an Output Parameter
          example: Hic illo ut.
          type: string
        key:
          description: Key of the output variable being exported
          example: username
          minLength: 1
          type: string
        kubectlValueProvider:
          $ref: "#/components/schemas/KubectlValueProviderConfig"
        name:
          description: External name of the output variable being exported
          example: Username
          minLength: 1
          type: string
        resourceId:
          description: ID of a resource
          example: Ullam fugit cupiditate id amet.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        value:
          description: Value of the output variable being exported
          example: johndoe
          minLength: 1
          type: string
        valueRef:
          description: Reference to an input variable that will be used to set the
            value of the output variable being exported
          example: $var.username
          type: string
        valueType:
          description: Type of the variable encoding the value
          example: Boolean|Float64|String|Secret|Password
          type: string
      required:
      - description
      - id
      - key
      - name
      - resourceId
      - serviceId
      type: object
    DescribePendingChangesRequest:
      example:
        id: sa-12345678
        productTierId: pt-12345678
        serviceId: s-12345678
        token: ji
      properties:
        id:
          description: ID of a Service API
          example: Accusantium ut repellendus inventore.
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Laudantium quis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "4"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribePendingChangesResult:
      example:
        id: sa-12345678
        resourceChangeSets:
          Dolores sit aut repellendus eveniet recusandae fugit.:
            categorizedResourceChanges:
              Deserunt et sed.:
                changes:
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                status: PENDING_UPDATE
            imageConfigChanges:
              changeState: PENDING_NEW
              imageConfigId: imgc-12345678
              imageName: mysql
            infraConfigChanges:
              changeState: PENDING_NEW
              infraConfigId: ic-12345678
              name: MySQL Writer Infra Config
            overallResourceStatus: PENDING_UPDATE
            productTierFeatureChanges: PENDING_UPDATE
            resourceChanges: PENDING_DELETE
            resourceName: Voluptas est dolorem.
        serviceId: s-12345678
      properties:
        id:
          description: ID of a Service API
          example: Cumque rem et quae et dolorum deserunt.
          type: string
        resourceChangeSets:
          additionalProperties:
            $ref: "#/components/schemas/ChangeSet"
          description: The difference for the service API configuration per resource
          example:
            Dolores sit aut repellendus eveniet recusandae fugit.:
              categorizedResourceChanges:
                Deserunt et sed.:
                  changes:
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  status: PENDING_UPDATE
              imageConfigChanges:
                changeState: PENDING_NEW
                imageConfigId: imgc-12345678
                imageName: mysql
              infraConfigChanges:
                changeState: PENDING_NEW
                infraConfigId: ic-12345678
                name: MySQL Writer Infra Config
              overallResourceStatus: PENDING_UPDATE
              productTierFeatureChanges: PENDING_UPDATE
              resourceChanges: PENDING_DELETE
              resourceName: Voluptas est dolorem.
          type: object
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - id
      - resourceChangeSets
      - serviceId
      type: object
    DescribePipelineRequest:
      example:
        id: p-12345678
        serviceId: s-12345678
        token: a
      properties:
        id:
          description: ID of a Pipeline
          example: Voluptas nulla voluptatem amet.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 8z
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribePipelineResult:
      example:
        description: MySQL SaaS promotion pipeline
        id: p-12345678
        name: my-pipeline
        serviceEnvironmentSequence:
        - se-12345678
        - se-23456789
        serviceId: s-12345678
      properties:
        description:
          description: Description of the pipeline
          example: MySQL SaaS promotion pipeline
          type: string
        id:
          description: ID of a Pipeline
          example: Ut sit itaque animi nulla debitis facere.
          type: string
        name:
          description: Name of the pipeline
          example: my-pipeline
          type: string
        serviceEnvironmentSequence:
          description: Sequence of service environments to be deployed in the pipeline
          example:
          - se-12345678
          - se-23456789
          items:
            description: ID of a Service Environment
            example: se-123456
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      type: object
    DescribePlanRequest:
      example:
        token: di
      properties:
        token:
          description: JWT token used to perform authorization
          example: w
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribePlanResult:
      example:
        modifiedAt: 2023-01-01T00:00:00Z
        paymentConfigured: true
        paymentInfoPortalURL: https://billing.stripe.com/p/session/abc123
        planCoreHourCost: 0.05
        planDescription: The starter plan is priced at 'X' units
        planFrequency: MONTHLY
        planMonthlyCost: 49
        planName: STARTER
        startDate: 2023-01-01
      properties:
        modifiedAt:
          description: The time the plan was last modified
          example: 2023-01-01T00:00:00Z
          type: string
        paymentConfigured:
          description: Whether the customer has configured their payment information.
          example: true
          type: boolean
        paymentInfoPortalURL:
          description: The URL from Stripe to configure payment information
          example: https://billing.stripe.com/p/session/abc123
          type: string
        planCoreHourCost:
          description: The cost per core hour of this plan
          example: 0.05
          format: double
          type: number
        planDescription:
          description: The description of the plan
          example: The starter plan is priced at 'X' units
          type: string
        planFrequency:
          description: This parameter tells you if the plan is charged monthly or
            yearly
          example: MONTHLY
          type: string
        planMonthlyCost:
          description: The minimum monthly cost of this plan
          example: 49
          format: double
          type: number
        planName:
          description: This parameter is used to select the appropriate Product Plan
          example: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
          type: string
        startDate:
          description: The date that the plan starts
          example: 2023-01-01
          type: string
      required:
      - planName
      type: object
    DescribeProductTierRequest:
      example:
        id: pt-12345678
        serviceId: s-12345678
        token: 6hs
        version: "3.0"
      properties:
        id:
          description: ID of a Product Tier
          example: Nesciunt assumenda illum.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 9r
          minLength: 1
          type: string
        version:
          description: The version number for the specific version set
          example: "3.0"
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeProductTierResult:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        apiGroups:
          r-12345678: v1
          r-23456789: v2
          r-34567890: v3
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        billingProductID: abc123
        billingProviders:
        - STRIPE
        - BRING_YOUR_OWN
        cloudProvidersConfigReadiness:
          aws:
            resourceA: missing terraform configuration
            resourceB: missing cloudformation configuration
        defaultBillingProvider: STRIPE
        deploymentConfiguration:
          onPremInstallerTools:
            helperUserScript:
              content: echo 'hello world'
          requirements:
            minimumK8sVersion: 1.23.1
        description: A premium product tier
        documentation: Any documentation
        enabledFeatures:
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        exportUsageMetering: true
        exportUsageMeteringConfig:
          GCS:
            GCSBucketName: my_billing_bucket_name
          S3:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
            S3BucketRegion: us-east-1
        features:
          LOGS: true
          METRICS: false
        gcpRegions:
        - us-central1
        id: pt-12345678
        isDisabled: false
        key: premium
        maxNumberOfInstances: 5
        name: Premium
        planDescription: A premium plan
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Replica hours:
            amount: 0.001
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        pricing:
          price1: value1
        privateRegions:
        - n/a
        serviceId: s-12345678
        serviceModelId: sm-12345678
        support: Any support
        tierType: OMNISTRATE_DEDICATED_TENANCY
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        apiGroups:
          additionalProperties:
            description: Version of the Entity to operate on
            example: "1.0"
            minLength: 1
            type: string
          description: The resources that belong to this service API bundle and their
            active versions
          example:
            r-12345678: v1
            r-23456789: v2
            r-34567890: v3
          type: object
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Possimus vitae eveniet est eum.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this product tier is available on
          example:
          - northcentralus
          items:
            example: Harum commodi sapiente.
            type: string
          type: array
        billingProductID:
          description: Optional billing product ID for tax purposes
          example: abc123
          type: string
        billingProviders:
          description: List of billing providers to be used for the product tier
          example:
          - STRIPE
          - BRING_YOUR_OWN
          items:
            description: The billing provider type
            example: STRIPE|BRING_YOUR_OWN
            type: string
          type: array
        cloudProvidersConfigReadiness:
          additionalProperties:
            $ref: "#/components/schemas/PerCloudProviderConfigReadiness"
          description: The readiness of the cloud providers configurations
          example:
            aws:
              resourceA: missing terraform configuration
              resourceB: missing cloudformation configuration
          type: object
        defaultBillingProvider:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        deploymentConfiguration:
          $ref: "#/components/schemas/ProductTierDeploymentConfiguration"
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        enabledFeatures:
          description: "The features that are enabled for this product tier, including\
            \ scope details and configuration"
          example:
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          items:
            $ref: "#/components/schemas/ProductTierFeatureDetail"
          type: array
        exportUsageMetering:
          description: Export usage metering data
          example: true
          type: boolean
        exportUsageMeteringConfig:
          additionalProperties: true
          description: Export usage metering data configuration
          example:
            GCS:
              GCSBucketName: my_billing_bucket_name
            S3:
              S3BucketArn: arn:aws:s3:::my_billing_bucket_name
              S3BucketRegion: us-east-1
          type: object
        features:
          additionalProperties:
            example: true
            type: boolean
          description: The features that are enabled / disabled for this product tier
          example:
            LOGS: true
            METRICS: false
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Itaque laboriosam reprehenderit.
            type: string
          type: array
        id:
          description: ID of a Product Tier
          example: At maiores sed et labore molestiae expedita.
          type: string
        isDisabled:
          description: Flag to indicate if the product tier is disabled.
          example: false
          type: boolean
        key:
          description: Unique Key of the product tier
          example: premium
          type: string
        maxNumberOfInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricePerUnit:
          additionalProperties: true
          description: Price per unit.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Replica hours:
              amount: 0.001
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        pricing:
          description: Pricing
          example:
            price1: value1
        privateRegions:
          description: The Private regions that this product tier is available on
          example:
          - n/a
          items:
            example: Consequuntur quaerat similique aliquam.
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Vel ut ea odit commodi.
          type: string
        support:
          description: Support
          example: Any support
          type: string
        tierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
      required:
      - description
      - documentation
      - id
      - isDisabled
      - key
      - name
      - planDescription
      - pricing
      - serviceId
      - serviceModelId
      - support
      - tierType
      type: object
    DescribeRegionRequest:
      example:
        id: region-12345678
        token: nij
      properties:
        id:
          description: ID of a Region
          example: Repellat fugiat nostrum nisi et.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 0mf
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeRegionResult:
      example:
        cloudProviderId: infra-12345678
        cloudProviderName: aws
        code: us-east-1
        description: US East (N. Virginia)
        id: region-12345678
      properties:
        cloudProviderId:
          description: ID of an CloudProvider
          example: Natus cupiditate ut minima alias ut.
          type: string
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        code:
          description: Cloud-provider native region code
          example: us-east-1
          minLength: 1
          type: string
        description:
          description: Description of the Region
          example: US East (N. Virginia)
          minLength: 1
          type: string
        id:
          description: ID of a Region
          example: At qui.
          type: string
      required:
      - cloudProviderId
      - cloudProviderName
      - code
      - description
      - id
      type: object
    DescribeResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: 1cl
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Impedit et totam voluptatem sit dolorem mollitia.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: i2
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    DescribeResourceInstanceResult:
      example:
        active: true
        autoscalingEnabled: true
        awsAccountID: "123456789012"
        azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
        backupStatus:
          backupPeriodInHours: 2
          backupRetentionInDays: 7
          earliestRestoreTime: 2021-09-01T00:00:00Z
          lastBackupTime: 2021-09-01T00:00:00Z
        cloud_provider: aws
        created_at: 2023-01-10T00:00:00Z
        createdByUserId: user-12345678
        createdByUserName: John Doe
        currentReplicas: "2"
        customNetworkDetail:
          cidr: 10.177.0.0/16
          id: n-12345678
          name: Prod us-east-1
        customTags:
        - key: customKey1
          value: customValue1
        - key: customKey2
          value: customValue2
        detailedNetworkTopology:
          r-abcd1234:
            allowedIPRanges:
            - 0.0.0.0/0
            clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            clusterPorts:
            - 3306
            isJob: false
            jobMetrics:
            - additionalData:
                exitCode: 0
                status: Succeeded
              endTime: 2023-01-01T10:05:00Z
              metricType: cpu_core_seconds
              startTime: 2023-01-01T10:00:00Z
              value: 120.5
            - additionalData:
                peakMemoryUsage: 512MB
              endTime: 2023-01-01T10:05:00Z
              metricType: memory_mb_seconds
              startTime: 2023-01-01T10:00:00Z
              value: 2560
            main: true
            networkingType: PUBLIC
            nodes:
            - availabilityZone: us-east-2a
              endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              healthStatus: healthy
              id: primary-0
              ports:
              - 3306
              status: RUNNING
            privateNetworkCIDR: 10.0.0.2/24
            privateNetworkID: n-1234abcd
            publiclyAccessible: true
            resourceKey: primary
            resourceName: Primary MySQL Instance
        externalPayerId: external-payer-id-1234
        gcpProjectID: my-project
        highAvailability: true
        id: instance-abcd1234
        instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
        kubernetesDashboardEndpoint:
          dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
          deploymentCellID: hc-12345678
        last_modified_at: 2023-01-20T00:00:00Z
        maintenanceTasks:
          backups:
          - backup_id: bk-12345678
          upgrade_paths:
          - upgrade_path_id: up-9876543
            upgrade_path_instance_status: PENDING
            upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
            upgrade_path_status: IN_PROGRESS
          - upgrade_path_id: up-12345548
            upgrade_path_instance_status: PENDING
            upgrade_path_released_at: 2023-01-01T09:00:00Z
            upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
            upgrade_path_status: SCHEDULED
        maxReplicas: "1"
        minReplicas: "1"
        network_type: PUBLIC|INTERNAL
        productTierFeatures:
          LOGS:
            auth:
              password: px3c4d5f6g7h8i
              username: abcd1234
            enabled: true
            websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
          METRICS:
            enabled: false
        region: us-east-1
        resourceID: r-abcd1234
        result_params:
          param1: value1
          param2: value2
        serverlessEnabled: true
        status: RUNNING
        subscriptionId: sub-abcd1234
        subscriptionLicense:
          certificateBase64: public-cert
          expirationDate: 2024-01-01T10:00:00Z
          licenseBase64: license-file
        subscriptionStatus: ACTIVE
        tierVersion: "1.0"
      properties:
        active:
          description: True if this resource instance has associated infrastructure
            deployed
          example: true
          type: boolean
        autoscalingEnabled:
          description: Whether the instance has autoscaling enabled
          example: true
          type: boolean
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 0fa05079-dd73-4b88-babc-05537817604a
          type: string
        backupStatus:
          $ref: "#/components/schemas/BackupStatus"
        cloud_provider:
          description: The cloud provider name
          example: aws
          type: string
        created_at:
          description: The instance creation time
          example: 2023-01-10T00:00:00Z
          type: string
        createdByUserId:
          description: ID of a User
          example: Eaque autem.
          type: string
        createdByUserName:
          description: The name of the user that created the resource instance
          example: John Doe
          type: string
        currentReplicas:
          description: The current number of replicas
          example: "2"
          type: string
        customNetworkDetail:
          $ref: "#/components/schemas/CustomNetworkResourceDetail"
        customTags:
          description: The custom tag for the resource instance
          example:
          - key: customKey1
            value: customValue1
          - key: customKey2
            value: customValue2
          items:
            $ref: "#/components/schemas/CustomTag"
          type: array
        detailedNetworkTopology:
          additionalProperties:
            $ref: "#/components/schemas/ResourceNetworkTopologyResult"
          description: The detailed network topology
          example:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              isJob: false
              jobMetrics:
              - additionalData:
                  exitCode: 0
                  status: Succeeded
                endTime: 2023-01-01T10:05:00Z
                metricType: cpu_core_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 120.5
              - additionalData:
                  peakMemoryUsage: 512MB
                endTime: 2023-01-01T10:05:00Z
                metricType: memory_mb_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 2560
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: primary
              resourceName: Primary MySQL Instance
          type: object
        externalPayerId:
          description: The external payer id to record which customer should pay for
            this resource instance
          example: external-payer-id-1234
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        highAvailability:
          description: Whether the instance is High Availability
          example: true
          type: boolean
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        instanceLoadStatus:
          description: The load status of a pod
          example: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          type: string
        kubernetesDashboardEndpoint:
          $ref: "#/components/schemas/KubernetesDashboardEndpoint"
        last_modified_at:
          description: The instance update time
          example: 2023-01-20T00:00:00Z
          type: string
        maintenanceTasks:
          additionalProperties: true
          description: "Pending actions or maintenance tasks for the resource instance,\
            \ with action type as key and reference key as value."
          example:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          type: object
        maxReplicas:
          description: The maximum number of replicas
          example: "1"
          type: string
        minReplicas:
          description: The minimum number of replicas
          example: "1"
          type: string
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        productTierFeatures:
          additionalProperties: true
          description: The product tier features
          example:
            LOGS:
              auth:
                password: px3c4d5f6g7h8i
                username: abcd1234
              enabled: true
              websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
            METRICS:
              enabled: false
          type: object
        region:
          description: The region code
          example: us-east-1
          type: string
        resourceID:
          description: ID of a resource
          example: Et a.
          type: string
        result_params:
          description: Custom result parameters
          example:
            param1: value1
            param2: value2
        serverlessEnabled:
          description: Whether the instance has serverless enabled
          example: true
          type: boolean
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        subscriptionId:
          description: Subscription ID
          example: sub-abcd1234
          type: string
        subscriptionLicense:
          $ref: "#/components/schemas/SubscriptionLicense"
        subscriptionStatus:
          description: Subscription Status
          example: ACTIVE|SUSPENDED|TERMINATED|CANCELLED
          type: string
        tierVersion:
          description: The tier version of the resource instance.
          example: "1.0"
          type: string
      type: object
    DescribeResourceMetricsConfigRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Possimus dolores reiciendis.
        id: r-12345678
        serviceId: s-12345678
        token: 0m8
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Molestias dolore natus est autem ab.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Ut consequatur.
          type: string
        id:
          description: ID of a resource
          example: Atque et quis rem adipisci.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 0o
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeResourceRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Ex qui similique.
        id: r-12345678
        serviceId: s-12345678
        token: "7"
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Numquam sint.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Quidem ut quidem laudantium a facilis.
          type: string
        id:
          description: ID of a resource
          example: Corrupti dolores ut sit pariatur delectus dolores.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: f
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeResourceResult:
      example:
        actionHooks:
        - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
          scope: CLUSTER
          type: INIT
        additionalSecurityContext:
          AddCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          DropCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          SupplementalGroupIDs:
          - 1001
          - 999
        agentConfiguration:
          codeInterpreter:
            allowedPackages:
            - pandas
            - numpy
            - matplotlib
            enabled: true
            provider: agentcore
            timeout: 60
          dockerfile: Dockerfile
          evaluations:
          - metrics:
            - relevance
            - helpfulness
            name: response-quality
            schedule: every 6 hours
          memory:
            enabled: true
          monitoring:
            enabled: true
          vectorStore:
            enabled: true
        backupConfiguration:
          backupPeriodInHours: 24
          backupRetentionInDays: 7
        blobStorageConfiguration:
          GCSConfiguration: {}
          S3Configuration: {}
        capabilities:
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        containerImagesRegistryCopyConfiguration:
          images:
          - imageName: postgres
            imageTag: "16"
          - imageName: postgres
            imageTag: "16"
          pullSource:
            credentials:
              password: my-password
              username: my-user
            registryURL: https://my-registry.com
            repositoryName: library
          pushTarget:
            credentials:
              password: my-password
              username: my-user
            registryURL: https://my-registry.com
            repositoryName: library
        customLabels:
          key: value
        customSysCTLs:
          net.ipv4.tcp_syncookies: "1"
        customULimits:
        - ULimitsName: NoProc
          ULimitsType: Soft
          ULimitsValue: 1000
        - ULimitsName: NoFile
          ULimitsType: Hard
          ULimitsValue: 2048
        dependencies:
        - parameterMap:
            clusterId: writerId
            clusterOrg: userDatabase
          resourceId: r-12345678
        - parameterMap:
            clusterId: readerId
            clusterOrg: userDatabase
          resourceId: r-abcdef12
        description: An resource to manage a hosted public SaaS offering of a multi-writer
          MySQL service
        disable: "{{ $var.disableExtraComponents }}"
        environmentVariables:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        fileSystemConfiguration:
          EFSFileSystemConfiguration:
            PerformanceMode: generalPurpose|maxIO
            ProvisionedThroughputInMibps: 125
            ThroughputMode: provisioned|bursting|elastic
          GCPFilestoreConfiguration:
            Capacity: 1024GiB
            MaxIopsPerTb: 3000
            Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
        helmChartConfiguration:
          autoDiscoverImagesTag: omnistrate/images
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          layeredChartValues:
          - values:
              global:
                image:
                  tag: v1.0.0
                replicaCount: 1
                resources:
                  requests:
                    cpu: 100m
                    memory: 128Mi
          - scope:
              '{{ $sys.cloudProviderName }}': aws
            valuesFile:
              gitConfiguration:
                accessToken: ghp_...
                commitSHA: a1b2c3d4e5f6
                path: aws/production.yaml
                referenceName: refs/heads/main
                repositoryUrl: https://github.com/org/helm-values
          namespace: postgres
          password: my-password
          releaseName: my-release
          runtimeConfiguration:
            disableHooks: true
            recreate: true
            resetThenReuseValues: true
            resetValues: true
            reuseValues: true
            skipCRDs: true
            timeoutNanos: 1000000000
            upgradeCRDs: true
            wait: true
            waitForJobs: true
          username: my-user
        id: r-12345678
        imageConfigId: imgc-12345678
        infraConfigId: ic-12345678
        internal: false
        isDeprecated: false
        jobConfig:
          activeDeadlineSeconds: 300
          backoffLimit: 5
        key: galera
        kustomizeConfiguration:
          disableReconciliation: false
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          gitConfiguration:
            accessToken: my-token
            commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
            referenceName: tags/v1.0.0
            repositoryUrl: https://github.com/username/myrepo
            userName: my-user
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          kustomizePath: /kustomize
        l4LoadBalancerConfiguration:
          ingressPortConfiguration:
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8080
            ingressPort: 1234
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8081
            ingressPort: 5678
          - associatedResourceIDs:
            - r-vwxybz12
            - r-poij122v
            backendPort: 8082
            ingressPort: 9012
        l7LoadBalancerConfiguration:
          paths:
          - associatedResourceID: r-12345678
            path: /path
            port: 8080
        name: Galera
        onPremTerraformConfigurations:
          OpenShift:
            gitConfiguration:
              referenceName: ref
              repositoryUrl: gitUrl
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
        operatorCRDConfiguration:
          disableReconciliation: false
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          outputParameters:
            expiresAt: $out.status.notAfter
            issuerName: letsencrypt-prod
          readinessConditions:
            $out.status.conditions[?(@.type=='Ready')].status: true
          supplementalFiles:
          - |
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
          - |-
            apiVersion: ingress.nginx.io/v1
            kind: IngressClass
            metadata:
              name: nginx
            spec:
              controller: nginx.org/ingress-controller
          template: |-
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
                email: test@example.com
                privateKeySecretRef:
                  name: letsencrypt-prod
                solvers:
                - http01:
                    ingress:
                      class: nginx
        productTierId: pt-12345678
        proxyType: PortsBasedProxy
        resourceType: Generic
        serviceId: s-12345678
        terraformConfigurations:
          aws:
            gitConfiguration:
              referenceName: ref
              repositoryUrl: gitUrl
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
      properties:
        actionHooks:
          description: The action hooks that this resource supports
          example:
          - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
            scope: CLUSTER
            type: INIT
          items:
            $ref: "#/components/schemas/ActionHook"
          type: array
        additionalSecurityContext:
          $ref: "#/components/schemas/AdditionalSecurityContext"
        agentConfiguration:
          $ref: "#/components/schemas/AgentConfiguration"
        backupConfiguration:
          $ref: "#/components/schemas/BackupConfiguration"
        blobStorageConfiguration:
          $ref: "#/components/schemas/BlobStorageConfiguration"
        capabilities:
          description: The capabilities enabled for the resource
          example:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          items:
            $ref: "#/components/schemas/ResourceCapability"
          type: array
        containerImagesRegistryCopyConfiguration:
          $ref: "#/components/schemas/ContainerImagesRegistryCopyConfiguration"
        customLabels:
          additionalProperties:
            example: Iste et dolor porro perspiciatis iure.
            type: string
          description: Custom labels for the resource
          example:
            key: value
          type: object
        customSysCTLs:
          additionalProperties:
            example: Iste et.
            type: string
          description: Custom sysctl settings for the resource
          example:
            net.ipv4.tcp_syncookies: "1"
          type: object
        customULimits:
          description: Custom ulimits for the resource
          example:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          items:
            $ref: "#/components/schemas/CustomULimits"
          type: array
        dependencies:
          example:
          - parameterMap:
              clusterId: writerId
              clusterOrg: userDatabase
            resourceId: r-12345678
          - parameterMap:
              clusterId: readerId
              clusterOrg: userDatabase
            resourceId: r-abcdef12
          items:
            $ref: "#/components/schemas/ResourceDependency"
          type: array
        description:
          description: A brief description of the resource
          example: An resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          type: string
        disable:
          description: "Allows resource to be disabled. Expression returning true/false\
            \ can be used as value. Resource is enabled by default, if this property\
            \ is not set."
          example: "{{ $var.disableExtraComponents }}"
          type: string
        environmentVariables:
          description: The environment variables that this resource requires
          example:
          - name: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: "#/components/schemas/EnvironmentVariable"
          type: array
        fileSystemConfiguration:
          $ref: "#/components/schemas/FileSystemConfiguration"
        helmChartConfiguration:
          $ref: "#/components/schemas/HelmChartConfiguration"
        id:
          description: ID of a resource
          example: Eos voluptatem.
          type: string
        imageConfigId:
          description: ID of an Image Config
          example: Aut quidem aut quasi.
          type: string
        infraConfigId:
          description: ID of an Infra Config
          example: Facilis adipisci velit inventore.
          type: string
        internal:
          default: false
          description: Whether this resource is internal or not
          example: false
          type: boolean
        isDeprecated:
          default: false
          description: Whether this resource is deprecated or not
          example: true
          type: boolean
        jobConfig:
          $ref: "#/components/schemas/JobConfig"
        key:
          description: The key of the resource
          example: galera
          type: string
        kustomizeConfiguration:
          $ref: "#/components/schemas/KustomizeConfiguration"
        l4LoadBalancerConfiguration:
          $ref: "#/components/schemas/L4LoadBalancerConfiguration"
        l7LoadBalancerConfiguration:
          $ref: "#/components/schemas/L7LoadBalancerConfiguration"
        name:
          description: Name of the resource
          example: Galera
          type: string
        onPremTerraformConfigurations:
          additionalProperties:
            $ref: "#/components/schemas/TerraformConfiguration"
          description: The Terraform configurations for an OnPrem platform
          example:
            OpenShift:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          type: object
        operatorCRDConfiguration:
          $ref: "#/components/schemas/OperatorCRDConfiguration"
        productTierId:
          description: ID of a Product Tier
          example: Quo dolorem nemo at voluptas.
          type: string
        proxyType:
          description: The proxy type of instance
          example: PortsBasedProxy
          type: string
        resourceType:
          description: The type of the resource
          example: '|Generic|PortsBasedProxy|L4LoadBalancer|L7LoadBalancer|FileSystem|OperatorCRD|HelmChart|Kustomize'
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        terraformConfigurations:
          additionalProperties:
            $ref: "#/components/schemas/TerraformConfiguration"
          description: The Terraform configurations for cloud providers
          example:
            aws:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          type: object
      required:
      - description
      - id
      - internal
      - isDeprecated
      - key
      - name
      - productTierId
      - resourceType
      - serviceId
      type: object
    DescribeServiceAPIRequest:
      example:
        id: sa-12345678
        serviceId: s-12345678
        token: qx
      properties:
        id:
          description: ID of a Service API
          example: Corrupti sed.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: jg
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeServiceAPIResult:
      example:
        apiVersion: v1
        deploymentConfigId: dc-12345678
        description: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
          for high availability
        id: sa-12345678
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        serviceName: mysql
      properties:
        apiVersion:
          description: The external version of the API
          example: v1
          type: string
        deploymentConfigId:
          description: ID of a Deployment Config
          example: Et commodi sequi labore odit temporibus.
          type: string
        description:
          description: A brief description of the service API bundle
          example: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
            for high availability
          type: string
        id:
          description: ID of a Service API
          example: Quam laborum.
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceName:
          description: The name of the service
          example: mysql
          type: string
      required:
      - apiVersion
      - deploymentConfigId
      - description
      - id
      - serviceEnvironmentId
      - serviceId
      - serviceName
      type: object
    DescribeServiceEnvironmentRequest:
      example:
        id: se-12345678
        serviceId: s-12345678
        token: fq
      properties:
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: tl
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeServiceEnvironmentResult:
      example:
        autoApproveSubscription: false
        deploymentConfigId: dc-12345678
        description: The production environment for the MySQL multi-writer service
        id: se-12345678
        key: production
        name: Production
        roleType: admin
        saasPortalStatus: READY
        saasPortalUrl: https://saas-portal.example.com
        serviceAuthPublicKey: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        serviceId: s-12345678
        sourceEnvironmentId: se-12345678
        type: DEV
        visibility: PUBLIC
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        deploymentConfigId:
          description: ID of a Deployment Config
          example: Eum odio nihil debitis.
          type: string
        description:
          description: A brief description of the service environment
          example: The production environment for the MySQL multi-writer service
          type: string
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        key:
          description: Unique Key of the Service Environment
          example: production
          type: string
        name:
          description: Name of the Service Environment
          example: Production
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        saasPortalStatus:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        saasPortalUrl:
          description: The URL of the SaaS portal for this environment type
          example: https://saas-portal.example.com
          type: string
        serviceAuthPublicKey:
          description: PEM-encoded Public key part of the key used to sign the JWT
            tokens for the service control plane APIs
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        type:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - deploymentConfigId
      - description
      - id
      - key
      - name
      - serviceId
      - type
      - visibility
      type: object
    DescribeServiceModelRequest:
      example:
        id: sm-12345678
        serviceId: s-12345678
        token: boy
      properties:
        id:
          description: ID of a Service Model
          example: Odio perferendis et suscipit et ut.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "7"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeServiceModelResult:
      example:
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        activeAccountConfigIds:
          aws: ac-12345678
          gcp: ac-23456789
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        features:
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        id: sm-12345678
        key: mysql-multi-writer-service-hosted-model
        modelType: CUSTOMER_HOSTED
        name: MySQL multi-writer service hosted model
        productTiers:
        - pt-12345678
        - pt-87654321
        serviceApiId: sa-12345678
        serviceId: s-12345678
      properties:
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            description: ID of an Account Config
            example: Consectetur saepe cum tempora nihil.
            type: string
          type: array
        activeAccountConfigIds:
          additionalProperties:
            description: ID of an Account Config
            example: Ea ducimus suscipit.
            type: string
          description: The active infrastructure account configuration IDs per cloud
            provider
          example:
            aws: ac-12345678
            gcp: ac-23456789
          type: object
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        features:
          description: Enabled service model features
          example:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          items:
            $ref: "#/components/schemas/ServiceModelFeatureDetail"
          type: array
        id:
          description: ID of a Service Model
          example: Doloremque nam.
          type: string
        key:
          description: The unique key for this service model
          example: mysql-multi-writer-service-hosted-model
          type: string
        modelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        productTiers:
          description: The product tiers associated with this service model
          example:
          - pt-12345678
          - pt-87654321
          items:
            description: ID of a Product Tier
            example: Neque est culpa.
            type: string
          type: array
        serviceApiId:
          description: ID of a Service API
          example: Tempora ratione earum optio.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - description
      - id
      - key
      - modelType
      - name
      - serviceApiId
      - serviceId
      type: object
    DescribeServiceOfferingRequest:
      example:
        environmentType: DEV
        serviceId: s-12345678
        token: ieb
        visibility: PRIVATE
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: v
          minLength: 1
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - serviceId
      - token
      type: object
    DescribeServiceOfferingResourceRequest:
      example:
        instanceId: instance-12345678
        productTierId: pt-12345678
        productTierVersion: 1.0.0
        resourceId: r-12345678
        serviceId: s-12345678
        token: cf
      properties:
        instanceId:
          default: none
          description: The instance ID
          example: instance-12345678
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Voluptas neque et culpa reiciendis vel.
          type: string
        productTierVersion:
          description: The product tier version
          example: 1.0.0
          type: string
        resourceId:
          description: ID of a resource
          example: Dolor ut temporibus.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: c
          minLength: 1
          type: string
      required:
      - resourceId
      - serviceId
      - token
      type: object
    DescribeServiceOfferingResourceResult:
      example:
        apis:
        - inputParameters:
          - defaultValue: null
            description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            modifiable: true
            options: null
            required: true
            type: string
          - defaultValue: option1
            description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            modifiable: true
            options:
            - option1
            - option2
            required: true
            type: string
          outputParameters:
          - description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            type: string
          - description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            type: string
          verb: create
        - inputParameters:
          - defaultValue: null
            description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            modifiable: true
            options: null
            required: true
            type: string
          outputParameters:
          - description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            type: string
          - description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            type: string
          verb: describe
      properties:
        apis:
          description: The APIs
          example:
          - inputParameters:
            - defaultValue: null
              description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              modifiable: true
              options: null
              required: true
              type: string
            - defaultValue: option1
              description: The type of the server
              displayName: Server Type
              isList: false
              key: serverType
              modifiable: true
              options:
              - option1
              - option2
              required: true
              type: string
            outputParameters:
            - description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              type: string
            - description: The type of the server
              displayName: Server Type
              isList: false
              key: serverType
              type: string
            verb: create
          - inputParameters:
            - defaultValue: null
              description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              modifiable: true
              options: null
              required: true
              type: string
            outputParameters:
            - description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              type: string
            - description: The type of the server
              displayName: Server Type
              isList: false
              key: serverType
              type: string
            verb: describe
          items:
            $ref: "#/components/schemas/APIEntity"
          type: array
      type: object
    DescribeServiceOfferingResult:
      example:
        createdAt: 2019-01-01T00:00:00Z
        isDeprecated: false
        offerings:
        - allowCreatesWhenPaymentNotConfigured: true
          assets:
            cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
            cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
          maxNumberOfInstances: 4
          productTierName: Premium
          productTierURLKey: premium
          resourceParameters:
          - name: MySQL
            urlKey: mysql
          - name: Redis
            urlKey: redis
          serviceAPIID: sa-12345678
          serviceAPIVersion: v1
          serviceEnvironmentName: Production
          serviceEnvironmentURLKey: prod
          serviceEnvironmentVisibility: PRIVATE
          serviceModelName: Bring Your Own Account
          serviceModelURLKey: byoa
        - productTierName: Basic
          productTierURLKey: basic
          resourceParameters:
          - name: MySQL
            urlKey: mysql
          - name: Redis
            urlKey: redis
          serviceAPIID: sa-abcdefgh
          serviceAPIVersion: v1
          serviceEnvironmentName: Production
          serviceEnvironmentURLKey: prod
          serviceEnvironmentVisibility: PUBLIC
          serviceModelName: Hosted
          serviceModelURLKey: hosted
        serviceDescription: MySQL is a relational database
        serviceId: s-12345678
        serviceName: MySQL
        serviceOrgId: org-12345678
        serviceProviderId: sp-9zrg9W8Are
        serviceProviderName: "Omnistrate, Inc."
        serviceURLKey: mysql
      properties:
        createdAt:
          description: The time the service was created
          example: 2019-01-01T00:00:00Z
          type: string
        isDeprecated:
          default: false
          description: Whether the service offering is deprecated
          example: false
          type: boolean
        offerings:
          description: The service offerings
          example:
          - allowCreatesWhenPaymentNotConfigured: true
            assets:
              cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
              cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
            maxNumberOfInstances: 4
            productTierName: Premium
            productTierURLKey: premium
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-12345678
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PRIVATE
            serviceModelName: Bring Your Own Account
            serviceModelURLKey: byoa
          - productTierName: Basic
            productTierURLKey: basic
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-abcdefgh
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PUBLIC
            serviceModelName: Hosted
            serviceModelURLKey: hosted
          items:
            $ref: "#/components/schemas/ServiceOffering"
          type: array
        serviceDescription:
          description: The service description
          example: MySQL is a relational database
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceName:
          description: The service name
          example: MySQL
          type: string
        serviceOrgId:
          description: ID of an Org
          example: Nisi veniam officia voluptatum qui quia vitae.
          type: string
        serviceProviderId:
          description: The id of the service provider
          example: sp-9zrg9W8Are
          type: string
        serviceProviderName:
          description: The name of the service provider
          example: "Omnistrate, Inc."
          type: string
        serviceURLKey:
          description: The service URL key
          example: mysql
          type: string
      required:
      - createdAt
      - isDeprecated
      - offerings
      - serviceDescription
      - serviceId
      - serviceName
      - serviceOrgId
      - serviceProviderId
      - serviceProviderName
      - serviceURLKey
      type: object
    DescribeServiceProviderOrganizationRequest:
      example:
        token: g0
      properties:
        token:
          description: JWT token used to perform authorization
          example: f
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribeServiceProviderOrganizationResult:
      example:
        DefaultDeploymentCellConfigurations:
          DeploymentCellConfigurationPerCloudProvider:
            AWS:
              Amenities:
              - Description: DNS server for Kubernetes clusters.
                IsManaged: true
                Name: CoreDNS
                Type: HelmChart
              - Description: Service mesh for microservices.
                IsManaged: false
                Name: Istio
                Properties:
                  ChartName: istio-base
                  ChartValues:
                    pilot:
                      traceSampling: 1
                  ChartVersion: 1.18.2
                  RepoURL: https://istio-release.storage.googleapis.com/charts
                Type: HelmChart
        DeploymentCellConfigurationsPerEnv:
          DEV:
            DeploymentCellConfigurationPerCloudProvider:
              GCP:
                Amenities:
                - Description: Distributed tracing system.
                  IsManaged: true
                  Name: Jaeger
                  Type: HelmChart
          PROD:
            DeploymentCellConfigurationPerCloudProvider:
              AWS:
                Amenities:
                - Description: Ensures high availability across multiple zones.
                  IsManaged: true
                  Name: Prometheus
                  Type: HelmChart
                - Description: Provides dashboards and visualizations.
                  IsManaged: false
                  Name: Grafana
                  Properties:
                    ChartName: grafana
                    ChartValues:
                      adminPassword: securepassword
                      adminUser: admin
                    ChartVersion: 6.17.4
                    RepoURL: https://grafana.github.io/helm-charts
                  Type: HelmChart
        id: org-aKQ8G13QeR
        isPerEnvClusterEnabled: true
      properties:
        DefaultDeploymentCellConfigurations:
          $ref: "#/components/schemas/DeploymentCellConfigurations"
        DeploymentCellConfigurationsPerEnv:
          additionalProperties:
            $ref: "#/components/schemas/DeploymentCellConfigurations"
          description: The default deployment cell configurations for the organization
            per environment.
          example:
            DEV:
              DeploymentCellConfigurationPerCloudProvider:
                GCP:
                  Amenities:
                  - Description: Distributed tracing system.
                    IsManaged: true
                    Name: Jaeger
                    Type: HelmChart
            PROD:
              DeploymentCellConfigurationPerCloudProvider:
                AWS:
                  Amenities:
                  - Description: Ensures high availability across multiple zones.
                    IsManaged: true
                    Name: Prometheus
                    Type: HelmChart
                  - Description: Provides dashboards and visualizations.
                    IsManaged: false
                    Name: Grafana
                    Properties:
                      ChartName: grafana
                      ChartValues:
                        adminPassword: securepassword
                        adminUser: admin
                      ChartVersion: 6.17.4
                      RepoURL: https://grafana.github.io/helm-charts
                    Type: HelmChart
          type: object
        id:
          description: ID of an Org
          example: Nihil maxime inventore fugiat dicta dicta.
          type: string
        isPerEnvClusterEnabled:
          description: Whether per-environment clusters are enabled for the organization
          example: true
          type: boolean
      type: object
    DescribeServiceRequest:
      example:
        id: s-12345678
        token: oa
      properties:
        id:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ma
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeServiceResult:
      example:
        createdAt: 2019-01-01T00:00:00Z
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        id: s-12345678
        key: mysql
        name: MySQL multi-writer service
        roleType: admin
        serviceEnvironments:
        - id: se-12345678
          name: dev
          promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          saasPortalStatus: READY
          saasPortalUrl: https://saas-portal.example.com
          servicePlans:
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          sourceEnvironmentID: se-12345678
          sourceEnvironmentName: dev
          type: DEV
          visibility: private
        - id: se-12345678
          name: dev
          promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          saasPortalStatus: READY
          saasPortalUrl: https://saas-portal.example.com
          servicePlans:
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          sourceEnvironmentID: se-12345678
          sourceEnvironmentName: dev
          type: DEV
          visibility: private
        - id: se-12345678
          name: dev
          promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          saasPortalStatus: READY
          saasPortalUrl: https://saas-portal.example.com
          servicePlans:
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          sourceEnvironmentID: se-12345678
          sourceEnvironmentName: dev
          type: DEV
          visibility: private
        - id: se-12345678
          name: dev
          promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          saasPortalStatus: READY
          saasPortalUrl: https://saas-portal.example.com
          servicePlans:
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          sourceEnvironmentID: se-12345678
          sourceEnvironmentName: dev
          type: DEV
          visibility: private
        serviceLogoURL: Molestiae et omnis.
        serviceProviderID: sp-12345678
        serviceProviderName: "Omnistrate, Inc."
      properties:
        createdAt:
          description: The time the service was created
          example: 2019-01-01T00:00:00Z
          type: string
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        id:
          description: ID of a Service
          example: s-123456
          type: string
        key:
          description: Unique key of the service
          example: mysql
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        serviceEnvironments:
          description: List of service environments
          example:
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          items:
            $ref: "#/components/schemas/ServiceEnvironment"
          type: array
        serviceLogoURL:
          description: The logo for the service
          example: Aspernatur quod est ut ut qui.
          type: string
        serviceProviderID:
          description: ID of a Service Provider
          example: Quo aspernatur architecto molestiae velit tenetur adipisci.
          type: string
        serviceProviderName:
          description: The name of the service provider
          example: "Omnistrate, Inc."
          type: string
      required:
      - createdAt
      - description
      - id
      - key
      - name
      - serviceEnvironments
      - serviceProviderID
      - serviceProviderName
      type: object
    DescribeServicesOrchestrationRequest:
      example:
        id: so-12345678
        token: c25
      properties:
        id:
          description: ID of a Services Orchestration
          example: Cum suscipit in aut.
          type: string
        token:
          description: JWT token used to perform authorization
          example: sa
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeServicesOrchestrationResult:
      example:
        ServicesTopology:
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Neque sed id magnam.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Neque sed id magnam.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Neque sed id magnam.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Neque sed id magnam.
        createdAt: 2021-01-01T00:00:00Z
        id: so-12345678
        orchestrationFailedReason: Invalid DSL
        resultParams:
          param1: value1
          param2: value2
        status: PENDING
        updatedAt: 2021-01-01T00:00:00Z
      properties:
        ServicesTopology:
          description: The services deployment details
          example:
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Neque sed id magnam.
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Neque sed id magnam.
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Neque sed id magnam.
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Neque sed id magnam.
          items:
            $ref: "#/components/schemas/ServiceDeploymentDetails"
          type: array
        createdAt:
          description: The time the services orchestration was created
          example: 2021-01-01T00:00:00Z
          type: string
        id:
          description: ID of a Services Orchestration
          example: Commodi id sit harum est magni et.
          type: string
        orchestrationFailedReason:
          description: The reason why the orchestration failed
          example: Invalid DSL
          type: string
        resultParams:
          description: Custom result parameters of the services orchestration
          example:
            param1: value1
            param2: value2
        status:
          description: The status of the services orchestration
          example: PENDING
          type: string
        updatedAt:
          description: The time the services orchestration was last updated
          example: 2021-01-01T00:00:00Z
          type: string
      required:
      - createdAt
      - id
      - status
      - updatedAt
      type: object
    DescribeStorageConfigRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Aut optio animi ea.
        id: sc-12345678
        serviceId: s-12345678
        token: v
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Vitae alias sed.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Modi quidem laboriosam voluptatem velit.
          type: string
        id:
          description: ID of a Storage Config
          example: Ullam et tenetur vel.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "7"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeStorageConfigResult:
      example:
        description: my-storage-config-description
        id: sc-12345678
        infraConfigIDs:
        - ic-12345678
        - ic-abcdefgh
        name: my-storage-config
        serviceId: s-12345678
        volumes:
          svc-12345678:
          - /data
          - /mnt/logs
          svc-23456789:
          - /config
      properties:
        description:
          description: Description of the storage config
          example: my-storage-config-description
          type: string
        id:
          description: ID of a Storage Config
          example: Qui rerum enim et inventore.
          type: string
        infraConfigIDs:
          description: The list of infra config IDs associated with the compute config.
          example:
          - ic-12345678
          - ic-abcdefgh
          items:
            description: ID of an Infra Config
            example: Sed alias qui.
            type: string
          type: array
        name:
          description: Name of the storage config
          example: my-storage-config
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        volumes:
          additionalProperties:
            example:
            - Voluptas quidem.
            - Atque rerum quae nobis eaque.
            items:
              example: Amet non et dolorem.
              type: string
            type: array
          description: The storage volume config IDs and the corresponding mount path
          example:
            svc-12345678:
            - /data
            - /mnt/logs
            svc-23456789:
            - /config
          type: object
      required:
      - description
      - id
      - name
      - serviceId
      - volumes
      type: object
    DescribeStorageVolumeConfigRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Alias eos non saepe non.
        id: svc-12345678
        serviceId: s-12345678
        token: vgo
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Soluta et voluptas quae hic laboriosam.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Necessitatibus culpa maiores maiores optio asperiores.
          type: string
        id:
          description: ID of a Storage Volume Config
          example: Sequi culpa alias doloribus voluptatem iste et.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: fb
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeStorageVolumeConfigResult:
      example:
        cloudProviderName: aws
        clusterStorageType: S3|$var.storageType|AWS::EFS
        description: A storage volume set to store the MySQL data directory
        disableBackup: false
        id: svc-12345678
        instanceStorageIops: "7500"
        instanceStorageSizeGi: "128"
        instanceStorageThroughputMiBps: "128"
        instanceStorageType: $var.storageType
        name: MySQL Data Volume
        serviceId: s-12345678
        storageResourceID: r-12345678
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        clusterStorageType:
          description: The type of the fixed storage for the cluster
          example: S3|$var.storageType|AWS::EFS
          type: string
        description:
          description: A brief description of the context for the storage volume pool
          example: A storage volume set to store the MySQL data directory
          type: string
        disableBackup:
          description: Disable backup for the storage volume
          example: false
          type: boolean
        id:
          description: ID of a Storage Volume Config
          example: Unde quibusdam optio.
          type: string
        instanceStorageIops:
          description: The IOPS provisioned for the configured instance storage type
          example: "7500"
          type: string
        instanceStorageSizeGi:
          description: The fixed storage size (in Gi) provisioned for the configured
            instance storage type
          example: "128"
          type: string
        instanceStorageThroughputMiBps:
          description: The throughput (in MiBps) provisioned for the configured instance
            storage type
          example: "128"
          type: string
        instanceStorageType:
          description: The type of the fixed storage for a compute instance
          example: $var.storageType
          type: string
        name:
          description: Name of the storage volume pool
          example: MySQL Data Volume
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        storageResourceID:
          description: The storage resource ID
          example: r-12345678
          type: string
      required:
      - description
      - id
      - name
      - serviceId
      type: object
    DescribeSubscriptionRequest:
      example:
        id: sub-12345678
        token: "5"
      properties:
        id:
          description: ID of a Subscription
          example: Voluptas illum.
          type: string
        token:
          description: JWT token used to perform authorization
          example: h2
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeSubscriptionRequestRequest:
      example:
        id: subr-12345678
        token: a
      properties:
        id:
          description: ID of a Subscription Request
          example: Saepe quas magnam officia ea.
          type: string
        token:
          description: JWT token used to perform authorization
          example: uj
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeSubscriptionRequestResult:
      example:
        createdAt: 2019-01-01T00:00:00Z
        id: subr-12345678
        productTierId: pt-12345678
        productTierName: Omnistrate Multi Tenancy
        rootUserEmail: abc@gmail.com
        rootUserId: org-12345678
        rootUserName: John Doe
        serviceId: s-12345678
        serviceLogoURL: Quaerat rerum.
        serviceName: MySQL multi-writer service
        status: PENDING
        updatedAt: 2019-01-01T00:00:00Z
        updatedByUserId: user-12345678
        updatedByUserName: John Doe
      properties:
        createdAt:
          description: The time that this subscription request was issued
          example: 2019-01-01T00:00:00Z
          type: string
        id:
          description: ID of a Subscription Request
          example: Id tenetur inventore voluptatem fugit quis facilis.
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Quaerat sapiente quasi.
          type: string
        productTierName:
          description: The name of the product tier
          example: Omnistrate Multi Tenancy
          type: string
        rootUserEmail:
          description: The email of the user that issued the subscription request
          example: abc@gmail.com
          type: string
        rootUserId:
          description: ID of a User
          example: Eum deserunt autem illo ut consequuntur repellendus.
          type: string
        rootUserName:
          description: The name of the user that issued the subscription request
          example: John Doe
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Saepe praesentium laborum reiciendis a in ullam.
          type: string
        serviceName:
          description: The name of the service
          example: MySQL multi-writer service
          type: string
        status:
          description: The status of the subscription request
          example: PENDING|APPROVED|DENIED|CANCELLED
          type: string
        updatedAt:
          description: The time that this subscription request was issued
          example: 2019-01-01T00:00:00Z
          type: string
        updatedByUserId:
          description: ID of a User
          example: Est omnis.
          type: string
        updatedByUserName:
          description: The user that last updated the subscription request
          example: John Doe
          type: string
      required:
      - createdAt
      - id
      - productTierId
      - productTierName
      - rootUserEmail
      - rootUserId
      - rootUserName
      - serviceId
      - serviceName
      - status
      - updatedAt
      - updatedByUserId
      - updatedByUserName
      type: object
    DescribeSubscriptionResult:
      example:
        accountConfigIdentityId: org-12345678
        allowCreatesWhenPaymentNotConfigured: true
        cloudProviderNames:
        - aws
        - gcp
        createdAt: 2019-01-01T00:00:00Z
        defaultSubscription: true
        id: sub-12345678
        maxNumberOfInstances: 10
        paymentMethodConfigured: true
        productTierId: pt-12345678
        productTierName: Omnistrate Multi Tenancy
        roleType: root
        rootUserId: user-12345678
        serviceId: s-12345678
        serviceLogoURL: Labore quibusdam officiis soluta eos.
        serviceName: MySQL multi-writer service
        serviceOrgId: org-12345678
        serviceOrgName: Omnistrate
        status: ACTIVE
        subscriptionOwnerName: John Doe
      properties:
        accountConfigIdentityId:
          description: ID of an Org
          example: Delectus excepturi.
          type: string
        allowCreatesWhenPaymentNotConfigured:
          description: Whether to allow creating instances when payment is not configured.
          example: true
          type: boolean
        cloudProviderNames:
          description: List of cloud provider names
          example:
          - aws
          - gcp
          items:
            example: Non sed rerum et.
            type: string
          type: array
        createdAt:
          description: The time that this subscription was created
          example: 2019-01-01T00:00:00Z
          type: string
        defaultSubscription:
          description: Whether this is the default subscription for the user
          example: true
          type: boolean
        id:
          description: ID of a Subscription
          example: Nihil quis exercitationem.
          type: string
        maxNumberOfInstances:
          description: The maximum number of instances that can be created for this
            subscription.
          example: 10
          format: int64
          type: integer
        paymentMethodConfigured:
          description: Return true if the required payment method is configured for
            this subscription or no payment method is required. False if the subscription
            requires a payment method but it is not configured.
          example: true
          type: boolean
        productTierId:
          description: ID of a Product Tier
          example: Quibusdam non eos neque dolor.
          type: string
        productTierName:
          description: The name of the product tier
          example: Omnistrate Multi Tenancy
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        rootUserId:
          description: ID of a User
          example: Praesentium iste eaque harum velit tempora.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Incidunt quibusdam esse officiis quibusdam error.
          type: string
        serviceName:
          description: The name of the service
          example: MySQL multi-writer service
          type: string
        serviceOrgId:
          description: ID of an Org
          example: Aliquam quis.
          type: string
        serviceOrgName:
          description: The name of the org that owns the service
          example: Omnistrate
          type: string
        status:
          description: Subscription Status
          example: ACTIVE|SUSPENDED|TERMINATED|CANCELLED
          type: string
        subscriptionOwnerName:
          description: The name of the subscription owner user
          example: John Doe
          type: string
      required:
      - accountConfigIdentityId
      - cloudProviderNames
      - createdAt
      - defaultSubscription
      - id
      - productTierId
      - productTierName
      - roleType
      - rootUserId
      - serviceId
      - serviceLogoURL
      - serviceName
      - serviceOrgId
      - serviceOrgName
      - status
      - subscriptionOwnerName
      type: object
    DescribeTierVersionSetMetadataRequest:
      example:
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: e0x
        version: "3.0"
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Facere qui commodi quam.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: c1
          minLength: 1
          type: string
        version:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
      required:
      - productTierId
      - serviceId
      - token
      - version
      type: object
    DescribeTierVersionSetRequest:
      example:
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: ij4
        version: "3.0"
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Et non quisquam velit omnis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: b
          minLength: 1
          type: string
        version:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
      required:
      - productTierId
      - serviceId
      - token
      - version
      type: object
    DescribeUpgradePathRequest:
      example:
        id: up-12345678
        serviceId: s-12345678
        token: r
      properties:
        id:
          description: ID of an Upgrade Path
          example: Perferendis impedit.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: l47
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribeUpgradePathResult:
      example:
        description: An upgrade path migrating clusters from one LTS version to another
        id: up-12345678
        name: LTS upgrade path
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        sourceVersion: "567.0"
        targetVersion: "589.0"
      properties:
        description:
          description: A brief description of the upgrade path
          example: An upgrade path migrating clusters from one LTS version to another
          type: string
        id:
          description: ID of an Upgrade Path
          example: Dolores qui alias.
          type: string
        name:
          description: Name of the upgrade path
          example: LTS upgrade path
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceVersion:
          description: Version of the Entity to operate on
          example: "1.0"
          minLength: 1
          type: string
        targetVersion:
          description: Version of the Entity to operate on
          example: "1.0"
          minLength: 1
          type: string
      type: object
    DescribeUserRequest:
      example:
        token: "3"
      properties:
        token:
          description: JWT token used to perform authorization
          example: cpv
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribeUserResult:
      example:
        address:
          addressLine1: 1234 Main St
          addressLine2: Apt 123
          addressLine3: Building 123
          city: San Francisco
          country: US
          state: CA
          zip: "94123"
        createdAt: 2023-01-10T00:00:00Z
        email: abc@gmail.com
        enabled: true
        id: user-abcd1234
        lastModifiedAt: 2023-01-20T00:00:00Z
        name: John Dae
        orgCookiePolicy: Enim sint voluptatem qui.
        orgDescription: ACME Inc.
        orgFavIconURL: Quidem magni sit provident praesentium.
        orgId: org-aKQ8G13QeR
        orgLogoURL: Eveniet rerum repellat autem vero ut nisi.
        orgName: ACME
        orgPrivacyPolicy: Omnis quo laborum ea quia necessitatibus maiores.
        orgSupportEmail: support@example.com
        orgTermsOfUse: Expedita consequatur.
        orgURL: something.acme
        planName: STARTER
        roleType: reader
        status: ACTIVE
      properties:
        address:
          $ref: "#/components/schemas/Address"
        createdAt:
          description: The user creation time
          example: 2023-01-10T00:00:00Z
          type: string
        email:
          description: The email of the user
          example: abc@gmail.com
          type: string
        enabled:
          description: Is the user enabled.
          example: true
          type: boolean
        id:
          description: The User ID
          example: user-abcd1234
          type: string
        lastModifiedAt:
          description: The user update time
          example: 2023-01-20T00:00:00Z
          type: string
        name:
          description: The name of the user
          example: John Dae
          type: string
        orgCookiePolicy:
          description: The cookie policy for the org that this user owns
          example: Laudantium quis voluptatibus commodi.
          type: string
        orgDescription:
          description: The description of the org that this user owns
          example: ACME Inc.
          type: string
        orgFavIconURL:
          description: The favicon of the org that this user owns
          example: Nobis facilis iusto aut voluptatem dignissimos.
          type: string
        orgId:
          description: The ID of the org that this user owns
          example: org-aKQ8G13QeR
          type: string
        orgLogoURL:
          description: The logo of the org that this user owns
          example: Soluta eum.
          type: string
        orgName:
          description: The org name that this user owns
          example: ACME
          type: string
        orgPrivacyPolicy:
          description: The privacy policy for the org that this user owns
          example: Qui cum.
          type: string
        orgSupportEmail:
          description: The support email of the org that this user owns
          example: support@example.com
          type: string
        orgTermsOfUse:
          description: The terms of use for the org that this user owns
          example: Dolorem impedit iusto.
          type: string
        orgURL:
          description: The url of the org that this user owns
          example: something.acme
          type: string
        planName:
          description: This parameter is used to select the appropriate Product Plan
          example: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        status:
          description: The status of the user.
          example: ACTIVE|NOT_ENABLED
          type: string
      required:
      - id
      type: object
    DescribeUsersByOrgRequest:
      example:
        token: cn
      properties:
        token:
          description: JWT token used to perform authorization
          example: fz
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribeUsersByOrgResult:
      example:
        Id: org-aKQ8G13QeR
        orgUsers:
        - email: abc@gmail.com
          invitedAt: 2023-01-10T00:00:00Z
          name: John Doe
          roleType: reader
          userId: user-abcd1234
      properties:
        Id:
          description: The ID of the org
          example: org-aKQ8G13QeR
          type: string
        orgUsers:
          description: The users associated with the corresponding org
          example:
          - email: abc@gmail.com
            invitedAt: 2023-01-10T00:00:00Z
            name: John Doe
            roleType: reader
            userId: user-abcd1234
          items:
            $ref: "#/components/schemas/OrgUsers"
          type: array
      required:
      - Id
      - orgUsers
      type: object
    DescribeUsersBySubscriptionRequest:
      example:
        subscriptionId: sub-abcd1234
        token: gwd
      properties:
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: i
          minLength: 1
          type: string
      required:
      - subscriptionId
      - token
      type: object
    DescribeUsersBySubscriptionResult:
      example:
        Id: sub-abcd1234
        subscriptionUsers:
        - email: abc@gmail.com
          name: John Doe
          roleType: reader
          subscriptionId: sub-abcd1234
          userId: user-abcd1234
      properties:
        Id:
          description: The ID of the subscription
          example: sub-abcd1234
          type: string
        subscriptionUsers:
          description: The users associated with the corresponding subscription
          example:
          - email: abc@gmail.com
            name: John Doe
            roleType: reader
            subscriptionId: sub-abcd1234
            userId: user-abcd1234
          items:
            $ref: "#/components/schemas/SubscriptionUsers"
          type: array
      required:
      - Id
      - subscriptionUsers
      type: object
    DescribeVUnitRequest:
      example:
        id: vu-12345678
        serviceId: s-12345678
        token: 8m
      properties:
        id:
          description: ID of a VUnit
          example: Quia id eos minima.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: tji
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeVUnitResult:
      example:
        cloudProvider: aws
        id: vu-12345678
        networkIds:
        - n-12345678
        - n-abcdefgh
        - n-1234efgh
        region: us-west-2
        serviceId: s-12345678
        serviceModelId: sm-12345678
      properties:
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        id:
          description: ID of a VUnit
          example: Modi sed sint voluptates inventore voluptas.
          type: string
        networkIds:
          description: List of network IDs in the given context
          example:
          - n-12345678
          - n-abcdefgh
          - n-1234efgh
          items:
            description: ID of a Network
            example: Magnam qui dolores quis ducimus.
            type: string
          type: array
        region:
          description: Region code specific to the cloud-provider
          example: us-west-2
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Earum qui repellendus voluptatem nihil.
          type: string
      required:
      - cloudProvider
      - networkIds
      - region
      - serviceModelId
      type: object
    Describeresourcemetricsconfigresult:
      example:
        id: r-12345678
        metricEndpoint: http://localhost:9187/metrics
        serviceId: s-12345678
      properties:
        id:
          description: ID of a resource
          example: Est nostrum perferendis praesentium incidunt repellat.
          type: string
        metricEndpoint:
          description: The local host endpoint to supply prometheus metric
          example: http://localhost:9187/metrics
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - id
      - metricEndpoint
      - serviceId
      type: object
    DetachComputeConfigRequest:
      example:
        id: ic-12345678
        serviceId: s-12345678
        token: fx
      properties:
        id:
          description: ID of an Infra Config
          example: Nemo repellendus eos dolorum est veritatis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "1"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DetachNetworkConfigRequest:
      example:
        id: ic-12345678
        serviceId: s-12345678
        token: pk
      properties:
        id:
          description: ID of an Infra Config
          example: Optio voluptatem consequatur.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: a
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DetachStorageConfigRequest:
      example:
        id: ic-12345678
        serviceId: s-12345678
        token: w2
      properties:
        id:
          description: ID of an Infra Config
          example: Reiciendis at.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: wtx
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DetailedNodeHealthResult:
      example:
        ConnectivityStatus: HEALTHY
        DiskHealth: HEALTHY
        IntegrationsHealth:
          CustomerObservabilityHealth: HEALTHY
          InternalObservabilityHealth: HEALTHY
        LoadStatus: LOAD_NORMAL
        NodeHealth: HEALTHY
        ProcessHealth: HEALTHY
        ProcessLiveness: HEALTHY
      properties:
        ConnectivityStatus:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        DiskHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        IntegrationsHealth:
          $ref: "#/components/schemas/IntegrationsHealth"
        LoadStatus:
          description: The load status of a pod
          example: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          type: string
        NodeHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        ProcessHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        ProcessLiveness:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
      type: object
    DiffTierVersionSetsRequest:
      example:
        anotherVersion: "3.1"
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: w
        version: "3.0"
      properties:
        anotherVersion:
          description: The target version to compare against.
          example: "3.1"
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Suscipit quis maxime nam minima et.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: p
          minLength: 1
          type: string
        version:
          description: The version number for the version set.
          example: "3.0"
          type: string
      required:
      - anotherVersion
      - productTierId
      - serviceId
      - token
      - version
      type: object
    DiffTierVersionSetsResult:
      example:
        anotherVersion: "3.1"
        productTierId: Beatae beatae.
        resourceChangeSets:
          Dolores sit aut repellendus eveniet recusandae fugit.:
            categorizedResourceChanges:
              Deserunt et sed.:
                changes:
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                status: PENDING_UPDATE
            imageConfigChanges:
              changeState: PENDING_NEW
              imageConfigId: imgc-12345678
              imageName: mysql
            infraConfigChanges:
              changeState: PENDING_NEW
              infraConfigId: ic-12345678
              name: MySQL Writer Infra Config
            overallResourceStatus: PENDING_UPDATE
            productTierFeatureChanges: PENDING_UPDATE
            resourceChanges: PENDING_DELETE
            resourceName: Voluptas est dolorem.
        serviceId: s-12345678
        version: "3.0"
      properties:
        anotherVersion:
          description: The target version to compare against.
          example: "3.1"
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Odit qui atque nostrum harum.
          type: string
        resourceChangeSets:
          additionalProperties:
            $ref: "#/components/schemas/ChangeSet"
          description: The difference for the service API configuration per resource
          example:
            Dolores sit aut repellendus eveniet recusandae fugit.:
              categorizedResourceChanges:
                Deserunt et sed.:
                  changes:
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  status: PENDING_UPDATE
              imageConfigChanges:
                changeState: PENDING_NEW
                imageConfigId: imgc-12345678
                imageName: mysql
              infraConfigChanges:
                changeState: PENDING_NEW
                infraConfigId: ic-12345678
                name: MySQL Writer Infra Config
              overallResourceStatus: PENDING_UPDATE
              productTierFeatureChanges: PENDING_UPDATE
              resourceChanges: PENDING_DELETE
              resourceName: Voluptas est dolorem.
          type: object
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        version:
          description: The version number for the version set.
          example: "3.0"
          type: string
      required:
      - anotherVersion
      - productTierId
      - resourceChangeSets
      - serviceId
      - version
      type: object
    DisableBillingProviderRequest:
      example:
        billingProviderType: STRIPE
        token: x0
      properties:
        billingProviderType:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        token:
          description: JWT token used to perform authorization
          example: c
          minLength: 1
          type: string
      required:
      - billingProviderType
      - token
      type: object
    DisableProductTierFeatureRequest:
      example:
        feature: LOGS
        id: pt-12345678
        scope: INTERNAL
        serviceId: s-12345678
        token: lr6
      properties:
        feature:
          description: ProductTierFeatureType is to enable / disable features per
            product tier
          example: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
          type: string
        id:
          description: ID of a Product Tier
          example: Veniam sapiente quis.
          type: string
        scope:
          description: ProductTierFeatureScope defines scope of the feature within
            product tier
          example: INTERNAL|CUSTOMER
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: gz
          minLength: 1
          type: string
      required:
      - feature
      - id
      - serviceId
      - token
      type: object
    DisableProductTierFeatureRequest2:
      example:
        feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
        scope: INTERNAL|CUSTOMER
      properties:
        feature:
          description: Feature to disable
          example: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
          type: string
        scope:
          description: Feature scope
          example: INTERNAL|CUSTOMER
          type: string
      required:
      - feature
      type: object
    DisableResourceCapabilityRequest:
      example:
        capability: SERVERLESS
        id: r-12345678
        serviceId: s-12345678
        token: jv
      properties:
        capability:
          description: The type of capability of a resource
          example: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
          type: string
        id:
          description: ID of a resource
          example: Non sint eius ad voluptatem.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: r3j
          minLength: 1
          type: string
      required:
      - capability
      - id
      - serviceId
      - token
      type: object
    DisableResourceCapabilityRequest2:
      example:
        capability: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
      properties:
        capability:
          description: The capability to disable
          example: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
          type: string
      required:
      - capability
      type: object
    DisableServiceModelFeatureRequest:
      example:
        feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        id: sm-12345678
        serviceId: s-12345678
        token: "8"
      properties:
        feature:
          description: Name of the service model feature
          example: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          type: string
        id:
          description: ID of a Service Model
          example: Commodi voluptatibus.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: pgr
          minLength: 1
          type: string
      required:
      - feature
      - id
      - serviceId
      - token
      type: object
    DisableServiceModelFeatureRequest2:
      example:
        feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
      properties:
        feature:
          example: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          type: string
      required:
      - feature
      type: object
    DisableTenantBillingRequest:
      example:
        token: kq
      properties:
        token:
          description: JWT token used to perform authorization
          example: "49"
          minLength: 1
          type: string
      required:
      - token
      type: object
    DiscardPendingChangesRequest:
      example:
        id: sa-12345678
        productTierId: pt-12345678
        serviceId: s-12345678
        token: vff
      properties:
        id:
          description: ID of a Service API
          example: Et est.
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Fuga sapiente expedita dolorum.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: cyo
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    EFSFileSystemConfiguration:
      example:
        PerformanceMode: generalPurpose|maxIO
        ProvisionedThroughputInMibps: 125
        ThroughputMode: provisioned|bursting|elastic
      properties:
        PerformanceMode:
          description: The performance mode of the EFS file system
          example: generalPurpose|maxIO
          type: string
        ProvisionedThroughputInMibps:
          description: "The throughput, measured in MiBps, that you want to provision\
            \ for the EFS file system, if throughput mode if provisioned"
          example: 125
          format: double
          type: number
        ThroughputMode:
          description: The throughput mode of the EFS file system
          example: provisioned|bursting|elastic
          type: string
      required:
      - PerformanceMode
      - ThroughputMode
      type: object
    EnableBillingProviderRequest:
      example:
        balanceDueLink: https://billing.provider.com/balance-due. Only present when
          the billing provider is BRING_YOUR_OWN
        billingProviderType: STRIPE
        logoURL: https://example.com/logo.png
        name: Stripe
        token: v
      properties:
        balanceDueLink:
          description: The URL to the balance due page
          example: https://billing.provider.com/balance-due. Only present when the
            billing provider is BRING_YOUR_OWN
          type: string
        billingProviderType:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        logoURL:
          description: The URL of the logo for the billing provider. Only present
            when the billing provider is BRING_YOUR_OWN
          example: https://example.com/logo.png
          type: string
        name:
          description: A custom name for the billing provider. Only present when the
            billing provider is BRING_YOUR_OWN
          example: Stripe
          type: string
        token:
          description: JWT token used to perform authorization
          example: 1d
          minLength: 1
          type: string
      required:
      - billingProviderType
      - token
      type: object
    EnableBillingProviderRequest2:
      example:
        balanceDueLink: https://billing.provider.com/balance-due. Only present when
          the billing provider is BRING_YOUR_OWN
        logoURL: https://example.com/logo.png
        name: Stripe
      properties:
        balanceDueLink:
          description: The URL to the balance due page
          example: https://billing.provider.com/balance-due. Only present when the
            billing provider is BRING_YOUR_OWN
          type: string
        logoURL:
          description: The URL of the logo for the billing provider. Only present
            when the billing provider is BRING_YOUR_OWN
          example: https://example.com/logo.png
          type: string
        name:
          description: A custom name for the billing provider. Only present when the
            billing provider is BRING_YOUR_OWN
          example: Stripe
          type: string
      type: object
    EnableProductTierFeatureRequest:
      example:
        configuration:
          S3BucketArn: arn:aws:s3:::my_billing_bucket_name
        feature: LOGS
        id: pt-12345678
        scope: INTERNAL
        serviceId: s-12345678
        token: vf1
      properties:
        configuration:
          additionalProperties: true
          description: The configuration parameters of the product tier feature
          example:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
          type: object
        feature:
          description: ProductTierFeatureType is to enable / disable features per
            product tier
          example: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
          type: string
        id:
          description: ID of a Product Tier
          example: Quo cupiditate impedit quis culpa consectetur.
          type: string
        scope:
          description: ProductTierFeatureScope defines scope of the feature within
            product tier
          example: INTERNAL|CUSTOMER
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "2"
          minLength: 1
          type: string
      required:
      - feature
      - id
      - serviceId
      - token
      type: object
    EnableProductTierFeatureRequest2:
      example:
        configuration:
          S3BucketArn: arn:aws:s3:::my_billing_bucket_name
        feature: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
        scope: INTERNAL|CUSTOMER
      properties:
        configuration:
          additionalProperties: true
          description: The configuration parameters of the product tier feature
          example:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
          type: object
        feature:
          description: Feature to enable
          example: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
          type: string
        scope:
          description: Feature scope
          example: INTERNAL|CUSTOMER
          type: string
      required:
      - feature
      type: object
    EnableResourceCapabilityRequest:
      example:
        capability: SERVERLESS
        configuration:
          EnableAutoStop: true
          MinimumNodesInPool: 5
          PortsMappingProxyConfig:
            MaxNumberOfClustersPerProxyInstance: 50
            NumberOfPortsPerCluster: 4
          ReferenceProxyKey: resource-proxy
          TargetPort: 5432
        id: r-12345678
        serviceId: s-12345678
        token: gg
      properties:
        capability:
          description: The type of capability of a resource
          example: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
          type: string
        configuration:
          additionalProperties: true
          description: The configuration parameters of a capability of a resource
          example:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
          type: object
        id:
          description: ID of a resource
          example: Ut distinctio.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 2qk
          minLength: 1
          type: string
      required:
      - capability
      - id
      - serviceId
      - token
      type: object
    EnableResourceCapabilityRequest2:
      example:
        capability: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
        configuration:
          EnableAutoStop: true
          MinimumNodesInPool: 5
          PortsMappingProxyConfig:
            MaxNumberOfClustersPerProxyInstance: 50
            NumberOfPortsPerCluster: 4
          ReferenceProxyKey: resource-proxy
          TargetPort: 5432
      properties:
        capability:
          description: The type of capability of a resource
          example: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
          type: string
        configuration:
          additionalProperties: true
          description: The configuration parameters of a capability of a resource
          example:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
          type: object
      required:
      - capability
      type: object
    EnableServiceModelFeatureRequest:
      example:
        configuration:
          status: "ON"
        feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        id: sm-12345678
        serviceId: s-12345678
        token: e
      properties:
        configuration:
          additionalProperties: true
          description: The configuration parameters of the service model feature
          example:
            status: "ON"
          type: object
        feature:
          description: Name of the service model feature
          example: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          type: string
        id:
          description: ID of a Service Model
          example: Aspernatur rerum dolor qui est distinctio.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: amv
          minLength: 1
          type: string
      required:
      - configuration
      - feature
      - id
      - serviceId
      - token
      type: object
    EnableServiceModelFeatureRequest2:
      example:
        configuration:
          status: "ON"
        feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
      properties:
        configuration:
          additionalProperties: true
          example:
            status: "ON"
          type: object
        feature:
          example: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          type: string
      required:
      - configuration
      - feature
      type: object
    EnableTenantBillingRequest:
      example:
        token: q
      properties:
        token:
          description: JWT token used to perform authorization
          example: "5"
          minLength: 1
          type: string
      required:
      - token
      type: object
    EndCustomerEvent:
      example:
        eventID: e-123456
        eventPayload:
          eventType: CustomerSignUp
          token: "123456"
        eventType: InviteUser
        orgID: o-123456
        orgName: Acme Corp
        orgURL: https://acme.com
        priority: Critical
        time: 2023-01-10T00:00:00Z
        userEmail: user@example.com
        userID: user-123456
        userName: user
      properties:
        eventID:
          description: ID of a Event
          example: Itaque quas quo.
          type: string
        eventPayload:
          additionalProperties: true
          description: The event payload for a service provider.
          example:
            eventType: CustomerSignUp
            token: "123456"
          type: object
        eventType:
          description: The type of the end customer specific event
          example: InviteUser|RevokeUserRole|InstanceMaintenanceScheduled|CustomerSignUp|DisconnectAccountComplete|ConnectAccountComplete|PendingRevokePermissions|PendingRestorePermissions
          type: string
        orgID:
          description: ID of an Org
          example: Qui enim.
          type: string
        orgName:
          description: Associated organization name.
          example: Acme Corp
          type: string
        orgURL:
          description: Associated organization URL.
          example: https://acme.com
          type: string
        priority:
          description: The priority of the event
          example: Critical|High|Medium|Low
          type: string
        time:
          description: The event time
          example: 2023-01-10T00:00:00Z
          type: string
        userEmail:
          description: User email associated with the event.
          example: user@example.com
          type: string
        userID:
          description: ID of a User
          example: Sit soluta.
          type: string
        userName:
          description: Name of the user associated with the event.
          example: user
          type: string
      required:
      - eventID
      - eventPayload
      - eventType
      - orgID
      - orgName
      - orgURL
      - priority
      - time
      type: object
    Endpoint:
      example:
        disableMonitoring: false
        host: https://my-endpoint.com
        networkingType: PUBLIC|PRIVATE
        ports:
        - 8080
        - 8081
        primary: false
      properties:
        disableMonitoring:
          default: false
          description: Whether to disable monitoring for this endpoint
          example: false
          type: boolean
        host:
          default: ""
          description: The host of the endpoint
          example: https://my-endpoint.com
          type: string
        networkingType:
          default: PUBLIC
          description: The networking type of the endpoint
          example: PUBLIC|PRIVATE
          type: string
        ports:
          description: The ports of the endpoint
          example:
          - 8080
          - 8081
          items:
            example: 3228848952176586413
            format: int64
            type: integer
          type: array
        primary:
          default: false
          description: Whether this is the primary endpoint to highlight
          example: true
          type: boolean
      type: object
    EnvironmentHealthReport:
      example:
        models:
          sm-12345678:
            vu-11111111: UNKNOWN
            vu-12345678: UP
            vu-87654321: DOWN
      properties:
        models:
          additionalProperties:
            $ref: "#/components/schemas/VUnitHealthReport"
          description: Health report for each model in the environment
          example:
            sm-12345678:
              vu-11111111: UNKNOWN
              vu-12345678: UP
              vu-87654321: DOWN
          type: object
      type: object
    EnvironmentPromotionStatus:
      example:
        status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
        targetEnvironmentID: se-12345678
      properties:
        status:
          description: The status of the promotion
          example: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          type: string
        targetEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
      required:
      - status
      - targetEnvironmentID
      type: object
    EnvironmentVariable:
      description: A service environment variable
      example:
        key: MYSQL_ROOT_PASSWORD
        value: password
      properties:
        key:
          description: The key of the environment variable
          example: MYSQL_ROOT_PASSWORD
          type: string
        value:
          description: The value of the environment variable
          example: password
          type: string
      required:
      - key
      - value
      type: object
    Error:
      example:
        fault: false
        id: 123abc
        message: parameter 'p' must be an integer
        name: bad_request
        temporary: true
        timeout: true
      properties:
        fault:
          description: Is the error a server-side fault?
          example: false
          type: boolean
        id:
          description: ID is a unique identifier for this particular occurrence of
            the problem.
          example: 123abc
          type: string
        message:
          description: Message is a human-readable explanation specific to this occurrence
            of the problem.
          example: parameter 'p' must be an integer
          type: string
        name:
          description: Name is the name of this class of errors.
          example: bad_request
          type: string
        temporary:
          description: Is the error temporary?
          example: false
          type: boolean
        timeout:
          description: Is the error a timeout?
          example: true
          type: boolean
      required:
      - fault
      - id
      - message
      - name
      - temporary
      - timeout
      type: object
    ExpressionEvaluatorRequest:
      example:
        deploymentCellID: hc-12345678
        expression: "{{ $sys.network.externalClusterEndpoint }}"
        expressionMap:
          dbHost: "{{ $sys.database.host }}"
          dbPort: "{{ $var.port }}"
        instanceID: instance-12345678
        productTierID: pt-12345678
        resourceKey: mysql
        serviceID: s-12345678
        token: 7ir
      properties:
        deploymentCellID:
          description: ID of a Host Cluster
          example: Eius ut consectetur expedita voluptatum modi est.
          type: string
        expression:
          description: Expression containing system and api parameter variable references
          example: "{{ $sys.network.externalClusterEndpoint }}"
          type: string
        expressionMap:
          additionalProperties: true
          description: "If provided, the `expression` field is ignored and all expressions\
            \ in the map are evaluated. The map keys are preserved in the result."
          example:
            dbHost: "{{ $sys.database.host }}"
            dbPort: "{{ $var.port }}"
          type: object
        instanceID:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        productTierID:
          description: ID of a Product Tier
          example: Dolores rem.
          type: string
        resourceKey:
          description: The resource key to use for evaluating resource parameters
          example: mysql
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: thl
          minLength: 1
          type: string
      required:
      - resourceKey
      - serviceID
      - token
      type: object
    ExpressionEvaluatorRequest2:
      example:
        deploymentCellID: Quidem et optio quisquam impedit nesciunt optio.
        expression: "{{ $sys.network.externalClusterEndpoint }}"
        expressionMap:
          dbHost: "{{ $sys.database.host }}"
          dbPort: "{{ $var.port }}"
        instanceID: instance-12345678
        productTierID: Aperiam repudiandae rerum.
        resourceKey: mysql
        serviceID: s-123456
      properties:
        deploymentCellID:
          description: Either this or the instanceID must be provided to evaluate
            the expression(s)
          example: Quae aut ea dolores odit officia.
          type: string
        expression:
          description: Expression containing system and api parameter variable references
          example: "{{ $sys.network.externalClusterEndpoint }}"
          type: string
        expressionMap:
          additionalProperties: true
          description: "If provided, the `expression` field is ignored and all expressions\
            \ in the map are evaluated. The map keys are preserved in the result."
          example:
            dbHost: "{{ $sys.database.host }}"
            dbPort: "{{ $var.port }}"
          type: object
        instanceID:
          description: Either this or the deploymentCellID must be provided to evaluate
            the expression(s)
          example: instance-12345678
          type: string
        productTierID:
          description: Mandatory if the instanceID is not provided
          example: Non reiciendis nisi dolorem voluptas saepe provident.
          type: string
        resourceKey:
          description: The resource key to use for evaluating resource parameters
          example: mysql
          type: string
        serviceID:
          description: The service ID to use for evaluating service parameters
          example: s-123456
          type: string
      required:
      - resourceKey
      - serviceID
      type: object
    ExpressionEvaluatorResult:
      example:
        error: "failed to evaluate expression: ..."
        result: my-cluster.example.com
      properties:
        error:
          description: Error message if the evaluation failed
          example: "failed to evaluate expression: ..."
          type: string
        result:
          description: The evaluated result of the expression
          example: my-cluster.example.com
      type: object
    FailoverResourceInstanceRequest:
      example:
        failedReplicaAction: FAILOVER_AND_RESTART
        failedReplicaID: db-0
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: sg
      properties:
        failedReplicaAction:
          description: The action to take for the replica that has failed
          example: FAILOVER_ONLY|FAILOVER_AND_RESTART|FAILOVER_AND_RECREATE
          type: string
        failedReplicaID:
          description: The failed replica ID
          example: db-0
          type: string
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Quo atque odio placeat minima.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: n84
          minLength: 1
          type: string
      required:
      - failedReplicaID
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    FailoverResourceInstanceRequest2:
      example:
        failedReplicaAction: FAILOVER_ONLY|FAILOVER_AND_RESTART|FAILOVER_AND_RECREATE
        failedReplicaID: db-0
      properties:
        failedReplicaAction:
          description: The failed replica action
          example: FAILOVER_ONLY|FAILOVER_AND_RESTART|FAILOVER_AND_RECREATE
          type: string
        failedReplicaID:
          description: The failed replica ID
          example: db-0
          type: string
      required:
      - failedReplicaID
      type: object
    FileMetadata:
      example:
        description: A file to store the configuration for the resource
        fileId: f-12345678
        mountPath: /etc/config
        name: file.txt
        size: 1234
        type: Config
        uploadTime: 2023-01-10T00:00:00Z
        uploadedBy: user
      properties:
        description:
          description: The description of the file
          example: A file to store the configuration for the resource
          type: string
        fileId:
          description: ID of a File
          example: Minima tempora corporis.
          type: string
        mountPath:
          description: The mount path of the file
          example: /etc/config
          type: string
        name:
          description: The name of the file
          example: file.txt
          type: string
        size:
          description: The size of the file
          example: 1234
          format: int64
          type: integer
        type:
          description: The type of the file
          example: Config|Secret
          type: string
        uploadTime:
          description: The time the file was uploaded
          example: 2023-01-10T00:00:00Z
          type: string
        uploadedBy:
          description: The user who uploaded the file
          example: user
          type: string
      required:
      - description
      - fileId
      - mountPath
      - name
      - size
      - type
      - uploadTime
      - uploadedBy
      type: object
    FileSystemConfiguration:
      example:
        EFSFileSystemConfiguration:
          PerformanceMode: generalPurpose|maxIO
          ProvisionedThroughputInMibps: 125
          ThroughputMode: provisioned|bursting|elastic
        GCPFilestoreConfiguration:
          Capacity: 1024GiB
          MaxIopsPerTb: 3000
          Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
      properties:
        EFSFileSystemConfiguration:
          $ref: "#/components/schemas/EFSFileSystemConfiguration"
        GCPFilestoreConfiguration:
          $ref: "#/components/schemas/GCPFilestoreConfiguration"
      type: object
    GCPFilestoreConfiguration:
      example:
        Capacity: 1024GiB
        MaxIopsPerTb: 3000
        Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
      properties:
        Capacity:
          description: The capacity of the GCP filestore in GiB
          example: 1024GiB
          type: string
        MaxIopsPerTb:
          description: The maximum IOPS per TB for the performance tier
          example: 3000
          format: int64
          type: integer
        Tier:
          description: The tier of the GCP filestore
          example: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
          type: string
      required:
      - Capacity
      - Tier
      type: object
    GCSConfiguration:
      example: {}
      type: object
    GenerateComposeSpecFromContainerImageRequest:
      example:
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        image: library/mysql:5.7
        imageRegistry: docker.io
        password: password
        token: ug
        username: username
      properties:
        environmentVariables:
          description: Runtime environment variables needed to run the image
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: "#/components/schemas/EnvironmentVariable"
          type: array
        image:
          description: Name of the image along with the tag. Include the repository
            name if the image is not from the official repository
          example: library/mysql:5.7
          type: string
        imageRegistry:
          description: Registry where the image is stored
          example: docker.io
          type: string
        password:
          description: Password to access the image registry
          example: password
          type: string
        token:
          description: JWT token used to perform authorization
          example: b
          minLength: 1
          type: string
        username:
          description: Username to access the image registry
          example: username
          type: string
      required:
      - image
      - imageRegistry
      - token
      type: object
    GenerateComposeSpecFromContainerImageRequest2:
      example:
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        image: library/mysql:5.7
        imageRegistry: docker.io
        password: password
        username: username
      properties:
        environmentVariables:
          description: Runtime environment variables needed to run the image
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: "#/components/schemas/EnvironmentVariable"
          type: array
        image:
          description: Name of the image along with the tag. Include the repository
            name if the image is not from the official repository
          example: library/mysql:5.7
          type: string
        imageRegistry:
          description: Registry where the image is stored
          example: docker.io
          type: string
        password:
          description: Password to access the image registry
          example: password
          type: string
        username:
          description: Username to access the image registry
          example: username
          type: string
      required:
      - image
      - imageRegistry
      type: object
    GenerateComposeSpecFromContainerImageResult:
      example:
        fileContent: Ipsam quo fugiat.
      properties:
        fileContent:
          description: Base64 encoded Compose Spec YAML in docker compose format
          example: Consequuntur itaque.
          type: string
      required:
      - fileContent
      type: object
    GenerateTokenForDeploymentCellDashboardRequest:
      example:
        id: instance-abcd1234
        subscriptionId: sub-abcd1234
        token: r
      properties:
        id:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: t0
          minLength: 1
          type: string
      required:
      - id
      - subscriptionId
      - token
      type: object
    GenerateTokenForDeploymentCellDashboardResult:
      example:
        deploymentCellID: hc-12345678
        expirationTimestamp: 2021-01-01T00:00:00Z
        token: token
      properties:
        deploymentCellID:
          description: The deployment cell ID
          example: hc-12345678
          type: string
        expirationTimestamp:
          description: The timestamp when the token expires
          example: 2021-01-01T00:00:00Z
          type: string
        token:
          description: The token to access the dashboard
          example: token
          type: string
      required:
      - deploymentCellID
      - expirationTimestamp
      - token
      type: object
    GenericCommandValueProviderConfig:
      description: Configuration for generic command-based value provider
      example:
        args:
        - -s
        - http://example.com/api/username
        command: curl
        environment:
          PATH: /usr/local/bin:/usr/bin:/bin
        retryCount: 3
        shell: /bin/bash
        timeout: 30
        workingDir: /tmp
      properties:
        args:
          description: Arguments for the command
          example:
          - -s
          - http://example.com/api/username
          items:
            example: Non ea quos nemo.
            type: string
          type: array
        command:
          description: The command to execute
          example: curl
          type: string
        environment:
          additionalProperties:
            example: Voluptatibus accusamus.
            type: string
          description: Environment variables for the command
          example:
            PATH: /usr/local/bin:/usr/bin:/bin
          type: object
        retryCount:
          default: 3
          description: Number of retry attempts
          example: 3
          format: int64
          type: integer
        shell:
          default: /bin/sh
          description: Shell to use for command execution
          example: /bin/bash
          type: string
        timeout:
          default: 30
          description: Command timeout in seconds
          example: 30
          format: int64
          type: integer
        workingDir:
          description: Working directory for command execution
          example: /tmp
          type: string
      required:
      - command
      type: object
    GetAvailabilityZoneByCodeRequest:
      example:
        cloudProviderName: aws
        code: us-east-1a
        token: g70
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        code:
          description: Cloud-provider native availability zone code
          example: us-east-1a
          type: string
        token:
          description: JWT token used to perform authorization
          example: eep
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - code
      - token
      type: object
    GetCloudProviderByNameRequest:
      example:
        name: aws
        token: 58s
      properties:
        name:
          description: Name of the CloudProvider
          example: aws
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: z
          minLength: 1
          type: string
      required:
      - name
      - token
      type: object
    GetConsumptionUsageRequest:
      example:
        endDate: 2024-01-01T10:00:00Z
        startDate: 2023-01-01T10:00:00Z
        subscriptionID: sub-12345678
        token: r
      properties:
        endDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        startDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        subscriptionID:
          description: ID of a Subscription
          example: Esse asperiores.
          type: string
        token:
          description: JWT token used to perform authorization
          example: var
          minLength: 1
          type: string
      required:
      - token
      type: object
    GetConsumptionUsageResult:
      example:
        endTime: 2021-01-01T00:00:00.000Z
        startTime: 2021-01-01T00:00:00.000Z
        usage:
        - dimension: core/hours
          endTime: 2021-01-01T00:00:00.000Z
          startTime: 2021-01-01T00:00:00.000Z
          total: 0.67
      properties:
        endTime:
          description: End timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        startTime:
          description: Start timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        usage:
          description: Usage for the current plan
          example:
          - dimension: core/hours
            endTime: 2021-01-01T00:00:00.000Z
            startTime: 2021-01-01T00:00:00.000Z
            total: 0.67
          items:
            $ref: "#/components/schemas/UsagePerDimension"
          type: array
      type: object
    GetCurrentConsumptionUsageRequest:
      example:
        subscriptionID: sub-12345678
        token: fim
      properties:
        subscriptionID:
          description: ID of a Subscription
          example: Impedit magnam qui.
          type: string
        token:
          description: JWT token used to perform authorization
          example: scw
          minLength: 1
          type: string
      required:
      - token
      type: object
    GetCurrentUsageRequest:
      example:
        token: km2
      properties:
        token:
          description: JWT token used to perform authorization
          example: rb
          minLength: 1
          type: string
      required:
      - token
      type: object
    GetFileRequest:
      example:
        fileId: f-12345678
        id: r-12345678
        productTierId: pt-12345678
        productTierVersion: "1.0"
        serviceId: s-12345678
        token: 14h
      properties:
        fileId:
          description: ID of a File
          example: Placeat voluptate et quos.
          type: string
        id:
          description: ID of a resource
          example: Quis illum.
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Saepe iusto fugit ullam iusto eos molestias.
          type: string
        productTierVersion:
          description: Version of the product tier
          example: "1.0"
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: kaa
          minLength: 1
          type: string
      required:
      - fileId
      - id
      - serviceId
      - token
      type: object
    GetRegionByCodeRequest:
      example:
        cloudProviderName: aws
        code: us-east-1
        token: "1"
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        code:
          description: Cloud-provider native region code
          example: us-east-1
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: rx
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - code
      - token
      type: object
    GetSecretRequest:
      example:
        environmentType: DEV
        name: my-secret
        token: "0"
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        name:
          description: Name of the secret
          example: my-secret
          type: string
        token:
          description: JWT token used to perform authorization
          example: e24
          minLength: 1
          type: string
      required:
      - environmentType
      - name
      - token
      type: object
    GetSecretResult:
      example:
        environmentType: DEV
        name: my-secret
        value: super-secret-value
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        name:
          description: Name of the secret
          example: my-secret
          type: string
        value:
          description: The value of the secret
          example: super-secret-value
          type: string
      required:
      - environmentType
      - name
      - value
      type: object
    GetServicePlanRequest:
      example:
        productTierId: pt-12345678
        serviceId: s-12345678
        token: "51"
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Et optio.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 1e
          minLength: 1
          type: string
      required:
      - productTierId
      - serviceId
      - token
      type: object
    GetServicePlanResult:
      example:
        AutoApproveSubscription: false
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        activeAccountConfigIds:
          aws: ac-12345678
          gcp: ac-23456789
        apiVersion: v1
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        deploymentConfigId: dc-12345678
        gcpRegions:
        - us-central1
        hasPendingChanges: true
        isProductTierDisabled: true
        latestMajorVersion: "3.0"
        modelType: CUSTOMER_HOSTED
        privateRegions:
        - n/a
        productTierDescription: A premium product tier
        productTierDocumentation: Any documentation
        productTierFeatures:
          LOGS: true
          METRICS: false
        productTierId: pt-12345678
        productTierKey: premium
        productTierName: Premium
        productTierPlanDescription: A premium plan
        productTierPricing:
          price1: value1
        productTierSupport: Any support
        serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
          clusters for high availability
        serviceApiId: sa-12345678
        serviceEnvironmentId: se-12345678
        serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
          clusters for high availability
        serviceModelFeatures:
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        serviceModelId: sm-12345678
        serviceModelName: MySQL multi-writer service hosted model
        tierType: OMNISTRATE_DEDICATED_TENANCY
        versionSetStatus: Preferred|Active|Deprecated|Pending
      properties:
        AutoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            description: ID of an Account Config
            example: Commodi non quia minima deserunt et necessitatibus.
            type: string
          type: array
        activeAccountConfigIds:
          additionalProperties:
            description: ID of an Account Config
            example: Soluta veniam.
            type: string
          description: The active infrastructure account configuration IDs per cloud
            provider
          example:
            aws: ac-12345678
            gcp: ac-23456789
          type: object
        apiVersion:
          description: The external version of the API
          example: v1
          type: string
        awsRegions:
          description: The AWS regions that this service plan is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Et aliquam ad tempora atque dolore.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this service plan is available on
          example:
          - northcentralus
          items:
            example: Numquam saepe magnam corrupti.
            type: string
          type: array
        deploymentConfigId:
          description: ID of a Deployment Config
          example: Reprehenderit animi.
          type: string
        gcpRegions:
          description: The GCP regions that this service plan is available on
          example:
          - us-central1
          items:
            example: Voluptatibus doloremque nam velit.
            type: string
          type: array
        hasPendingChanges:
          description: Whether there are any pending changes for the product tier
            configuration
          example: true
          type: boolean
        isProductTierDisabled:
          description: Whether the product tier is disabled
          example: true
          type: boolean
        latestMajorVersion:
          description: The version number for the latest major version set.
          example: "3.0"
          type: string
        modelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        privateRegions:
          description: The Private regions that this service plan is available on
          example:
          - n/a
          items:
            example: Eum et dolorem id error aut.
            type: string
          type: array
        productTierDescription:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        productTierDocumentation:
          description: Documentation
          example: Any documentation
          type: string
        productTierFeatures:
          additionalProperties:
            example: true
            type: boolean
          description: The features that are enabled / disabled for this product tier
          example:
            LOGS: true
            METRICS: false
          type: object
        productTierId:
          description: ID of a Product Tier
          example: Adipisci quis.
          type: string
        productTierKey:
          description: Unique Key of the product tier
          example: premium
          type: string
        productTierName:
          description: Name of the product tier
          example: Premium
          type: string
        productTierPlanDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        productTierPricing:
          description: Pricing
          example:
            price1: value1
        productTierSupport:
          description: Support
          example: Any support
          type: string
        serviceApiDescription:
          description: A brief description of the service API bundle
          example: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
            for high availability
          type: string
        serviceApiId:
          description: ID of a Service API
          example: Aspernatur quo quasi.
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceModelDescription:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        serviceModelFeatures:
          description: Enabled service model features
          example:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          items:
            $ref: "#/components/schemas/ServiceModelFeatureDetail"
          type: array
        serviceModelId:
          description: ID of a Service Model
          example: Placeat sit aut voluptatum.
          type: string
        serviceModelName:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        tierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        versionSetStatus:
          description: The tier version set status.
          example: Preferred|Active|Deprecated|Pending
          type: string
      required:
      - AutoApproveSubscription
      - apiVersion
      - deploymentConfigId
      - isProductTierDisabled
      - latestMajorVersion
      - modelType
      - productTierDescription
      - productTierDocumentation
      - productTierId
      - productTierKey
      - productTierName
      - productTierPlanDescription
      - productTierPricing
      - productTierSupport
      - serviceApiDescription
      - serviceApiId
      - serviceEnvironmentId
      - serviceModelDescription
      - serviceModelId
      - serviceModelName
      - tierType
      - versionSetStatus
      type: object
    GetTenantBillingStatusRequest:
      example:
        token: gbm
      properties:
        token:
          description: JWT token used to perform authorization
          example: "n"
          minLength: 1
          type: string
      required:
      - token
      type: object
    GetTenantBillingStatusResult:
      example:
        billingProviders:
        - connectClientID: ca_1234567890
          status: ENABLED
          stripeCustomerID: cus_1234567890
          type: STRIPE
        - balanceDueLink: https://billing.provider.com/balance-due
          logoURL: https://example.com/logo.png
          name: GovPay
          status: ENABLED
          type: BRING_YOUR_OWN
        enabled: true
      properties:
        billingProviders:
          description: List of billing providers
          example:
          - connectClientID: ca_1234567890
            status: ENABLED
            stripeCustomerID: cus_1234567890
            type: STRIPE
          - balanceDueLink: https://billing.provider.com/balance-due
            logoURL: https://example.com/logo.png
            name: GovPay
            status: ENABLED
            type: BRING_YOUR_OWN
          items:
            $ref: "#/components/schemas/BillingProvider"
          type: array
        enabled:
          description: Whether tenant billing is enabled for the organization
          example: true
          type: boolean
      type: object
    GetTierVersionSetSpecRequest:
      example:
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: r
        version: "3.0"
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Non asperiores.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: f
          minLength: 1
          type: string
        version:
          description: "The version number for the specific version set. If version\
            \ is not specified, returns the unreleased spec if one exists, otherwise\
            \ the latest preferred or active version spec."
          example: "3.0"
          type: string
      required:
      - productTierId
      - serviceId
      - token
      type: object
    GetTierVersionSetSpecResult:
      example:
        createdAt: 2009-12-07T19:35:32Z
        productTierId: Beatae beatae.
        serviceId: s-12345678
        specContent: "{\"RawYAML\":\"bmFtZTogbXktc2VydmljZQpkZXBsb3ltZW50OgogIGhvc3RlZDoKICAgIGFjY291bnQ6IC4uLg==\"\
          ,\"Configs\":{\"database_url\":\"cG9zdGdyZXM6Ly9sb2NhbGhvc3Q6NTQzMi9teWRi\"\
          },\"Secrets\":{\"api_key\":\"c2VjcmV0X2FwaV9rZXlfdjEyMzQ1\"}}"
        updatedAt: 2009-02-11T05:44:40Z
        version: "1.0"
      properties:
        createdAt:
          description: When the version was created
          example: 2002-09-26T04:18:01Z
          format: date-time
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Iusto quam magni.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        specContent:
          description: "JSON content containing the tier version set specification\
            \ with raw YAML, configs, and secrets"
          example: "{\"RawYAML\":\"bmFtZTogbXktc2VydmljZQpkZXBsb3ltZW50OgogIGhvc3RlZDoKICAgIGFjY291bnQ6IC4uLg==\"\
            ,\"Configs\":{\"database_url\":\"cG9zdGdyZXM6Ly9sb2NhbGhvc3Q6NTQzMi9teWRi\"\
            },\"Secrets\":{\"api_key\":\"c2VjcmV0X2FwaV9rZXlfdjEyMzQ1\"}}"
          type: string
        updatedAt:
          description: When the version was last updated
          example: 2006-09-21T01:44:48Z
          format: date-time
          type: string
        version:
          description: Version of the tier version set spec
          example: "1.0"
          type: string
      required:
      - productTierId
      - serviceId
      - specContent
      - version
      type: object
    GetUsageRequest:
      example:
        endDate: 2024-01-01T10:00:00Z
        startDate: 2023-01-01T10:00:00Z
        token: "3"
      properties:
        endDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        startDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        token:
          description: JWT token used to perform authorization
          example: y4
          minLength: 1
          type: string
      required:
      - token
      type: object
    GetUsageResult:
      example:
        endTime: 2021-01-01T00:00:00.000Z
        planName: STARTER
        startTime: 2021-01-01T00:00:00.000Z
        usage:
        - dimension: core/hours
          endTime: 2021-01-01T00:00:00.000Z
          startTime: 2021-01-01T00:00:00.000Z
          total: 0.67
      properties:
        endTime:
          description: End timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        planName:
          description: This parameter is used to select the appropriate Product Plan
          example: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
          type: string
        startTime:
          description: Start timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        usage:
          description: Usage for the current plan
          example:
          - dimension: core/hours
            endTime: 2021-01-01T00:00:00.000Z
            startTime: 2021-01-01T00:00:00.000Z
            total: 0.67
          items:
            $ref: "#/components/schemas/UsagePerDimension"
          type: array
      type: object
    GitConfiguration:
      example:
        accessToken: my-token
        commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
        referenceName: tags/v1.0.0
        repositoryUrl: https://github.com/username/myrepo
        userName: my-user
      properties:
        accessToken:
          description: The access token
          example: my-token
          type: string
        commitSHA:
          description: The commit SHA to checkout
          example: 1e386b5f54de9150d336ccfe2e14782b94faf67c
          type: string
        referenceName:
          description: The reference name of the repository
          example: tags/v1.0.0
          type: string
        repositoryUrl:
          description: The URL of the repository
          example: https://github.com/username/myrepo
          type: string
        userName:
          description: The name of github user
          example: my-user
          type: string
      required:
      - referenceName
      - repositoryUrl
      type: object
    HelmChartConfiguration:
      example:
        autoDiscoverImagesTag: omnistrate/images
        chartName: my-chart
        chartRepoName: my-repo
        chartRepoUrl: https://my-repo.com
        chartValues:
          key1: value1
          key2: 3
          key3:
            key4: value4
        chartVersion: 1.0.0
        endpointConfiguration:
          admin:
            host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
            networkingType: PRIVATE
            ports:
            - 8080
            - 8081
            primary: false
          cluster:
            host: https://my-endpoint.com
            networkingType: PUBLIC
            ports:
            - 8080
            - 8081
            primary: true
        layeredChartValues:
        - values:
            global:
              image:
                tag: v1.0.0
              replicaCount: 1
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
        - scope:
            '{{ $sys.cloudProviderName }}': aws
          valuesFile:
            gitConfiguration:
              accessToken: ghp_...
              commitSHA: a1b2c3d4e5f6
              path: aws/production.yaml
              referenceName: refs/heads/main
              repositoryUrl: https://github.com/org/helm-values
        namespace: postgres
        password: my-password
        releaseName: my-release
        runtimeConfiguration:
          disableHooks: true
          recreate: true
          resetThenReuseValues: true
          resetValues: true
          reuseValues: true
          skipCRDs: true
          timeoutNanos: 1000000000
          upgradeCRDs: true
          wait: true
          waitForJobs: true
        username: my-user
      properties:
        autoDiscoverImagesTag:
          description: "The tag to auto-discover and update in the Helm chart values\
            \ (if the chartValues or layeredChartValues contain an image tag placeholder\
            \ like {{ .Values.image.tag }}, this field specifies which tag to replace\
            \ it with)"
          example: omnistrate/images
          type: string
        chartName:
          description: The chart name of the Helm package
          example: my-chart
          type: string
        chartRepoName:
          description: The chart repository name of the Helm package
          example: my-repo
          type: string
        chartRepoUrl:
          description: The chart repository URL of the Helm package
          example: https://my-repo.com
          type: string
        chartValues:
          additionalProperties: true
          description: The values of the Helm package (mutually exclusive with layeredChartValues)
          example:
            key1: value1
            key2: 3
            key3:
              key4: value4
          type: object
        chartVersion:
          description: The chart version of the Helm package
          example: 1.0.0
          type: string
        endpointConfiguration:
          additionalProperties:
            $ref: "#/components/schemas/Endpoint"
          description: The endpoints from the Helm Deployment to expose to the customer
          example:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          type: object
        layeredChartValues:
          description: Layered chart values configuration with conditional scoping
            (mutually exclusive with chartValues). Values are processed in order -
            later entries override earlier ones for the same keys.
          example:
          - values:
              global:
                image:
                  tag: v1.0.0
                replicaCount: 1
                resources:
                  requests:
                    cpu: 100m
                    memory: 128Mi
          - scope:
              '{{ $sys.cloudProviderName }}': aws
            valuesFile:
              gitConfiguration:
                accessToken: ghp_...
                commitSHA: a1b2c3d4e5f6
                path: aws/production.yaml
                referenceName: refs/heads/main
                repositoryUrl: https://github.com/org/helm-values
          items:
            $ref: "#/components/schemas/ChartValuesRef"
          type: array
        namespace:
          description: The namespace to deploy the Helm chart into (only applicable
            to OnPrem hosting model)
          example: postgres
          type: string
        password:
          description: The password to authenticate with the registry
          example: my-password
          type: string
        releaseName:
          description: The release name of the Helm package (defaults to chartName
            if not provided)
          example: my-release
          type: string
        runtimeConfiguration:
          $ref: "#/components/schemas/HelmRuntimeConfiguration"
        username:
          description: The username to authenticate with the registry
          example: my-user
          type: string
      required:
      - chartName
      - chartRepoName
      - chartRepoUrl
      - chartVersion
      type: object
    HelmPackage:
      example:
        chartName: my-chart
        chartRepoName: my-repo
        chartRepoUrl: https://my-repo.com
        chartValues:
          key1: value1
          key2: 3
          key3:
            key4: value4
        chartVersion: 1.0.0
        layeredChartValues:
        - name: my-layer
          scope:
            '{{ $sys.cloudProviderName }}': aws
          values:
            global:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: omnistrate.com/managed-by
                        operator: In
                        values:
                        - omnistrate
          valuesFile:
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            path: helm/values/production.yaml
        - name: my-layer
          scope:
            '{{ $sys.cloudProviderName }}': aws
          values:
            global:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: omnistrate.com/managed-by
                        operator: In
                        values:
                        - omnistrate
          valuesFile:
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            path: helm/values/production.yaml
        namespace: default
        password: my-password
        username: my-user
      properties:
        chartName:
          description: The chart name of the Helm package
          example: my-chart
          type: string
        chartRepoName:
          description: The chart repository name of the Helm package
          example: my-repo
          type: string
        chartRepoUrl:
          description: The chart repository URL of the Helm package
          example: https://my-repo.com
          type: string
        chartValues:
          additionalProperties: true
          description: The values of the Helm package (mutually exclusive with layeredChartValues)
          example:
            key1: value1
            key2: 3
            key3:
              key4: value4
          type: object
        chartVersion:
          description: The chart version of the Helm package
          example: 1.0.0
          type: string
        layeredChartValues:
          description: Layered chart values configuration allowing multiple conditional
            value sets (mutually exclusive with chartValues).
          example:
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          items:
            $ref: "#/components/schemas/ChartValuesRef"
          type: array
        namespace:
          description: The namespace where the Helm package should be installed
          example: default
          type: string
        password:
          description: The password to authenticate with the registry
          example: my-password
          type: string
        username:
          description: The username to authenticate with the registry
          example: my-user
          type: string
      required:
      - chartName
      - chartRepoName
      - chartRepoUrl
      - chartVersion
      - namespace
      type: object
    HelmRuntimeConfiguration:
      example:
        disableHooks: true
        disableReconciliation: true
        recreate: true
        resetThenReuseValues: true
        resetValues: true
        reuseValues: true
        skipCRDs: true
        timeoutNanos: 1000000000
        upgradeCRDs: true
        wait: true
        waitForJobs: true
      properties:
        disableHooks:
          description: Disable Helm hooks
          example: true
          type: boolean
        disableReconciliation:
          description: Flag to disable drift reconciliation for the Helm package
          example: true
          type: boolean
        recreate:
          description: Recreate the Helm package if it already exists
          example: true
          type: boolean
        resetThenReuseValues:
          description: Reset then reuse values for the Helm package before applying
          example: true
          type: boolean
        resetValues:
          description: Reset values for the Helm package before applying
          example: true
          type: boolean
        reuseValues:
          description: Reuse values for the Helm package before applying
          example: true
          type: boolean
        skipCRDs:
          description: Skip CRDs for the Helm package
          example: true
          type: boolean
        timeoutNanos:
          description: Timeout (nanos) for the Helm package to be deployed
          example: 1000000000
          format: int64
          type: integer
        upgradeCRDs:
          description: Upgrade CRDs for the Helm package
          example: true
          type: boolean
        wait:
          description: Wait for the Helm package to be deployed
          example: true
          type: boolean
        waitForJobs:
          description: Wait for all jobs to be completed
          example: true
          type: boolean
      type: object
    ImageConfigChangeSummary:
      example:
        changeState: PENDING_NEW
        imageConfigId: imgc-12345678
        imageName: mysql
      properties:
        changeState:
          description: State of the configuration change
          example: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
          type: string
        imageConfigId:
          description: ID of an Image Config
          example: Unde ipsa quaerat sapiente sint.
          type: string
        imageName:
          description: Name of the container image
          example: mysql
          minLength: 1
          type: string
      type: object
    InfraConfigChangeSummary:
      example:
        changeState: PENDING_NEW
        infraConfigId: ic-12345678
        name: MySQL Writer Infra Config
      properties:
        changeState:
          description: State of the configuration change
          example: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
          type: string
        infraConfigId:
          description: ID of an Infra Config
          example: Autem voluptatibus dolorum in rerum minima.
          type: string
        name:
          description: The name of the infra config
          example: MySQL Writer Infra Config
          type: string
      type: object
    InfraRollConfiguration:
      description: The rollout configuration to use for making changes to the resources
        backed by this infra
      example:
        infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
        maximumNumberOfResourceInstancesPerBatch: 1
        maximumUnavailableReplicas: 1
      properties:
        infraRolloutStrategy:
          description: Rollout strategy to use for infra config updates
          example: APPLY_IMMEDIATELY
          type: string
        maximumNumberOfResourceInstancesPerBatch:
          default: 1
          description: Maximum number of resource instances to update in a single
            batch
          example: 1
          format: int64
          minimum: 1
          type: integer
        maximumUnavailableReplicas:
          default: 1
          description: Maximum number of replicas of this resource that can be unavailable
            before halting the rollout
          example: 1
          format: int64
          minimum: 1
          type: integer
      type: object
    InputParameterEntity:
      example:
        custom: false
        defaultValue: option1
        dependentResourceID: r-12345678
        description: The name of the server
        displayName: Server Name
        isList: false
        key: serverName
        modifiable: true
        options:
        - option1
        - option2
        regex: "^[a-zA-Z0-9_-]{3,16}$"
        required: true
        tabIndex: 1
        type: Boolean|Float64|String|JSON|Resource
      properties:
        custom:
          description: Whether the parameter is custom
          example: false
          type: boolean
        defaultValue:
          description: The parameter default value
          example: option1
          type: string
        dependentResourceID:
          description: The parameter dependent resource ID
          example: r-12345678
          type: string
        description:
          description: The parameter description
          example: The name of the server
          type: string
        displayName:
          description: The parameter display name
          example: Server Name
          type: string
        isList:
          description: Whether the parameter is a list
          example: false
          type: boolean
        key:
          description: The parameter key
          example: serverName
          type: string
        modifiable:
          description: Whether the parameter is modifiable
          example: true
          type: boolean
        options:
          description: The parameter options
          example:
          - option1
          - option2
          items:
            example: Qui et non magnam veritatis deserunt atque.
            type: string
          type: array
        regex:
          description: The parameter regex for validation
          example: "^[a-zA-Z0-9_-]{3,16}$"
          type: string
        required:
          description: Whether the parameter is required
          example: true
          type: boolean
        tabIndex:
          default: 0
          description: Index for parameter ordering in the SaaS portal
          example: 1
          format: int64
          type: integer
        type:
          description: The parameter type
          example: Boolean|Float64|String|JSON|Resource
          type: string
      required:
      - custom
      - description
      - displayName
      - isList
      - key
      - modifiable
      - required
      - type
      type: object
    InstanceHealthSummary:
      example:
        instanceID: instance-12345678
        lifeCycleStatus: RUNNING
        resourcesHealth:
          Nihil incidunt maiores facere officia sapiente eum.:
            nodesHealth:
              Nesciunt deleniti iste ullam.:
                availabilityZone: us-east-2a
                connectivityStatus: HEALTHY
                diskHealth: HEALTHY
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                integrationsHealth:
                  CustomerObservabilityHealth: HEALTHY
                  InternalObservabilityHealth: HEALTHY
                loadStatus: LOAD_NORMAL
                nodeHealth: HEALTHY
                nodeName: postgres-0
                ports:
                - 80
                - 443
                processHealth: HEALTHY
                processLiveness: HEALTHY
                status: HEALTHY
              Recusandae voluptatum cumque.:
                availabilityZone: us-east-2a
                connectivityStatus: HEALTHY
                diskHealth: HEALTHY
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                integrationsHealth:
                  CustomerObservabilityHealth: HEALTHY
                  InternalObservabilityHealth: HEALTHY
                loadStatus: LOAD_NORMAL
                nodeHealth: HEALTHY
                nodeName: postgres-0
                ports:
                - 80
                - 443
                processHealth: HEALTHY
                processLiveness: HEALTHY
                status: HEALTHY
            resourceID: resource-12345678
            resourceKey: primary
            resourceType: Kustomize
            status: HEALTHY
          Officia excepturi.:
            nodesHealth:
              Nesciunt deleniti iste ullam.:
                availabilityZone: us-east-2a
                connectivityStatus: HEALTHY
                diskHealth: HEALTHY
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                integrationsHealth:
                  CustomerObservabilityHealth: HEALTHY
                  InternalObservabilityHealth: HEALTHY
                loadStatus: LOAD_NORMAL
                nodeHealth: HEALTHY
                nodeName: postgres-0
                ports:
                - 80
                - 443
                processHealth: HEALTHY
                processLiveness: HEALTHY
                status: HEALTHY
              Recusandae voluptatum cumque.:
                availabilityZone: us-east-2a
                connectivityStatus: HEALTHY
                diskHealth: HEALTHY
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                integrationsHealth:
                  CustomerObservabilityHealth: HEALTHY
                  InternalObservabilityHealth: HEALTHY
                loadStatus: LOAD_NORMAL
                nodeHealth: HEALTHY
                nodeName: postgres-0
                ports:
                - 80
                - 443
                processHealth: HEALTHY
                processLiveness: HEALTHY
                status: HEALTHY
            resourceID: resource-12345678
            resourceKey: primary
            resourceType: Kustomize
            status: HEALTHY
          Sapiente architecto ipsam nisi quia dolore laborum.:
            nodesHealth:
              Nesciunt deleniti iste ullam.:
                availabilityZone: us-east-2a
                connectivityStatus: HEALTHY
                diskHealth: HEALTHY
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                integrationsHealth:
                  CustomerObservabilityHealth: HEALTHY
                  InternalObservabilityHealth: HEALTHY
                loadStatus: LOAD_NORMAL
                nodeHealth: HEALTHY
                nodeName: postgres-0
                ports:
                - 80
                - 443
                processHealth: HEALTHY
                processLiveness: HEALTHY
                status: HEALTHY
              Recusandae voluptatum cumque.:
                availabilityZone: us-east-2a
                connectivityStatus: HEALTHY
                diskHealth: HEALTHY
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                integrationsHealth:
                  CustomerObservabilityHealth: HEALTHY
                  InternalObservabilityHealth: HEALTHY
                loadStatus: LOAD_NORMAL
                nodeHealth: HEALTHY
                nodeName: postgres-0
                ports:
                - 80
                - 443
                processHealth: HEALTHY
                processLiveness: HEALTHY
                status: HEALTHY
            resourceID: resource-12345678
            resourceKey: primary
            resourceType: Kustomize
            status: HEALTHY
        status: HEALTHY
      properties:
        instanceID:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        lifeCycleStatus:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        resourcesHealth:
          additionalProperties:
            $ref: "#/components/schemas/ResourceHealthSummary"
          description: The health summary of the resources by resource ID
          example:
            Numquam vitae necessitatibus soluta soluta corrupti.:
              nodesHealth:
                Nesciunt deleniti iste ullam.:
                  availabilityZone: us-east-2a
                  connectivityStatus: HEALTHY
                  diskHealth: HEALTHY
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  integrationsHealth:
                    CustomerObservabilityHealth: HEALTHY
                    InternalObservabilityHealth: HEALTHY
                  loadStatus: LOAD_NORMAL
                  nodeHealth: HEALTHY
                  nodeName: postgres-0
                  ports:
                  - 80
                  - 443
                  processHealth: HEALTHY
                  processLiveness: HEALTHY
                  status: HEALTHY
                Recusandae voluptatum cumque.:
                  availabilityZone: us-east-2a
                  connectivityStatus: HEALTHY
                  diskHealth: HEALTHY
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  integrationsHealth:
                    CustomerObservabilityHealth: HEALTHY
                    InternalObservabilityHealth: HEALTHY
                  loadStatus: LOAD_NORMAL
                  nodeHealth: HEALTHY
                  nodeName: postgres-0
                  ports:
                  - 80
                  - 443
                  processHealth: HEALTHY
                  processLiveness: HEALTHY
                  status: HEALTHY
              resourceID: resource-12345678
              resourceKey: primary
              resourceType: Kustomize
              status: HEALTHY
          type: object
        status:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
      type: object
    InstanceSnapshot:
      example:
        completeTime: 2021-09-01T00:00:00Z
        createdTime: 2021-09-01T00:00:00Z
        encrypted: true
        progress: 99
        region: us-east-1
        snapshotId: instance-ss-12345678
        snapshotType: AutomatedSnapshot|ManualSnapshot
        status: completed
      properties:
        completeTime:
          description: The snapshot time
          example: 2021-09-01T00:00:00Z
          type: string
        createdTime:
          description: The snapshot creation time
          example: 2021-09-01T00:00:00Z
          type: string
        encrypted:
          description: Whether the snapshot is encrypted
          example: true
          type: boolean
        progress:
          description: The backup progress. 0-100
          example: 99
          format: int64
          type: integer
        region:
          description: The region name where the snapshot is stored
          example: us-east-1
          type: string
        snapshotId:
          description: ID of a Resource Instance Snapshot
          example: Quo exercitationem a optio.
          type: string
        snapshotType:
          description: The snapshot type
          example: AutomatedSnapshot|ManualSnapshot
          type: string
        status:
          description: The snapshot status
          example: completed
          type: string
      required:
      - completeTime
      - createdTime
      - encrypted
      - progress
      - region
      - snapshotId
      - snapshotType
      - status
      type: object
    IntegrationsHealth:
      example:
        CustomerObservabilityHealth: HEALTHY
        InternalObservabilityHealth: HEALTHY
      properties:
        CustomerObservabilityHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        InternalObservabilityHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
      type: object
    InviteConsumptionUserRequest:
      example:
        email: abc@gmail.com
        roleType: reader
        subscriptionId: sub-abcd1234
        token: o
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: tb
          minLength: 1
          type: string
      required:
      - email
      - roleType
      - subscriptionId
      - token
      type: object
    InviteConsumptionUserRequest2:
      example:
        email: abc@gmail.com
        roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
      required:
      - email
      - roleType
      type: object
    InviteUserRequest:
      example:
        email: abc@gmail.com
        roleType: reader
        token: 22y
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        token:
          description: JWT token used to perform authorization
          example: "2"
          minLength: 1
          type: string
      required:
      - email
      - roleType
      - token
      type: object
    InviteUserRequest2:
      example:
        email: abc@gmail.com
        roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
      required:
      - email
      - roleType
      type: object
    Invoice:
      example:
        currency: USD
        dueDate: 2023-10-01T00:00:00Z
        invoiceDate: 2021-01-01T00:00:00.000Z
        invoiceId: in_1234568
        invoiceNumber: 2021-01-01-1234567890
        invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
        invoiceStatus: Open
        invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
        paymentTerms: Net 30
        taxAmount: 10
        totalAmount: 110
        totalAmountWithoutTax: 100
      properties:
        currency:
          description: The currency of the charge
          example: USD
          type: string
        dueDate:
          description: Due date in ISO 8601 format
          example: 2023-10-01T00:00:00Z
          type: string
        invoiceDate:
          description: Date of the invoice
          example: 2021-01-01T00:00:00.000Z
          type: string
        invoiceId:
          description: ID of the invoice
          example: in_1234568
          type: string
        invoiceNumber:
          description: The invoice number
          example: 2021-01-01-1234567890
          type: string
        invoicePdf:
          description: URL for the PDF of the invoice
          example: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
          type: string
        invoiceStatus:
          description: This describes the status of the invoice and is set by the
            payment provider
          example: draft|open|paid|uncollectible|void
          type: string
        invoiceUrl:
          description: URL for this invoice
          example: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
          type: string
        paymentTerms:
          description: Payment terms of the invoice
          example: Net 30
          type: string
        taxAmount:
          description: "Amount of tax, if any"
          example: 10
          format: double
          type: number
        totalAmount:
          description: Amount of Invoice
          example: 110
          format: double
          type: number
        totalAmountWithoutTax:
          description: Amount of Invoice without tax
          example: 100
          format: double
          type: number
      type: object
    JobConfig:
      example:
        activeDeadlineSeconds: 3600
        backoffLimit: 5
        scheduleConfig:
          cronExpression: 0 2 * * *
          simpleInterval: 30m
          timezone: UTC
      properties:
        activeDeadlineSeconds:
          default: 3600
          description: The duration in seconds relative to the startTime that the
            job may be active before the system tries to terminate it
          example: 3600
          format: int64
          type: integer
        backoffLimit:
          default: 5
          description: The number of retries before marking the job as failed
          example: 5
          format: int32
          type: integer
        scheduleConfig:
          $ref: "#/components/schemas/ScheduleConfig"
      type: object
    JobMetric:
      example:
        additionalData:
          completionStatus: Succeeded
          retries: 2
        endTime: 2021-09-01T01:00:00Z
        metricType: cpu_core_seconds
        startTime: 2021-09-01T00:00:00Z
        value: 120.5
      properties:
        additionalData:
          additionalProperties: true
          description: Additional metadata about the job
          example:
            completionStatus: Succeeded
            retries: 2
          type: object
        endTime:
          description: When the job completed
          example: 2021-09-01T01:00:00Z
          type: string
        metricType:
          description: Type of job metric being tracked
          example: cpu_core_seconds|memory_mb_seconds
          type: string
        startTime:
          description: When the job started running
          example: 2021-09-01T00:00:00Z
          type: string
        value:
          description: Value of the metric
          example: 120.5
          format: double
          type: number
      required:
      - metricType
      - startTime
      - value
      type: object
    KubectlValueProviderConfig:
      description: Configuration for kubectl-based value provider
      example:
        command: "get secret {{ $sys.id }}-creds -o jsonpath='{.data.username}'"
        context: production
        environment:
          KUBECONFIG: /path/to/config
        namespace: default
        retryCount: 3
        timeout: 30
      properties:
        command:
          description: The kubectl command to execute
          example: "get secret {{ $sys.id }}-creds -o jsonpath='{.data.username}'"
          type: string
        context:
          description: Kubernetes context for the command
          example: production
          type: string
        environment:
          additionalProperties:
            example: Qui odit sit.
            type: string
          description: Environment variables for the command
          example:
            KUBECONFIG: /path/to/config
          type: object
        namespace:
          description: Kubernetes namespace for the command
          example: default
          type: string
        retryCount:
          default: 3
          description: Number of retry attempts
          example: 3
          format: int64
          type: integer
        timeout:
          default: 30
          description: Command timeout in seconds
          example: 30
          format: int64
          type: integer
      required:
      - command
      type: object
    KubernetesDashboardEndpoint:
      example:
        dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
        deploymentCellID: hc-12345678
      properties:
        dashboardEndpoint:
          default: ""
          description: The dashboard endpoint
          example: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
          type: string
        deploymentCellID:
          default: ""
          description: The deployment cell ID
          example: hc-12345678
          type: string
      type: object
    KustomizeConfiguration:
      example:
        disableReconciliation: false
        endpointConfiguration:
          admin:
            host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
            networkingType: PRIVATE
            ports:
            - 8080
            - 8081
            primary: false
          cluster:
            host: https://my-endpoint.com
            networkingType: PUBLIC
            ports:
            - 8080
            - 8081
            primary: true
        gitConfiguration:
          accessToken: my-token
          commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
          referenceName: tags/v1.0.0
          repositoryUrl: https://github.com/username/myrepo
          userName: my-user
        helmChartDependencies:
        - chartName: cert-manager
          chartVersion: v1.5.3
        - chartName: nginx-ingress
          chartVersion: v0.48.1
        - chartName: external-dns
          chartVersion: v0.7.0
        - chartName: cnpg-operator
          chartVersion: v0.23.1
        kustomizePath: /kustomize
      properties:
        disableReconciliation:
          description: Flag to disable drift reconciliation for the Kustomize deployment
          example: false
          type: boolean
        endpointConfiguration:
          additionalProperties:
            $ref: "#/components/schemas/Endpoint"
          description: The endpoints from the Kustomize Deployment to expose to the
            customer
          example:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          type: object
        gitConfiguration:
          $ref: "#/components/schemas/GitConfiguration"
        helmChartDependencies:
          description: The helm chart dependencies for the CRD - Optional
          example:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          items:
            $ref: "#/components/schemas/OperatorHelmChartDependency"
          type: array
        kustomizePath:
          description: The path to the kustomize directory
          example: /kustomize
          type: string
      required:
      - kustomizePath
      type: object
    L4LoadBalancerConfiguration:
      example:
        ingressPortConfiguration:
        - associatedResourceIDs:
          - r-12345678
          - r-abcdef12
          backendPort: 8080
          ingressPort: 1234
        - associatedResourceIDs:
          - r-12345678
          - r-abcdef12
          backendPort: 8081
          ingressPort: 5678
        - associatedResourceIDs:
          - r-vwxybz12
          - r-poij122v
          backendPort: 8082
          ingressPort: 9012
      properties:
        ingressPortConfiguration:
          description: The ingress port configuration to configure on the load balancer
          example:
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8080
            ingressPort: 1234
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8081
            ingressPort: 5678
          - associatedResourceIDs:
            - r-vwxybz12
            - r-poij122v
            backendPort: 8082
            ingressPort: 9012
          items:
            $ref: "#/components/schemas/BackendPortConfiguration"
          type: array
      type: object
    L7LoadBalancerConfiguration:
      example:
        paths:
        - associatedResourceID: r-12345678
          path: /path
          port: 8080
      properties:
        paths:
          description: The paths to configure on the load balancer
          example:
          - associatedResourceID: r-12345678
            path: /path
            port: 8080
          items:
            $ref: "#/components/schemas/LoadBalancerPathConfiguration"
          type: array
      type: object
    Limits:
      description: Limit of a parameter
      example:
        max: Perferendis dolores quia similique dolorem cum.
        maxLength: Quia facilis qui consequatur explicabo quam.
        min: Iste quia reiciendis molestiae similique voluptas laboriosam.
        minLength: Iste iste ea aut.
      properties:
        max:
          description: Maximum value for an integer or floating-point parameter
          example: Sed consequatur.
          type: string
        maxLength:
          description: Maximum length of a string parameter
          example: Qui incidunt est ducimus magnam expedita ut.
          type: string
        min:
          description: Minimum value for an integer or floating-point parameter
          example: Fugiat voluptas quia nam laboriosam ipsa.
          type: string
        minLength:
          description: Minimum length of a string parameter
          example: Quis voluptas debitis expedita aliquam.
          type: string
      type: object
    List:
      example:
        token: uq
      properties:
        token:
          description: JWT token used to perform authorization
          example: w5
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListAccountConfigRequest:
      example:
        cloudProviderName: aws
        token: l9
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        token:
          description: JWT token used to perform authorization
          example: kqq
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - token
      type: object
    ListAccountConfigResult:
      description: List of Account Config IDs
      example:
        accountConfigs:
        - awsAccountID: "123456789012"
          awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          byoaInstanceIDs:
          - instance-12345678
          - instance-abcdefgh
          cloudProviderId: infra-12345678
          description: An AWS account hosting multiple dev environments
          gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
          id: ac-12345678
          name: Dev AWS account
          ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          status: READY
          statusMessage: Account is ready
        - awsAccountID: "123456789012"
          awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          byoaInstanceIDs:
          - instance-12345678
          - instance-abcdefgh
          cloudProviderId: infra-12345678
          description: An AWS account hosting multiple dev environments
          gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
          id: ac-12345678
          name: Dev AWS account
          ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          status: READY
          statusMessage: Account is ready
        - awsAccountID: "123456789012"
          awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          byoaInstanceIDs:
          - instance-12345678
          - instance-abcdefgh
          cloudProviderId: infra-12345678
          description: An AWS account hosting multiple dev environments
          gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
          id: ac-12345678
          name: Dev AWS account
          ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          status: READY
          statusMessage: Account is ready
        - awsAccountID: "123456789012"
          awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          byoaInstanceIDs:
          - instance-12345678
          - instance-abcdefgh
          cloudProviderId: infra-12345678
          description: An AWS account hosting multiple dev environments
          gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
          id: ac-12345678
          name: Dev AWS account
          ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          status: READY
          statusMessage: Account is ready
        ids:
        - ac-12345678
        - ac-abcdefgh
        - ac-1234efgh
        nextPageToken: next-token
      properties:
        accountConfigs:
          description: The list of account configs
          example:
          - awsAccountID: "123456789012"
            awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
            awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
            azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            byoaInstanceIDs:
            - instance-12345678
            - instance-abcdefgh
            cloudProviderId: infra-12345678
            description: An AWS account hosting multiple dev environments
            gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
            id: ac-12345678
            name: Dev AWS account
            ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            status: READY
            statusMessage: Account is ready
          - awsAccountID: "123456789012"
            awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
            awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
            azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            byoaInstanceIDs:
            - instance-12345678
            - instance-abcdefgh
            cloudProviderId: infra-12345678
            description: An AWS account hosting multiple dev environments
            gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
            id: ac-12345678
            name: Dev AWS account
            ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            status: READY
            statusMessage: Account is ready
          - awsAccountID: "123456789012"
            awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
            awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
            azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            byoaInstanceIDs:
            - instance-12345678
            - instance-abcdefgh
            cloudProviderId: infra-12345678
            description: An AWS account hosting multiple dev environments
            gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
            id: ac-12345678
            name: Dev AWS account
            ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            status: READY
            statusMessage: Account is ready
          - awsAccountID: "123456789012"
            awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
            awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
            azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            byoaInstanceIDs:
            - instance-12345678
            - instance-abcdefgh
            cloudProviderId: infra-12345678
            description: An AWS account hosting multiple dev environments
            gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
            id: ac-12345678
            name: Dev AWS account
            ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            status: READY
            statusMessage: Account is ready
          items:
            $ref: "#/components/schemas/DescribeAccountConfigResult"
          type: array
        ids:
          example:
          - ac-12345678
          - ac-abcdefgh
          - ac-1234efgh
          items:
            description: ID of an Account Config
            example: Distinctio illo nemo tempore impedit.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      type: object
    ListActionHooksRequest:
      example:
        id: r-12345678
        serviceId: s-12345678
        token: om
      properties:
        id:
          description: ID of a resource
          example: Quos ea odio sed voluptatum officia.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 5p
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ListActionHooksResult:
      example:
        hooks:
        - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
          customCommand:
          - /bin/sh
          - -c
          customImage: my-custom-image:latest
          scope: CLUSTER
          type: ADD
        - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
          customCommand:
          - /bin/sh
          - -c
          customImage: my-custom-image:latest
          scope: CLUSTER
          type: ADD
        - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
          customCommand:
          - /bin/sh
          - -c
          customImage: my-custom-image:latest
          scope: CLUSTER
          type: ADD
      properties:
        hooks:
          description: The list of action hooks
          example:
          - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
            customCommand:
            - /bin/sh
            - -c
            customImage: my-custom-image:latest
            scope: CLUSTER
            type: ADD
          - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
            customCommand:
            - /bin/sh
            - -c
            customImage: my-custom-image:latest
            scope: CLUSTER
            type: ADD
          - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
            customCommand:
            - /bin/sh
            - -c
            customImage: my-custom-image:latest
            scope: CLUSTER
            type: ADD
          - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
            customCommand:
            - /bin/sh
            - -c
            customImage: my-custom-image:latest
            scope: CLUSTER
            type: ADD
          items:
            $ref: "#/components/schemas/ActionHook"
          type: array
      required:
      - hooks
      type: object
    ListAllAuditEventsRequest:
      example:
        endDate: 2024-01-01T10:00:00Z
        environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
        eventSourceTypes:
        - Consequatur quod sed veniam est vel placeat.
        - Molestias similique.
        - Doloribus esse soluta eaque itaque voluptate ab.
        - Similique ab aut a necessitatibus ducimus beatae.
        instanceID: instance-12345678
        nextPageToken: token
        pageSize: 10
        serviceID: s-123456
        startDate: 2023-01-01T10:00:00Z
        token: "6"
      properties:
        endDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        eventSourceTypes:
          description: The event types to filter by
          example:
          - Optio amet qui illo vitae.
          - Inventore sed dolorem ut distinctio consequatur animi.
          - Omnis voluptates molestiae.
          - Et similique eos id consequatur in dolorem.
          items:
            example: At doloribus consequatur voluptas beatae consequatur omnis.
            type: string
          type: array
        instanceID:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        startDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        token:
          description: JWT token used to perform authorization
          example: b
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListAllResourceInstancesRequest:
      example:
        environmentType: DEV
        token: jw
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        token:
          description: JWT token used to perform authorization
          example: 8c
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListAllResourceInstancesResult:
      example:
        nextPageToken: next-token
        resourceInstances:
        - active: true
          autoscalingEnabled: true
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          backupStatus:
            backupPeriodInHours: 2
            backupRetentionInDays: 7
            earliestRestoreTime: 2021-09-01T00:00:00Z
            lastBackupTime: 2021-09-01T00:00:00Z
          cloud_provider: aws
          created_at: 2023-01-10T00:00:00Z
          createdByUserId: user-12345678
          createdByUserName: John Doe
          currentReplicas: "2"
          customNetworkDetail:
            cidr: 10.177.0.0/16
            id: n-12345678
            name: Prod us-east-1
          customTags:
          - key: customKey1
            value: customValue1
          - key: customKey2
            value: customValue2
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              isJob: false
              jobMetrics:
              - additionalData:
                  exitCode: 0
                  status: Succeeded
                endTime: 2023-01-01T10:05:00Z
                metricType: cpu_core_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 120.5
              - additionalData:
                  peakMemoryUsage: 512MB
                endTime: 2023-01-01T10:05:00Z
                metricType: memory_mb_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 2560
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: primary
              resourceName: Primary MySQL Instance
          externalPayerId: external-payer-id-1234
          gcpProjectID: my-project
          highAvailability: true
          id: instance-abcd1234
          instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          last_modified_at: 2023-01-20T00:00:00Z
          maintenanceTasks:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          maxReplicas: "1"
          minReplicas: "1"
          network_type: PUBLIC|INTERNAL
          productTierFeatures:
            LOGS:
              auth:
                password: px3c4d5f6g7h8i
                username: abcd1234
              enabled: true
              websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
            METRICS:
              enabled: false
          region: us-east-1
          resourceID: r-abcd1234
          result_params:
            param1: value1
            param2: value2
          serverlessEnabled: true
          status: RUNNING
          subscriptionId: sub-abcd1234
          subscriptionLicense:
            certificateBase64: public-cert
            expirationDate: 2024-01-01T10:00:00Z
            licenseBase64: license-file
          subscriptionStatus: ACTIVE
          tierVersion: "1.0"
        - active: true
          autoscalingEnabled: true
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          backupStatus:
            backupPeriodInHours: 2
            backupRetentionInDays: 7
            earliestRestoreTime: 2021-09-01T00:00:00Z
            lastBackupTime: 2021-09-01T00:00:00Z
          cloud_provider: aws
          created_at: 2023-01-10T00:00:00Z
          createdByUserId: user-12345678
          createdByUserName: John Doe
          currentReplicas: "2"
          customNetworkDetail:
            cidr: 10.177.0.0/16
            id: n-12345678
            name: Prod us-east-1
          customTags:
          - key: customKey1
            value: customValue1
          - key: customKey2
            value: customValue2
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              isJob: false
              jobMetrics:
              - additionalData:
                  exitCode: 0
                  status: Succeeded
                endTime: 2023-01-01T10:05:00Z
                metricType: cpu_core_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 120.5
              - additionalData:
                  peakMemoryUsage: 512MB
                endTime: 2023-01-01T10:05:00Z
                metricType: memory_mb_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 2560
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: primary
              resourceName: Primary MySQL Instance
          externalPayerId: external-payer-id-1234
          gcpProjectID: my-project
          highAvailability: true
          id: instance-abcd1234
          instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          last_modified_at: 2023-01-20T00:00:00Z
          maintenanceTasks:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          maxReplicas: "1"
          minReplicas: "1"
          network_type: PUBLIC|INTERNAL
          productTierFeatures:
            LOGS:
              auth:
                password: px3c4d5f6g7h8i
                username: abcd1234
              enabled: true
              websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
            METRICS:
              enabled: false
          region: us-east-1
          resourceID: r-abcd1234
          result_params:
            param1: value1
            param2: value2
          serverlessEnabled: true
          status: RUNNING
          subscriptionId: sub-abcd1234
          subscriptionLicense:
            certificateBase64: public-cert
            expirationDate: 2024-01-01T10:00:00Z
            licenseBase64: license-file
          subscriptionStatus: ACTIVE
          tierVersion: "1.0"
      properties:
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        resourceInstances:
          description: The list of resource instances
          example:
          - active: true
            autoscalingEnabled: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            backupStatus:
              backupPeriodInHours: 2
              backupRetentionInDays: 7
              earliestRestoreTime: 2021-09-01T00:00:00Z
              lastBackupTime: 2021-09-01T00:00:00Z
            cloud_provider: aws
            created_at: 2023-01-10T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            currentReplicas: "2"
            customNetworkDetail:
              cidr: 10.177.0.0/16
              id: n-12345678
              name: Prod us-east-1
            customTags:
            - key: customKey1
              value: customValue1
            - key: customKey2
              value: customValue2
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                isJob: false
                jobMetrics:
                - additionalData:
                    exitCode: 0
                    status: Succeeded
                  endTime: 2023-01-01T10:05:00Z
                  metricType: cpu_core_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 120.5
                - additionalData:
                    peakMemoryUsage: 512MB
                  endTime: 2023-01-01T10:05:00Z
                  metricType: memory_mb_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 2560
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: primary
                resourceName: Primary MySQL Instance
            externalPayerId: external-payer-id-1234
            gcpProjectID: my-project
            highAvailability: true
            id: instance-abcd1234
            instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            last_modified_at: 2023-01-20T00:00:00Z
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            maxReplicas: "1"
            minReplicas: "1"
            network_type: PUBLIC|INTERNAL
            productTierFeatures:
              LOGS:
                auth:
                  password: px3c4d5f6g7h8i
                  username: abcd1234
                enabled: true
                websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
              METRICS:
                enabled: false
            region: us-east-1
            resourceID: r-abcd1234
            result_params:
              param1: value1
              param2: value2
            serverlessEnabled: true
            status: RUNNING
            subscriptionId: sub-abcd1234
            subscriptionLicense:
              certificateBase64: public-cert
              expirationDate: 2024-01-01T10:00:00Z
              licenseBase64: license-file
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
          - active: true
            autoscalingEnabled: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            backupStatus:
              backupPeriodInHours: 2
              backupRetentionInDays: 7
              earliestRestoreTime: 2021-09-01T00:00:00Z
              lastBackupTime: 2021-09-01T00:00:00Z
            cloud_provider: aws
            created_at: 2023-01-10T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            currentReplicas: "2"
            customNetworkDetail:
              cidr: 10.177.0.0/16
              id: n-12345678
              name: Prod us-east-1
            customTags:
            - key: customKey1
              value: customValue1
            - key: customKey2
              value: customValue2
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                isJob: false
                jobMetrics:
                - additionalData:
                    exitCode: 0
                    status: Succeeded
                  endTime: 2023-01-01T10:05:00Z
                  metricType: cpu_core_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 120.5
                - additionalData:
                    peakMemoryUsage: 512MB
                  endTime: 2023-01-01T10:05:00Z
                  metricType: memory_mb_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 2560
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: primary
                resourceName: Primary MySQL Instance
            externalPayerId: external-payer-id-1234
            gcpProjectID: my-project
            highAvailability: true
            id: instance-abcd1234
            instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            last_modified_at: 2023-01-20T00:00:00Z
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            maxReplicas: "1"
            minReplicas: "1"
            network_type: PUBLIC|INTERNAL
            productTierFeatures:
              LOGS:
                auth:
                  password: px3c4d5f6g7h8i
                  username: abcd1234
                enabled: true
                websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
              METRICS:
                enabled: false
            region: us-east-1
            resourceID: r-abcd1234
            result_params:
              param1: value1
              param2: value2
            serverlessEnabled: true
            status: RUNNING
            subscriptionId: sub-abcd1234
            subscriptionLicense:
              certificateBase64: public-cert
              expirationDate: 2024-01-01T10:00:00Z
              licenseBase64: license-file
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
          - active: true
            autoscalingEnabled: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            backupStatus:
              backupPeriodInHours: 2
              backupRetentionInDays: 7
              earliestRestoreTime: 2021-09-01T00:00:00Z
              lastBackupTime: 2021-09-01T00:00:00Z
            cloud_provider: aws
            created_at: 2023-01-10T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            currentReplicas: "2"
            customNetworkDetail:
              cidr: 10.177.0.0/16
              id: n-12345678
              name: Prod us-east-1
            customTags:
            - key: customKey1
              value: customValue1
            - key: customKey2
              value: customValue2
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                isJob: false
                jobMetrics:
                - additionalData:
                    exitCode: 0
                    status: Succeeded
                  endTime: 2023-01-01T10:05:00Z
                  metricType: cpu_core_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 120.5
                - additionalData:
                    peakMemoryUsage: 512MB
                  endTime: 2023-01-01T10:05:00Z
                  metricType: memory_mb_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 2560
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: primary
                resourceName: Primary MySQL Instance
            externalPayerId: external-payer-id-1234
            gcpProjectID: my-project
            highAvailability: true
            id: instance-abcd1234
            instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            last_modified_at: 2023-01-20T00:00:00Z
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            maxReplicas: "1"
            minReplicas: "1"
            network_type: PUBLIC|INTERNAL
            productTierFeatures:
              LOGS:
                auth:
                  password: px3c4d5f6g7h8i
                  username: abcd1234
                enabled: true
                websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
              METRICS:
                enabled: false
            region: us-east-1
            resourceID: r-abcd1234
            result_params:
              param1: value1
              param2: value2
            serverlessEnabled: true
            status: RUNNING
            subscriptionId: sub-abcd1234
            subscriptionLicense:
              certificateBase64: public-cert
              expirationDate: 2024-01-01T10:00:00Z
              licenseBase64: license-file
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
          - active: true
            autoscalingEnabled: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            backupStatus:
              backupPeriodInHours: 2
              backupRetentionInDays: 7
              earliestRestoreTime: 2021-09-01T00:00:00Z
              lastBackupTime: 2021-09-01T00:00:00Z
            cloud_provider: aws
            created_at: 2023-01-10T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            currentReplicas: "2"
            customNetworkDetail:
              cidr: 10.177.0.0/16
              id: n-12345678
              name: Prod us-east-1
            customTags:
            - key: customKey1
              value: customValue1
            - key: customKey2
              value: customValue2
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                isJob: false
                jobMetrics:
                - additionalData:
                    exitCode: 0
                    status: Succeeded
                  endTime: 2023-01-01T10:05:00Z
                  metricType: cpu_core_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 120.5
                - additionalData:
                    peakMemoryUsage: 512MB
                  endTime: 2023-01-01T10:05:00Z
                  metricType: memory_mb_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 2560
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: primary
                resourceName: Primary MySQL Instance
            externalPayerId: external-payer-id-1234
            gcpProjectID: my-project
            highAvailability: true
            id: instance-abcd1234
            instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            last_modified_at: 2023-01-20T00:00:00Z
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            maxReplicas: "1"
            minReplicas: "1"
            network_type: PUBLIC|INTERNAL
            productTierFeatures:
              LOGS:
                auth:
                  password: px3c4d5f6g7h8i
                  username: abcd1234
                enabled: true
                websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
              METRICS:
                enabled: false
            region: us-east-1
            resourceID: r-abcd1234
            result_params:
              param1: value1
              param2: value2
            serverlessEnabled: true
            status: RUNNING
            subscriptionId: sub-abcd1234
            subscriptionLicense:
              certificateBase64: public-cert
              expirationDate: 2024-01-01T10:00:00Z
              licenseBase64: license-file
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
          items:
            $ref: "#/components/schemas/DescribeResourceInstanceResult"
          type: array
      required:
      - resourceInstances
      type: object
    ListAllSubscriptionUsersRequest:
      example:
        environmentType: DEV
        token: "4"
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        token:
          description: JWT token used to perform authorization
          example: kw
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListAllSubscriptionUsersResult:
      example:
        subscriptionUsers:
        - email: abc@gmail.com
          name: John Doe
          roleType: reader
          userId: user-abcd1234
      properties:
        subscriptionUsers:
          description: The users associated with the corresponding subscription
          example:
          - email: abc@gmail.com
            name: John Doe
            roleType: reader
            userId: user-abcd1234
          items:
            $ref: "#/components/schemas/SubscriptionUsers"
          type: array
      required:
      - subscriptionUsers
      type: object
    ListAssociatedResourcesRequest:
      example:
        id: ic-12345678
        serviceId: s-12345678
        token: "5"
      properties:
        id:
          description: ID of an Infra Config
          example: Qui ipsum fuga illum omnis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "331"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ListAssociatedResourcesResult:
      example:
        id: ic-12345678
        resourceIds:
        - r-12345678
        - r-abcdefgh
        serviceId: s-12345678
      properties:
        id:
          description: ID of an Infra Config
          example: Rerum delectus cumque natus illum ipsam.
          type: string
        resourceIds:
          description: The resources associated with the infra config
          example:
          - r-12345678
          - r-abcdefgh
          items:
            description: ID of a resource
            example: Voluptatem libero ullam officia nam non maiores.
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - id
      - resourceIds
      - serviceId
      type: object
    ListAuditEventsForInstanceRequest:
      example:
        instanceId: instance-12345678
        subscriptionId: sub-abcd1234
        token: on2
      properties:
        instanceId:
          description: The ID of the resource instance
          example: instance-12345678
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: pkl
          minLength: 1
          type: string
      required:
      - instanceId
      - token
      type: object
    ListAuditEventsForServicePlanRequest:
      example:
        productTierKey: premium
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: hf7
      properties:
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Illo quod recusandae explicabo cumque similique perspiciatis.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: "38"
          minLength: 1
          type: string
      required:
      - productTierKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    ListAuditEventsResult:
      example:
        events:
        - eventSource: "Customer, Infra or Maintenance"
          id: event-12345678
          message: instance-abcd1234 created
          orgId: org-12345678
          orgName: Acme Corporation
          resourceInstanceId: instance-abcd1234
          resourceName: Galera
          subscriptionId: sub-abcd1234
          time: 2023-01-10T00:00:00Z
          userId: user-12345678
          userName: John Doe
          workflowFailures:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
        - eventSource: "Customer, Infra or Maintenance"
          id: event-12345678
          message: instance-abcd1234 created
          orgId: org-12345678
          orgName: Acme Corporation
          resourceInstanceId: instance-abcd1234
          resourceName: Galera
          subscriptionId: sub-abcd1234
          time: 2023-01-10T00:00:00Z
          userId: user-12345678
          userName: John Doe
          workflowFailures:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
        - eventSource: "Customer, Infra or Maintenance"
          id: event-12345678
          message: instance-abcd1234 created
          orgId: org-12345678
          orgName: Acme Corporation
          resourceInstanceId: instance-abcd1234
          resourceName: Galera
          subscriptionId: sub-abcd1234
          time: 2023-01-10T00:00:00Z
          userId: user-12345678
          userName: John Doe
          workflowFailures:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
        ids:
        - event-12345678
        nextPageToken: token
      properties:
        events:
          description: The list of events
          example:
          - eventSource: "Customer, Infra or Maintenance"
            id: event-12345678
            message: instance-abcd1234 created
            orgId: org-12345678
            orgName: Acme Corporation
            resourceInstanceId: instance-abcd1234
            resourceName: Galera
            subscriptionId: sub-abcd1234
            time: 2023-01-10T00:00:00Z
            userId: user-12345678
            userName: John Doe
            workflowFailures:
            - eventTime: 2020-01-01T00:00:00Z
              message: Bootstrap failed for reason X
            - eventTime: 2020-01-01T00:01:00Z
              message: Compute failed for reason Y
          - eventSource: "Customer, Infra or Maintenance"
            id: event-12345678
            message: instance-abcd1234 created
            orgId: org-12345678
            orgName: Acme Corporation
            resourceInstanceId: instance-abcd1234
            resourceName: Galera
            subscriptionId: sub-abcd1234
            time: 2023-01-10T00:00:00Z
            userId: user-12345678
            userName: John Doe
            workflowFailures:
            - eventTime: 2020-01-01T00:00:00Z
              message: Bootstrap failed for reason X
            - eventTime: 2020-01-01T00:01:00Z
              message: Compute failed for reason Y
          items:
            $ref: "#/components/schemas/DescribeAuditEventResult"
          type: array
        ids:
          description: The list of event IDs
          example:
          - event-12345678
          items:
            description: ID of a Event
            example: Architecto corrupti et perferendis.
            type: string
          type: array
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
      required:
      - events
      - ids
      type: object
    ListAvailabilityZonesByRegionCodeRequest:
      example:
        cloudProviderName: aws
        regionCode: us-east-1
        token: k
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        regionCode:
          example: us-east-1
          type: string
        token:
          description: JWT token used to perform authorization
          example: u
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - regionCode
      - token
      type: object
    ListAvailabilityZonesByRegionCodeResult:
      example:
        ids:
        - az-12345678
        - az-87654321
        nextPageToken: next-token
      properties:
        ids:
          example:
          - az-12345678
          - az-87654321
          items:
            description: ID of an AZ
            example: Et pariatur sed.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListAvailabilityZonesRequest:
      example:
        cloudProviderName: aws
        token: afe
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        token:
          description: JWT token used to perform authorization
          example: wx
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - token
      type: object
    ListAvailabilityZonesResult:
      example:
        ids:
        - az-12345678
        - az-87654321
        nextPageToken: next-token
      properties:
        ids:
          example:
          - az-12345678
          - az-87654321
          items:
            description: ID of an AZ
            example: Autem repudiandae dolore et odit a quis.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListBYOAConfigRequest:
      example:
        cloudProviderName: aws
        token: rgy
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        token:
          description: JWT token used to perform authorization
          example: v
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - token
      type: object
    ListBYOAConfigRequest2:
      example:
        cloudProviderName: aws|azure|gcp|all
      properties:
        cloudProviderName:
          description: Cloud Provider name to filter on
          example: aws|azure|gcp|all
          type: string
      required:
      - cloudProviderName
      type: object
    ListBYOAConfigResult:
      description: List of BYOA Config IDs
      example:
        accountConfigs:
        - awsAccountID: "123456789012"
          awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          byoaInstanceIDs:
          - instance-12345678
          - instance-abcdefgh
          cloudProviderId: infra-12345678
          description: An AWS account hosting multiple dev environments
          gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
          id: ac-12345678
          name: Dev AWS account
          ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          status: READY
          statusMessage: Account is ready
        - awsAccountID: "123456789012"
          awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          byoaInstanceIDs:
          - instance-12345678
          - instance-abcdefgh
          cloudProviderId: infra-12345678
          description: An AWS account hosting multiple dev environments
          gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
          id: ac-12345678
          name: Dev AWS account
          ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
          status: READY
          statusMessage: Account is ready
        ids:
        - ac-12345678
        - ac-abcdefgh
        - ac-1234efgh
        nextPageToken: next-token
      properties:
        accountConfigs:
          description: The list of account configs
          example:
          - awsAccountID: "123456789012"
            awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
            awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
            azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            byoaInstanceIDs:
            - instance-12345678
            - instance-abcdefgh
            cloudProviderId: infra-12345678
            description: An AWS account hosting multiple dev environments
            gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
            id: ac-12345678
            name: Dev AWS account
            ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            status: READY
            statusMessage: Account is ready
          - awsAccountID: "123456789012"
            awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
            awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
            azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            byoaInstanceIDs:
            - instance-12345678
            - instance-abcdefgh
            cloudProviderId: infra-12345678
            description: An AWS account hosting multiple dev environments
            gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
            id: ac-12345678
            name: Dev AWS account
            ociBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            ociDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/oci-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            ociDomainID: ocid1.domain.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            ociTenancyID: ocid1.tenancy.oc1..aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
            status: READY
            statusMessage: Account is ready
          items:
            $ref: "#/components/schemas/DescribeAccountConfigResult"
          type: array
        ids:
          example:
          - ac-12345678
          - ac-abcdefgh
          - ac-1234efgh
          items:
            description: ID of an Account Config
            example: Consequuntur labore enim culpa aperiam quaerat et.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      type: object
    ListCloudProvidersRequest:
      example:
        productTierId: pt-12345678
        serviceId: s-12345678
        serviceModelId: sm-12345678
        token: o1
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Nostrum error.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Qui dolore cumque fugit pariatur.
          type: string
        token:
          description: JWT token used to perform authorization
          example: i
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListCloudProvidersResult:
      example:
        ids:
        - infra-12345678
        - infra-87654321
        nextPageToken: next-token
      properties:
        ids:
          example:
          - infra-12345678
          - infra-87654321
          items:
            description: ID of an CloudProvider
            example: Rerum sunt ex qui quo.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListComputeConfigsRequest:
      example:
        managed: false
        serviceId: s-12345678
        token: mo
      properties:
        managed:
          description: Is compute config managed by omnistrate
          example: false
          type: boolean
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 3a
          minLength: 1
          type: string
      required:
      - serviceId
      - token
      type: object
    ListComputeConfigsResult:
      example:
        ids:
        - cc-12345678
        - cc-abcdefgh
        - cc-1234efgh
        nextPageToken: next-token
      properties:
        ids:
          description: The list of compute config IDs
          example:
          - cc-12345678
          - cc-abcdefgh
          - cc-1234efgh
          items:
            description: ID of a Compute Config
            example: Et saepe fuga.
            type: string
          type: array
        nextPageToken:
          description: The next page token
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListComputeInstanceTypesRequest:
      example:
        cloudProviderName: aws
        serviceId: s-12345678
        token: "7"
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: w
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - serviceId
      - token
      type: object
    ListComputeInstanceTypesResult:
      example:
        nextPageToken: next-token
        types:
        - m5.xlarge
        - c5.xlarge
        - r5.xlarge
      properties:
        nextPageToken:
          description: The next page token
          example: next-token
          type: string
        types:
          description: The list of compute instance type IDs
          example:
          - m5.xlarge
          - c5.xlarge
          - r5.xlarge
          items:
            example: Temporibus quibusdam voluptate voluptatem amet dicta qui.
            type: string
          type: array
      required:
      - types
      type: object
    ListCustomDomainRequest:
      example:
        token: vug
      properties:
        token:
          description: JWT token used to perform authorization
          example: g
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListCustomDomainResult:
      description: List of custom domain IDs
      example:
        CustomDomains:
        - customDomain: mydomain.dev
          description: Description of the domain
          id: cd-12345678
          name: Dev domain
          route53Configuration:
            awsAccountID: "123456789012"
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
          status: READY
          statusMessage: Account is ready
        - customDomain: mydomain.dev
          description: Description of the domain
          id: cd-12345678
          name: Dev domain
          route53Configuration:
            awsAccountID: "123456789012"
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
          status: READY
          statusMessage: Account is ready
        ids:
        - cd-12345678
        - cd-abcdefgh
        - cd-1234efgh
        nextPageToken: next-token
      properties:
        CustomDomains:
          description: The list of custom domains
          example:
          - customDomain: mydomain.dev
            description: Description of the domain
            id: cd-12345678
            name: Dev domain
            route53Configuration:
              awsAccountID: "123456789012"
              awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
            status: READY
            statusMessage: Account is ready
          - customDomain: mydomain.dev
            description: Description of the domain
            id: cd-12345678
            name: Dev domain
            route53Configuration:
              awsAccountID: "123456789012"
              awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
            status: READY
            statusMessage: Account is ready
          - customDomain: mydomain.dev
            description: Description of the domain
            id: cd-12345678
            name: Dev domain
            route53Configuration:
              awsAccountID: "123456789012"
              awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
            status: READY
            statusMessage: Account is ready
          - customDomain: mydomain.dev
            description: Description of the domain
            id: cd-12345678
            name: Dev domain
            route53Configuration:
              awsAccountID: "123456789012"
              awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
            status: READY
            statusMessage: Account is ready
          items:
            $ref: "#/components/schemas/DescribeCustomDomainResult"
          type: array
        ids:
          example:
          - cd-12345678
          - cd-abcdefgh
          - cd-1234efgh
          items:
            description: ID of an Custom Domain
            example: Laudantium et praesentium molestiae placeat earum aut.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      type: object
    ListCustomNetworksRequest:
      example:
        cloudProviderName: aws
        cloudProviderRegion: us-east-1
        customNetworksOnly: false
        token: 4v
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        cloudProviderRegion:
          description: The region of the cloud provider that the instance is running
            in.
          example: us-east-1
          type: string
        customNetworksOnly:
          description: "Flag indicating whether to return only custom networks, or\
            \ to include default and imported networks as well"
          example: false
          type: boolean
        token:
          description: JWT token used to perform authorization
          example: 6l2
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListCustomNetworksResult:
      example:
        customNetworks:
        - cidr: 10.0.0.0/16
          cloudProviderName: aws
          cloudProviderRegion: us-east-1
          id: n-12345678
          name: Prod us-east-1
          networkDefinitionType: Custom
          networkFeaturesConfiguration:
            isPrivateLinkEnabled: true
          networkInstances:
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          owningUserId: user-12345678
          owningUserName: John Doe
          status: Ready
        - cidr: 10.0.0.0/16
          cloudProviderName: aws
          cloudProviderRegion: us-east-1
          id: n-12345678
          name: Prod us-east-1
          networkDefinitionType: Custom
          networkFeaturesConfiguration:
            isPrivateLinkEnabled: true
          networkInstances:
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          owningUserId: user-12345678
          owningUserName: John Doe
          status: Ready
        - cidr: 10.0.0.0/16
          cloudProviderName: aws
          cloudProviderRegion: us-east-1
          id: n-12345678
          name: Prod us-east-1
          networkDefinitionType: Custom
          networkFeaturesConfiguration:
            isPrivateLinkEnabled: true
          networkInstances:
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          owningUserId: user-12345678
          owningUserName: John Doe
          status: Ready
        - cidr: 10.0.0.0/16
          cloudProviderName: aws
          cloudProviderRegion: us-east-1
          id: n-12345678
          name: Prod us-east-1
          networkDefinitionType: Custom
          networkFeaturesConfiguration:
            isPrivateLinkEnabled: true
          networkInstances:
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          owningUserId: user-12345678
          owningUserName: John Doe
          status: Ready
      properties:
        customNetworks:
          description: List of custom networks
          example:
          - cidr: 10.0.0.0/16
            cloudProviderName: aws
            cloudProviderRegion: us-east-1
            id: n-12345678
            name: Prod us-east-1
            networkDefinitionType: Custom
            networkFeaturesConfiguration:
              isPrivateLinkEnabled: true
            networkInstances:
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            owningUserId: user-12345678
            owningUserName: John Doe
            status: Ready
          - cidr: 10.0.0.0/16
            cloudProviderName: aws
            cloudProviderRegion: us-east-1
            id: n-12345678
            name: Prod us-east-1
            networkDefinitionType: Custom
            networkFeaturesConfiguration:
              isPrivateLinkEnabled: true
            networkInstances:
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            owningUserId: user-12345678
            owningUserName: John Doe
            status: Ready
          - cidr: 10.0.0.0/16
            cloudProviderName: aws
            cloudProviderRegion: us-east-1
            id: n-12345678
            name: Prod us-east-1
            networkDefinitionType: Custom
            networkFeaturesConfiguration:
              isPrivateLinkEnabled: true
            networkInstances:
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            owningUserId: user-12345678
            owningUserName: John Doe
            status: Ready
          items:
            $ref: "#/components/schemas/CustomNetwork"
          type: array
      required:
      - customNetworks
      type: object
    ListDependentResourcesRequest:
      example:
        id: r-12345678
        serviceId: s-12345678
        token: s
      properties:
        id:
          description: ID of a resource
          example: Sit alias.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ygq
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ListDependentResourcesResult:
      example:
        id: r-12345678
        ids:
        - r-12345678
        - r-abcdefgh
        - r-1234abcd
        nextPageToken: next-token
        serviceId: s-12345678
      properties:
        id:
          description: ID of a resource
          example: Molestiae inventore in ea unde cumque.
          type: string
        ids:
          description: List of dependent resource IDs
          example:
          - r-12345678
          - r-abcdefgh
          - r-1234abcd
          items:
            description: ID of a resource
            example: Earum sint vero eius in ab atque.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - ids
      type: object
    ListDeploymentConfigsRequest:
      example:
        token: r
      properties:
        token:
          description: JWT token used to perform authorization
          example: 0ko
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListDeploymentConfigsResult:
      example:
        ids:
        - dc-12345678
        nextPageToken: next-token
      properties:
        ids:
          description: The deployment config IDs
          example:
          - dc-12345678
          items:
            description: ID of a Deployment Config
            example: Tempora quisquam voluptatem officia est necessitatibus.
            type: string
          type: array
        nextPageToken:
          description: The next token to use for pagination
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListEndCustomerEvents:
      example:
        environmentType: DEV
        token: a
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        token:
          description: JWT token used to perform authorization
          example: nj
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListEndCustomerEventsResult:
      example:
        events:
        - eventID: e-123456
          eventPayload:
            eventType: CustomerSignUp
            token: "123456"
          eventType: InviteUser
          orgID: o-123456
          orgName: Acme Corp
          orgURL: https://acme.com
          priority: Critical
          time: 2023-01-10T00:00:00Z
          userEmail: user@example.com
          userID: user-123456
          userName: user
        - eventID: e-123456
          eventPayload:
            eventType: CustomerSignUp
            token: "123456"
          eventType: InviteUser
          orgID: o-123456
          orgName: Acme Corp
          orgURL: https://acme.com
          priority: Critical
          time: 2023-01-10T00:00:00Z
          userEmail: user@example.com
          userID: user-123456
          userName: user
      properties:
        events:
          description: List of events
          example:
          - eventID: e-123456
            eventPayload:
              eventType: CustomerSignUp
              token: "123456"
            eventType: InviteUser
            orgID: o-123456
            orgName: Acme Corp
            orgURL: https://acme.com
            priority: Critical
            time: 2023-01-10T00:00:00Z
            userEmail: user@example.com
            userID: user-123456
            userName: user
          - eventID: e-123456
            eventPayload:
              eventType: CustomerSignUp
              token: "123456"
            eventType: InviteUser
            orgID: o-123456
            orgName: Acme Corp
            orgURL: https://acme.com
            priority: Critical
            time: 2023-01-10T00:00:00Z
            userEmail: user@example.com
            userID: user-123456
            userName: user
          - eventID: e-123456
            eventPayload:
              eventType: CustomerSignUp
              token: "123456"
            eventType: InviteUser
            orgID: o-123456
            orgName: Acme Corp
            orgURL: https://acme.com
            priority: Critical
            time: 2023-01-10T00:00:00Z
            userEmail: user@example.com
            userID: user-123456
            userName: user
          items:
            $ref: "#/components/schemas/EndCustomerEvent"
          type: array
      required:
      - events
      type: object
    ListFilesRequest:
      example:
        id: r-12345678
        productTierId: pt-12345678
        productTierVersion: "1.0"
        serviceId: s-12345678
        token: v
      properties:
        id:
          description: ID of a resource
          example: Explicabo ratione fugiat illum voluptatem et.
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Ducimus quis eum.
          type: string
        productTierVersion:
          description: Version of the product tier
          example: "1.0"
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: nr
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ListFilesResult:
      example:
        files:
        - description: A file to store the configuration for the resource
          fileId: f-12345678
          mountPath: /etc/config
          name: file.txt
          size: 1234
          type: Config
          uploadTime: 2023-01-10T00:00:00Z
          uploadedBy: user
        - description: A file to store the configuration for the resource
          fileId: f-12345678
          mountPath: /etc/config
          name: file.txt
          size: 1234
          type: Config
          uploadTime: 2023-01-10T00:00:00Z
          uploadedBy: user
        - description: A file to store the configuration for the resource
          fileId: f-12345678
          mountPath: /etc/config
          name: file.txt
          size: 1234
          type: Config
          uploadTime: 2023-01-10T00:00:00Z
          uploadedBy: user
        - description: A file to store the configuration for the resource
          fileId: f-12345678
          mountPath: /etc/config
          name: file.txt
          size: 1234
          type: Config
          uploadTime: 2023-01-10T00:00:00Z
          uploadedBy: user
      properties:
        files:
          description: List of files
          example:
          - description: A file to store the configuration for the resource
            fileId: f-12345678
            mountPath: /etc/config
            name: file.txt
            size: 1234
            type: Config
            uploadTime: 2023-01-10T00:00:00Z
            uploadedBy: user
          - description: A file to store the configuration for the resource
            fileId: f-12345678
            mountPath: /etc/config
            name: file.txt
            size: 1234
            type: Config
            uploadTime: 2023-01-10T00:00:00Z
            uploadedBy: user
          - description: A file to store the configuration for the resource
            fileId: f-12345678
            mountPath: /etc/config
            name: file.txt
            size: 1234
            type: Config
            uploadTime: 2023-01-10T00:00:00Z
            uploadedBy: user
          items:
            $ref: "#/components/schemas/FileMetadata"
          type: array
      required:
      - files
      type: object
    ListHelmPackagesRequest:
      example:
        chartName: my-chart
        token: d48
      properties:
        chartName:
          description: The chart name of the Helm package to filter by
          example: my-chart
          type: string
        token:
          description: JWT token used to perform authorization
          example: gc1
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListHelmPackagesResult:
      example:
        helmPackages:
        - chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          layeredChartValues:
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          namespace: default
          password: my-password
          username: my-user
        - chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          layeredChartValues:
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          namespace: default
          password: my-password
          username: my-user
        - chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          layeredChartValues:
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          namespace: default
          password: my-password
          username: my-user
        - chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          layeredChartValues:
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          namespace: default
          password: my-password
          username: my-user
      properties:
        helmPackages:
          description: List of Helm packages
          example:
          - chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            layeredChartValues:
            - name: my-layer
              scope:
                '{{ $sys.cloudProviderName }}': aws
              values:
                global:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                        - matchExpressions:
                          - key: omnistrate.com/managed-by
                            operator: In
                            values:
                            - omnistrate
              valuesFile:
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                path: helm/values/production.yaml
            - name: my-layer
              scope:
                '{{ $sys.cloudProviderName }}': aws
              values:
                global:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                        - matchExpressions:
                          - key: omnistrate.com/managed-by
                            operator: In
                            values:
                            - omnistrate
              valuesFile:
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                path: helm/values/production.yaml
            namespace: default
            password: my-password
            username: my-user
          - chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            layeredChartValues:
            - name: my-layer
              scope:
                '{{ $sys.cloudProviderName }}': aws
              values:
                global:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                        - matchExpressions:
                          - key: omnistrate.com/managed-by
                            operator: In
                            values:
                            - omnistrate
              valuesFile:
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                path: helm/values/production.yaml
            - name: my-layer
              scope:
                '{{ $sys.cloudProviderName }}': aws
              values:
                global:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                        - matchExpressions:
                          - key: omnistrate.com/managed-by
                            operator: In
                            values:
                            - omnistrate
              valuesFile:
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                path: helm/values/production.yaml
            namespace: default
            password: my-password
            username: my-user
          items:
            $ref: "#/components/schemas/HelmPackage"
          type: array
      type: object
    ListIdentityProviderTypesRequest:
      example:
        token: "1"
      properties:
        token:
          description: JWT token used to perform authorization
          example: "1"
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListIdentityProviderTypesResult:
      example:
        identityProviderTypes:
        - SupportCustomEndpoints: true
          SupportCustomScopes: false
          identityProviderName: Google
        - SupportCustomEndpoints: true
          SupportCustomScopes: false
          identityProviderName: Google
        - SupportCustomEndpoints: true
          SupportCustomScopes: false
          identityProviderName: Google
      properties:
        identityProviderTypes:
          description: The list of Identity Provider Types
          example:
          - SupportCustomEndpoints: true
            SupportCustomScopes: false
            identityProviderName: Google
          - SupportCustomEndpoints: true
            SupportCustomScopes: false
            identityProviderName: Google
          - SupportCustomEndpoints: true
            SupportCustomScopes: false
            identityProviderName: Google
          - SupportCustomEndpoints: true
            SupportCustomScopes: false
            identityProviderName: Google
          items:
            $ref: "#/components/schemas/DescribeIdentityProviderTypeResult"
          type: array
      required:
      - identityProviderTypes
      type: object
    ListIdentityProvidersRequest:
      example:
        token: z05
      properties:
        token:
          description: JWT token used to perform authorization
          example: p
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListIdentityProvidersResult:
      example:
        identityProviders:
        - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
          clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          clientSecret: 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
          disabled: false
          emailIdentifiers: company.com
          environmentType: production
          id: idp-12345678
          identityProviderName: Google
          loginButtonIconUrl: https://example.com/icon.png
          loginButtonText: Login with Google
          name: Google for my company
          scopes: openid email profile
          status: Ready
          tokenEndpoint: https://oauth2.googleapis.com/token
          userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
        - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
          clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          clientSecret: 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
          disabled: false
          emailIdentifiers: company.com
          environmentType: production
          id: idp-12345678
          identityProviderName: Google
          loginButtonIconUrl: https://example.com/icon.png
          loginButtonText: Login with Google
          name: Google for my company
          scopes: openid email profile
          status: Ready
          tokenEndpoint: https://oauth2.googleapis.com/token
          userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
        - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
          clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          clientSecret: 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
          disabled: false
          emailIdentifiers: company.com
          environmentType: production
          id: idp-12345678
          identityProviderName: Google
          loginButtonIconUrl: https://example.com/icon.png
          loginButtonText: Login with Google
          name: Google for my company
          scopes: openid email profile
          status: Ready
          tokenEndpoint: https://oauth2.googleapis.com/token
          userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
        - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
          clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          clientSecret: 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
          disabled: false
          emailIdentifiers: company.com
          environmentType: production
          id: idp-12345678
          identityProviderName: Google
          loginButtonIconUrl: https://example.com/icon.png
          loginButtonText: Login with Google
          name: Google for my company
          scopes: openid email profile
          status: Ready
          tokenEndpoint: https://oauth2.googleapis.com/token
          userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
      properties:
        identityProviders:
          description: The list of Identity Providers
          example:
          - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
            clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
            clientSecret: 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
            disabled: false
            emailIdentifiers: company.com
            environmentType: production
            id: idp-12345678
            identityProviderName: Google
            loginButtonIconUrl: https://example.com/icon.png
            loginButtonText: Login with Google
            name: Google for my company
            scopes: openid email profile
            status: Ready
            tokenEndpoint: https://oauth2.googleapis.com/token
            userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
          - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
            clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
            clientSecret: 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
            disabled: false
            emailIdentifiers: company.com
            environmentType: production
            id: idp-12345678
            identityProviderName: Google
            loginButtonIconUrl: https://example.com/icon.png
            loginButtonText: Login with Google
            name: Google for my company
            scopes: openid email profile
            status: Ready
            tokenEndpoint: https://oauth2.googleapis.com/token
            userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
          - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
            clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
            clientSecret: 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
            disabled: false
            emailIdentifiers: company.com
            environmentType: production
            id: idp-12345678
            identityProviderName: Google
            loginButtonIconUrl: https://example.com/icon.png
            loginButtonText: Login with Google
            name: Google for my company
            scopes: openid email profile
            status: Ready
            tokenEndpoint: https://oauth2.googleapis.com/token
            userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
          - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
            clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
            clientSecret: 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
            disabled: false
            emailIdentifiers: company.com
            environmentType: production
            id: idp-12345678
            identityProviderName: Google
            loginButtonIconUrl: https://example.com/icon.png
            loginButtonText: Login with Google
            name: Google for my company
            scopes: openid email profile
            status: Ready
            tokenEndpoint: https://oauth2.googleapis.com/token
            userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
          items:
            $ref: "#/components/schemas/DescribeIdentityProviderResult"
          type: array
      required:
      - identityProviders
      type: object
    ListImageConfigsRequest:
      example:
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        token: "5"
      properties:
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: bl
          minLength: 1
          type: string
      required:
      - serviceEnvironmentId
      - serviceId
      - token
      type: object
    ListImageConfigsResult:
      example:
        ids:
        - imgc-12345678
        - imgc-87654321
        nextPageToken: next-token
      properties:
        ids:
          description: List of image configuration IDs
          example:
          - imgc-12345678
          - imgc-87654321
          items:
            description: ID of an Image Config
            example: Suscipit enim.
            type: string
          type: array
        nextPageToken:
          description: Token to use to get the next page of results
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListImageRegistryRequest:
      example:
        token: "1"
      properties:
        token:
          description: JWT token used to perform authorization
          example: "1"
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListImageRegistryResult:
      description: List of HTTP API v2 Docker Image Registries
      example:
        ids:
        - ir-12345678
        - ir-abcdefgh
        - ir-abcd5678
        nextPageToken: next-token
      properties:
        ids:
          description: List of Image Registry IDs
          example:
          - ir-12345678
          - ir-abcdefgh
          - ir-abcd5678
          items:
            description: ID of an Image Registry
            example: Occaecati magni natus.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListInfraConfigRequest:
      example:
        managed: false
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        token: m
      properties:
        managed:
          description: Is infra config managed by omnistrate
          example: false
          type: boolean
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: o
          minLength: 1
          type: string
      required:
      - serviceEnvironmentId
      - serviceId
      - token
      type: object
    ListInfraConfigResult:
      description: List of Infra Config IDs
      example:
        ids:
        - ic-12345678
        - ic-abcdefgh
        - ic-1234efgh
        nextPageToken: next-token
      properties:
        ids:
          example:
          - ic-12345678
          - ic-abcdefgh
          - ic-1234efgh
          items:
            description: ID of an Infra Config
            example: Cum inventore aut asperiores fugiat.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListInputParametersRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Quasi commodi et velit delectus est.
        resourceId: r-12345678
        serviceId: s-12345678
        token: t
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Quasi dicta animi.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Est sed quidem sed nobis.
          type: string
        resourceId:
          description: ID of a resource
          example: Corrupti enim eum est reprehenderit ipsam.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: a5o
          minLength: 1
          type: string
      required:
      - resourceId
      - serviceId
      - token
      type: object
    ListInputParametersResult:
      example:
        ids:
        - ip-12345678
        - ip-12345679
        inputParameters:
        - defaultValue: "true"
          dependentResourceId: r-12345678
          description: Aut ex sint.
          hasOptions: true
          id: var-12345678
          isList: false
          key: "4"
          labeledOptions:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          limits:
            max: Vel voluptas.
            maxLength: Architecto assumenda et voluptas perferendis enim.
            min: Beatae voluptas mollitia.
            minLength: Nemo inventore tempora.
          modifiable: true
          name: kpb
          options:
          - "true"
          - "false"
          regex: "^[a-zA-Z0-9_-]+$"
          required: false
          resourceId: r-12345678
          serviceId: s-12345678
          tabIndex: 1
          type: Boolean|Float64|String|Resource|Secret|Password
        - defaultValue: "true"
          dependentResourceId: r-12345678
          description: Aut ex sint.
          hasOptions: true
          id: var-12345678
          isList: false
          key: "4"
          labeledOptions:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          limits:
            max: Vel voluptas.
            maxLength: Architecto assumenda et voluptas perferendis enim.
            min: Beatae voluptas mollitia.
            minLength: Nemo inventore tempora.
          modifiable: true
          name: kpb
          options:
          - "true"
          - "false"
          regex: "^[a-zA-Z0-9_-]+$"
          required: false
          resourceId: r-12345678
          serviceId: s-12345678
          tabIndex: 1
          type: Boolean|Float64|String|Resource|Secret|Password
        - defaultValue: "true"
          dependentResourceId: r-12345678
          description: Aut ex sint.
          hasOptions: true
          id: var-12345678
          isList: false
          key: "4"
          labeledOptions:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          limits:
            max: Vel voluptas.
            maxLength: Architecto assumenda et voluptas perferendis enim.
            min: Beatae voluptas mollitia.
            minLength: Nemo inventore tempora.
          modifiable: true
          name: kpb
          options:
          - "true"
          - "false"
          regex: "^[a-zA-Z0-9_-]+$"
          required: false
          resourceId: r-12345678
          serviceId: s-12345678
          tabIndex: 1
          type: Boolean|Float64|String|Resource|Secret|Password
        - defaultValue: "true"
          dependentResourceId: r-12345678
          description: Aut ex sint.
          hasOptions: true
          id: var-12345678
          isList: false
          key: "4"
          labeledOptions:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          limits:
            max: Vel voluptas.
            maxLength: Architecto assumenda et voluptas perferendis enim.
            min: Beatae voluptas mollitia.
            minLength: Nemo inventore tempora.
          modifiable: true
          name: kpb
          options:
          - "true"
          - "false"
          regex: "^[a-zA-Z0-9_-]+$"
          required: false
          resourceId: r-12345678
          serviceId: s-12345678
          tabIndex: 1
          type: Boolean|Float64|String|Resource|Secret|Password
        nextPageToken: next-token
      properties:
        ids:
          description: List of input parameter IDs
          example:
          - ip-12345678
          - ip-12345679
          items:
            description: ID of an Input Parameter
            example: Numquam laudantium.
            type: string
          type: array
        inputParameters:
          description: The input parameters
          example:
          - defaultValue: "true"
            dependentResourceId: r-12345678
            description: Aut ex sint.
            hasOptions: true
            id: var-12345678
            isList: false
            key: "4"
            labeledOptions:
              large: t3.xlarge
              medium: t3.large
              small: t3.medium
            limits:
              max: Vel voluptas.
              maxLength: Architecto assumenda et voluptas perferendis enim.
              min: Beatae voluptas mollitia.
              minLength: Nemo inventore tempora.
            modifiable: true
            name: kpb
            options:
            - "true"
            - "false"
            regex: "^[a-zA-Z0-9_-]+$"
            required: false
            resourceId: r-12345678
            serviceId: s-12345678
            tabIndex: 1
            type: Boolean|Float64|String|Resource|Secret|Password
          - defaultValue: "true"
            dependentResourceId: r-12345678
            description: Aut ex sint.
            hasOptions: true
            id: var-12345678
            isList: false
            key: "4"
            labeledOptions:
              large: t3.xlarge
              medium: t3.large
              small: t3.medium
            limits:
              max: Vel voluptas.
              maxLength: Architecto assumenda et voluptas perferendis enim.
              min: Beatae voluptas mollitia.
              minLength: Nemo inventore tempora.
            modifiable: true
            name: kpb
            options:
            - "true"
            - "false"
            regex: "^[a-zA-Z0-9_-]+$"
            required: false
            resourceId: r-12345678
            serviceId: s-12345678
            tabIndex: 1
            type: Boolean|Float64|String|Resource|Secret|Password
          - defaultValue: "true"
            dependentResourceId: r-12345678
            description: Aut ex sint.
            hasOptions: true
            id: var-12345678
            isList: false
            key: "4"
            labeledOptions:
              large: t3.xlarge
              medium: t3.large
              small: t3.medium
            limits:
              max: Vel voluptas.
              maxLength: Architecto assumenda et voluptas perferendis enim.
              min: Beatae voluptas mollitia.
              minLength: Nemo inventore tempora.
            modifiable: true
            name: kpb
            options:
            - "true"
            - "false"
            regex: "^[a-zA-Z0-9_-]+$"
            required: false
            resourceId: r-12345678
            serviceId: s-12345678
            tabIndex: 1
            type: Boolean|Float64|String|Resource|Secret|Password
          - defaultValue: "true"
            dependentResourceId: r-12345678
            description: Aut ex sint.
            hasOptions: true
            id: var-12345678
            isList: false
            key: "4"
            labeledOptions:
              large: t3.xlarge
              medium: t3.large
              small: t3.medium
            limits:
              max: Vel voluptas.
              maxLength: Architecto assumenda et voluptas perferendis enim.
              min: Beatae voluptas mollitia.
              minLength: Nemo inventore tempora.
            modifiable: true
            name: kpb
            options:
            - "true"
            - "false"
            regex: "^[a-zA-Z0-9_-]+$"
            required: false
            resourceId: r-12345678
            serviceId: s-12345678
            tabIndex: 1
            type: Boolean|Float64|String|Resource|Secret|Password
          items:
            $ref: "#/components/schemas/DescribeInputParameterResult"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListInvoicesRequest:
      example:
        billingProvider: STRIPE
        token: "1"
      properties:
        billingProvider:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        token:
          description: JWT token used to perform authorization
          example: m
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListInvoicesResult:
      example:
        invoices:
        - currency: USD
          dueDate: 2023-10-01T00:00:00Z
          invoiceDate: 2021-01-01T00:00:00.000Z
          invoiceId: in_1234568
          invoiceNumber: 2021-01-01-1234567890
          invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
          invoiceStatus: Open
          invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
          paymentTerms: Net 30
          taxAmount: 10
          totalAmount: 110
          totalAmountWithoutTax: 100
        - currency: USD
          dueDate: 2023-10-01T00:00:00Z
          invoiceDate: 2021-01-01T00:00:00.000Z
          invoiceId: in_1234568
          invoiceNumber: 2021-01-01-1234567890
          invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
          invoiceStatus: Open
          invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
          paymentTerms: Net 30
          taxAmount: 10
          totalAmount: 110
          totalAmountWithoutTax: 100
        - currency: USD
          dueDate: 2023-10-01T00:00:00Z
          invoiceDate: 2021-01-01T00:00:00.000Z
          invoiceId: in_1234568
          invoiceNumber: 2021-01-01-1234567890
          invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
          invoiceStatus: Open
          invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
          paymentTerms: Net 30
          taxAmount: 10
          totalAmount: 110
          totalAmountWithoutTax: 100
        - currency: USD
          dueDate: 2023-10-01T00:00:00Z
          invoiceDate: 2021-01-01T00:00:00.000Z
          invoiceId: in_1234568
          invoiceNumber: 2021-01-01-1234567890
          invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
          invoiceStatus: Open
          invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
          paymentTerms: Net 30
          taxAmount: 10
          totalAmount: 110
          totalAmountWithoutTax: 100
      properties:
        invoices:
          description: List of Invoices
          example:
          - currency: USD
            dueDate: 2023-10-01T00:00:00Z
            invoiceDate: 2021-01-01T00:00:00.000Z
            invoiceId: in_1234568
            invoiceNumber: 2021-01-01-1234567890
            invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
            invoiceStatus: Open
            invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
            paymentTerms: Net 30
            taxAmount: 10
            totalAmount: 110
            totalAmountWithoutTax: 100
          - currency: USD
            dueDate: 2023-10-01T00:00:00Z
            invoiceDate: 2021-01-01T00:00:00.000Z
            invoiceId: in_1234568
            invoiceNumber: 2021-01-01-1234567890
            invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
            invoiceStatus: Open
            invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
            paymentTerms: Net 30
            taxAmount: 10
            totalAmount: 110
            totalAmountWithoutTax: 100
          items:
            $ref: "#/components/schemas/Invoice"
          type: array
      type: object
    ListLimitRequest:
      example:
        family: COMPUTE_INFRA
        token: 0r
      properties:
        family:
          description: The limit family
          example: SERVICE
          type: string
        token:
          description: JWT token used to perform authorization
          example: gfx
          minLength: 1
          type: string
      required:
      - family
      - token
      type: object
    ListLimitRequest2:
      example:
        family: SERVICE
      properties:
        family:
          description: Limit family
          example: SERVICE
          type: string
      required:
      - family
      type: object
    ListLimitResult:
      example:
        keys:
        - MAX_VIRTUAL_CORES_PER_RESOURCE
        nextPageToken: next-token
      properties:
        keys:
          description: List of limit keys
          example:
          - MAX_VIRTUAL_CORES_PER_RESOURCE
          items:
            example: Itaque rerum unde in repellat.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      required:
      - keys
      type: object
    ListNetworkConfigsRequest:
      example:
        managed: false
        serviceId: s-12345678
        token: "n"
      properties:
        managed:
          description: Is network config managed by omnistrate
          example: false
          type: boolean
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: k5
          minLength: 1
          type: string
      required:
      - serviceId
      - token
      type: object
    ListNetworkConfigsResult:
      example:
        ids:
        - Odit accusamus voluptatem et.
        - Odit accusamus voluptatem et.
        nextPageToken: token
      properties:
        ids:
          description: The list of network config IDs
          example:
          - Odit accusamus voluptatem et.
          - Odit accusamus voluptatem et.
          items:
            description: ID of a Network Config
            example: Atque facilis consequatur exercitationem possimus iste est.
            type: string
          type: array
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
      required:
      - ids
      type: object
    ListOutputParametersRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Consequatur aut voluptatem et rem vitae.
        resourceId: r-12345678
        serviceId: s-12345678
        token: m6i
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Laboriosam consequatur fugiat laborum consequatur.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Excepturi voluptatem rerum.
          type: string
        resourceId:
          description: ID of a resource
          example: Neque repudiandae nam.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "6"
          minLength: 1
          type: string
      required:
      - resourceId
      - serviceId
      - token
      type: object
    ListOutputParametersResult:
      example:
        ids:
        - op-12345678
        nextPageToken: next-token
        outputParameters:
        - description: Username of the user created in the target system
          genericCommandValueProvider:
            args:
            - -s
            - http://example.com/api/username
            command: curl
            environment:
              PATH: /usr/local/bin:/usr/bin:/bin
            retryCount: 3
            shell: /bin/bash
            timeout: 30
            workingDir: /tmp
          id: op-12345678
          key: username
          kubectlValueProvider:
            command: "get secret {{ $sys.id }}-creds -o jsonpath='{.data.username}'"
            context: production
            environment:
              KUBECONFIG: /path/to/config
            namespace: default
            retryCount: 3
            timeout: 30
          name: Username
          resourceId: r-12345678
          serviceId: s-12345678
          value: johndoe
          valueRef: $var.username
          valueType: Boolean|Float64|String|Secret|Password
        - description: Username of the user created in the target system
          genericCommandValueProvider:
            args:
            - -s
            - http://example.com/api/username
            command: curl
            environment:
              PATH: /usr/local/bin:/usr/bin:/bin
            retryCount: 3
            shell: /bin/bash
            timeout: 30
            workingDir: /tmp
          id: op-12345678
          key: username
          kubectlValueProvider:
            command: "get secret {{ $sys.id }}-creds -o jsonpath='{.data.username}'"
            context: production
            environment:
              KUBECONFIG: /path/to/config
            namespace: default
            retryCount: 3
            timeout: 30
          name: Username
          resourceId: r-12345678
          serviceId: s-12345678
          value: johndoe
          valueRef: $var.username
          valueType: Boolean|Float64|String|Secret|Password
      properties:
        ids:
          description: The IDs of the output parameters
          example:
          - op-12345678
          items:
            description: ID of an Output Parameter
            example: Et id.
            type: string
          type: array
        nextPageToken:
          description: The token to use for the next page of results
          example: next-token
          type: string
        outputParameters:
          description: The output parameters
          example:
          - description: Username of the user created in the target system
            genericCommandValueProvider:
              args:
              - -s
              - http://example.com/api/username
              command: curl
              environment:
                PATH: /usr/local/bin:/usr/bin:/bin
              retryCount: 3
              shell: /bin/bash
              timeout: 30
              workingDir: /tmp
            id: op-12345678
            key: username
            kubectlValueProvider:
              command: "get secret {{ $sys.id }}-creds -o jsonpath='{.data.username}'"
              context: production
              environment:
                KUBECONFIG: /path/to/config
              namespace: default
              retryCount: 3
              timeout: 30
            name: Username
            resourceId: r-12345678
            serviceId: s-12345678
            value: johndoe
            valueRef: $var.username
            valueType: Boolean|Float64|String|Secret|Password
          - description: Username of the user created in the target system
            genericCommandValueProvider:
              args:
              - -s
              - http://example.com/api/username
              command: curl
              environment:
                PATH: /usr/local/bin:/usr/bin:/bin
              retryCount: 3
              shell: /bin/bash
              timeout: 30
              workingDir: /tmp
            id: op-12345678
            key: username
            kubectlValueProvider:
              command: "get secret {{ $sys.id }}-creds -o jsonpath='{.data.username}'"
              context: production
              environment:
                KUBECONFIG: /path/to/config
              namespace: default
              retryCount: 3
              timeout: 30
            name: Username
            resourceId: r-12345678
            serviceId: s-12345678
            value: johndoe
            valueRef: $var.username
            valueType: Boolean|Float64|String|Secret|Password
          items:
            $ref: "#/components/schemas/DescribeOutputParameterResult"
          type: array
      required:
      - ids
      type: object
    ListPipelinesRequest:
      example:
        serviceId: s-12345678
        token: 3a
      properties:
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ust
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListPipelinesResult:
      example:
        ids:
        - p-12345678
        - p-23456789
        nextPageToken: next-token
      properties:
        ids:
          description: List of pipeline IDs
          example:
          - p-12345678
          - p-23456789
          items:
            description: ID of a Pipeline
            example: Quo harum aut voluptatem et quod.
            type: string
          type: array
        nextPageToken:
          description: Next page token
          example: next-token
          type: string
      type: object
    ListProductTiersRequest:
      example:
        serviceId: s-12345678
        serviceModelId: sm-12345678
        token: "5"
      properties:
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Aut quasi perspiciatis sapiente repellendus.
          type: string
        token:
          description: JWT token used to perform authorization
          example: r6
          minLength: 1
          type: string
      required:
      - serviceId
      - serviceModelId
      - token
      type: object
    ListProductTiersResult:
      example:
        ids:
        - Beatae beatae.
        - Beatae beatae.
        - Beatae beatae.
        nextPageToken: next-token
      properties:
        ids:
          description: List of product tier IDs
          example:
          - Beatae beatae.
          - Beatae beatae.
          - Beatae beatae.
          items:
            description: ID of a Product Tier
            example: Saepe dolore animi eum natus quae.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListRegionsRequest:
      example:
        cloudProviderName: aws
        modelType: CUSTOMER_HOSTED
        productTierId: pt-12345678
        serviceId: s-12345678
        serviceModelId: sm-12345678
        token: "8"
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        modelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Pariatur quibusdam.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Earum saepe omnis laborum.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 2p1
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - token
      type: object
    ListRegionsResult:
      example:
        ids:
        - region-12345678
        - region-87654321
        nextPageToken: next-token
      properties:
        ids:
          example:
          - region-12345678
          - region-87654321
          items:
            description: ID of a Region
            example: Sunt facilis.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListResourceCapabilitiesRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Perspiciatis veritatis.
        id: r-12345678
        serviceId: s-12345678
        token: uo
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: In nihil quibusdam et id accusantium natus.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Eius assumenda qui porro quasi.
          type: string
        id:
          description: ID of a resource
          example: Enim dolorem repudiandae.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: j
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ListResourceCapabilitiesResponse:
      example:
        capabilities:
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
      properties:
        capabilities:
          description: The configurationParameters to enable capabilities for the
            resource
          example:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          items:
            $ref: "#/components/schemas/ResourceCapability"
          type: array
      type: object
    ListResourceInstanceSnapshotsRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: wb0
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service key
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Sed aut suscipit qui facere cupiditate delectus.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: m
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    ListResourceInstanceSnapshotsResult:
      example:
        snapshots:
        - completeTime: 2021-09-01T00:00:00Z
          createdTime: 2021-09-01T00:00:00Z
          encrypted: true
          progress: 100
          region: us-east-1
          snapshotId: instance-ss-12345678
          snapshotType: ManualSnapshot
          status: completed
      properties:
        snapshots:
          description: The instance snapshots
          example:
          - completeTime: 2021-09-01T00:00:00Z
            createdTime: 2021-09-01T00:00:00Z
            encrypted: true
            progress: 100
            region: us-east-1
            snapshotId: instance-ss-12345678
            snapshotType: ManualSnapshot
            status: completed
          items:
            $ref: "#/components/schemas/InstanceSnapshot"
          type: array
      type: object
    ListResourceInstancesRequest:
      example:
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: 4f
      properties:
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service key
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Esse eaque rerum voluptate.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: "8"
          minLength: 1
          type: string
      required:
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    ListResourceInstancesResult:
      example:
        ids:
        - instance-abcd1234
        - instance-abcd1235
        nextPageToken: next-token
      properties:
        ids:
          description: The instance IDs
          example:
          - instance-abcd1234
          - instance-abcd1235
          items:
            example: Illo fuga porro aperiam assumenda.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListResourcesRequest:
      example:
        ProductTierVersion: Qui et sed aut.
        managed: false
        productTierId: pt-12345678
        serviceId: si-12345678
        token: "79"
      properties:
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Beatae quia.
          type: string
        managed:
          description: Is resource managed by omnistrate
          example: false
          type: boolean
        productTierId:
          description: ID of a Product Tier
          example: Impedit necessitatibus nihil.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: s
          minLength: 1
          type: string
      required:
      - productTierId
      - serviceId
      - token
      type: object
    ListResourcesResult:
      example:
        ids:
        - r-12345678
        - r-abcdefgh
        - r-1234abcd
        nextPageToken: next-token
        resources:
        - actionHooks:
          - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
            scope: CLUSTER
            type: INIT
          additionalSecurityContext:
            AddCapabilities:
            - CAP_NET_ADMIN
            - CAP_NET_RAW
            DropCapabilities:
            - CAP_NET_ADMIN
            - CAP_NET_RAW
            SupplementalGroupIDs:
            - 1001
            - 999
          agentConfiguration:
            codeInterpreter:
              allowedPackages:
              - pandas
              - numpy
              - matplotlib
              enabled: true
              provider: agentcore
              timeout: 60
            dockerfile: Dockerfile
            evaluations:
            - metrics:
              - relevance
              - helpfulness
              name: response-quality
              schedule: every 6 hours
            memory:
              enabled: true
            monitoring:
              enabled: true
            vectorStore:
              enabled: true
          backupConfiguration:
            backupPeriodInHours: 24
            backupRetentionInDays: 7
          blobStorageConfiguration:
            GCSConfiguration: {}
            S3Configuration: {}
          capabilities:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          containerImagesRegistryCopyConfiguration:
            images:
            - imageName: postgres
              imageTag: "16"
            - imageName: postgres
              imageTag: "16"
            pullSource:
              credentials:
                password: my-password
                username: my-user
              registryURL: https://my-registry.com
              repositoryName: library
            pushTarget:
              credentials:
                password: my-password
                username: my-user
              registryURL: https://my-registry.com
              repositoryName: library
          customLabels:
            key: value
          customSysCTLs:
            net.ipv4.tcp_syncookies: "1"
          customULimits:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          dependencies:
          - parameterMap:
              clusterId: writerId
              clusterOrg: userDatabase
            resourceId: r-12345678
          - parameterMap:
              clusterId: readerId
              clusterOrg: userDatabase
            resourceId: r-abcdef12
          description: An resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          disable: "{{ $var.disableExtraComponents }}"
          environmentVariables:
          - name: MYSQL_ROOT_PASSWORD
            value: password
          fileSystemConfiguration:
            EFSFileSystemConfiguration:
              PerformanceMode: generalPurpose|maxIO
              ProvisionedThroughputInMibps: 125
              ThroughputMode: provisioned|bursting|elastic
            GCPFilestoreConfiguration:
              Capacity: 1024GiB
              MaxIopsPerTb: 3000
              Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
          helmChartConfiguration:
            autoDiscoverImagesTag: omnistrate/images
            chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            endpointConfiguration:
              admin:
                host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                networkingType: PRIVATE
                ports:
                - 8080
                - 8081
                primary: false
              cluster:
                host: https://my-endpoint.com
                networkingType: PUBLIC
                ports:
                - 8080
                - 8081
                primary: true
            layeredChartValues:
            - values:
                global:
                  image:
                    tag: v1.0.0
                  replicaCount: 1
                  resources:
                    requests:
                      cpu: 100m
                      memory: 128Mi
            - scope:
                '{{ $sys.cloudProviderName }}': aws
              valuesFile:
                gitConfiguration:
                  accessToken: ghp_...
                  commitSHA: a1b2c3d4e5f6
                  path: aws/production.yaml
                  referenceName: refs/heads/main
                  repositoryUrl: https://github.com/org/helm-values
            namespace: postgres
            password: my-password
            releaseName: my-release
            runtimeConfiguration:
              disableHooks: true
              recreate: true
              resetThenReuseValues: true
              resetValues: true
              reuseValues: true
              skipCRDs: true
              timeoutNanos: 1000000000
              upgradeCRDs: true
              wait: true
              waitForJobs: true
            username: my-user
          id: r-12345678
          imageConfigId: imgc-12345678
          infraConfigId: ic-12345678
          internal: true
          isDeprecated: false
          jobConfig:
            activeDeadlineSeconds: 300
            backoffLimit: 5
          key: galera
          kustomizeConfiguration:
            disableReconciliation: false
            endpointConfiguration:
              admin:
                host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                networkingType: PRIVATE
                ports:
                - 8080
                - 8081
                primary: false
              cluster:
                host: https://my-endpoint.com
                networkingType: PUBLIC
                ports:
                - 8080
                - 8081
                primary: true
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            helmChartDependencies:
            - chartName: cert-manager
              chartVersion: v1.5.3
            - chartName: nginx-ingress
              chartVersion: v0.48.1
            - chartName: external-dns
              chartVersion: v0.7.0
            - chartName: cnpg-operator
              chartVersion: v0.23.1
            kustomizePath: /kustomize
          l4LoadBalancerConfiguration:
            ingressPortConfiguration:
            - associatedResourceIDs:
              - r-12345678
              - r-abcdef12
              backendPort: 8080
              ingressPort: 1234
            - associatedResourceIDs:
              - r-12345678
              - r-abcdef12
              backendPort: 8081
              ingressPort: 5678
            - associatedResourceIDs:
              - r-vwxybz12
              - r-poij122v
              backendPort: 8082
              ingressPort: 9012
          l7LoadBalancerConfiguration:
            paths:
            - associatedResourceID: r-12345678
              path: /path
              port: 8080
          name: Galera
          onPremTerraformConfigurations:
            OpenShift:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          operatorCRDConfiguration:
            disableReconciliation: false
            endpointConfiguration:
              admin:
                host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                networkingType: PRIVATE
                ports:
                - 8080
                - 8081
                primary: false
              cluster:
                host: https://my-endpoint.com
                networkingType: PUBLIC
                ports:
                - 8080
                - 8081
                primary: true
            helmChartDependencies:
            - chartName: cert-manager
              chartVersion: v1.5.3
            - chartName: nginx-ingress
              chartVersion: v0.48.1
            - chartName: external-dns
              chartVersion: v0.7.0
            - chartName: cnpg-operator
              chartVersion: v0.23.1
            outputParameters:
              expiresAt: $out.status.notAfter
              issuerName: letsencrypt-prod
            readinessConditions:
              $out.status.conditions[?(@.type=='Ready')].status: true
            supplementalFiles:
            - |
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: letsencrypt-prod
              spec:
                acme:
                  server: https://acme-v02.api.letsencrypt.org/directory
            - |-
              apiVersion: ingress.nginx.io/v1
              kind: IngressClass
              metadata:
                name: nginx
              spec:
                controller: nginx.org/ingress-controller
            template: |-
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: letsencrypt-prod
              spec:
                acme:
                  server: https://acme-v02.api.letsencrypt.org/directory
                  email: test@example.com
                  privateKeySecretRef:
                    name: letsencrypt-prod
                  solvers:
                  - http01:
                      ingress:
                        class: nginx
          productTierId: pt-12345678
          proxyType: PortsBasedProxy
          resourceType: Generic
          serviceId: s-12345678
          terraformConfigurations:
            aws:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
        - actionHooks:
          - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
            scope: CLUSTER
            type: INIT
          additionalSecurityContext:
            AddCapabilities:
            - CAP_NET_ADMIN
            - CAP_NET_RAW
            DropCapabilities:
            - CAP_NET_ADMIN
            - CAP_NET_RAW
            SupplementalGroupIDs:
            - 1001
            - 999
          agentConfiguration:
            codeInterpreter:
              allowedPackages:
              - pandas
              - numpy
              - matplotlib
              enabled: true
              provider: agentcore
              timeout: 60
            dockerfile: Dockerfile
            evaluations:
            - metrics:
              - relevance
              - helpfulness
              name: response-quality
              schedule: every 6 hours
            memory:
              enabled: true
            monitoring:
              enabled: true
            vectorStore:
              enabled: true
          backupConfiguration:
            backupPeriodInHours: 24
            backupRetentionInDays: 7
          blobStorageConfiguration:
            GCSConfiguration: {}
            S3Configuration: {}
          capabilities:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          containerImagesRegistryCopyConfiguration:
            images:
            - imageName: postgres
              imageTag: "16"
            - imageName: postgres
              imageTag: "16"
            pullSource:
              credentials:
                password: my-password
                username: my-user
              registryURL: https://my-registry.com
              repositoryName: library
            pushTarget:
              credentials:
                password: my-password
                username: my-user
              registryURL: https://my-registry.com
              repositoryName: library
          customLabels:
            key: value
          customSysCTLs:
            net.ipv4.tcp_syncookies: "1"
          customULimits:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          dependencies:
          - parameterMap:
              clusterId: writerId
              clusterOrg: userDatabase
            resourceId: r-12345678
          - parameterMap:
              clusterId: readerId
              clusterOrg: userDatabase
            resourceId: r-abcdef12
          description: An resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          disable: "{{ $var.disableExtraComponents }}"
          environmentVariables:
          - name: MYSQL_ROOT_PASSWORD
            value: password
          fileSystemConfiguration:
            EFSFileSystemConfiguration:
              PerformanceMode: generalPurpose|maxIO
              ProvisionedThroughputInMibps: 125
              ThroughputMode: provisioned|bursting|elastic
            GCPFilestoreConfiguration:
              Capacity: 1024GiB
              MaxIopsPerTb: 3000
              Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
          helmChartConfiguration:
            autoDiscoverImagesTag: omnistrate/images
            chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            endpointConfiguration:
              admin:
                host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                networkingType: PRIVATE
                ports:
                - 8080
                - 8081
                primary: false
              cluster:
                host: https://my-endpoint.com
                networkingType: PUBLIC
                ports:
                - 8080
                - 8081
                primary: true
            layeredChartValues:
            - values:
                global:
                  image:
                    tag: v1.0.0
                  replicaCount: 1
                  resources:
                    requests:
                      cpu: 100m
                      memory: 128Mi
            - scope:
                '{{ $sys.cloudProviderName }}': aws
              valuesFile:
                gitConfiguration:
                  accessToken: ghp_...
                  commitSHA: a1b2c3d4e5f6
                  path: aws/production.yaml
                  referenceName: refs/heads/main
                  repositoryUrl: https://github.com/org/helm-values
            namespace: postgres
            password: my-password
            releaseName: my-release
            runtimeConfiguration:
              disableHooks: true
              recreate: true
              resetThenReuseValues: true
              resetValues: true
              reuseValues: true
              skipCRDs: true
              timeoutNanos: 1000000000
              upgradeCRDs: true
              wait: true
              waitForJobs: true
            username: my-user
          id: r-12345678
          imageConfigId: imgc-12345678
          infraConfigId: ic-12345678
          internal: true
          isDeprecated: false
          jobConfig:
            activeDeadlineSeconds: 300
            backoffLimit: 5
          key: galera
          kustomizeConfiguration:
            disableReconciliation: false
            endpointConfiguration:
              admin:
                host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                networkingType: PRIVATE
                ports:
                - 8080
                - 8081
                primary: false
              cluster:
                host: https://my-endpoint.com
                networkingType: PUBLIC
                ports:
                - 8080
                - 8081
                primary: true
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            helmChartDependencies:
            - chartName: cert-manager
              chartVersion: v1.5.3
            - chartName: nginx-ingress
              chartVersion: v0.48.1
            - chartName: external-dns
              chartVersion: v0.7.0
            - chartName: cnpg-operator
              chartVersion: v0.23.1
            kustomizePath: /kustomize
          l4LoadBalancerConfiguration:
            ingressPortConfiguration:
            - associatedResourceIDs:
              - r-12345678
              - r-abcdef12
              backendPort: 8080
              ingressPort: 1234
            - associatedResourceIDs:
              - r-12345678
              - r-abcdef12
              backendPort: 8081
              ingressPort: 5678
            - associatedResourceIDs:
              - r-vwxybz12
              - r-poij122v
              backendPort: 8082
              ingressPort: 9012
          l7LoadBalancerConfiguration:
            paths:
            - associatedResourceID: r-12345678
              path: /path
              port: 8080
          name: Galera
          onPremTerraformConfigurations:
            OpenShift:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          operatorCRDConfiguration:
            disableReconciliation: false
            endpointConfiguration:
              admin:
                host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                networkingType: PRIVATE
                ports:
                - 8080
                - 8081
                primary: false
              cluster:
                host: https://my-endpoint.com
                networkingType: PUBLIC
                ports:
                - 8080
                - 8081
                primary: true
            helmChartDependencies:
            - chartName: cert-manager
              chartVersion: v1.5.3
            - chartName: nginx-ingress
              chartVersion: v0.48.1
            - chartName: external-dns
              chartVersion: v0.7.0
            - chartName: cnpg-operator
              chartVersion: v0.23.1
            outputParameters:
              expiresAt: $out.status.notAfter
              issuerName: letsencrypt-prod
            readinessConditions:
              $out.status.conditions[?(@.type=='Ready')].status: true
            supplementalFiles:
            - |
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: letsencrypt-prod
              spec:
                acme:
                  server: https://acme-v02.api.letsencrypt.org/directory
            - |-
              apiVersion: ingress.nginx.io/v1
              kind: IngressClass
              metadata:
                name: nginx
              spec:
                controller: nginx.org/ingress-controller
            template: |-
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: letsencrypt-prod
              spec:
                acme:
                  server: https://acme-v02.api.letsencrypt.org/directory
                  email: test@example.com
                  privateKeySecretRef:
                    name: letsencrypt-prod
                  solvers:
                  - http01:
                      ingress:
                        class: nginx
          productTierId: pt-12345678
          proxyType: PortsBasedProxy
          resourceType: Generic
          serviceId: s-12345678
          terraformConfigurations:
            aws:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
        - actionHooks:
          - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
            scope: CLUSTER
            type: INIT
          additionalSecurityContext:
            AddCapabilities:
            - CAP_NET_ADMIN
            - CAP_NET_RAW
            DropCapabilities:
            - CAP_NET_ADMIN
            - CAP_NET_RAW
            SupplementalGroupIDs:
            - 1001
            - 999
          agentConfiguration:
            codeInterpreter:
              allowedPackages:
              - pandas
              - numpy
              - matplotlib
              enabled: true
              provider: agentcore
              timeout: 60
            dockerfile: Dockerfile
            evaluations:
            - metrics:
              - relevance
              - helpfulness
              name: response-quality
              schedule: every 6 hours
            memory:
              enabled: true
            monitoring:
              enabled: true
            vectorStore:
              enabled: true
          backupConfiguration:
            backupPeriodInHours: 24
            backupRetentionInDays: 7
          blobStorageConfiguration:
            GCSConfiguration: {}
            S3Configuration: {}
          capabilities:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          containerImagesRegistryCopyConfiguration:
            images:
            - imageName: postgres
              imageTag: "16"
            - imageName: postgres
              imageTag: "16"
            pullSource:
              credentials:
                password: my-password
                username: my-user
              registryURL: https://my-registry.com
              repositoryName: library
            pushTarget:
              credentials:
                password: my-password
                username: my-user
              registryURL: https://my-registry.com
              repositoryName: library
          customLabels:
            key: value
          customSysCTLs:
            net.ipv4.tcp_syncookies: "1"
          customULimits:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          dependencies:
          - parameterMap:
              clusterId: writerId
              clusterOrg: userDatabase
            resourceId: r-12345678
          - parameterMap:
              clusterId: readerId
              clusterOrg: userDatabase
            resourceId: r-abcdef12
          description: An resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          disable: "{{ $var.disableExtraComponents }}"
          environmentVariables:
          - name: MYSQL_ROOT_PASSWORD
            value: password
          fileSystemConfiguration:
            EFSFileSystemConfiguration:
              PerformanceMode: generalPurpose|maxIO
              ProvisionedThroughputInMibps: 125
              ThroughputMode: provisioned|bursting|elastic
            GCPFilestoreConfiguration:
              Capacity: 1024GiB
              MaxIopsPerTb: 3000
              Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
          helmChartConfiguration:
            autoDiscoverImagesTag: omnistrate/images
            chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            endpointConfiguration:
              admin:
                host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                networkingType: PRIVATE
                ports:
                - 8080
                - 8081
                primary: false
              cluster:
                host: https://my-endpoint.com
                networkingType: PUBLIC
                ports:
                - 8080
                - 8081
                primary: true
            layeredChartValues:
            - values:
                global:
                  image:
                    tag: v1.0.0
                  replicaCount: 1
                  resources:
                    requests:
                      cpu: 100m
                      memory: 128Mi
            - scope:
                '{{ $sys.cloudProviderName }}': aws
              valuesFile:
                gitConfiguration:
                  accessToken: ghp_...
                  commitSHA: a1b2c3d4e5f6
                  path: aws/production.yaml
                  referenceName: refs/heads/main
                  repositoryUrl: https://github.com/org/helm-values
            namespace: postgres
            password: my-password
            releaseName: my-release
            runtimeConfiguration:
              disableHooks: true
              recreate: true
              resetThenReuseValues: true
              resetValues: true
              reuseValues: true
              skipCRDs: true
              timeoutNanos: 1000000000
              upgradeCRDs: true
              wait: true
              waitForJobs: true
            username: my-user
          id: r-12345678
          imageConfigId: imgc-12345678
          infraConfigId: ic-12345678
          internal: true
          isDeprecated: false
          jobConfig:
            activeDeadlineSeconds: 300
            backoffLimit: 5
          key: galera
          kustomizeConfiguration:
            disableReconciliation: false
            endpointConfiguration:
              admin:
                host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                networkingType: PRIVATE
                ports:
                - 8080
                - 8081
                primary: false
              cluster:
                host: https://my-endpoint.com
                networkingType: PUBLIC
                ports:
                - 8080
                - 8081
                primary: true
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            helmChartDependencies:
            - chartName: cert-manager
              chartVersion: v1.5.3
            - chartName: nginx-ingress
              chartVersion: v0.48.1
            - chartName: external-dns
              chartVersion: v0.7.0
            - chartName: cnpg-operator
              chartVersion: v0.23.1
            kustomizePath: /kustomize
          l4LoadBalancerConfiguration:
            ingressPortConfiguration:
            - associatedResourceIDs:
              - r-12345678
              - r-abcdef12
              backendPort: 8080
              ingressPort: 1234
            - associatedResourceIDs:
              - r-12345678
              - r-abcdef12
              backendPort: 8081
              ingressPort: 5678
            - associatedResourceIDs:
              - r-vwxybz12
              - r-poij122v
              backendPort: 8082
              ingressPort: 9012
          l7LoadBalancerConfiguration:
            paths:
            - associatedResourceID: r-12345678
              path: /path
              port: 8080
          name: Galera
          onPremTerraformConfigurations:
            OpenShift:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          operatorCRDConfiguration:
            disableReconciliation: false
            endpointConfiguration:
              admin:
                host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                networkingType: PRIVATE
                ports:
                - 8080
                - 8081
                primary: false
              cluster:
                host: https://my-endpoint.com
                networkingType: PUBLIC
                ports:
                - 8080
                - 8081
                primary: true
            helmChartDependencies:
            - chartName: cert-manager
              chartVersion: v1.5.3
            - chartName: nginx-ingress
              chartVersion: v0.48.1
            - chartName: external-dns
              chartVersion: v0.7.0
            - chartName: cnpg-operator
              chartVersion: v0.23.1
            outputParameters:
              expiresAt: $out.status.notAfter
              issuerName: letsencrypt-prod
            readinessConditions:
              $out.status.conditions[?(@.type=='Ready')].status: true
            supplementalFiles:
            - |
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: letsencrypt-prod
              spec:
                acme:
                  server: https://acme-v02.api.letsencrypt.org/directory
            - |-
              apiVersion: ingress.nginx.io/v1
              kind: IngressClass
              metadata:
                name: nginx
              spec:
                controller: nginx.org/ingress-controller
            template: |-
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: letsencrypt-prod
              spec:
                acme:
                  server: https://acme-v02.api.letsencrypt.org/directory
                  email: test@example.com
                  privateKeySecretRef:
                    name: letsencrypt-prod
                  solvers:
                  - http01:
                      ingress:
                        class: nginx
          productTierId: pt-12345678
          proxyType: PortsBasedProxy
          resourceType: Generic
          serviceId: s-12345678
          terraformConfigurations:
            aws:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
        - actionHooks:
          - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
            scope: CLUSTER
            type: INIT
          additionalSecurityContext:
            AddCapabilities:
            - CAP_NET_ADMIN
            - CAP_NET_RAW
            DropCapabilities:
            - CAP_NET_ADMIN
            - CAP_NET_RAW
            SupplementalGroupIDs:
            - 1001
            - 999
          agentConfiguration:
            codeInterpreter:
              allowedPackages:
              - pandas
              - numpy
              - matplotlib
              enabled: true
              provider: agentcore
              timeout: 60
            dockerfile: Dockerfile
            evaluations:
            - metrics:
              - relevance
              - helpfulness
              name: response-quality
              schedule: every 6 hours
            memory:
              enabled: true
            monitoring:
              enabled: true
            vectorStore:
              enabled: true
          backupConfiguration:
            backupPeriodInHours: 24
            backupRetentionInDays: 7
          blobStorageConfiguration:
            GCSConfiguration: {}
            S3Configuration: {}
          capabilities:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          containerImagesRegistryCopyConfiguration:
            images:
            - imageName: postgres
              imageTag: "16"
            - imageName: postgres
              imageTag: "16"
            pullSource:
              credentials:
                password: my-password
                username: my-user
              registryURL: https://my-registry.com
              repositoryName: library
            pushTarget:
              credentials:
                password: my-password
                username: my-user
              registryURL: https://my-registry.com
              repositoryName: library
          customLabels:
            key: value
          customSysCTLs:
            net.ipv4.tcp_syncookies: "1"
          customULimits:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          dependencies:
          - parameterMap:
              clusterId: writerId
              clusterOrg: userDatabase
            resourceId: r-12345678
          - parameterMap:
              clusterId: readerId
              clusterOrg: userDatabase
            resourceId: r-abcdef12
          description: An resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          disable: "{{ $var.disableExtraComponents }}"
          environmentVariables:
          - name: MYSQL_ROOT_PASSWORD
            value: password
          fileSystemConfiguration:
            EFSFileSystemConfiguration:
              PerformanceMode: generalPurpose|maxIO
              ProvisionedThroughputInMibps: 125
              ThroughputMode: provisioned|bursting|elastic
            GCPFilestoreConfiguration:
              Capacity: 1024GiB
              MaxIopsPerTb: 3000
              Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
          helmChartConfiguration:
            autoDiscoverImagesTag: omnistrate/images
            chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            endpointConfiguration:
              admin:
                host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                networkingType: PRIVATE
                ports:
                - 8080
                - 8081
                primary: false
              cluster:
                host: https://my-endpoint.com
                networkingType: PUBLIC
                ports:
                - 8080
                - 8081
                primary: true
            layeredChartValues:
            - values:
                global:
                  image:
                    tag: v1.0.0
                  replicaCount: 1
                  resources:
                    requests:
                      cpu: 100m
                      memory: 128Mi
            - scope:
                '{{ $sys.cloudProviderName }}': aws
              valuesFile:
                gitConfiguration:
                  accessToken: ghp_...
                  commitSHA: a1b2c3d4e5f6
                  path: aws/production.yaml
                  referenceName: refs/heads/main
                  repositoryUrl: https://github.com/org/helm-values
            namespace: postgres
            password: my-password
            releaseName: my-release
            runtimeConfiguration:
              disableHooks: true
              recreate: true
              resetThenReuseValues: true
              resetValues: true
              reuseValues: true
              skipCRDs: true
              timeoutNanos: 1000000000
              upgradeCRDs: true
              wait: true
              waitForJobs: true
            username: my-user
          id: r-12345678
          imageConfigId: imgc-12345678
          infraConfigId: ic-12345678
          internal: true
          isDeprecated: false
          jobConfig:
            activeDeadlineSeconds: 300
            backoffLimit: 5
          key: galera
          kustomizeConfiguration:
            disableReconciliation: false
            endpointConfiguration:
              admin:
                host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                networkingType: PRIVATE
                ports:
                - 8080
                - 8081
                primary: false
              cluster:
                host: https://my-endpoint.com
                networkingType: PUBLIC
                ports:
                - 8080
                - 8081
                primary: true
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            helmChartDependencies:
            - chartName: cert-manager
              chartVersion: v1.5.3
            - chartName: nginx-ingress
              chartVersion: v0.48.1
            - chartName: external-dns
              chartVersion: v0.7.0
            - chartName: cnpg-operator
              chartVersion: v0.23.1
            kustomizePath: /kustomize
          l4LoadBalancerConfiguration:
            ingressPortConfiguration:
            - associatedResourceIDs:
              - r-12345678
              - r-abcdef12
              backendPort: 8080
              ingressPort: 1234
            - associatedResourceIDs:
              - r-12345678
              - r-abcdef12
              backendPort: 8081
              ingressPort: 5678
            - associatedResourceIDs:
              - r-vwxybz12
              - r-poij122v
              backendPort: 8082
              ingressPort: 9012
          l7LoadBalancerConfiguration:
            paths:
            - associatedResourceID: r-12345678
              path: /path
              port: 8080
          name: Galera
          onPremTerraformConfigurations:
            OpenShift:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          operatorCRDConfiguration:
            disableReconciliation: false
            endpointConfiguration:
              admin:
                host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                networkingType: PRIVATE
                ports:
                - 8080
                - 8081
                primary: false
              cluster:
                host: https://my-endpoint.com
                networkingType: PUBLIC
                ports:
                - 8080
                - 8081
                primary: true
            helmChartDependencies:
            - chartName: cert-manager
              chartVersion: v1.5.3
            - chartName: nginx-ingress
              chartVersion: v0.48.1
            - chartName: external-dns
              chartVersion: v0.7.0
            - chartName: cnpg-operator
              chartVersion: v0.23.1
            outputParameters:
              expiresAt: $out.status.notAfter
              issuerName: letsencrypt-prod
            readinessConditions:
              $out.status.conditions[?(@.type=='Ready')].status: true
            supplementalFiles:
            - |
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: letsencrypt-prod
              spec:
                acme:
                  server: https://acme-v02.api.letsencrypt.org/directory
            - |-
              apiVersion: ingress.nginx.io/v1
              kind: IngressClass
              metadata:
                name: nginx
              spec:
                controller: nginx.org/ingress-controller
            template: |-
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: letsencrypt-prod
              spec:
                acme:
                  server: https://acme-v02.api.letsencrypt.org/directory
                  email: test@example.com
                  privateKeySecretRef:
                    name: letsencrypt-prod
                  solvers:
                  - http01:
                      ingress:
                        class: nginx
          productTierId: pt-12345678
          proxyType: PortsBasedProxy
          resourceType: Generic
          serviceId: s-12345678
          terraformConfigurations:
            aws:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
      properties:
        ids:
          description: List of resource IDs
          example:
          - r-12345678
          - r-abcdefgh
          - r-1234abcd
          items:
            description: ID of a resource
            example: Vel ipsam ratione.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
        resources:
          description: List of resources
          example:
          - actionHooks:
            - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
              scope: CLUSTER
              type: INIT
            additionalSecurityContext:
              AddCapabilities:
              - CAP_NET_ADMIN
              - CAP_NET_RAW
              DropCapabilities:
              - CAP_NET_ADMIN
              - CAP_NET_RAW
              SupplementalGroupIDs:
              - 1001
              - 999
            agentConfiguration:
              codeInterpreter:
                allowedPackages:
                - pandas
                - numpy
                - matplotlib
                enabled: true
                provider: agentcore
                timeout: 60
              dockerfile: Dockerfile
              evaluations:
              - metrics:
                - relevance
                - helpfulness
                name: response-quality
                schedule: every 6 hours
              memory:
                enabled: true
              monitoring:
                enabled: true
              vectorStore:
                enabled: true
            backupConfiguration:
              backupPeriodInHours: 24
              backupRetentionInDays: 7
            blobStorageConfiguration:
              GCSConfiguration: {}
              S3Configuration: {}
            capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            containerImagesRegistryCopyConfiguration:
              images:
              - imageName: postgres
                imageTag: "16"
              - imageName: postgres
                imageTag: "16"
              pullSource:
                credentials:
                  password: my-password
                  username: my-user
                registryURL: https://my-registry.com
                repositoryName: library
              pushTarget:
                credentials:
                  password: my-password
                  username: my-user
                registryURL: https://my-registry.com
                repositoryName: library
            customLabels:
              key: value
            customSysCTLs:
              net.ipv4.tcp_syncookies: "1"
            customULimits:
            - ULimitsName: NoProc
              ULimitsType: Soft
              ULimitsValue: 1000
            - ULimitsName: NoFile
              ULimitsType: Hard
              ULimitsValue: 2048
            dependencies:
            - parameterMap:
                clusterId: writerId
                clusterOrg: userDatabase
              resourceId: r-12345678
            - parameterMap:
                clusterId: readerId
                clusterOrg: userDatabase
              resourceId: r-abcdef12
            description: An resource to manage a hosted public SaaS offering of a
              multi-writer MySQL service
            disable: "{{ $var.disableExtraComponents }}"
            environmentVariables:
            - name: MYSQL_ROOT_PASSWORD
              value: password
            fileSystemConfiguration:
              EFSFileSystemConfiguration:
                PerformanceMode: generalPurpose|maxIO
                ProvisionedThroughputInMibps: 125
                ThroughputMode: provisioned|bursting|elastic
              GCPFilestoreConfiguration:
                Capacity: 1024GiB
                MaxIopsPerTb: 3000
                Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
            helmChartConfiguration:
              autoDiscoverImagesTag: omnistrate/images
              chartName: my-chart
              chartRepoName: my-repo
              chartRepoUrl: https://my-repo.com
              chartValues:
                key1: value1
                key2: 3
                key3:
                  key4: value4
              chartVersion: 1.0.0
              endpointConfiguration:
                admin:
                  host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                  networkingType: PRIVATE
                  ports:
                  - 8080
                  - 8081
                  primary: false
                cluster:
                  host: https://my-endpoint.com
                  networkingType: PUBLIC
                  ports:
                  - 8080
                  - 8081
                  primary: true
              layeredChartValues:
              - values:
                  global:
                    image:
                      tag: v1.0.0
                    replicaCount: 1
                    resources:
                      requests:
                        cpu: 100m
                        memory: 128Mi
              - scope:
                  '{{ $sys.cloudProviderName }}': aws
                valuesFile:
                  gitConfiguration:
                    accessToken: ghp_...
                    commitSHA: a1b2c3d4e5f6
                    path: aws/production.yaml
                    referenceName: refs/heads/main
                    repositoryUrl: https://github.com/org/helm-values
              namespace: postgres
              password: my-password
              releaseName: my-release
              runtimeConfiguration:
                disableHooks: true
                recreate: true
                resetThenReuseValues: true
                resetValues: true
                reuseValues: true
                skipCRDs: true
                timeoutNanos: 1000000000
                upgradeCRDs: true
                wait: true
                waitForJobs: true
              username: my-user
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            internal: true
            isDeprecated: false
            jobConfig:
              activeDeadlineSeconds: 300
              backoffLimit: 5
            key: galera
            kustomizeConfiguration:
              disableReconciliation: false
              endpointConfiguration:
                admin:
                  host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                  networkingType: PRIVATE
                  ports:
                  - 8080
                  - 8081
                  primary: false
                cluster:
                  host: https://my-endpoint.com
                  networkingType: PUBLIC
                  ports:
                  - 8080
                  - 8081
                  primary: true
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              helmChartDependencies:
              - chartName: cert-manager
                chartVersion: v1.5.3
              - chartName: nginx-ingress
                chartVersion: v0.48.1
              - chartName: external-dns
                chartVersion: v0.7.0
              - chartName: cnpg-operator
                chartVersion: v0.23.1
              kustomizePath: /kustomize
            l4LoadBalancerConfiguration:
              ingressPortConfiguration:
              - associatedResourceIDs:
                - r-12345678
                - r-abcdef12
                backendPort: 8080
                ingressPort: 1234
              - associatedResourceIDs:
                - r-12345678
                - r-abcdef12
                backendPort: 8081
                ingressPort: 5678
              - associatedResourceIDs:
                - r-vwxybz12
                - r-poij122v
                backendPort: 8082
                ingressPort: 9012
            l7LoadBalancerConfiguration:
              paths:
              - associatedResourceID: r-12345678
                path: /path
                port: 8080
            name: Galera
            onPremTerraformConfigurations:
              OpenShift:
                gitConfiguration:
                  referenceName: ref
                  repositoryUrl: gitUrl
                privateModuleGitAccessTokens:
                  tokenName: accessToken
                terraformPath: /project1/tf
            operatorCRDConfiguration:
              disableReconciliation: false
              endpointConfiguration:
                admin:
                  host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                  networkingType: PRIVATE
                  ports:
                  - 8080
                  - 8081
                  primary: false
                cluster:
                  host: https://my-endpoint.com
                  networkingType: PUBLIC
                  ports:
                  - 8080
                  - 8081
                  primary: true
              helmChartDependencies:
              - chartName: cert-manager
                chartVersion: v1.5.3
              - chartName: nginx-ingress
                chartVersion: v0.48.1
              - chartName: external-dns
                chartVersion: v0.7.0
              - chartName: cnpg-operator
                chartVersion: v0.23.1
              outputParameters:
                expiresAt: $out.status.notAfter
                issuerName: letsencrypt-prod
              readinessConditions:
                $out.status.conditions[?(@.type=='Ready')].status: true
              supplementalFiles:
              - |
                apiVersion: cert-manager.io/v1
                kind: ClusterIssuer
                metadata:
                  name: letsencrypt-prod
                spec:
                  acme:
                    server: https://acme-v02.api.letsencrypt.org/directory
              - |-
                apiVersion: ingress.nginx.io/v1
                kind: IngressClass
                metadata:
                  name: nginx
                spec:
                  controller: nginx.org/ingress-controller
              template: |-
                apiVersion: cert-manager.io/v1
                kind: ClusterIssuer
                metadata:
                  name: letsencrypt-prod
                spec:
                  acme:
                    server: https://acme-v02.api.letsencrypt.org/directory
                    email: test@example.com
                    privateKeySecretRef:
                      name: letsencrypt-prod
                    solvers:
                    - http01:
                        ingress:
                          class: nginx
            productTierId: pt-12345678
            proxyType: PortsBasedProxy
            resourceType: Generic
            serviceId: s-12345678
            terraformConfigurations:
              aws:
                gitConfiguration:
                  referenceName: ref
                  repositoryUrl: gitUrl
                privateModuleGitAccessTokens:
                  tokenName: accessToken
                terraformPath: /project1/tf
          - actionHooks:
            - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
              scope: CLUSTER
              type: INIT
            additionalSecurityContext:
              AddCapabilities:
              - CAP_NET_ADMIN
              - CAP_NET_RAW
              DropCapabilities:
              - CAP_NET_ADMIN
              - CAP_NET_RAW
              SupplementalGroupIDs:
              - 1001
              - 999
            agentConfiguration:
              codeInterpreter:
                allowedPackages:
                - pandas
                - numpy
                - matplotlib
                enabled: true
                provider: agentcore
                timeout: 60
              dockerfile: Dockerfile
              evaluations:
              - metrics:
                - relevance
                - helpfulness
                name: response-quality
                schedule: every 6 hours
              memory:
                enabled: true
              monitoring:
                enabled: true
              vectorStore:
                enabled: true
            backupConfiguration:
              backupPeriodInHours: 24
              backupRetentionInDays: 7
            blobStorageConfiguration:
              GCSConfiguration: {}
              S3Configuration: {}
            capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            containerImagesRegistryCopyConfiguration:
              images:
              - imageName: postgres
                imageTag: "16"
              - imageName: postgres
                imageTag: "16"
              pullSource:
                credentials:
                  password: my-password
                  username: my-user
                registryURL: https://my-registry.com
                repositoryName: library
              pushTarget:
                credentials:
                  password: my-password
                  username: my-user
                registryURL: https://my-registry.com
                repositoryName: library
            customLabels:
              key: value
            customSysCTLs:
              net.ipv4.tcp_syncookies: "1"
            customULimits:
            - ULimitsName: NoProc
              ULimitsType: Soft
              ULimitsValue: 1000
            - ULimitsName: NoFile
              ULimitsType: Hard
              ULimitsValue: 2048
            dependencies:
            - parameterMap:
                clusterId: writerId
                clusterOrg: userDatabase
              resourceId: r-12345678
            - parameterMap:
                clusterId: readerId
                clusterOrg: userDatabase
              resourceId: r-abcdef12
            description: An resource to manage a hosted public SaaS offering of a
              multi-writer MySQL service
            disable: "{{ $var.disableExtraComponents }}"
            environmentVariables:
            - name: MYSQL_ROOT_PASSWORD
              value: password
            fileSystemConfiguration:
              EFSFileSystemConfiguration:
                PerformanceMode: generalPurpose|maxIO
                ProvisionedThroughputInMibps: 125
                ThroughputMode: provisioned|bursting|elastic
              GCPFilestoreConfiguration:
                Capacity: 1024GiB
                MaxIopsPerTb: 3000
                Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
            helmChartConfiguration:
              autoDiscoverImagesTag: omnistrate/images
              chartName: my-chart
              chartRepoName: my-repo
              chartRepoUrl: https://my-repo.com
              chartValues:
                key1: value1
                key2: 3
                key3:
                  key4: value4
              chartVersion: 1.0.0
              endpointConfiguration:
                admin:
                  host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                  networkingType: PRIVATE
                  ports:
                  - 8080
                  - 8081
                  primary: false
                cluster:
                  host: https://my-endpoint.com
                  networkingType: PUBLIC
                  ports:
                  - 8080
                  - 8081
                  primary: true
              layeredChartValues:
              - values:
                  global:
                    image:
                      tag: v1.0.0
                    replicaCount: 1
                    resources:
                      requests:
                        cpu: 100m
                        memory: 128Mi
              - scope:
                  '{{ $sys.cloudProviderName }}': aws
                valuesFile:
                  gitConfiguration:
                    accessToken: ghp_...
                    commitSHA: a1b2c3d4e5f6
                    path: aws/production.yaml
                    referenceName: refs/heads/main
                    repositoryUrl: https://github.com/org/helm-values
              namespace: postgres
              password: my-password
              releaseName: my-release
              runtimeConfiguration:
                disableHooks: true
                recreate: true
                resetThenReuseValues: true
                resetValues: true
                reuseValues: true
                skipCRDs: true
                timeoutNanos: 1000000000
                upgradeCRDs: true
                wait: true
                waitForJobs: true
              username: my-user
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            internal: true
            isDeprecated: false
            jobConfig:
              activeDeadlineSeconds: 300
              backoffLimit: 5
            key: galera
            kustomizeConfiguration:
              disableReconciliation: false
              endpointConfiguration:
                admin:
                  host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                  networkingType: PRIVATE
                  ports:
                  - 8080
                  - 8081
                  primary: false
                cluster:
                  host: https://my-endpoint.com
                  networkingType: PUBLIC
                  ports:
                  - 8080
                  - 8081
                  primary: true
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              helmChartDependencies:
              - chartName: cert-manager
                chartVersion: v1.5.3
              - chartName: nginx-ingress
                chartVersion: v0.48.1
              - chartName: external-dns
                chartVersion: v0.7.0
              - chartName: cnpg-operator
                chartVersion: v0.23.1
              kustomizePath: /kustomize
            l4LoadBalancerConfiguration:
              ingressPortConfiguration:
              - associatedResourceIDs:
                - r-12345678
                - r-abcdef12
                backendPort: 8080
                ingressPort: 1234
              - associatedResourceIDs:
                - r-12345678
                - r-abcdef12
                backendPort: 8081
                ingressPort: 5678
              - associatedResourceIDs:
                - r-vwxybz12
                - r-poij122v
                backendPort: 8082
                ingressPort: 9012
            l7LoadBalancerConfiguration:
              paths:
              - associatedResourceID: r-12345678
                path: /path
                port: 8080
            name: Galera
            onPremTerraformConfigurations:
              OpenShift:
                gitConfiguration:
                  referenceName: ref
                  repositoryUrl: gitUrl
                privateModuleGitAccessTokens:
                  tokenName: accessToken
                terraformPath: /project1/tf
            operatorCRDConfiguration:
              disableReconciliation: false
              endpointConfiguration:
                admin:
                  host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                  networkingType: PRIVATE
                  ports:
                  - 8080
                  - 8081
                  primary: false
                cluster:
                  host: https://my-endpoint.com
                  networkingType: PUBLIC
                  ports:
                  - 8080
                  - 8081
                  primary: true
              helmChartDependencies:
              - chartName: cert-manager
                chartVersion: v1.5.3
              - chartName: nginx-ingress
                chartVersion: v0.48.1
              - chartName: external-dns
                chartVersion: v0.7.0
              - chartName: cnpg-operator
                chartVersion: v0.23.1
              outputParameters:
                expiresAt: $out.status.notAfter
                issuerName: letsencrypt-prod
              readinessConditions:
                $out.status.conditions[?(@.type=='Ready')].status: true
              supplementalFiles:
              - |
                apiVersion: cert-manager.io/v1
                kind: ClusterIssuer
                metadata:
                  name: letsencrypt-prod
                spec:
                  acme:
                    server: https://acme-v02.api.letsencrypt.org/directory
              - |-
                apiVersion: ingress.nginx.io/v1
                kind: IngressClass
                metadata:
                  name: nginx
                spec:
                  controller: nginx.org/ingress-controller
              template: |-
                apiVersion: cert-manager.io/v1
                kind: ClusterIssuer
                metadata:
                  name: letsencrypt-prod
                spec:
                  acme:
                    server: https://acme-v02.api.letsencrypt.org/directory
                    email: test@example.com
                    privateKeySecretRef:
                      name: letsencrypt-prod
                    solvers:
                    - http01:
                        ingress:
                          class: nginx
            productTierId: pt-12345678
            proxyType: PortsBasedProxy
            resourceType: Generic
            serviceId: s-12345678
            terraformConfigurations:
              aws:
                gitConfiguration:
                  referenceName: ref
                  repositoryUrl: gitUrl
                privateModuleGitAccessTokens:
                  tokenName: accessToken
                terraformPath: /project1/tf
          items:
            $ref: "#/components/schemas/DescribeResourceResult"
          type: array
      required:
      - ids
      type: object
    ListSaaSPortalCustomDomainsRequest:
      example:
        token: l2
      properties:
        token:
          description: JWT token used to perform authorization
          example: t6l
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListSaaSPortalCustomDomainsResult:
      example:
        customDomains:
        - clusterEndpoint: example.com
          customDomain: mycustomdomain.com
          description: My custom domain description
          environmentType: DEV
          name: MyCustomDomain
          status: READY
        - clusterEndpoint: example.com
          customDomain: mycustomdomain.com
          description: My custom domain description
          environmentType: DEV
          name: MyCustomDomain
          status: READY
        - clusterEndpoint: example.com
          customDomain: mycustomdomain.com
          description: My custom domain description
          environmentType: DEV
          name: MyCustomDomain
          status: READY
        - clusterEndpoint: example.com
          customDomain: mycustomdomain.com
          description: My custom domain description
          environmentType: DEV
          name: MyCustomDomain
          status: READY
      properties:
        customDomains:
          description: The list of custom domains
          example:
          - clusterEndpoint: example.com
            customDomain: mycustomdomain.com
            description: My custom domain description
            environmentType: DEV
            name: MyCustomDomain
            status: READY
          - clusterEndpoint: example.com
            customDomain: mycustomdomain.com
            description: My custom domain description
            environmentType: DEV
            name: MyCustomDomain
            status: READY
          - clusterEndpoint: example.com
            customDomain: mycustomdomain.com
            description: My custom domain description
            environmentType: DEV
            name: MyCustomDomain
            status: READY
          items:
            $ref: "#/components/schemas/CustomDomain"
          type: array
      required:
      - customDomains
      type: object
    ListSaaSPortalsRequest:
      example:
        token: jkk
      properties:
        token:
          description: JWT token used to perform authorization
          example: lhh
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListSaaSPortalsResult:
      example:
        saasPortals:
        - customDomain: mycustomdomain.com
          customDomainStatus: READY
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: saasportal
              resourceName: SaaS Portal
          disablePasswordLogin: false
          emailConfig:
            smtpFromEmail: example@gmail.com
            smtpHost: smtp.gmail.com
            smtpPassword: password
            smtpPort: 587
            smtpUsername: username
          endpoint: https://saas-portal.example.com
          environmentType: DEV
          googleAnalyticsTagID: G-123456789
          imageConfig:
            imageName: myimage
            imageRegistry: ghcr.io
            imageTag: latest
          status: READY
        - customDomain: mycustomdomain.com
          customDomainStatus: READY
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: saasportal
              resourceName: SaaS Portal
          disablePasswordLogin: false
          emailConfig:
            smtpFromEmail: example@gmail.com
            smtpHost: smtp.gmail.com
            smtpPassword: password
            smtpPort: 587
            smtpUsername: username
          endpoint: https://saas-portal.example.com
          environmentType: DEV
          googleAnalyticsTagID: G-123456789
          imageConfig:
            imageName: myimage
            imageRegistry: ghcr.io
            imageTag: latest
          status: READY
        - customDomain: mycustomdomain.com
          customDomainStatus: READY
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: saasportal
              resourceName: SaaS Portal
          disablePasswordLogin: false
          emailConfig:
            smtpFromEmail: example@gmail.com
            smtpHost: smtp.gmail.com
            smtpPassword: password
            smtpPort: 587
            smtpUsername: username
          endpoint: https://saas-portal.example.com
          environmentType: DEV
          googleAnalyticsTagID: G-123456789
          imageConfig:
            imageName: myimage
            imageRegistry: ghcr.io
            imageTag: latest
          status: READY
      properties:
        saasPortals:
          description: The list of saas portals
          example:
          - customDomain: mycustomdomain.com
            customDomainStatus: READY
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: saasportal
                resourceName: SaaS Portal
            disablePasswordLogin: false
            emailConfig:
              smtpFromEmail: example@gmail.com
              smtpHost: smtp.gmail.com
              smtpPassword: password
              smtpPort: 587
              smtpUsername: username
            endpoint: https://saas-portal.example.com
            environmentType: DEV
            googleAnalyticsTagID: G-123456789
            imageConfig:
              imageName: myimage
              imageRegistry: ghcr.io
              imageTag: latest
            status: READY
          - customDomain: mycustomdomain.com
            customDomainStatus: READY
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: saasportal
                resourceName: SaaS Portal
            disablePasswordLogin: false
            emailConfig:
              smtpFromEmail: example@gmail.com
              smtpHost: smtp.gmail.com
              smtpPassword: password
              smtpPort: 587
              smtpUsername: username
            endpoint: https://saas-portal.example.com
            environmentType: DEV
            googleAnalyticsTagID: G-123456789
            imageConfig:
              imageName: myimage
              imageRegistry: ghcr.io
              imageTag: latest
            status: READY
          - customDomain: mycustomdomain.com
            customDomainStatus: READY
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: saasportal
                resourceName: SaaS Portal
            disablePasswordLogin: false
            emailConfig:
              smtpFromEmail: example@gmail.com
              smtpHost: smtp.gmail.com
              smtpPassword: password
              smtpPort: 587
              smtpUsername: username
            endpoint: https://saas-portal.example.com
            environmentType: DEV
            googleAnalyticsTagID: G-123456789
            imageConfig:
              imageName: myimage
              imageRegistry: ghcr.io
              imageTag: latest
            status: READY
          - customDomain: mycustomdomain.com
            customDomainStatus: READY
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: saasportal
                resourceName: SaaS Portal
            disablePasswordLogin: false
            emailConfig:
              smtpFromEmail: example@gmail.com
              smtpHost: smtp.gmail.com
              smtpPassword: password
              smtpPort: 587
              smtpUsername: username
            endpoint: https://saas-portal.example.com
            environmentType: DEV
            googleAnalyticsTagID: G-123456789
            imageConfig:
              imageName: myimage
              imageRegistry: ghcr.io
              imageTag: latest
            status: READY
          items:
            $ref: "#/components/schemas/SaaSPortal"
          type: array
      required:
      - saasPortals
      type: object
    ListSecretsRequest:
      example:
        environmentType: DEV
        token: r
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        token:
          description: JWT token used to perform authorization
          example: "y"
          minLength: 1
          type: string
      required:
      - environmentType
      - token
      type: object
    ListSecretsResult:
      example:
        secrets:
        - environmentType: DEV
          name: my-secret
          value: super-secret-value
        - environmentType: DEV
          name: my-secret
          value: super-secret-value
        - environmentType: DEV
          name: my-secret
          value: super-secret-value
        - environmentType: DEV
          name: my-secret
          value: super-secret-value
      properties:
        secrets:
          description: List of secrets in the service environment
          example:
          - environmentType: DEV
            name: my-secret
            value: super-secret-value
          - environmentType: DEV
            name: my-secret
            value: super-secret-value
          - environmentType: DEV
            name: my-secret
            value: super-secret-value
          - environmentType: DEV
            name: my-secret
            value: super-secret-value
          items:
            $ref: "#/components/schemas/Secret"
          type: array
      type: object
    ListServiceAPIsRequest:
      example:
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        token: er
      properties:
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: f
          minLength: 1
          type: string
      required:
      - serviceEnvironmentId
      - serviceId
      - token
      type: object
    ListServiceAPIsResult:
      example:
        ids:
        - sa-12345678
        nextPageToken: next-token
      properties:
        ids:
          description: The list of service API IDs
          example:
          - sa-12345678
          items:
            description: ID of a Service API
            example: Quas est et.
            type: string
          type: array
        nextPageToken:
          description: The next token to use for pagination
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListServiceEnvironmentsRequest:
      example:
        serviceId: s-12345678
        token: 9v4
      properties:
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 0z
          minLength: 1
          type: string
      required:
      - serviceId
      - token
      type: object
    ListServiceEnvironmentsResult:
      example:
        ids:
        - se-12345678
        - se-23456789
        nextPageToken: next-token
      properties:
        ids:
          description: The list of service environment IDs
          example:
          - se-12345678
          - se-23456789
          items:
            description: ID of a Service Environment
            example: se-123456
            type: string
          type: array
        nextPageToken:
          description: The next token to use to retrieve the next page of results
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListServiceModelsRequest:
      example:
        serviceApiId: sa-12345678
        serviceId: s-12345678
        token: zk
      properties:
        serviceApiId:
          description: ID of a Service API
          example: Id voluptatum commodi sit.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 1x
          minLength: 1
          type: string
      required:
      - serviceApiId
      - serviceId
      - token
      type: object
    ListServiceModelsResult:
      example:
        ids:
        - sm-12345678
        - sm-87654321
        nextPageToken: next-token
      properties:
        ids:
          description: The service model IDs
          example:
          - sm-12345678
          - sm-87654321
          items:
            description: ID of a Service Model
            example: Aut ut omnis qui quis sunt similique.
            type: string
          type: array
        nextPageToken:
          description: The next token to use when listing service models
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListServiceOfferingsRequest:
      example:
        environmentType: DEV
        orgId: org-12345678
        token: h
        visibility: PRIVATE
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        orgId:
          description: ID of an Org
          example: Sequi recusandae non excepturi optio.
          type: string
        token:
          description: JWT token used to perform authorization
          example: z9s
          minLength: 1
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - token
      type: object
    ListServiceOfferingsResult:
      example:
        nextPageToken: next-token
        serviceIds:
        - s-12345678
        - s-abcdefgh
        services:
        - createdAt: 2019-01-01T00:00:00Z
          isDeprecated: false
          offerings:
          - allowCreatesWhenPaymentNotConfigured: true
            assets:
              cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
              cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
            maxNumberOfInstances: 4
            productTierName: Premium
            productTierURLKey: premium
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-12345678
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PRIVATE
            serviceModelName: Bring Your Own Account
            serviceModelURLKey: byoa
          - productTierName: Basic
            productTierURLKey: basic
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-abcdefgh
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PUBLIC
            serviceModelName: Hosted
            serviceModelURLKey: hosted
          serviceDescription: MySQL is a relational database
          serviceId: s-12345678
          serviceName: MySQL
          serviceOrgId: org-12345678
          serviceProviderId: sp-9zrg9W8Are
          serviceProviderName: "Omnistrate, Inc."
          serviceURLKey: mysql
        - createdAt: 2019-01-01T00:00:00Z
          isDeprecated: false
          offerings:
          - allowCreatesWhenPaymentNotConfigured: true
            assets:
              cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
              cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
            maxNumberOfInstances: 4
            productTierName: Premium
            productTierURLKey: premium
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-12345678
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PRIVATE
            serviceModelName: Bring Your Own Account
            serviceModelURLKey: byoa
          - productTierName: Basic
            productTierURLKey: basic
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-abcdefgh
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PUBLIC
            serviceModelName: Hosted
            serviceModelURLKey: hosted
          serviceDescription: MySQL is a relational database
          serviceId: s-12345678
          serviceName: MySQL
          serviceOrgId: org-12345678
          serviceProviderId: sp-9zrg9W8Are
          serviceProviderName: "Omnistrate, Inc."
          serviceURLKey: mysql
        - createdAt: 2019-01-01T00:00:00Z
          isDeprecated: false
          offerings:
          - allowCreatesWhenPaymentNotConfigured: true
            assets:
              cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
              cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
            maxNumberOfInstances: 4
            productTierName: Premium
            productTierURLKey: premium
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-12345678
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PRIVATE
            serviceModelName: Bring Your Own Account
            serviceModelURLKey: byoa
          - productTierName: Basic
            productTierURLKey: basic
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-abcdefgh
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PUBLIC
            serviceModelName: Hosted
            serviceModelURLKey: hosted
          serviceDescription: MySQL is a relational database
          serviceId: s-12345678
          serviceName: MySQL
          serviceOrgId: org-12345678
          serviceProviderId: sp-9zrg9W8Are
          serviceProviderName: "Omnistrate, Inc."
          serviceURLKey: mysql
        - createdAt: 2019-01-01T00:00:00Z
          isDeprecated: false
          offerings:
          - allowCreatesWhenPaymentNotConfigured: true
            assets:
              cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
              cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
            maxNumberOfInstances: 4
            productTierName: Premium
            productTierURLKey: premium
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-12345678
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PRIVATE
            serviceModelName: Bring Your Own Account
            serviceModelURLKey: byoa
          - productTierName: Basic
            productTierURLKey: basic
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-abcdefgh
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PUBLIC
            serviceModelName: Hosted
            serviceModelURLKey: hosted
          serviceDescription: MySQL is a relational database
          serviceId: s-12345678
          serviceName: MySQL
          serviceOrgId: org-12345678
          serviceProviderId: sp-9zrg9W8Are
          serviceProviderName: "Omnistrate, Inc."
          serviceURLKey: mysql
      properties:
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        serviceIds:
          description: The service IDs
          example:
          - s-12345678
          - s-abcdefgh
          items:
            description: ID of a Service
            example: s-123456
            type: string
          type: array
        services:
          description: List of services
          example:
          - createdAt: 2019-01-01T00:00:00Z
            isDeprecated: false
            offerings:
            - allowCreatesWhenPaymentNotConfigured: true
              assets:
                cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
              maxNumberOfInstances: 4
              productTierName: Premium
              productTierURLKey: premium
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-12345678
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PRIVATE
              serviceModelName: Bring Your Own Account
              serviceModelURLKey: byoa
            - productTierName: Basic
              productTierURLKey: basic
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-abcdefgh
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PUBLIC
              serviceModelName: Hosted
              serviceModelURLKey: hosted
            serviceDescription: MySQL is a relational database
            serviceId: s-12345678
            serviceName: MySQL
            serviceOrgId: org-12345678
            serviceProviderId: sp-9zrg9W8Are
            serviceProviderName: "Omnistrate, Inc."
            serviceURLKey: mysql
          - createdAt: 2019-01-01T00:00:00Z
            isDeprecated: false
            offerings:
            - allowCreatesWhenPaymentNotConfigured: true
              assets:
                cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
              maxNumberOfInstances: 4
              productTierName: Premium
              productTierURLKey: premium
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-12345678
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PRIVATE
              serviceModelName: Bring Your Own Account
              serviceModelURLKey: byoa
            - productTierName: Basic
              productTierURLKey: basic
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-abcdefgh
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PUBLIC
              serviceModelName: Hosted
              serviceModelURLKey: hosted
            serviceDescription: MySQL is a relational database
            serviceId: s-12345678
            serviceName: MySQL
            serviceOrgId: org-12345678
            serviceProviderId: sp-9zrg9W8Are
            serviceProviderName: "Omnistrate, Inc."
            serviceURLKey: mysql
          - createdAt: 2019-01-01T00:00:00Z
            isDeprecated: false
            offerings:
            - allowCreatesWhenPaymentNotConfigured: true
              assets:
                cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
              maxNumberOfInstances: 4
              productTierName: Premium
              productTierURLKey: premium
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-12345678
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PRIVATE
              serviceModelName: Bring Your Own Account
              serviceModelURLKey: byoa
            - productTierName: Basic
              productTierURLKey: basic
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-abcdefgh
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PUBLIC
              serviceModelName: Hosted
              serviceModelURLKey: hosted
            serviceDescription: MySQL is a relational database
            serviceId: s-12345678
            serviceName: MySQL
            serviceOrgId: org-12345678
            serviceProviderId: sp-9zrg9W8Are
            serviceProviderName: "Omnistrate, Inc."
            serviceURLKey: mysql
          - createdAt: 2019-01-01T00:00:00Z
            isDeprecated: false
            offerings:
            - allowCreatesWhenPaymentNotConfigured: true
              assets:
                cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
              maxNumberOfInstances: 4
              productTierName: Premium
              productTierURLKey: premium
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-12345678
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PRIVATE
              serviceModelName: Bring Your Own Account
              serviceModelURLKey: byoa
            - productTierName: Basic
              productTierURLKey: basic
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-abcdefgh
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PUBLIC
              serviceModelName: Hosted
              serviceModelURLKey: hosted
            serviceDescription: MySQL is a relational database
            serviceId: s-12345678
            serviceName: MySQL
            serviceOrgId: org-12345678
            serviceProviderId: sp-9zrg9W8Are
            serviceProviderName: "Omnistrate, Inc."
            serviceURLKey: mysql
          items:
            $ref: "#/components/schemas/DescribeServiceOfferingResult"
          type: array
      required:
      - serviceIds
      type: object
    ListServicePlansRequest:
      example:
        nextPageToken: token
        pageSize: 10
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        skipHasPendingChangesCheck: false
        token: mbq
      properties:
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        skipHasPendingChangesCheck:
          description: Whether to skip the check for pending changes in the service
            plans
          example: false
          type: boolean
        token:
          description: JWT token used to perform authorization
          example: "n"
          minLength: 1
          type: string
      required:
      - serviceEnvironmentId
      - serviceId
      - token
      type: object
    ListServicePlansResult:
      example:
        nextPageToken: next-token
        servicePlans:
        - AutoApproveSubscription: false
          accountConfigIds:
          - ac-12345678
          - ac-23456789
          activeAccountConfigIds:
            aws: ac-12345678
            gcp: ac-23456789
          apiVersion: v1
          awsRegions:
          - us-east-2
          - ca-central-1
          azureRegions:
          - northcentralus
          deploymentConfigId: dc-12345678
          gcpRegions:
          - us-central1
          hasPendingChanges: true
          isProductTierDisabled: true
          latestMajorVersion: "3.0"
          modelType: CUSTOMER_HOSTED
          privateRegions:
          - n/a
          productTierDescription: A premium product tier
          productTierDocumentation: Any documentation
          productTierFeatures:
            LOGS: true
            METRICS: false
          productTierId: pt-12345678
          productTierKey: premium
          productTierName: Premium
          productTierPlanDescription: A premium plan
          productTierPricing:
            price1: value1
          productTierSupport: Any support
          serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
            clusters for high availability
          serviceApiId: sa-12345678
          serviceEnvironmentId: se-12345678
          serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
            clusters for high availability
          serviceModelFeatures:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          serviceModelId: sm-12345678
          serviceModelName: MySQL multi-writer service hosted model
          tierType: OMNISTRATE_DEDICATED_TENANCY
          versionSetStatus: Preferred|Active|Deprecated|Pending
        - AutoApproveSubscription: false
          accountConfigIds:
          - ac-12345678
          - ac-23456789
          activeAccountConfigIds:
            aws: ac-12345678
            gcp: ac-23456789
          apiVersion: v1
          awsRegions:
          - us-east-2
          - ca-central-1
          azureRegions:
          - northcentralus
          deploymentConfigId: dc-12345678
          gcpRegions:
          - us-central1
          hasPendingChanges: true
          isProductTierDisabled: true
          latestMajorVersion: "3.0"
          modelType: CUSTOMER_HOSTED
          privateRegions:
          - n/a
          productTierDescription: A premium product tier
          productTierDocumentation: Any documentation
          productTierFeatures:
            LOGS: true
            METRICS: false
          productTierId: pt-12345678
          productTierKey: premium
          productTierName: Premium
          productTierPlanDescription: A premium plan
          productTierPricing:
            price1: value1
          productTierSupport: Any support
          serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
            clusters for high availability
          serviceApiId: sa-12345678
          serviceEnvironmentId: se-12345678
          serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
            clusters for high availability
          serviceModelFeatures:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          serviceModelId: sm-12345678
          serviceModelName: MySQL multi-writer service hosted model
          tierType: OMNISTRATE_DEDICATED_TENANCY
          versionSetStatus: Preferred|Active|Deprecated|Pending
        - AutoApproveSubscription: false
          accountConfigIds:
          - ac-12345678
          - ac-23456789
          activeAccountConfigIds:
            aws: ac-12345678
            gcp: ac-23456789
          apiVersion: v1
          awsRegions:
          - us-east-2
          - ca-central-1
          azureRegions:
          - northcentralus
          deploymentConfigId: dc-12345678
          gcpRegions:
          - us-central1
          hasPendingChanges: true
          isProductTierDisabled: true
          latestMajorVersion: "3.0"
          modelType: CUSTOMER_HOSTED
          privateRegions:
          - n/a
          productTierDescription: A premium product tier
          productTierDocumentation: Any documentation
          productTierFeatures:
            LOGS: true
            METRICS: false
          productTierId: pt-12345678
          productTierKey: premium
          productTierName: Premium
          productTierPlanDescription: A premium plan
          productTierPricing:
            price1: value1
          productTierSupport: Any support
          serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
            clusters for high availability
          serviceApiId: sa-12345678
          serviceEnvironmentId: se-12345678
          serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
            clusters for high availability
          serviceModelFeatures:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          serviceModelId: sm-12345678
          serviceModelName: MySQL multi-writer service hosted model
          tierType: OMNISTRATE_DEDICATED_TENANCY
          versionSetStatus: Preferred|Active|Deprecated|Pending
      properties:
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
        servicePlans:
          description: List of service plans
          example:
          - AutoApproveSubscription: false
            accountConfigIds:
            - ac-12345678
            - ac-23456789
            activeAccountConfigIds:
              aws: ac-12345678
              gcp: ac-23456789
            apiVersion: v1
            awsRegions:
            - us-east-2
            - ca-central-1
            azureRegions:
            - northcentralus
            deploymentConfigId: dc-12345678
            gcpRegions:
            - us-central1
            hasPendingChanges: true
            isProductTierDisabled: true
            latestMajorVersion: "3.0"
            modelType: CUSTOMER_HOSTED
            privateRegions:
            - n/a
            productTierDescription: A premium product tier
            productTierDocumentation: Any documentation
            productTierFeatures:
              LOGS: true
              METRICS: false
            productTierId: pt-12345678
            productTierKey: premium
            productTierName: Premium
            productTierPlanDescription: A premium plan
            productTierPricing:
              price1: value1
            productTierSupport: Any support
            serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
              clusters for high availability
            serviceApiId: sa-12345678
            serviceEnvironmentId: se-12345678
            serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
              clusters for high availability
            serviceModelFeatures:
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            serviceModelId: sm-12345678
            serviceModelName: MySQL multi-writer service hosted model
            tierType: OMNISTRATE_DEDICATED_TENANCY
            versionSetStatus: Preferred|Active|Deprecated|Pending
          - AutoApproveSubscription: false
            accountConfigIds:
            - ac-12345678
            - ac-23456789
            activeAccountConfigIds:
              aws: ac-12345678
              gcp: ac-23456789
            apiVersion: v1
            awsRegions:
            - us-east-2
            - ca-central-1
            azureRegions:
            - northcentralus
            deploymentConfigId: dc-12345678
            gcpRegions:
            - us-central1
            hasPendingChanges: true
            isProductTierDisabled: true
            latestMajorVersion: "3.0"
            modelType: CUSTOMER_HOSTED
            privateRegions:
            - n/a
            productTierDescription: A premium product tier
            productTierDocumentation: Any documentation
            productTierFeatures:
              LOGS: true
              METRICS: false
            productTierId: pt-12345678
            productTierKey: premium
            productTierName: Premium
            productTierPlanDescription: A premium plan
            productTierPricing:
              price1: value1
            productTierSupport: Any support
            serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
              clusters for high availability
            serviceApiId: sa-12345678
            serviceEnvironmentId: se-12345678
            serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
              clusters for high availability
            serviceModelFeatures:
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            serviceModelId: sm-12345678
            serviceModelName: MySQL multi-writer service hosted model
            tierType: OMNISTRATE_DEDICATED_TENANCY
            versionSetStatus: Preferred|Active|Deprecated|Pending
          - AutoApproveSubscription: false
            accountConfigIds:
            - ac-12345678
            - ac-23456789
            activeAccountConfigIds:
              aws: ac-12345678
              gcp: ac-23456789
            apiVersion: v1
            awsRegions:
            - us-east-2
            - ca-central-1
            azureRegions:
            - northcentralus
            deploymentConfigId: dc-12345678
            gcpRegions:
            - us-central1
            hasPendingChanges: true
            isProductTierDisabled: true
            latestMajorVersion: "3.0"
            modelType: CUSTOMER_HOSTED
            privateRegions:
            - n/a
            productTierDescription: A premium product tier
            productTierDocumentation: Any documentation
            productTierFeatures:
              LOGS: true
              METRICS: false
            productTierId: pt-12345678
            productTierKey: premium
            productTierName: Premium
            productTierPlanDescription: A premium plan
            productTierPricing:
              price1: value1
            productTierSupport: Any support
            serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
              clusters for high availability
            serviceApiId: sa-12345678
            serviceEnvironmentId: se-12345678
            serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
              clusters for high availability
            serviceModelFeatures:
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            serviceModelId: sm-12345678
            serviceModelName: MySQL multi-writer service hosted model
            tierType: OMNISTRATE_DEDICATED_TENANCY
            versionSetStatus: Preferred|Active|Deprecated|Pending
          - AutoApproveSubscription: false
            accountConfigIds:
            - ac-12345678
            - ac-23456789
            activeAccountConfigIds:
              aws: ac-12345678
              gcp: ac-23456789
            apiVersion: v1
            awsRegions:
            - us-east-2
            - ca-central-1
            azureRegions:
            - northcentralus
            deploymentConfigId: dc-12345678
            gcpRegions:
            - us-central1
            hasPendingChanges: true
            isProductTierDisabled: true
            latestMajorVersion: "3.0"
            modelType: CUSTOMER_HOSTED
            privateRegions:
            - n/a
            productTierDescription: A premium product tier
            productTierDocumentation: Any documentation
            productTierFeatures:
              LOGS: true
              METRICS: false
            productTierId: pt-12345678
            productTierKey: premium
            productTierName: Premium
            productTierPlanDescription: A premium plan
            productTierPricing:
              price1: value1
            productTierSupport: Any support
            serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
              clusters for high availability
            serviceApiId: sa-12345678
            serviceEnvironmentId: se-12345678
            serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
              clusters for high availability
            serviceModelFeatures:
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            serviceModelId: sm-12345678
            serviceModelName: MySQL multi-writer service hosted model
            tierType: OMNISTRATE_DEDICATED_TENANCY
            versionSetStatus: Preferred|Active|Deprecated|Pending
          items:
            $ref: "#/components/schemas/GetServicePlanResult"
          type: array
      required:
      - servicePlans
      type: object
    ListServiceProviderEvents:
      example:
        endDate: 2024-01-01T10:00:00Z
        environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
        eventTypes:
        - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
        - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
        - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
        - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
        instanceID: instance-12345678
        nextPageToken: token
        pageSize: 10
        productTierID: Beatae beatae.
        serviceEnvironmentID: se-123456
        serviceID: s-123456
        startDate: 2023-01-01T10:00:00Z
        token: "4"
      properties:
        endDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        eventTypes:
          description: The event types to filter by
          example:
          - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
          - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
          - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
          items:
            description: The type of the service provider specific event
            example: UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
            type: string
          type: array
        instanceID:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        productTierID:
          description: ID of a Product Tier
          example: Quia ut eum.
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        startDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        token:
          description: JWT token used to perform authorization
          example: "n"
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListServiceProviderEventsResult:
      example:
        events:
        - alertType: Alarm
          eventCategory: InstanceEvent
          eventID: e-123456
          eventPayload:
            Aspernatur est.: Doloremque aperiam ab illo.
            Exercitationem temporibus ipsam nobis.: Eaque fugit illum aut officiis
              est.
            Minus officia sunt.: Harum sint eius voluptas.
          eventType: UnhealthyInstance
          expiryTime: 2023-01-10T00:00:00Z
          instanceID: instance-12345678
          planVersion: v1.0
          priority: Critical
          resourceName: Resource-123
          scope: ServiceProvider
          serviceEnvironmentID: se-123456
          serviceID: s-123456
          serviceName: Service-123
          servicePlanName: Basic Plan
          time: 2023-01-10T00:00:00Z
        - alertType: Alarm
          eventCategory: InstanceEvent
          eventID: e-123456
          eventPayload:
            Aspernatur est.: Doloremque aperiam ab illo.
            Exercitationem temporibus ipsam nobis.: Eaque fugit illum aut officiis
              est.
            Minus officia sunt.: Harum sint eius voluptas.
          eventType: UnhealthyInstance
          expiryTime: 2023-01-10T00:00:00Z
          instanceID: instance-12345678
          planVersion: v1.0
          priority: Critical
          resourceName: Resource-123
          scope: ServiceProvider
          serviceEnvironmentID: se-123456
          serviceID: s-123456
          serviceName: Service-123
          servicePlanName: Basic Plan
          time: 2023-01-10T00:00:00Z
        - alertType: Alarm
          eventCategory: InstanceEvent
          eventID: e-123456
          eventPayload:
            Aspernatur est.: Doloremque aperiam ab illo.
            Exercitationem temporibus ipsam nobis.: Eaque fugit illum aut officiis
              est.
            Minus officia sunt.: Harum sint eius voluptas.
          eventType: UnhealthyInstance
          expiryTime: 2023-01-10T00:00:00Z
          instanceID: instance-12345678
          planVersion: v1.0
          priority: Critical
          resourceName: Resource-123
          scope: ServiceProvider
          serviceEnvironmentID: se-123456
          serviceID: s-123456
          serviceName: Service-123
          servicePlanName: Basic Plan
          time: 2023-01-10T00:00:00Z
        - alertType: Alarm
          eventCategory: InstanceEvent
          eventID: e-123456
          eventPayload:
            Aspernatur est.: Doloremque aperiam ab illo.
            Exercitationem temporibus ipsam nobis.: Eaque fugit illum aut officiis
              est.
            Minus officia sunt.: Harum sint eius voluptas.
          eventType: UnhealthyInstance
          expiryTime: 2023-01-10T00:00:00Z
          instanceID: instance-12345678
          planVersion: v1.0
          priority: Critical
          resourceName: Resource-123
          scope: ServiceProvider
          serviceEnvironmentID: se-123456
          serviceID: s-123456
          serviceName: Service-123
          servicePlanName: Basic Plan
          time: 2023-01-10T00:00:00Z
        eventsSummary:
          eventsSummary:
            FailedDeployment: 1
            UnhealthyInstance: 2
        nextPageToken: token
      properties:
        events:
          description: List of events
          example:
          - alertType: Alarm
            eventCategory: InstanceEvent
            eventID: e-123456
            eventPayload:
              Aspernatur est.: Doloremque aperiam ab illo.
              Exercitationem temporibus ipsam nobis.: Eaque fugit illum aut officiis
                est.
              Minus officia sunt.: Harum sint eius voluptas.
            eventType: UnhealthyInstance
            expiryTime: 2023-01-10T00:00:00Z
            instanceID: instance-12345678
            planVersion: v1.0
            priority: Critical
            resourceName: Resource-123
            scope: ServiceProvider
            serviceEnvironmentID: se-123456
            serviceID: s-123456
            serviceName: Service-123
            servicePlanName: Basic Plan
            time: 2023-01-10T00:00:00Z
          - alertType: Alarm
            eventCategory: InstanceEvent
            eventID: e-123456
            eventPayload:
              Aspernatur est.: Doloremque aperiam ab illo.
              Exercitationem temporibus ipsam nobis.: Eaque fugit illum aut officiis
                est.
              Minus officia sunt.: Harum sint eius voluptas.
            eventType: UnhealthyInstance
            expiryTime: 2023-01-10T00:00:00Z
            instanceID: instance-12345678
            planVersion: v1.0
            priority: Critical
            resourceName: Resource-123
            scope: ServiceProvider
            serviceEnvironmentID: se-123456
            serviceID: s-123456
            serviceName: Service-123
            servicePlanName: Basic Plan
            time: 2023-01-10T00:00:00Z
          - alertType: Alarm
            eventCategory: InstanceEvent
            eventID: e-123456
            eventPayload:
              Aspernatur est.: Doloremque aperiam ab illo.
              Exercitationem temporibus ipsam nobis.: Eaque fugit illum aut officiis
                est.
              Minus officia sunt.: Harum sint eius voluptas.
            eventType: UnhealthyInstance
            expiryTime: 2023-01-10T00:00:00Z
            instanceID: instance-12345678
            planVersion: v1.0
            priority: Critical
            resourceName: Resource-123
            scope: ServiceProvider
            serviceEnvironmentID: se-123456
            serviceID: s-123456
            serviceName: Service-123
            servicePlanName: Basic Plan
            time: 2023-01-10T00:00:00Z
          items:
            $ref: "#/components/schemas/ServiceProviderEvent"
          type: array
        eventsSummary:
          $ref: "#/components/schemas/ServiceProviderEventSummary"
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
      required:
      - events
      - eventsSummary
      type: object
    ListServiceResult:
      example:
        ids:
        - s-12345678
        - s-abcdefgh
        - s-1234efgh
        nextPageToken: next-token
        services:
        - createdAt: 2019-01-01T00:00:00Z
          description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: s-12345678
          key: mysql
          name: MySQL multi-writer service
          roleType: admin
          serviceEnvironments:
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          serviceLogoURL: Deleniti et enim autem sunt.
          serviceProviderID: sp-12345678
          serviceProviderName: "Omnistrate, Inc."
        - createdAt: 2019-01-01T00:00:00Z
          description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: s-12345678
          key: mysql
          name: MySQL multi-writer service
          roleType: admin
          serviceEnvironments:
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          serviceLogoURL: Deleniti et enim autem sunt.
          serviceProviderID: sp-12345678
          serviceProviderName: "Omnistrate, Inc."
        - createdAt: 2019-01-01T00:00:00Z
          description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: s-12345678
          key: mysql
          name: MySQL multi-writer service
          roleType: admin
          serviceEnvironments:
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          serviceLogoURL: Deleniti et enim autem sunt.
          serviceProviderID: sp-12345678
          serviceProviderName: "Omnistrate, Inc."
      properties:
        ids:
          description: List of service IDs
          example:
          - s-12345678
          - s-abcdefgh
          - s-1234efgh
          items:
            description: ID of a Service
            example: s-123456
            type: string
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results
          example: next-token
          type: string
        services:
          description: List of services
          example:
          - createdAt: 2019-01-01T00:00:00Z
            description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: s-12345678
            key: mysql
            name: MySQL multi-writer service
            roleType: admin
            serviceEnvironments:
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            serviceLogoURL: Deleniti et enim autem sunt.
            serviceProviderID: sp-12345678
            serviceProviderName: "Omnistrate, Inc."
          - createdAt: 2019-01-01T00:00:00Z
            description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: s-12345678
            key: mysql
            name: MySQL multi-writer service
            roleType: admin
            serviceEnvironments:
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            serviceLogoURL: Deleniti et enim autem sunt.
            serviceProviderID: sp-12345678
            serviceProviderName: "Omnistrate, Inc."
          - createdAt: 2019-01-01T00:00:00Z
            description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: s-12345678
            key: mysql
            name: MySQL multi-writer service
            roleType: admin
            serviceEnvironments:
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            serviceLogoURL: Deleniti et enim autem sunt.
            serviceProviderID: sp-12345678
            serviceProviderName: "Omnistrate, Inc."
          items:
            $ref: "#/components/schemas/DescribeServiceResult"
          type: array
      required:
      - ids
      type: object
    ListServicesOrchestrationsRequest:
      example:
        token: 1oz
      properties:
        token:
          description: JWT token used to perform authorization
          example: ai
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListServicesOrchestrationsResult:
      description: List of service orchestrations
      example:
      - ServicesTopology:
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Neque sed id magnam.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Neque sed id magnam.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Neque sed id magnam.
        createdAt: 2021-01-01T00:00:00Z
        id: so-12345678
        orchestrationFailedReason: Invalid DSL
        resultParams:
          param1: value1
          param2: value2
        status: PENDING
        updatedAt: 2021-01-01T00:00:00Z
      - ServicesTopology:
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Neque sed id magnam.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Neque sed id magnam.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Neque sed id magnam.
        createdAt: 2021-01-01T00:00:00Z
        id: so-12345678
        orchestrationFailedReason: Invalid DSL
        resultParams:
          param1: value1
          param2: value2
        status: PENDING
        updatedAt: 2021-01-01T00:00:00Z
      items:
        $ref: "#/components/schemas/DescribeServicesOrchestrationResult"
      type: array
    ListStorageConfigsRequest:
      example:
        managed: false
        serviceId: s-12345678
        token: 2o
      properties:
        managed:
          description: Is storage config managed by omnistrate
          example: false
          type: boolean
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: sx
          minLength: 1
          type: string
      required:
      - serviceId
      - token
      type: object
    ListStorageConfigsResult:
      example:
        ids:
        - sc-12345678
        nextPageToken: next-token
      properties:
        ids:
          description: List of storage config IDs
          example:
          - sc-12345678
          items:
            description: ID of a Storage Config
            example: Consequatur nobis officiis.
            type: string
          type: array
        nextPageToken:
          description: Token to use to get the next page of results
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListStorageVolumeConfigsRequest:
      example:
        managed: false
        serviceId: s-12345678
        token: "8"
      properties:
        managed:
          description: Is storage volume config managed by omnistrate
          example: false
          type: boolean
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: wmu
          minLength: 1
          type: string
      required:
      - serviceId
      - token
      type: object
    ListStorageVolumeConfigsResult:
      example:
        ids:
        - svc-12345678
        nextPageToken: next-token
      properties:
        ids:
          description: The storage volume config ids to list
          example:
          - svc-12345678
          items:
            description: ID of a Storage Volume Config
            example: Sed assumenda ducimus et.
            type: string
          type: array
        nextPageToken:
          description: The next token to use for pagination
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListSubscriptionRequestsRequest:
      example:
        status: PENDING
        token: b
      properties:
        status:
          description: The status of the subscription request
          example: PENDING|APPROVED|DENIED|CANCELLED
          type: string
        token:
          description: JWT token used to perform authorization
          example: 1z
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListSubscriptionRequestsResult:
      example:
        ids:
        - subr-12345678
        - subr-abcdefgh
        - subr-1234efgh
        nextPageToken: next-token
        subscriptionRequests:
        - createdAt: 2019-01-01T00:00:00Z
          id: subr-12345678
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          rootUserEmail: abc@gmail.com
          rootUserId: org-12345678
          rootUserName: John Doe
          serviceId: s-12345678
          serviceLogoURL: Necessitatibus sit sit.
          serviceName: MySQL multi-writer service
          status: PENDING
          updatedAt: 2019-01-01T00:00:00Z
          updatedByUserId: user-12345678
          updatedByUserName: John Doe
        - createdAt: 2019-01-01T00:00:00Z
          id: subr-12345678
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          rootUserEmail: abc@gmail.com
          rootUserId: org-12345678
          rootUserName: John Doe
          serviceId: s-12345678
          serviceLogoURL: Necessitatibus sit sit.
          serviceName: MySQL multi-writer service
          status: PENDING
          updatedAt: 2019-01-01T00:00:00Z
          updatedByUserId: user-12345678
          updatedByUserName: John Doe
        - createdAt: 2019-01-01T00:00:00Z
          id: subr-12345678
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          rootUserEmail: abc@gmail.com
          rootUserId: org-12345678
          rootUserName: John Doe
          serviceId: s-12345678
          serviceLogoURL: Necessitatibus sit sit.
          serviceName: MySQL multi-writer service
          status: PENDING
          updatedAt: 2019-01-01T00:00:00Z
          updatedByUserId: user-12345678
          updatedByUserName: John Doe
        - createdAt: 2019-01-01T00:00:00Z
          id: subr-12345678
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          rootUserEmail: abc@gmail.com
          rootUserId: org-12345678
          rootUserName: John Doe
          serviceId: s-12345678
          serviceLogoURL: Necessitatibus sit sit.
          serviceName: MySQL multi-writer service
          status: PENDING
          updatedAt: 2019-01-01T00:00:00Z
          updatedByUserId: user-12345678
          updatedByUserName: John Doe
      properties:
        ids:
          description: List of subscription request IDs
          example:
          - subr-12345678
          - subr-abcdefgh
          - subr-1234efgh
          items:
            description: ID of a Subscription Request
            example: Aperiam officiis modi optio voluptas quod.
            type: string
          type: array
        nextPageToken:
          description: The next token to use when listing subscription requests
          example: next-token
          type: string
        subscriptionRequests:
          description: List of subscription requests
          example:
          - createdAt: 2019-01-01T00:00:00Z
            id: subr-12345678
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            rootUserEmail: abc@gmail.com
            rootUserId: org-12345678
            rootUserName: John Doe
            serviceId: s-12345678
            serviceLogoURL: Necessitatibus sit sit.
            serviceName: MySQL multi-writer service
            status: PENDING
            updatedAt: 2019-01-01T00:00:00Z
            updatedByUserId: user-12345678
            updatedByUserName: John Doe
          - createdAt: 2019-01-01T00:00:00Z
            id: subr-12345678
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            rootUserEmail: abc@gmail.com
            rootUserId: org-12345678
            rootUserName: John Doe
            serviceId: s-12345678
            serviceLogoURL: Necessitatibus sit sit.
            serviceName: MySQL multi-writer service
            status: PENDING
            updatedAt: 2019-01-01T00:00:00Z
            updatedByUserId: user-12345678
            updatedByUserName: John Doe
          items:
            $ref: "#/components/schemas/DescribeSubscriptionRequestResult"
          type: array
      required:
      - ids
      type: object
    ListSubscriptionsRequest:
      example:
        environmentType: DEV
        serviceId: service-12345678
        token: d3
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ity
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListSubscriptionsResult:
      example:
        ids:
        - sub-12345678
        - sub-abcdefgh
        - sub-1234efgh
        nextPageToken: next-token
        subscriptions:
        - accountConfigIdentityId: org-12345678
          allowCreatesWhenPaymentNotConfigured: true
          cloudProviderNames:
          - aws
          - gcp
          createdAt: 2019-01-01T00:00:00Z
          defaultSubscription: true
          id: sub-12345678
          maxNumberOfInstances: 10
          paymentMethodConfigured: true
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          roleType: root
          rootUserId: user-12345678
          serviceId: s-12345678
          serviceLogoURL: Nobis aut et ullam.
          serviceName: MySQL multi-writer service
          serviceOrgId: org-12345678
          serviceOrgName: Omnistrate
          status: ACTIVE
          subscriptionOwnerName: John Doe
        - accountConfigIdentityId: org-12345678
          allowCreatesWhenPaymentNotConfigured: true
          cloudProviderNames:
          - aws
          - gcp
          createdAt: 2019-01-01T00:00:00Z
          defaultSubscription: true
          id: sub-12345678
          maxNumberOfInstances: 10
          paymentMethodConfigured: true
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          roleType: root
          rootUserId: user-12345678
          serviceId: s-12345678
          serviceLogoURL: Nobis aut et ullam.
          serviceName: MySQL multi-writer service
          serviceOrgId: org-12345678
          serviceOrgName: Omnistrate
          status: ACTIVE
          subscriptionOwnerName: John Doe
      properties:
        ids:
          description: List of subscription IDs
          example:
          - sub-12345678
          - sub-abcdefgh
          - sub-1234efgh
          items:
            description: ID of a Subscription
            example: Soluta et ea nesciunt minus ea ullam.
            type: string
          type: array
        nextPageToken:
          description: The next token to use when listing subscriptions
          example: next-token
          type: string
        subscriptions:
          description: List of subscriptions
          example:
          - accountConfigIdentityId: org-12345678
            allowCreatesWhenPaymentNotConfigured: true
            cloudProviderNames:
            - aws
            - gcp
            createdAt: 2019-01-01T00:00:00Z
            defaultSubscription: true
            id: sub-12345678
            maxNumberOfInstances: 10
            paymentMethodConfigured: true
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            roleType: root
            rootUserId: user-12345678
            serviceId: s-12345678
            serviceLogoURL: Nobis aut et ullam.
            serviceName: MySQL multi-writer service
            serviceOrgId: org-12345678
            serviceOrgName: Omnistrate
            status: ACTIVE
            subscriptionOwnerName: John Doe
          - accountConfigIdentityId: org-12345678
            allowCreatesWhenPaymentNotConfigured: true
            cloudProviderNames:
            - aws
            - gcp
            createdAt: 2019-01-01T00:00:00Z
            defaultSubscription: true
            id: sub-12345678
            maxNumberOfInstances: 10
            paymentMethodConfigured: true
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            roleType: root
            rootUserId: user-12345678
            serviceId: s-12345678
            serviceLogoURL: Nobis aut et ullam.
            serviceName: MySQL multi-writer service
            serviceOrgId: org-12345678
            serviceOrgName: Omnistrate
            status: ACTIVE
            subscriptionOwnerName: John Doe
          - accountConfigIdentityId: org-12345678
            allowCreatesWhenPaymentNotConfigured: true
            cloudProviderNames:
            - aws
            - gcp
            createdAt: 2019-01-01T00:00:00Z
            defaultSubscription: true
            id: sub-12345678
            maxNumberOfInstances: 10
            paymentMethodConfigured: true
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            roleType: root
            rootUserId: user-12345678
            serviceId: s-12345678
            serviceLogoURL: Nobis aut et ullam.
            serviceName: MySQL multi-writer service
            serviceOrgId: org-12345678
            serviceOrgName: Omnistrate
            status: ACTIVE
            subscriptionOwnerName: John Doe
          items:
            $ref: "#/components/schemas/DescribeSubscriptionResult"
          type: array
      required:
      - ids
      type: object
    ListTierVersionSetSpecsRequest:
      example:
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: 4p
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Rerum quasi amet eum.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: p
          minLength: 1
          type: string
      required:
      - productTierId
      - serviceId
      - token
      type: object
    ListTierVersionSetSpecsResult:
      example:
        specs:
        - createdAt: 2008-01-16T07:03:43Z
          hasSpecFile: true
          productTierId: Beatae beatae.
          serviceId: s-12345678
          status: Active
          updatedAt: 1979-06-02T05:01:01Z
          version: "1.0"
        - createdAt: 2008-01-16T07:03:43Z
          hasSpecFile: true
          productTierId: Beatae beatae.
          serviceId: s-12345678
          status: Active
          updatedAt: 1979-06-02T05:01:01Z
          version: "1.0"
        - createdAt: 2008-01-16T07:03:43Z
          hasSpecFile: true
          productTierId: Beatae beatae.
          serviceId: s-12345678
          status: Active
          updatedAt: 1979-06-02T05:01:01Z
          version: "1.0"
      properties:
        specs:
          description: List of tier version set specification versions
          example:
          - createdAt: 2008-01-16T07:03:43Z
            hasSpecFile: true
            productTierId: Beatae beatae.
            serviceId: s-12345678
            status: Active
            updatedAt: 1979-06-02T05:01:01Z
            version: "1.0"
          - createdAt: 2008-01-16T07:03:43Z
            hasSpecFile: true
            productTierId: Beatae beatae.
            serviceId: s-12345678
            status: Active
            updatedAt: 1979-06-02T05:01:01Z
            version: "1.0"
          items:
            $ref: "#/components/schemas/TierVersionSetSpecSummary"
          type: array
      required:
      - specs
      type: object
    ListTierVersionSetsRequest:
      example:
        latestIncrementalVersionForMajorVersion: "3.0"
        latestMajorVersionOnly: true
        nextPageToken: token
        pageSize: 10
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: qbu
      properties:
        latestIncrementalVersionForMajorVersion:
          description: Returns the latest incremental version for the given major
            version. The parameter needs to be specified in isolation
          example: "3.0"
          type: string
        latestMajorVersionOnly:
          description: Indicates whether to return only the latest version set. The
            parameter needs to be specified in isolation.
          example: true
          type: boolean
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        productTierId:
          description: ID of a Product Tier
          example: Facilis eius ea.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ph1
          minLength: 1
          type: string
      required:
      - productTierId
      - serviceId
      - token
      type: object
    ListTierVersionSetsResult:
      example:
        nextPageToken: next-token
        tierVersionSets:
        - autoApproveSubscription: false
          baseVersion: "3.0"
          createdAt: 2020-01-01T00:00:00Z
          createdBy: John Doe
          description: Labore facilis officia placeat autem optio porro.
          enabledFeatures:
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          features:
            LOGS: true
            METRICS: false
          instanceCount: 12
          latestUpgradePathId: upgrade-12345678
          name: Regular version set
          parentVersion: "2.0"
          productTierId: Beatae beatae.
          releasedAt: 2020-01-01T00:00:00Z
          releasedBy: John Doe
          resources:
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
            urlKey: myResource
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
            urlKey: myResource
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
            urlKey: myResource
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
            urlKey: myResource
          serviceId: s-12345678
          serviceModelId: Deserunt ab est sequi rem ab in.
          status: Preferred|Active|Deprecated|Pending
          type: Major|Incremental|UserDefined
          updatedAt: 2020-01-01T00:00:00Z
          version: "3.0"
        - autoApproveSubscription: false
          baseVersion: "3.0"
          createdAt: 2020-01-01T00:00:00Z
          createdBy: John Doe
          description: Labore facilis officia placeat autem optio porro.
          enabledFeatures:
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          features:
            LOGS: true
            METRICS: false
          instanceCount: 12
          latestUpgradePathId: upgrade-12345678
          name: Regular version set
          parentVersion: "2.0"
          productTierId: Beatae beatae.
          releasedAt: 2020-01-01T00:00:00Z
          releasedBy: John Doe
          resources:
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
            urlKey: myResource
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
            urlKey: myResource
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
            urlKey: myResource
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
            urlKey: myResource
          serviceId: s-12345678
          serviceModelId: Deserunt ab est sequi rem ab in.
          status: Preferred|Active|Deprecated|Pending
          type: Major|Incremental|UserDefined
          updatedAt: 2020-01-01T00:00:00Z
          version: "3.0"
      properties:
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        tierVersionSets:
          description: List of product-tier version sets.
          example:
          - autoApproveSubscription: false
            baseVersion: "3.0"
            createdAt: 2020-01-01T00:00:00Z
            createdBy: John Doe
            description: Labore facilis officia placeat autem optio porro.
            enabledFeatures:
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            features:
              LOGS: true
              METRICS: false
            instanceCount: 12
            latestUpgradePathId: upgrade-12345678
            name: Regular version set
            parentVersion: "2.0"
            productTierId: Beatae beatae.
            releasedAt: 2020-01-01T00:00:00Z
            releasedBy: John Doe
            resources:
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            serviceId: s-12345678
            serviceModelId: Deserunt ab est sequi rem ab in.
            status: Preferred|Active|Deprecated|Pending
            type: Major|Incremental|UserDefined
            updatedAt: 2020-01-01T00:00:00Z
            version: "3.0"
          - autoApproveSubscription: false
            baseVersion: "3.0"
            createdAt: 2020-01-01T00:00:00Z
            createdBy: John Doe
            description: Labore facilis officia placeat autem optio porro.
            enabledFeatures:
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            features:
              LOGS: true
              METRICS: false
            instanceCount: 12
            latestUpgradePathId: upgrade-12345678
            name: Regular version set
            parentVersion: "2.0"
            productTierId: Beatae beatae.
            releasedAt: 2020-01-01T00:00:00Z
            releasedBy: John Doe
            resources:
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            serviceId: s-12345678
            serviceModelId: Deserunt ab est sequi rem ab in.
            status: Preferred|Active|Deprecated|Pending
            type: Major|Incremental|UserDefined
            updatedAt: 2020-01-01T00:00:00Z
            version: "3.0"
          - autoApproveSubscription: false
            baseVersion: "3.0"
            createdAt: 2020-01-01T00:00:00Z
            createdBy: John Doe
            description: Labore facilis officia placeat autem optio porro.
            enabledFeatures:
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            features:
              LOGS: true
              METRICS: false
            instanceCount: 12
            latestUpgradePathId: upgrade-12345678
            name: Regular version set
            parentVersion: "2.0"
            productTierId: Beatae beatae.
            releasedAt: 2020-01-01T00:00:00Z
            releasedBy: John Doe
            resources:
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
              urlKey: myResource
            serviceId: s-12345678
            serviceModelId: Deserunt ab est sequi rem ab in.
            status: Preferred|Active|Deprecated|Pending
            type: Major|Incremental|UserDefined
            updatedAt: 2020-01-01T00:00:00Z
            version: "3.0"
          items:
            $ref: "#/components/schemas/TierVersionSet"
          type: array
      required:
      - tierVersionSets
      type: object
    ListUpgradePathRequest:
      example:
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        token: vr6
      properties:
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: z
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListUpgradePathResult:
      example:
        ids:
        - up-12345678
        - up-87654321
        nextPageToken: next-token
      properties:
        ids:
          description: List of upgrade path IDs
          example:
          - up-12345678
          - up-87654321
          items:
            description: ID of an Upgrade Path
            example: Tempora recusandae aliquid nihil enim.
            type: string
          type: array
        nextPageToken:
          description: Token to use to get the next page of results
          example: next-token
          type: string
      type: object
    ListVUnitsRequest:
      example:
        cloudProvider: aws
        region: us-west-2
        serviceId: s-12345678
        serviceModelId: sm-12345678
        token: 9mn
      properties:
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        region:
          description: Region code specific to the cloud-provider
          example: us-west-2
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Officiis ea aliquid ut deleniti.
          type: string
        token:
          description: JWT token used to perform authorization
          example: rq
          minLength: 1
          type: string
      required:
      - cloudProvider
      - region
      - serviceId
      - serviceModelId
      - token
      type: object
    ListVUnitsRequest2:
      example:
        cloudProvider: aws|azure|gcp|all
        region: us-west-2
      properties:
        cloudProvider:
          description: The infra / cloud provider name
          example: aws|azure|gcp|all
          type: string
        region:
          description: Region code specific to the cloud-provider
          example: us-west-2
          type: string
      required:
      - cloudProvider
      - region
      type: object
    ListVUnitsResult:
      example:
        ids:
          aws:
          - vu-12345678
          - vu-abcdefgh
          gcp:
          - vu-1234efgh
        nextPageToken: next-token
      properties:
        ids:
          additionalProperties:
            example:
            - Inventore officiis.
            - Inventore officiis.
            - Inventore officiis.
            - Inventore officiis.
            items:
              description: ID of a VUnit
              example: Eos placeat aut.
              type: string
            type: array
          description: List of VUnit IDs per Cloud provider
          example:
            aws:
            - vu-12345678
            - vu-abcdefgh
            gcp:
            - vu-1234efgh
          type: object
        nextPageToken:
          description: Next page token
          example: next-token
          type: string
      type: object
    LoadBalancerPathConfiguration:
      example:
        associatedKubernetesServiceName: my-service
        associatedResourceID: r-12345678
        path: /path
        port: 8080
      properties:
        associatedKubernetesServiceName:
          description: Override the default target Kubernetes service name with this
            value
          example: my-service
          type: string
        associatedResourceID:
          description: ID of a resource
          example: Aut voluptas molestiae impedit exercitationem dolores.
          type: string
        path:
          description: The REST API path backed by the load balancer
          example: /path
          type: string
        port:
          description: The port to forward traffic to
          example: 8080
          format: int64
          type: integer
      required:
      - associatedResourceID
      - path
      - port
      type: object
    LoginWithIdentityProviderRequest:
      example:
        authorizationCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        deviceCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
        identityProviderName: Google
        invitedEmail: abc@gmail.com
        legalCompanyName: mywebsite
        redirectUri: https://www.example/redirect
      properties:
        authorizationCode:
          description: The authorization code from the Identity Provider
          example: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
          type: string
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        deviceCode:
          description: The device code from the Identity Provider
          example: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
          type: string
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        invitedEmail:
          description: Email address that the user was invited with
          example: abc@gmail.com
          format: email
          type: string
        legalCompanyName:
          example: mywebsite
          minLength: 1
          type: string
        redirectUri:
          description: The redirect URI used to get the authorization code
          example: https://www.example/redirect
          type: string
      required:
      - identityProviderName
      type: object
    LoginWithIdentityProviderResult:
      example:
        jwtToken: ""
      properties:
        jwtToken:
          description: The jwt token
          example: ""
          type: string
      required:
      - jwtToken
      type: object
    LogoutRequest:
      example:
        token: 4h
      properties:
        token:
          description: JWT token used to perform authorization
          example: xm
          minLength: 1
          type: string
      required:
      - token
      type: object
    ModifyServiceProviderOrganizationRequest:
      example:
        DeploymentCellConfigurations:
          PROD:
            DeploymentCellConfigurationPerCloudProvider:
              AWS:
                Amenities:
                - Description: Ensures high availability across multiple zones.
                  IsManaged: true
                  Name: Prometheus
                  Type: HelmChart
                - Description: Provides dashboards and visualizations.
                  IsManaged: false
                  Name: Grafana
                  Properties:
                    ChartName: grafana
                    ChartValues:
                      adminPassword: securepassword
                      adminUser: admin
                    ChartVersion: 6.17.4
                    RepoURL: https://grafana.github.io/helm-charts
                  Type: HelmChart
        token: k
      properties:
        DeploymentCellConfigurations:
          additionalProperties:
            $ref: "#/components/schemas/DeploymentCellConfigurations"
          description: The default deployment cell configurations for the organization
            per environment.
          example:
            PROD:
              DeploymentCellConfigurationPerCloudProvider:
                AWS:
                  Amenities:
                  - Description: Ensures high availability across multiple zones.
                    IsManaged: true
                    Name: Prometheus
                    Type: HelmChart
                  - Description: Provides dashboards and visualizations.
                    IsManaged: false
                    Name: Grafana
                    Properties:
                      ChartName: grafana
                      ChartValues:
                        adminPassword: securepassword
                        adminUser: admin
                      ChartVersion: 6.17.4
                      RepoURL: https://grafana.github.io/helm-charts
                    Type: HelmChart
          type: object
        token:
          description: JWT token used to perform authorization
          example: e
          minLength: 1
          type: string
      required:
      - token
      type: object
    ModifyServiceProviderOrganizationRequest2:
      example:
        DeploymentCellConfigurations:
          PROD:
            DeploymentCellConfigurationPerCloudProvider:
              AWS:
                Amenities:
                - Description: Ensures high availability across multiple zones.
                  IsManaged: true
                  Name: Prometheus
                  Type: HelmChart
                - Description: Provides dashboards and visualizations.
                  IsManaged: false
                  Name: Grafana
                  Properties:
                    ChartName: grafana
                    ChartValues:
                      adminPassword: securepassword
                      adminUser: admin
                    ChartVersion: 6.17.4
                    RepoURL: https://grafana.github.io/helm-charts
                  Type: HelmChart
      properties:
        DeploymentCellConfigurations:
          additionalProperties:
            $ref: "#/components/schemas/DeploymentCellConfigurations"
          description: The default deployment cell configurations for the organization
            per environment.
          example:
            PROD:
              DeploymentCellConfigurationPerCloudProvider:
                AWS:
                  Amenities:
                  - Description: Ensures high availability across multiple zones.
                    IsManaged: true
                    Name: Prometheus
                    Type: HelmChart
                  - Description: Provides dashboards and visualizations.
                    IsManaged: false
                    Name: Grafana
                    Properties:
                      ChartName: grafana
                      ChartValues:
                        adminPassword: securepassword
                        adminUser: admin
                      ChartVersion: 6.17.4
                      RepoURL: https://grafana.github.io/helm-charts
                    Type: HelmChart
          type: object
      type: object
    ModifyServicesOrchestrationRequest:
      example:
        id: so-12345678
        orchestrationModifyDSL: Omnis aliquam quia qui perferendis.
        token: kt9
      properties:
        id:
          description: ID of a Services Orchestration
          example: A assumenda iusto aspernatur voluptate.
          type: string
        orchestrationModifyDSL:
          description: base64 encoded content of services orchestration modify DSL
          example: Ratione perspiciatis ut eius dignissimos velit eius.
          type: string
        token:
          description: JWT token used to perform authorization
          example: "6"
          minLength: 1
          type: string
      required:
      - id
      - orchestrationModifyDSL
      - token
      type: object
    ModifyServicesOrchestrationRequest2:
      example:
        orchestrationModifyDSL: Repudiandae totam qui quis.
      properties:
        orchestrationModifyDSL:
          description: base64 encoded content of services orchestration modify DSL
          example: Amet quasi in aut est aut et.
          type: string
      required:
      - orchestrationModifyDSL
      type: object
    NetworkFeaturesConfiguration:
      example:
        isPrivateLinkEnabled: true
      properties:
        isPrivateLinkEnabled:
          description: Indicates if PrivateLink is enabled for the network
          example: true
          type: boolean
      type: object
    NodeHealthSummary:
      example:
        availabilityZone: us-east-2a
        connectivityStatus: HEALTHY
        diskHealth: HEALTHY
        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
        integrationsHealth:
          CustomerObservabilityHealth: HEALTHY
          InternalObservabilityHealth: HEALTHY
        loadStatus: LOAD_NORMAL
        nodeHealth: HEALTHY
        nodeName: postgres-0
        ports:
        - 80
        - 443
        processHealth: HEALTHY
        processLiveness: HEALTHY
        status: HEALTHY
      properties:
        availabilityZone:
          description: The availability zone of the node
          example: us-east-2a
          type: string
        connectivityStatus:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        diskHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        endpoint:
          description: The endpoint of the node
          example: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          type: string
        integrationsHealth:
          $ref: "#/components/schemas/IntegrationsHealth"
        loadStatus:
          description: The load status of a pod
          example: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          type: string
        nodeHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        nodeName:
          description: The name of the node
          example: postgres-0
          type: string
        ports:
          description: The ports that this node exposes
          example:
          - 80
          - 443
          items:
            example: 1456112072570074949
            format: int64
            type: integer
          type: array
        processHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        processLiveness:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        status:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
      type: object
    NodeNetworkTopologyResult:
      example:
        availabilityZone: us-east-2a
        detailedHealth:
          ConnectivityStatus: UNHEALTHY
          DiskHealth: UNKNOWN
          LoadStatus: LOAD_NORMAL
          NodeHealth: HEALTHY
          ProcessHealth: HEALTHY
          ProcessLiveness: HEALTHY
        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
        healthStatus: HEALTHY
        id: primary-0
        kubernetesDashboardEndpoint:
          dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
          deploymentCellID: hc-12345678
        ports:
        - 80
        - 443
        status: RUNNING
        storageSize: 10
        vmInfo:
          architecture: amd64
          azCode: us-east-1a
          azID: use1-az1
          externalIP: 3.44.113.6
          instanceType: t2.small
          internalIP: 192.168.1.4
          k8sNodeName: my-k8s-node
          kernelVersion: 5.10.228
          kubeletVersion: 1.31.3
          os: linux
          providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
      properties:
        availabilityZone:
          description: The availability zone of the node
          example: us-east-2a
          type: string
        detailedHealth:
          $ref: "#/components/schemas/DetailedNodeHealthResult"
        endpoint:
          description: The endpoint of the node
          example: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          type: string
        healthStatus:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        id:
          description: The ID of the node
          example: primary-0
          type: string
        kubernetesDashboardEndpoint:
          $ref: "#/components/schemas/KubernetesDashboardEndpoint"
        ports:
          description: The ports that this node exposes
          example:
          - 80
          - 443
          items:
            example: 4157247430733539847
            format: int64
            type: integer
          type: array
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        storageSize:
          description: The storage size of the node in GiB
          example: 10
          format: int64
          type: integer
        vmInfo:
          $ref: "#/components/schemas/NodeVMInfoResult"
      type: object
    NodeVMInfoResult:
      example:
        architecture: amd64
        azCode: us-east-1a
        azID: use1-az1
        externalIP: 3.44.53.111
        instanceType: t2.small
        internalIP: 192.168.1.4
        k8sNodeName: my-k8s-node
        kernelVersion: 5.10.228
        kubeletVersion: 1.31.3
        os: linux
        providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
      properties:
        architecture:
          description: The architecture of the VM
          example: amd64
          type: string
        azCode:
          description: The availability zone code of the VM
          example: us-east-1a
          type: string
        azID:
          description: The availability zone ID of the VM
          example: use1-az1
          type: string
        externalIP:
          description: The external IP of the VM
          example: 3.44.53.111
          type: string
        instanceType:
          description: The instance type of the VM
          example: t2.small
          type: string
        internalIP:
          description: The internal IP of the VM
          example: 192.168.1.4
          type: string
        k8sNodeName:
          description: The k8s node name of the VM
          example: my-k8s-node
          type: string
        kernelVersion:
          description: The kernel version of the VM
          example: 5.10.228
          type: string
        kubeletVersion:
          description: The kubelet version of the VM
          example: 1.31.3
          type: string
        os:
          description: The operating system of the VM
          example: linux
          type: string
        providerID:
          description: The provider ID of the VM
          example: aws:///ap-south-1b/i-06h696g4a643ahf01
          type: string
      required:
      - architecture
      - azCode
      - instanceType
      - internalIP
      - k8sNodeName
      - kubeletVersion
      - os
      - providerID
      type: object
    OmnistrateError:
      example:
        code: 12-999
        message: Required field `x` was not provided in the request
        name: missing_field
      properties:
        code:
          description: Application-specific error code
          example: 12-999
          type: string
        message:
          description: More context on the error that occurred
          example: Required field `x` was not provided in the request
          type: string
        name:
          description: Name of the error
          example: missing_field
          type: string
      required:
      - code
      - message
      - name
      type: object
    OmnistrateServiceHealthResult:
      example:
        status: RUNNING
      properties:
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
      required:
      - status
      type: object
    OmnistrateServiceVersionResult:
      example:
        apiVersion: "1.0"
        buildCommitSHA: 1234567890abcdef1234567890abcdef12345678
        buildTimestamp: 2020-01-01T00:00:00Z
      properties:
        apiVersion:
          description: Version of the Entity to operate on
          example: "1.0"
          minLength: 1
          type: string
        buildCommitSHA:
          description: The commit hash of the build
          example: 1234567890abcdef1234567890abcdef12345678
          type: string
        buildTimestamp:
          description: The timestamp of the build
          example: 2020-01-01T00:00:00Z
          type: string
      required:
      - apiVersion
      - buildCommitSHA
      - buildTimestamp
      type: object
    OnPremCustomUserScript:
      example:
        content: echo 'Hello World'
      properties:
        content:
          description: Custom user script content
          example: echo 'Hello World'
          type: string
      required:
      - content
      type: object
    OnPremInstallerTools:
      example:
        helperUserScript:
          content: echo 'Hello World'
      properties:
        helperUserScript:
          $ref: "#/components/schemas/OnPremCustomUserScript"
      type: object
    OnPremTerraformConfigurations:
      additionalProperties:
        $ref: "#/components/schemas/TerraformConfiguration"
      description: The Terraform configurations for an OnPrem platform
      example:
        OpenShift:
          gitConfiguration:
            referenceName: ref
            repositoryUrl: gitUrl
          privateModuleGitAccessTokens:
            tokenName: accessToken
          terraformPath: /project1/tf
      type: object
    OperatorCRDConfiguration:
      example:
        disableReconciliation: true
        endpointConfiguration:
          admin:
            host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
            networkingType: PRIVATE
            ports:
            - 8080
            - 8081
            primary: false
          cluster:
            host: https://my-endpoint.com
            networkingType: PUBLIC
            ports:
            - 8080
            - 8081
            primary: true
        helmChartDependencies:
        - chartName: cert-manager
          chartVersion: v1.5.3
        - chartName: nginx-ingress
          chartVersion: v0.48.1
        - chartName: external-dns
          chartVersion: v0.7.0
        - chartName: cnpg-operator
          chartVersion: v0.23.1
        outputParameters:
          expiresAt: $out.status.notAfter
          issuerName: letsencrypt-prod
        readinessConditions:
          $out.status.conditions[?(@.type=='Ready')].status: true
        supplementalFiles:
        - |
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: letsencrypt-prod
          spec:
            acme:
              server: https://acme-v02.api.letsencrypt.org/directory
        - |-
          apiVersion: ingress.nginx.io/v1
          kind: IngressClass
          metadata:
            name: nginx
          spec:
            controller: nginx.org/ingress-controller
        template: |-
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: letsencrypt-prod
          spec:
            acme:
              server: https://acme-v02.api.letsencrypt.org/directory
              email: test@example.com
              privateKeySecretRef:
                name: letsencrypt-prod
              solvers:
              - http01:
                  ingress:
                    class: nginx
      properties:
        disableReconciliation:
          description: Flag to disable drift reconciliation for the Operator CRD and
            its supplemental files
          example: true
          type: boolean
        endpointConfiguration:
          additionalProperties:
            $ref: "#/components/schemas/Endpoint"
          description: The endpoints from the Operator CRD Deployment to expose to
            the customer
          example:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          type: object
        helmChartDependencies:
          description: The helm chart dependencies for the CRD (including charts necessary
            to manage the operator) - Optional
          example:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          items:
            $ref: "#/components/schemas/OperatorHelmChartDependency"
          type: array
        outputParameters:
          additionalProperties:
            example: Maxime et adipisci ut odit dolor.
            type: string
          description: The output parameters to export to the user from the CRD
          example:
            expiresAt: $out.status.notAfter
            issuerName: letsencrypt-prod
          type: object
        readinessConditions:
          additionalProperties: true
          description: The readiness conditions to check for the CRD
          example:
            $out.status.conditions[?(@.type=='Ready')].status: true
          type: object
        supplementalFiles:
          description: The supplemental files to apply with the CRD
          example:
          - |
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
          - |-
            apiVersion: ingress.nginx.io/v1
            kind: IngressClass
            metadata:
              name: nginx
            spec:
              controller: nginx.org/ingress-controller
          items:
            example: Sit in fugit sit accusantium molestias dolores.
            type: string
          type: array
        template:
          description: The template of the CRD to apply on every deployment
          example: |-
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
                email: test@example.com
                privateKeySecretRef:
                  name: letsencrypt-prod
                solvers:
                - http01:
                    ingress:
                      class: nginx
          type: string
      required:
      - template
      type: object
    OperatorHelmChartDependency:
      example:
        chartName: cert-manager
        chartRepoName: my-repo
        chartRepoUrl: https://my-repo.com
        chartValues:
          key1: value1
          key2: 3
          key3:
            key4: value4
        chartVersion: v1.5.3
        layeredChartValues:
        - name: my-layer
          scope:
            '{{ $sys.cloudProviderName }}': aws
          values:
            global:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: omnistrate.com/managed-by
                        operator: In
                        values:
                        - omnistrate
          valuesFile:
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            path: helm/values/production.yaml
        - name: my-layer
          scope:
            '{{ $sys.cloudProviderName }}': aws
          values:
            global:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: omnistrate.com/managed-by
                        operator: In
                        values:
                        - omnistrate
          valuesFile:
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            path: helm/values/production.yaml
        - name: my-layer
          scope:
            '{{ $sys.cloudProviderName }}': aws
          values:
            global:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: omnistrate.com/managed-by
                        operator: In
                        values:
                        - omnistrate
          valuesFile:
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            path: helm/values/production.yaml
        - name: my-layer
          scope:
            '{{ $sys.cloudProviderName }}': aws
          values:
            global:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: omnistrate.com/managed-by
                        operator: In
                        values:
                        - omnistrate
          valuesFile:
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            path: helm/values/production.yaml
        password: my-password
        username: my-user
      properties:
        chartName:
          description: The name of the helm chart
          example: cert-manager
          type: string
        chartRepoName:
          description: The repository name of the Helm chart
          example: my-repo
          type: string
        chartRepoUrl:
          description: The repository URL of the Helm chart
          example: https://my-repo.com
          type: string
        chartValues:
          additionalProperties: true
          description: The values of the Helm chart (mutually exclusive with layeredChartValues)
          example:
            key1: value1
            key2: 3
            key3:
              key4: value4
          type: object
        chartVersion:
          description: The version of the helm chart
          example: v1.5.3
          type: string
        layeredChartValues:
          description: Layered chart values configuration with conditional scoping
            (mutually exclusive with chartValues). Values are processed in order -
            later entries override earlier ones for the same keys.
          example:
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          items:
            $ref: "#/components/schemas/ChartValuesRef"
          type: array
        password:
          description: The password to authenticate with the registry
          example: my-password
          type: string
        username:
          description: The username to authenticate with the registry
          example: my-user
          type: string
      required:
      - chartName
      - chartVersion
      type: object
    OrgUsers:
      example:
        email: abc@gmail.com
        invitedAt: 2023-01-10T00:00:00Z
        name: John Dae
        roleType: reader
        userId: user-abcd1234
      properties:
        email:
          description: The email of the user
          example: abc@gmail.com
          type: string
        invitedAt:
          description: The time when the user was invited
          example: 2023-01-10T00:00:00Z
          type: string
        name:
          description: The name of the user
          example: John Dae
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        userId:
          description: The User ID
          example: user-abcd1234
          type: string
      required:
      - email
      - invitedAt
      - name
      - roleType
      - userId
      type: object
    OutputParameterEntity:
      example:
        custom: false
        description: The name of the server
        displayName: Server Name
        isList: false
        key: serverName
        type: Boolean|Float64|String|JSON|Resource
      properties:
        custom:
          description: Whether the parameter is custom
          example: false
          type: boolean
        description:
          description: The parameter description
          example: The name of the server
          type: string
        displayName:
          description: The parameter display name
          example: Server Name
          type: string
        isList:
          description: Whether the parameter is a list
          example: false
          type: boolean
        key:
          description: The parameter key
          example: serverName
          type: string
        type:
          description: The parameter type
          example: Boolean|Float64|String|JSON|Resource
          type: string
      required:
      - custom
      - description
      - displayName
      - isList
      - key
      - type
      type: object
    PerCloudProviderConfigReadiness:
      additionalProperties:
        example: Voluptatibus eligendi voluptas enim voluptas vel accusamus.
        type: string
      description: The readiness of the cloud provider configuration
      example:
        resourceA: missing terraform configuration
        resourceB: missing cloudformation configuration
      type: object
    PrivateLinkConfiguration:
      example:
        awsPrivateLinkConfigurations:
        - port: 80
          targetGroupName: my-target-group
        - port: 80
          targetGroupName: my-target-group
      properties:
        awsPrivateLinkConfigurations:
          description: The list of private link configurations
          example:
          - port: 80
            targetGroupName: my-target-group
          - port: 80
            targetGroupName: my-target-group
          items:
            $ref: "#/components/schemas/AWSPrivateLinkConfiguration"
          type: array
      type: object
    PrivateNetworkingConfiguration:
      description: The private networking configuration for the network config
      example:
        privateLinkConfiguration:
          awsPrivateLinkConfigurations:
          - port: 80
            targetGroupName: my-target-group
          - port: 80
            targetGroupName: my-target-group
      properties:
        privateLinkConfiguration:
          $ref: "#/components/schemas/PrivateLinkConfiguration"
      type: object
    ProductTierDeploymentConfiguration:
      example:
        onPremInstallerTools:
          helperUserScript:
            content: echo 'Hello World'
        requirements:
          minimumK8sVersion: 1.23.1
      properties:
        onPremInstallerTools:
          $ref: "#/components/schemas/OnPremInstallerTools"
        requirements:
          $ref: "#/components/schemas/ProductTierDeploymentRequirements"
      type: object
    ProductTierDeploymentRequirements:
      example:
        minimumK8sVersion: 1.23.1
      properties:
        minimumK8sVersion:
          description: Minimum Kubernetes version for OnPrem deployment
          example: 1.23.1
          type: string
      type: object
    ProductTierFeatureDetail:
      example:
        configuration:
          provider: native
        feature: LOGS
        scope: INTERNAL
      properties:
        configuration:
          additionalProperties: true
          description: The configuration parameters of the product tier feature
          example:
            provider: native
          type: object
        feature:
          description: ProductTierFeatureType is to enable / disable features per
            product tier
          example: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
          type: string
        scope:
          description: ProductTierFeatureScope defines scope of the feature within
            product tier
          example: INTERNAL|CUSTOMER
          type: string
      type: object
    PromoteServiceEnvironmentRequest:
      example:
        id: se-12345678
        productTierId: pt-12345678
        serviceId: s-12345678
        token: "3"
      properties:
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        productTierId:
          description: ID of a Product Tier
          example: At est sunt sint qui.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: r
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    PromoteServiceEnvironmentRequest2:
      example:
        productTierId: Optio quia ea eligendi delectus iusto laborum.
      properties:
        productTierId:
          description: The ID of the product tier to use for the promotion
          example: Est ipsam voluptatibus tempora perferendis repudiandae omnis.
          type: string
      type: object
    PromoteServiceEnvironmentStatusRequest:
      example:
        id: se-12345678
        serviceId: s-12345678
        token: "196"
      properties:
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 1za
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    PromoteServiceEnvironmentStatusResult:
      example:
      - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
        targetEnvironmentID: se-12345678
      - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
        targetEnvironmentID: se-12345678
      - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
        targetEnvironmentID: se-12345678
      - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
        targetEnvironmentID: se-12345678
      items:
        $ref: "#/components/schemas/EnvironmentPromotionStatus"
      type: array
    PromoteTierVersionSetRequest:
      example:
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: m8g
        version: "3.0"
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Id quaerat porro ut ea.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: h
          minLength: 1
          type: string
        version:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
      required:
      - productTierId
      - serviceId
      - token
      - version
      type: object
    ProxyEndpoint:
      example:
        openPorts:
        - "30000"
        - "30001"
        proxyEndpoint: https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
      properties:
        openPorts:
          example:
          - "30000"
          - "30001"
          items:
            example: Rem expedita.
            type: string
          type: array
        proxyEndpoint:
          example: https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
          type: string
      type: object
    PublicNetworkingConfiguration:
      description: The public networking configuration for the network config
      example:
        enableClusterLoadBalancer: true
        enableNodeLoadBalancer: true
      properties:
        enableClusterLoadBalancer:
          description: Enable a single load balancer for all replicas
          example: true
          type: boolean
        enableNodeLoadBalancer:
          description: Create an external node load balancer per node rather than
            exposing the node ip directly
          example: true
          type: boolean
      type: object
    RecentDeploymentFailureStatus:
      description: The status of the recent deployment failure
      example:
        failedAt: 2021-09-01T00:00:00Z
        failureReason: Failed to connect to the database
      properties:
        failedAt:
          description: The time at which the deployment failed
          example: 2021-09-01T00:00:00Z
          type: string
        failureReason:
          description: The reason for the deployment failure
          example: Failed to connect to the database
          type: string
      type: object
    RegenerateTokenRequest:
      example:
        id: user-abcd1234
      properties:
        id:
          example: user-abcd1234
          minLength: 1
          type: string
      required:
      - id
      type: object
    RegionalHealthSummary:
      example:
        deployingInstances: 9223163895314272001
        deploymentCellHealthSummary:
          Adipisci dolorem magni repellat eaque et corporis.:
            deployingInstances: 2815081149714630162
            healthyInstances: 4560033033971347510
            hostClusterID: hc-12345678
            message: Cell is healthy
            status: Healthy
            totalInstances: 2958002397655630058
            unhealthyInstances: 862492030087821158
            unknownInstances: 7745684624529770236
        healthyInstances: 4633770721158074703
        message: Region is healthy
        region: us-east-1
        status: Healthy
        totalInstances: 2038311391697792469
        unhealthyInstances: 2873727739948501989
        unknownInstances: 2845778066964537276
      properties:
        deployingInstances:
          description: The number of instances currently deploying
          example: 8118318740694763516
          format: int64
          type: integer
        deploymentCellHealthSummary:
          additionalProperties:
            $ref: "#/components/schemas/DeploymentCellHealthSummary"
          description: The summary of health by deployment cell
          example:
            Adipisci dolorem magni repellat eaque et corporis.:
              deployingInstances: 2815081149714630162
              healthyInstances: 4560033033971347510
              hostClusterID: hc-12345678
              message: Cell is healthy
              status: Healthy
              totalInstances: 2958002397655630058
              unhealthyInstances: 862492030087821158
              unknownInstances: 7745684624529770236
          type: object
        healthyInstances:
          description: The number of healthy instances in the region
          example: 8560641211731294966
          format: int64
          type: integer
        message:
          description: The status message
          example: Region is healthy
          type: string
        region:
          description: The region
          example: us-east-1
          type: string
        status:
          description: The status of the region
          example: Healthy
          type: string
        totalInstances:
          description: The total number of instances in the region
          example: 3927665351360310363
          format: int64
          type: integer
        unhealthyInstances:
          description: The number of unhealthy instances in the region
          example: 4688983098534669598
          format: int64
          type: integer
        unknownInstances:
          description: The number of instances with unknown status
          example: 810173738671376614
          format: int64
          type: integer
      required:
      - cloudProvider
      - deployingInstances
      - deploymentCellHealthSummary
      - healthyInstances
      - message
      - region
      - status
      - totalInstances
      - unhealthyInstances
      type: object
    RegisterActionHookRequest:
      example:
        commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
        customCommand:
        - /bin/sh
        - -c
        customImage: my-custom-image:latest
        id: r-12345678
        scope: CLUSTER
        serviceId: s-12345678
        token: gf
        type: ADD
      properties:
        commandTemplate:
          description: The Base64 encoded command template to execute
          example: ZWNobyAiaGVsbG8gd29ybGQi
          type: string
        customCommand:
          description: The custom command to execute the hook with
          example:
          - /bin/sh
          - -c
          items:
            example: Consequatur dolor aut ut ut ad.
            type: string
          type: array
        customImage:
          description: The custom image to execute the hook
          example: my-custom-image:latest
          type: string
        id:
          description: ID of a resource
          example: Asperiores deleniti itaque dolores et omnis.
          type: string
        scope:
          description: The scope of the hook
          example: CLUSTER|NODE
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 1dj
          minLength: 1
          type: string
        type:
          description: The type of hook to execute
          example: INIT|ADD|REMOVE|PROMOTE|DEMOTE|HEALTH_CHECK|READINESS_CHECK|STARTUP_CHECK|PRE_START|POST_START|PRE_UPGRADE|POST_UPGRADE|PRE_STOP|POST_STOP
          type: string
      required:
      - commandTemplate
      - id
      - scope
      - serviceId
      - token
      - type
      type: object
    RegisterActionHookRequest2:
      example:
        commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
        customCommand:
        - /bin/sh
        - -c
        customImage: my-custom-image:latest
        scope: CLUSTER|NODE
        type: INIT|ADD|REMOVE|PROMOTE|DEMOTE|HEALTH_CHECK|READINESS_CHECK|STARTUP_CHECK|PRE_START|POST_START|PRE_UPGRADE|POST_UPGRADE|PRE_STOP|POST_STOP
      properties:
        commandTemplate:
          description: The Base64 encoded command template to execute
          example: ZWNobyAiaGVsbG8gd29ybGQi
          type: string
        customCommand:
          description: The custom command to execute the hook with
          example:
          - /bin/sh
          - -c
          items:
            example: Omnis suscipit optio voluptatibus aut at ut.
            type: string
          type: array
        customImage:
          description: The custom image to execute the hook
          example: my-custom-image:latest
          type: string
        scope:
          description: The scope of the hook
          example: CLUSTER|NODE
          type: string
        type:
          description: The type of hook to execute
          example: INIT|ADD|REMOVE|PROMOTE|DEMOTE|HEALTH_CHECK|READINESS_CHECK|STARTUP_CHECK|PRE_START|POST_START|PRE_UPGRADE|POST_UPGRADE|PRE_STOP|POST_STOP
          type: string
      required:
      - commandTemplate
      - scope
      - type
      type: object
    RegisterResourceMetricsConfigRequest:
      example:
        id: r-12345678
        metricEndpoint: http://localhost:9187/metrics
        serviceId: s-12345678
        token: rn
      properties:
        id:
          description: ID of a resource
          example: Necessitatibus aliquid consequatur tempore nihil cupiditate.
          type: string
        metricEndpoint:
          description: The local host endpoint to supply prometheus metric
          example: http://localhost:9187/metrics
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "5"
          minLength: 1
          type: string
      required:
      - id
      - metricEndpoint
      - serviceId
      - token
      type: object
    RegisterResourceMetricsConfigRequest2:
      example:
        metricEndpoint: http://localhost:9187/metrics
      properties:
        metricEndpoint:
          description: The local host endpoint to supply prometheus metric
          example: http://localhost:9187/metrics
          type: string
      required:
      - metricEndpoint
      type: object
    ReleaseImageConfigRequest:
      description: Release a new image configuration
      example:
        id: imgc-12345678
        productTierId: pt-12345678
        serviceId: s-12345678
        token: gf
      properties:
        id:
          description: ID of an Image Config
          example: Provident nisi rerum cumque non ullam.
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Quo magnam illo.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: c
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ReleaseImageConfigRequest2:
      example:
        productTierId: Eaque recusandae et.
      properties:
        productTierId:
          description: The product tier ID
          example: Inventore suscipit eum.
          type: string
      type: object
    ReleaseInfraConfigRequest:
      example:
        id: ic-12345678
        productTierId: pt-12345678
        serviceId: s-12345678
        token: lrm
      properties:
        id:
          description: ID of an Infra Config
          example: Illum quia enim.
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Officiis ducimus minima voluptates quidem pariatur.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "94"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ReleaseInfraConfigRequest2:
      example:
        productTierId: Dolore quisquam aut doloribus.
      properties:
        productTierId:
          description: The product tier ID
          example: Quia ex mollitia exercitationem.
          type: string
      type: object
    ReleaseServiceAPIRequest:
      example:
        copySpecFromPreviousVersion: false
        dryRun: false
        id: sa-12345678
        isPreferred: true
        productTierId: pt-12345678
        serviceId: s-12345678
        token: eh
        versionSetName: v1
        versionSetType: Major|Incremental|UserDefined
      properties:
        copySpecFromPreviousVersion:
          default: false
          description: "When true, copies the specification from the previous version\
            \ during the release operation."
          example: false
          type: boolean
        dryRun:
          default: false
          description: "When true, performs a dry run of the release operation without\
            \ making any actual changes to the current pending changes and the service\
            \ API."
          example: false
          type: boolean
        id:
          description: ID of a Service API
          example: Qui debitis et.
          type: string
        isPreferred:
          default: false
          description: Indicates whether this version set is preferred.
          example: true
          type: boolean
        productTierId:
          description: ID of a Product Tier
          example: Suscipit veritatis et pariatur deleniti.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ek
          minLength: 1
          type: string
        versionSetName:
          description: The name of the version set to release
          example: v1
          type: string
        versionSetType:
          description: The version-set type of the product-tier.
          example: Major|Incremental|UserDefined
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ReleaseServiceAPIRequest2:
      example:
        copySpecFromPreviousVersion: false
        dryRun: false
        isPreferred: true
        productTierId: Facere ratione et qui omnis vitae.
        versionSetName: v1
        versionSetType: Major|Incremental|UserDefined
      properties:
        copySpecFromPreviousVersion:
          default: false
          description: "When true, copies the specification from the previous version\
            \ during the release operation."
          example: false
          type: boolean
        dryRun:
          default: false
          description: "When true, performs a dry run of the release operation without\
            \ making any actual changes to the current pending changes and the service\
            \ API."
          example: false
          type: boolean
        isPreferred:
          default: false
          description: Indicates whether this version set is preferred.
          example: true
          type: boolean
        productTierId:
          description: The product tier ID
          example: Sapiente repellendus cumque.
          type: string
        versionSetName:
          description: The name of the version set to release
          example: v1
          type: string
        versionSetType:
          description: The version-set type of the product-tier.
          example: Major|Incremental|UserDefined
          type: string
      type: object
    ReleaseServiceModelRequest:
      example:
        id: sm-12345678
        serviceId: s-12345678
        token: mdy
      properties:
        id:
          description: ID of a Service Model
          example: Ut reiciendis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 84b
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ReleaseServiceModelResult:
      example:
        status: READY
      properties:
        status:
          description: The release status of the service model
          example: DEPLOYING|READY|PENDING|FAILED|NOT_CONFIGURED
          type: string
      required:
      - status
      type: object
    ReleaseTierVersionSetRequest:
      example:
        isPreferred: true
        name: Major version set
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: l85
        version: "3.0"
      properties:
        isPreferred:
          description: Indicates whether this version set is preferred.
          example: true
          type: boolean
        name:
          description: The name of the product-tier version set.
          example: Major version set
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Eveniet voluptas cumque.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: p
          minLength: 1
          type: string
        version:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
      required:
      - productTierId
      - serviceId
      - token
      - version
      type: object
    ReleaseTierVersionSetRequest2:
      example:
        isPreferred: true
        name: Major version set
      properties:
        isPreferred:
          description: Indicates whether this version set is preferred.
          example: true
          type: boolean
        name:
          description: The name of the product-tier version set.
          example: Major version set
          type: string
      type: object
    RemoveAccountConfigFromServiceModelRequest:
      example:
        accountConfigId: ac-12345678
        id: sm-12345678
        serviceId: s-12345678
        token: yz
      properties:
        accountConfigId:
          description: ID of an Account Config
          example: Sunt sit dolores.
          type: string
        id:
          description: ID of a Service Model
          example: Fugit aut.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 9v
          minLength: 1
          type: string
      required:
      - accountConfigId
      - id
      - serviceId
      - token
      type: object
    RemoveAccountConfigFromServiceModelRequest2:
      example:
        accountConfigId: Quis culpa.
      properties:
        accountConfigId:
          description: The infrastructure account configuration ID
          example: Voluptas dicta est eius hic voluptatem quasi.
          type: string
      required:
      - accountConfigId
      type: object
    RemoveCapacityFromResourceInstanceRequest:
      example:
        capacityToBeRemoved: 3
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: f0
      properties:
        capacityToBeRemoved:
          description: Number of replicas to be removed
          example: 3
          format: int64
          type: integer
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Dicta consequatur alias qui.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: k
          minLength: 1
          type: string
      required:
      - capacityToBeRemoved
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    RemoveCapacityFromResourceInstanceRequest2:
      example:
        capacityToBeRemoved: 3
      properties:
        capacityToBeRemoved:
          description: Number of replicas to be removed
          example: 3
          format: int64
          type: integer
      required:
      - capacityToBeRemoved
      type: object
    RemoveComputeInstanceTypeRequest:
      example:
        cloudProviderName: aws
        id: cc-12345678
        instanceType: t3.micro
        serviceId: s-12345678
        token: "2"
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        id:
          description: ID of a Compute Config
          example: Aut enim eius a.
          type: string
        instanceType:
          description: The instance type for this compute instance type config
          example: t3.micro
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: o8
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - id
      - instanceType
      - serviceId
      - token
      type: object
    RemoveComputeInstanceTypeRequest2:
      example:
        cloudProviderName: aws|azure|gcp|all
        instanceType: t3.micro
      properties:
        cloudProviderName:
          description: The cloud provider for this compute instance type config
          example: aws|azure|gcp|all
          type: string
        instanceType:
          description: The instance type for this compute instance type config
          example: t3.micro
          type: string
      required:
      - cloudProviderName
      - instanceType
      type: object
    RemoveCustomDNSToResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: http-service
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: tn
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: http-service
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Voluptatem a velit id accusantium.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: vnb
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    RemoveFileRequest:
      example:
        fileId: file-12345678
        id: r-12345678
        serviceId: s-12345678
        token: z
      properties:
        fileId:
          description: ID of a File
          example: Sequi ut inventore reprehenderit tempora.
          type: string
        id:
          description: ID of a resource
          example: Natus dignissimos dolores nobis placeat.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: jke
          minLength: 1
          type: string
      required:
      - fileId
      - id
      - serviceId
      - token
      type: object
    RemoveResourceDependencyRequest:
      example:
        id: r-12345678
        resourceDependencyId: r-12345678
        serviceId: s-12345678
        token: "4"
      properties:
        id:
          description: ID of a resource
          example: Et et.
          type: string
        resourceDependencyId:
          description: ID of a resource
          example: Nesciunt ut sed.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: fs
          minLength: 1
          type: string
      required:
      - id
      - resourceDependencyId
      - serviceId
      - token
      type: object
    RemoveStorageVolumeConfigRequest:
      example:
        id: sc-12345678
        mountPath: /data
        serviceId: s-12345678
        storageVolumeConfigId: svc-12345678
        token: j
      properties:
        id:
          description: ID of a Storage Config
          example: Ducimus modi.
          type: string
        mountPath:
          description: "The specific mount path to remove. If not specified, all mount\
            \ paths for the storage volume config will be removed"
          example: /data
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        storageVolumeConfigId:
          description: ID of a Storage Volume Config
          example: Architecto aut eos.
          type: string
        token:
          description: JWT token used to perform authorization
          example: "377"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - storageVolumeConfigId
      - token
      type: object
    RemoveStorageVolumeConfigRequest2:
      example:
        mountPath: /data
      properties:
        mountPath:
          description: "The specific mount path to remove. If not specified, all mount\
            \ paths for the storage volume config will be removed"
          example: /data
          type: string
      type: object
    RenderIdentityProvidersRequest:
      example:
        environmentType: production
        loginHint: user@domain.com
        redirectUrl: https://example.com/redirect
        token: o
      properties:
        environmentType:
          description: The type of environment to filter Identity Providers by
          example: production
          type: string
        loginHint:
          description: The login hint to use for the Identity Provider
          example: user@domain.com
          type: string
        redirectUrl:
          description: The URL to redirect to after login
          example: https://example.com/redirect
          type: string
        token:
          description: JWT token used to perform authorization
          example: "4"
          minLength: 1
          type: string
      required:
      - token
      type: object
    RenderIdentityProvidersResult:
      example:
        identityProviders:
        - emailIdentifiers: company.com
          id: idp-12345678
          identityProviderName: Google
          loginButtonIconUrl: https://example.com/icon.png
          loginButtonText: Login with Google
          name: Google for my company
          renderedAuthorizationEndpoint: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid
            email profile&state=idpName-guid
          state: state
        - emailIdentifiers: company.com
          id: idp-12345678
          identityProviderName: Google
          loginButtonIconUrl: https://example.com/icon.png
          loginButtonText: Login with Google
          name: Google for my company
          renderedAuthorizationEndpoint: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid
            email profile&state=idpName-guid
          state: state
        - emailIdentifiers: company.com
          id: idp-12345678
          identityProviderName: Google
          loginButtonIconUrl: https://example.com/icon.png
          loginButtonText: Login with Google
          name: Google for my company
          renderedAuthorizationEndpoint: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid
            email profile&state=idpName-guid
          state: state
      properties:
        identityProviders:
          description: The list of Identity Providers
          example:
          - emailIdentifiers: company.com
            id: idp-12345678
            identityProviderName: Google
            loginButtonIconUrl: https://example.com/icon.png
            loginButtonText: Login with Google
            name: Google for my company
            renderedAuthorizationEndpoint: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid
              email profile&state=idpName-guid
            state: state
          - emailIdentifiers: company.com
            id: idp-12345678
            identityProviderName: Google
            loginButtonIconUrl: https://example.com/icon.png
            loginButtonText: Login with Google
            name: Google for my company
            renderedAuthorizationEndpoint: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid
              email profile&state=idpName-guid
            state: state
          - emailIdentifiers: company.com
            id: idp-12345678
            identityProviderName: Google
            loginButtonIconUrl: https://example.com/icon.png
            loginButtonText: Login with Google
            name: Google for my company
            renderedAuthorizationEndpoint: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid
              email profile&state=idpName-guid
            state: state
          items:
            $ref: "#/components/schemas/RenderedIdentityProviderResult"
          type: array
      type: object
    RenderedIdentityProviderResult:
      example:
        emailIdentifiers: company.com
        id: idp-12345678
        identityProviderName: Google
        loginButtonIconUrl: https://example.com/icon.png
        loginButtonText: Login with Google
        name: Google for my company
        renderedAuthorizationEndpoint: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid
          email profile&state=idpName-guid
        state: state
      properties:
        emailIdentifiers:
          description: The email identifiers to use to filter the Identity Provider
            available for login
          example: company.com
          type: string
        id:
          description: ID of an Identity Provider
          example: Ad quis inventore occaecati.
          type: string
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        loginButtonIconUrl:
          description: The URL of the icon to use for the login button
          example: https://example.com/icon.png
          type: string
        loginButtonText:
          description: The text to use for the login button
          example: Login with Google
          type: string
        name:
          description: The name of the Identity Provider
          example: Google for my company
          type: string
        renderedAuthorizationEndpoint:
          description: The rendered authorization endpoint of the Identity Provider
          example: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid
            email profile&state=idpName-guid
          type: string
        state:
          description: The state parameter used to prevent CSRF attacks
          example: state
          type: string
      required:
      - emailIdentifiers
      - id
      - identityProviderName
      - loginButtonIconUrl
      - loginButtonText
      - name
      - renderedAuthorizationEndpoint
      type: object
    ReportHealthRequest:
      example:
        id: s-12345678
        token: bb9
      properties:
        id:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: lh
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    ReportHealthResult:
      example:
        health: UP
        id: s-12345678
        report:
          se-12345678:
            sm-12345678:
              vu-11111111: UNKNOWN
              vu-12345678: UP
              vu-87654321: DOWN
      properties:
        health:
          description: Service Health Status
          example: UP|DOWN|UNKNOWN
          type: string
        id:
          description: ID of a Service
          example: s-123456
          type: string
        report:
          additionalProperties:
            $ref: "#/components/schemas/EnvironmentHealthReport"
          description: The health of each environment under this service
          example:
            se-12345678:
              sm-12345678:
                vu-11111111: UNKNOWN
                vu-12345678: UP
                vu-87654321: DOWN
          type: object
      type: object
    ResetPasswordRequest:
      example:
        email: abc@gmail.com
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
      required:
      - email
      type: object
    ResourceCapability:
      description: The capability of a resource
      example:
        capability: SERVERLESS
        configuration:
          EnableAutoStop: true
          MinimumNodesInPool: 5
          PortsMappingProxyConfig:
            MaxNumberOfClustersPerProxyInstance: 50
            NumberOfPortsPerCluster: 4
          ProxyId: r-123456
          ReferenceProxyKey: resource-proxy
          TargetPort: 5432
      properties:
        capability:
          description: The type of capability of a resource
          example: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
          type: string
        configuration:
          additionalProperties: true
          description: The configuration parameters of a capability of a resource
          example:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
          type: object
      required:
      - capability
      - configuration
      type: object
    ResourceDependency:
      description: Resource dependency relation specification
      example:
        parameterMap:
          Aut id in natus sed et sit.: Reiciendis ex qui sunt.
          Impedit et omnis voluptatibus facilis.: Aspernatur fuga cumque voluptas
            cupiditate aut sit.
          Unde accusamus est non.: Debitis et ut ex aut eius.
        resourceId: Dolores sit aut repellendus eveniet recusandae fugit.
      properties:
        parameterMap:
          additionalProperties:
            example: Et porro repellendus et enim similique excepturi.
            type: string
          description: A map of the source parameter to the resource dependency parameter
          example:
            Facilis aliquam dolorem.: Sint incidunt.
            Nesciunt accusamus.: Maiores qui quasi est sit hic vitae.
            Recusandae vero ut officia laudantium voluptas deleniti.: Eaque beatae
              hic natus aperiam vero nesciunt.
          type: object
        resourceId:
          description: ID of a resource
          example: Quo dolorem vel ipsum quasi.
          type: string
      required:
      - resourceId
      type: object
    ResourceEntity:
      example:
        isAutoscalingEnabled: true
        isBackupEnabled: true
        isDeprecated: false
        name: My Resource
        resourceId: r-12345678
        resourceType: Kustomize
        urlKey: myResource
      properties:
        isAutoscalingEnabled:
          description: Whether the resource has autoscaling enabled
          example: true
          type: boolean
        isBackupEnabled:
          description: Whether the resource has backup enabled
          example: true
          type: boolean
        isDeprecated:
          default: false
          description: Whether the service offering is deprecated
          example: false
          type: boolean
        name:
          description: The resource name
          example: My Resource
          type: string
        resourceId:
          description: ID of a resource
          example: Dignissimos dolore ullam animi odit.
          type: string
        resourceType:
          description: The resource type
          example: Kustomize
          type: string
        urlKey:
          description: The resource URL key
          example: myResource
          type: string
      required:
      - isBackupEnabled
      - isDeprecated
      - name
      - resourceId
      - urlKey
      type: object
    ResourceHealthSummary:
      example:
        nodesHealth:
          Expedita pariatur at aut voluptate nulla dolores.:
            availabilityZone: us-east-2a
            connectivityStatus: HEALTHY
            diskHealth: HEALTHY
            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            integrationsHealth:
              CustomerObservabilityHealth: HEALTHY
              InternalObservabilityHealth: HEALTHY
            loadStatus: LOAD_NORMAL
            nodeHealth: HEALTHY
            nodeName: postgres-0
            ports:
            - 80
            - 443
            processHealth: HEALTHY
            processLiveness: HEALTHY
            status: HEALTHY
          Quia voluptas totam voluptatem velit exercitationem.:
            availabilityZone: us-east-2a
            connectivityStatus: HEALTHY
            diskHealth: HEALTHY
            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            integrationsHealth:
              CustomerObservabilityHealth: HEALTHY
              InternalObservabilityHealth: HEALTHY
            loadStatus: LOAD_NORMAL
            nodeHealth: HEALTHY
            nodeName: postgres-0
            ports:
            - 80
            - 443
            processHealth: HEALTHY
            processLiveness: HEALTHY
            status: HEALTHY
          Similique quod quia quasi at.:
            availabilityZone: us-east-2a
            connectivityStatus: HEALTHY
            diskHealth: HEALTHY
            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            integrationsHealth:
              CustomerObservabilityHealth: HEALTHY
              InternalObservabilityHealth: HEALTHY
            loadStatus: LOAD_NORMAL
            nodeHealth: HEALTHY
            nodeName: postgres-0
            ports:
            - 80
            - 443
            processHealth: HEALTHY
            processLiveness: HEALTHY
            status: HEALTHY
        resourceID: resource-12345678
        resourceKey: primary
        resourceType: Kustomize
        status: HEALTHY
      properties:
        nodesHealth:
          additionalProperties:
            $ref: "#/components/schemas/NodeHealthSummary"
          description: The health summary of the nodes by node name
          example:
            Atque fugiat dolore aut minima.:
              availabilityZone: us-east-2a
              connectivityStatus: HEALTHY
              diskHealth: HEALTHY
              endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              integrationsHealth:
                CustomerObservabilityHealth: HEALTHY
                InternalObservabilityHealth: HEALTHY
              loadStatus: LOAD_NORMAL
              nodeHealth: HEALTHY
              nodeName: postgres-0
              ports:
              - 80
              - 443
              processHealth: HEALTHY
              processLiveness: HEALTHY
              status: HEALTHY
            Blanditiis sunt blanditiis dolore consectetur.:
              availabilityZone: us-east-2a
              connectivityStatus: HEALTHY
              diskHealth: HEALTHY
              endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              integrationsHealth:
                CustomerObservabilityHealth: HEALTHY
                InternalObservabilityHealth: HEALTHY
              loadStatus: LOAD_NORMAL
              nodeHealth: HEALTHY
              nodeName: postgres-0
              ports:
              - 80
              - 443
              processHealth: HEALTHY
              processLiveness: HEALTHY
              status: HEALTHY
            Recusandae odit quis.:
              availabilityZone: us-east-2a
              connectivityStatus: HEALTHY
              diskHealth: HEALTHY
              endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              integrationsHealth:
                CustomerObservabilityHealth: HEALTHY
                InternalObservabilityHealth: HEALTHY
              loadStatus: LOAD_NORMAL
              nodeHealth: HEALTHY
              nodeName: postgres-0
              ports:
              - 80
              - 443
              processHealth: HEALTHY
              processLiveness: HEALTHY
              status: HEALTHY
          type: object
        resourceID:
          description: ID of a resource
          example: Tempore sit occaecati sed.
          type: string
        resourceKey:
          description: The key of the resource
          example: primary
          type: string
        resourceType:
          description: The type of the resource
          example: Kustomize
          type: string
        status:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
      type: object
    ResourceInstanceProvisionerSetupKitRequest:
      example:
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: h
      properties:
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Veniam quis et.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: z
          minLength: 1
          type: string
      required:
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    ResourceMaintenanceTasks:
      additionalProperties: true
      description: "Pending actions or maintenance tasks for the resource instance,\
        \ with action type as key and reference key as value."
      example:
        backups:
        - backup_id: bk-12345678
        upgrade_paths:
        - upgrade_path_id: up-9876543
          upgrade_path_instance_status: PENDING
          upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
          upgrade_path_status: IN_PROGRESS
        - upgrade_path_id: up-12345548
          upgrade_path_instance_status: PENDING
          upgrade_path_released_at: 2023-01-01T09:00:00Z
          upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
          upgrade_path_status: SCHEDULED
      type: object
    ResourceNetworkTopologyResult:
      example:
        additionalEndpoints:
          admin:
            endpoint: https://admin.instance-abcdefgh.region.aws.omnistrate.cloud
            healthStatus: HEALTHY
            networkingType: PRIVATE
            openPorts:
            - 30000
            primary: false
          cluster:
            endpoint: https://cluster.instance-abcdefgh.region.aws.omnistrate.cloud
            healthStatus: HEALTHY
            networkingType: PUBLIC
            openPorts:
            - 443
            primary: true
        allowedIPRanges:
        - 0.0.0.0/0
        clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
        clusterPorts:
        - 443
        customDNSEndpoint:
          dnsHost: my-custom-dns.com
          name: DNS to access the dashboard
          status: READY
        hasCompute: true
        isJob: false
        jobMetrics:
        - additionalData:
            exitCode: 0
            status: Succeeded
          endTime: 2023-01-01T10:05:00Z
          metricType: cpu_core_seconds
          startTime: 2023-01-01T10:00:00Z
          value: 120.5
        - additionalData:
            peakMemoryUsage: 512MB
          endTime: 2023-01-01T10:05:00Z
          metricType: memory_mb_seconds
          startTime: 2023-01-01T10:00:00Z
          value: 2560
        main: true
        networkingType: PUBLIC
        nodes:
        - availabilityZone: us-east-2a
          detailedHealth:
            ConnectivityStatus: UNHEALTHY
            DiskHealth: UNKNOWN
            LoadStatus: LOAD_NORMAL
            NodeHealth: HEALTHY
            ProcessHealth: HEALTHY
            ProcessLiveness: HEALTHY
          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          healthStatus: HEALTHY
          id: primary-0
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          ports:
          - 80
          - 443
          status: RUNNING
          storageSize: 10
          vmInfo:
            architecture: amd64
            azCode: us-east-1a
            azID: use1-az1
            externalIP: 3.44.113.6
            instanceType: t2.small
            internalIP: 192.168.1.4
            k8sNodeName: my-k8s-node
            kernelVersion: 5.10.228
            kubeletVersion: 1.31.3
            os: linux
            providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
        - availabilityZone: us-east-2a
          detailedHealth:
            ConnectivityStatus: UNHEALTHY
            DiskHealth: UNKNOWN
            LoadStatus: LOAD_NORMAL
            NodeHealth: HEALTHY
            ProcessHealth: HEALTHY
            ProcessLiveness: HEALTHY
          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          healthStatus: HEALTHY
          id: primary-0
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          ports:
          - 80
          - 443
          status: RUNNING
          storageSize: 10
          vmInfo:
            architecture: amd64
            azCode: us-east-1a
            azID: use1-az1
            externalIP: 3.44.113.6
            instanceType: t2.small
            internalIP: 192.168.1.4
            k8sNodeName: my-k8s-node
            kernelVersion: 5.10.228
            kubeletVersion: 1.31.3
            os: linux
            providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
        - availabilityZone: us-east-2a
          detailedHealth:
            ConnectivityStatus: UNHEALTHY
            DiskHealth: UNKNOWN
            LoadStatus: LOAD_NORMAL
            NodeHealth: HEALTHY
            ProcessHealth: HEALTHY
            ProcessLiveness: HEALTHY
          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          healthStatus: HEALTHY
          id: primary-0
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          ports:
          - 80
          - 443
          status: RUNNING
          storageSize: 10
          vmInfo:
            architecture: amd64
            azCode: us-east-1a
            azID: use1-az1
            externalIP: 3.44.113.6
            instanceType: t2.small
            internalIP: 192.168.1.4
            k8sNodeName: my-k8s-node
            kernelVersion: 5.10.228
            kubeletVersion: 1.31.3
            os: linux
            providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
        - availabilityZone: us-east-2a
          detailedHealth:
            ConnectivityStatus: UNHEALTHY
            DiskHealth: UNKNOWN
            LoadStatus: LOAD_NORMAL
            NodeHealth: HEALTHY
            ProcessHealth: HEALTHY
            ProcessLiveness: HEALTHY
          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          healthStatus: HEALTHY
          id: primary-0
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          ports:
          - 80
          - 443
          status: RUNNING
          storageSize: 10
          vmInfo:
            architecture: amd64
            azCode: us-east-1a
            azID: use1-az1
            externalIP: 3.44.113.6
            instanceType: t2.small
            internalIP: 192.168.1.4
            k8sNodeName: my-k8s-node
            kernelVersion: 5.10.228
            kubeletVersion: 1.31.3
            os: linux
            providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
        privateNetworkCIDR: 10.0.0.2/24
        privateNetworkID: n-1234abcd
        proxyEndpoint:
          openPorts:
          - "30000"
          - "30001"
          proxyEndpoint: https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
        publiclyAccessible: true
        recentDeploymentFailure:
          failedAt: 2021-09-01T00:00:00Z
          failureReason: Failed to connect to the database
        resourceInstanceMetadata:
          KustomizeGeneratedTemplates: template
        resourceKey: primary
        resourceName: Primary MySQL DB Node
        resourceType: Kustomize
      properties:
        additionalEndpoints:
          additionalProperties:
            $ref: "#/components/schemas/ClusterEndpoint"
          description: The additional endpoints for this resource
          example:
            admin:
              endpoint: https://admin.instance-abcdefgh.region.aws.omnistrate.cloud
              healthStatus: HEALTHY
              networkingType: PRIVATE
              openPorts:
              - 30000
              primary: false
            cluster:
              endpoint: https://cluster.instance-abcdefgh.region.aws.omnistrate.cloud
              healthStatus: HEALTHY
              networkingType: PUBLIC
              openPorts:
              - 443
              primary: true
          type: object
        allowedIPRanges:
          description: The allowed IP ranges for this resource
          example:
          - 0.0.0.0/0
          items:
            example: Enim architecto vero.
            type: string
          type: array
        clusterEndpoint:
          description: The primary cluster endpoint that load-balances across replicas
            of this resource
          example: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          type: string
        clusterPorts:
          description: The ports that the whole cluster exposes
          example:
          - 443
          items:
            example: 6670811505412961216
            format: int64
            type: integer
          type: array
        customDNSEndpoint:
          $ref: "#/components/schemas/CustomDNSEndpoint"
        hasCompute:
          description: Whether this resource has associated compute
          example: true
          type: boolean
        isJob:
          default: false
          description: Whether this resource is a job
          example: false
          type: boolean
        jobMetrics:
          description: The job metrics for this resource (if it's a job)
          example:
          - additionalData:
              exitCode: 0
              status: Succeeded
            endTime: 2023-01-01T10:05:00Z
            metricType: cpu_core_seconds
            startTime: 2023-01-01T10:00:00Z
            value: 120.5
          - additionalData:
              peakMemoryUsage: 512MB
            endTime: 2023-01-01T10:05:00Z
            metricType: memory_mb_seconds
            startTime: 2023-01-01T10:00:00Z
            value: 2560
          items:
            $ref: "#/components/schemas/JobMetric"
          type: array
        main:
          description: Whether this is the main resource
          example: true
          type: boolean
        networkingType:
          description: The networking type for this resource
          example: PUBLIC
          type: string
        nodes:
          description: The nodes that this resource is deployed on
          example:
          - availabilityZone: us-east-2a
            detailedHealth:
              ConnectivityStatus: UNHEALTHY
              DiskHealth: UNKNOWN
              LoadStatus: LOAD_NORMAL
              NodeHealth: HEALTHY
              ProcessHealth: HEALTHY
              ProcessLiveness: HEALTHY
            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            healthStatus: HEALTHY
            id: primary-0
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            ports:
            - 80
            - 443
            status: RUNNING
            storageSize: 10
            vmInfo:
              architecture: amd64
              azCode: us-east-1a
              azID: use1-az1
              externalIP: 3.44.113.6
              instanceType: t2.small
              internalIP: 192.168.1.4
              k8sNodeName: my-k8s-node
              kernelVersion: 5.10.228
              kubeletVersion: 1.31.3
              os: linux
              providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
          - availabilityZone: us-east-2a
            detailedHealth:
              ConnectivityStatus: UNHEALTHY
              DiskHealth: UNKNOWN
              LoadStatus: LOAD_NORMAL
              NodeHealth: HEALTHY
              ProcessHealth: HEALTHY
              ProcessLiveness: HEALTHY
            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            healthStatus: HEALTHY
            id: primary-0
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            ports:
            - 80
            - 443
            status: RUNNING
            storageSize: 10
            vmInfo:
              architecture: amd64
              azCode: us-east-1a
              azID: use1-az1
              externalIP: 3.44.113.6
              instanceType: t2.small
              internalIP: 192.168.1.4
              k8sNodeName: my-k8s-node
              kernelVersion: 5.10.228
              kubeletVersion: 1.31.3
              os: linux
              providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
          - availabilityZone: us-east-2a
            detailedHealth:
              ConnectivityStatus: UNHEALTHY
              DiskHealth: UNKNOWN
              LoadStatus: LOAD_NORMAL
              NodeHealth: HEALTHY
              ProcessHealth: HEALTHY
              ProcessLiveness: HEALTHY
            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            healthStatus: HEALTHY
            id: primary-0
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            ports:
            - 80
            - 443
            status: RUNNING
            storageSize: 10
            vmInfo:
              architecture: amd64
              azCode: us-east-1a
              azID: use1-az1
              externalIP: 3.44.113.6
              instanceType: t2.small
              internalIP: 192.168.1.4
              k8sNodeName: my-k8s-node
              kernelVersion: 5.10.228
              kubeletVersion: 1.31.3
              os: linux
              providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
          items:
            $ref: "#/components/schemas/NodeNetworkTopologyResult"
          type: array
        privateNetworkCIDR:
          description: The private network CIDR for this resource
          example: 10.0.0.2/24
          type: string
        privateNetworkID:
          description: ID of a Network
          example: Iure doloribus maxime.
          type: string
        proxyEndpoint:
          $ref: "#/components/schemas/ProxyEndpoint"
        publiclyAccessible:
          description: Whether this resource is publicly accessible
          example: true
          type: boolean
        recentDeploymentFailure:
          $ref: "#/components/schemas/RecentDeploymentFailureStatus"
        resourceInstanceMetadata:
          description: The resource instance metadata
          example:
            KustomizeGeneratedTemplates: template
        resourceKey:
          description: The key of the resource
          example: primary
          type: string
        resourceName:
          description: The name of the resource
          example: Primary MySQL DB Node
          type: string
        resourceType:
          description: The type of the resource
          example: Kustomize
          type: string
      required:
      - allowedIPRanges
      - clusterEndpoint
      - hasCompute
      - main
      - networkingType
      - nodeEndpoints
      - ports
      - publiclyAccessible
      - resourceKey
      - resourceName
      type: object
    ResourceSpec:
      description: Resource requirements
      example:
        limits:
          cpu: "1"
          memory: 500Mi
        requests:
          cpu: "0.5"
          memory: 200Mi
      properties:
        limits:
          $ref: "#/components/schemas/ResourceSpec_limits"
        requests:
          $ref: "#/components/schemas/ResourceSpec_requests"
      type: object
    ResourceSummary:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        id: r-12345678
        imageConfigId: imgc-12345678
        infraConfigId: ic-12345678
        isExternal: true
        managedResourceType: PortsBasedProxy
        name: MySQL multi-writer service
        urlKey: myResource
      properties:
        description:
          description: A brief description of the resource
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        id:
          description: ID of a resource
          example: Voluptatem harum veniam nulla explicabo.
          type: string
        imageConfigId:
          description: ID of an Image Config
          example: Ab molestias quos velit quam iusto.
          type: string
        infraConfigId:
          description: ID of an Infra Config
          example: Ab aut occaecati culpa.
          type: string
        isExternal:
          description: Whether the resource is external
          example: true
          type: boolean
        managedResourceType:
          description: The managed resource type of instance
          example: PortsBasedProxy
          type: string
        name:
          description: The name of the resource
          example: MySQL multi-writer service
          type: string
        urlKey:
          description: The URL key of the resource
          example: myResource
          type: string
      required:
      - description
      - id
      - isExternal
      - name
      type: object
    RestartResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: 8y
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Et soluta quia velit necessitatibus dolorum quia.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: "7"
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    RestoreResourceInstanceFromSnapshotRequest:
      example:
        network_type: PUBLIC|INTERNAL
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        snapshotId: instance-ss-abcd1234
        subscriptionId: sub-abcd1234
        token: h0
      properties:
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Itaque sint ipsa quod consequatur.
          type: string
        snapshotId:
          description: ID of a Resource Instance Snapshot
          example: Fuga voluptatem vitae aspernatur.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: x
          minLength: 1
          type: string
      required:
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - snapshotId
      - token
      type: object
    RestoreResourceInstanceFromSnapshotRequest2:
      example:
        network_type: PUBLIC|INTERNAL
      properties:
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
      type: object
    RestoreResourceInstanceRequest:
      example:
        id: instance-abcd1234
        network_type: PUBLIC|INTERNAL
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        targetRestoreTime: 2021-09-01T00:00:00Z
        token: nzr
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Dolorem iusto animi qui.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        targetRestoreTime:
          description: The target restore time
          example: 2021-09-01T00:00:00Z
          type: string
        token:
          description: JWT token used to perform authorization
          example: la8
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - targetRestoreTime
      - token
      type: object
    RestoreResourceInstanceRequest2:
      example:
        network_type: PUBLIC|INTERNAL
        targetRestoreTime: 2021-09-01T00:00:00Z
      properties:
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        targetRestoreTime:
          description: The target restore time
          example: 2021-09-01T00:00:00Z
          type: string
      required:
      - targetRestoreTime
      type: object
    RevokeConsumptionUserRoleRequest:
      example:
        email: abc@gmail.com
        roleType: reader
        subscriptionId: sub-abcd1234
        token: "9"
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: p
          minLength: 1
          type: string
      required:
      - email
      - roleType
      - subscriptionId
      - token
      type: object
    RevokeConsumptionUserRoleRequest2:
      example:
        email: abc@gmail.com
        roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
      required:
      - email
      - roleType
      type: object
    RevokeUserRoleRequest:
      example:
        email: abc@gmail.com
        roleType: reader
        token: cee
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        token:
          description: JWT token used to perform authorization
          example: af9
          minLength: 1
          type: string
      required:
      - email
      - roleType
      - token
      type: object
    RevokeUserRoleRequest2:
      example:
        email: abc@gmail.com
        roleType: root|editor|reader|service_editor|service_reader|admin|service_operator
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
      required:
      - email
      - roleType
      type: object
    RolloutFleetImageConfigRequest:
      description: Rollout the image configuration to all existing entities using
        this image configuration
      example:
        id: imgc-12345678
        serviceId: s-12345678
        token: dwu
      properties:
        id:
          description: ID of an Image Config
          example: Quia et doloribus.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "7"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    RolloutFleetImageStatusRequest:
      example:
        id: imgc-12345678
        serviceId: s-12345678
        token: rfk
      properties:
        id:
          description: ID of an Image Config
          example: Et eaque odit soluta.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ba
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    RolloutFleetImageStatusResult:
      example:
        status: IN_PROGRESS
      properties:
        status:
          description: UpgradeStatus is the status of an upgrade path
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING
          type: string
      required:
      - status
      type: object
    RolloutFleetInfraRequest:
      example:
        id: ic-12345678
        serviceId: s-12345678
        token: d
      properties:
        id:
          description: ID of an Infra Config
          example: Nihil atque quos totam quidem.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: w
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    RolloutFleetInfraStatusRequest:
      example:
        id: ic-12345678
        serviceId: s-12345678
        token: bk
      properties:
        id:
          description: ID of an Infra Config
          example: Repellendus eos.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: yip
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    RolloutFleetInfraStatusResult:
      example:
        status: IN_PROGRESS
      properties:
        status:
          description: UpgradeStatus is the status of an upgrade path
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING
          type: string
      required:
      - status
      type: object
    Route53Configuration:
      example:
        awsAccountID: "123456789012"
      properties:
        awsAccountID:
          description: The AWS account hosting the the hosted zone for the domain
          example: "123456789012"
          type: string
      required:
      - awsAccountID
      type: object
    Route53ConfigurationDescription:
      example:
        awsAccountID: "123456789012"
        awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
      properties:
        awsAccountID:
          description: The AWS account hosting the the hosted zone for the domain
          example: "123456789012"
          type: string
        awsCloudFormationTemplateURL:
          description: The URL to the CloudFormation template
          example: https://s3.amazonaws.com/my-bucket/my-template.json
          type: string
      required:
      - awsAccountID
      - awsCloudFormationTemplateURL
      type: object
    S3Configuration:
      example: {}
      type: object
    SaaSPortal:
      example:
        customDomain: mycustomdomain.com
        customDomainStatus: READY
        detailedNetworkTopology:
          r-abcd1234:
            allowedIPRanges:
            - 0.0.0.0/0
            clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            clusterPorts:
            - 3306
            main: true
            networkingType: PUBLIC
            nodes:
            - availabilityZone: us-east-2a
              endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              healthStatus: healthy
              id: primary-0
              ports:
              - 3306
              status: RUNNING
            privateNetworkCIDR: 10.0.0.2/24
            privateNetworkID: n-1234abcd
            publiclyAccessible: true
            resourceKey: saasportal
            resourceName: SaaS Portal
        disablePasswordLogin: false
        emailConfig:
          smtpFromEmail: example@gmail.com
          smtpHost: smtp.gmail.com
          smtpPassword: password
          smtpPort: 587
          smtpUsername: username
        endpoint: https://saas-portal.example.com
        environmentType: DEV
        googleAnalyticsTagID: G-123456789
        imageConfig:
          imageName: myimage
          imageRegistry: ghcr.io
          imageTag: latest
        status: READY
      properties:
        customDomain:
          description: The custom domain of the SaaS portal
          example: mycustomdomain.com
          type: string
        customDomainStatus:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        detailedNetworkTopology:
          additionalProperties:
            $ref: "#/components/schemas/ResourceNetworkTopologyResult"
          description: The detailed network topology of the SaaS portal
          example:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: saasportal
              resourceName: SaaS Portal
          type: object
        disablePasswordLogin:
          description: Whether to disable password login for the SaaS portal
          example: false
          type: boolean
        emailConfig:
          $ref: "#/components/schemas/SaaSPortalEmailConfig"
        endpoint:
          description: The endpoint of the SaaS portal for this environment type
          example: https://saas-portal.example.com
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        googleAnalyticsTagID:
          description: The Google Analytics tag ID for the SaaS portal
          example: G-123456789
          type: string
        imageConfig:
          $ref: "#/components/schemas/SaaSPortalImageConfig"
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
      required:
      - environmentType
      - status
      type: object
    SaaSPortalEmailConfig:
      example:
        smtpFromEmail: example@gmail.com
        smtpHost: smtp.gmail.com
        smtpPassword: password
        smtpPort: 587
        smtpUsername: username
      properties:
        smtpFromEmail:
          description: The SMTP from email
          example: example@gmail.com
          type: string
        smtpHost:
          description: The SMTP host
          example: smtp.gmail.com
          type: string
        smtpPassword:
          description: The SMTP password
          example: password
          type: string
        smtpPort:
          description: The SMTP port
          example: 587
          format: int64
          type: integer
        smtpUsername:
          description: The SMTP username
          example: username
          type: string
      required:
      - smtpFromEmail
      - smtpHost
      - smtpPassword
      - smtpUsername
      type: object
    SaaSPortalImageConfig:
      example:
        imageName: myimage
        imageRegistry: ghcr.io
        imageTag: latest
      properties:
        imageName:
          description: The image name for the SaaS portal
          example: myimage
          type: string
        imageRegistry:
          description: The image registry for the SaaS portal
          example: ghcr.io
          type: string
        imageTag:
          description: The image tag for the SaaS portal
          example: latest
          type: string
      required:
      - imageName
      - imageRegistry
      - imageTag
      type: object
    SaveHelmPackageRequest:
      example:
        helmPackage:
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          layeredChartValues:
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          namespace: default
          password: my-password
          username: my-user
        token: ft
      properties:
        helmPackage:
          $ref: "#/components/schemas/HelmPackage"
        token:
          description: JWT token used to perform authorization
          example: "1"
          minLength: 1
          type: string
      required:
      - helmPackage
      - token
      type: object
    SaveHelmPackageRequest2:
      example:
        helmPackage:
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          layeredChartValues:
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          namespace: default
          password: my-password
          username: my-user
      properties:
        helmPackage:
          $ref: "#/components/schemas/HelmPackage"
      required:
      - helmPackage
      type: object
    ScheduleConfig:
      description: Configuration for recurring job scheduling
      example:
        cronExpression: 0 2 * * *
        simpleInterval: 30m
        timezone: UTC
      properties:
        cronExpression:
          description: "Cron expression for advanced scheduling (e.g., '0 2 * * *'\
            \ for daily at 2 AM). Takes precedence over simpleInterval if both are\
            \ provided."
          example: 0 2 * * *
          pattern: "^(\\*|[0-5]?\\d)(\\s+(\\*|[0-1]?\\d|2[0-3]))(\\s+(\\*|[1-2]?\\\
            d|3[01]))(\\s+(\\*|[1-9]|1[0-2]))(\\s+(\\*|[0-6]))$"
          type: string
        simpleInterval:
          description: "Simple interval scheduling using human-readable format (e.g.,\
            \ '5m', '1h', '30m', '2h'). Supports: s(seconds), m(minutes), h(hours),\
            \ d(days)"
          example: 30m
          pattern: ^(\d+)(s|m|h|d)$
          type: string
        timezone:
          default: UTC
          description: "Timezone for cron scheduling (IANA Time Zone format, e.g.,\
            \ 'UTC', 'America/New_York'). Only applies to cronExpression."
          example: UTC
          type: string
      type: object
    SchemaRequest:
      example:
        type: x-omnistrate-service-plan|x-omnistrate-integrations|x-omnistrate-mode-internal|x-omnistrate-proxy-type|x-omnistrate-actionhooks|x-omnistrate-api-params|x-omnistrate-capabilities|x-omnistrate-compute|x-omnistrate-job-config|x-omnistrate-storage|x-omnistrate-image-registry-attributes|x-omnistrate-load-balancer|compose|service-plan|deployment-cell-amenities|system-parameters|services-orchestration-create-dsl|service-orchestration-modify-dsl
      properties:
        type:
          description: "Type of the schema, e.g., 'compose', 'service-plan', 'x-omnistrate-mode-internal'"
          example: x-omnistrate-service-plan|x-omnistrate-integrations|x-omnistrate-mode-internal|x-omnistrate-proxy-type|x-omnistrate-actionhooks|x-omnistrate-api-params|x-omnistrate-capabilities|x-omnistrate-compute|x-omnistrate-job-config|x-omnistrate-storage|x-omnistrate-image-registry-attributes|x-omnistrate-load-balancer|compose|service-plan|deployment-cell-amenities|system-parameters|services-orchestration-create-dsl|service-orchestration-modify-dsl
          type: string
      required:
      - type
      type: object
    Secret:
      example:
        environmentType: DEV
        name: my-secret
        value: super-secret-value
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        name:
          description: Name of the secret
          example: my-secret
          type: string
        value:
          description: The value of the secret
          example: super-secret-value
          type: string
      required:
      - environmentType
      - name
      - value
      type: object
    ServiceAssets:
      example:
        cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
        cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
      properties:
        cloudFormationURL:
          description: The URL for CloudFormation onboarding
          example: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
          type: string
        cloudFormationURLNoLB:
          description: The URL for CloudFormation onboarding without LoadBalancer
            policy
          example: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
          type: string
      type: object
    ServiceDeploymentDetails:
      example:
        dependsOnDeployment:
        - instanceDeploymentAlias1
        - instanceDeploymentAlias2
        failedReason: Invalid inputs
        instanceDeploymentAlias: instanceDeploymentAlias
        instanceId: i-12345678
        serviceId: s-12345678
        status: PENDING
        statusMessage: Creating deployment
        subscriptionId: Neque sed id magnam.
      properties:
        dependsOnDeployment:
          description: The deployment keys that this deployment depends on
          example:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          items:
            example: Sapiente totam eius accusamus exercitationem sequi.
            type: string
          type: array
        failedReason:
          description: The reason why the deployment failed
          example: Invalid inputs
          type: string
        instanceDeploymentAlias:
          description: The instance deployment alias
          example: instanceDeploymentAlias
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        status:
          description: The status of the service deployment
          example: PENDING
          type: string
        statusMessage:
          description: The status message of the service deployment
          example: Creating deployment
          type: string
        subscriptionId:
          description: ID of a Subscription
          example: Sequi ipsam animi aut ullam odit.
          type: string
      required:
      - instanceDeploymentAlias
      - serviceId
      - subscriptionId
      type: object
    ServiceEnvironment:
      example:
        id: se-12345678
        name: dev
        promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
        saasPortalStatus: READY
        saasPortalUrl: https://saas-portal.example.com
        servicePlans:
        - description: A Basic product tier
          modelType: CUSTOMER_HOSTED
          name: Basic
          productTierID: pt-12345678
          tierType: OMNISTRATE_DEDICATED_TENANCY
        - description: A Basic product tier
          modelType: CUSTOMER_HOSTED
          name: Basic
          productTierID: pt-12345678
          tierType: OMNISTRATE_DEDICATED_TENANCY
        sourceEnvironmentID: se-12345678
        sourceEnvironmentName: dev
        type: DEV
        visibility: private
      properties:
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        name:
          description: Name of the Service Environment
          example: dev
          type: string
        promoteStatus:
          description: The status of the promotion
          example: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          type: string
        saasPortalStatus:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        saasPortalUrl:
          description: The URL of the SaaS portal for this environment type
          example: https://saas-portal.example.com
          type: string
        servicePlans:
          description: List of service plans
          example:
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          items:
            $ref: "#/components/schemas/ServicePlan"
          type: array
        sourceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        sourceEnvironmentName:
          description: The source environment name
          example: dev
          type: string
        type:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - id
      - name
      - servicePlans
      - visibility
      type: object
    ServiceHealthRequest:
      example:
        serviceEnvironmentID: se-123456
        serviceID: s-123456
        token: c
      properties:
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: uu
          minLength: 1
          type: string
      required:
      - serviceEnvironmentID
      - serviceID
      - token
      type: object
    ServiceHealthSummary:
      example:
        cloudProviderHealthSummary:
          aws|azure|gcp|all:
            cloudProvider: aws
            deployingInstances: 7347713584952297027
            healthyInstances: 6686351528445741065
            message: Cloud provider is healthy
            regionalHealthSummary:
              A laudantium quaerat temporibus tempore.:
                deployingInstances: 79145319162971650
                deploymentCellHealthSummary:
                  Adipisci dolorem magni repellat eaque et corporis.:
                    deployingInstances: 2815081149714630162
                    healthyInstances: 4560033033971347510
                    hostClusterID: hc-12345678
                    message: Cell is healthy
                    status: Healthy
                    totalInstances: 2958002397655630058
                    unhealthyInstances: 862492030087821158
                    unknownInstances: 7745684624529770236
                healthyInstances: 8592109167329660831
                message: Region is healthy
                region: us-east-1
                status: Healthy
                totalInstances: 4103756041245898708
                unhealthyInstances: 6681312086099148734
                unknownInstances: 6563968201280819844
              Illo aut provident nobis.:
                deployingInstances: 79145319162971650
                deploymentCellHealthSummary:
                  Adipisci dolorem magni repellat eaque et corporis.:
                    deployingInstances: 2815081149714630162
                    healthyInstances: 4560033033971347510
                    hostClusterID: hc-12345678
                    message: Cell is healthy
                    status: Healthy
                    totalInstances: 2958002397655630058
                    unhealthyInstances: 862492030087821158
                    unknownInstances: 7745684624529770236
                healthyInstances: 8592109167329660831
                message: Region is healthy
                region: us-east-1
                status: Healthy
                totalInstances: 4103756041245898708
                unhealthyInstances: 6681312086099148734
                unknownInstances: 6563968201280819844
              Nemo quae sint officia.:
                deployingInstances: 79145319162971650
                deploymentCellHealthSummary:
                  Adipisci dolorem magni repellat eaque et corporis.:
                    deployingInstances: 2815081149714630162
                    healthyInstances: 4560033033971347510
                    hostClusterID: hc-12345678
                    message: Cell is healthy
                    status: Healthy
                    totalInstances: 2958002397655630058
                    unhealthyInstances: 862492030087821158
                    unknownInstances: 7745684624529770236
                healthyInstances: 8592109167329660831
                message: Region is healthy
                region: us-east-1
                status: Healthy
                totalInstances: 4103756041245898708
                unhealthyInstances: 6681312086099148734
                unknownInstances: 6563968201280819844
            status: Healthy
            totalInstances: 8542940249369434472
            unhealthyInstances: 8870231177189790032
            unknownInstances: 3230815417743743099
        healthyInstances: 4037619037585624748
        message: Service is healthy
        serviceEnvironmentID: se-123456
        serviceID: s-123456
        status: Healthy
        totalInstances: 1326071450274863390
        unhealthyInstances: 1930208733885015033
        unknownInstances: 7513632827575287856
      properties:
        cloudProviderHealthSummary:
          additionalProperties:
            $ref: "#/components/schemas/CloudProviderHealthSummary"
          description: The summary of health by cloud provider
          example:
            aws|azure|gcp|all:
              cloudProvider: aws
              deployingInstances: 7347713584952297027
              healthyInstances: 6686351528445741065
              message: Cloud provider is healthy
              regionalHealthSummary:
                A laudantium quaerat temporibus tempore.:
                  deployingInstances: 79145319162971650
                  deploymentCellHealthSummary:
                    Adipisci dolorem magni repellat eaque et corporis.:
                      deployingInstances: 2815081149714630162
                      healthyInstances: 4560033033971347510
                      hostClusterID: hc-12345678
                      message: Cell is healthy
                      status: Healthy
                      totalInstances: 2958002397655630058
                      unhealthyInstances: 862492030087821158
                      unknownInstances: 7745684624529770236
                  healthyInstances: 8592109167329660831
                  message: Region is healthy
                  region: us-east-1
                  status: Healthy
                  totalInstances: 4103756041245898708
                  unhealthyInstances: 6681312086099148734
                  unknownInstances: 6563968201280819844
                Illo aut provident nobis.:
                  deployingInstances: 79145319162971650
                  deploymentCellHealthSummary:
                    Adipisci dolorem magni repellat eaque et corporis.:
                      deployingInstances: 2815081149714630162
                      healthyInstances: 4560033033971347510
                      hostClusterID: hc-12345678
                      message: Cell is healthy
                      status: Healthy
                      totalInstances: 2958002397655630058
                      unhealthyInstances: 862492030087821158
                      unknownInstances: 7745684624529770236
                  healthyInstances: 8592109167329660831
                  message: Region is healthy
                  region: us-east-1
                  status: Healthy
                  totalInstances: 4103756041245898708
                  unhealthyInstances: 6681312086099148734
                  unknownInstances: 6563968201280819844
                Nemo quae sint officia.:
                  deployingInstances: 79145319162971650
                  deploymentCellHealthSummary:
                    Adipisci dolorem magni repellat eaque et corporis.:
                      deployingInstances: 2815081149714630162
                      healthyInstances: 4560033033971347510
                      hostClusterID: hc-12345678
                      message: Cell is healthy
                      status: Healthy
                      totalInstances: 2958002397655630058
                      unhealthyInstances: 862492030087821158
                      unknownInstances: 7745684624529770236
                  healthyInstances: 8592109167329660831
                  message: Region is healthy
                  region: us-east-1
                  status: Healthy
                  totalInstances: 4103756041245898708
                  unhealthyInstances: 6681312086099148734
                  unknownInstances: 6563968201280819844
              status: Healthy
              totalInstances: 8542940249369434472
              unhealthyInstances: 8870231177189790032
              unknownInstances: 3230815417743743099
          type: object
        healthyInstances:
          description: The number of healthy instances in the region
          example: 2717628459246031951
          format: int64
          type: integer
        message:
          description: The status message
          example: Service is healthy
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        status:
          description: The status of the service
          example: Healthy
          type: string
        totalInstances:
          description: The total number of instances in the region
          example: 363252673240483175
          format: int64
          type: integer
        unhealthyInstances:
          description: The number of unhealthy instances in the region
          example: 6239243200742321859
          format: int64
          type: integer
        unknownInstances:
          description: The number of instances with unknown status
          example: 4614057031836295825
          format: int64
          type: integer
      required:
      - cloudProviderHealthSummary
      - healthyInstances
      - message
      - serviceEnvironmentID
      - serviceID
      - status
      - totalInstances
      - unhealthyInstances
      type: object
    ServiceModelFeatureConfiguration:
      additionalProperties: true
      description: The configuration parameters of the service model feature
      example:
        status: "ON"
      type: object
    ServiceModelFeatureDetail:
      example:
        configuration:
          status: "ON"
        feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
      properties:
        configuration:
          additionalProperties: true
          description: The configuration parameters of the service model feature
          example:
            status: "ON"
          type: object
        feature:
          description: Name of the service model feature
          example: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          type: string
      required:
      - configuration
      - feature
      type: object
    ServiceOffering:
      example:
        AutoApproveSubscription: false
        allowCreatesWhenPaymentNotConfigured: true
        assets:
          cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
          cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        cloudProviders:
        - AWS
        - GCP
        - Azure
        gcpRegions:
        - us-central1
        maxNumberOfInstances: 5
        privateRegions:
        - n/a
        productTierDescription: A premium product tier
        productTierDocumentation: Any documentation
        productTierFeatures:
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        productTierID: pt-12345678
        productTierName: Premium
        productTierPlanDescription: A premium plan
        productTierPricing:
          price1: value1
        productTierSupport: Any support
        productTierType: OMNISTRATE_DEDICATED_TENANCY
        productTierURLKey: premium
        productTierVersion: 1.0.0
        resourceParameters:
        - name: MySQL
          resourceId: r-12345678
          urlKey: mysql
        - name: Redis
          resourceId: r-abcdefgh
          urlKey: redis
        serviceAPIID: sa-12345678
        serviceAPIVersion: v1
        serviceEnvironmentID: se-12345678
        serviceEnvironmentName: Development
        serviceEnvironmentType: DEV
        serviceEnvironmentURLKey: dev
        serviceEnvironmentVisibility: PRIVATE
        serviceLogoURL: Rerum quasi dolorem.
        serviceModelFeatures:
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        serviceModelID: sm-12345678
        serviceModelName: Hosted
        serviceModelStatus: Ready
        serviceModelType: "CUSTOMER_HOSTED, OMNISTRATE_HOSTED, BYOA"
        serviceModelURLKey: hosted
        supportsPublicNetwork: false
      properties:
        AutoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        assets:
          $ref: "#/components/schemas/ServiceAssets"
        awsRegions:
          description: The AWS regions that this service offering is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Quia veniam soluta autem molestiae.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this service offering is available on
          example:
          - northcentralus
          items:
            example: Magni nemo.
            type: string
          type: array
        cloudProviders:
          description: List of supported cloud providers for this product tier.
          example:
          - AWS
          - GCP
          - Azure
          items:
            example: Voluptatem in et dolore magnam sunt non.
            type: string
          type: array
        gcpRegions:
          description: The GCP regions that this service offering is available on
          example:
          - us-central1
          items:
            example: Nemo est at aperiam corrupti velit.
            type: string
          type: array
        maxNumberOfInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        privateRegions:
          description: The Private regions that this service offering is available
            on
          example:
          - n/a
          items:
            example: Rerum rerum dolore aut.
            type: string
          type: array
        productTierDescription:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        productTierDocumentation:
          description: Documentation
          example: Any documentation
          type: string
        productTierFeatures:
          description: Enabled product tier features
          example:
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          items:
            $ref: "#/components/schemas/ProductTierFeatureDetail"
          type: array
        productTierID:
          description: ID of a Product Tier
          example: Eaque rerum.
          type: string
        productTierName:
          description: The product tier name
          example: Premium
          type: string
        productTierPlanDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        productTierPricing:
          description: Pricing
          example:
            price1: value1
        productTierSupport:
          description: Support
          example: Any support
          type: string
        productTierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        productTierURLKey:
          description: The product tier URL key
          example: premium
          type: string
        productTierVersion:
          description: The product tier version
          example: 1.0.0
          type: string
        resourceParameters:
          description: The resource parameters
          example:
          - name: MySQL
            resourceId: r-12345678
            urlKey: mysql
          - name: Redis
            resourceId: r-abcdefgh
            urlKey: redis
          items:
            $ref: "#/components/schemas/ResourceEntity"
          type: array
        serviceAPIID:
          description: ID of a Service API
          example: Consequatur doloribus perferendis sapiente voluptate illum.
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceEnvironmentName:
          description: The service environment name
          example: Development
          type: string
        serviceEnvironmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        serviceEnvironmentURLKey:
          description: The service environment URL key
          example: dev
          type: string
        serviceEnvironmentVisibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: A eaque rerum reiciendis.
          type: string
        serviceModelFeatures:
          description: Enabled service model features
          example:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          items:
            $ref: "#/components/schemas/ServiceModelFeatureDetail"
          type: array
        serviceModelID:
          description: ID of a Service Model
          example: Facilis modi aut consequatur.
          type: string
        serviceModelName:
          description: The service model name
          example: Hosted
          type: string
        serviceModelStatus:
          description: The service model status
          example: Ready
          type: string
        serviceModelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        serviceModelURLKey:
          description: The service model URL key
          example: hosted
          type: string
        supportsPublicNetwork:
          description: Indicates whether any of the resources in the product tier
            support public network
          example: false
          type: boolean
      required:
      - AutoApproveSubscription
      - productTierDocumentation
      - productTierID
      - productTierName
      - productTierPricing
      - productTierSupport
      - productTierType
      - productTierURLKey
      - productTierVersion
      - resourceParameters
      - serviceAPIID
      - serviceAPIVersion
      - serviceEnvironmentID
      - serviceEnvironmentName
      - serviceEnvironmentType
      - serviceEnvironmentURLKey
      - serviceEnvironmentVisibility
      - serviceLogoURL
      - serviceModelID
      - serviceModelName
      - serviceModelStatus
      - serviceModelType
      - serviceModelURLKey
      type: object
    ServicePlan:
      example:
        description: A Basic product tier
        modelType: CUSTOMER_HOSTED
        name: Basic
        productTierID: pt-12345678
        tierType: OMNISTRATE_DEDICATED_TENANCY
      properties:
        description:
          description: Description of the Product Tier
          example: A Basic product tier
          type: string
        modelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        name:
          description: Name of the Product Tier
          example: Basic
          type: string
        productTierID:
          description: ID of a Product Tier
          example: Voluptate et repudiandae.
          type: string
        tierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
      required:
      - description
      - modelType
      - name
      - productTierID
      - tierType
      type: object
    ServiceProviderEvent:
      example:
        alertType: Alarm
        eventCategory: InstanceEvent
        eventID: e-123456
        eventPayload:
          Cupiditate delectus tempore dolores.: Sit excepturi sit aut alias dignissimos.
          Est et id numquam.: Tempora at laborum in ducimus.
        eventType: UnhealthyInstance
        expiryTime: 2023-01-10T00:00:00Z
        instanceID: instance-12345678
        planVersion: v1.0
        priority: Critical
        resourceName: Resource-123
        scope: ServiceProvider
        serviceEnvironmentID: se-123456
        serviceID: s-123456
        serviceName: Service-123
        servicePlanName: Basic Plan
        time: 2023-01-10T00:00:00Z
      properties:
        alertType:
          description: The type of the alert
          example: Alarm|Notification
          type: string
        eventCategory:
          description: The category of the service provider specific event
          example: InstanceEvent|ServiceEvent|UserEvent|IdentityProviderEvent
          type: string
        eventID:
          description: ID of a Event
          example: Amet quaerat dolor ea reiciendis.
          type: string
        eventPayload:
          additionalProperties: true
          description: The event payload for a service provider
          example:
            Quo quae rerum aut voluptas est.: Est tenetur.
          type: object
        eventType:
          description: The type of the service provider specific event
          example: UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
          type: string
        expiryTime:
          description: The expiry time of the event
          example: 2023-01-10T00:00:00Z
          type: string
        instanceID:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        planVersion:
          description: The version of the plan
          example: v1.0
          type: string
        priority:
          description: The priority of the event
          example: Critical|High|Medium|Low
          type: string
        resourceName:
          description: The name of the resource
          example: Resource-123
          type: string
        scope:
          description: The scope of the event
          example: ServiceProvider|EndCustomer
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        serviceName:
          description: The name of the service
          example: Service-123
          type: string
        servicePlanName:
          description: The name of the service plan
          example: Basic Plan
          type: string
        time:
          description: The event time
          example: 2023-01-10T00:00:00Z
          type: string
      required:
      - alertType
      - eventCategory
      - eventID
      - eventPayload
      - eventType
      - expiryTime
      - priority
      - scope
      - time
      type: object
    ServiceProviderEventSummary:
      example:
        eventsSummary:
          FailedDeployment: 1
          UnhealthyInstance: 2
      properties:
        eventsSummary:
          additionalProperties:
            example: 7194214712171342890
            format: int64
            type: integer
          description: The number of outstanding events by type
          example:
            FailedDeployment: 1
            UnhealthyInstance: 2
          type: object
      type: object
    SetActiveAccountConfigRequest:
      example:
        accountConfigId: ac-12345678
        id: sm-12345678
        serviceId: s-12345678
        token: vl
      properties:
        accountConfigId:
          description: ID of an Account Config
          example: Ea ad.
          type: string
        id:
          description: ID of a Service Model
          example: Unde odit voluptates voluptate.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: z
          minLength: 1
          type: string
      required:
      - accountConfigId
      - id
      - serviceId
      - token
      type: object
    SetEnvironmentVariablesRequest:
      example:
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        id: r-12345678
        serviceId: s-12345678
        token: 5w3
      properties:
        environmentVariables:
          description: The environment variables that this resource requires
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: "#/components/schemas/EnvironmentVariable"
          type: array
        id:
          description: ID of a resource
          example: Veritatis quia aliquid ut ut.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ja
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    SetEnvironmentVariablesRequest2:
      example:
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
      properties:
        environmentVariables:
          description: The environment variables that this resource requires
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: "#/components/schemas/EnvironmentVariable"
          type: array
      type: object
    SetSecretRequest:
      example:
        environmentType: DEV
        name: my-secret
        token: z2m
        value: super-secret-value
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        name:
          description: Name of the secret
          example: my-secret
          type: string
        token:
          description: JWT token used to perform authorization
          example: 1w3
          minLength: 1
          type: string
        value:
          description: The value of the secret
          example: super-secret-value
          type: string
      required:
      - environmentType
      - name
      - token
      - value
      type: object
    SetSecretRequest2:
      example:
        value: super-secret-value
      properties:
        value:
          description: The value of the secret
          example: super-secret-value
          type: string
      required:
      - value
      type: object
    SigninRequest:
      example:
        email: abc@gmail.com
        hashedPassword: deprecated
        password: password
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        hashedPassword:
          example: deprecated
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
      required:
      - email
      type: object
    SigninResult:
      example:
        jwtToken: ""
      properties:
        jwtToken:
          description: The jwt token
          example: ""
          type: string
      required:
      - jwtToken
      type: object
    SignupRequest:
      example:
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        email: abc@gmail.com
        legalCompanyName: mywebsite
        name: John Doe
        password: password
      properties:
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        legalCompanyName:
          default: ""
          example: mywebsite
          type: string
        name:
          example: John Doe
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
      required:
      - email
      - name
      - password
      type: object
    StartResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: 6gm
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Consectetur et eos exercitationem id.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: "y"
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    StopResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: qu
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Harum magnam quaerat.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: szm
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    StripeAuthorizeURLRequest:
      example:
        token: bm
      properties:
        token:
          description: JWT token used to perform authorization
          example: r
          minLength: 1
          type: string
      required:
      - token
      type: object
    StripeAuthorizeURLResult:
      example:
        authorizeURL: https://connect.stripe.com/oauth/authorize?response_type=code&client_id=ca_12345678&scope=read_write&state=12345678
      properties:
        authorizeURL:
          description: URL to authorize Stripe Connect
          example: https://connect.stripe.com/oauth/authorize?response_type=code&client_id=ca_12345678&scope=read_write&state=12345678
          type: string
      type: object
    SubscriptionLicense:
      example:
        certificateBase64: Neque et sunt.
        expirationDate: 2024-01-01T10:00:00Z
        licenseBase64: Accusantium nihil facere ullam quod.
      properties:
        certificateBase64:
          default: ""
          description: Public certificate used to sign the license in Base 64 format
          example: Unde et omnis.
          type: string
        expirationDate:
          description: Current expiration of the license in RFC 3339 format. The license
            will be renewed periodically before this date while the subscription is
            active.
          example: 2024-01-01T10:00:00Z
          type: string
        licenseBase64:
          default: ""
          description: License file in Base 64 format
          example: Aut doloribus quas.
          type: string
      type: object
    SubscriptionUsers:
      example:
        email: abc@gmail.com
        name: John Dae
        roleType: reader
        subscriptionId: sub-abcd1234
        userId: user-abcd1234
      properties:
        email:
          description: The email of the user
          example: abc@gmail.com
          type: string
        name:
          description: The name of the user
          example: John Dae
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        userId:
          description: The User ID
          example: user-abcd1234
          type: string
      required:
      - email
      - name
      - roleType
      - subscriptionId
      - userId
      type: object
    TaintConfiguration:
      description: Taint configuration for compute nodes
      example:
        effect: NoSchedule
        key: key
        value: value
      properties:
        effect:
          description: The effect of the taint
          example: NoSchedule
          type: string
        key:
          description: The key of the taint
          example: key
          type: string
        value:
          description: The value of the taint
          example: value
          type: string
      required:
      - effect
      - key
      - value
      type: object
    TerraformConfiguration:
      example:
        gitConfiguration:
          accessToken: my-token
          commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
          referenceName: tags/v1.0.0
          repositoryUrl: https://github.com/username/myrepo
          userName: my-user
        privateModuleGitAccessTokens:
          tokenName: accessToken
        requiredOutputKeys:
        - output1
        requiredOutputs:
        - exported: true
          key: output1
        terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
        terraformPath: /project1/tf
        variablesValuesFileOverride:
        - 118
        - 97
        - 114
        - 105
        - 97
        - 98
        - 108
        - 101
        - 32
        - 34
        - 105
        - 110
        - 115
        - 116
        - 97
        - 110
        - 99
        - 101
        - 95
        - 116
        - 121
        - 112
        - 101
        - 34
        - 32
        - 123
        - 32
        - 100
        - 101
        - 102
        - 97
        - 117
        - 108
        - 116
        - 32
        - 61
        - 32
        - 34
        - 116
        - 50
        - 46
        - 109
        - 105
        - 99
        - 114
        - 111
        - 34
        - 32
        - 125
      properties:
        gitConfiguration:
          $ref: "#/components/schemas/GitConfiguration"
        privateModuleGitAccessTokens:
          additionalProperties:
            example: Delectus odit alias et dignissimos non.
            type: string
          description: The git access tokens for private modules
          example:
            tokenName: accessToken
          type: object
        requiredOutputKeys:
          description: The required output keys to export
          example:
          - output1
          items:
            example: Quibusdam fugiat.
            type: string
          type: array
        requiredOutputs:
          description: The required output keys to export
          example:
          - exported: true
            key: output1
          items:
            $ref: "#/components/schemas/TerraformOutput"
          type: array
        terraformExecutionIdentity:
          description: The identity to use for terraform execution
          example: arn:aws:iam::123456789012:role/role-name
          type: string
        terraformPath:
          description: The path to the terraform files directory
          example: /project1/tf
          type: string
        variablesValuesFileOverride:
          description: The variables values file override for the Terraform configuration
          example: !!binary |-
            WzExOCw5NywxMTQsMTA1LDk3LDk4LDEwOCwxMDEsMzIsMzQsMTA1LDExMCwxMTUsMTE2LDk3LDEx
            MCw5OSwxMDEsOTUsMTE2LDEyMSwxMTIsMTAxLDM0LDMyLDEyMywzMiwxMDAsMTAxLDEwMiw5Nywx
            MTcsMTA4LDExNiwzMiw2MSwzMiwzNCwxMTYsNTAsNDYsMTA5LDEwNSw5OSwxMTQsMTExLDM0LDMy
            LDEyNV0=
          format: binary
          type: string
      required:
      - terraformPath
      type: object
    TerraformConfigurations:
      additionalProperties:
        $ref: "#/components/schemas/TerraformConfiguration"
      description: The Terraform configurations for cloud providers
      example:
        aws:
          gitConfiguration:
            referenceName: ref
            repositoryUrl: gitUrl
          privateModuleGitAccessTokens:
            tokenName: accessToken
          terraformPath: /project1/tf
      type: object
    TerraformOutput:
      example:
        exported: true
        key: output1
      properties:
        exported:
          description: Whether the output is exported
          example: true
          type: boolean
        key:
          description: The key of the output
          example: output1
          type: string
      required:
      - exported
      - key
      type: object
    TierVersionSet:
      example:
        autoApproveSubscription: false
        baseVersion: "3.0"
        createdAt: 2020-01-01T00:00:00Z
        createdBy: John Doe
        description: Eos voluptas reprehenderit nostrum quia.
        enabledFeatures:
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        features:
          LOGS: true
          METRICS: false
        instanceCount: 12
        latestUpgradePathId: upgrade-12345678
        name: Regular version set
        parentVersion: "2.0"
        productTierId: Beatae beatae.
        releasedAt: 2020-01-01T00:00:00Z
        releasedBy: John Doe
        resources:
        - description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: r-12345678
          imageConfigId: imgc-12345678
          infraConfigId: ic-12345678
          isExternal: true
          managedResourceType: PortsBasedProxy
          name: MySQL multi-writer service
          urlKey: myResource
        - description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: r-12345678
          imageConfigId: imgc-12345678
          infraConfigId: ic-12345678
          isExternal: true
          managedResourceType: PortsBasedProxy
          name: MySQL multi-writer service
          urlKey: myResource
        serviceId: s-12345678
        serviceModelId: Deserunt ab est sequi rem ab in.
        status: Preferred|Active|Deprecated|Pending
        type: Major|Incremental|UserDefined
        updatedAt: 2020-01-01T00:00:00Z
        version: "3.0"
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        baseVersion:
          description: The base version of the version set.
          example: "3.0"
          type: string
        createdAt:
          description: The timestamp when the version set was created.
          example: 2020-01-01T00:00:00Z
          type: string
        createdBy:
          description: The name of the user who created the version set.
          example: John Doe
          type: string
        description:
          description: A brief description of the product-tier version set.
          example: Sit officia voluptatum ducimus sequi impedit qui.
          type: string
        enabledFeatures:
          description: "The features that are enabled for this product tier, including\
            \ scope details and configuration"
          example:
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          items:
            $ref: "#/components/schemas/ProductTierFeatureDetail"
          type: array
        features:
          additionalProperties:
            example: true
            type: boolean
          description: The features that are enabled / disabled for this product tier
          example:
            LOGS: true
            METRICS: false
          type: object
        instanceCount:
          description: The number of instances that are currently running this version
            set.
          example: 12
          format: int64
          type: integer
        latestUpgradePathId:
          description: ID of an Upgrade Path
          example: Dolor debitis beatae saepe et quam fugit.
          type: string
        name:
          description: The name of the product-tier version set.
          example: Regular version set
          type: string
        parentVersion:
          description: The parent version of this release.
          example: "2.0"
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Et velit mollitia amet.
          type: string
        releasedAt:
          description: The timestamp when the version set was released.
          example: 2020-01-01T00:00:00Z
          type: string
        releasedBy:
          description: The name of the user who released the version set.
          example: John Doe
          type: string
        resources:
          description: List of resources that are part of this version set.
          example:
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
            urlKey: myResource
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
            urlKey: myResource
          items:
            $ref: "#/components/schemas/ResourceSummary"
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Sint reprehenderit accusantium.
          type: string
        status:
          description: The tier version set status.
          example: Preferred|Active|Deprecated|Pending
          type: string
        type:
          description: The version-set type of the product-tier.
          example: Major|Incremental|UserDefined
          type: string
        updatedAt:
          description: The timestamp when the version set was updated.
          example: 2020-01-01T00:00:00Z
          type: string
        version:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
      required:
      - baseVersion
      - createdAt
      - enabledFeatures
      - features
      - productTierId
      - releasedAt
      - serviceId
      - serviceModelId
      - status
      - type
      - updatedAt
      - version
      type: object
    TierVersionSetMetadata:
      example:
        productTierId: Beatae beatae.
        releaseNotes: Aspernatur nihil.
        serviceId: s-12345678
        version: Nesciunt nostrum.
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Sed quae recusandae.
          type: string
        releaseNotes:
          description: Release notes for the version set.
          example: Aut sit dolorum et repellat autem.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        version:
          description: The version number for the specific version set.
          example: Accusantium qui in laborum est iusto exercitationem.
          type: string
      required:
      - productTierId
      - serviceId
      - version
      type: object
    TierVersionSetSpecSummary:
      example:
        createdAt: 1972-08-23T05:20:25Z
        hasSpecFile: true
        productTierId: Beatae beatae.
        serviceId: s-12345678
        status: Active
        updatedAt: 2001-06-19T22:12:27Z
        version: "1.0"
      properties:
        createdAt:
          description: When the version was created
          example: 1975-04-18T05:15:06Z
          format: date-time
          type: string
        hasSpecFile:
          description: Whether this version has a stored YAML spec file
          example: true
          type: boolean
        productTierId:
          description: ID of a Product Tier
          example: Et voluptatem voluptatem.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        status:
          description: Status of the version set
          example: Active
          type: string
        updatedAt:
          description: When the version was last updated
          example: 2000-12-02T09:28:35Z
          format: date-time
          type: string
        version:
          description: Version of the tier version set spec
          example: "1.0"
          type: string
      required:
      - hasSpecFile
      - productTierId
      - serviceId
      - status
      - version
      type: object
    UnsetEnvironmentVariablesRequest:
      example:
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        id: r-12345678
        serviceId: s-12345678
        token: gc
      properties:
        environmentVariables:
          description: The environment variables that this resource is no longer dependent
            on
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: "#/components/schemas/EnvironmentVariable"
          type: array
        id:
          description: ID of a resource
          example: Nisi iure et ut ratione velit voluptas.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ef9
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UnsetEnvironmentVariablesRequest2:
      example:
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
      properties:
        environmentVariables:
          description: The environment variables that this resource is no longer dependent
            on
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: "#/components/schemas/EnvironmentVariable"
          type: array
      type: object
    UpdateAccountConfigResourceInstanceRequest:
      example:
        id: instance-abcd1234
        serviceId: service-1234
        setConnection: true
        subscriptionId: sub-abcd1234
        token: "29"
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        serviceId:
          description: The service ID
          example: service-1234
          type: string
        setConnection:
          description: set account config instance connection
          example: true
          type: boolean
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: 5n9
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - subscriptionId
      - token
      type: object
    UpdateAccountConfigResourceInstanceRequest2:
      example:
        serviceId: service-1234
        setConnection: true
        subscriptionId: sub-abcd1234
      properties:
        serviceId:
          description: The service ID
          example: service-1234
          type: string
        setConnection:
          description: set account config instance connection
          example: true
          type: boolean
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
      required:
      - serviceId
      - subscriptionId
      type: object
    UpdateComputeConfigRequest:
      example:
        autoscalingPolicy:
          maxReplicas: 4
          minReplicas: 1
        cpuArchitecture: X86_64|ARM64
        description: my compute config description
        id: cc-12345678
        name: my compute config
        replicaCount: "3"
        resources:
          limits:
            cpu: "1"
            memory: 500Mi
          requests:
            cpu: "0.5"
            memory: 200Mi
        rootVolumeSizeGi: 10
        serviceId: s-12345678
        token: a3
        warmPoolConfiguration:
          minimumNodesInPool: 1
      properties:
        autoscalingPolicy:
          $ref: "#/components/schemas/AutoscalingPolicy"
        cpuArchitecture:
          description: Processor architecture
          example: X86_64|ARM64
          type: string
        description:
          description: Description of the compute config
          example: my compute config description
          minLength: 1
          type: string
        id:
          description: ID of a Compute Config
          example: Dolore vero cupiditate rem quaerat saepe.
          type: string
        name:
          description: Name of the compute config
          example: my compute config
          minLength: 1
          type: string
        replicaCount:
          description: Number of replicas to provision for this logical pool of nodes
            per instance of the resource
          example: "3"
          type: string
        resources:
          $ref: "#/components/schemas/ResourceSpec"
        rootVolumeSizeGi:
          description: Size of the root volume in Gi
          example: 10
          format: int64
          type: integer
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: wa
          minLength: 1
          type: string
        warmPoolConfiguration:
          $ref: "#/components/schemas/WarmPoolConfiguration"
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateComputeConfigRequest2:
      example:
        autoscalingPolicy:
          maxReplicas: 4
          minReplicas: 1
        cpuArchitecture: X86_64|ARM64
        description: my compute config description
        name: my compute config
        replicaCount: "3"
        resources:
          limits:
            cpu: "1"
            memory: 500Mi
          requests:
            cpu: "0.5"
            memory: 200Mi
        rootVolumeSizeGi: 10
        warmPoolConfiguration:
          minimumNodesInPool: 1
      properties:
        autoscalingPolicy:
          $ref: "#/components/schemas/AutoscalingPolicy"
        cpuArchitecture:
          description: Processor architecture
          example: X86_64|ARM64
          type: string
        description:
          description: Description of the compute config
          example: my compute config description
          minLength: 1
          type: string
        name:
          description: Name of the compute config
          example: my compute config
          minLength: 1
          type: string
        replicaCount:
          description: Number of replicas to provision for this logical pool of nodes
            per instance of the resource
          example: "3"
          type: string
        resources:
          $ref: "#/components/schemas/ResourceSpec"
        rootVolumeSizeGi:
          description: Size of the root volume in Gi
          example: 10
          format: int64
          type: integer
        warmPoolConfiguration:
          $ref: "#/components/schemas/WarmPoolConfiguration"
      type: object
    UpdateCustomNetworkRequest:
      example:
        id: n-12345678
        name: Dev us-east-1
        token: u
      properties:
        id:
          description: ID of a custom network
          example: Laboriosam cumque a occaecati ullam omnis quis.
          type: string
        name:
          description: User friendly network name to help distinguish networks with
            same CIDRs
          example: Dev us-east-1
          type: string
        token:
          description: JWT token used to perform authorization
          example: "87"
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    UpdateCustomNetworkRequest2:
      example:
        name: Dev us-east-1
      properties:
        name:
          description: User friendly network name to help distinguish networks with
            same CIDRs
          example: Dev us-east-1
          type: string
      type: object
    UpdateDeploymentConfigRequest:
      example:
        description: A production deployment config
        id: dc-12345678
        infraRollConfiguration:
          infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
          maximumNumberOfResourceInstancesPerBatch: 1
          maximumUnavailableReplicas: 1
        name: Production
        rolloutPriorityList:
        - region-12345678
        - region-abcd1234
        - region-3c3c3c3c
        token: xqb
      properties:
        description:
          description: A brief description of the deployment config
          example: A production deployment config
          type: string
        id:
          description: ID of a Deployment Config
          example: Odit non.
          type: string
        infraRollConfiguration:
          $ref: "#/components/schemas/InfraRollConfiguration"
        name:
          description: Name of the deployment config
          example: Production
          type: string
        rolloutPriorityList:
          example:
          - region-12345678
          - region-abcd1234
          - region-3c3c3c3c
          items:
            description: ID of a Region
            example: Consequatur et ut hic assumenda sint omnis.
            type: string
          type: array
        token:
          description: JWT token used to perform authorization
          example: zf
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    UpdateDeploymentConfigRequest2:
      example:
        description: A production deployment config
        infraRollConfiguration:
          infraRolloutStrategy: APPLY_IMMEDIATELY
          maximumNumberOfResourceInstancesPerBatch: 1
          maximumUnavailableReplicas: 1
        name: Production
        rolloutPriorityList:
        - region-12345678
        - region-abcd1234
        - region-3c3c3c3c
      properties:
        description:
          description: A brief description of the deployment config
          example: A production deployment config
          type: string
        infraRollConfiguration:
          $ref: "#/components/schemas/InfraRollConfiguration"
        name:
          description: Name of the deployment config
          example: Production
          type: string
        rolloutPriorityList:
          example:
          - region-12345678
          - region-abcd1234
          - region-3c3c3c3c
          items:
            example: Ea sit ut est.
            type: string
          type: array
      type: object
    UpdateFileContentRequest:
      example:
        content_type: multipart/form-data; boundary=boundary
        fileId: f-12345678
        id: r-12345678
        serviceId: s-12345678
        token: ssr
      properties:
        content_type:
          default: multipart/form-data; boundary=boundary
          description: "Content-Type header, must define value for multipart boundary."
          example: multipart/form-data; boundary=boundary
          pattern: "multipart/[^;]+; boundary=.+"
          type: string
        fileId:
          description: ID of a File
          example: Sit quasi eligendi autem.
          type: string
        id:
          description: ID of a resource
          example: Iure omnis placeat.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: sje
          minLength: 1
          type: string
      required:
      - content_type
      - fileId
      - id
      - serviceId
      - token
      type: object
    UpdateFileMetadataRequest:
      example:
        description: A file to store the configuration for the resource
        fileId: f-12345678
        id: r-12345678
        mountPath: /etc/config
        name: file.txt
        serviceId: s-12345678
        token: 6t
      properties:
        description:
          description: The description of the file
          example: A file to store the configuration for the resource
          type: string
        fileId:
          description: ID of a File
          example: Doloribus pariatur.
          type: string
        id:
          description: ID of a resource
          example: Ipsa cum consectetur molestias modi.
          type: string
        mountPath:
          description: The mount path of the file
          example: /etc/config
          type: string
        name:
          description: The name of the file
          example: file.txt
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "0"
          minLength: 1
          type: string
      required:
      - fileId
      - id
      - serviceId
      - token
      type: object
    UpdateFileMetadataRequest2:
      example:
        description: A file to store the configuration for the resource
        mountPath: /etc/config
        name: file.txt
      properties:
        description:
          description: The description of the file
          example: A file to store the configuration for the resource
          type: string
        mountPath:
          description: The mount path of the file
          example: /etc/config
          type: string
        name:
          description: The name of the file
          example: file.txt
          type: string
      type: object
    UpdateIdentityProviderRequest:
      example:
        authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
        disabled: false
        emailIdentifiers: company.com
        environmentType: production
        id: idp-12345678
        loginButtonIconUrl: https://example.com/icon.png
        loginButtonText: Login with Google
        name: Google for my company
        scopes: openid email profile
        token: "n"
        tokenEndpoint: https://oauth2.googleapis.com/token
        userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
      properties:
        authorizationEndpoint:
          description: The authorization endpoint of the Identity Provider
          example: https://accounts.google.com/o/oauth2/auth
          type: string
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
        disabled:
          description: Whether the Identity Provider is disabled
          example: false
          type: boolean
        emailIdentifiers:
          description: The email identifiers to use for the Identity Provider
          example: company.com
          type: string
        environmentType:
          description: The type of environment for the Identity Provider
          example: production
          type: string
        id:
          description: ID of an Identity Provider
          example: Est saepe aut culpa ad corporis.
          type: string
        loginButtonIconUrl:
          description: The URL of the icon to use for the login button
          example: https://example.com/icon.png
          type: string
        loginButtonText:
          description: The text to use for the login button
          example: Login with Google
          type: string
        name:
          description: The name of the Identity Provider
          example: Google for my company
          type: string
        scopes:
          description: The scopes to request from the Identity Provider
          example: openid email profile
          type: string
        token:
          description: JWT token used to perform authorization
          example: 5m
          minLength: 1
          type: string
        tokenEndpoint:
          description: The token endpoint of the Identity Provider
          example: https://oauth2.googleapis.com/token
          type: string
        userInfoEndpoint:
          description: The user info endpoint of the Identity Provider
          example: https://www.googleapis.com/oauth2/v3/userinfo
          type: string
      required:
      - id
      - token
      type: object
    UpdateIdentityProviderRequest2:
      example:
        authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
        disabled: false
        emailIdentifiers: company.com
        environmentType: production
        loginButtonIconUrl: https://example.com/icon.png
        loginButtonText: Login with Google
        name: Google for my company
        scopes: openid email profile
        tokenEndpoint: https://oauth2.googleapis.com/token
        userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
      properties:
        authorizationEndpoint:
          description: The authorization endpoint of the Identity Provider
          example: https://accounts.google.com/o/oauth2/auth
          type: string
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
        disabled:
          description: Whether the Identity Provider is disabled
          example: false
          type: boolean
        emailIdentifiers:
          description: The email identifiers to use for the Identity Provider
          example: company.com
          type: string
        environmentType:
          description: The type of environment for the Identity Provider
          example: production
          type: string
        loginButtonIconUrl:
          description: The URL of the icon to use for the login button
          example: https://example.com/icon.png
          type: string
        loginButtonText:
          description: The text to use for the login button
          example: Login with Google
          type: string
        name:
          description: The name of the Identity Provider
          example: Google for my company
          type: string
        scopes:
          description: The scopes to request from the Identity Provider
          example: openid email profile
          type: string
        tokenEndpoint:
          description: The token endpoint of the Identity Provider
          example: https://oauth2.googleapis.com/token
          type: string
        userInfoEndpoint:
          description: The user info endpoint of the Identity Provider
          example: https://www.googleapis.com/oauth2/v3/userinfo
          type: string
      type: object
    UpdateImageConfigRequest:
      description: Update the image configuration for an existing entity
      example:
        customImageCommandsAndArgs:
          args:
          - -d
          - mysql
          commands:
          - echo
          - "Hello, World!"
        description: An image configuration for my new entity
        id: imgc-12345678
        imageName: mysql
        imageRegistryId: ir-12345678
        imageSignaturePublicKeyPEM: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        imageTag: v1
        serviceId: s-12345678
        token: cw
      properties:
        customImageCommandsAndArgs:
          $ref: "#/components/schemas/CustomImageCommandsAndArgs"
        description:
          description: A brief description of the image configuration
          example: An image configuration for my new entity
          type: string
        id:
          description: ID of an Image Config
          example: Optio debitis quisquam aspernatur animi.
          type: string
        imageName:
          description: Name of the container image
          example: mysql
          minLength: 1
          type: string
        imageRegistryId:
          description: ID of an Image Registry
          example: Quis sit cumque modi quia.
          type: string
        imageSignaturePublicKeyPEM:
          description: PEM-encoded Public key part of the key used to sign the container
            image
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        imageTag:
          description: Tag representing the software image version that is currently
            preferred
          example: v1
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: hpq
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateImageConfigRequest2:
      example:
        customImageCommandsAndArgs:
          args:
          - -d
          - mysql
          commands:
          - echo
          - "Hello, World!"
        description: An image configuration for my new entity
        imageName: mysql
        imageRegistryId: Labore id ex eos sapiente rerum.
        imageSignaturePublicKeyPEM: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        imageTag: v1
      properties:
        customImageCommandsAndArgs:
          $ref: "#/components/schemas/CustomImageCommandsAndArgs"
        description:
          description: A brief description of the image configuration
          example: An image configuration for my new entity
          type: string
        imageName:
          description: Name of the container image
          example: mysql
          minLength: 1
          type: string
        imageRegistryId:
          description: The image registry ID to use for the infra
          example: Atque explicabo qui in neque et ipsum.
          type: string
        imageSignaturePublicKeyPEM:
          description: PEM-encoded Public key part of the key used to sign the container
            image
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        imageTag:
          description: Tag representing the software image version that is currently
            preferred
          example: v1
          type: string
      type: object
    UpdateImageRegistryRequest:
      description: Update an HTTP API v2 Docker Image Registry
      example:
        description: DockerHub is a public Docker Image Registry
        host: docker.io
        id: ir-12345678
        name: DockerHub
        password: mypassword
        token: "5"
        username: myusername
      properties:
        description:
          description: A brief description of the Image Registry
          example: DockerHub is a public Docker Image Registry
          type: string
        host:
          description: The Image Registry host
          example: docker.io
          type: string
        id:
          description: ID of an Image Registry
          example: Sapiente quaerat illo hic suscipit asperiores.
          type: string
        name:
          description: Name of the Image Registry
          example: DockerHub
          type: string
        password:
          description: The password to use when authenticating to the Image Registry
          example: mypassword
          type: string
        token:
          description: JWT token used to perform authorization
          example: 3h8
          minLength: 1
          type: string
        username:
          description: The username to use when authenticating to the Image Registry
          example: myusername
          type: string
      required:
      - id
      - token
      type: object
    UpdateImageRegistryRequest2:
      example:
        description: DockerHub is a public Docker Image Registry
        host: docker.io
        name: DockerHub
        password: mypassword
        username: myusername
      properties:
        description:
          description: A brief description of the Image Registry
          example: DockerHub is a public Docker Image Registry
          type: string
        host:
          description: The Image Registry host
          example: docker.io
          type: string
        name:
          description: Name of the Image Registry
          example: DockerHub
          type: string
        password:
          description: The password to use when authenticating to the Image Registry
          example: mypassword
          type: string
        username:
          description: The username to use when authenticating to the Image Registry
          example: myusername
          type: string
      type: object
    UpdateInfraConfigRequest:
      description: Update the infra required to host a resource
      example:
        computeConfigId: cc-12345678
        customTag:
          key: customKey
          value: customValue
        description: Infra config used for the base tier MySQL service
        id: ic-12345678
        name: MySQL Writer Infra Config
        networkConfigId: nc-12345678
        serviceId: s-12345678
        storageConfigId: sc-12345678
        token: f
      properties:
        computeConfigId:
          description: ID of a Compute Config
          example: Voluptas architecto qui eaque iure quae aut.
          type: string
        customTag:
          $ref: "#/components/schemas/CustomTag"
        description:
          description: The description for the infra config
          example: Infra config used for the base tier MySQL service
          type: string
        id:
          description: ID of an Infra Config
          example: Quod corporis voluptatem et ea recusandae.
          type: string
        name:
          description: The name of the infra config
          example: MySQL Writer Infra Config
          type: string
        networkConfigId:
          description: ID of a Network Config
          example: Veniam quae praesentium animi.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        storageConfigId:
          description: ID of a Storage Config
          example: Nostrum eligendi aut.
          type: string
        token:
          description: JWT token used to perform authorization
          example: i
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateInfraConfigRequest2:
      example:
        computeConfigId: Quisquam quis quae laboriosam.
        customTag:
          key: customKey
          value: customValue
        description: Infra config used for the base tier MySQL service
        name: MySQL Writer Infra Config
        networkConfigId: Perferendis quae modi.
        storageConfigId: Id minus.
      properties:
        computeConfigId:
          description: The compute config ID
          example: Ut mollitia.
          type: string
        customTag:
          $ref: "#/components/schemas/CustomTag"
        description:
          description: The description for the infra config
          example: Infra config used for the base tier MySQL service
          type: string
        name:
          description: The name of the infra config
          example: MySQL Writer Infra Config
          type: string
        networkConfigId:
          description: The network config ID
          example: Et molestiae molestiae id voluptates nisi.
          type: string
        storageConfigId:
          description: The storage config ID per compute node
          example: Ratione atque ipsa vero voluptatibus praesentium.
          type: string
      type: object
    UpdateInputParameterRequest:
      example:
        defaultValue: "[\"1\", \"2.8\", \"3\"]"
        description: Perferendis natus enim architecto et aut.
        hasOptions: true
        id: var-12345678
        labeledOptions:
          large: t3.xlarge
          medium: t3.large
          small: t3.medium
        limits:
          max: Vel voluptas.
          maxLength: Architecto assumenda et voluptas perferendis enim.
          min: Beatae voluptas mollitia.
          minLength: Nemo inventore tempora.
        modifiable: true
        name: s
        options:
        - "[\"1\", \"2.8\", \"3\"]"
        - "[\"3.4\", \"4.5\"]"
        regex: "^[0-9]+$"
        required: true
        serviceId: s-12345678
        tabIndex: 1
        token: q8p
      properties:
        defaultValue:
          description: Default value to use for an optional input parameter represented
            as a string
          example: "[\"1\", \"2.8\", \"3\"]"
          type: string
        description:
          description: A brief description of the input parameter
          example: Est quaerat debitis non sit vel.
          type: string
        hasOptions:
          description: Marks the input parameter to be selectable from a list of values
          example: false
          type: boolean
        id:
          description: ID of an Input Parameter
          example: Autem esse quis aperiam.
          type: string
        labeledOptions:
          additionalProperties:
            example: Dolores odit voluptas voluptatem.
            type: string
          description: "A map for labeled options. The key is the label and the value\
            \ is the option. When the option is selected, the label will be displayed\
            \ to the end customer. Specify either options or labeledOptions when defining\
            \ the input parameter."
          example:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          type: object
        limits:
          $ref: "#/components/schemas/Limits"
        modifiable:
          description: Marks the input parameter as immutable
          example: true
          type: boolean
        name:
          description: External name for the input parameter
          example: o0
          minLength: 1
          type: string
        options:
          description: A list of options to restrict the value of the input parameter
            to (represented as a string)
          example:
          - "[\"1\", \"2.8\", \"3\"]"
          - "[\"3.4\", \"4.5\"]"
          items:
            example: Iusto accusantium esse assumenda et.
            type: string
          type: array
        regex:
          description: Regular expression pattern for validating the input parameter
            value
          example: "^[0-9]+$"
          type: string
        required:
          description: Enforces the input parameter as a required parameter
          example: false
          type: boolean
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        tabIndex:
          default: 0
          description: Index for parameter ordering in the SaaS portal
          example: 1
          format: int64
          type: integer
        token:
          description: JWT token used to perform authorization
          example: l3
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateInputParameterRequest2:
      example:
        defaultValue: "[\"1\", \"2.8\", \"3\"]"
        description: Qui ut quisquam ratione.
        hasOptions: false
        labeledOptions:
          large: t3.xlarge
          medium: t3.large
          small: t3.medium
        limits:
          max: Omnis et recusandae amet voluptates.
          maxLength: Dolores enim molestiae.
          min: Odit voluptatem quae eaque voluptatibus voluptatem non.
          minLength: Nobis quia aut nihil.
        modifiable: true
        name: 3n
        options:
        - "[\"1\", \"2.8\", \"3\"]"
        - "[\"3.4\", \"4.5\"]"
        regex: "^[0-9]+$"
        required: true
        tabIndex: 1
      properties:
        defaultValue:
          description: Default value to use for an optional input parameter represented
            as a string
          example: "[\"1\", \"2.8\", \"3\"]"
          type: string
        description:
          description: A brief description of the input parameter
          example: Esse et totam.
          type: string
        hasOptions:
          description: Marks the input parameter to be selectable from a list of values
          example: true
          type: boolean
        labeledOptions:
          additionalProperties:
            example: Itaque voluptates illum vitae ea deserunt aliquid.
            type: string
          description: "A map for labeled options. The key is the label and the value\
            \ is the option. When the option is selected, the label will be displayed\
            \ to the end customer. Specify either options or labeledOptions when defining\
            \ the input parameter."
          example:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          type: object
        limits:
          $ref: "#/components/schemas/Limits"
        modifiable:
          description: Marks the input parameter as immutable
          example: true
          type: boolean
        name:
          description: External name for the input parameter
          example: 6d
          minLength: 1
          type: string
        options:
          description: A list of options to restrict the value of the input parameter
            to (represented as a string)
          example:
          - "[\"1\", \"2.8\", \"3\"]"
          - "[\"3.4\", \"4.5\"]"
          items:
            example: Velit iusto ipsam blanditiis earum quis.
            type: string
          type: array
        regex:
          description: Regular expression pattern for validating the input parameter
            value
          example: "^[0-9]+$"
          type: string
        required:
          description: Enforces the input parameter as a required parameter
          example: true
          type: boolean
        tabIndex:
          default: 0
          description: Index for parameter ordering in the SaaS portal
          example: 1
          format: int64
          type: integer
      type: object
    UpdateInstanceStorageVolumeConfigRequest:
      example:
        id: svc-12345678
        instanceStorageIops: "7500"
        instanceStorageThroughputMiBps: "128"
        instanceStorageType: AWS::EBS_GP2
        serviceId: s-12345678
        token: br0
      properties:
        id:
          description: ID of a Storage Volume Config
          example: Alias sed qui aut excepturi.
          type: string
        instanceStorageIops:
          description: The IOPS provisioned for the configured instance storage type
          example: "7500"
          type: string
        instanceStorageThroughputMiBps:
          description: The throughput (in MiBps) provisioned for the configured instance
            storage type
          example: "128"
          type: string
        instanceStorageType:
          description: The type of the storage for a compute instance
          example: AWS::EBS_GP2
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: gl
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateInstanceStorageVolumeConfigRequest2:
      example:
        instanceStorageIops: "7500"
        instanceStorageThroughputMiBps: "128"
        instanceStorageType: AWS::EBS_GP2
      properties:
        instanceStorageIops:
          description: The IOPS provisioned for the configured instance storage type
          example: "7500"
          type: string
        instanceStorageThroughputMiBps:
          description: The throughput (in MiBps) provisioned for the configured instance
            storage type
          example: "128"
          type: string
        instanceStorageType:
          description: The type of the storage for a compute instance
          example: AWS::EBS_GP2
          type: string
      type: object
    UpdateLimitRequest:
      example:
        description: A premium limit
        family: COMPUTE_INFRA
        key: MAX_VIRTUAL_CORES_PER_RESOURCE
        name: Premium Tier
        token: "66"
        value: 4
      properties:
        description:
          description: A brief description of the limit
          example: A premium limit
          type: string
        family:
          description: The limit family
          example: SERVICE
          type: string
        key:
          description: Unique key to identify the limit
          example: MAX_VIRTUAL_CORES_PER_RESOURCE
          type: string
        name:
          description: Name of the limit
          example: Premium Tier
          type: string
        token:
          description: JWT token used to perform authorization
          example: x
          minLength: 1
          type: string
        value:
          description: Value of the limit being enforced
          example: 4
          format: int64
          type: integer
      required:
      - family
      - key
      - token
      - value
      type: object
    UpdateLimitRequest2:
      example:
        description: A premium limit
        name: Premium Tier
        value: 4
      properties:
        description:
          description: A brief description of the limit
          example: A premium limit
          type: string
        name:
          description: Name of the limit
          example: Premium Tier
          type: string
        value:
          description: Value of the limit being enforced
          example: 4
          format: int64
          type: integer
      required:
      - value
      type: object
    UpdateNetworkConfigRequest:
      example:
        description: A multi-zone HA network config
        endpointPerReplica: true
        id: nc-12345678
        internal: true
        name: Multi-zone
        openPorts:
        - 1299
        - 3306
        privateNetworkingConfiguration:
          privateLinkConfiguration:
            awsPrivateLinkConfigurations:
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
        publicNetworkingConfiguration:
          enableClusterLoadBalancer: true
          enableNodeLoadBalancer: true
        serviceId: s-12345678
        stableEgressIP: true
        tlsTerminationPort: 443
        token: o6
        zoneConfiguration: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
      properties:
        description:
          description: A brief description of the network config
          example: A multi-zone HA network config
          type: string
        endpointPerReplica:
          description: Generates a DNS endpoint per-replica for this network config
          example: true
          type: boolean
        id:
          description: ID of a Network Config
          example: Sed fugit quam ab.
          type: string
        internal:
          description: Restrict access to this network config to the internal network
          example: true
          type: boolean
        name:
          description: Name of the network config
          example: Multi-zone
          type: string
        openPorts:
          description: Ports to map to the generated DNS endpoint
          example:
          - 1299
          - 3306
          items:
            example: 1648286564779052431
            format: int64
            type: integer
          type: array
        privateNetworkingConfiguration:
          $ref: "#/components/schemas/PrivateNetworkingConfiguration"
        publicNetworkingConfiguration:
          $ref: "#/components/schemas/PublicNetworkingConfiguration"
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        stableEgressIP:
          description: Create an external node load balancer per node rather than
            expose the node ip directly
          example: true
          type: boolean
        tlsTerminationPort:
          description: The port that hosts the reverse proxy for TLS termination
          example: 443
          format: int64
          type: integer
        token:
          description: JWT token used to perform authorization
          example: d
          minLength: 1
          type: string
        zoneConfiguration:
          description: The preferred type of zonal availability for this resource
            and the specific zone(s) to deploy in
          example: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateNetworkConfigRequest2:
      example:
        description: A multi-zone HA network config
        endpointPerReplica: true
        internal: true
        name: Multi-zone
        openPorts:
        - 1299
        - 3306
        privateNetworkingConfiguration:
          privateLinkConfiguration:
            awsPrivateLinkConfigurations:
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
        publicNetworkingConfiguration:
          enableClusterLoadBalancer: true
          enableNodeLoadBalancer: true
        stableEgressIP: true
        tlsTerminationPort: 443
        zoneConfiguration: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
      properties:
        description:
          description: A brief description of the network config
          example: A multi-zone HA network config
          type: string
        endpointPerReplica:
          description: Generates a DNS endpoint per-replica for this network config
          example: true
          type: boolean
        internal:
          description: Restrict access to this network config to the internal network
          example: true
          type: boolean
        name:
          description: Name of the network config
          example: Multi-zone
          type: string
        openPorts:
          description: Ports to map to the generated DNS endpoint
          example:
          - 1299
          - 3306
          items:
            example: 8352684858285914215
            format: int64
            type: integer
          type: array
        privateNetworkingConfiguration:
          $ref: "#/components/schemas/PrivateNetworkingConfiguration"
        publicNetworkingConfiguration:
          $ref: "#/components/schemas/PublicNetworkingConfiguration"
        stableEgressIP:
          description: Create an external node load balancer per node rather than
            expose the node ip directly
          example: true
          type: boolean
        tlsTerminationPort:
          description: The port that hosts the reverse proxy for TLS termination
          example: 443
          format: int64
          type: integer
        zoneConfiguration:
          description: The preferred type of zonal availability for this resource
            and the specific zone(s) to deploy in
          example: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
          type: string
      type: object
    UpdateOutputParameterRequest:
      example:
        description: Username of the user created in the target system
        genericCommandValueProvider:
          args:
          - -s
          - http://example.com/api/username
          command: curl
          environment:
            PATH: /usr/local/bin:/usr/bin:/bin
          retryCount: 3
          shell: /bin/bash
          timeout: 30
          workingDir: /tmp
        id: op-12345678
        kubectlValueProvider:
          command: "get secret {{ $sys.id }}-creds -o jsonpath='{.data.username}'"
          context: production
          environment:
            KUBECONFIG: /path/to/config
          namespace: default
          retryCount: 3
          timeout: 30
        name: Username
        serviceId: s-12345678
        token: "n"
        value: johndoe
        valueRef: $var.username
        valueType: Boolean|Float64|String|Secret|Password
      properties:
        description:
          description: Description of the output variable being exported
          example: Username of the user created in the target system
          minLength: 1
          type: string
        genericCommandValueProvider:
          $ref: "#/components/schemas/GenericCommandValueProviderConfig"
        id:
          description: ID of an Output Parameter
          example: Occaecati ipsam hic adipisci.
          type: string
        kubectlValueProvider:
          $ref: "#/components/schemas/KubectlValueProviderConfig"
        name:
          description: External name of the output variable being exported
          example: Username
          minLength: 1
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 1p
          minLength: 1
          type: string
        value:
          description: Value of the output variable being exported
          example: johndoe
          minLength: 1
          type: string
        valueRef:
          description: Reference to an input variable that will be used to set the
            value of the output variable being exported
          example: $var.username
          type: string
        valueType:
          description: Type of the variable encoding the value
          example: Boolean|Float64|String|Secret|Password
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateOutputParameterRequest2:
      example:
        description: Username of the user created in the target system
        genericCommandValueProvider:
          args:
          - -s
          - http://example.com/api/username
          command: curl
          environment:
            PATH: /usr/local/bin:/usr/bin:/bin
          retryCount: 3
          shell: /bin/bash
          timeout: 30
          workingDir: /tmp
        kubectlValueProvider:
          command: "get secret {{ $sys.id }}-creds -o jsonpath='{.data.username}'"
          context: production
          environment:
            KUBECONFIG: /path/to/config
          namespace: default
          retryCount: 3
          timeout: 30
        name: Username
        value: johndoe
        valueRef: $var.username
        valueType: Boolean|Float64|String|Secret|Password
      properties:
        description:
          description: Description of the output variable being exported
          example: Username of the user created in the target system
          minLength: 1
          type: string
        genericCommandValueProvider:
          $ref: "#/components/schemas/GenericCommandValueProviderConfig"
        kubectlValueProvider:
          $ref: "#/components/schemas/KubectlValueProviderConfig"
        name:
          description: External name of the output variable being exported
          example: Username
          minLength: 1
          type: string
        value:
          description: Value of the output variable being exported
          example: johndoe
          minLength: 1
          type: string
        valueRef:
          description: Reference to an input variable that will be used to set the
            value of the output variable being exported
          example: $var.username
          type: string
        valueType:
          example: Boolean|Float64|String|Secret|Password
          type: string
      type: object
    UpdatePasswordRequest:
      example:
        currentPassword: currentPassword
        currentPasswordHash: currentPasswordHash
        password: password
        token: gtz
      properties:
        currentPassword:
          example: currentPassword
          minLength: 1
          type: string
        currentPasswordHash:
          example: currentPasswordHash
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: 3s
          minLength: 1
          type: string
      required:
      - password
      - token
      type: object
    UpdatePasswordRequest2:
      example:
        currentPassword: currentPassword
        currentPasswordHash: currentPasswordHash
        password: password
      properties:
        currentPassword:
          example: currentPassword
          minLength: 1
          type: string
        currentPasswordHash:
          example: currentPasswordHash
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
      required:
      - password
      type: object
    UpdatePipelineRequest:
      example:
        description: MySQL SaaS promotion pipeline
        id: p-12345678
        name: my-pipeline
        serviceEnvironmentSequence:
        - se-12345678
        - se-23456789
        serviceId: s-12345678
        token: 8uq
      properties:
        description:
          description: Description of the pipeline
          example: MySQL SaaS promotion pipeline
          type: string
        id:
          description: ID of a Pipeline
          example: Omnis qui tenetur esse esse alias.
          type: string
        name:
          description: Name of the pipeline
          example: my-pipeline
          type: string
        serviceEnvironmentSequence:
          description: Sequence of service environments to be deployed in the pipeline
          example:
          - se-12345678
          - se-23456789
          items:
            description: ID of a Service Environment
            example: se-123456
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 1fv
          minLength: 1
          type: string
      required:
      - token
      type: object
    UpdateProductTierRequest:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        billingProductID: abc123
        billingProviders:
        - STRIPE
        - BRING_YOUR_OWN
        defaultBillingProvider: STRIPE
        deploymentConfiguration:
          onPremInstallerTools:
            helperUserScript:
              content: echo 'Hello World'
          requirements:
            minimumK8sVersion: 1.23.1
        description: A premium product tier
        documentation: Any documentation
        exportUsageMetering: true
        exportUsageMeteringConfig:
          GCS:
            GCSBucketName: my_billing_bucket_name
          S3:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
            S3BucketRegion: us-east-1
        gcpRegions:
        - us-central1
        id: pt-12345678
        isDisabled: false
        maxNumberOfInstances: 5
        name: Premium
        planDescription: A premium plan
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Replica hours:
            amount: 0.001
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        pricing:
          price1: value1
        privateRegions:
        - n/a
        serviceId: s-12345678
        support: Any support
        tierType: OMNISTRATE_DEDICATED_TENANCY
        token: 4z
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Dolorem repudiandae et soluta consequatur fugit non.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this product tier is available on
          example:
          - northcentralus
          items:
            example: Laboriosam rerum repellat.
            type: string
          type: array
        billingProductID:
          description: Optional billing product ID for tax purposes
          example: abc123
          type: string
        billingProviders:
          description: List of billing providers to be used for the product tier
          example:
          - STRIPE
          - BRING_YOUR_OWN
          items:
            description: The billing provider type
            example: STRIPE|BRING_YOUR_OWN
            type: string
          type: array
        defaultBillingProvider:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        deploymentConfiguration:
          $ref: "#/components/schemas/ProductTierDeploymentConfiguration"
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        exportUsageMetering:
          description: Export usage metering data
          example: true
          type: boolean
        exportUsageMeteringConfig:
          additionalProperties: true
          description: Export usage metering data configuration
          example:
            GCS:
              GCSBucketName: my_billing_bucket_name
            S3:
              S3BucketArn: arn:aws:s3:::my_billing_bucket_name
              S3BucketRegion: us-east-1
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Quos dignissimos architecto soluta et.
            type: string
          type: array
        id:
          description: ID of a Product Tier
          example: Quasi similique est eos et saepe culpa.
          type: string
        isDisabled:
          description: Update the product tier's state as enabled/disabled. Enabling
            the product tier will let end-customers subscribe and use the service
            plan.
          example: false
          type: boolean
        maxNumberOfInstances:
          description: Maximum number of instances. Set to -1 for unlimited.
          example: 5
          format: int64
          type: integer
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricePerUnit:
          additionalProperties: true
          description: Price per unit.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Replica hours:
              amount: 0.001
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        pricing:
          description: Pricing
          example:
            price1: value1
        privateRegions:
          description: The private regions that this product tier is available on
          example:
          - n/a
          items:
            example: Totam fugit reiciendis neque.
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        support:
          description: Support
          example: Any support
          type: string
        tierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        token:
          description: JWT token used to perform authorization
          example: ti9
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateProductTierRequest2:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        billingProductID: abc123
        billingProviders:
        - STRIPE
        - BRING_YOUR_OWN
        defaultBillingProvider: STRIPE|BRING_YOUR_OWN
        deploymentConfiguration:
          onPremInstallerTools:
            helperUserScript:
              content: echo 'Hello World'
          requirements:
            minimumK8sVersion: 1.23.1
        description: A premium product tier
        documentation: Any documentation
        exportUsageMetering: true
        exportUsageMeteringConfig:
          GCS:
            GCSBucketName: my_billing_bucket_name
          S3:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
            S3BucketRegion: us-east-1
        gcpRegions:
        - us-central1
        isDisabled: false
        maxNumberOfInstances: 5
        name: Premium
        planDescription: A premium plan
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Replica hours:
            amount: 0.001
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        pricing:
          price1: value1
        privateRegions:
        - n/a
        support: Any support
        tierType: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Iste ipsa cum iure enim.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this product tier is available on
          example:
          - northcentralus
          items:
            example: Ut quaerat.
            type: string
          type: array
        billingProductID:
          description: Optional billing product ID for tax purposes
          example: abc123
          type: string
        billingProviders:
          description: List of billing providers to be used for the product tier
          example:
          - STRIPE
          - BRING_YOUR_OWN
          items:
            example: STRIPE|BRING_YOUR_OWN
            type: string
          type: array
        defaultBillingProvider:
          description: The default billing provider to be used for the product tier
          example: STRIPE|BRING_YOUR_OWN
          type: string
        deploymentConfiguration:
          $ref: "#/components/schemas/ProductTierDeploymentConfiguration"
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        exportUsageMetering:
          description: Export usage metering data
          example: true
          type: boolean
        exportUsageMeteringConfig:
          additionalProperties: true
          description: Export usage metering data configuration
          example:
            GCS:
              GCSBucketName: my_billing_bucket_name
            S3:
              S3BucketArn: arn:aws:s3:::my_billing_bucket_name
              S3BucketRegion: us-east-1
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Similique ea sit eligendi eum.
            type: string
          type: array
        isDisabled:
          description: Update the product tier's state as enabled/disabled. Enabling
            the product tier will let end-customers subscribe and use the service
            plan.
          example: false
          type: boolean
        maxNumberOfInstances:
          description: Maximum number of instances. Set to -1 for unlimited.
          example: 5
          format: int64
          type: integer
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricePerUnit:
          additionalProperties: true
          description: Price per unit.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Replica hours:
              amount: 0.001
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        pricing:
          description: Pricing
          example:
            price1: value1
        privateRegions:
          description: The private regions that this product tier is available on
          example:
          - n/a
          items:
            example: Ipsum libero corrupti ex perspiciatis.
            type: string
          type: array
        support:
          description: Support
          example: Any support
          type: string
        tierType:
          description: Tier type
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
      type: object
    UpdateResourceInstanceRequest:
      example:
        customTags:
        - key: customKey1
          value: customValue1
        - key: customKey2
          value: customValue2
        id: instance-abcd1234
        network_type: PUBLIC|INTERNAL
        productTierKey: premium
        requestParams:
          param1: value1
          param2: value2
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: n4w
      properties:
        customTags:
          description: The custom tag for the resource instance
          example:
          - key: customKey1
            value: customValue1
          - key: customKey2
            value: customValue2
          items:
            $ref: "#/components/schemas/CustomTag"
          type: array
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        requestParams:
          description: The request parameters
          example:
            param1: value1
            param2: value2
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Neque nobis quaerat.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: "1"
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    UpdateResourceInstanceRequest2:
      example:
        customTags:
        - key: customKey1
          value: customValue1
        - key: customKey2
          value: customValue2
        network_type: PUBLIC|INTERNAL
        requestParams:
          param1: value1
          param2: value2
      properties:
        customTags:
          description: The custom tag for the resource instance
          example:
          - key: customKey1
            value: customValue1
          - key: customKey2
            value: customValue2
          items:
            $ref: "#/components/schemas/CustomTag"
          type: array
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        requestParams:
          description: The request parameters
          example:
            param1: value1
            param2: value2
      type: object
    UpdateResourceRequest:
      example:
        additionalSecurityContext:
          AddCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          DropCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          SupplementalGroupIDs:
          - 1001
          - 999
        agentConfiguration:
          codeInterpreter:
            allowedPackages:
            - pandas
            - numpy
            - matplotlib
            enabled: true
            provider: agentcore
            timeout: 60
          dockerfile: Dockerfile
          evaluations:
          - metrics:
            - relevance
            - helpfulness
            name: response-quality
            schedule: every 6 hours
          memory:
            enabled: true
          monitoring:
            enabled: true
          vectorStore:
            enabled: true
        backupConfiguration:
          backupPeriodInHours: 24
          backupRetentionInDays: 7
        containerImagesRegistryCopyConfiguration:
          images:
          - imageName: postgres
            imageTag: "16"
          - imageName: postgres
            imageTag: "16"
          pullSource:
            credentials:
              password: my-password
              username: my-user
            registryURL: https://my-registry.com
            repositoryName: library
          pushTarget:
            credentials:
              password: my-password
              username: my-user
            registryURL: https://my-registry.com
            repositoryName: library
        customLabels:
          key: value
        customSysCTLs:
          net.ipv4.tcp_syncookies: "1"
        customULimits:
        - ULimitsName: NoProc
          ULimitsType: Soft
          ULimitsValue: 1000
        - ULimitsName: NoFile
          ULimitsType: Hard
          ULimitsValue: 2048
        dependencies:
        - parameterMap:
            clusterId: writerId
            clusterOrg: userDatabase
          resourceId: r-12345678
        - parameterMap:
            clusterId: readerId
            clusterOrg: userDatabase
          resourceId: r-abcdef12
        description: A resource to manage a hosted public SaaS offering of a multi-writer
          MySQL service
        disable: "{{ $var.disableExtraComponents }}"
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        fileSystemConfiguration:
          EFSFileSystemConfiguration:
            PerformanceMode: generalPurpose|maxIO
            ProvisionedThroughputInMibps: 125
            ThroughputMode: provisioned|bursting|elastic
          GCPFilestoreConfiguration:
            Capacity: 1024GiB
            MaxIopsPerTb: 3000
            Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
        helmChartConfiguration:
          autoDiscoverImagesTag: omnistrate/images
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          layeredChartValues:
          - values:
              global:
                image:
                  tag: v1.0.0
                replicaCount: 1
                resources:
                  requests:
                    cpu: 100m
                    memory: 128Mi
          - scope:
              '{{ $sys.cloudProviderName }}': aws
            valuesFile:
              gitConfiguration:
                accessToken: ghp_...
                commitSHA: a1b2c3d4e5f6
                path: aws/production.yaml
                referenceName: refs/heads/main
                repositoryUrl: https://github.com/org/helm-values
          namespace: postgres
          password: my-password
          releaseName: my-release
          runtimeConfiguration:
            disableHooks: true
            recreate: true
            resetThenReuseValues: true
            resetValues: true
            reuseValues: true
            skipCRDs: true
            timeoutNanos: 1000000000
            upgradeCRDs: true
            wait: true
            waitForJobs: true
          username: my-user
        id: r-12345678
        imageConfigId: imgc-12345678
        infraConfigId: ic-12345678
        jobConfig:
          activeDeadlineSeconds: 300
          backoffLimit: 5
        kustomizeConfiguration:
          disableReconciliation: false
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          gitConfiguration:
            accessToken: my-token
            commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
            referenceName: tags/v1.0.0
            repositoryUrl: https://github.com/username/myrepo
            userName: my-user
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          kustomizePath: /kustomize
        l4LoadBalancerConfiguration:
          ingressPortConfiguration:
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8080
            ingressPort: 1234
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8081
            ingressPort: 5678
          - associatedResourceIDs:
            - r-vwxybz12
            - r-poij122v
            backendPort: 8082
            ingressPort: 9012
        l7LoadBalancerConfiguration:
          paths:
          - associatedResourceID: r-12345678
            path: /path
            port: 8080
        name: Galera
        onPremTerraformConfigurations:
          OpenShift:
            gitConfiguration:
              referenceName: ref
              repositoryUrl: gitUrl
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
        operatorCRDConfiguration:
          disableReconciliation: false
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          outputParameters:
            expiresAt: $out.status.notAfter
            issuerName: letsencrypt-prod
          readinessConditions:
            $out.status.conditions[?(@.type=='Ready')].status: true
          supplementalFiles:
          - |
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
          - |-
            apiVersion: ingress.nginx.io/v1
            kind: IngressClass
            metadata:
              name: nginx
            spec:
              controller: nginx.org/ingress-controller
          template: |-
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
                email: test@example.com
                privateKeySecretRef:
                  name: letsencrypt-prod
                solvers:
                - http01:
                    ingress:
                      class: nginx
        serviceId: s-12345678
        terraformConfigurations:
          aws:
            gitConfiguration:
              referenceName: ref
              repositoryUrl: gitUrl
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
        token: 3m
      properties:
        additionalSecurityContext:
          $ref: "#/components/schemas/AdditionalSecurityContext"
        agentConfiguration:
          $ref: "#/components/schemas/AgentConfiguration"
        backupConfiguration:
          $ref: "#/components/schemas/BackupConfiguration"
        containerImagesRegistryCopyConfiguration:
          $ref: "#/components/schemas/ContainerImagesRegistryCopyConfiguration"
        customLabels:
          additionalProperties:
            example: Ullam incidunt voluptatem et molestias.
            type: string
          description: Custom labels for the resource
          example:
            key: value
          type: object
        customSysCTLs:
          additionalProperties:
            example: Qui adipisci.
            type: string
          description: Custom sysctl settings for the resource
          example:
            net.ipv4.tcp_syncookies: "1"
          type: object
        customULimits:
          description: Custom ulimits for the resource
          example:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          items:
            $ref: "#/components/schemas/CustomULimits"
          type: array
        dependencies:
          example:
          - parameterMap:
              clusterId: writerId
              clusterOrg: userDatabase
            resourceId: r-12345678
          - parameterMap:
              clusterId: readerId
              clusterOrg: userDatabase
            resourceId: r-abcdef12
          items:
            $ref: "#/components/schemas/ResourceDependency"
          type: array
        description:
          description: A brief description of the resource
          example: A resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          type: string
        disable:
          description: "Allows resource to be disabled. Expression returning true/false\
            \ can be used as value. Resource is enabled by default, if this property\
            \ is not set."
          example: "{{ $var.disableExtraComponents }}"
          type: string
        environmentVariables:
          description: The environment variables that this resource requires
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: "#/components/schemas/EnvironmentVariable"
          type: array
        fileSystemConfiguration:
          $ref: "#/components/schemas/FileSystemConfiguration"
        helmChartConfiguration:
          $ref: "#/components/schemas/HelmChartConfiguration"
        id:
          description: ID of a resource
          example: Eveniet neque nisi.
          type: string
        imageConfigId:
          description: ID of an Image Config
          example: Magni autem reiciendis modi quo.
          type: string
        infraConfigId:
          description: ID of an Infra Config
          example: Iure voluptatum ut ex.
          type: string
        jobConfig:
          $ref: "#/components/schemas/JobConfig"
        kustomizeConfiguration:
          $ref: "#/components/schemas/KustomizeConfiguration"
        l4LoadBalancerConfiguration:
          $ref: "#/components/schemas/L4LoadBalancerConfiguration"
        l7LoadBalancerConfiguration:
          $ref: "#/components/schemas/L7LoadBalancerConfiguration"
        name:
          description: Name of the resource
          example: Galera
          type: string
        onPremTerraformConfigurations:
          additionalProperties:
            $ref: "#/components/schemas/TerraformConfiguration"
          description: The Terraform configurations for an OnPrem platform
          example:
            OpenShift:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          type: object
        operatorCRDConfiguration:
          $ref: "#/components/schemas/OperatorCRDConfiguration"
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        terraformConfigurations:
          additionalProperties:
            $ref: "#/components/schemas/TerraformConfiguration"
          description: The Terraform configurations for cloud providers
          example:
            aws:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          type: object
        token:
          description: JWT token used to perform authorization
          example: t37
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateResourceRequest2:
      example:
        additionalSecurityContext:
          AddCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          DropCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          SupplementalGroupIDs:
          - 1001
          - 999
        agentConfiguration:
          codeInterpreter:
            allowedPackages:
            - pandas
            - numpy
            - matplotlib
            enabled: true
            provider: agentcore
            timeout: 60
          dockerfile: Dockerfile
          evaluations:
          - metrics:
            - relevance
            - helpfulness
            name: response-quality
            schedule: every 6 hours
          memory:
            enabled: true
          monitoring:
            enabled: true
          vectorStore:
            enabled: true
        backupConfiguration:
          backupPeriodInHours: 24
          backupRetentionInDays: 7
        containerImagesRegistryCopyConfiguration:
          images:
          - imageName: postgres
            imageTag: "16"
          - imageName: postgres
            imageTag: "16"
          - imageName: postgres
            imageTag: "16"
          - imageName: postgres
            imageTag: "16"
          pullSource:
            credentials:
              password: my-password
              username: my-user
            registryURL: https://my-registry.com
            repositoryName: library
          pushTarget:
            credentials:
              password: my-password
              username: my-user
            registryURL: https://my-registry.com
            repositoryName: library
        customLabels:
          key: value
        customSysCTLs:
          net.ipv4.tcp_syncookies: "1"
        customULimits:
        - ULimitsName: NoProc
          ULimitsType: Soft
          ULimitsValue: 1000
        - ULimitsName: NoFile
          ULimitsType: Hard
          ULimitsValue: 2048
        dependencies:
        - parameterMap:
            clusterId: writerId
            clusterOrg: userDatabase
          resourceId: r-12345678
        - parameterMap:
            clusterId: readerId
            clusterOrg: userDatabase
          resourceId: r-abcdef12
        description: A resource to manage a hosted public SaaS offering of a multi-writer
          MySQL service
        disable: "{{ $var.disableExtraComponents }}"
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        fileSystemConfiguration:
          EFSFileSystemConfiguration:
            PerformanceMode: generalPurpose|maxIO
            ProvisionedThroughputInMibps: 125
            ThroughputMode: provisioned|bursting|elastic
          GCPFilestoreConfiguration:
            Capacity: 1024GiB
            MaxIopsPerTb: 3000
            Tier: BASIC_HDD|BASIC_SSD|ENTERPRISE|REGIONAL|ZONAL
        helmChartConfiguration:
          autoDiscoverImagesTag: omnistrate/images
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          layeredChartValues:
          - values:
              global:
                image:
                  tag: v1.0.0
                replicaCount: 1
                resources:
                  requests:
                    cpu: 100m
                    memory: 128Mi
          - scope:
              '{{ $sys.cloudProviderName }}': aws
            valuesFile:
              gitConfiguration:
                accessToken: ghp_...
                commitSHA: a1b2c3d4e5f6
                path: aws/production.yaml
                referenceName: refs/heads/main
                repositoryUrl: https://github.com/org/helm-values
          namespace: postgres
          password: my-password
          releaseName: my-release
          runtimeConfiguration:
            disableHooks: true
            recreate: true
            resetThenReuseValues: true
            resetValues: true
            reuseValues: true
            skipCRDs: true
            timeoutNanos: 1000000000
            upgradeCRDs: true
            wait: true
            waitForJobs: true
          username: my-user
        imageConfigId: Aut exercitationem ea eveniet voluptatem dolorem.
        infraConfigId: Autem provident sequi et id iure praesentium.
        jobConfig:
          activeDeadlineSeconds: 300
          backoffLimit: 5
        kustomizeConfiguration:
          disableReconciliation: false
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          gitConfiguration:
            accessToken: my-token
            commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
            referenceName: tags/v1.0.0
            repositoryUrl: https://github.com/username/myrepo
            userName: my-user
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          kustomizePath: /kustomize
        l4LoadBalancerConfiguration:
          ingressPortConfiguration:
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8080
            ingressPort: 1234
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8081
            ingressPort: 5678
          - associatedResourceIDs:
            - r-vwxybz12
            - r-poij122v
            backendPort: 8082
            ingressPort: 9012
        l7LoadBalancerConfiguration:
          paths:
          - associatedResourceID: r-12345678
            path: /path
            port: 8080
        name: Galera
        onPremTerraformConfigurations:
          OpenShift:
            gitConfiguration:
              referenceName: ref
              repositoryUrl: gitUrl
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
        operatorCRDConfiguration:
          disableReconciliation: true
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          outputParameters:
            expiresAt: $out.status.notAfter
            issuerName: letsencrypt-prod
          readinessConditions:
            $out.status.conditions[?(@.type=='Ready')].status: true
          supplementalFiles:
          - |
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
          - |-
            apiVersion: ingress.nginx.io/v1
            kind: IngressClass
            metadata:
              name: nginx
            spec:
              controller: nginx.org/ingress-controller
          template: |-
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
                email: test@example.com
                privateKeySecretRef:
                  name: letsencrypt-prod
                solvers:
                - http01:
                    ingress:
                      class: nginx
        terraformConfigurations:
          aws:
            gitConfiguration:
              referenceName: ref
              repositoryUrl: gitUrl
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
      properties:
        additionalSecurityContext:
          $ref: "#/components/schemas/AdditionalSecurityContext"
        agentConfiguration:
          $ref: "#/components/schemas/AgentConfiguration"
        backupConfiguration:
          $ref: "#/components/schemas/BackupConfiguration"
        containerImagesRegistryCopyConfiguration:
          $ref: "#/components/schemas/ContainerImagesRegistryCopyConfiguration"
        customLabels:
          additionalProperties:
            example: Impedit veniam ducimus atque unde.
            type: string
          description: Custom labels for the resource
          example:
            key: value
          type: object
        customSysCTLs:
          additionalProperties:
            example: Laborum facilis est.
            type: string
          description: Custom sysctl settings for the resource
          example:
            net.ipv4.tcp_syncookies: "1"
          type: object
        customULimits:
          description: Custom ulimits for the resource
          example:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          items:
            $ref: "#/components/schemas/CustomULimits"
          type: array
        dependencies:
          example:
          - parameterMap:
              clusterId: writerId
              clusterOrg: userDatabase
            resourceId: r-12345678
          - parameterMap:
              clusterId: readerId
              clusterOrg: userDatabase
            resourceId: r-abcdef12
          items:
            $ref: "#/components/schemas/ResourceDependency"
          type: array
        description:
          description: A brief description of the resource
          example: A resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          type: string
        disable:
          description: "Allows resource to be disabled. Expression returning true/false\
            \ can be used as value. Resource is enabled by default, if this property\
            \ is not set."
          example: "{{ $var.disableExtraComponents }}"
          type: string
        environmentVariables:
          description: The environment variables that this resource requires
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: "#/components/schemas/EnvironmentVariable"
          type: array
        fileSystemConfiguration:
          $ref: "#/components/schemas/FileSystemConfiguration"
        helmChartConfiguration:
          $ref: "#/components/schemas/HelmChartConfiguration"
        imageConfigId:
          description: The ID of the image configuration that this resource refers
            to
          example: Aperiam commodi necessitatibus neque sint quae ut.
          type: string
        infraConfigId:
          description: The ID of the infrastructure configuration that this resource
            refers to
          example: Sit dignissimos quia doloribus nesciunt cupiditate voluptatum.
          type: string
        jobConfig:
          $ref: "#/components/schemas/JobConfig"
        kustomizeConfiguration:
          $ref: "#/components/schemas/KustomizeConfiguration"
        l4LoadBalancerConfiguration:
          $ref: "#/components/schemas/L4LoadBalancerConfiguration"
        l7LoadBalancerConfiguration:
          $ref: "#/components/schemas/L7LoadBalancerConfiguration"
        name:
          description: Name of the resource
          example: Galera
          type: string
        onPremTerraformConfigurations:
          additionalProperties:
            $ref: "#/components/schemas/TerraformConfiguration"
          description: The Terraform configurations for various OnPrem platforms
          example:
            OpenShift:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          type: object
        operatorCRDConfiguration:
          $ref: "#/components/schemas/OperatorCRDConfiguration"
        terraformConfigurations:
          additionalProperties:
            $ref: "#/components/schemas/TerraformConfiguration"
          description: The Terraform configurations for various cloud providers
          example:
            aws:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          type: object
      type: object
    UpdateSaaSPortalCustomDomainRequest:
      example:
        customDomain: mycustomdomain.com
        description: My custom domain description
        environmentType: DEV
        name: MyCustomDomain
        token: x1x
      properties:
        customDomain:
          description: The custom domain
          example: mycustomdomain.com
          type: string
        description:
          description: The custom domain description
          example: My custom domain description
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        name:
          description: The custom domain name
          example: MyCustomDomain
          type: string
        token:
          description: JWT token used to perform authorization
          example: lf
          minLength: 1
          type: string
      required:
      - environmentType
      - token
      type: object
    UpdateSaaSPortalCustomDomainRequest2:
      example:
        customDomain: mycustomdomain.com
        description: My custom domain description
        name: MyCustomDomain
      properties:
        customDomain:
          description: The custom domain
          example: mycustomdomain.com
          type: string
        description:
          description: The custom domain description
          example: My custom domain description
          type: string
        name:
          description: The custom domain name
          example: MyCustomDomain
          type: string
      type: object
    UpdateSaaSPortalRequest:
      example:
        customDomain: mycustomdomain.com
        disablePasswordLogin: false
        emailConfig:
          smtpFromEmail: example@gmail.com
          smtpHost: smtp.gmail.com
          smtpPassword: password
          smtpPort: 587
          smtpUsername: username
        environmentType: DEV
        googleAnalyticsTagID: G-123456789
        imageConfig:
          imageName: myimage
          imageRegistry: ghcr.io
          imageTag: latest
        token: i
      properties:
        customDomain:
          description: The custom domain for the SaaS portal
          example: mycustomdomain.com
          type: string
        disablePasswordLogin:
          description: Whether to disable password login for the SaaS portal
          example: false
          type: boolean
        emailConfig:
          $ref: "#/components/schemas/SaaSPortalEmailConfig"
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        googleAnalyticsTagID:
          description: The Google Analytics tag ID for the SaaS portal
          example: G-123456789
          type: string
        imageConfig:
          $ref: "#/components/schemas/SaaSPortalImageConfig"
        token:
          description: JWT token used to perform authorization
          example: ykd
          minLength: 1
          type: string
      required:
      - environmentType
      - token
      type: object
    UpdateSaaSPortalRequest2:
      example:
        customDomain: mycustomdomain.com
        disablePasswordLogin: false
        emailConfig:
          smtpFromEmail: example@gmail.com
          smtpHost: smtp.gmail.com
          smtpPassword: password
          smtpPort: 587
          smtpUsername: username
        googleAnalyticsTagID: G-123456789
        imageConfig:
          imageName: myimage
          imageRegistry: ghcr.io
          imageTag: latest
      properties:
        customDomain:
          description: The custom domain for the SaaS portal
          example: mycustomdomain.com
          type: string
        disablePasswordLogin:
          description: Whether to disable password login for the SaaS portal
          example: false
          type: boolean
        emailConfig:
          $ref: "#/components/schemas/SaaSPortalEmailConfig"
        googleAnalyticsTagID:
          description: The Google Analytics tag ID for the SaaS portal
          example: G-123456789
          type: string
        imageConfig:
          $ref: "#/components/schemas/SaaSPortalImageConfig"
      type: object
    UpdateServiceAPIRequest:
      example:
        description: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
          for high availability
        id: sa-12345678
        serviceId: s-12345678
        token: 3b
      properties:
        description:
          description: A brief description of the service API bundle
          example: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
            for high availability
          type: string
        id:
          description: ID of a Service API
          example: Pariatur assumenda iusto.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: z
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateServiceAPIRequest2:
      example:
        description: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
          for high availability
      properties:
        description:
          description: A brief description of the service API bundle
          example: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
            for high availability
          type: string
      type: object
    UpdateServiceEnvironmentRequest:
      example:
        autoApproveSubscription: false
        deploymentConfigId: dc-12345678
        description: The production environment for the MySQL multi-writer service
        id: se-12345678
        name: Production
        serviceAuthPublicKey: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        serviceId: s-12345678
        sourceEnvironmentId: se-12345678
        token: q
        visibility: PUBLIC
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        deploymentConfigId:
          description: ID of a Deployment Config
          example: Deserunt aut dolorem.
          type: string
        description:
          description: A brief description of the service environment
          example: The production environment for the MySQL multi-writer service
          type: string
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        name:
          description: Name of the Service Environment
          example: Production
          type: string
        serviceAuthPublicKey:
          description: PEM-encoded Public key part of the key used to sign the JWT
            tokens for the service control plane APIs
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceEnvironmentId:
          description: The ID of the service environment to use for promoting changes
            to this environment
          example: se-12345678
          type: string
        token:
          description: JWT token used to perform authorization
          example: qk
          minLength: 1
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateServiceEnvironmentRequest2:
      example:
        autoApproveSubscription: false
        deploymentConfigId: Qui et.
        description: The production environment for the MySQL multi-writer service
        name: Production
        serviceAuthPublicKey: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        sourceEnvironmentId: se-12345678
        visibility: PUBLIC
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        deploymentConfigId:
          description: The deployment configuration ID
          example: Laudantium corrupti facilis incidunt dolores dolor laboriosam.
          type: string
        description:
          description: A brief description of the service environment
          example: The production environment for the MySQL multi-writer service
          type: string
        name:
          description: Name of the Service Environment
          example: Production
          type: string
        serviceAuthPublicKey:
          description: PEM-encoded Public key part of the key used to sign the JWT
            tokens for the service control plane APIs
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        sourceEnvironmentId:
          description: The ID of the service environment to use for promoting changes
            to this environment
          example: se-12345678
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      type: object
    UpdateServiceModelRequest:
      example:
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        id: sm-12345678
        name: MySQL multi-writer service hosted model
        serviceId: s-12345678
        token: lhq
      properties:
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        id:
          description: ID of a Service Model
          example: Omnis dolores commodi numquam voluptatibus mollitia omnis.
          type: string
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 0d
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateServiceModelRequest2:
      example:
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        name: MySQL multi-writer service hosted model
      properties:
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
      type: object
    UpdateServiceRequest:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        id: s-12345678
        name: MySQL multi-writer service
        serviceLogoURL: Ipsam qui.
        token: pd4
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        id:
          description: ID of a Service
          example: s-123456
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Cupiditate ea nam iusto.
          type: string
        token:
          description: JWT token used to perform authorization
          example: m
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    UpdateServiceRequest2:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        name: MySQL multi-writer service
        serviceLogoURL: Voluptates at ipsam sint adipisci esse voluptatibus.
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Beatae ut commodi repudiandae.
          type: string
      type: object
    UpdateStorageConfigRequest:
      example:
        description: my-storage-config-description
        id: sc-12345678
        name: my-storage-config
        serviceId: s-12345678
        token: 7ch
      properties:
        description:
          description: Description of the storage config
          example: my-storage-config-description
          minLength: 1
          type: string
        id:
          description: ID of a Storage Config
          example: Suscipit sapiente.
          type: string
        name:
          description: Name of the storage config
          example: my-storage-config
          minLength: 1
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: xaw
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateStorageConfigRequest2:
      example:
        description: my-storage-config-description
        name: my-storage-config
      properties:
        description:
          description: Description of the storage config
          example: my-storage-config-description
          minLength: 1
          type: string
        name:
          description: Name of the storage config
          example: my-storage-config
          minLength: 1
          type: string
      type: object
    UpdateStorageVolumeConfigRequest:
      example:
        description: A storage volume set to store the MySQL data directory
        disableBackup: false
        id: svc-12345678
        name: MySQL Data Volume
        serviceId: s-12345678
        token: x
      properties:
        description:
          description: A brief description of the context for the storage volume pool
          example: A storage volume set to store the MySQL data directory
          type: string
        disableBackup:
          description: Disable backup for the storage volume
          example: false
          type: boolean
        id:
          description: ID of a Storage Volume Config
          example: Quia rerum.
          type: string
        name:
          description: Name of the storage volume pool
          example: MySQL Data Volume
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: v
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateStorageVolumeConfigRequest2:
      example:
        description: A storage volume set to store the MySQL data directory
        disableBackup: false
        name: MySQL Data Volume
      properties:
        description:
          description: A brief description of the context for the storage volume pool
          example: A storage volume set to store the MySQL data directory
          type: string
        disableBackup:
          description: Disable backup for the storage volume
          example: false
          type: boolean
        name:
          description: Name of the storage volume pool
          example: MySQL Data Volume
          type: string
      type: object
    UpdateStorageVolumeSizeConfigRequest:
      example:
        id: svc-12345678
        instanceStorageSizeGi: $var.storage_size
        serviceId: s-12345678
        token: mms
      properties:
        id:
          description: ID of a Storage Volume Config
          example: Aut et et nemo modi quis.
          type: string
        instanceStorageSizeGi:
          description: The storage size (in Gi) provisioned for the configured instance
            storage type
          example: $var.storage_size
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: nz
          minLength: 1
          type: string
      required:
      - id
      - instanceStorageSizeGi
      - serviceId
      - token
      type: object
    UpdateStorageVolumeSizeConfigRequest2:
      example:
        instanceStorageSizeGi: $var.storage_size
      properties:
        instanceStorageSizeGi:
          description: The storage size (in Gi) provisioned for the configured instance
            storage type
          example: $var.storage_size
          type: string
      required:
      - instanceStorageSizeGi
      type: object
    UpdateTierVersionSetMetadataRequest:
      example:
        productTierId: Beatae beatae.
        releaseNotes: Incidunt et ea corrupti cumque.
        serviceId: s-12345678
        token: 3di
        version: "3.0"
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Doloribus vitae quidem officia nihil incidunt.
          type: string
        releaseNotes:
          description: Release notes for the version set.
          example: Aspernatur facere reprehenderit enim dolor accusantium.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: se
          minLength: 1
          type: string
        version:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
      required:
      - productTierId
      - serviceId
      - token
      - version
      type: object
    UpdateTierVersionSetMetadataRequest2:
      example:
        releaseNotes: Quia veritatis similique.
      properties:
        releaseNotes:
          description: Release notes for the version set.
          example: Illo et adipisci voluptates et aspernatur fugit.
          type: string
      type: object
    UpdateTierVersionSetRequest:
      example:
        name: Updated version set name
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: "8"
        version: "3.0"
      properties:
        name:
          description: The name of the product-tier version set.
          example: Updated version set name
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Praesentium dolores tempora.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: xwy
          minLength: 1
          type: string
        version:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
      required:
      - name
      - productTierId
      - serviceId
      - token
      - version
      type: object
    UpdateTierVersionSetRequest2:
      example:
        name: Updated version set name
      properties:
        name:
          description: The name of the product-tier version set.
          example: Updated version set name
          type: string
      required:
      - name
      type: object
    UpdateUpgradePathRequest:
      example:
        description: An upgrade path migrating clusters from one LTS version to another
        id: up-12345678
        name: LTS upgrade path
        serviceId: s-12345678
        sourceVersion: "567.0"
        targetVersion: "589.0"
        token: s
      properties:
        description:
          description: A brief description of the upgrade path
          example: An upgrade path migrating clusters from one LTS version to another
          type: string
        id:
          description: ID of an Upgrade Path
          example: Et error explicabo earum rerum quaerat ipsa.
          type: string
        name:
          description: Name of the upgrade path
          example: LTS upgrade path
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceVersion:
          description: Version of the Entity to operate on
          example: "1.0"
          minLength: 1
          type: string
        targetVersion:
          description: Version of the Entity to operate on
          example: "1.0"
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: 0rz
          minLength: 1
          type: string
      required:
      - token
      type: object
    UpdateUserRequest:
      example:
        address:
          addressLine1: 1234 Main St
          addressLine2: Apt 123
          addressLine3: Building 123
          city: San Francisco
          country: US
          state: CA
          zip: "94123"
        id: user-abcd1234
        name: John Dae
        orgCookiePolicy: Hic quasi earum deleniti nihil nostrum aliquid.
        orgDescription: ACME Inc.
        orgFavIconURL: http://mcculloughwisoky.org/brooklyn.huels
        orgLogoURL: http://bahringer.name/misael
        orgName: ACME
        orgPrivacyPolicy: Explicabo corrupti maxime totam quo vitae.
        orgSupportEmail: support@example.com
        orgTermsOfUse: Nemo sed.
        orgURL: something.acme
        token: 6u
      properties:
        address:
          $ref: "#/components/schemas/Address"
        id:
          description: The User ID
          example: user-abcd1234
          type: string
        name:
          description: The name of the user
          example: John Dae
          type: string
        orgCookiePolicy:
          description: The cookie policy for the org that this user owns in an HTML
            format
          example: Facere aspernatur aliquid.
          type: string
        orgDescription:
          description: The description of the org that this user owns
          example: ACME Inc.
          type: string
        orgFavIconURL:
          description: The favicon of the org that this user owns
          example: http://hermannprohaska.net/johnpaul.fay
          format: uri
          type: string
        orgLogoURL:
          description: The logo of the org that this user owns
          example: http://heathcotekreiger.biz/jade
          format: uri
          type: string
        orgName:
          description: The org name that this user owns
          example: ACME
          type: string
        orgPrivacyPolicy:
          description: The privacy policy for the org that this user owns in an HTML
            format
          example: Reprehenderit quasi et.
          type: string
        orgSupportEmail:
          description: The support email of the org that this user owns
          example: support@example.com
          type: string
        orgTermsOfUse:
          description: The terms of use for the org that this user owns in an HTML
            format
          example: Voluptatibus quia enim assumenda accusamus et quis.
          type: string
        orgURL:
          description: The url of the org that this user owns
          example: something.acme
          type: string
        token:
          description: JWT token used to perform authorization
          example: p
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    UpdateUserRequest2:
      example:
        address:
          addressLine1: 1234 Main St
          addressLine2: Apt 123
          addressLine3: Building 123
          city: San Francisco
          country: US
          state: CA
          zip: "94123"
        name: John Dae
        orgCookiePolicy: Quos omnis cumque.
        orgDescription: ACME Inc.
        orgFavIconURL: http://glover.name/cary
        orgLogoURL: http://kemmerbotsford.info/arden_legros
        orgName: ACME
        orgPrivacyPolicy: Minima nemo.
        orgSupportEmail: support@example.com
        orgTermsOfUse: Maiores ipsum necessitatibus molestiae mollitia nobis.
        orgURL: something.acme
      properties:
        address:
          $ref: "#/components/schemas/Address"
        name:
          description: The name of the user
          example: John Dae
          type: string
        orgCookiePolicy:
          description: The cookie policy for the org that this user owns in an HTML
            format
          example: Mollitia voluptatem repudiandae veritatis blanditiis voluptatem
            modi.
          type: string
        orgDescription:
          description: The description of the org that this user owns
          example: ACME Inc.
          type: string
        orgFavIconURL:
          description: The favicon of the org that this user owns
          example: http://stehrhudson.biz/elza
          format: uri
          type: string
        orgLogoURL:
          description: The logo of the org that this user owns
          example: http://funk.com/jayne
          format: uri
          type: string
        orgName:
          description: The org name that this user owns
          example: ACME
          type: string
        orgPrivacyPolicy:
          description: The privacy policy for the org that this user owns in an HTML
            format
          example: Molestias voluptate animi ducimus repudiandae praesentium excepturi.
          type: string
        orgSupportEmail:
          description: The support email of the org that this user owns
          example: support@example.com
          type: string
        orgTermsOfUse:
          description: The terms of use for the org that this user owns in an HTML
            format
          example: Similique voluptatem inventore ex.
          type: string
        orgURL:
          description: The url of the org that this user owns
          example: something.acme
          type: string
      type: object
    UpgradeResourceInstanceVersionRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        targetVersion: "2.0"
        token: g
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Quia sed nostrum error aut est non.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        targetVersion:
          description: The version to upgrade to
          example: "2.0"
          type: string
        token:
          description: JWT token used to perform authorization
          example: dp
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    UpgradeResourceInstanceVersionRequest2:
      example:
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: Natus nulla consequatur.
        targetVersion: "2.0"
      properties:
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: The service provider ID
          example: Veniam commodi reiciendis.
          type: string
        targetVersion:
          description: The version to upgrade to
          example: "2.0"
          type: string
      required:
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      type: object
    UsagePerDimension:
      example:
        dimension: core/hours
        endTime: 2021-01-01T00:00:00.000Z
        startTime: 2021-01-01T00:00:00.000Z
        total: 0.67
      properties:
        dimension:
          description: Dimension of usage
          example: core/hours
          type: string
        endTime:
          description: End timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        startTime:
          description: Start timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        total:
          description: Total amount of usage during the period
          example: 0.67
          format: double
          type: number
      type: object
    VUnitHealthReport:
      example:
        vunits:
          vu-11111111: UNKNOWN
          vu-12345678: UP
          vu-87654321: DOWN
      properties:
        vunits:
          additionalProperties:
            description: Service Health Status
            example: UP|DOWN|UNKNOWN
            type: string
          description: The health of each vunit under this service environment
          example:
            vu-11111111: UNKNOWN
            vu-12345678: UP
            vu-87654321: DOWN
          type: object
      type: object
    ValidateTokenRequest:
      example:
        email: abc@gmail.com
        token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        token:
          example: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
          minLength: 1
          type: string
      required:
      - email
      - token
      type: object
    ValuesFile:
      example:
        gitConfiguration:
          accessToken: my-token
          commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
          referenceName: tags/v1.0.0
          repositoryUrl: https://github.com/username/myrepo
          userName: my-user
        path: helm/values/production.yaml
      properties:
        gitConfiguration:
          $ref: "#/components/schemas/GitConfiguration"
        path:
          description: The relative file path from repository root
          example: helm/values/production.yaml
          type: string
      required:
      - gitConfiguration
      - path
      type: object
    VerifyAccountConfigRequest:
      example:
        id: ac-12345678
        token: ztf
      properties:
        id:
          description: ID of an Account Config
          example: Natus facere occaecati dolor ea et.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 8fl
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    VerifyCustomDomainRequest:
      example:
        id: cd-12345678
        token: "3"
      properties:
        id:
          description: ID of an Custom Domain
          example: Consequatur sed.
          type: string
        token:
          description: JWT token used to perform authorization
          example: o
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    VerifyIdentityProviderRequest:
      example:
        id: idp-12345678
        token: g
      properties:
        id:
          description: ID of an Identity Provider
          example: Est voluptas dolorum consectetur non iure.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 4k3
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    VerifyIdentityProviderResult:
      example:
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
        id: idp-12345678
        identityProviderName: Google
        name: Google for my company
        status: Ready
      properties:
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
        id:
          description: ID of an Identity Provider
          example: Dolorum quis nihil fuga necessitatibus.
          type: string
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        name:
          description: The name of the Identity Provider
          example: Google for my company
          type: string
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
      required:
      - clientId
      - id
      - identityProviderName
      - status
      type: object
    WarmPoolConfiguration:
      description: Warm pool configuration for compute nodes
      example:
        minimumNodesInPool: 1
        minimumPercentageNodesInPool: 5
      properties:
        minimumNodesInPool:
          default: 1
          description: Minimum number of compute nodes in pool
          example: 1
          format: int64
          type: integer
        minimumPercentageNodesInPool:
          default: 0
          description: Minimum percentage of compute nodes in pool
          example: 5
          format: int64
          type: integer
      type: object
    WorkflowFailure:
      example:
        eventTime: 2020-01-01T00:00:00Z
        message: Bootstrap failed for reason X
      properties:
        eventTime:
          description: The time of the event
          example: 2020-01-01T00:00:00Z
          type: string
        message:
          description: Details of the event
          example: Bootstrap failed for reason X
          type: string
      required:
      - eventTime
      - message
      type: object
    ResourceSpec_limits:
      description: The maximum amount of CPU and memory that the container can use
      example:
        cpu: "1"
        memory: 500Mi
      properties:
        cpu:
          description: The maximum amount of CPU that the container can use
          example: "1"
          type: string
        memory:
          description: The maximum amount of memory that the container can use
          example: 500Mi
          type: string
      type: object
    ResourceSpec_requests:
      description: The amount of CPU and memory that Kubernetes will guarantee for
        the container
      example:
        cpu: "0.5"
        memory: 200Mi
      properties:
        cpu:
          description: The amount of CPU that Kubernetes will guarantee for the container
          example: "0.5"
          type: string
        memory:
          description: The amount of memory that Kubernetes will guarantee for the
            container
          example: 200Mi
          type: string
      type: object
  securitySchemes:
    api_key_header_Authorization:
      description: Secures endpoints by requiring a JWT token
      scheme: bearer
      type: http
    basic_header_Authorization:
      description: Basic authentication
      scheme: basic
      type: http
