openapi: 3.0.3
info:
  description: REST API for Omnistrate Service Registration
  title: Omnistrate Registration API
  version: 2022-09-01-00
servers:
- url: https://api.omnistrate.cloud
tags:
- description: Common API for all Omnistrate API endpoints
  name: global-api
- name: service-api
- name: service-environment-api
- name: service-model-api
- name: product-tier-api
- name: service-api-api
- name: service-plan-api
- name: resource-api
- name: tier-version-set-api
- name: input-parameter-api
- name: output-parameter-api
- description: The external facing VUnit API
  name: vunit-api
- description: The infra config API manages the infra for Omnistrate resources
  name: infra-config-api
- description: The image config API manages the image config for Omnistrate entities
  name: image-config-api
- description: The deployment config API manages the deployment config for Omnistrate
    entities
  name: deployment-config-api
- description: The compute config API manages the compute config for Omnistrate entities
  name: compute-config-api
- description: The storage config API manages the storage config for Omnistrate entities
  name: storage-config-api
- description: The storage volume config API manages the storage volume config for
    Omnistrate entities
  name: storage-volume-config-api
- description: The network config API manages the network config for Omnistrate entities
  name: network-config-api
- description: The Availability Zone API provides read-only access to availability
    zones
  name: availability-zone-api
- description: The Region API provides read-only access to regions
  name: region-api
- description: The Cloud Provider API provides read-only access to cloud provider
    metadata
  name: cloud-provider-api
- description: The Demo API provides a demo of the system
  name: demo-api
- description: The Contactus API for customers to reach out to us
  name: contactus-api
- description: The signin API for customers to authenticate with us
  name: signin-api
- description: The Signup API for customers to signup with us
  name: signup-api
- description: The Plan API is for payment info.  It's explicitly empty for free plans.
  name: plan-api
- description: The Usage API is for getting the last calendar month usage for the
    current plan.
  name: usage-api
- description: The Invoices API gets the list of invoices for the current user
  name: invoice-api
- description: The user management API to manage user metadata
  name: users-api
- description: The Consumption Signin API signs the user into the consumption service
  name: consumption-user-api
- description: The Resource Instance API manages the instances of a resource
  name: resource-instance-api
- description: The Account Config API manages the access information for a Service
    Provider account
  name: account-config-api
- description: The Custom Domain API manages the delegated domain names for the Service
    Provider
  name: custom-domain-api
- description: The limit API manages the limit for Omnistrate entities
  name: limit-api
- description: The image registry API manages the image registry for Omnistrate resources
  name: image-registry-api
- description: The service offering API provides a public API to list all public services
  name: service-offering-api
- description: The event API manages the event for Omnistrate entities
  name: event-api
- description: The subscription management API to manage subscription metadata
  name: subscription-api
- description: The subscription request API for end customers to issue subscription
    requests
  name: subscription-request-api
- name: identity-provider-api
- name: saas-portal-api
- name: helm-package-api
- name: compose-gen-api
- name: custom-network-api
paths:
  /2022-09-01-00/accountconfig:
    post:
      operationId: account-config-api#CreateAccountConfig
      requestBody:
        content:
          application/json:
            example:
              awsAccessKey: Pariatur quis non quidem qui.
              awsAccountID: "123456789012"
              awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
              awsSecretKey: Eius minus amet veritatis cum.
              byoaInstanceID: instance-12345678
              cloudProviderId: infra-12345678
              description: An AWS account hosting multiple dev environments
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
              gcpServiceAccountKey: Eius quia necessitatibus consequatur non reiciendis.
              name: Dev AWS account
            schema:
              $ref: '#/components/schemas/CreateAccountConfigRequestBody'
        required: true
      responses:
        "202":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: ac-12345678
              schema:
                description: The ID of the registered account config
                example: ac-12345678
                type: string
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateAccountConfig account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/{id}:
    delete:
      operationId: account-config-api#DeleteAccountConfig
      parameters:
      - description: Account Config ID to operate on
        example: ac-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Account Config
          example: Quis aspernatur natus consequatur tempora illo ex.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteAccountConfig account-config-api
      tags:
      - account-config-api
    get:
      operationId: account-config-api#DescribeAccountConfig
      parameters:
      - description: Account Config ID to operate on
        example: ac-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Account Config
          example: Est accusamus ratione excepturi.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                awsAccountID: "123456789012"
                awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                byoaInstanceIDs:
                - instance-12345678
                - instance-abcdefgh
                cloudProviderId: infra-12345678
                description: An AWS account hosting multiple dev environments
                gcpProjectID: my-project
                gcpProjectNumber: "123456789012"
                gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                id: ac-12345678
                name: Dev AWS account
                status: READY
                statusMessage: Account is ready
              schema:
                $ref: '#/components/schemas/DescribeAccountConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeAccountConfig account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/aws/{awsAccountID}:
    get:
      operationId: account-config-api#DescribeAccountConfigByAWSAccountID
      parameters:
      - description: The AWS account ID
        example: "123456789012"
        explode: false
        in: path
        name: awsAccountID
        required: true
        schema:
          description: The AWS account ID
          example: "123456789012"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                awsAccountID: "123456789012"
                awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                byoaInstanceIDs:
                - instance-12345678
                - instance-abcdefgh
                cloudProviderId: infra-12345678
                description: An AWS account hosting multiple dev environments
                id: ac-12345678
                name: Dev AWS account
                status: READY
                statusMessage: Account is ready
              schema:
                $ref: '#/components/schemas/DescribeAccountConfigByAWSAccountIDResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeAccountConfigByAWSAccountID account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/byoa:
    get:
      operationId: account-config-api#ListBYOAConfig
      requestBody:
        content:
          application/json:
            example:
              cloudProviderName: aws
            schema:
              $ref: '#/components/schemas/ListBYOAConfigRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                accountConfigs:
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: infra-12345678
                  description: An AWS account hosting multiple dev environments
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: ac-12345678
                  name: Dev AWS account
                  status: READY
                  statusMessage: Account is ready
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: infra-12345678
                  description: An AWS account hosting multiple dev environments
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: ac-12345678
                  name: Dev AWS account
                  status: READY
                  statusMessage: Account is ready
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: infra-12345678
                  description: An AWS account hosting multiple dev environments
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: ac-12345678
                  name: Dev AWS account
                  status: READY
                  statusMessage: Account is ready
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: infra-12345678
                  description: An AWS account hosting multiple dev environments
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: ac-12345678
                  name: Dev AWS account
                  status: READY
                  statusMessage: Account is ready
                ids:
                - ac-12345678
                - ac-abcdefgh
                - ac-1234efgh
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListAccountConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list account configs"
      security:
      - api_key_header_Authorization: []
      summary: ListBYOAConfig account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/cloudprovider/{cloudProviderName}:
    get:
      operationId: account-config-api#ListAccountConfig
      parameters:
      - description: Cloud Provider name to filter on
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                accountConfigs:
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: infra-12345678
                  description: An AWS account hosting multiple dev environments
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: ac-12345678
                  name: Dev AWS account
                  status: READY
                  statusMessage: Account is ready
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: infra-12345678
                  description: An AWS account hosting multiple dev environments
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: ac-12345678
                  name: Dev AWS account
                  status: READY
                  statusMessage: Account is ready
                ids:
                - ac-12345678
                - ac-abcdefgh
                - ac-1234efgh
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListAccountConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list account configs"
      security:
      - api_key_header_Authorization: []
      summary: ListAccountConfig account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/gcp/{gcpProjectID}:
    get:
      operationId: account-config-api#DescribeAccountConfigByGCPProjectID
      parameters:
      - description: The GCP project ID
        example: my-project
        explode: false
        in: path
        name: gcpProjectID
        required: true
        schema:
          description: The GCP project ID
          example: my-project
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                byoaInstanceIDs:
                - instance-12345678
                - instance-abcdefgh
                cloudProviderId: infra-12345678
                description: An AWS account hosting multiple dev environments
                gcpProjectID: my-project
                gcpProjectNumber: "123456789012"
                gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                id: ac-12345678
                name: Dev AWS account
                status: READY
                statusMessage: Account is ready
              schema:
                $ref: '#/components/schemas/DescribeAccountConfigByGCPProjectIDResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeAccountConfigByGCPProjectID account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/identityid:
    get:
      description: Returns the identity id of the account config to be used in the
        trust policy of the account
      operationId: account-config-api#AccountConfigIdentityID
      responses:
        "200":
          content:
            application/json:
              example:
                id: org-12345678
              schema:
                $ref: '#/components/schemas/AccountConfigIdentityIDResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get an account\
            \ config identity id"
      security:
      - api_key_header_Authorization: []
      summary: AccountConfigIdentityID account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/verify/{id}:
    post:
      operationId: account-config-api#VerifyAccountConfig
      parameters:
      - description: Account Config ID to operate on
        example: ac-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Account Config
          example: Voluptatem fuga ullam accusantium vel illo veniam.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list account configs"
      security:
      - api_key_header_Authorization: []
      summary: VerifyAccountConfig account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/availability-zone/{id}:
    get:
      operationId: availability-zone-api#DescribeAvailabilityZone
      parameters:
      - example: az-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an AZ
          example: Quaerat sunt dolor repellendus voluptatem vitae dolores.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cloudProviderName: aws
                code: us-east-1a
                description: US East (N. Virginia) Availability Zone A
                id: az-12345678
                regionCode: us-east-1
              schema:
                $ref: '#/components/schemas/DescribeAvailabilityZoneResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an availability\
            \ zone"
      security:
      - api_key_header_Authorization: []
      summary: DescribeAvailabilityZone availability-zone-api
      tags:
      - availability-zone-api
  /2022-09-01-00/availability-zone/cloud-provider/{cloudProviderName}:
    get:
      operationId: availability-zone-api#ListAvailabilityZone
      parameters:
      - description: The cloud provider for this compute instance type config
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - az-12345678
                - az-87654321
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceEnvironmentsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list availability\
            \ zones"
      security:
      - api_key_header_Authorization: []
      summary: ListAvailabilityZone availability-zone-api
      tags:
      - availability-zone-api
  /2022-09-01-00/availability-zone/code/{code}/cloud-provider/{cloudProviderName}:
    get:
      operationId: availability-zone-api#GetAvailabilityZoneByCode
      parameters:
      - description: Cloud-provider native availability zone code
        example: us-east-1a
        explode: false
        in: path
        name: code
        required: true
        schema:
          description: Cloud-provider native availability zone code
          example: us-east-1a
          type: string
        style: simple
      - description: The cloud provider for this compute instance type config
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: Quia explicabo qui ut dicta omnis.
              schema:
                example: Delectus dolores voluptatem corporis saepe.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get an availability\
            \ zone by code"
      security:
      - api_key_header_Authorization: []
      summary: GetAvailabilityZoneByCode availability-zone-api
      tags:
      - availability-zone-api
  /2022-09-01-00/availability-zone/region/code/{regionCode}/cloud-provider/{cloudProviderName}:
    get:
      operationId: availability-zone-api#ListAvailabilityZonesByRegionCode
      parameters:
      - example: us-east-1
        explode: false
        in: path
        name: regionCode
        required: true
        schema:
          example: us-east-1
          type: string
        style: simple
      - description: The cloud provider for this compute instance type config
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - az-12345678
                - az-87654321
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceEnvironmentsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list availability\
            \ zones by region code"
      security:
      - api_key_header_Authorization: []
      summary: ListAvailabilityZonesByRegionCode availability-zone-api
      tags:
      - availability-zone-api
  /2022-09-01-00/change-password:
    post:
      operationId: signup-api#ChangePassword
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              password: password
              token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
            schema:
              $ref: '#/components/schemas/ChangePasswordRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to change password"
      summary: ChangePassword signup-api
      tags:
      - signup-api
  /2022-09-01-00/cloud-provider:
    get:
      operationId: cloud-provider-api#ListCloudProvider
      parameters:
      - allowEmptyValue: true
        description: "Service ID. If specified together with serviceModelId,list the\
          \ cloud provider of the service model. Otherwise list all cloud provider."
        example: s-12345678
        explode: true
        in: query
        name: serviceId
        required: false
        schema:
          description: ID of a Service
          example: Eos eaque fugit laudantium.
          type: string
        style: form
      - allowEmptyValue: true
        description: "Service model ID. If specified together with serviceId,list\
          \ the cloud provider of the service model. Otherwise list all cloud provider."
        example: sm-12345678
        explode: true
        in: query
        name: serviceModelId
        required: false
        schema:
          description: ID of a Service Model
          example: Non sit.
          type: string
        style: form
      - allowEmptyValue: true
        description: "Product tier ID. If specified together with serviceId,list the\
          \ cloud provider of the product tier. Otherwise list all cloud provider."
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Quo veritatis eum aperiam doloremque sed.
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - infra-12345678
                - infra-87654321
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceEnvironmentsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list cloud providers"
      security:
      - api_key_header_Authorization: []
      summary: ListCloudProvider cloud-provider-api
      tags:
      - cloud-provider-api
  /2022-09-01-00/cloud-provider/{id}:
    get:
      operationId: cloud-provider-api#DescribeCloudProvider
      parameters:
      - description: ID of the CloudProvider
        example: infra-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an CloudProvider
          example: Id veniam voluptas.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: Amazon Web Services
                id: infra-12345678
                name: aws
              schema:
                $ref: '#/components/schemas/DescribeCloudProviderResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an cloud\
            \ provider"
      security:
      - api_key_header_Authorization: []
      summary: DescribeCloudProvider cloud-provider-api
      tags:
      - cloud-provider-api
  /2022-09-01-00/cloud-provider/name/{name}:
    get:
      operationId: cloud-provider-api#GetCloudProviderByName
      parameters:
      - description: Name of the CloudProvider
        example: aws
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of the CloudProvider
          example: aws
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: Sit alias exercitationem.
              schema:
                example: Repellat temporibus beatae exercitationem sit aut.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get an cloud provider\
            \ by name"
      security:
      - api_key_header_Authorization: []
      summary: GetCloudProviderByName cloud-provider-api
      tags:
      - cloud-provider-api
  /2022-09-01-00/compose-gen/image:
    get:
      operationId: compose-gen-api#CheckIfContainerImageAccessible
      parameters:
      - allowEmptyValue: true
        description: Registry where the image is stored
        example: docker.io
        explode: true
        in: query
        name: imageRegistry
        required: true
        schema:
          description: Registry where the image is stored
          example: docker.io
          type: string
        style: form
      - allowEmptyValue: true
        description: Username to access the image registry
        example: username
        explode: true
        in: query
        name: username
        required: false
        schema:
          description: Username to access the image registry
          example: username
          type: string
        style: form
      - allowEmptyValue: true
        description: Password to access the image registry
        example: password
        explode: true
        in: query
        name: password
        required: false
        schema:
          description: Password to access the image registry
          example: password
          type: string
        style: form
      - allowEmptyValue: true
        description: Name of the image along with the tag. Include the repository
          name if the image is not from the official repository
        example: library/mysql:5.7
        explode: true
        in: query
        name: image
        required: true
        schema:
          description: Name of the image along with the tag. Include the repository
            name if the image is not from the official repository
          example: library/mysql:5.7
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                errorMsg: Asperiores in aperiam vel.
                imageAccessible: true
              schema:
                $ref: '#/components/schemas/CheckIfContainerImageAccessibleResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to build a service\
            \ from compose spec"
      security:
      - api_key_header_Authorization: []
      summary: CheckIfContainerImageAccessible compose-gen-api
      tags:
      - compose-gen-api
    post:
      operationId: compose-gen-api#GenerateComposeSpecFromContainerImage
      requestBody:
        content:
          application/json:
            example:
              environmentVariables:
              - key: MYSQL_ROOT_PASSWORD
                value: password
              image: library/mysql:5.7
              imageRegistry: docker.io
              password: password
              username: username
            schema:
              $ref: '#/components/schemas/GenerateComposeSpecFromContainerImageRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                fileContent: Assumenda laborum alias.
              schema:
                $ref: '#/components/schemas/GenerateComposeSpecFromContainerImageResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to build a service\
            \ from compose spec"
      security:
      - api_key_header_Authorization: []
      summary: GenerateComposeSpecFromContainerImage compose-gen-api
      tags:
      - compose-gen-api
  /2022-09-01-00/contactus:
    post:
      operationId: contactus-api#Contactus
      requestBody:
        content:
          application/json:
            example:
              company: ABC
              email: abc@gmail.com
              message: this is a test
              name: John Doe
            schema:
              $ref: '#/components/schemas/ContactusRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to contactus"
      summary: Contactus contactus-api
      tags:
      - contactus-api
  /2022-09-01-00/customdomain:
    get:
      operationId: custom-domain-api#ListCustomDomain
      responses:
        "200":
          content:
            application/json:
              example:
                CustomDomains:
                - customDomain: mydomain.dev
                  description: Description of the domain
                  id: cd-12345678
                  name: Dev domain
                  route53Configuration:
                    awsAccountID: "123456789012"
                    awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
                  status: READY
                  statusMessage: Account is ready
                - customDomain: mydomain.dev
                  description: Description of the domain
                  id: cd-12345678
                  name: Dev domain
                  route53Configuration:
                    awsAccountID: "123456789012"
                    awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
                  status: READY
                  statusMessage: Account is ready
                - customDomain: mydomain.dev
                  description: Description of the domain
                  id: cd-12345678
                  name: Dev domain
                  route53Configuration:
                    awsAccountID: "123456789012"
                    awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
                  status: READY
                  statusMessage: Account is ready
                - customDomain: mydomain.dev
                  description: Description of the domain
                  id: cd-12345678
                  name: Dev domain
                  route53Configuration:
                    awsAccountID: "123456789012"
                    awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
                  status: READY
                  statusMessage: Account is ready
                ids:
                - cd-12345678
                - cd-abcdefgh
                - cd-1234efgh
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListCustomDomainResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list Custom Domains"
      security:
      - api_key_header_Authorization: []
      summary: ListCustomDomain custom-domain-api
      tags:
      - custom-domain-api
    post:
      operationId: custom-domain-api#CreateCustomDomain
      requestBody:
        content:
          application/json:
            example:
              customDomain: mydomain.dev
              description: Description of the domain
              name: Dev domain
              route53Configuration:
                awsAccountID: "123456789012"
            schema:
              $ref: '#/components/schemas/CreateCustomDomainRequestBody'
        required: true
      responses:
        "202":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: cd-12345678
              schema:
                description: The ID of the registered Custom Domain
                example: cd-12345678
                type: string
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create an Custom\
            \ Domain"
      security:
      - api_key_header_Authorization: []
      summary: CreateCustomDomain custom-domain-api
      tags:
      - custom-domain-api
  /2022-09-01-00/customdomain/{id}:
    delete:
      operationId: custom-domain-api#DeleteCustomDomain
      parameters:
      - description: custom domain ID to operate on
        example: cd-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Custom Domain
          example: Sint libero.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete an Custom\
            \ Domain"
      security:
      - api_key_header_Authorization: []
      summary: DeleteCustomDomain custom-domain-api
      tags:
      - custom-domain-api
    get:
      operationId: custom-domain-api#DescribeCustomDomain
      parameters:
      - description: custom domain ID to operate on
        example: cd-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Custom Domain
          example: Est nobis vitae quos.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                customDomain: mydomain.dev
                description: Description of the domain
                id: cd-12345678
                name: Dev domain
                route53Configuration:
                  awsAccountID: "123456789012"
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
                status: READY
                statusMessage: Account is ready
              schema:
                $ref: '#/components/schemas/DescribeCustomDomainResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an Custom\
            \ Domain"
      security:
      - api_key_header_Authorization: []
      summary: DescribeCustomDomain custom-domain-api
      tags:
      - custom-domain-api
  /2022-09-01-00/customdomain/identityid:
    get:
      description: Returns the identity id of the Custom Domain to be used in the
        trust policy of the account
      operationId: custom-domain-api#CustomDomainIdentityID
      responses:
        "200":
          content:
            application/json:
              example:
                id: org-12345678
              schema:
                $ref: '#/components/schemas/AccountConfigIdentityIDResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get an Custom\
            \ Domain identity id"
      security:
      - api_key_header_Authorization: []
      summary: CustomDomainIdentityID custom-domain-api
      tags:
      - custom-domain-api
  /2022-09-01-00/customdomain/verify/{id}:
    post:
      operationId: custom-domain-api#VerifyCustomDomain
      parameters:
      - description: custom domain ID to operate on
        example: cd-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Custom Domain
          example: Minima numquam id.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list Custom Domains"
      security:
      - api_key_header_Authorization: []
      summary: VerifyCustomDomain custom-domain-api
      tags:
      - custom-domain-api
  /2022-09-01-00/customer-invite-user:
    post:
      operationId: users-api#CustomerInviteUser
      requestBody:
        content:
          application/json:
            example:
              email: abc@example.com
            schema:
              $ref: '#/components/schemas/ResetPasswordRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to invite user"
      security:
      - api_key_header_Authorization: []
      summary: CustomerInviteUser users-api
      tags:
      - users-api
  /2022-09-01-00/customer-login-with-identity-provider:
    post:
      operationId: users-api#CustomerLoginWithIdentityProvider
      requestBody:
        content:
          application/json:
            example:
              authorizationCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
              companyDescription: We sell xyz database software
              companyUrl: https://www.mywebsite.com
              environmentType: DEV
              identityProviderName: Google
              invitedEmail: abc@gmail.com
              legalCompanyName: mywebsite
              redirectUri: https://www.example/redirect
            schema:
              $ref: '#/components/schemas/CustomerLoginWithIdentityProviderRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                jwtToken: ""
              schema:
                $ref: '#/components/schemas/SigninResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to signin"
      security:
      - api_key_header_Authorization: []
      summary: CustomerLoginWithIdentityProvider users-api
      tags:
      - users-api
  /2022-09-01-00/customer-reset-password:
    post:
      operationId: users-api#CustomerResetPassword
      requestBody:
        content:
          application/json:
            example:
              email: abc@example.com
            schema:
              $ref: '#/components/schemas/ResetPasswordRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to signin"
      security:
      - api_key_header_Authorization: []
      summary: CustomerResetPassword users-api
      tags:
      - users-api
  /2022-09-01-00/customer-user-signin:
    post:
      operationId: users-api#CustomerSignin
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              environmentType: DEV
              hashedPassword: deprecated
              password: password
            schema:
              $ref: '#/components/schemas/CustomerSigninRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                jwtToken: ""
              schema:
                $ref: '#/components/schemas/SigninResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to signin"
      security:
      - api_key_header_Authorization: []
      summary: CustomerSignin users-api
      tags:
      - users-api
  /2022-09-01-00/customer-user-signup:
    post:
      operationId: users-api#CustomerSignup
      requestBody:
        content:
          application/json:
            example:
              companyDescription: We sell xyz database software
              companyUrl: https://www.mywebsite.com
              email: abc@gmail.com
              legalCompanyName: mywebsite
              name: John Doe
              password: password
            schema:
              $ref: '#/components/schemas/SignupRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete user"
      security:
      - api_key_header_Authorization: []
      summary: CustomerSignup users-api
      tags:
      - users-api
  /2022-09-01-00/demo:
    post:
      operationId: demo-api#Demo
      requestBody:
        content:
          application/json:
            example:
              company: ABC
              email: abc@gmail.com
              name: John Doe
              phone: +1-234567890
            schema:
              $ref: '#/components/schemas/DemoRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to demo"
      summary: Demo demo-api
      tags:
      - demo-api
  /2022-09-01-00/deployment-config:
    get:
      operationId: deployment-config-api#ListDeploymentConfigs
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - dc-12345678
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceEnvironmentsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list deployment\
            \ configs"
      security:
      - api_key_header_Authorization: []
      summary: ListDeploymentConfigs deployment-config-api
      tags:
      - deployment-config-api
    post:
      operationId: deployment-config-api#CreateDeploymentConfig
      requestBody:
        content:
          application/json:
            example:
              description: A production deployment config
              infraRollConfiguration:
                infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
                maximumNumberOfResourceInstancesPerBatch: 1
                maximumUnavailableReplicas: 1
              name: Production
              rolloutPriorityList:
              - region-12345678
              - region-abcd1234
              - region-3c3c3c3c
            schema:
              $ref: '#/components/schemas/CreateDeploymentConfigRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: dc-12345678
              schema:
                description: Deployment Config ID created
                example: dc-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create the deployment\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateDeploymentConfig deployment-config-api
      tags:
      - deployment-config-api
  /2022-09-01-00/deployment-config/{id}:
    delete:
      operationId: deployment-config-api#DeleteDeploymentConfig
      parameters:
      - description: The deployment configuration ID
        example: dc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Deployment Config
          example: Sit sapiente sed totam minus maxime.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete the deployment\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteDeploymentConfig deployment-config-api
      tags:
      - deployment-config-api
    get:
      operationId: deployment-config-api#DescribeDeploymentConfig
      parameters:
      - description: The deployment configuration ID
        examples:
          default:
            summary: default
            value: default
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The deployment configuration ID
          example: default
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: A production deployment config
                id: dc-12345678
                infraRollConfiguration:
                  infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
                  maximumNumberOfResourceInstancesPerBatch: 1
                  maximumUnavailableReplicas: 1
                name: Production
                rolloutPriorityList:
                - region-12345678
                - region-abcd1234
                - region-3c3c3c3c
              schema:
                $ref: '#/components/schemas/DescribeDeploymentConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe the deployment\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeDeploymentConfig deployment-config-api
      tags:
      - deployment-config-api
    patch:
      operationId: deployment-config-api#UpdateDeploymentConfig
      parameters:
      - description: The deployment configuration ID
        example: dc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Deployment Config
          example: Saepe mollitia aut.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A production deployment config
              infraRollConfiguration:
                infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
                maximumNumberOfResourceInstancesPerBatch: 1
                maximumUnavailableReplicas: 1
              name: Production
              rolloutPriorityList:
              - region-12345678
              - region-abcd1234
              - region-3c3c3c3c
            schema:
              $ref: '#/components/schemas/UpdateDeploymentConfigRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update the deployment\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateDeploymentConfig deployment-config-api
      tags:
      - deployment-config-api
  /2022-09-01-00/health:
    get:
      description: Registration service health check endpoint
      operationId: global-api#registrationServiceHealth
      responses:
        "200":
          content:
            application/json:
              example:
                status: RUNNING
              schema:
                $ref: '#/components/schemas/OmnistrateServiceHealthResult'
          description: OK response.
      summary: registrationServiceHealth global-api
      tags:
      - global-api
  /2022-09-01-00/helm-package:
    get:
      operationId: helm-package-api#ListHelmPackages
      parameters:
      - allowEmptyValue: true
        description: The chart name to filter by
        example: my-chart
        explode: true
        in: query
        name: chartName
        required: false
        schema:
          description: The chart name to filter by
          example: my-chart
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                helmPackages:
                - chartName: my-chart
                  chartRepoName: my-repo
                  chartRepoUrl: https://my-repo.com
                  chartValues:
                    key1: value1
                    key2: 3
                    key3:
                      key4: value4
                  chartVersion: 1.0.0
                  namespace: default
                  password: my-password
                  username: my-user
                - chartName: my-chart
                  chartRepoName: my-repo
                  chartRepoUrl: https://my-repo.com
                  chartValues:
                    key1: value1
                    key2: 3
                    key3:
                      key4: value4
                  chartVersion: 1.0.0
                  namespace: default
                  password: my-password
                  username: my-user
                - chartName: my-chart
                  chartRepoName: my-repo
                  chartRepoUrl: https://my-repo.com
                  chartValues:
                    key1: value1
                    key2: 3
                    key3:
                      key4: value4
                  chartVersion: 1.0.0
                  namespace: default
                  password: my-password
                  username: my-user
              schema:
                $ref: '#/components/schemas/ListHelmPackagesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list helm packages"
      security:
      - api_key_header_Authorization: []
      summary: ListHelmPackages helm-package-api
      tags:
      - helm-package-api
    put:
      operationId: helm-package-api#SaveHelmPackage
      requestBody:
        content:
          application/json:
            example:
              helmPackage:
                chartName: my-chart
                chartRepoName: my-repo
                chartRepoUrl: https://my-repo.com
                chartValues:
                  key1: value1
                  key2: 3
                  key3:
                    key4: value4
                chartVersion: 1.0.0
                namespace: default
                password: my-password
                username: my-user
            schema:
              $ref: '#/components/schemas/SaveHelmPackageRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a helm\
            \ package"
      security:
      - api_key_header_Authorization: []
      summary: SaveHelmPackage helm-package-api
      tags:
      - helm-package-api
  /2022-09-01-00/helm-package/{chartName}/{chartVersion}:
    delete:
      operationId: helm-package-api#DeleteHelmPackage
      parameters:
      - description: The chart name of the Helm package to delete
        example: my-chart
        explode: false
        in: path
        name: chartName
        required: true
        schema:
          description: The chart name of the Helm package to delete
          example: my-chart
          type: string
        style: simple
      - description: The chart version of the Helm package to delete
        example: 1.0.0
        explode: false
        in: path
        name: chartVersion
        required: true
        schema:
          description: The chart version of the Helm package to delete
          example: 1.0.0
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request to delete a helm\
            \ package"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a helm\
            \ package"
      security:
      - api_key_header_Authorization: []
      summary: DeleteHelmPackage helm-package-api
      tags:
      - helm-package-api
    get:
      operationId: helm-package-api#DescribeHelmPackage
      parameters:
      - description: The chart name of the Helm package to describe
        example: my-chart
        explode: false
        in: path
        name: chartName
        required: true
        schema:
          description: The chart name of the Helm package to describe
          example: my-chart
          type: string
        style: simple
      - description: The chart version of the Helm package to describe
        example: 1.0.0
        explode: false
        in: path
        name: chartVersion
        required: true
        schema:
          description: The chart version of the Helm package to describe
          example: 1.0.0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                chartName: my-chart
                chartRepoName: my-repo
                chartRepoUrl: https://my-repo.com
                chartValues:
                  key1: value1
                  key2: 3
                  key3:
                    key4: value4
                chartVersion: 1.0.0
                namespace: default
                password: my-password
                username: my-user
              schema:
                $ref: '#/components/schemas/HelmPackage'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request to describe a\
            \ helm package"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a helm\
            \ package"
      security:
      - api_key_header_Authorization: []
      summary: DescribeHelmPackage helm-package-api
      tags:
      - helm-package-api
  /2022-09-01-00/identity-provider:
    get:
      operationId: identity-provider-api#ListIdentityProviders
      responses:
        "200":
          content:
            application/json:
              example:
                identityProviders:
                - clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
                  clientSecret: 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
                  id: idp-12345678
                  identityProviderName: Google
                  status: Ready
                - clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
                  clientSecret: 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
                  id: idp-12345678
                  identityProviderName: Google
                  status: Ready
              schema:
                $ref: '#/components/schemas/ListIdentityProvidersResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list identity\
            \ providers"
      security:
      - api_key_header_Authorization: []
      summary: ListIdentityProviders identity-provider-api
      tags:
      - identity-provider-api
    post:
      operationId: identity-provider-api#CreateIdentityProvider
      requestBody:
        content:
          application/json:
            example:
              clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
              clientSecret: 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
              identityProviderName: Google
            schema:
              $ref: '#/components/schemas/CreateIdentityProviderRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: idp-12345678
              schema:
                description: Identity Provider ID created
                example: idp-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create an identity\
            \ provider"
      security:
      - api_key_header_Authorization: []
      summary: CreateIdentityProvider identity-provider-api
      tags:
      - identity-provider-api
  /2022-09-01-00/identity-provider/{id}:
    delete:
      operationId: identity-provider-api#DeleteIdentityProvider
      parameters:
      - description: The Identity Provider ID
        example: idp-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Identity Provider
          example: Impedit soluta ab itaque nemo et.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list identity\
            \ providers"
      security:
      - api_key_header_Authorization: []
      summary: DeleteIdentityProvider identity-provider-api
      tags:
      - identity-provider-api
    get:
      operationId: identity-provider-api#DescribeIdentityProvider
      parameters:
      - description: The Identity Provider ID
        example: idp-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Identity Provider
          example: Eos sapiente maxime ullam quaerat sapiente.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
                clientSecret: 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
                id: idp-12345678
                identityProviderName: Google
                status: Ready
              schema:
                $ref: '#/components/schemas/DescribeIdentityProviderResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list identity\
            \ providers"
      security:
      - api_key_header_Authorization: []
      summary: DescribeIdentityProvider identity-provider-api
      tags:
      - identity-provider-api
    patch:
      operationId: identity-provider-api#UpdateIdentityProvider
      parameters:
      - description: The Identity Provider ID
        example: idp-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Identity Provider
          example: Quia eos sed et quibusdam.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
              clientSecret: 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
            schema:
              $ref: '#/components/schemas/UpdateIdentityProviderRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list identity\
            \ providers"
      security:
      - api_key_header_Authorization: []
      summary: UpdateIdentityProvider identity-provider-api
      tags:
      - identity-provider-api
    post:
      operationId: identity-provider-api#VerifyIdentityProvider
      parameters:
      - description: The Identity Provider ID
        example: idp-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Identity Provider
          example: Adipisci dolor.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
                clientSecret: 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
                id: idp-12345678
                identityProviderName: Google
                status: Ready
              schema:
                $ref: '#/components/schemas/DescribeIdentityProviderResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to verify identity\
            \ provider"
      security:
      - api_key_header_Authorization: []
      summary: VerifyIdentityProvider identity-provider-api
      tags:
      - identity-provider-api
  /2022-09-01-00/image-registry:
    get:
      operationId: image-registry-api#ListImageRegistry
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - ir-12345678
                - ir-abcdefgh
                - ir-abcd5678
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceEnvironmentsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list image registries"
      security:
      - api_key_header_Authorization: []
      summary: ListImageRegistry image-registry-api
      tags:
      - image-registry-api
    post:
      operationId: image-registry-api#CreateImageRegistry
      requestBody:
        content:
          application/json:
            example:
              description: DockerHub is a public Docker Image Registry
              host: docker.io
              name: DockerHub
              password: mypassword
              username: myusername
            schema:
              $ref: '#/components/schemas/CreateImageRegistryRequestBody'
        required: true
      responses:
        "202":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: ir-12345678
              schema:
                description: Image Registry ID created
                example: ir-12345678
                type: string
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create an image\
            \ registry"
      security:
      - api_key_header_Authorization: []
      summary: CreateImageRegistry image-registry-api
      tags:
      - image-registry-api
  /2022-09-01-00/image-registry/{id}:
    delete:
      operationId: image-registry-api#DeleteImageRegistry
      parameters:
      - description: The ID of the Image Registry
        example: ir-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Registry
          example: Assumenda delectus explicabo tempore est qui laborum.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete an image\
            \ registry"
      security:
      - api_key_header_Authorization: []
      summary: DeleteImageRegistry image-registry-api
      tags:
      - image-registry-api
    get:
      operationId: image-registry-api#DescribeImageRegistry
      parameters:
      - description: The ID of the Image Registry
        example: ir-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Registry
          example: Deserunt quia praesentium perspiciatis.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: DockerHub is a public Docker Image Registry
                host: docker.io
                id: ir-12345678
                name: DockerHub
                password: mypassword
                username: myusername
              schema:
                $ref: '#/components/schemas/DescribeImageRegistryResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an image\
            \ registry"
      security:
      - api_key_header_Authorization: []
      summary: DescribeImageRegistry image-registry-api
      tags:
      - image-registry-api
    patch:
      operationId: image-registry-api#UpdateImageRegistry
      parameters:
      - description: The ID of the Image Registry
        example: ir-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Registry
          example: Sint accusamus non qui beatae eveniet exercitationem.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: DockerHub is a public Docker Image Registry
              host: docker.io
              name: DockerHub
              password: mypassword
              username: myusername
            schema:
              $ref: '#/components/schemas/UpdateImageRegistryRequestBody'
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update an image\
            \ registry"
      security:
      - api_key_header_Authorization: []
      summary: UpdateImageRegistry image-registry-api
      tags:
      - image-registry-api
  /2022-09-01-00/invite-user:
    post:
      operationId: users-api#InviteUser
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              roleType: reader
            schema:
              $ref: '#/components/schemas/InviteUserRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to invite user"
      security:
      - api_key_header_Authorization: []
      summary: InviteUser users-api
      tags:
      - users-api
  /2022-09-01-00/invoice:
    get:
      operationId: invoice-api#ListInvoices
      responses:
        "200":
          content:
            application/json:
              example:
                invoices:
                - currency: USD
                  invoiceDate: 2021-01-01T00:00:00.000Z
                  invoiceId: 123MyCoolCorp980-2021-01-01-1234567890
                  invoicePaymentTerm: "30"
                  invoiceStatus: Open
                  invoiceUrl: https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf
                  taxAmount: 10
                  totalAmount: 110
                  totalAmountWithoutTax: 100
                - currency: USD
                  invoiceDate: 2021-01-01T00:00:00.000Z
                  invoiceId: 123MyCoolCorp980-2021-01-01-1234567890
                  invoicePaymentTerm: "30"
                  invoiceStatus: Open
                  invoiceUrl: https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf
                  taxAmount: 10
                  totalAmount: 110
                  totalAmountWithoutTax: 100
              schema:
                $ref: '#/components/schemas/ListInvoicesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list invoices"
      security:
      - api_key_header_Authorization: []
      summary: ListInvoices invoice-api
      tags:
      - invoice-api
  /2022-09-01-00/limit:
    get:
      operationId: limit-api#ListLimit
      requestBody:
        content:
          application/json:
            example:
              family: COMPUTE_INFRA
            schema:
              $ref: '#/components/schemas/ListLimitRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                keys:
                - MAX_VIRTUAL_CORES_PER_RESOURCE
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListLimitResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list limit"
      security:
      - api_key_header_Authorization: []
      summary: ListLimit limit-api
      tags:
      - limit-api
  /2022-09-01-00/limit/family/{family}/key/{key}:
    delete:
      operationId: limit-api#DeleteLimit
      parameters:
      - description: Limit family
        example: COMPUTE_INFRA
        explode: false
        in: path
        name: family
        required: true
        schema:
          description: The limit family
          example: SERVICE
          type: string
        style: simple
      - description: Unique key to identify the limit
        example: MAX_VIRTUAL_CORES_PER_RESOURCE
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: Unique key to identify the limit
          example: MAX_VIRTUAL_CORES_PER_RESOURCE
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete limit"
      security:
      - api_key_header_Authorization: []
      summary: DeleteLimit limit-api
      tags:
      - limit-api
    get:
      operationId: limit-api#DescribeLimit
      parameters:
      - description: Limit family
        example: COMPUTE_INFRA
        explode: false
        in: path
        name: family
        required: true
        schema:
          description: The limit family
          example: SERVICE
          type: string
        style: simple
      - description: Unique key to identify the limit
        example: MAX_VIRTUAL_CORES_PER_RESOURCE
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: Unique key to identify the limit
          example: MAX_VIRTUAL_CORES_PER_RESOURCE
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: A premium limit
                family: COMPUTE_INFRA
                key: MAX_VIRTUAL_CORES_PER_RESOURCE
                modifiable: true
                name: Premium Tier
                value: 4
              schema:
                $ref: '#/components/schemas/DescribeLimitResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe limit"
      security:
      - api_key_header_Authorization: []
      summary: DescribeLimit limit-api
      tags:
      - limit-api
    patch:
      operationId: limit-api#UpdateLimit
      parameters:
      - description: Limit family
        example: COMPUTE_INFRA
        explode: false
        in: path
        name: family
        required: true
        schema:
          description: The limit family
          example: SERVICE
          type: string
        style: simple
      - description: Unique key to identify the limit
        example: MAX_VIRTUAL_CORES_PER_RESOURCE
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: Unique key to identify the limit
          example: MAX_VIRTUAL_CORES_PER_RESOURCE
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A premium limit
              name: Premium Tier
              value: 4
            schema:
              $ref: '#/components/schemas/UpdateLimitRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update limit"
      security:
      - api_key_header_Authorization: []
      summary: UpdateLimit limit-api
      tags:
      - limit-api
  /2022-09-01-00/login-with-identity-provider:
    post:
      operationId: signin-api#LoginWithIdentityProvider
      requestBody:
        content:
          application/json:
            example:
              authorizationCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
              companyDescription: We sell xyz database software
              companyUrl: https://www.mywebsite.com
              deviceCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
              identityProviderName: Google
              invitedEmail: abc@gmail.com
              legalCompanyName: mywebsite
              redirectUri: https://www.example/redirect
            schema:
              $ref: '#/components/schemas/LoginWithIdentityProviderRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                jwtToken: ""
              schema:
                $ref: '#/components/schemas/SigninResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to login with identity\
            \ provider"
      summary: LoginWithIdentityProvider signin-api
      tags:
      - signin-api
  /2022-09-01-00/logout:
    post:
      operationId: users-api#Logout
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to logout"
      security:
      - api_key_header_Authorization: []
      summary: Logout users-api
      tags:
      - users-api
  /2022-09-01-00/org-users:
    get:
      operationId: users-api#DescribeUsersByOrg
      responses:
        "200":
          content:
            application/json:
              example:
                Id: org-aKQ8G13QeR
                orgUsers:
                - email: abc@gmail.com
                  invitedAt: 2023-01-10T00:00:00Z
                  name: John Doe
                  roleType: reader
                  userId: user-abcd1234
              schema:
                $ref: '#/components/schemas/DescribeUsersByOrgResult'
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: DescribeUsersByOrg users-api
      tags:
      - users-api
  /2022-09-01-00/plan:
    get:
      operationId: plan-api#DescribePlan
      responses:
        "200":
          content:
            application/json:
              example:
                modifiedAt: 2023-01-01T00:00:00Z
                nextChargeDate: 2023-02-01
                paymentConfigured: true
                paymentInfoPortalURL: https://billing.paigo.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
                planCoreHourCost: 0.05
                planDescription: The starter plan is priced at 'X' units
                planFrequency: MONTHLY
                planMonthlyCost: 49
                planName: STARTER
                remainingCredits: "100"
                startDate: 2023-01-01
              schema:
                $ref: '#/components/schemas/DescribePlanResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to add plan"
      security:
      - api_key_header_Authorization: []
      summary: DescribePlan plan-api
      tags:
      - plan-api
    post:
      operationId: plan-api#ChangePlan
      requestBody:
        content:
          application/json:
            example:
              planName: STARTER
            schema:
              $ref: '#/components/schemas/ChangePlanRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to add plan"
      security:
      - api_key_header_Authorization: []
      summary: ChangePlan plan-api
      tags:
      - plan-api
  /2022-09-01-00/region/{id}:
    get:
      operationId: region-api#DescribeRegion
      parameters:
      - description: ID of the Region
        example: region-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Region
          example: Expedita sit ut sed sit exercitationem impedit.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cloudProviderId: infra-12345678
                cloudProviderName: aws
                code: us-east-1
                description: US East (N. Virginia)
                id: region-12345678
              schema:
                $ref: '#/components/schemas/DescribeRegionResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a region"
      security:
      - api_key_header_Authorization: []
      summary: DescribeRegion region-api
      tags:
      - region-api
  /2022-09-01-00/region/cloudprovider/{cloudProviderName}:
    get:
      operationId: region-api#ListRegion
      parameters:
      - allowEmptyValue: true
        description: "Service ID. If specified together with serviceModelId,list the\
          \ regions of the service model. Otherwise list all regions."
        example: s-12345678
        explode: true
        in: query
        name: serviceId
        required: false
        schema:
          description: ID of a Service
          example: Magnam eum quo numquam nemo quia.
          type: string
        style: form
      - allowEmptyValue: true
        description: "Service model ID. If specified together with serviceId,list\
          \ the regions of the service model. Otherwise list all regions."
        example: sm-12345678
        explode: true
        in: query
        name: serviceModelId
        required: false
        schema:
          description: ID of a Service Model
          example: Voluptas accusantium.
          type: string
        style: form
      - allowEmptyValue: true
        description: "Product tier ID. If specified together with serviceId,list the\
          \ regions of the product tier. Otherwise list all regions."
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Officia a qui possimus nostrum quod.
          type: string
        style: form
      - allowEmptyValue: true
        description: "Model type. If specified, list regions for the specified model\
          \ type."
        example: CUSTOMER_HOSTED
        explode: true
        in: query
        name: modelType
        required: false
        schema:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        style: form
      - description: The cloud provider for this compute instance type config
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - region-12345678
                - region-87654321
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceEnvironmentsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list regions"
      security:
      - api_key_header_Authorization: []
      summary: ListRegion region-api
      tags:
      - region-api
  /2022-09-01-00/region/code/{code}/cloud-provider/{cloudProviderName}:
    get:
      operationId: region-api#GetRegionByCode
      parameters:
      - description: Cloud-provider native region code
        example: us-east-1
        explode: false
        in: path
        name: code
        required: true
        schema:
          description: Cloud-provider native region code
          example: us-east-1
          minLength: 1
          type: string
        style: simple
      - description: The cloud provider for this compute instance type config
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: Aut necessitatibus quae esse.
              schema:
                example: Aut numquam reiciendis aut quia.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get a region by\
            \ code"
      security:
      - api_key_header_Authorization: []
      summary: GetRegionByCode region-api
      tags:
      - region-api
  /2022-09-01-00/reset-password:
    post:
      operationId: signup-api#ResetPassword
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
            schema:
              $ref: '#/components/schemas/ResetPasswordRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to reset password"
      summary: ResetPassword signup-api
      tags:
      - signup-api
  /2022-09-01-00/resource-instance/{instanceId}/event:
    get:
      operationId: event-api#ListEvent
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The ID of the resource instance
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: The ID of the resource instance
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                ids:
                - event-12345678
                nextPageToken: token
              schema:
                $ref: '#/components/schemas/ListEventResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list event"
      security:
      - api_key_header_Authorization: []
      summary: ListEvent event-api
      tags:
      - event-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}
  : get:
      operationId: resource-instance-api#ListResourceInstances
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Rerum eligendi.
          type: string
        style: simple
      - description: The service key
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service key
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - instance-abcd1234
                - instance-abcd1235
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceEnvironmentsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list resource\
            \ instances"
      security:
      - api_key_header_Authorization: []
      summary: ListResourceInstances resource-instance-api
      tags:
      - resource-instance-api
    post:
      operationId: resource-instance-api#CreateResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Magni porro.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              cloud_provider: aws
              custom_network_id: n-1234567890
              externalBillingId: external-billing-id-1234
              network_type: PUBLIC
              region: us-east-1
              requestParams:
                param1: value1
                param2: value2
            schema:
              $ref: '#/components/schemas/CreateResourceInstanceRequestBody'
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                id: Porro voluptatem.
              schema:
                $ref: '#/components/schemas/CreateResourceInstanceResponseBody'
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: CreateResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}
  : delete:
      operationId: resource-instance-api#DeleteResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Possimus ea distinctio rem nam adipisci.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: DeleteResourceInstance resource-instance-api
      tags:
      - resource-instance-api
    get:
      operationId: resource-instance-api#DescribeResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Doloremque perferendis esse reiciendis quibusdam libero nihil.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                active: true
                awsAccountID: "123456789012"
                backupStatus:
                  earliestRestoreTime: 2021-09-01T00:00:00Z
                cloud_provider: aws
                created_at: 2023-01-10T00:00:00Z
                createdByUserId: user-12345678
                createdByUserName: John Doe
                customNetworkDetail:
                  cidr: 10.177.0.0/16
                  id: n-12345678
                  name: Prod us-east-1
                detailedNetworkTopology:
                  r-abcd1234:
                    allowedIPRanges:
                    - 0.0.0.0/0
                    clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    clusterPorts:
                    - 3306
                    main: true
                    networkingType: PUBLIC
                    nodes:
                    - availabilityZone: us-east-2a
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      healthStatus: healthy
                      id: primary-0
                      ports:
                      - 3306
                      status: RUNNING
                    privateNetworkCIDR: 10.0.0.2/24
                    privateNetworkID: n-1234abcd
                    publiclyAccessible: true
                    resourceKey: primary
                    resourceName: Primary MySQL Instance
                externalPayerId: external-payer-id-1234
                gcpProjectID: my-project
                highAvailability: true
                id: instance-abcd1234
                last_modified_at: 2023-01-20T00:00:00Z
                network_type: PUBLIC
                productTierFeatures:
                  BILLING:
                    enabled: false
                  LOGS:
                    auth:
                      password: px3c4d5f6g7h8i
                      username: abcd1234
                    enabled: true
                    websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                  METRICS:
                    enabled: false
                region: us-east-1
                result_params:
                  param1: value1
                  param2: value2
                status: RUNNING
                subscriptionId: sub-abcd1234
              schema:
                $ref: '#/components/schemas/DescribeResourceInstanceResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: DescribeResourceInstance resource-instance-api
      tags:
      - resource-instance-api
    patch:
      operationId: resource-instance-api#UpdateResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Provident nam voluptatibus quis eveniet.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              requestParams:
                param1: value1
                param2: value2
            schema:
              $ref: '#/components/schemas/UpdateResourceInstanceRequestBody'
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: UpdateResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/add-capacity
  : post:
      operationId: resource-instance-api#AddCapacityToResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Eum omnis quibusdam nam mollitia doloremque saepe.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              capacityToBeAdded: 3
            schema:
              $ref: '#/components/schemas/AddCapacityToResourceInstanceRequestBody'
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to add capacity to\
            \ a resource instance"
      security:
      - api_key_header_Authorization: []
      summary: AddCapacityToResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/custom-dns
  : delete:
      operationId: resource-instance-api#RemoveCustomDNSFromResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Inventore iure quis.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: http-service
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: http-service
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: RemoveCustomDNSFromResourceInstance resource-instance-api
      tags:
      - resource-instance-api
    post:
      operationId: resource-instance-api#AddCustomDNSToResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Molestiae maxime aut.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: http-service
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: http-service
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              customDNS: my-custom-dns.com
              targetPort: 8080
            schema:
              $ref: '#/components/schemas/AddCustomDNSToResourceInstanceRequestBody'
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: AddCustomDNSToResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/failover
  : post:
      operationId: resource-instance-api#FailoverResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Non veritatis veniam aut omnis iure.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              failedReplicaAction: FAILOVER_AND_RESTART
              failedReplicaID: db-0
            schema:
              $ref: '#/components/schemas/FailoverResourceInstanceRequestBody'
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to failover a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: FailoverResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/remove-capacity
  : post:
      operationId: resource-instance-api#RemoveCapacityFromResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Ea perferendis voluptatem labore sunt.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              capacityToBeRemoved: 3
            schema:
              $ref: '#/components/schemas/RemoveCapacityFromResourceInstanceRequestBody'
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to remove capacity\
            \ from a resource instance"
      security:
      - api_key_header_Authorization: []
      summary: RemoveCapacityFromResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/restart
  : post:
      operationId: resource-instance-api#RestartResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Beatae eos impedit maxime nihil nulla sit.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to restart a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: RestartResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/restore
  : post:
      operationId: resource-instance-api#RestoreResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Non repellendus officia.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              network_type: PUBLIC
              targetRestoreTime: 2021-09-01T00:00:00Z
            schema:
              $ref: '#/components/schemas/RestoreResourceInstanceRequestBody'
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                id: Sapiente molestiae.
              schema:
                $ref: '#/components/schemas/CreateResourceInstanceResponseBody'
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: RestoreResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/start
  : post:
      operationId: resource-instance-api#StartResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Facere fugiat omnis.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to start a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: StartResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/stop
  : post:
      operationId: resource-instance-api#StopResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Aut sunt at rem est ullam.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to stop a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: StopResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/event
  : get:
      operationId: event-api#ListAllEvent
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Veniam earum maiores dolorem voluptas.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                ids:
                - event-12345678
                nextPageToken: token
              schema:
                $ref: '#/components/schemas/ListEventResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list event"
      security:
      - api_key_header_Authorization: []
      summary: ListAllEvent event-api
      tags:
      - event-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/setup-kit
  : get:
      operationId: resource-instance-api#ResourceInstanceProvisionerSetupKit
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Ratione ut veritatis tempora omnis voluptatem et.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to setup kit for\
            \ a resource instance"
      security:
      - api_key_header_Authorization: []
      summary: ResourceInstanceProvisionerSetupKit resource-instance-api
      tags:
      - resource-instance-api
  /2022-09-01-00/resource-instance/custom-network:
    get:
      operationId: custom-network-api#ListCustomNetworks
      parameters:
      - allowEmptyValue: true
        description: The name of the cloud provider that custom network should be
          created in
        example: aws
        explode: true
        in: query
        name: cloudProviderName
        required: false
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: form
      - allowEmptyValue: true
        description: The region of the cloud provider that the network should be created
          in
        example: us-east-1
        explode: true
        in: query
        name: cloudProviderRegion
        required: false
        schema:
          description: The region of the cloud provider that the network should be
            created in
          example: us-east-1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                customNetworks:
                - cidr: 10.0.0.0/16
                  cloudProviderName: aws
                  cloudProviderRegion: us-east-1
                  id: n-12345678
                  name: Prod us-east-1
                  networkFeaturesConfiguration:
                    isPrivateLinkEnabled: true
                  networkInstances:
                  - awsAccountID: "123456789012"
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                - cidr: 10.0.0.0/16
                  cloudProviderName: aws
                  cloudProviderRegion: us-east-1
                  id: n-12345678
                  name: Prod us-east-1
                  networkFeaturesConfiguration:
                    isPrivateLinkEnabled: true
                  networkInstances:
                  - awsAccountID: "123456789012"
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                - cidr: 10.0.0.0/16
                  cloudProviderName: aws
                  cloudProviderRegion: us-east-1
                  id: n-12345678
                  name: Prod us-east-1
                  networkFeaturesConfiguration:
                    isPrivateLinkEnabled: true
                  networkInstances:
                  - awsAccountID: "123456789012"
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                - cidr: 10.0.0.0/16
                  cloudProviderName: aws
                  cloudProviderRegion: us-east-1
                  id: n-12345678
                  name: Prod us-east-1
                  networkFeaturesConfiguration:
                    isPrivateLinkEnabled: true
                  networkInstances:
                  - awsAccountID: "123456789012"
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
              schema:
                $ref: '#/components/schemas/ListCustomNetworksResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list custom networks"
      security:
      - api_key_header_Authorization: []
      summary: ListCustomNetworks custom-network-api
      tags:
      - custom-network-api
    post:
      operationId: custom-network-api#CreateCustomNetwork
      requestBody:
        content:
          application/json:
            example:
              cidr: 10.0.0.0/16
              cloudProviderName: aws
              cloudProviderRegion: us-east-1
              name: Prod us-east-1
              networkFeaturesConfiguration:
                isPrivateLinkEnabled: false
            schema:
              $ref: '#/components/schemas/CreateCustomNetworkRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                cidr: 10.0.0.0/16
                cloudProviderName: aws
                cloudProviderRegion: us-east-1
                id: n-12345678
                name: Prod us-east-1
                networkFeaturesConfiguration:
                  isPrivateLinkEnabled: true
                networkInstances:
                - awsAccountID: "123456789012"
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                - awsAccountID: "123456789012"
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                - awsAccountID: "123456789012"
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                - awsAccountID: "123456789012"
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
              schema:
                $ref: '#/components/schemas/CustomNetwork'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a custom\
            \ network"
      security:
      - api_key_header_Authorization: []
      summary: CreateCustomNetwork custom-network-api
      tags:
      - custom-network-api
  /2022-09-01-00/resource-instance/custom-network/{id}:
    delete:
      operationId: custom-network-api#DeleteCustomNetwork
      parameters:
      - description: ID of a custom network
        example: n-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a custom network
          example: Quia aperiam sit pariatur.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request to delete a custom\
            \ network"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a custom\
            \ network"
      security:
      - api_key_header_Authorization: []
      summary: DeleteCustomNetwork custom-network-api
      tags:
      - custom-network-api
    get:
      operationId: custom-network-api#DescribeCustomNetwork
      parameters:
      - description: ID of a custom network
        example: n-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a custom network
          example: Nulla consequatur quis aliquid quia sunt est.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cidr: 10.0.0.0/16
                cloudProviderName: aws
                cloudProviderRegion: us-east-1
                id: n-12345678
                name: Prod us-east-1
                networkFeaturesConfiguration:
                  isPrivateLinkEnabled: true
                networkInstances:
                - awsAccountID: "123456789012"
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                - awsAccountID: "123456789012"
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                - awsAccountID: "123456789012"
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
              schema:
                $ref: '#/components/schemas/CustomNetwork'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request to describe a\
            \ custom network"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a custom\
            \ network"
      security:
      - api_key_header_Authorization: []
      summary: DescribeCustomNetwork custom-network-api
      tags:
      - custom-network-api
  /2022-09-01-00/resource-instance/event/{id}:
    get:
      operationId: event-api#DescribeEvent
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The ID of the event
        example: event-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Event
          example: Facilis itaque aut aut.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                eventSource: "Customer, Infra or Maintenance"
                id: event-12345678
                message: instance-abcd1234 created
                orgId: org-12345678
                orgName: Acme Corporation
                resourceInstanceId: instance-abcd1234
                resourceName: Galera
                time: 2023-01-10T00:00:00Z
                userId: user-12345678
                userName: John Doe
                workflowFailures:
                - eventTime: 2020-01-01T00:00:00Z
                  message: Bootstrap failed for reason X
                - eventTime: 2020-01-01T00:01:00Z
                  message: Compute failed for reason Y
              schema:
                $ref: '#/components/schemas/DescribeEventResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe event"
      security:
      - api_key_header_Authorization: []
      summary: DescribeEvent event-api
      tags:
      - event-api
  /2022-09-01-00/resource-instance/health:
    get:
      description: Consumption service health check endpoint
      operationId: global-api#consumptionServiceHealth
      responses:
        "200":
          content:
            application/json:
              example:
                status: RUNNING
              schema:
                $ref: '#/components/schemas/OmnistrateServiceHealthResult'
          description: OK response.
      summary: consumptionServiceHealth global-api
      tags:
      - global-api
  /2022-09-01-00/resource-instance/subscription/{subscriptionId}/invite-user:
    post:
      operationId: consumption-user-api#InviteUser
      parameters:
      - description: The subscription ID
        example: sub-abcd1234
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              roleType: reader
            schema:
              $ref: '#/components/schemas/InviteUserRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to invite user"
      security:
      - api_key_header_Authorization: []
      summary: InviteUser consumption-user-api
      tags:
      - consumption-user-api
  /2022-09-01-00/resource-instance/subscription/{subscriptionId}/revoke-user-role:
    delete:
      operationId: consumption-user-api#RevokeUserRole
      parameters:
      - description: The subscription ID
        example: sub-abcd1234
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              roleType: reader
            schema:
              $ref: '#/components/schemas/InviteUserRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete user"
      security:
      - api_key_header_Authorization: []
      summary: RevokeUserRole consumption-user-api
      tags:
      - consumption-user-api
  /2022-09-01-00/resource-instance/subscription/{subscriptionId}/subscription-users:
    get:
      operationId: consumption-user-api#DescribeUsersBySubscription
      parameters:
      - description: The subscription ID
        example: sub-abcd1234
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Id: sub-abcd1234
                subscriptionUsers:
                - email: abc@gmail.com
                  name: John Doe
                  roleType: reader
                  userId: user-abcd1234
              schema:
                $ref: '#/components/schemas/DescribeUsersBySubscriptionResult'
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: DescribeUsersBySubscription consumption-user-api
      tags:
      - consumption-user-api
  /2022-09-01-00/resource-instance/user/{id}/billing-details:
    get:
      operationId: consumption-user-api#DescribeUserBillingDetails
      parameters:
      - example: user-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a User
          example: Et qui quaerat ea et assumenda.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                billingEmbedURL: https://billing.provider.com/embed?customerId=cus_xxxxxxxxxxxxxx
                name: John Dae
                paymentConfigured: true
                paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
                userId: user-abcd1234
              schema:
                $ref: '#/components/schemas/DescribeUserBillingDetailsResult'
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: DescribeUserBillingDetails consumption-user-api
      tags:
      - consumption-user-api
  /2022-09-01-00/resource-instance/user/signin:
    post:
      operationId: consumption-user-api#Signin
      responses:
        "200":
          content:
            application/json:
              example:
                token: v6
              schema:
                $ref: '#/components/schemas/ConsumptionServiceAuthResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to signin"
      security:
      - basic_header_Authorization: []
      summary: Signin consumption-user-api
      tags:
      - consumption-user-api
  /2022-09-01-00/resource-instance/version:
    get:
      description: Consumption service version endpoint
      operationId: global-api#consumptionServiceVersion
      responses:
        "200":
          content:
            application/json:
              example:
                apiVersion: el
                buildCommitSHA: 1234567890abcdef1234567890abcdef12345678
                buildTimestamp: 2020-01-01T00:00:00Z
              schema:
                $ref: '#/components/schemas/OmnistrateServiceVersionResult'
          description: OK response.
      summary: consumptionServiceVersion global-api
      tags:
      - global-api
  /2022-09-01-00/revoke-user-role:
    delete:
      operationId: users-api#RevokeUserRole
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              roleType: reader
            schema:
              $ref: '#/components/schemas/InviteUserRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete user"
      security:
      - api_key_header_Authorization: []
      summary: RevokeUserRole users-api
      tags:
      - users-api
  /2022-09-01-00/saas-portal:
    get:
      operationId: saas-portal-api#ListSaaSPortals
      responses:
        "200":
          content:
            application/json:
              example:
                saasPortals:
                - customDomain: mycustomdomain.com
                  customDomainStatus: READY
                  detailedNetworkTopology:
                    r-abcd1234:
                      allowedIPRanges:
                      - 0.0.0.0/0
                      clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      clusterPorts:
                      - 3306
                      main: true
                      networkingType: PUBLIC
                      nodes:
                      - availabilityZone: us-east-2a
                        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        healthStatus: healthy
                        id: primary-0
                        ports:
                        - 3306
                        status: RUNNING
                      privateNetworkCIDR: 10.0.0.2/24
                      privateNetworkID: n-1234abcd
                      publiclyAccessible: true
                      resourceKey: saasportal
                      resourceName: SaaS Portal
                  emailConfig:
                    smtpFromEmail: example@gmail.com
                    smtpHost: smtp.gmail.com
                    smtpPassword: password
                    smtpPort: 587
                    smtpUsername: username
                  endpoint: https://saas-portal.example.com
                  environmentType: DEV
                  googleAnalyticsTagID: G-123456789
                  imageConfig:
                    imageName: myimage
                    imageRegistry: ghcr.io
                    imageTag: latest
                  status: READY
                - customDomain: mycustomdomain.com
                  customDomainStatus: READY
                  detailedNetworkTopology:
                    r-abcd1234:
                      allowedIPRanges:
                      - 0.0.0.0/0
                      clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      clusterPorts:
                      - 3306
                      main: true
                      networkingType: PUBLIC
                      nodes:
                      - availabilityZone: us-east-2a
                        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        healthStatus: healthy
                        id: primary-0
                        ports:
                        - 3306
                        status: RUNNING
                      privateNetworkCIDR: 10.0.0.2/24
                      privateNetworkID: n-1234abcd
                      publiclyAccessible: true
                      resourceKey: saasportal
                      resourceName: SaaS Portal
                  emailConfig:
                    smtpFromEmail: example@gmail.com
                    smtpHost: smtp.gmail.com
                    smtpPassword: password
                    smtpPort: 587
                    smtpUsername: username
                  endpoint: https://saas-portal.example.com
                  environmentType: DEV
                  googleAnalyticsTagID: G-123456789
                  imageConfig:
                    imageName: myimage
                    imageRegistry: ghcr.io
                    imageTag: latest
                  status: READY
                - customDomain: mycustomdomain.com
                  customDomainStatus: READY
                  detailedNetworkTopology:
                    r-abcd1234:
                      allowedIPRanges:
                      - 0.0.0.0/0
                      clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      clusterPorts:
                      - 3306
                      main: true
                      networkingType: PUBLIC
                      nodes:
                      - availabilityZone: us-east-2a
                        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        healthStatus: healthy
                        id: primary-0
                        ports:
                        - 3306
                        status: RUNNING
                      privateNetworkCIDR: 10.0.0.2/24
                      privateNetworkID: n-1234abcd
                      publiclyAccessible: true
                      resourceKey: saasportal
                      resourceName: SaaS Portal
                  emailConfig:
                    smtpFromEmail: example@gmail.com
                    smtpHost: smtp.gmail.com
                    smtpPassword: password
                    smtpPort: 587
                    smtpUsername: username
                  endpoint: https://saas-portal.example.com
                  environmentType: DEV
                  googleAnalyticsTagID: G-123456789
                  imageConfig:
                    imageName: myimage
                    imageRegistry: ghcr.io
                    imageTag: latest
                  status: READY
              schema:
                $ref: '#/components/schemas/ListSaaSPortalsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list saas portals"
      security:
      - api_key_header_Authorization: []
      summary: ListSaaSPortals saas-portal-api
      tags:
      - saas-portal-api
  /2022-09-01-00/saas-portal-custom-domain:
    get:
      operationId: saas-portal-api#ListSaaSPortalCustomDomains
      responses:
        "200":
          content:
            application/json:
              example:
                customDomains:
                - clusterEndpoint: example.com
                  customDomain: mycustomdomain.com
                  description: My custom domain description
                  environmentType: DEV
                  name: MyCustomDomain
                  status: READY
                - clusterEndpoint: example.com
                  customDomain: mycustomdomain.com
                  description: My custom domain description
                  environmentType: DEV
                  name: MyCustomDomain
                  status: READY
                - clusterEndpoint: example.com
                  customDomain: mycustomdomain.com
                  description: My custom domain description
                  environmentType: DEV
                  name: MyCustomDomain
                  status: READY
                - clusterEndpoint: example.com
                  customDomain: mycustomdomain.com
                  description: My custom domain description
                  environmentType: DEV
                  name: MyCustomDomain
                  status: READY
              schema:
                $ref: '#/components/schemas/ListSaaSPortalCustomDomainsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list saas portal\
            \ custom domains"
      security:
      - api_key_header_Authorization: []
      summary: ListSaaSPortalCustomDomains saas-portal-api
      tags:
      - saas-portal-api
    post:
      operationId: saas-portal-api#CreateSaaSPortalCustomDomain
      requestBody:
        content:
          application/json:
            example:
              customDomain: mycustomdomain.com
              description: My custom domain description
              environmentType: DEV
              name: MyCustomDomain
            schema:
              $ref: '#/components/schemas/CreateSaaSPortalCustomDomainRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create saas portal\
            \ custom domain"
      security:
      - api_key_header_Authorization: []
      summary: CreateSaaSPortalCustomDomain saas-portal-api
      tags:
      - saas-portal-api
  /2022-09-01-00/saas-portal-custom-domain/{environmentType}:
    delete:
      operationId: saas-portal-api#DeleteSaaSPortalCustomDomain
      parameters:
      - description: The environment type for the custom domain
        example: DEV
        explode: false
        in: path
        name: environmentType
        required: true
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete saas portal\
            \ custom domains"
      security:
      - api_key_header_Authorization: []
      summary: DeleteSaaSPortalCustomDomain saas-portal-api
      tags:
      - saas-portal-api
    patch:
      operationId: saas-portal-api#UpdateSaaSPortalCustomDomain
      parameters:
      - description: The environment type for the saas portal custom domain to update
        example: DEV
        explode: false
        in: path
        name: environmentType
        required: true
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              customDomain: mycustomdomain.com
              description: My custom domain description
              name: MyCustomDomain
            schema:
              $ref: '#/components/schemas/UpdateSaaSPortalCustomDomainRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update saas portal\
            \ custom domain"
      security:
      - api_key_header_Authorization: []
      summary: UpdateSaaSPortalCustomDomain saas-portal-api
      tags:
      - saas-portal-api
  /2022-09-01-00/saas-portal/{environmentType}:
    patch:
      operationId: saas-portal-api#UpdateSaaSPortal
      parameters:
      - description: The environment type for the saas portal custom domain to update
        example: DEV
        explode: false
        in: path
        name: environmentType
        required: true
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              customDomain: mycustomdomain.com
              emailConfig:
                smtpFromEmail: example@gmail.com
                smtpHost: smtp.gmail.com
                smtpPassword: password
                smtpPort: 587
                smtpUsername: username
              googleAnalyticsTagID: G-123456789
              imageConfig:
                imageName: myimage
                imageRegistry: ghcr.io
                imageTag: latest
            schema:
              $ref: '#/components/schemas/UpdateSaaSPortalRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update saas portal"
      security:
      - api_key_header_Authorization: []
      summary: UpdateSaaSPortal saas-portal-api
      tags:
      - saas-portal-api
  /2022-09-01-00/service:
    get:
      operationId: service-api#ListService
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - s-12345678
                - s-abcdefgh
                - s-1234efgh
                nextPageToken: next-token
                services:
                - createdAt: 2019-01-01T00:00:00Z
                  description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: s-12345678
                  key: mysql
                  name: MySQL multi-writer service
                  roleType: admin
                  serviceEnvironments:
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  serviceLogoURL: Rerum quis consequatur.
                  serviceProviderID: sp-12345678
                  serviceProviderName: "Omnistrate, Inc."
                - createdAt: 2019-01-01T00:00:00Z
                  description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: s-12345678
                  key: mysql
                  name: MySQL multi-writer service
                  roleType: admin
                  serviceEnvironments:
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  serviceLogoURL: Rerum quis consequatur.
                  serviceProviderID: sp-12345678
                  serviceProviderName: "Omnistrate, Inc."
              schema:
                $ref: '#/components/schemas/ListServiceResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list services"
      security:
      - api_key_header_Authorization: []
      summary: ListService service-api
      tags:
      - service-api
    post:
      operationId: service-api#CreateService
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              name: MySQL multi-writer service
              serviceLogoURL: http://fahey.biz/retha.dubuque
            schema:
              $ref: '#/components/schemas/CreateServiceRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: s-12345678
              schema:
                description: Service ID created
                example: s-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a service"
      security:
      - api_key_header_Authorization: []
      summary: CreateService service-api
      tags:
      - service-api
  /2022-09-01-00/service-offering:
    get:
      operationId: service-offering-api#ListServiceOffering
      parameters:
      - allowEmptyValue: true
        description: Org Id
        example: org-12345678
        explode: true
        in: query
        name: orgId
        required: false
        schema:
          description: ID of an Org
          example: Iure quia qui iure dicta sint fugit.
          type: string
        style: form
      - allowEmptyValue: true
        description: The visibility of service offering
        example: PRIVATE
        explode: true
        in: query
        name: visibility
        required: false
        schema:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
        style: form
      - allowEmptyValue: true
        description: The environment type to filter by
        example: DEV
        explode: true
        in: query
        name: environmentType
        required: false
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                nextPageToken: next-token
                serviceIds:
                - s-12345678
                - s-abcdefgh
                services:
                - createdAt: 2019-01-01T00:00:00Z
                  isDeprecated: false
                  offerings:
                  - assets:
                      cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                      cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
                    billingPlans:
                    - maxNumberofInstances: 4
                    productTierName: Premium
                    productTierURLKey: premium
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-12345678
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PRIVATE
                    serviceModelName: Bring Your Own Account
                    serviceModelURLKey: byoa
                  - productTierName: Basic
                    productTierURLKey: basic
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-abcdefgh
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PUBLIC
                    serviceModelName: Hosted
                    serviceModelURLKey: hosted
                  serviceDescription: MySQL is a relational database
                  serviceId: s-12345678
                  serviceName: MySQL
                  serviceOrgId: org-12345678
                  serviceProviderId: sp-9zrg9W8Are
                  serviceProviderName: "Omnistrate, Inc."
                  serviceURLKey: mysql
                - createdAt: 2019-01-01T00:00:00Z
                  isDeprecated: false
                  offerings:
                  - assets:
                      cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                      cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
                    billingPlans:
                    - maxNumberofInstances: 4
                    productTierName: Premium
                    productTierURLKey: premium
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-12345678
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PRIVATE
                    serviceModelName: Bring Your Own Account
                    serviceModelURLKey: byoa
                  - productTierName: Basic
                    productTierURLKey: basic
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-abcdefgh
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PUBLIC
                    serviceModelName: Hosted
                    serviceModelURLKey: hosted
                  serviceDescription: MySQL is a relational database
                  serviceId: s-12345678
                  serviceName: MySQL
                  serviceOrgId: org-12345678
                  serviceProviderId: sp-9zrg9W8Are
                  serviceProviderName: "Omnistrate, Inc."
                  serviceURLKey: mysql
                - createdAt: 2019-01-01T00:00:00Z
                  isDeprecated: false
                  offerings:
                  - assets:
                      cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                      cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
                    billingPlans:
                    - maxNumberofInstances: 4
                    productTierName: Premium
                    productTierURLKey: premium
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-12345678
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PRIVATE
                    serviceModelName: Bring Your Own Account
                    serviceModelURLKey: byoa
                  - productTierName: Basic
                    productTierURLKey: basic
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-abcdefgh
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PUBLIC
                    serviceModelName: Hosted
                    serviceModelURLKey: hosted
                  serviceDescription: MySQL is a relational database
                  serviceId: s-12345678
                  serviceName: MySQL
                  serviceOrgId: org-12345678
                  serviceProviderId: sp-9zrg9W8Are
                  serviceProviderName: "Omnistrate, Inc."
                  serviceURLKey: mysql
                - createdAt: 2019-01-01T00:00:00Z
                  isDeprecated: false
                  offerings:
                  - assets:
                      cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                      cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
                    billingPlans:
                    - maxNumberofInstances: 4
                    productTierName: Premium
                    productTierURLKey: premium
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-12345678
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PRIVATE
                    serviceModelName: Bring Your Own Account
                    serviceModelURLKey: byoa
                  - productTierName: Basic
                    productTierURLKey: basic
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-abcdefgh
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PUBLIC
                    serviceModelName: Hosted
                    serviceModelURLKey: hosted
                  serviceDescription: MySQL is a relational database
                  serviceId: s-12345678
                  serviceName: MySQL
                  serviceOrgId: org-12345678
                  serviceProviderId: sp-9zrg9W8Are
                  serviceProviderName: "Omnistrate, Inc."
                  serviceURLKey: mysql
              schema:
                $ref: '#/components/schemas/ListServiceOfferingsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list service offerings"
      security:
      - api_key_header_Authorization: []
      summary: ListServiceOffering service-offering-api
      tags:
      - service-offering-api
  /2022-09-01-00/service-offering/{serviceId}:
    get:
      operationId: service-offering-api#DescribeServiceOffering
      parameters:
      - allowEmptyValue: true
        description: The visibility of service offering
        example: PRIVATE
        explode: true
        in: query
        name: visibility
        required: false
        schema:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
        style: form
      - allowEmptyValue: true
        description: The environment type to filter by
        example: DEV
        explode: true
        in: query
        name: environmentType
        required: false
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Dolorum soluta quis non dolorum et.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                createdAt: 2019-01-01T00:00:00Z
                isDeprecated: false
                offerings:
                - assets:
                    cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                    cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
                  billingPlans:
                  - maxNumberofInstances: 4
                  productTierName: Premium
                  productTierURLKey: premium
                  resourceParameters:
                  - name: MySQL
                    urlKey: mysql
                  - name: Redis
                    urlKey: redis
                  serviceAPIID: sa-12345678
                  serviceAPIVersion: v1
                  serviceEnvironmentName: Production
                  serviceEnvironmentURLKey: prod
                  serviceEnvironmentVisibility: PRIVATE
                  serviceModelName: Bring Your Own Account
                  serviceModelURLKey: byoa
                - productTierName: Basic
                  productTierURLKey: basic
                  resourceParameters:
                  - name: MySQL
                    urlKey: mysql
                  - name: Redis
                    urlKey: redis
                  serviceAPIID: sa-abcdefgh
                  serviceAPIVersion: v1
                  serviceEnvironmentName: Production
                  serviceEnvironmentURLKey: prod
                  serviceEnvironmentVisibility: PUBLIC
                  serviceModelName: Hosted
                  serviceModelURLKey: hosted
                serviceDescription: MySQL is a relational database
                serviceId: s-12345678
                serviceName: MySQL
                serviceOrgId: org-12345678
                serviceProviderId: sp-9zrg9W8Are
                serviceProviderName: "Omnistrate, Inc."
                serviceURLKey: mysql
              schema:
                $ref: '#/components/schemas/DescribeServiceOfferingResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a service\
            \ offering"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceOffering service-offering-api
      tags:
      - service-offering-api
  /2022-09-01-00/service-offering/{serviceId}/resource/{resourceId}/instance/{instanceId}:
    get:
      operationId: service-offering-api#DescribeServiceOfferingResource
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Sed incidunt est aut aliquid.
          type: string
        style: simple
      - description: The resource ID
        example: r-12345678
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          description: ID of a resource
          example: Dolore veritatis dolor esse sit aut similique.
          type: string
        style: simple
      - description: The instance ID
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          default: none
          description: The instance ID
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                apis:
                - inputParameters:
                  - defaultValue: null
                    description: The name of the server
                    displayName: Server Name
                    isList: false
                    key: serverName
                    modifiable: true
                    options: null
                    required: true
                    type: string
                  - defaultValue: option1
                    description: The type of the server
                    displayName: Server Type
                    isList: false
                    key: serverType
                    modifiable: true
                    options:
                    - option1
                    - option2
                    required: true
                    type: string
                  outputParameters:
                  - description: The name of the server
                    displayName: Server Name
                    isList: false
                    key: serverName
                    type: string
                  - description: The type of the server
                    displayName: Server Type
                    isList: false
                    key: serverType
                    type: string
                  verb: create
                - inputParameters:
                  - defaultValue: null
                    description: The name of the server
                    displayName: Server Name
                    isList: false
                    key: serverName
                    modifiable: true
                    options: null
                    required: true
                    type: string
                  outputParameters:
                  - description: The name of the server
                    displayName: Server Name
                    isList: false
                    key: serverName
                    type: string
                  - description: The type of the server
                    displayName: Server Type
                    isList: false
                    key: serverType
                    type: string
                  verb: describe
              schema:
                $ref: '#/components/schemas/DescribeServiceOfferingResourceResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a service\
            \ offering resource"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceOfferingResource service-offering-api
      tags:
      - service-offering-api
  /2022-09-01-00/service/{id}:
    delete:
      operationId: service-api#DeleteService
      parameters:
      - description: The service ID to operate on
        example: s-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service
          example: Sit quis sapiente nulla magnam.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a service"
      security:
      - api_key_header_Authorization: []
      summary: DeleteService service-api
      tags:
      - service-api
    get:
      operationId: service-api#DescribeService
      parameters:
      - description: The service ID to operate on
        example: s-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service
          example: Cum est dolores.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                createdAt: 2019-01-01T00:00:00Z
                description: A MySQL SaaS specializing in multi-writer clusters for
                  high availability
                id: s-12345678
                key: mysql
                name: MySQL multi-writer service
                roleType: admin
                serviceEnvironments:
                - id: se-12345678
                  name: dev
                  promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  saasPortalStatus: READY
                  saasPortalUrl: https://saas-portal.example.com
                  servicePlans:
                  - description: A Basic product tier
                    modelType: CUSTOMER_HOSTED
                    name: Basic
                    productTierID: pt-12345678
                    tierType: OMNISTRATE_DEDICATED_TENANCY
                  - description: A Basic product tier
                    modelType: CUSTOMER_HOSTED
                    name: Basic
                    productTierID: pt-12345678
                    tierType: OMNISTRATE_DEDICATED_TENANCY
                  sourceEnvironmentID: se-12345678
                  sourceEnvironmentName: dev
                  type: DEV
                  visibility: private
                - id: se-12345678
                  name: dev
                  promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  saasPortalStatus: READY
                  saasPortalUrl: https://saas-portal.example.com
                  servicePlans:
                  - description: A Basic product tier
                    modelType: CUSTOMER_HOSTED
                    name: Basic
                    productTierID: pt-12345678
                    tierType: OMNISTRATE_DEDICATED_TENANCY
                  - description: A Basic product tier
                    modelType: CUSTOMER_HOSTED
                    name: Basic
                    productTierID: pt-12345678
                    tierType: OMNISTRATE_DEDICATED_TENANCY
                  sourceEnvironmentID: se-12345678
                  sourceEnvironmentName: dev
                  type: DEV
                  visibility: private
                - id: se-12345678
                  name: dev
                  promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  saasPortalStatus: READY
                  saasPortalUrl: https://saas-portal.example.com
                  servicePlans:
                  - description: A Basic product tier
                    modelType: CUSTOMER_HOSTED
                    name: Basic
                    productTierID: pt-12345678
                    tierType: OMNISTRATE_DEDICATED_TENANCY
                  - description: A Basic product tier
                    modelType: CUSTOMER_HOSTED
                    name: Basic
                    productTierID: pt-12345678
                    tierType: OMNISTRATE_DEDICATED_TENANCY
                  sourceEnvironmentID: se-12345678
                  sourceEnvironmentName: dev
                  type: DEV
                  visibility: private
                serviceLogoURL: Quibusdam eaque tenetur commodi odio eligendi quas.
                serviceProviderID: sp-12345678
                serviceProviderName: "Omnistrate, Inc."
              schema:
                $ref: '#/components/schemas/DescribeServiceResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a service"
      security:
      - api_key_header_Authorization: []
      summary: DescribeService service-api
      tags:
      - service-api
    patch:
      operationId: service-api#UpdateService
      parameters:
      - description: The service ID to operate on
        example: s-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service
          example: Sit fuga magni voluptatem.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              name: MySQL multi-writer service
              serviceLogoURL: Non eum placeat omnis.
            schema:
              $ref: '#/components/schemas/UpdateServiceRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a service"
      security:
      - api_key_header_Authorization: []
      summary: UpdateService service-api
      tags:
      - service-api
  /2022-09-01-00/service/{id}/health:
    get:
      operationId: service-api#ServiceHealth
      parameters:
      - description: The ID of the service
        example: s-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service
          example: Cumque odit est sit autem minima.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                health: UP
                id: s-12345678
                report:
                  se-12345678:
                    sm-12345678:
                      vu-11111111: UNKNOWN
                      vu-12345678: UP
                      vu-87654321: DOWN
              schema:
                $ref: '#/components/schemas/ReportHealthResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get service health"
      security:
      - api_key_header_Authorization: []
      summary: ServiceHealth service-api
      tags:
      - service-api
  /2022-09-01-00/service/{serviceId}/compute-config:
    get:
      operationId: compute-config-api#ListComputeConfig
      parameters:
      - allowEmptyValue: true
        description: Is compute config managed by omnistrate
        example: false
        explode: true
        in: query
        name: managed
        required: false
        schema:
          description: Is compute config managed by omnistrate
          example: false
          type: boolean
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Molestiae fugit repudiandae.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - cc-12345678
                - cc-abcdefgh
                - cc-1234efgh
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceEnvironmentsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list compute configs"
      security:
      - api_key_header_Authorization: []
      summary: ListComputeConfig compute-config-api
      tags:
      - compute-config-api
    post:
      operationId: compute-config-api#CreateComputeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Eos amet neque aperiam.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              autoscalingPolicy:
                maxReplicas: 4
                minReplicas: 1
              cpuArchitecture: X86_64|ARM64
              description: my compute config description
              name: my compute config
              replicaCount: "3"
              resources:
                limits:
                  cpu: "1"
                  memory: 500Mi
                requests:
                  cpu: "0.5"
                  memory: 200Mi
              rootVolumeSizeGi: 10
              warmPoolConfiguration:
                minimumNodesInPool: 1
            schema:
              $ref: '#/components/schemas/CreateComputeConfigRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: cc-12345678
              schema:
                description: Compute Config ID created
                example: cc-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create compute\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateComputeConfig compute-config-api
      tags:
      - compute-config-api
  /2022-09-01-00/service/{serviceId}/compute-config/{id}:
    delete:
      operationId: compute-config-api#DeleteComputeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Quis corrupti.
          type: string
        style: simple
      - description: ID of the compute config
        example: cc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Compute Config
          example: Quae quis est est.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a compute\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteComputeConfig compute-config-api
      tags:
      - compute-config-api
    get:
      operationId: compute-config-api#DescribeComputeConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the compute config to describe. If not\
          \ specified, the latest version is described."
        example: Atque magni voluptatem eveniet dolore.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the compute config to describe. If\
            \ not specified, the latest version is described."
          example: Voluptas numquam qui cum nihil asperiores.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the compute config to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Dolorem ut alias omnis voluptatem.
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Et quia hic ut.
          type: string
        style: simple
      - description: ID of the compute config
        example: cc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Compute Config
          example: Quos error quo ad sed.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                autoscalingPolicy:
                  maxReplicas: 4
                  minReplicas: 1
                cpuArchitecture: X86_64|ARM64
                description: my compute config description
                id: cc-12345678
                infraConfigIDs:
                - ic-12345678
                - ic-abcdefgh
                instanceTypes:
                  aws:
                  - t3.micro
                  - t3.small
                  azure:
                  - Standard_B1ls
                  - Standard_B1ms
                  gcp:
                  - $var.instance_type
                name: my compute config
                replicaCount: "3"
                resources:
                  limits:
                    cpu: "1"
                    memory: 500Mi
                  requests:
                    cpu: "0.5"
                    memory: 200Mi
                rootVolumeSizeGi: 10
                serviceId: s-12345678
                warmPoolConfiguration:
                  minimumNodesInPool: 1
              schema:
                $ref: '#/components/schemas/DescribeComputeConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe compute\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeComputeConfig compute-config-api
      tags:
      - compute-config-api
    patch:
      operationId: compute-config-api#UpdateComputeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Velit repellendus modi ut quasi ut.
          type: string
        style: simple
      - description: ID of the compute config
        example: cc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Compute Config
          example: Quasi vel.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              autoscalingPolicy:
                maxReplicas: 4
                minReplicas: 1
              cpuArchitecture: X86_64|ARM64
              description: my compute config description
              name: my compute config
              replicaCount: "3"
              resources:
                limits:
                  cpu: "1"
                  memory: 500Mi
                requests:
                  cpu: "0.5"
                  memory: 200Mi
              rootVolumeSizeGi: 10
              warmPoolConfiguration:
                minimumNodesInPool: 1
            schema:
              $ref: '#/components/schemas/UpdateComputeConfigRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update compute\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateComputeConfig compute-config-api
      tags:
      - compute-config-api
  /2022-09-01-00/service/{serviceId}/compute-config/{id}/instance-type:
    delete:
      operationId: compute-config-api#RemoveComputeInstanceType
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Nulla et placeat.
          type: string
        style: simple
      - description: ID of the compute config
        example: cc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Compute Config
          example: Sed sapiente sunt natus.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              cloudProviderName: aws
              instanceType: t3.micro
            schema:
              $ref: '#/components/schemas/AddComputeInstanceTypeRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to remove compute\
            \ instance type"
      security:
      - api_key_header_Authorization: []
      summary: RemoveComputeInstanceType compute-config-api
      tags:
      - compute-config-api
    post:
      operationId: compute-config-api#AddComputeInstanceType
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Dolorem architecto aut numquam incidunt voluptatem ad.
          type: string
        style: simple
      - description: ID of the compute config
        example: cc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Compute Config
          example: Hic inventore velit.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              cloudProviderName: aws
              instanceType: t3.micro
            schema:
              $ref: '#/components/schemas/AddComputeInstanceTypeRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to add compute instance\
            \ type"
      security:
      - api_key_header_Authorization: []
      summary: AddComputeInstanceType compute-config-api
      tags:
      - compute-config-api
  /2022-09-01-00/service/{serviceId}/compute-config/cloud-provider/{cloudProviderName}/instance-types:
    get:
      operationId: compute-config-api#ListComputeInstanceTypes
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Non molestiae omnis et dolorum voluptas dolor.
          type: string
        style: simple
      - description: The cloud provider for this compute instance type config
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                nextPageToken: next-token
                types:
                - m5.xlarge
                - c5.xlarge
                - r5.xlarge
              schema:
                $ref: '#/components/schemas/ListComputeInstanceTypesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list compute instance\
            \ types"
      security:
      - api_key_header_Authorization: []
      summary: ListComputeInstanceTypes compute-config-api
      tags:
      - compute-config-api
  /2022-09-01-00/service/{serviceId}/environment:
    get:
      operationId: service-environment-api#ListServiceEnvironment
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: In dolore occaecati est voluptas.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - se-12345678
                - se-23456789
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceEnvironmentsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list service environments"
      security:
      - api_key_header_Authorization: []
      summary: ListServiceEnvironment service-environment-api
      tags:
      - service-environment-api
    post:
      operationId: service-environment-api#CreateServiceEnvironment
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Repellendus rerum a laborum dolor qui.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              autoApproveSubscription: false
              deploymentConfigId: dc-12345678
              description: The production environment for the MySQL multi-writer service
              name: Production
              serviceAuthPublicKey: |
                -----BEGIN PUBLIC KEY-----
                MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
                7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
                -----END PUBLIC KEY-----
              sourceEnvironmentId: se-12345678
              type: DEV
              visibility: Et qui.
            schema:
              $ref: '#/components/schemas/CreateServiceEnvironmentRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: se-12345678
              schema:
                description: Service Environment ID created
                example: se-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a service\
            \ environment"
      security:
      - api_key_header_Authorization: []
      summary: CreateServiceEnvironment service-environment-api
      tags:
      - service-environment-api
  /2022-09-01-00/service/{serviceId}/environment/{id}:
    delete:
      operationId: service-environment-api#DeleteServiceEnvironment
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Perferendis ducimus eaque reiciendis eos cumque aut.
          type: string
        style: simple
      - description: The ID of the service environment
        example: se-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Environment
          example: Atque neque ut molestias deserunt debitis.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a service\
            \ environment"
      security:
      - api_key_header_Authorization: []
      summary: DeleteServiceEnvironment service-environment-api
      tags:
      - service-environment-api
    get:
      operationId: service-environment-api#DescribeServiceEnvironment
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Id rerum aut in et exercitationem.
          type: string
        style: simple
      - description: The ID of the service environment
        example: se-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Environment
          example: Distinctio dolorum natus voluptatem pariatur nam est.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                autoApproveSubscription: false
                deploymentConfigId: dc-12345678
                description: The production environment for the MySQL multi-writer
                  service
                id: se-12345678
                key: production
                name: Production
                roleType: admin
                saasPortalStatus: READY
                saasPortalUrl: https://saas-portal.example.com
                serviceAuthPublicKey: |
                  -----BEGIN PUBLIC KEY-----
                  MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
                  7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
                  -----END PUBLIC KEY-----
                serviceId: s-12345678
                sourceEnvironmentId: se-12345678
                type: DEV
                visibility: Non asperiores.
              schema:
                $ref: '#/components/schemas/DescribeServiceEnvironmentResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a service\
            \ environment"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceEnvironment service-environment-api
      tags:
      - service-environment-api
    patch:
      operationId: service-environment-api#UpdateServiceEnvironment
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Sed voluptatem quia qui pariatur.
          type: string
        style: simple
      - description: The ID of the service environment
        example: se-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Environment
          example: Sint tempore tempora non sed dolor rerum.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              autoApproveSubscription: false
              deploymentConfigId: dc-12345678
              description: The production environment for the MySQL multi-writer service
              name: Production
              serviceAuthPublicKey: |
                -----BEGIN PUBLIC KEY-----
                MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
                7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
                -----END PUBLIC KEY-----
              sourceEnvironmentId: se-12345678
              visibility: Dicta culpa.
            schema:
              $ref: '#/components/schemas/UpdateServiceEnvironmentRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a service\
            \ environment"
      security:
      - api_key_header_Authorization: []
      summary: UpdateServiceEnvironment service-environment-api
      tags:
      - service-environment-api
  /2022-09-01-00/service/{serviceId}/environment/{id}/promote:
    get:
      operationId: service-environment-api#PromoteServiceEnvironmentStatus
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Accusamus sed fugiat est asperiores.
          type: string
        style: simple
      - description: The ID of the service environment
        example: se-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Environment
          example: Facere aperiam nisi nam consequatur.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                targetEnvironmentID: se-12345678
              - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                targetEnvironmentID: se-12345678
              schema:
                example:
                - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  targetEnvironmentID: se-12345678
                - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  targetEnvironmentID: se-12345678
                - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  targetEnvironmentID: se-12345678
                - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  targetEnvironmentID: se-12345678
                items:
                  $ref: '#/components/schemas/EnvironmentPromotionStatus'
                type: array
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get the status\
            \ of a service environment promotion"
      security:
      - api_key_header_Authorization: []
      summary: PromoteServiceEnvironmentStatus service-environment-api
      tags:
      - service-environment-api
    post:
      operationId: service-environment-api#PromoteServiceEnvironment
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Sapiente omnis aliquam.
          type: string
        style: simple
      - description: The ID of the service environment
        example: se-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Environment
          example: Porro tempora et architecto minima.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to promote a service\
            \ environment"
      security:
      - api_key_header_Authorization: []
      summary: PromoteServiceEnvironment service-environment-api
      tags:
      - service-environment-api
  /2022-09-01-00/service/{serviceId}/environment/{serviceEnvironmentId}/service-plan:
    get:
      operationId: service-plan-api#ListServicePlans
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Minima id possimus quasi.
          type: string
        style: simple
      - description: Service environment ID
        example: se-12345678
        explode: false
        in: path
        name: serviceEnvironmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: Quo eum inventore qui.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                nextPageToken: next-token
                servicePlans:
                - AutoApproveSubscription: false
                  accountConfigIds:
                  - ac-12345678
                  - ac-23456789
                  activeAccountConfigIds:
                    aws: ac-12345678
                    gcp: ac-23456789
                  apiVersion: v1
                  awsRegions:
                  - us-east-2
                  - ca-central-1
                  deploymentConfigId: dc-12345678
                  gcpRegions:
                  - us-central1
                  hasPendingChanges: true
                  isProductTierDisabled: true
                  latestMajorVersion: "3.0"
                  modelType: CUSTOMER_HOSTED
                  productTierDescription: A premium product tier
                  productTierDocumentation: Any documentation
                  productTierFeatures:
                    BILLING: false
                    LOGS: true
                    METRICS: false
                  productTierId: pt-12345678
                  productTierKey: premium
                  productTierName: Premium
                  productTierPlanDescription: A premium plan
                  productTierPricing:
                    price1: value1
                  productTierSupport: Any support
                  serviceApiDescription: A MySQL SaaS API specializing in multi-writer
                    multi-tenant clusters for high availability
                  serviceApiId: sa-12345678
                  serviceEnvironmentId: se-12345678
                  serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
                    clusters for high availability
                  serviceModelFeatures:
                  - configuration:
                      Facere accusantium ut saepe ipsum.: Asperiores exercitationem
                        accusantium perspiciatis vel qui.
                    feature: Aut illum quia non molestiae aut.
                  - configuration:
                      Facere accusantium ut saepe ipsum.: Asperiores exercitationem
                        accusantium perspiciatis vel qui.
                    feature: Aut illum quia non molestiae aut.
                  - configuration:
                      Facere accusantium ut saepe ipsum.: Asperiores exercitationem
                        accusantium perspiciatis vel qui.
                    feature: Aut illum quia non molestiae aut.
                  serviceModelId: sm-12345678
                  serviceModelName: MySQL multi-writer service hosted model
                  tierType: OMNISTRATE_DEDICATED_TENANCY
                  versionSetStatus: Preferred|Active|Deprecated|Pending
                - AutoApproveSubscription: false
                  accountConfigIds:
                  - ac-12345678
                  - ac-23456789
                  activeAccountConfigIds:
                    aws: ac-12345678
                    gcp: ac-23456789
                  apiVersion: v1
                  awsRegions:
                  - us-east-2
                  - ca-central-1
                  deploymentConfigId: dc-12345678
                  gcpRegions:
                  - us-central1
                  hasPendingChanges: true
                  isProductTierDisabled: true
                  latestMajorVersion: "3.0"
                  modelType: CUSTOMER_HOSTED
                  productTierDescription: A premium product tier
                  productTierDocumentation: Any documentation
                  productTierFeatures:
                    BILLING: false
                    LOGS: true
                    METRICS: false
                  productTierId: pt-12345678
                  productTierKey: premium
                  productTierName: Premium
                  productTierPlanDescription: A premium plan
                  productTierPricing:
                    price1: value1
                  productTierSupport: Any support
                  serviceApiDescription: A MySQL SaaS API specializing in multi-writer
                    multi-tenant clusters for high availability
                  serviceApiId: sa-12345678
                  serviceEnvironmentId: se-12345678
                  serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
                    clusters for high availability
                  serviceModelFeatures:
                  - configuration:
                      Facere accusantium ut saepe ipsum.: Asperiores exercitationem
                        accusantium perspiciatis vel qui.
                    feature: Aut illum quia non molestiae aut.
                  - configuration:
                      Facere accusantium ut saepe ipsum.: Asperiores exercitationem
                        accusantium perspiciatis vel qui.
                    feature: Aut illum quia non molestiae aut.
                  - configuration:
                      Facere accusantium ut saepe ipsum.: Asperiores exercitationem
                        accusantium perspiciatis vel qui.
                    feature: Aut illum quia non molestiae aut.
                  serviceModelId: sm-12345678
                  serviceModelName: MySQL multi-writer service hosted model
                  tierType: OMNISTRATE_DEDICATED_TENANCY
                  versionSetStatus: Preferred|Active|Deprecated|Pending
                - AutoApproveSubscription: false
                  accountConfigIds:
                  - ac-12345678
                  - ac-23456789
                  activeAccountConfigIds:
                    aws: ac-12345678
                    gcp: ac-23456789
                  apiVersion: v1
                  awsRegions:
                  - us-east-2
                  - ca-central-1
                  deploymentConfigId: dc-12345678
                  gcpRegions:
                  - us-central1
                  hasPendingChanges: true
                  isProductTierDisabled: true
                  latestMajorVersion: "3.0"
                  modelType: CUSTOMER_HOSTED
                  productTierDescription: A premium product tier
                  productTierDocumentation: Any documentation
                  productTierFeatures:
                    BILLING: false
                    LOGS: true
                    METRICS: false
                  productTierId: pt-12345678
                  productTierKey: premium
                  productTierName: Premium
                  productTierPlanDescription: A premium plan
                  productTierPricing:
                    price1: value1
                  productTierSupport: Any support
                  serviceApiDescription: A MySQL SaaS API specializing in multi-writer
                    multi-tenant clusters for high availability
                  serviceApiId: sa-12345678
                  serviceEnvironmentId: se-12345678
                  serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
                    clusters for high availability
                  serviceModelFeatures:
                  - configuration:
                      Facere accusantium ut saepe ipsum.: Asperiores exercitationem
                        accusantium perspiciatis vel qui.
                    feature: Aut illum quia non molestiae aut.
                  - configuration:
                      Facere accusantium ut saepe ipsum.: Asperiores exercitationem
                        accusantium perspiciatis vel qui.
                    feature: Aut illum quia non molestiae aut.
                  - configuration:
                      Facere accusantium ut saepe ipsum.: Asperiores exercitationem
                        accusantium perspiciatis vel qui.
                    feature: Aut illum quia non molestiae aut.
                  serviceModelId: sm-12345678
                  serviceModelName: MySQL multi-writer service hosted model
                  tierType: OMNISTRATE_DEDICATED_TENANCY
                  versionSetStatus: Preferred|Active|Deprecated|Pending
              schema:
                $ref: '#/components/schemas/ListServicePlansResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list product tiers"
      security:
      - api_key_header_Authorization: []
      summary: ListServicePlans service-plan-api
      tags:
      - service-plan-api
  /2022-09-01-00/service/{serviceId}/image-config:
    post:
      operationId: image-config-api#CreateImageConfig
      parameters:
      - description: The service ID to use for the infra
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Quisquam suscipit aut enim.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              customImageCommandsAndArgs:
                args:
                - -d
                - mysql
                commands:
                - echo
                - "Hello, World!"
              description: A image configuration for my new entity
              imageName: mysql
              imageRegistryId: ir-12345678
              imageSignaturePublicKeyPEM: |
                -----BEGIN PUBLIC KEY-----
                MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
                7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
                -----END PUBLIC KEY-----
              imageTag: latest
              serviceEnvironmentId: se-12345678
            schema:
              $ref: '#/components/schemas/CreateImageConfigRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: imgc-12345678
              schema:
                description: Image Config ID created
                example: imgc-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create the image\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateImageConfig image-config-api
      tags:
      - image-config-api
  /2022-09-01-00/service/{serviceId}/image-config/{id}:
    delete:
      operationId: image-config-api#DeleteImageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Non in et.
          type: string
        style: simple
      - description: The image configuration ID
        example: imgc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Config
          example: Voluptate velit cupiditate laboriosam hic voluptates.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete the image\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteImageConfig image-config-api
      tags:
      - image-config-api
    get:
      operationId: image-config-api#DescribeImageConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the image config to describe. If not\
          \ specified, the latest version is described."
        example: In placeat.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the image config to describe. If not\
            \ specified, the latest version is described."
          example: Excepturi ipsa voluptas porro temporibus.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the image config to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Vel ut quam ullam fuga sit magni.
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Cum ducimus voluptas neque officia.
          type: string
        style: simple
      - description: The image configuration ID
        example: imgc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Config
          example: Repellendus ea iure pariatur.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                customImageCommandsAndArgs:
                  args:
                  - -d
                  - mysql
                  commands:
                  - echo
                  - "Hello, World!"
                description: An image configuration for my new entity
                id: imgc-12345678
                imageName: mysql
                imageRegistryId: ir-12345678
                imageSignaturePublicKeyPEM: |
                  -----BEGIN PUBLIC KEY-----
                  MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
                  7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
                  -----END PUBLIC KEY-----
                imageTag: v1
                serviceEnvironmentId: se-12345678
                serviceId: s-12345678
              schema:
                $ref: '#/components/schemas/DescribeImageConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe the image\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeImageConfig image-config-api
      tags:
      - image-config-api
    patch:
      operationId: image-config-api#UpdateImageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Dolorem rerum.
          type: string
        style: simple
      - description: The image configuration ID
        example: imgc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Config
          example: Voluptatem omnis praesentium sunt qui voluptate nihil.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              customImageCommandsAndArgs:
                args:
                - -d
                - mysql
                commands:
                - echo
                - "Hello, World!"
              description: An image configuration for my new entity
              imageName: mysql
              imageRegistryId: ir-12345678
              imageSignaturePublicKeyPEM: |
                -----BEGIN PUBLIC KEY-----
                MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
                7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
                -----END PUBLIC KEY-----
              imageTag: v1
            schema:
              $ref: '#/components/schemas/UpdateImageConfigRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update the image\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateImageConfig image-config-api
      tags:
      - image-config-api
  /2022-09-01-00/service/{serviceId}/image-config/{id}/release:
    post:
      operationId: image-config-api#ReleaseImageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Quam facere quia eaque sunt sed.
          type: string
        style: simple
      - description: The image configuration ID
        example: imgc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Config
          example: Praesentium sint veritatis corporis impedit.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              productTierId: pt-12345678
            schema:
              $ref: '#/components/schemas/ReleaseInfraConfigRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to release the image\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: ReleaseImageConfig image-config-api
      tags:
      - image-config-api
  /2022-09-01-00/service/{serviceId}/image-config/{id}/rollout:
    get:
      operationId: image-config-api#RolloutFleetImageStatus
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Numquam nulla cumque qui quaerat quia itaque.
          type: string
        style: simple
      - description: The image configuration ID
        example: imgc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Config
          example: Earum ut molestiae maxime qui dignissimos dolore.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                status: IN_PROGRESS
              schema:
                $ref: '#/components/schemas/OmnistrateServiceHealthResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get the fleet\
            \ image rollout status"
      security:
      - api_key_header_Authorization: []
      summary: RolloutFleetImageStatus image-config-api
      tags:
      - image-config-api
    post:
      operationId: image-config-api#RolloutFleetImageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Error ut et quas.
          type: string
        style: simple
      - description: The image configuration ID
        example: imgc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Config
          example: Nemo aut et perferendis.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to rollout to the\
            \ fleet"
      security:
      - api_key_header_Authorization: []
      summary: RolloutFleetImageConfig image-config-api
      tags:
      - image-config-api
  /2022-09-01-00/service/{serviceId}/infra-config:
    post:
      operationId: infra-config-api#CreateInfraConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Quaerat harum totam omnis.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              computeConfigId: cc-12345678
              customTag:
                key: customKey
                value: customValue
              description: Infra config used for the base tier MySQL service
              name: MySQL Writer Infra Config
              networkConfigId: nc-12345678
              serviceEnvironmentId: se-12345678
              storageConfigId: sc-12345678
            schema:
              $ref: '#/components/schemas/CreateInfraConfigRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: ic-12345678
              schema:
                description: Infra Config ID created
                example: ic-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create an infra\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateInfraConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}:
    delete:
      operationId: infra-config-api#DeleteInfraConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Et quod libero impedit aspernatur possimus.
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Velit nihil ut pariatur non aut.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete an infra\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteInfraConfig infra-config-api
      tags:
      - infra-config-api
    get:
      operationId: infra-config-api#DescribeInfraConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the infra config to describe. If not\
          \ specified, the latest version is described."
        example: Perferendis soluta qui alias ipsa quia.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the infra config to describe. If not\
            \ specified, the latest version is described."
          example: Dignissimos non consectetur odit repellat rerum.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the infra config to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Non non beatae eos omnis.
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: In ut id ut soluta.
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Commodi sunt accusantium et voluptatum dolore.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                computeConfigId: cc-12345678
                customTag:
                  key: customKey
                  value: customValue
                description: Infra config used for the base tier MySQL service
                id: ic-12345678
                name: MySQL Writer Infra Config
                networkConfigId: nc-12345678
                serviceEnvironmentId: se-12345678
                serviceId: s-12345678
                storageConfigId: sc-12345678
              schema:
                $ref: '#/components/schemas/DescribeInfraConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an infra\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeInfraConfig infra-config-api
      tags:
      - infra-config-api
    patch:
      operationId: infra-config-api#UpdateInfraConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Fuga amet eos voluptas nemo incidunt quasi.
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Nihil quam autem dolore ut vel quia.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              computeConfigId: cc-12345678
              customTag:
                key: customKey
                value: customValue
              description: Infra config used for the base tier MySQL service
              name: MySQL Writer Infra Config
              networkConfigId: nc-12345678
              storageConfigId: sc-12345678
            schema:
              $ref: '#/components/schemas/UpdateInfraConfigRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update an infra\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateInfraConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/associated-resources:
    get:
      operationId: infra-config-api#ListAssociatedResources
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Veniam incidunt molestiae suscipit nostrum.
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Dolor minima necessitatibus iste.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: ic-12345678
                resourceIds:
                - r-12345678
                - r-abcdefgh
                serviceId: s-12345678
              schema:
                $ref: '#/components/schemas/ListAssociatedResourcesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list associated\
            \ resources"
      security:
      - api_key_header_Authorization: []
      summary: ListAssociatedResources infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/compute-config:
    delete:
      operationId: infra-config-api#DetachComputeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Et necessitatibus maiores ut temporibus dicta quidem.
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Consectetur error at quo.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to detach a compute\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DetachComputeConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/network-config:
    delete:
      operationId: infra-config-api#DetachNetworkConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Odit voluptatem qui enim expedita quam.
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Ut delectus et ut.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to detach a network\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DetachNetworkConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/release:
    post:
      operationId: infra-config-api#ReleaseInfraConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Est eum animi quos.
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Dicta rerum dicta et.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              productTierId: pt-12345678
            schema:
              $ref: '#/components/schemas/ReleaseInfraConfigRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to release an infra\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: ReleaseInfraConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/rollout:
    post:
      operationId: infra-config-api#RolloutFleetInfra
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Quia omnis cupiditate odio quam dolorem sed.
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Ullam iste voluptas.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to rollout to the\
            \ fleet"
      security:
      - api_key_header_Authorization: []
      summary: RolloutFleetInfra infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/rollout/status:
    get:
      operationId: infra-config-api#RolloutFleetInfraStatus
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Quisquam non similique.
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Harum dolorem totam alias possimus perferendis nihil.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                status: IN_PROGRESS
              schema:
                $ref: '#/components/schemas/OmnistrateServiceHealthResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get the fleet\
            \ rollout infra status"
      security:
      - api_key_header_Authorization: []
      summary: RolloutFleetInfraStatus infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/storage-config:
    delete:
      operationId: infra-config-api#DetachStorageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Fuga et.
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Beatae voluptas.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to detach a storage\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DetachStorageConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/input-parameter:
    post:
      operationId: input-parameter-api#CreateInputParameter
      parameters:
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Placeat qui molestias quia itaque nulla temporibus.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              defaultValue: default value
              dependentResourceId: r-12345678
              description: Qui quia eum itaque nesciunt sit.
              hasOptions: true
              isList: true
              key: 24x
              labeledOptions:
                large: t3.xlarge
                medium: t3.large
                small: t3.medium
              limits:
                max: Quis aut.
                maxLength: Similique quia aliquid.
                min: Ipsum tempore quis et facilis velit.
                minLength: Aut molestiae possimus ex consequuntur odio.
              modifiable: true
              name: g
              options:
              - a
              - b
              - c
              - default value
              required: false
              resourceId: r-12345678
              type: Voluptas voluptates.
            schema:
              $ref: '#/components/schemas/CreateInputParameterRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: ip-12345678
              schema:
                description: Input Parameter ID created
                example: ip-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create an input\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: CreateInputParameter input-parameter-api
      tags:
      - input-parameter-api
  /2022-09-01-00/service/{serviceId}/input-parameter/{id}:
    delete:
      operationId: input-parameter-api#DeleteInputParameter
      parameters:
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Doloremque in accusantium quasi ut.
          type: string
        style: simple
      - description: ID of the input parameter
        example: var-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Input Parameter
          example: Possimus autem nihil sit ea porro.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete an input\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: DeleteInputParameter input-parameter-api
      tags:
      - input-parameter-api
    get:
      operationId: input-parameter-api#DescribeInputParameter
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the instance to describe. If not specified,\
          \ the latest version is described."
        example: Et dolorum.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the instance to describe. If not specified,\
            \ the latest version is described."
          example: Deserunt ut et ut illum.
          type: string
        style: form
      - allowEmptyValue: true
        description: Product tier id of the instance to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Earum illum recusandae mollitia tenetur id ut.
          type: string
        style: form
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Nemo optio possimus omnis.
          type: string
        style: simple
      - description: ID of the input parameter
        example: var-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Input Parameter
          example: Et similique quas ad.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                defaultValue: "true"
                dependentResourceId: r-12345678
                description: Odit placeat distinctio et consequatur.
                hasOptions: true
                id: var-12345678
                isList: false
                key: y1
                labeledOptions:
                  large: t3.xlarge
                  medium: t3.large
                  small: t3.medium
                limits:
                  max: Debitis ea aspernatur aut blanditiis aperiam eum.
                  maxLength: Et dolor modi.
                  min: Expedita eos unde minima quia.
                  minLength: Ab omnis illum.
                modifiable: true
                name: u0
                options:
                - "true"
                - "false"
                required: false
                resourceId: r-12345678
                serviceId: s-12345678
                type: Omnis sed ab id provident.
              schema:
                $ref: '#/components/schemas/DescribeInputParameterResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an input\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: DescribeInputParameter input-parameter-api
      tags:
      - input-parameter-api
    patch:
      operationId: input-parameter-api#UpdateInputParameter
      parameters:
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Occaecati quia quia culpa.
          type: string
        style: simple
      - description: ID of the input parameter
        example: var-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Input Parameter
          example: Dicta harum.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              defaultValue: "[\"1\", \"2.8\", \"3\"]"
              description: Et quasi ut nostrum saepe.
              hasOptions: false
              labeledOptions:
                large: t3.xlarge
                medium: t3.large
                small: t3.medium
              limits:
                max: Quis aut.
                maxLength: Similique quia aliquid.
                min: Ipsum tempore quis et facilis velit.
                minLength: Aut molestiae possimus ex consequuntur odio.
              modifiable: false
              name: ih
              options:
              - "[\"1\", \"2.8\", \"3\"]"
              - "[\"3.4\", \"4.5\"]"
              required: true
            schema:
              $ref: '#/components/schemas/UpdateInputParameterRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update an input\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: UpdateInputParameter input-parameter-api
      tags:
      - input-parameter-api
  /2022-09-01-00/service/{serviceId}/model:
    post:
      operationId: service-model-api#CreateServiceModel
      parameters:
      - description: The service this model is for
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Vero eos.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              accountConfigIds:
              - ac-12345678
              - ac-23456789
              description: A MySQL Hosted SaaS specializing in multi-writer clusters
                for high availability
              features:
              - configuration:
                  Modi nam minima voluptatibus error.: Accusantium aut.
                feature: Ut ut non impedit optio eum velit.
              - configuration:
                  Modi nam minima voluptatibus error.: Accusantium aut.
                feature: Ut ut non impedit optio eum velit.
              - configuration:
                  Modi nam minima voluptatibus error.: Accusantium aut.
                feature: Ut ut non impedit optio eum velit.
              modelType: CUSTOMER_HOSTED
              name: MySQL multi-writer service hosted model
              serviceApiId: sa-12345678
            schema:
              $ref: '#/components/schemas/CreateServiceModelRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: sm-12345678
              schema:
                description: Service Model ID created
                example: sm-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a service\
            \ model"
      security:
      - api_key_header_Authorization: []
      summary: CreateServiceModel service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/model/{id}:
    delete:
      operationId: service-model-api#DeleteServiceModel
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Aut distinctio nihil culpa.
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Architecto occaecati ullam.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a service\
            \ model"
      security:
      - api_key_header_Authorization: []
      summary: DeleteServiceModel service-model-api
      tags:
      - service-model-api
    get:
      operationId: service-model-api#DescribeServiceModel
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Quis deleniti consequuntur numquam.
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Ut delectus qui.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                accountConfigIds:
                - ac-12345678
                - ac-23456789
                activeAccountConfigIds:
                  aws: ac-12345678
                  gcp: ac-23456789
                description: A MySQL Hosted SaaS specializing in multi-writer clusters
                  for high availability
                features:
                - configuration:
                    Facere accusantium ut saepe ipsum.: Asperiores exercitationem
                      accusantium perspiciatis vel qui.
                  feature: Aut illum quia non molestiae aut.
                - configuration:
                    Facere accusantium ut saepe ipsum.: Asperiores exercitationem
                      accusantium perspiciatis vel qui.
                  feature: Aut illum quia non molestiae aut.
                id: sm-12345678
                key: mysql-multi-writer-service-hosted-model
                modelType: CUSTOMER_HOSTED
                name: MySQL multi-writer service hosted model
                productTiers:
                - pt-12345678
                - pt-87654321
                serviceApiId: sa-12345678
                serviceId: s-12345678
              schema:
                $ref: '#/components/schemas/DescribeServiceModelResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a service\
            \ model"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceModel service-model-api
      tags:
      - service-model-api
    patch:
      operationId: service-model-api#UpdateServiceModel
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Molestiae numquam eius consectetur et ad commodi.
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Eligendi inventore ea tenetur cum.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL Hosted SaaS specializing in multi-writer clusters
                for high availability
              name: MySQL multi-writer service hosted model
            schema:
              $ref: '#/components/schemas/UpdateServiceModelRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a service\
            \ model"
      security:
      - api_key_header_Authorization: []
      summary: UpdateServiceModel service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/model/{id}/account-config:
    delete:
      operationId: service-model-api#RemoveAccountConfigFromServiceModel
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Quo reiciendis sed.
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Perferendis alias architecto ut quis quis iure.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              accountConfigId: ac-12345678
            schema:
              $ref: '#/components/schemas/AddAccountConfigToServiceModelRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to remove an account\
            \ config from a service model"
      security:
      - api_key_header_Authorization: []
      summary: RemoveAccountConfigFromServiceModel service-model-api
      tags:
      - service-model-api
    post:
      operationId: service-model-api#AddAccountConfigToServiceModel
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Provident velit eum.
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Qui eum.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              accountConfigId: ac-12345678
            schema:
              $ref: '#/components/schemas/AddAccountConfigToServiceModelRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to add an account\
            \ config to a service model"
      security:
      - api_key_header_Authorization: []
      summary: AddAccountConfigToServiceModel service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/model/{id}/account-config/{accountConfigId}/active:
    post:
      operationId: service-model-api#SetActiveAccountConfig
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Et harum aspernatur incidunt perferendis consequatur.
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Velit cum explicabo odio nihil libero similique.
          type: string
        style: simple
      - description: The infrastructure account configuration ID
        example: ac-12345678
        explode: false
        in: path
        name: accountConfigId
        required: true
        schema:
          description: ID of an Account Config
          example: Rerum voluptas assumenda facere cumque rem neque.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to set the active\
            \ account config"
      security:
      - api_key_header_Authorization: []
      summary: SetActiveAccountConfig service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/model/{id}/feature:
    delete:
      operationId: service-model-api#DisableServiceModelFeature
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Sed quia in fuga laborum alias.
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Nostrum inventore.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              feature: Est dolores odit magni et mollitia quibusdam.
            schema:
              $ref: '#/components/schemas/DisableServiceModelFeatureRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when the service model feature\
            \ could not be disabled"
      security:
      - api_key_header_Authorization: []
      summary: DisableServiceModelFeature service-model-api
      tags:
      - service-model-api
    put:
      operationId: service-model-api#EnableServiceModelFeature
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Beatae atque tenetur voluptatem.
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Blanditiis qui quis doloribus.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              configuration:
                Vero ea expedita exercitationem.: Expedita voluptatibus.
              feature: Et quo blanditiis deserunt sed.
            schema:
              $ref: '#/components/schemas/ServiceModelFeatureDetail'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when the service model feature\
            \ could not be enabled"
      security:
      - api_key_header_Authorization: []
      summary: EnableServiceModelFeature service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/model/{id}/release:
    get:
      operationId: service-model-api#ReleaseServiceModelStatus
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Et dolorum odit eum et earum pariatur.
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Vero possimus fuga qui sed voluptatem et.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                status: READY
              schema:
                $ref: '#/components/schemas/OmnistrateServiceHealthResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to release a service\
            \ model status"
      security:
      - api_key_header_Authorization: []
      summary: ReleaseServiceModelStatus service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/model/{serviceModelId}/product-tier:
    get:
      operationId: product-tier-api#ListProductTier
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Amet distinctio omnis.
          type: string
        style: simple
      - description: Service model ID
        example: sm-12345678
        explode: false
        in: path
        name: serviceModelId
        required: true
        schema:
          description: ID of a Service Model
          example: Magnam sit sapiente dignissimos debitis cumque et.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - Officiis qui totam id adipisci ducimus dicta.
                - Sit expedita qui earum qui accusamus.
                - Error dolorem qui.
                - Aliquam voluptas voluptas facere dignissimos quae assumenda.
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceEnvironmentsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list product tiers"
      security:
      - api_key_header_Authorization: []
      summary: ListProductTier product-tier-api
      tags:
      - product-tier-api
  /2022-09-01-00/service/{serviceId}/model/{serviceModelId}/vunit:
    get:
      operationId: vunit-api#ListVUnits
      parameters:
      - description: Service ID for the VUnit
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Placeat maxime asperiores molestias error.
          type: string
        style: simple
      - description: Service Model ID for the VUnit
        example: sm-12345678
        explode: false
        in: path
        name: serviceModelId
        required: true
        schema:
          description: ID of a Service Model
          example: Consequatur vel fugiat eveniet.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              cloudProvider: aws
              region: us-west-2
            schema:
              $ref: '#/components/schemas/ListVUnitsRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                  aws:
                  - vu-12345678
                  - vu-abcdefgh
                  gcp:
                  - vu-1234efgh
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListVUnitsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list vunits"
      security:
      - api_key_header_Authorization: []
      summary: ListVUnits vunit-api
      tags:
      - vunit-api
  /2022-09-01-00/service/{serviceId}/model/copy/{sourceId}:
    post:
      operationId: service-model-api#CopyServiceModel
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Saepe officiis deleniti unde id commodi et.
          type: string
        style: simple
      - description: The source service model ID
        example: sm-12345678
        explode: false
        in: path
        name: sourceId
        required: true
        schema:
          description: ID of a Service Model
          example: Molestiae autem.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              accountConfigIds:
              - ac-12345678
              - ac-23456789
              description: A MySQL Hosted SaaS specializing in multi-writer clusters
                for high availability
              features:
              - configuration:
                  Modi nam minima voluptatibus error.: Accusantium aut.
                feature: Ut ut non impedit optio eum velit.
              - configuration:
                  Modi nam minima voluptatibus error.: Accusantium aut.
                feature: Ut ut non impedit optio eum velit.
              name: MySQL multi-writer service hosted model
              targetServiceModelType: CUSTOMER_HOSTED
              targetTierType: OMNISTRATE_DEDICATED_TENANCY
            schema:
              $ref: '#/components/schemas/CopyServiceModelRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: sm-12345678
              schema:
                description: New Service Model ID
                example: sm-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to copy a service\
            \ model"
      security:
      - api_key_header_Authorization: []
      summary: CopyServiceModel service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/network-config:
    get:
      operationId: network-config-api#ListNetworkConfig
      parameters:
      - allowEmptyValue: true
        description: Is network config managed by omnistrate
        example: false
        explode: true
        in: query
        name: managed
        required: false
        schema:
          description: Is network config managed by omnistrate
          example: false
          type: boolean
        style: form
      - description: The service ID to list network configs for
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Aliquid nostrum ipsa.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - Voluptatem non quod numquam consequuntur ut.
                - Impedit non harum id.
                - Fugiat quaerat eaque est itaque maxime.
                nextPageToken: token
              schema:
                $ref: '#/components/schemas/ListServiceEnvironmentsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list network configs"
      security:
      - api_key_header_Authorization: []
      summary: ListNetworkConfig network-config-api
      tags:
      - network-config-api
    post:
      operationId: network-config-api#CreateNetworkConfig
      parameters:
      - description: The ID of the service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Consectetur eum dolor.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A multi-zone HA network config
              endpointPerReplica: true
              internal: true
              name: Multi-zone
              openPorts:
              - 1299
              - 3306
              privateNetworkingConfiguration:
                privateLinkConfiguration:
                  awsPrivateLinkConfigurations:
                  - port: 80
                    targetGroupName: my-target-group
                  - port: 80
                    targetGroupName: my-target-group
                  - port: 80
                    targetGroupName: my-target-group
                  - port: 80
                    targetGroupName: my-target-group
              publicNetworkingConfiguration:
                enableClusterLoadBalancer: true
                enableNodeLoadBalancer: true
              stableEgressIP: true
              tlsTerminationPort: 443
              zoneConfiguration: Blanditiis corrupti.
            schema:
              $ref: '#/components/schemas/CreateNetworkConfigRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: nc-12345678
              schema:
                description: Network Config ID created
                example: nc-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create network\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateNetworkConfig network-config-api
      tags:
      - network-config-api
  /2022-09-01-00/service/{serviceId}/network-config/{id}:
    delete:
      operationId: network-config-api#DeleteNetworkConfig
      parameters:
      - description: The ID of the service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Impedit dignissimos excepturi commodi natus eligendi et.
          type: string
        style: simple
      - description: The ID of the network config
        example: nc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Network Config
          example: Quia molestiae.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a network\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteNetworkConfig network-config-api
      tags:
      - network-config-api
    get:
      operationId: network-config-api#DescribeNetworkConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the network config to describe. If not\
          \ specified, the latest version is described."
        example: Reiciendis quas delectus earum.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the network config to describe. If\
            \ not specified, the latest version is described."
          example: Commodi aut omnis sit facilis debitis temporibus.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the network config to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Voluptatibus et aut.
          type: string
        style: form
      - description: The ID of the service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Quo ipsam fugit perferendis commodi molestiae.
          type: string
        style: simple
      - description: The ID of the network config
        example: nc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Network Config
          example: Voluptatum soluta inventore voluptas ipsam et ea.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: A multi-zone HA network config
                endpointPerReplica: true
                id: nc-12345678
                infraConfigIDs:
                - ic-12345678
                - ic-abcdefgh
                internal: true
                name: Multi-zone
                openPorts:
                - 1299
                - 3306
                privateNetworkingConfiguration:
                  privateLinkConfiguration:
                    awsPrivateLinkConfigurations:
                    - port: 80
                      targetGroupName: my-target-group
                    - port: 80
                      targetGroupName: my-target-group
                    - port: 80
                      targetGroupName: my-target-group
                publicNetworkingConfiguration:
                  enableClusterLoadBalancer: true
                  enableNodeLoadBalancer: true
                serviceId: s-12345678
                stableEgressIP: true
                tlsTerminationPort: 443
                zoneConfiguration: Consequatur ut explicabo qui.
              schema:
                $ref: '#/components/schemas/DescribeNetworkConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe network\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeNetworkConfig network-config-api
      tags:
      - network-config-api
    patch:
      operationId: network-config-api#UpdateNetworkConfig
      parameters:
      - description: The ID of the service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Nostrum voluptatem eveniet officia.
          type: string
        style: simple
      - description: The ID of the network config
        example: nc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Network Config
          example: Sit ullam.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A multi-zone HA network config
              endpointPerReplica: true
              internal: true
              name: Multi-zone
              openPorts:
              - 1299
              - 3306
              privateNetworkingConfiguration:
                privateLinkConfiguration:
                  awsPrivateLinkConfigurations:
                  - port: 80
                    targetGroupName: my-target-group
                  - port: 80
                    targetGroupName: my-target-group
                  - port: 80
                    targetGroupName: my-target-group
                  - port: 80
                    targetGroupName: my-target-group
              publicNetworkingConfiguration:
                enableClusterLoadBalancer: true
                enableNodeLoadBalancer: true
              stableEgressIP: true
              tlsTerminationPort: 443
              zoneConfiguration: Et totam.
            schema:
              $ref: '#/components/schemas/UpdateNetworkConfigRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update network\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateNetworkConfig network-config-api
      tags:
      - network-config-api
  /2022-09-01-00/service/{serviceId}/network/{id}:
    get:
      operationId: vunit-api#DescribeNetwork
      parameters:
      - description: Service ID context
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Itaque laboriosam rem unde.
          type: string
        style: simple
      - description: Network to operate on
        example: n-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Network
          example: Nihil aspernatur nam voluptas aut asperiores.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cidr: 10.0.0.0/16
                id: n-12345678
                networkConfigId: nc-12345678
                serviceId: s-12345678
                type: PUBLIC
                vunitId: vu-12345678
              schema:
                $ref: '#/components/schemas/DescribeNetworkResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a network"
      security:
      - api_key_header_Authorization: []
      summary: DescribeNetwork vunit-api
      tags:
      - vunit-api
  /2022-09-01-00/service/{serviceId}/output-parameter:
    post:
      operationId: output-parameter-api#CreateOutputParameter
      parameters:
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Voluptas voluptas impedit.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: Username of the user created in the target system
              key: username
              name: Username
              resourceId: r-12345678
              value: johndoe
              valueRef: $var.username
              valueType: Quas vero maxime nihil iure esse.
            schema:
              $ref: '#/components/schemas/CreateOutputParameterRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: op-12345678
              schema:
                description: Output Parameter ID created
                example: op-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create an output\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: CreateOutputParameter output-parameter-api
      tags:
      - output-parameter-api
  /2022-09-01-00/service/{serviceId}/output-parameter/{id}:
    delete:
      operationId: output-parameter-api#DeleteOutputParameter
      parameters:
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Nam quasi vero non non.
          type: string
        style: simple
      - description: The ID of the output parameter
        example: op-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Output Parameter
          example: Quaerat sint saepe quo natus quo similique.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete an output\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: DeleteOutputParameter output-parameter-api
      tags:
      - output-parameter-api
    get:
      operationId: output-parameter-api#DescribeOutputParameter
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the resource to describe. If not specified,\
          \ the latest version is described."
        example: Aut sed aliquam veritatis.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the resource to describe. If not specified,\
            \ the latest version is described."
          example: Quia sint.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the resource to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Corporis dolorum.
          type: string
        style: form
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Aspernatur illo et quia veritatis.
          type: string
        style: simple
      - description: The ID of the output parameter
        example: op-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Output Parameter
          example: Sint in eos fuga.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: Username of the user created in the target system
                id: op-12345678
                key: username
                name: Username
                resourceId: r-12345678
                serviceId: s-12345678
                value: johndoe
                valueRef: $var.username
                valueType: Et rem praesentium quae sit impedit.
              schema:
                $ref: '#/components/schemas/DescribeOutputParameterResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an output\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: DescribeOutputParameter output-parameter-api
      tags:
      - output-parameter-api
    patch:
      operationId: output-parameter-api#UpdateOutputParameter
      parameters:
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Rem placeat eos est dolorum et ad.
          type: string
        style: simple
      - description: The ID of the output parameter
        example: op-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Output Parameter
          example: Sapiente esse.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: Username of the user created in the target system
              name: Username
              value: johndoe
              valueRef: $var.username
              valueType: Velit voluptas.
            schema:
              $ref: '#/components/schemas/UpdateOutputParameterRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update an output\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: UpdateOutputParameter output-parameter-api
      tags:
      - output-parameter-api
  /2022-09-01-00/service/{serviceId}/product-tier:
    post:
      operationId: product-tier-api#CreateProductTier
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Reiciendis eveniet rerum.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              autoApproveSubscription: false
              awsRegions:
              - us-east-2
              - ca-central-1
              description: A premium product tier
              documentation: Any documentation
              gcpRegions:
              - us-central1
              isDisabled: false
              name: Premium
              planDescription: A premium plan
              pricing:
                price1: value1
              serviceModelId: sm-12345678
              support: Any support
              tierType: OMNISTRATE_DEDICATED_TENANCY
            schema:
              $ref: '#/components/schemas/CreateProductTierRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: pt-12345678
              schema:
                description: Product Tier ID created
                example: pt-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a product\
            \ tier"
      security:
      - api_key_header_Authorization: []
      summary: CreateProductTier product-tier-api
      tags:
      - product-tier-api
  /2022-09-01-00/service/{serviceId}/product-tier/{id}:
    delete:
      operationId: product-tier-api#DeleteProductTier
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Voluptas ex consequatur.
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier
          example: Maiores quis ut quidem dolor.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a product\
            \ tier"
      security:
      - api_key_header_Authorization: []
      summary: DeleteProductTier product-tier-api
      tags:
      - product-tier-api
    get:
      operationId: product-tier-api#DescribeProductTier
      parameters:
      - allowEmptyValue: true
        description: The version number for the specific version set
        example: "3.0"
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: The version number for the specific version set
          example: "3.0"
          type: string
        style: form
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Cum facere.
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier
          example: Sed magni sit.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                apiGroups:
                  r-12345678: v1
                  r-23456789: v2
                  r-34567890: v3
                autoApproveSubscription: false
                awsRegions:
                - us-east-2
                - ca-central-1
                cloudProvidersConfigReadiness:
                  aws:
                    resourceA: missing terraform configuration
                    resourceB: missing cloudformation configuration
                description: A premium product tier
                documentation: Any documentation
                enabledFeatures:
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                features:
                  BILLING: false
                  LOGS: true
                  METRICS: false
                gcpRegions:
                - us-central1
                id: pt-12345678
                isDisabled: false
                key: premium
                name: Premium
                planDescription: A premium plan
                pricing:
                  price1: value1
                serviceId: s-12345678
                serviceModelId: sm-12345678
                support: Any support
                tierType: OMNISTRATE_DEDICATED_TENANCY
              schema:
                $ref: '#/components/schemas/DescribeProductTierResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a product\
            \ tier"
      security:
      - api_key_header_Authorization: []
      summary: DescribeProductTier product-tier-api
      tags:
      - product-tier-api
    patch:
      operationId: product-tier-api#UpdateProductTier
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Voluptatem consectetur et aut sequi.
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier
          example: Quas aspernatur.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              autoApproveSubscription: false
              awsRegions:
              - us-east-2
              - ca-central-1
              description: A premium product tier
              documentation: Any documentation
              gcpRegions:
              - us-central1
              isDisabled: false
              name: Premium
              planDescription: A premium plan
              pricing:
                price1: value1
              support: Any support
              tierType: OMNISTRATE_DEDICATED_TENANCY
            schema:
              $ref: '#/components/schemas/UpdateProductTierRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a product\
            \ tier"
      security:
      - api_key_header_Authorization: []
      summary: UpdateProductTier product-tier-api
      tags:
      - product-tier-api
  /2022-09-01-00/service/{serviceId}/product-tier/{id}/billing-plan:
    get:
      operationId: product-tier-api#ListProductTierBillingPlan
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Exercitationem quis.
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier
          example: Voluptates omnis autem perferendis.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                billingPlans:
                - allowCreatesWhenPaymentNotConfigured: true
                  id: bp-12345678
                  maxNumberofInstances: 5
                  planName: STARTER
                  pricing:
                    cpuCoreHours: "0.001"
                    memoryGiBHours: "0.0001"
                    storageGiBHours: "0.0001"
                  productTierId: pt-12345678
                  serviceId: s-12345678
                - allowCreatesWhenPaymentNotConfigured: true
                  id: bp-12345678
                  maxNumberofInstances: 5
                  planName: STARTER
                  pricing:
                    cpuCoreHours: "0.001"
                    memoryGiBHours: "0.0001"
                    storageGiBHours: "0.0001"
                  productTierId: pt-12345678
                  serviceId: s-12345678
              schema:
                $ref: '#/components/schemas/ListProductTierBillingPlanResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when the product tier pricing\
            \ could not be described"
      security:
      - api_key_header_Authorization: []
      summary: ListProductTierBillingPlan product-tier-api
      tags:
      - product-tier-api
    post:
      operationId: product-tier-api#CreateProductTierBillingPlan
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Ea et molestiae quisquam ut.
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier
          example: Temporibus cupiditate sed doloribus accusantium officiis.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              allowCreatesWhenPaymentNotConfigured: true
              maxNumberofInstances: 5
              planName: STARTER
              pricing:
                cpuCoreHours: "0.001"
                memoryGiBHours: "0.0001"
                storageGiBHours: "0.0001"
            schema:
              $ref: '#/components/schemas/CreateProductTierBillingPlanRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                allowCreatesWhenPaymentNotConfigured: true
                id: bp-12345678
                maxNumberofInstances: 5
                planName: STARTER
                pricing:
                  cpuCoreHours: "0.001"
                  memoryGiBHours: "0.0001"
                  storageGiBHours: "0.0001"
                productTierId: pt-12345678
                serviceId: s-12345678
              schema:
                $ref: '#/components/schemas/BillingPlan'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a product\
            \ tier pricing"
      security:
      - api_key_header_Authorization: []
      summary: CreateProductTierBillingPlan product-tier-api
      tags:
      - product-tier-api
  /2022-09-01-00/service/{serviceId}/product-tier/{id}/feature:
    delete:
      operationId: product-tier-api#DisableProductTierFeature
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Iure quo asperiores.
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier
          example: Quia qui tenetur neque.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              feature: BILLING
              scope: INTERNAL
            schema:
              $ref: '#/components/schemas/DisableProductTierFeatureRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when the product tier feature\
            \ could not be disabled"
      security:
      - api_key_header_Authorization: []
      summary: DisableProductTierFeature product-tier-api
      tags:
      - product-tier-api
    put:
      operationId: product-tier-api#EnableProductTierFeature
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Dolores sed consequatur illum corrupti corporis.
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier
          example: Asperiores incidunt voluptates accusamus.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              configuration:
                S3BucketArn: arn:aws:s3:::my_billing_bucket_name
              feature: BILLING
              scope: INTERNAL
            schema:
              $ref: '#/components/schemas/EnableProductTierFeatureRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when the product tier feature\
            \ could not be enabled"
      security:
      - api_key_header_Authorization: []
      summary: EnableProductTierFeature product-tier-api
      tags:
      - product-tier-api
  /2022-09-01-00/service/{serviceId}/product-tier/{productTierId}/billing-plan/{id}:
    delete:
      operationId: product-tier-api#DeleteProductTierBillingPlan
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Placeat dolorem explicabo dolor est.
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Doloremque ipsa qui deleniti labore soluta.
          type: string
        style: simple
      - description: Product tier billing plan ID
        example: bp-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier Billing Plan
          example: Ea vitae.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when the product tier pricing\
            \ could not be described"
      security:
      - api_key_header_Authorization: []
      summary: DeleteProductTierBillingPlan product-tier-api
      tags:
      - product-tier-api
    get:
      operationId: product-tier-api#DescribeProductTierBillingPlan
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Voluptatem temporibus nam est.
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Deleniti ipsa laudantium tempore.
          type: string
        style: simple
      - description: Product tier billing plan ID
        example: bp-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier Billing Plan
          example: Praesentium ut.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                allowCreatesWhenPaymentNotConfigured: true
                id: bp-12345678
                maxNumberofInstances: 5
                planName: STARTER
                pricing:
                  cpuCoreHours: "0.001"
                  memoryGiBHours: "0.0001"
                  storageGiBHours: "0.0001"
                productTierId: pt-12345678
                serviceId: s-12345678
              schema:
                $ref: '#/components/schemas/BillingPlan'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when the product tier pricing\
            \ could not be described"
      security:
      - api_key_header_Authorization: []
      summary: DescribeProductTierBillingPlan product-tier-api
      tags:
      - product-tier-api
    patch:
      operationId: product-tier-api#UpdateProductTierBillingPlan
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Molestiae maxime.
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Id a occaecati quisquam voluptas ipsam ut.
          type: string
        style: simple
      - description: Product tier billing plan ID
        example: bp-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier Billing Plan
          example: Illo optio reprehenderit incidunt.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              allowCreatesWhenPaymentNotConfigured: true
              maxNumberofInstances: 5
              planName: STARTER
              pricing:
                cpuCoreHours: "0.001"
                memoryGBHours: "0.0001"
            schema:
              $ref: '#/components/schemas/UpdateProductTierBillingPlanRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                allowCreatesWhenPaymentNotConfigured: true
                id: bp-12345678
                maxNumberofInstances: 5
                planName: STARTER
                pricing:
                  cpuCoreHours: "0.001"
                  memoryGiBHours: "0.0001"
                  storageGiBHours: "0.0001"
                productTierId: pt-12345678
                serviceId: s-12345678
              schema:
                $ref: '#/components/schemas/BillingPlan'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a product\
            \ tier pricing"
      security:
      - api_key_header_Authorization: []
      summary: UpdateProductTierBillingPlan product-tier-api
      tags:
      - product-tier-api
  /2022-09-01-00/service/{serviceId}/product-tier/{productTierId}/service-plan:
    get:
      operationId: service-plan-api#GetServicePlan
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Quod voluptatum minima dolores vel.
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Et vero pariatur sed et veritatis possimus.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                AutoApproveSubscription: false
                accountConfigIds:
                - ac-12345678
                - ac-23456789
                activeAccountConfigIds:
                  aws: ac-12345678
                  gcp: ac-23456789
                apiVersion: v1
                awsRegions:
                - us-east-2
                - ca-central-1
                deploymentConfigId: dc-12345678
                gcpRegions:
                - us-central1
                hasPendingChanges: true
                isProductTierDisabled: true
                latestMajorVersion: "3.0"
                modelType: CUSTOMER_HOSTED
                productTierDescription: A premium product tier
                productTierDocumentation: Any documentation
                productTierFeatures:
                  BILLING: false
                  LOGS: true
                  METRICS: false
                productTierId: pt-12345678
                productTierKey: premium
                productTierName: Premium
                productTierPlanDescription: A premium plan
                productTierPricing:
                  price1: value1
                productTierSupport: Any support
                serviceApiDescription: A MySQL SaaS API specializing in multi-writer
                  multi-tenant clusters for high availability
                serviceApiId: sa-12345678
                serviceEnvironmentId: se-12345678
                serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
                  clusters for high availability
                serviceModelFeatures:
                - configuration:
                    Facere accusantium ut saepe ipsum.: Asperiores exercitationem
                      accusantium perspiciatis vel qui.
                  feature: Aut illum quia non molestiae aut.
                - configuration:
                    Facere accusantium ut saepe ipsum.: Asperiores exercitationem
                      accusantium perspiciatis vel qui.
                  feature: Aut illum quia non molestiae aut.
                - configuration:
                    Facere accusantium ut saepe ipsum.: Asperiores exercitationem
                      accusantium perspiciatis vel qui.
                  feature: Aut illum quia non molestiae aut.
                serviceModelId: sm-12345678
                serviceModelName: MySQL multi-writer service hosted model
                tierType: OMNISTRATE_DEDICATED_TENANCY
                versionSetStatus: Preferred|Active|Deprecated|Pending
              schema:
                $ref: '#/components/schemas/GetServicePlanResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list product tiers"
      security:
      - api_key_header_Authorization: []
      summary: GetServicePlan service-plan-api
      tags:
      - service-plan-api
  /2022-09-01-00/service/{serviceId}/product-tier/copy/{sourceId}:
    post:
      operationId: product-tier-api#CopyProductTier
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Deserunt adipisci.
          type: string
        style: simple
      - description: The source product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: sourceId
        required: true
        schema:
          description: ID of a Product Tier
          example: Ut magnam dolorem hic ab.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              autoApproveSubscription: false
              awsRegions:
              - us-east-2
              - ca-central-1
              description: A premium product tier
              documentation: Any documentation
              gcpRegions:
              - us-central1
              name: Premium
              planDescription: A premium plan
              pricing:
                price1: value1
              serviceModelId: sm-12345678
              support: Any support
              targetTierType: OMNISTRATE_DEDICATED_TENANCY
            schema:
              $ref: '#/components/schemas/CopyProductTierRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: pt-12345678
              schema:
                description: Product Tier ID created
                example: pt-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a product\
            \ tier"
      security:
      - api_key_header_Authorization: []
      summary: CopyProductTier product-tier-api
      tags:
      - product-tier-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set:
    get:
      operationId: tier-version-set-api#ListTierVersionSets
      parameters:
      - allowEmptyValue: true
        description: "If true, the latest major version is returned. The parameter\
          \ needs to be specified in isolation."
        example: true
        explode: true
        in: query
        name: latestMajorVersionOnly
        required: false
        schema:
          description: "If true, the latest major version is returned. The parameter\
            \ needs to be specified in isolation."
          example: true
          type: boolean
        style: form
      - allowEmptyValue: true
        description: Returns the latest incremental version for the given major version.
          The paramenter needs to be specified in isolation.
        example: "3.0"
        explode: true
        in: query
        name: latestIncrementalVersionForMajorVersion
        required: false
        schema:
          description: Returns the latest incremental version for the given major
            version. The paramenter needs to be specified in isolation.
          example: "3.0"
          type: string
        style: form
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Est quia tempore voluptas modi in qui.
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Tempora tenetur nam quo voluptatem.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                nextPageToken: next-token
                tierVersionSets:
                - autoApproveSubscription: false
                  baseVersion: "3.0"
                  createdAt: 2020-01-01T00:00:00Z
                  createdBy: John Doe
                  description: Praesentium optio nesciunt.
                  enabledFeatures:
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  features:
                    BILLING: false
                    LOGS: true
                    METRICS: false
                  instanceCount: 12
                  latestUpgradePathId: upgrade-12345678
                  name: Regular version set
                  parentVersion: "2.0"
                  productTierId: Tempora eos omnis illo.
                  releasedAt: 2020-01-01T00:00:00Z
                  releasedBy: John Doe
                  resources:
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: r-12345678
                    imageConfigId: imgc-12345678
                    infraConfigId: ic-12345678
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: r-12345678
                    imageConfigId: imgc-12345678
                    infraConfigId: ic-12345678
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: r-12345678
                    imageConfigId: imgc-12345678
                    infraConfigId: ic-12345678
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                  serviceId: s-12345678
                  serviceModelId: Ut culpa voluptas corporis maxime nihil eaque.
                  status: Preferred|Active|Deprecated|Pending
                  type: Major|Incremental|UserDefined
                  updatedAt: 2020-01-01T00:00:00Z
                  version: "3.0"
                - autoApproveSubscription: false
                  baseVersion: "3.0"
                  createdAt: 2020-01-01T00:00:00Z
                  createdBy: John Doe
                  description: Praesentium optio nesciunt.
                  enabledFeatures:
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  features:
                    BILLING: false
                    LOGS: true
                    METRICS: false
                  instanceCount: 12
                  latestUpgradePathId: upgrade-12345678
                  name: Regular version set
                  parentVersion: "2.0"
                  productTierId: Tempora eos omnis illo.
                  releasedAt: 2020-01-01T00:00:00Z
                  releasedBy: John Doe
                  resources:
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: r-12345678
                    imageConfigId: imgc-12345678
                    infraConfigId: ic-12345678
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: r-12345678
                    imageConfigId: imgc-12345678
                    infraConfigId: ic-12345678
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: r-12345678
                    imageConfigId: imgc-12345678
                    infraConfigId: ic-12345678
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                  serviceId: s-12345678
                  serviceModelId: Ut culpa voluptas corporis maxime nihil eaque.
                  status: Preferred|Active|Deprecated|Pending
                  type: Major|Incremental|UserDefined
                  updatedAt: 2020-01-01T00:00:00Z
                  version: "3.0"
                - autoApproveSubscription: false
                  baseVersion: "3.0"
                  createdAt: 2020-01-01T00:00:00Z
                  createdBy: John Doe
                  description: Praesentium optio nesciunt.
                  enabledFeatures:
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  features:
                    BILLING: false
                    LOGS: true
                    METRICS: false
                  instanceCount: 12
                  latestUpgradePathId: upgrade-12345678
                  name: Regular version set
                  parentVersion: "2.0"
                  productTierId: Tempora eos omnis illo.
                  releasedAt: 2020-01-01T00:00:00Z
                  releasedBy: John Doe
                  resources:
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: r-12345678
                    imageConfigId: imgc-12345678
                    infraConfigId: ic-12345678
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: r-12345678
                    imageConfigId: imgc-12345678
                    infraConfigId: ic-12345678
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: r-12345678
                    imageConfigId: imgc-12345678
                    infraConfigId: ic-12345678
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                  serviceId: s-12345678
                  serviceModelId: Ut culpa voluptas corporis maxime nihil eaque.
                  status: Preferred|Active|Deprecated|Pending
                  type: Major|Incremental|UserDefined
                  updatedAt: 2020-01-01T00:00:00Z
                  version: "3.0"
              schema:
                $ref: '#/components/schemas/ListTierVersionSetsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: ListTierVersionSets tier-version-set-api
      tags:
      - tier-version-set-api
    post:
      operationId: tier-version-set-api#CreateTierVersionSet
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Recusandae laborum.
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Suscipit et consequatur et id.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: Et non.
              name: Major version set
              parentVersion: "2.0"
              type: Major|Incremental|UserDefined
            schema:
              $ref: '#/components/schemas/CreateTierVersionSetRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                version: "3.0"
              schema:
                $ref: '#/components/schemas/CreateTierVersionSetResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request."
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a version\
            \ set."
      security:
      - api_key_header_Authorization: []
      summary: CreateTierVersionSet tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}:
    get:
      operationId: tier-version-set-api#DescribeTierVersionSet
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Et ea odio aliquam qui voluptas dolor.
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Eveniet eligendi non a.
          type: string
        style: simple
      - description: The version number for the specific version set.
        example: "3.0"
        explode: false
        in: path
        name: version
        required: true
        schema:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                autoApproveSubscription: false
                baseVersion: "3.0"
                createdAt: 2020-01-01T00:00:00Z
                createdBy: John Doe
                description: Rerum voluptates omnis.
                enabledFeatures:
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                features:
                  BILLING: false
                  LOGS: true
                  METRICS: false
                instanceCount: 12
                latestUpgradePathId: upgrade-12345678
                name: Regular version set
                parentVersion: "2.0"
                productTierId: Maiores possimus aut fugit.
                releasedAt: 2020-01-01T00:00:00Z
                releasedBy: John Doe
                resources:
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                serviceId: s-12345678
                serviceModelId: Natus eos voluptates quia odit fugiat modi.
                status: Preferred|Active|Deprecated|Pending
                type: Major|Incremental|UserDefined
                updatedAt: 2020-01-01T00:00:00Z
                version: "3.0"
              schema:
                $ref: '#/components/schemas/TierVersionSet'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: DescribeTierVersionSet tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/deprecate:
    patch:
      operationId: tier-version-set-api#DeprecateTierVersionSet
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: In ullam et et exercitationem.
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Rem et cupiditate laborum nisi.
          type: string
        style: simple
      - description: The version number for the specific version set.
        example: "3.0"
        explode: false
        in: path
        name: version
        required: true
        schema:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                autoApproveSubscription: false
                baseVersion: "3.0"
                createdAt: 2020-01-01T00:00:00Z
                createdBy: John Doe
                description: Fugiat magni sapiente.
                enabledFeatures:
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                features:
                  BILLING: false
                  LOGS: true
                  METRICS: false
                instanceCount: 12
                latestUpgradePathId: upgrade-12345678
                name: Regular version set
                parentVersion: "2.0"
                productTierId: Labore iusto eos.
                releasedAt: 2020-01-01T00:00:00Z
                releasedBy: John Doe
                resources:
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                serviceId: s-12345678
                serviceModelId: Rerum architecto incidunt quis iste commodi.
                status: Preferred|Active|Deprecated|Pending
                type: Major|Incremental|UserDefined
                updatedAt: 2020-01-01T00:00:00Z
                version: "3.0"
              schema:
                $ref: '#/components/schemas/TierVersionSet'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: DeprecateTierVersionSet tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/diff/{anotherVersion}:
    get:
      operationId: tier-version-set-api#DiffTierVersionSets
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Perspiciatis est quisquam quisquam optio voluptatum odio.
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Asperiores veritatis in maxime autem sed.
          type: string
        style: simple
      - description: The version number for the version set.
        example: "3.0"
        explode: false
        in: path
        name: version
        required: true
        schema:
          description: The version number for the version set.
          example: "3.0"
          type: string
        style: simple
      - description: The target version to compare against.
        example: "3.1"
        explode: false
        in: path
        name: anotherVersion
        required: true
        schema:
          description: The target version to compare against.
          example: "3.1"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                anotherVersion: "3.1"
                productTierId: Nihil qui ex omnis repellat consectetur.
                resourceChangeSets:
                  Ipsum et consectetur maiores aliquid explicabo.:
                    categorizedResourceChanges:
                      Libero et deleniti et facilis exercitationem.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        status: PENDING_UPDATE
                    imageConfigChanges:
                      changeState: PENDING_NEW
                      imageConfigId: imgc-12345678
                      imageName: mysql
                    infraConfigChanges:
                      changeState: PENDING_NEW
                      infraConfigId: ic-12345678
                      name: MySQL Writer Infra Config
                    overallResourceStatus: PENDING_UPDATE
                    productTierFeatureChanges: PENDING_UPDATE
                    resourceChanges: PENDING_DELETE
                    resourceName: Alias labore delectus quae sit error.
                  Ut error delectus quaerat placeat.:
                    categorizedResourceChanges:
                      Libero et deleniti et facilis exercitationem.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        status: PENDING_UPDATE
                    imageConfigChanges:
                      changeState: PENDING_NEW
                      imageConfigId: imgc-12345678
                      imageName: mysql
                    infraConfigChanges:
                      changeState: PENDING_NEW
                      infraConfigId: ic-12345678
                      name: MySQL Writer Infra Config
                    overallResourceStatus: PENDING_UPDATE
                    productTierFeatureChanges: PENDING_UPDATE
                    resourceChanges: PENDING_DELETE
                    resourceName: Alias labore delectus quae sit error.
                serviceId: s-12345678
                version: "3.0"
              schema:
                $ref: '#/components/schemas/DiffTierVersionSetsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: DiffTierVersionSets tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/promote:
    patch:
      operationId: tier-version-set-api#PromoteTierVersionSet
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Saepe rerum voluptatem unde accusantium possimus.
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Quae dolor.
          type: string
        style: simple
      - description: The version number for the specific version set.
        example: "3.0"
        explode: false
        in: path
        name: version
        required: true
        schema:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                autoApproveSubscription: false
                baseVersion: "3.0"
                createdAt: 2020-01-01T00:00:00Z
                createdBy: John Doe
                description: Dolorem nisi repellat aut sed commodi aut.
                enabledFeatures:
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                features:
                  BILLING: false
                  LOGS: true
                  METRICS: false
                instanceCount: 12
                latestUpgradePathId: upgrade-12345678
                name: Regular version set
                parentVersion: "2.0"
                productTierId: Omnis alias.
                releasedAt: 2020-01-01T00:00:00Z
                releasedBy: John Doe
                resources:
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                serviceId: s-12345678
                serviceModelId: Nesciunt dolorem est quo dolorem omnis quas.
                status: Preferred|Active|Deprecated|Pending
                type: Major|Incremental|UserDefined
                updatedAt: 2020-01-01T00:00:00Z
                version: "3.0"
              schema:
                $ref: '#/components/schemas/TierVersionSet'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: PromoteTierVersionSet tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/release:
    patch:
      operationId: tier-version-set-api#ReleaseTierVersionSet
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Eum ratione hic similique repellendus atque.
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Maxime vero nam ducimus.
          type: string
        style: simple
      - description: The version number for the specific version set.
        example: "3.0"
        explode: false
        in: path
        name: version
        required: true
        schema:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              isPreferred: true
              name: Major version set
            schema:
              $ref: '#/components/schemas/ReleaseTierVersionSetRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                autoApproveSubscription: false
                baseVersion: "3.0"
                createdAt: 2020-01-01T00:00:00Z
                createdBy: John Doe
                description: Eum nam dolorum.
                enabledFeatures:
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                features:
                  BILLING: false
                  LOGS: true
                  METRICS: false
                instanceCount: 12
                latestUpgradePathId: upgrade-12345678
                name: Regular version set
                parentVersion: "2.0"
                productTierId: Voluptatem repellendus.
                releasedAt: 2020-01-01T00:00:00Z
                releasedBy: John Doe
                resources:
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                serviceId: s-12345678
                serviceModelId: Consectetur sed architecto ut.
                status: Preferred|Active|Deprecated|Pending
                type: Major|Incremental|UserDefined
                updatedAt: 2020-01-01T00:00:00Z
                version: "3.0"
              schema:
                $ref: '#/components/schemas/TierVersionSet'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request."
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to release a version\
            \ set."
      security:
      - api_key_header_Authorization: []
      summary: ReleaseTierVersionSet tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/producttier/{productTierId}/resource:
    get:
      operationId: resource-api#ListResources
      parameters:
      - allowEmptyValue: true
        description: Is resource managed by omnistrate
        example: false
        explode: true
        in: query
        name: managed
        required: false
        schema:
          description: Is resource managed by omnistrate
          example: false
          type: boolean
        style: form
      - allowEmptyValue: true
        description: "Product tier version of the instance to describe. If not specified,\
          \ the latest version is described."
        example: Cumque non pariatur rerum porro praesentium nesciunt.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the instance to describe. If not specified,\
            \ the latest version is described."
          example: Aspernatur sint voluptates.
          type: string
        style: form
      - description: The ID of the service to list resources for
        example: si-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Voluptatem omnis magnam quia voluptatem doloribus.
          type: string
        style: simple
      - description: The product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Placeat id voluptas asperiores quia inventore.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - r-12345678
                - r-abcdefgh
                - r-1234abcd
                nextPageToken: next-token
                resources:
                - actionHooks:
                  - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
                    scope: CLUSTER
                    type: INIT
                  additionalSecurityContext:
                    AddCapabilities:
                    - CAP_NET_ADMIN
                    - CAP_NET_RAW
                    DropCapabilities:
                    - CAP_NET_ADMIN
                    - CAP_NET_RAW
                    SupplementalGroupIDs:
                    - 1001
                    - 999
                  backupConfiguration:
                    backupPeriodInHours: 24
                    backupRetentionInDays: 7
                  capabilities:
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  customLabels:
                    key: value
                  customSysCTLs:
                    net.ipv4.tcp_syncookies: "1"
                  customULimits:
                  - ULimitsName: NoProc
                    ULimitsType: Soft
                    ULimitsValue: 1000
                  - ULimitsName: NoFile
                    ULimitsType: Hard
                    ULimitsValue: 2048
                  dependencies:
                  - parameterMap:
                      clusterId: writerId
                      clusterOrg: userDatabase
                    resourceId: r-12345678
                  - parameterMap:
                      clusterId: readerId
                      clusterOrg: userDatabase
                    resourceId: r-abcdef12
                  description: An resource to manage a hosted public SaaS offering
                    of a multi-writer MySQL service
                  environmentVariables:
                  - name: MYSQL_ROOT_PASSWORD
                    value: password
                  fileSystemConfiguration:
                    EFSFileSystemConfiguration:
                      PerformanceMode: generalPurpose|maxIO
                      ProvisionedThroughputInMibps: 125
                      ThroughputMode: provisioned|bursting|elastic
                  helmChartConfiguration:
                    chartName: my-chart
                    chartRepoName: my-repo
                    chartRepoUrl: https://my-repo.com
                    chartValues:
                      key1: value1
                      key2: 3
                      key3:
                        key4: value4
                    chartVersion: 1.0.0
                    password: my-password
                    username: my-user
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  internal: false
                  isDeprecated: true
                  key: galera
                  kustomizeConfiguration:
                    gitConfiguration:
                      accessToken: my-token
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    helmChartDependencies:
                    - chartName: cert-manager
                      chartVersion: v1.5.3
                    - chartName: nginx-ingress
                      chartVersion: v0.48.1
                    - chartName: external-dns
                      chartVersion: v0.7.0
                    - chartName: cnpg-operator
                      chartVersion: v0.23.1
                    kustomizePath: /kustomize
                  l4LoadBalancerConfiguration:
                    ingressPortConfiguration:
                    - associatedResourceIDs:
                      - r-12345678
                      - r-abcdef12
                      backendPort: 8080
                      ingressPort: 1234
                    - associatedResourceIDs:
                      - r-12345678
                      - r-abcdef12
                      backendPort: 8081
                      ingressPort: 5678
                    - associatedResourceIDs:
                      - r-vwxybz12
                      - r-poij122v
                      backendPort: 8082
                      ingressPort: 9012
                  l7LoadBalancerConfiguration:
                    paths:
                    - associatedResourceID: r-12345678
                      path: /path
                      port: 8080
                  name: Galera
                  operatorCRDConfiguration:
                    helmChartDependencies:
                    - chartName: cert-manager
                      chartVersion: v1.5.3
                    - chartName: nginx-ingress
                      chartVersion: v0.48.1
                    - chartName: external-dns
                      chartVersion: v0.7.0
                    - chartName: cnpg-operator
                      chartVersion: v0.23.1
                    outputParameters:
                      expiresAt: $out.status.notAfter
                      issuerName: letsencrypt-prod
                    readinessConditions:
                      $out.status.conditions[?(@.type=='Ready')].status: true
                    supplementalFiles:
                    - |
                      apiVersion: cert-manager.io/v1
                      kind: ClusterIssuer
                      metadata:
                        name: letsencrypt-prod
                      spec:
                        acme:
                          server: https://acme-v02.api.letsencrypt.org/directory
                    - |-
                      apiVersion: ingress.nginx.io/v1
                      kind: IngressClass
                      metadata:
                        name: nginx
                      spec:
                        controller: nginx.org/ingress-controller
                    template: |-
                      apiVersion: cert-manager.io/v1
                      kind: ClusterIssuer
                      metadata:
                        name: letsencrypt-prod
                      spec:
                        acme:
                          server: https://acme-v02.api.letsencrypt.org/directory
                          email: test@example.com
                          privateKeySecretRef:
                            name: letsencrypt-prod
                          solvers:
                          - http01:
                              ingress:
                                class: nginx
                  productTierId: pt-12345678
                  proxyType: PortsBasedProxy
                  resourceType: Generic
                  serviceId: s-12345678
                  terraformConfigurations:
                    Dolorem aperiam consequatur quasi.:
                      gitConfiguration:
                        accessToken: my-token
                        referenceName: tags/v1.0.0
                        repositoryUrl: https://github.com/username/myrepo
                        userName: my-user
                      privateModuleGitAccessTokens:
                        tokenName: accessToken
                      terraformPath: /project1/tf
                - actionHooks:
                  - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
                    scope: CLUSTER
                    type: INIT
                  additionalSecurityContext:
                    AddCapabilities:
                    - CAP_NET_ADMIN
                    - CAP_NET_RAW
                    DropCapabilities:
                    - CAP_NET_ADMIN
                    - CAP_NET_RAW
                    SupplementalGroupIDs:
                    - 1001
                    - 999
                  backupConfiguration:
                    backupPeriodInHours: 24
                    backupRetentionInDays: 7
                  capabilities:
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  customLabels:
                    key: value
                  customSysCTLs:
                    net.ipv4.tcp_syncookies: "1"
                  customULimits:
                  - ULimitsName: NoProc
                    ULimitsType: Soft
                    ULimitsValue: 1000
                  - ULimitsName: NoFile
                    ULimitsType: Hard
                    ULimitsValue: 2048
                  dependencies:
                  - parameterMap:
                      clusterId: writerId
                      clusterOrg: userDatabase
                    resourceId: r-12345678
                  - parameterMap:
                      clusterId: readerId
                      clusterOrg: userDatabase
                    resourceId: r-abcdef12
                  description: An resource to manage a hosted public SaaS offering
                    of a multi-writer MySQL service
                  environmentVariables:
                  - name: MYSQL_ROOT_PASSWORD
                    value: password
                  fileSystemConfiguration:
                    EFSFileSystemConfiguration:
                      PerformanceMode: generalPurpose|maxIO
                      ProvisionedThroughputInMibps: 125
                      ThroughputMode: provisioned|bursting|elastic
                  helmChartConfiguration:
                    chartName: my-chart
                    chartRepoName: my-repo
                    chartRepoUrl: https://my-repo.com
                    chartValues:
                      key1: value1
                      key2: 3
                      key3:
                        key4: value4
                    chartVersion: 1.0.0
                    password: my-password
                    username: my-user
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  internal: false
                  isDeprecated: true
                  key: galera
                  kustomizeConfiguration:
                    gitConfiguration:
                      accessToken: my-token
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    helmChartDependencies:
                    - chartName: cert-manager
                      chartVersion: v1.5.3
                    - chartName: nginx-ingress
                      chartVersion: v0.48.1
                    - chartName: external-dns
                      chartVersion: v0.7.0
                    - chartName: cnpg-operator
                      chartVersion: v0.23.1
                    kustomizePath: /kustomize
                  l4LoadBalancerConfiguration:
                    ingressPortConfiguration:
                    - associatedResourceIDs:
                      - r-12345678
                      - r-abcdef12
                      backendPort: 8080
                      ingressPort: 1234
                    - associatedResourceIDs:
                      - r-12345678
                      - r-abcdef12
                      backendPort: 8081
                      ingressPort: 5678
                    - associatedResourceIDs:
                      - r-vwxybz12
                      - r-poij122v
                      backendPort: 8082
                      ingressPort: 9012
                  l7LoadBalancerConfiguration:
                    paths:
                    - associatedResourceID: r-12345678
                      path: /path
                      port: 8080
                  name: Galera
                  operatorCRDConfiguration:
                    helmChartDependencies:
                    - chartName: cert-manager
                      chartVersion: v1.5.3
                    - chartName: nginx-ingress
                      chartVersion: v0.48.1
                    - chartName: external-dns
                      chartVersion: v0.7.0
                    - chartName: cnpg-operator
                      chartVersion: v0.23.1
                    outputParameters:
                      expiresAt: $out.status.notAfter
                      issuerName: letsencrypt-prod
                    readinessConditions:
                      $out.status.conditions[?(@.type=='Ready')].status: true
                    supplementalFiles:
                    - |
                      apiVersion: cert-manager.io/v1
                      kind: ClusterIssuer
                      metadata:
                        name: letsencrypt-prod
                      spec:
                        acme:
                          server: https://acme-v02.api.letsencrypt.org/directory
                    - |-
                      apiVersion: ingress.nginx.io/v1
                      kind: IngressClass
                      metadata:
                        name: nginx
                      spec:
                        controller: nginx.org/ingress-controller
                    template: |-
                      apiVersion: cert-manager.io/v1
                      kind: ClusterIssuer
                      metadata:
                        name: letsencrypt-prod
                      spec:
                        acme:
                          server: https://acme-v02.api.letsencrypt.org/directory
                          email: test@example.com
                          privateKeySecretRef:
                            name: letsencrypt-prod
                          solvers:
                          - http01:
                              ingress:
                                class: nginx
                  productTierId: pt-12345678
                  proxyType: PortsBasedProxy
                  resourceType: Generic
                  serviceId: s-12345678
                  terraformConfigurations:
                    Dolorem aperiam consequatur quasi.:
                      gitConfiguration:
                        accessToken: my-token
                        referenceName: tags/v1.0.0
                        repositoryUrl: https://github.com/username/myrepo
                        userName: my-user
                      privateModuleGitAccessTokens:
                        tokenName: accessToken
                      terraformPath: /project1/tf
              schema:
                $ref: '#/components/schemas/ListResourcesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list resources"
      security:
      - api_key_header_Authorization: []
      summary: ListResources resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource:
    post:
      operationId: resource-api#CreateResource
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Voluptas optio reprehenderit deserunt voluptatem.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              additionalSecurityContext:
                AddCapabilities:
                - CAP_NET_ADMIN
                - CAP_NET_RAW
                DropCapabilities:
                - CAP_NET_ADMIN
                - CAP_NET_RAW
                SupplementalGroupIDs:
                - 1001
                - 999
              backupConfiguration:
                backupPeriodInHours: 24
                backupRetentionInDays: 7
              customLabels:
                key: value
              customSysCTLs:
                net.ipv4.tcp_syncookies: "1"
              customULimits:
              - ULimitsName: NoProc
                ULimitsType: Soft
                ULimitsValue: 1000
              - ULimitsName: NoFile
                ULimitsType: Hard
                ULimitsValue: 2048
              description: A resource to manage a hosted public SaaS offering of a
                multi-writer MySQL service
              environmentVariables:
              - key: MYSQL_ROOT_PASSWORD
                value: password
              fileSystemConfiguration:
                EFSFileSystemConfiguration:
                  PerformanceMode: generalPurpose|maxIO
                  ProvisionedThroughputInMibps: 125
                  ThroughputMode: provisioned|bursting|elastic
              helmChartConfiguration:
                chartName: my-chart
                chartRepoName: my-repo
                chartRepoUrl: https://my-repo.com
                chartValues:
                  key1: value1
                  key2: 3
                  key3:
                    key4: value4
                chartVersion: 1.0.0
                password: my-password
                username: my-user
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              internal: true
              isProxy: true
              key: galera
              kustomizeConfiguration:
                gitConfiguration:
                  accessToken: my-token
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                helmChartDependencies:
                - chartName: cert-manager
                  chartVersion: v1.5.3
                - chartName: nginx-ingress
                  chartVersion: v0.48.1
                - chartName: external-dns
                  chartVersion: v0.7.0
                - chartName: cnpg-operator
                  chartVersion: v0.23.1
                kustomizePath: /kustomize
              l4LoadBalancerConfiguration:
                ingressPortConfiguration:
                - associatedResourceIDs:
                  - r-12345678
                  - r-abcdef12
                  backendPort: 8080
                  ingressPort: 1234
                - associatedResourceIDs:
                  - r-12345678
                  - r-abcdef12
                  backendPort: 8081
                  ingressPort: 5678
                - associatedResourceIDs:
                  - r-vwxybz12
                  - r-poij122v
                  backendPort: 8082
                  ingressPort: 9012
              l7LoadBalancerConfiguration:
                paths:
                - associatedResourceID: r-12345678
                  path: /path
                  port: 8080
              name: Galera
              operatorCRDConfiguration:
                helmChartDependencies:
                - chartName: cert-manager
                  chartVersion: v1.5.3
                - chartName: nginx-ingress
                  chartVersion: v0.48.1
                - chartName: external-dns
                  chartVersion: v0.7.0
                - chartName: cnpg-operator
                  chartVersion: v0.23.1
                outputParameters:
                  expiresAt: $out.status.notAfter
                  issuerName: letsencrypt-prod
                readinessConditions:
                  $out.status.conditions[?(@.type=='Ready')].status: true
                supplementalFiles:
                - |
                  apiVersion: cert-manager.io/v1
                  kind: ClusterIssuer
                  metadata:
                    name: letsencrypt-prod
                  spec:
                    acme:
                      server: https://acme-v02.api.letsencrypt.org/directory
                - |-
                  apiVersion: ingress.nginx.io/v1
                  kind: IngressClass
                  metadata:
                    name: nginx
                  spec:
                    controller: nginx.org/ingress-controller
                template: |-
                  apiVersion: cert-manager.io/v1
                  kind: ClusterIssuer
                  metadata:
                    name: letsencrypt-prod
                  spec:
                    acme:
                      server: https://acme-v02.api.letsencrypt.org/directory
                      email: test@example.com
                      privateKeySecretRef:
                        name: letsencrypt-prod
                      solvers:
                      - http01:
                          ingress:
                            class: nginx
              productTierId: pt-12345678
              proxyType: PortsBasedProxy
              resourceDependencies:
              - parameterMap:
                  userDatabase: clusterOrg
                  writerId: clusterWriterId
                resourceId: r-12345678
              - parameterMap:
                  readerId: clusterReaderId
                  userDatabase: clusterOrg
                resourceId: r-abcdef12
              resourceType: Generic
              terraformConfigurations:
                Et esse.:
                  gitConfiguration:
                    accessToken: my-token
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  privateModuleGitAccessTokens:
                    tokenName: accessToken
                  terraformPath: /project1/tf
            schema:
              $ref: '#/components/schemas/CreateResourceRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: r-12345678
              schema:
                description: resource ID created
                example: r-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create an resource"
      security:
      - api_key_header_Authorization: []
      summary: CreateResource resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}:
    delete:
      operationId: resource-api#DeleteResource
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Et illo culpa.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Explicabo nostrum autem.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete an resource"
      security:
      - api_key_header_Authorization: []
      summary: DeleteResource resource-api
      tags:
      - resource-api
    get:
      operationId: resource-api#DescribeResource
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the resource to describe. If not specified,\
          \ the latest version is described."
        example: Sunt eligendi.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the resource to describe. If not specified,\
            \ the latest version is described."
          example: Aspernatur iusto debitis ut et.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the resource to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Qui ipsam placeat deserunt natus.
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Ad consequuntur quos nihil tempore quas eveniet.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Et pariatur praesentium ex qui in.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                actionHooks:
                - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
                  scope: CLUSTER
                  type: INIT
                additionalSecurityContext:
                  AddCapabilities:
                  - CAP_NET_ADMIN
                  - CAP_NET_RAW
                  DropCapabilities:
                  - CAP_NET_ADMIN
                  - CAP_NET_RAW
                  SupplementalGroupIDs:
                  - 1001
                  - 999
                backupConfiguration:
                  backupPeriodInHours: 24
                  backupRetentionInDays: 7
                capabilities:
                - capability: SERVERLESS
                  configuration:
                    EnableAutoStop: true
                    MinimumNodesInPool: 5
                    PortsMappingProxyConfig:
                      MaxNumberOfClustersPerProxyInstance: 50
                      NumberOfPortsPerCluster: 4
                    ProxyId: r-123456
                    ReferenceProxyKey: resource-proxy
                    TargetPort: 5432
                - capability: SERVERLESS
                  configuration:
                    EnableAutoStop: true
                    MinimumNodesInPool: 5
                    PortsMappingProxyConfig:
                      MaxNumberOfClustersPerProxyInstance: 50
                      NumberOfPortsPerCluster: 4
                    ProxyId: r-123456
                    ReferenceProxyKey: resource-proxy
                    TargetPort: 5432
                customLabels:
                  key: value
                customSysCTLs:
                  net.ipv4.tcp_syncookies: "1"
                customULimits:
                - ULimitsName: NoProc
                  ULimitsType: Soft
                  ULimitsValue: 1000
                - ULimitsName: NoFile
                  ULimitsType: Hard
                  ULimitsValue: 2048
                dependencies:
                - parameterMap:
                    clusterId: writerId
                    clusterOrg: userDatabase
                  resourceId: r-12345678
                - parameterMap:
                    clusterId: readerId
                    clusterOrg: userDatabase
                  resourceId: r-abcdef12
                description: An resource to manage a hosted public SaaS offering of
                  a multi-writer MySQL service
                environmentVariables:
                - name: MYSQL_ROOT_PASSWORD
                  value: password
                fileSystemConfiguration:
                  EFSFileSystemConfiguration:
                    PerformanceMode: generalPurpose|maxIO
                    ProvisionedThroughputInMibps: 125
                    ThroughputMode: provisioned|bursting|elastic
                helmChartConfiguration:
                  chartName: my-chart
                  chartRepoName: my-repo
                  chartRepoUrl: https://my-repo.com
                  chartValues:
                    key1: value1
                    key2: 3
                    key3:
                      key4: value4
                  chartVersion: 1.0.0
                  password: my-password
                  username: my-user
                id: r-12345678
                imageConfigId: imgc-12345678
                infraConfigId: ic-12345678
                internal: true
                isDeprecated: true
                key: galera
                kustomizeConfiguration:
                  gitConfiguration:
                    accessToken: my-token
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  helmChartDependencies:
                  - chartName: cert-manager
                    chartVersion: v1.5.3
                  - chartName: nginx-ingress
                    chartVersion: v0.48.1
                  - chartName: external-dns
                    chartVersion: v0.7.0
                  - chartName: cnpg-operator
                    chartVersion: v0.23.1
                  kustomizePath: /kustomize
                l4LoadBalancerConfiguration:
                  ingressPortConfiguration:
                  - associatedResourceIDs:
                    - r-12345678
                    - r-abcdef12
                    backendPort: 8080
                    ingressPort: 1234
                  - associatedResourceIDs:
                    - r-12345678
                    - r-abcdef12
                    backendPort: 8081
                    ingressPort: 5678
                  - associatedResourceIDs:
                    - r-vwxybz12
                    - r-poij122v
                    backendPort: 8082
                    ingressPort: 9012
                l7LoadBalancerConfiguration:
                  paths:
                  - associatedResourceID: r-12345678
                    path: /path
                    port: 8080
                name: Galera
                operatorCRDConfiguration:
                  helmChartDependencies:
                  - chartName: cert-manager
                    chartVersion: v1.5.3
                  - chartName: nginx-ingress
                    chartVersion: v0.48.1
                  - chartName: external-dns
                    chartVersion: v0.7.0
                  - chartName: cnpg-operator
                    chartVersion: v0.23.1
                  outputParameters:
                    expiresAt: $out.status.notAfter
                    issuerName: letsencrypt-prod
                  readinessConditions:
                    $out.status.conditions[?(@.type=='Ready')].status: true
                  supplementalFiles:
                  - |
                    apiVersion: cert-manager.io/v1
                    kind: ClusterIssuer
                    metadata:
                      name: letsencrypt-prod
                    spec:
                      acme:
                        server: https://acme-v02.api.letsencrypt.org/directory
                  - |-
                    apiVersion: ingress.nginx.io/v1
                    kind: IngressClass
                    metadata:
                      name: nginx
                    spec:
                      controller: nginx.org/ingress-controller
                  template: |-
                    apiVersion: cert-manager.io/v1
                    kind: ClusterIssuer
                    metadata:
                      name: letsencrypt-prod
                    spec:
                      acme:
                        server: https://acme-v02.api.letsencrypt.org/directory
                        email: test@example.com
                        privateKeySecretRef:
                          name: letsencrypt-prod
                        solvers:
                        - http01:
                            ingress:
                              class: nginx
                productTierId: pt-12345678
                proxyType: PortsBasedProxy
                resourceType: Generic
                serviceId: s-12345678
                terraformConfigurations:
                  Autem illo repellendus.:
                    gitConfiguration:
                      accessToken: my-token
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    privateModuleGitAccessTokens:
                      tokenName: accessToken
                    terraformPath: /project1/tf
                  Rerum non corrupti hic molestiae.:
                    gitConfiguration:
                      accessToken: my-token
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    privateModuleGitAccessTokens:
                      tokenName: accessToken
                    terraformPath: /project1/tf
                  Veniam voluptas et quis doloremque eum unde.:
                    gitConfiguration:
                      accessToken: my-token
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    privateModuleGitAccessTokens:
                      tokenName: accessToken
                    terraformPath: /project1/tf
              schema:
                $ref: '#/components/schemas/DescribeResourceResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an resource"
      security:
      - api_key_header_Authorization: []
      summary: DescribeResource resource-api
      tags:
      - resource-api
    patch:
      operationId: resource-api#UpdateResource
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: A veritatis.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Pariatur accusantium iste qui vitae.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              additionalSecurityContext:
                AddCapabilities:
                - CAP_NET_ADMIN
                - CAP_NET_RAW
                DropCapabilities:
                - CAP_NET_ADMIN
                - CAP_NET_RAW
                SupplementalGroupIDs:
                - 1001
                - 999
              backupConfiguration:
                backupPeriodInHours: 24
                backupRetentionInDays: 7
              customLabels:
                key: value
              customSysCTLs:
                net.ipv4.tcp_syncookies: "1"
              customULimits:
              - ULimitsName: NoProc
                ULimitsType: Soft
                ULimitsValue: 1000
              - ULimitsName: NoFile
                ULimitsType: Hard
                ULimitsValue: 2048
              dependencies:
              - parameterMap:
                  clusterId: writerId
                  clusterOrg: userDatabase
                resourceId: r-12345678
              - parameterMap:
                  clusterId: readerId
                  clusterOrg: userDatabase
                resourceId: r-abcdef12
              description: A resource to manage a hosted public SaaS offering of a
                multi-writer MySQL service
              environmentVariables:
              - key: MYSQL_ROOT_PASSWORD
                value: password
              helmChartConfiguration:
                chartName: my-chart
                chartRepoName: my-repo
                chartRepoUrl: https://my-repo.com
                chartValues:
                  key1: value1
                  key2: 3
                  key3:
                    key4: value4
                chartVersion: 1.0.0
                password: my-password
                username: my-user
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              kustomizeConfiguration:
                gitConfiguration:
                  accessToken: my-token
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                helmChartDependencies:
                - chartName: cert-manager
                  chartVersion: v1.5.3
                - chartName: nginx-ingress
                  chartVersion: v0.48.1
                - chartName: external-dns
                  chartVersion: v0.7.0
                - chartName: cnpg-operator
                  chartVersion: v0.23.1
                kustomizePath: /kustomize
              l4LoadBalancerConfiguration:
                ingressPortConfiguration:
                - associatedResourceIDs:
                  - r-12345678
                  - r-abcdef12
                  backendPort: 8080
                  ingressPort: 1234
                - associatedResourceIDs:
                  - r-12345678
                  - r-abcdef12
                  backendPort: 8081
                  ingressPort: 5678
                - associatedResourceIDs:
                  - r-vwxybz12
                  - r-poij122v
                  backendPort: 8082
                  ingressPort: 9012
              l7LoadBalancerConfiguration:
                paths:
                - associatedResourceID: r-12345678
                  path: /path
                  port: 8080
              name: Galera
              operatorCRDConfiguration:
                helmChartDependencies:
                - chartName: cert-manager
                  chartVersion: v1.5.3
                - chartName: nginx-ingress
                  chartVersion: v0.48.1
                - chartName: external-dns
                  chartVersion: v0.7.0
                - chartName: cnpg-operator
                  chartVersion: v0.23.1
                outputParameters:
                  expiresAt: $out.status.notAfter
                  issuerName: letsencrypt-prod
                readinessConditions:
                  $out.status.conditions[?(@.type=='Ready')].status: true
                supplementalFiles:
                - |
                  apiVersion: cert-manager.io/v1
                  kind: ClusterIssuer
                  metadata:
                    name: letsencrypt-prod
                  spec:
                    acme:
                      server: https://acme-v02.api.letsencrypt.org/directory
                - |-
                  apiVersion: ingress.nginx.io/v1
                  kind: IngressClass
                  metadata:
                    name: nginx
                  spec:
                    controller: nginx.org/ingress-controller
                template: |-
                  apiVersion: cert-manager.io/v1
                  kind: ClusterIssuer
                  metadata:
                    name: letsencrypt-prod
                  spec:
                    acme:
                      server: https://acme-v02.api.letsencrypt.org/directory
                      email: test@example.com
                      privateKeySecretRef:
                        name: letsencrypt-prod
                      solvers:
                      - http01:
                          ingress:
                            class: nginx
              terraformConfigurations:
                Id ipsam.:
                  gitConfiguration:
                    accessToken: my-token
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  privateModuleGitAccessTokens:
                    tokenName: accessToken
                  terraformPath: /project1/tf
                Officia est sed veniam illum repellendus ullam.:
                  gitConfiguration:
                    accessToken: my-token
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  privateModuleGitAccessTokens:
                    tokenName: accessToken
                  terraformPath: /project1/tf
            schema:
              $ref: '#/components/schemas/UpdateResourceRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update an resource"
      security:
      - api_key_header_Authorization: []
      summary: UpdateResource resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/action-hook:
    delete:
      operationId: resource-api#DeregisterActionHook
      parameters:
      - description: The ID of the service to which the hook belongs
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Quia nulla assumenda occaecati autem sint consequatur.
          type: string
        style: simple
      - description: The ID of the resource to which the hook belongs
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Consequatur recusandae sit.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              scope: CLUSTER
              type: ADD
            schema:
              $ref: '#/components/schemas/DeregisterActionHookRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to deregister an\
            \ action hook"
      security:
      - api_key_header_Authorization: []
      summary: DeregisterActionHook resource-api
      tags:
      - resource-api
    get:
      operationId: resource-api#ListActionHooks
      parameters:
      - description: The ID of the service to which the hook belongs
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Sed ut impedit error qui laudantium consectetur.
          type: string
        style: simple
      - description: The ID of the resource to which the hook belongs
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Sunt qui ad vero rerum magni non.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                hooks:
                - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
                  scope: CLUSTER
                  type: ADD
                - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
                  scope: CLUSTER
                  type: ADD
                - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
                  scope: CLUSTER
                  type: ADD
                - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
                  scope: CLUSTER
                  type: ADD
              schema:
                $ref: '#/components/schemas/ListActionHooksResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list action hooks"
      security:
      - api_key_header_Authorization: []
      summary: ListActionHooks resource-api
      tags:
      - resource-api
    post:
      operationId: resource-api#RegisterActionHook
      parameters:
      - description: The ID of the service to which the hook belongs
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Dolor quis inventore cum minima.
          type: string
        style: simple
      - description: The ID of the resource to which the hook belongs
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Rem dicta ea laudantium sit officia.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
              scope: CLUSTER
              type: ADD
            schema:
              $ref: '#/components/schemas/RegisterActionHookRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to register an action\
            \ hook"
      security:
      - api_key_header_Authorization: []
      summary: RegisterActionHook resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/capability:
    delete:
      operationId: resource-api#DisableResourceCapability
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Minus magnam nihil a consectetur vel.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Non qui illo voluptatibus quod fuga sapiente.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              capability: SERVERLESS
            schema:
              $ref: '#/components/schemas/DisableResourceCapabilityRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to disable resource\
            \ capabilities"
      security:
      - api_key_header_Authorization: []
      summary: DisableResourceCapability resource-api
      tags:
      - resource-api
    get:
      operationId: resource-api#ListResourceCapabilities
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the instance to describe. If not specified,\
          \ the latest version is described."
        example: Quos tempore.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the instance to describe. If not specified,\
            \ the latest version is described."
          example: Deleniti natus ipsa tenetur quaerat voluptates.
          type: string
        style: form
      - allowEmptyValue: true
        description: Product tier id of the instance to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Quibusdam et accusamus voluptatem consectetur.
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Labore possimus sit numquam at.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Maiores laboriosam.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                capabilities:
                - capability: SERVERLESS
                  configuration:
                    EnableAutoStop: true
                    MinimumNodesInPool: 5
                    PortsMappingProxyConfig:
                      MaxNumberOfClustersPerProxyInstance: 50
                      NumberOfPortsPerCluster: 4
                    ProxyId: r-123456
                    ReferenceProxyKey: resource-proxy
                    TargetPort: 5432
                - capability: SERVERLESS
                  configuration:
                    EnableAutoStop: true
                    MinimumNodesInPool: 5
                    PortsMappingProxyConfig:
                      MaxNumberOfClustersPerProxyInstance: 50
                      NumberOfPortsPerCluster: 4
                    ProxyId: r-123456
                    ReferenceProxyKey: resource-proxy
                    TargetPort: 5432
              schema:
                $ref: '#/components/schemas/ListResourceCapabilitiesResponse'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to disable resource\
            \ capabilities"
      security:
      - api_key_header_Authorization: []
      summary: ListResourceCapabilities resource-api
      tags:
      - resource-api
    put:
      operationId: resource-api#EnableResourceCapability
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Doloremque omnis.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Saepe ut.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            schema:
              $ref: '#/components/schemas/EnableResourceCapabilityRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to enable resource\
            \ capabilities"
      security:
      - api_key_header_Authorization: []
      summary: EnableResourceCapability resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/dependent-resource:
    get:
      operationId: resource-api#ListDependentResource
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Vel veritatis quasi at.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Beatae omnis dolores eaque.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: r-12345678
                ids:
                - r-12345678
                - r-abcdefgh
                - r-1234abcd
                nextPageToken: next-token
                serviceId: s-12345678
              schema:
                $ref: '#/components/schemas/ListDependentResourcesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list resources"
      security:
      - api_key_header_Authorization: []
      summary: ListDependentResource resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/deprecate:
    patch:
      operationId: resource-api#DeprecateResource
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Odit non laudantium facere eos.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Voluptatum necessitatibus voluptas sit asperiores.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to deprecate an resource"
      security:
      - api_key_header_Authorization: []
      summary: DeprecateResource resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/environment-variables:
    delete:
      operationId: resource-api#UnsetEnvironmentVariables
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Ex quia harum esse quos eligendi et.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Ut asperiores laudantium dolore.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              environmentVariables:
              - key: MYSQL_ROOT_PASSWORD
                value: password
            schema:
              $ref: '#/components/schemas/SetEnvironmentVariablesRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to remove environment\
            \ variables from a resource"
      security:
      - api_key_header_Authorization: []
      summary: UnsetEnvironmentVariables resource-api
      tags:
      - resource-api
    patch:
      operationId: resource-api#SetEnvironmentVariables
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Nulla quos molestias debitis ipsum dolores aut.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Consequatur vel doloribus.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              environmentVariables:
              - key: MYSQL_ROOT_PASSWORD
                value: password
            schema:
              $ref: '#/components/schemas/SetEnvironmentVariablesRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to add environment\
            \ variables to a resource"
      security:
      - api_key_header_Authorization: []
      summary: SetEnvironmentVariables resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/file:
    get:
      operationId: resource-api#ListFiles
      parameters:
      - allowEmptyValue: true
        description: ProductTierId of the config file to describe
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Aperiam cum minus.
          type: string
        style: form
      - allowEmptyValue: true
        description: "Product tier version of the config file to describe. If missing,\
          \ last version is described"
        example: "1.0"
        explode: true
        in: query
        name: productTierVersion
        required: false
        schema:
          description: "Product tier version of the config file to describe. If missing,\
            \ last version is described"
          example: "1.0"
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Placeat cumque voluptatum et.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: A in et voluptatem ratione.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                files:
                - description: A file to store the configuration for the resource
                  fileId: f-12345678
                  mountPath: /etc/config
                  name: file.txt
                  size: 1234
                  type: Config
                  uploadTime: 2023-01-10T00:00:00Z
                  uploadedBy: user
                - description: A file to store the configuration for the resource
                  fileId: f-12345678
                  mountPath: /etc/config
                  name: file.txt
                  size: 1234
                  type: Config
                  uploadTime: 2023-01-10T00:00:00Z
                  uploadedBy: user
                - description: A file to store the configuration for the resource
                  fileId: f-12345678
                  mountPath: /etc/config
                  name: file.txt
                  size: 1234
                  type: Config
                  uploadTime: 2023-01-10T00:00:00Z
                  uploadedBy: user
              schema:
                $ref: '#/components/schemas/ListFilesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list files"
      security:
      - api_key_header_Authorization: []
      summary: ListFiles resource-api
      tags:
      - resource-api
    post:
      operationId: resource-api#AddFile
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Veniam dolores sit est.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Corporis nemo.
          type: string
        style: simple
      - description: "Content-Type header, must define value for multipart boundary."
        example: multipart/form-data; boundary=boundary
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          default: multipart/form-data; boundary=boundary
          description: "Content-Type header, must define value for multipart boundary."
          example: multipart/form-data; boundary=boundary
          pattern: "multipart/[^;]+; boundary=.+"
          type: string
        style: simple
      - description: The name of the file
        example: file.txt
        explode: false
        in: header
        name: Name
        required: true
        schema:
          description: The name of the file
          example: file.txt
          type: string
        style: simple
      - description: The description of the file
        example: A file to store the configuration for the resource
        explode: false
        in: header
        name: Description
        required: true
        schema:
          description: The description of the file
          example: A file to store the configuration for the resource
          type: string
        style: simple
      - description: The type of the file
        example: Config
        explode: false
        in: header
        name: FileType
        required: true
        schema:
          description: The type of the file
          example: Config|Secret
          type: string
        style: simple
      - description: The mount path of the file
        example: /etc/config
        explode: false
        in: header
        name: MountPath
        required: true
        schema:
          description: The mount path of the file
          example: /etc/config
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: Est et commodi et.
              schema:
                example: Qui suscipit voluptas consequatur nam reprehenderit.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "415":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_media_type: Error returned when the Content-Type header\
            \ does not define a multipart request."
      security:
      - api_key_header_Authorization: []
      summary: AddFile resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/file/{fileId}:
    delete:
      operationId: resource-api#RemoveFile
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Non ut omnis.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Autem dolor omnis et ut.
          type: string
        style: simple
      - description: The ID of the file
        example: file-12345678
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          description: ID of a File
          example: Qui ut consequuntur quasi tempore officia.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when the requested file is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a file"
      security:
      - api_key_header_Authorization: []
      summary: RemoveFile resource-api
      tags:
      - resource-api
    get:
      operationId: resource-api#GetFile
      parameters:
      - allowEmptyValue: true
        description: Product Tier ID of the config files to list
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Ullam ullam ut quia est consequatur.
          type: string
        style: form
      - allowEmptyValue: true
        description: "Product Tier version of the config files to list. If missing,\
          \ last version is used"
        example: "1.0"
        explode: true
        in: query
        name: productTierVersion
        required: false
        schema:
          description: "Product Tier version of the config files to list. If missing,\
            \ last version is used"
          example: "1.0"
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Sit non aspernatur.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Vero excepturi omnis rerum numquam quos quos.
          type: string
        style: simple
      - description: The ID of the file
        example: f-12345678
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          description: ID of a File
          example: Numquam sit iusto molestiae voluptatum iste.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: OK response.
          headers:
            Content-Length:
              description: Length is the downloaded content length in bytes.
              example: 4194304
              explode: false
              schema:
                description: Length is the downloaded content length in bytes.
                example: 4194304
                format: int64
                type: integer
              style: simple
            Content-Type:
              description: "Content-Type header, must define value for multipart boundary."
              example: multipart/form-data; boundary=boundary
              explode: false
              schema:
                default: multipart/form-data; boundary=boundary
                description: "Content-Type header, must define value for multipart\
                  \ boundary."
                example: multipart/form-data; boundary=boundary
                type: string
              style: simple
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when the requested file is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a file"
      security:
      - api_key_header_Authorization: []
      summary: GetFile resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/file/{fileId}/content:
    put:
      operationId: resource-api#UpdateFileContent
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Accusantium veniam incidunt molestiae consequatur officiis exercitationem.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Quibusdam nihil fugiat laborum optio.
          type: string
        style: simple
      - description: The ID of the file
        example: f-12345678
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          description: ID of a File
          example: Possimus similique necessitatibus.
          type: string
        style: simple
      - description: "Content-Type header, must define value for multipart boundary."
        example: multipart/form-data; boundary=boundary
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          default: multipart/form-data; boundary=boundary
          description: "Content-Type header, must define value for multipart boundary."
          example: multipart/form-data; boundary=boundary
          pattern: "multipart/[^;]+; boundary=.+"
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
      security:
      - api_key_header_Authorization: []
      summary: UpdateFileContent resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/file/{fileId}/metadata:
    patch:
      operationId: resource-api#UpdateFileMetadata
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Dicta quia.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Quis earum temporibus esse.
          type: string
        style: simple
      - description: The ID of the file
        example: f-12345678
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          description: ID of a File
          example: Accusantium temporibus aut totam.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A file to store the configuration for the resource
              mountPath: /etc/config
              name: file.txt
            schema:
              $ref: '#/components/schemas/UpdateFileMetadataRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
      security:
      - api_key_header_Authorization: []
      summary: UpdateFileMetadata resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/metrics:
    delete:
      operationId: resource-api#DeregisterResourceMetricsConfig
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Quae repudiandae cumque nam omnis libero.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Quaerat id sint quae quo quae quidem.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response on failure to register resource metrics"
      security:
      - api_key_header_Authorization: []
      summary: DeregisterResourceMetricsConfig resource-api
      tags:
      - resource-api
    get:
      operationId: resource-api#DescribeResourceMetricsConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the resource to describe. If not specified,\
          \ the latest version is described."
        example: Ipsa dolores sint.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the resource to describe. If not specified,\
            \ the latest version is described."
          example: Nam et quibusdam non.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the resource to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Velit tempora at ex.
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Odio distinctio quos et minima.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Dolores officia aut.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: r-12345678
                metricEndpoint: http://localhost:9187/metrics
                serviceId: s-12345678
              schema:
                $ref: '#/components/schemas/Describeresourcemetricsconfigresult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response when the requested resource is not found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response when requested resource is in an invalid\
            \ state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response on failure to describe resource metrics"
      security:
      - api_key_header_Authorization: []
      summary: DescribeResourceMetricsConfig resource-api
      tags:
      - resource-api
    post:
      operationId: resource-api#RegisterResourceMetricsConfig
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Perferendis asperiores itaque libero quod.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Molestiae laborum et quas porro consequuntur.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              metricEndpoint: http://localhost:9187/metrics
            schema:
              $ref: '#/components/schemas/RegisterResourceMetricsConfigRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response on failure to register resource metrics"
      security:
      - api_key_header_Authorization: []
      summary: RegisterResourceMetricsConfig resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/resource-dependency/{resourceDependencyId}:
    delete:
      operationId: resource-api#RemoveResourceDependency
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Et temporibus quibusdam.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Magnam omnis rerum magnam minima fuga voluptatem.
          type: string
        style: simple
      - description: The ID of the resource dependency to remove
        example: r-12345678
        explode: false
        in: path
        name: resourceDependencyId
        required: true
        schema:
          description: ID of a resource
          example: Repellat praesentium voluptas quos ipsam repellendus quasi.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to remove a resource\
            \ dependency from a resource"
      security:
      - api_key_header_Authorization: []
      summary: RemoveResourceDependency resource-api
      tags:
      - resource-api
    post:
      operationId: resource-api#AddResourceDependency
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Dolorem molestiae quia.
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Rem omnis quia cupiditate aut aut.
          type: string
        style: simple
      - description: The ID of the resource to be added as a dependency
        example: r-12345678
        explode: false
        in: path
        name: resourceDependencyId
        required: true
        schema:
          description: ID of a resource
          example: Sunt et dolore accusantium.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              parameterMap:
                clusterId: writerId
                clusterOrg: userDatabase
            schema:
              $ref: '#/components/schemas/AddResourceDependencyRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to add a resource\
            \ dependency to a resource"
      security:
      - api_key_header_Authorization: []
      summary: AddResourceDependency resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{resourceId}/input-parameter:
    get:
      operationId: input-parameter-api#ListInputParameter
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the instance to describe. If not specified,\
          \ the latest version is described."
        example: Dolor quibusdam dolore ullam molestias quis cum.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the instance to describe. If not specified,\
            \ the latest version is described."
          example: Cumque tempore numquam temporibus doloremque ut inventore.
          type: string
        style: form
      - allowEmptyValue: true
        description: Product tier id of the instance to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Libero architecto odit id.
          type: string
        style: form
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Incidunt dolorem non ad animi.
          type: string
        style: simple
      - description: The ID of the resource that this input parameter belongs to
        example: r-12345678
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          description: ID of a resource
          example: Rerum totam vero id totam sunt optio.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - ip-12345678
                - ip-12345679
                inputParameters:
                - defaultValue: "true"
                  dependentResourceId: r-12345678
                  description: Ut mollitia eveniet.
                  hasOptions: false
                  id: var-12345678
                  isList: true
                  key: s
                  labeledOptions:
                    large: t3.xlarge
                    medium: t3.large
                    small: t3.medium
                  limits:
                    max: Debitis ea aspernatur aut blanditiis aperiam eum.
                    maxLength: Et dolor modi.
                    min: Expedita eos unde minima quia.
                    minLength: Ab omnis illum.
                  modifiable: false
                  name: b
                  options:
                  - "true"
                  - "false"
                  required: true
                  resourceId: r-12345678
                  serviceId: s-12345678
                  type: Dolorem commodi deserunt architecto ut.
                - defaultValue: "true"
                  dependentResourceId: r-12345678
                  description: Ut mollitia eveniet.
                  hasOptions: false
                  id: var-12345678
                  isList: true
                  key: s
                  labeledOptions:
                    large: t3.xlarge
                    medium: t3.large
                    small: t3.medium
                  limits:
                    max: Debitis ea aspernatur aut blanditiis aperiam eum.
                    maxLength: Et dolor modi.
                    min: Expedita eos unde minima quia.
                    minLength: Ab omnis illum.
                  modifiable: false
                  name: b
                  options:
                  - "true"
                  - "false"
                  required: true
                  resourceId: r-12345678
                  serviceId: s-12345678
                  type: Dolorem commodi deserunt architecto ut.
                - defaultValue: "true"
                  dependentResourceId: r-12345678
                  description: Ut mollitia eveniet.
                  hasOptions: false
                  id: var-12345678
                  isList: true
                  key: s
                  labeledOptions:
                    large: t3.xlarge
                    medium: t3.large
                    small: t3.medium
                  limits:
                    max: Debitis ea aspernatur aut blanditiis aperiam eum.
                    maxLength: Et dolor modi.
                    min: Expedita eos unde minima quia.
                    minLength: Ab omnis illum.
                  modifiable: false
                  name: b
                  options:
                  - "true"
                  - "false"
                  required: true
                  resourceId: r-12345678
                  serviceId: s-12345678
                  type: Dolorem commodi deserunt architecto ut.
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListInputParametersResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list input parameters"
      security:
      - api_key_header_Authorization: []
      summary: ListInputParameter input-parameter-api
      tags:
      - input-parameter-api
  /2022-09-01-00/service/{serviceId}/resource/{resourceId}/output-parameter:
    get:
      operationId: output-parameter-api#ListOutputParameter
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the resource to describe. If not specified,\
          \ the latest version is described."
        example: Hic doloremque.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the resource to describe. If not specified,\
            \ the latest version is described."
          example: Non autem.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the resource to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Unde sequi omnis quisquam inventore exercitationem ducimus.
          type: string
        style: form
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Ut expedita temporibus voluptatem.
          type: string
        style: simple
      - description: The ID of the resource that this output parameter belongs to
        example: r-12345678
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          description: ID of a resource
          example: Voluptas ipsa earum similique expedita non.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - op-12345678
                nextPageToken: next-token
                outputParameters:
                - description: Username of the user created in the target system
                  id: op-12345678
                  key: username
                  name: Username
                  resourceId: r-12345678
                  serviceId: s-12345678
                  value: johndoe
                  valueRef: $var.username
                  valueType: Aut vitae.
                - description: Username of the user created in the target system
                  id: op-12345678
                  key: username
                  name: Username
                  resourceId: r-12345678
                  serviceId: s-12345678
                  value: johndoe
                  valueRef: $var.username
                  valueType: Aut vitae.
              schema:
                $ref: '#/components/schemas/ListOutputParametersResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list output parameters"
      security:
      - api_key_header_Authorization: []
      summary: ListOutputParameter output-parameter-api
      tags:
      - output-parameter-api
  /2022-09-01-00/service/{serviceId}/service-api:
    post:
      operationId: service-api-api#CreateServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Ratione adipisci ut eos porro fugiat enim.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL SaaS API specializing in multi-writer multi-tenant
                clusters for high availability
              serviceEnvironmentId: se-12345678
            schema:
              $ref: '#/components/schemas/CreateServiceAPIRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: sa-12345678
              schema:
                description: Service API ID created
                example: sa-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a service\
            \ API"
      security:
      - api_key_header_Authorization: []
      summary: CreateServiceAPI service-api-api
      tags:
      - service-api-api
  /2022-09-01-00/service/{serviceId}/service-api/{id}:
    delete:
      operationId: service-api-api#DeleteServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Modi sed quo repellendus consequatur necessitatibus odio.
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Sequi dolore ullam est nostrum.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a service\
            \ API"
      security:
      - api_key_header_Authorization: []
      summary: DeleteServiceAPI service-api-api
      tags:
      - service-api-api
    get:
      operationId: service-api-api#DescribeServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Est hic nam earum iusto.
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Earum aut facere itaque quo ut.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                apiVersion: v1
                deploymentConfigId: dc-12345678
                description: A MySQL SaaS API specializing in multi-writer multi-tenant
                  clusters for high availability
                id: sa-12345678
                serviceEnvironmentId: se-12345678
                serviceId: s-12345678
                serviceName: mysql
              schema:
                $ref: '#/components/schemas/DescribeServiceAPIResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a service\
            \ API"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceAPI service-api-api
      tags:
      - service-api-api
    patch:
      operationId: service-api-api#UpdateServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Repudiandae nobis optio voluptates.
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Consequatur facilis et quod.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL SaaS API specializing in multi-writer multi-tenant
                clusters for high availability
            schema:
              $ref: '#/components/schemas/UpdateServiceAPIRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a service\
            \ API"
      security:
      - api_key_header_Authorization: []
      summary: UpdateServiceAPI service-api-api
      tags:
      - service-api-api
  /2022-09-01-00/service/{serviceId}/service-api/{id}/all-pending-changes:
    delete:
      operationId: service-api-api#DiscardPendingChanges
      parameters:
      - allowEmptyValue: true
        description: ProductTierID of the resource to describe pending changes forNeeds
          to specified in combination with the product tier version
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Cupiditate aspernatur consequatur ut laborum dolorem.
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Nostrum quia omnis unde reiciendis aspernatur necessitatibus.
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Voluptatem sit tempora voluptatem.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe pending\
            \ changes to a service API"
      security:
      - api_key_header_Authorization: []
      summary: DiscardPendingChanges service-api-api
      tags:
      - service-api-api
    get:
      operationId: service-api-api#DescribePendingChanges
      parameters:
      - allowEmptyValue: true
        description: ProductTierID of the resource to describe pending changes forNeeds
          to specified in combination with the product tier version
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Hic illum quo ut.
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Beatae est quae autem ducimus.
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Voluptas sint labore distinctio.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: sa-12345678
                resourceChangeSets:
                  Ipsam maiores.:
                    categorizedResourceChanges:
                      Libero et deleniti et facilis exercitationem.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        status: PENDING_UPDATE
                    imageConfigChanges:
                      changeState: PENDING_NEW
                      imageConfigId: imgc-12345678
                      imageName: mysql
                    infraConfigChanges:
                      changeState: PENDING_NEW
                      infraConfigId: ic-12345678
                      name: MySQL Writer Infra Config
                    overallResourceStatus: PENDING_UPDATE
                    productTierFeatureChanges: PENDING_UPDATE
                    resourceChanges: PENDING_DELETE
                    resourceName: Alias labore delectus quae sit error.
                  Quaerat quisquam molestias nam dolor id vitae.:
                    categorizedResourceChanges:
                      Libero et deleniti et facilis exercitationem.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        status: PENDING_UPDATE
                    imageConfigChanges:
                      changeState: PENDING_NEW
                      imageConfigId: imgc-12345678
                      imageName: mysql
                    infraConfigChanges:
                      changeState: PENDING_NEW
                      infraConfigId: ic-12345678
                      name: MySQL Writer Infra Config
                    overallResourceStatus: PENDING_UPDATE
                    productTierFeatureChanges: PENDING_UPDATE
                    resourceChanges: PENDING_DELETE
                    resourceName: Alias labore delectus quae sit error.
                serviceId: s-12345678
              schema:
                $ref: '#/components/schemas/DescribePendingChangesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe pending\
            \ changes to a service API"
      security:
      - api_key_header_Authorization: []
      summary: DescribePendingChanges service-api-api
      tags:
      - service-api-api
  /2022-09-01-00/service/{serviceId}/service-api/{id}/deprecate:
    post:
      operationId: service-api-api#DeprecateServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Rerum velit ad dicta repellat.
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Vel ea eveniet esse magni et eaque.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to deprecate a service\
            \ API"
      security:
      - api_key_header_Authorization: []
      summary: DeprecateServiceAPI service-api-api
      tags:
      - service-api-api
  /2022-09-01-00/service/{serviceId}/service-api/{id}/release:
    post:
      operationId: service-api-api#ReleaseServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Nostrum laborum.
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Soluta dicta itaque repudiandae velit ut ut.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              isPreferred: true
              productTierId: pt-12345678
              versionSetName: v1
              versionSetType: Major|Incremental|UserDefined
            schema:
              $ref: '#/components/schemas/ReleaseServiceAPIRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to release a service\
            \ API"
      security:
      - api_key_header_Authorization: []
      summary: ReleaseServiceAPI service-api-api
      tags:
      - service-api-api
  /2022-09-01-00/service/{serviceId}/serviceapi/{serviceApiId}/model:
    get:
      operationId: service-model-api#ListServiceModel
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Aliquam neque.
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: serviceApiId
        required: true
        schema:
          description: ID of a Service API
          example: Dolorum itaque perspiciatis iusto.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - sm-12345678
                - sm-87654321
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceEnvironmentsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list service models"
      security:
      - api_key_header_Authorization: []
      summary: ListServiceModel service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/serviceenvironment/{serviceEnvironmentId}/image-config:
    get:
      operationId: image-config-api#ListImageConfigs
      parameters:
      - description: The service ID to use for the infra
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Recusandae tempore enim.
          type: string
        style: simple
      - description: The service environment ID
        example: se-12345678
        explode: false
        in: path
        name: serviceEnvironmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: Culpa magnam voluptas ducimus omnis expedita fuga.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - imgc-12345678
                - imgc-87654321
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceEnvironmentsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list image configs"
      security:
      - api_key_header_Authorization: []
      summary: ListImageConfigs image-config-api
      tags:
      - image-config-api
  /2022-09-01-00/service/{serviceId}/serviceenvironment/{serviceEnvironmentId}/infra-config:
    get:
      operationId: infra-config-api#ListInfraConfig
      parameters:
      - allowEmptyValue: true
        description: Is infra config managed by omnistrate
        example: false
        explode: true
        in: query
        name: managed
        required: false
        schema:
          description: Is infra config managed by omnistrate
          example: false
          type: boolean
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Eum totam quam a.
          type: string
        style: simple
      - description: The service environment ID
        example: se-12345678
        explode: false
        in: path
        name: serviceEnvironmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: Unde accusamus est deserunt soluta.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - ic-12345678
                - ic-abcdefgh
                - ic-1234efgh
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceEnvironmentsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list infra configs"
      security:
      - api_key_header_Authorization: []
      summary: ListInfraConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/serviceenvironment/{serviceEnvironmentId}/service-api:
    get:
      operationId: service-api-api#ListServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Ut vero vel harum sed fugit.
          type: string
        style: simple
      - description: The service environment ID
        example: se-12345678
        explode: false
        in: path
        name: serviceEnvironmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: Quaerat amet sed mollitia.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - sa-12345678
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceEnvironmentsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list service APIs"
      security:
      - api_key_header_Authorization: []
      summary: ListServiceAPI service-api-api
      tags:
      - service-api-api
  /2022-09-01-00/service/{serviceId}/storage-config:
    get:
      operationId: storage-config-api#ListStorageConfig
      parameters:
      - allowEmptyValue: true
        description: Is storage config managed by omnistrate
        example: false
        explode: true
        in: query
        name: managed
        required: false
        schema:
          description: Is storage config managed by omnistrate
          example: false
          type: boolean
        style: form
      - description: The service id to filter by
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Ex quisquam est sed.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - sc-12345678
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceEnvironmentsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list storage configs"
      security:
      - api_key_header_Authorization: []
      summary: ListStorageConfig storage-config-api
      tags:
      - storage-config-api
    post:
      operationId: storage-config-api#CreateStorageConfig
      parameters:
      - description: The service to which this storage config belongs
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Eum dignissimos natus quo sit qui qui.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: my-storage-config-description
              name: my-storage-config
            schema:
              $ref: '#/components/schemas/CreateStorageConfigRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: sc-12345678
              schema:
                description: Storage Config ID created
                example: sc-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create storage\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateStorageConfig storage-config-api
      tags:
      - storage-config-api
  /2022-09-01-00/service/{serviceId}/storage-config/{id}:
    delete:
      operationId: storage-config-api#DeleteStorageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Nemo eum expedita qui iure occaecati qui.
          type: string
        style: simple
      - description: The storage config ID
        example: sc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Config
          example: Velit velit et.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a storage\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteStorageConfig storage-config-api
      tags:
      - storage-config-api
    get:
      operationId: storage-config-api#DescribeStorageConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the storage config to describe. If not\
          \ specified, the latest version is described."
        example: Et eius facilis at et consectetur.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the storage config to describe. If\
            \ not specified, the latest version is described."
          example: Ducimus quia.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the storage config to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Quis velit vel aut fuga fugiat saepe.
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Ut neque similique maiores.
          type: string
        style: simple
      - description: The storage config ID
        example: sc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Config
          example: Aperiam velit.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: my-storage-config-description
                id: sc-12345678
                infraConfigIDs:
                - ic-12345678
                - ic-abcdefgh
                name: my-storage-config
                serviceId: s-12345678
                volumes:
                  svc-12345678:
                  - /data
                  - /mnt/logs
                  svc-23456789:
                  - /config
              schema:
                $ref: '#/components/schemas/DescribeStorageConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe storage\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeStorageConfig storage-config-api
      tags:
      - storage-config-api
    patch:
      operationId: storage-config-api#UpdateStorageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Labore harum fugit.
          type: string
        style: simple
      - description: The storage config ID
        example: sc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Config
          example: Ea quia error fugiat.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: my-storage-config-description
              name: my-storage-config
            schema:
              $ref: '#/components/schemas/UpdateServiceModelRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update storage\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateStorageConfig storage-config-api
      tags:
      - storage-config-api
  /2022-09-01-00/service/{serviceId}/storage-config/{id}/volume/{storageVolumeConfigId}:
    delete:
      operationId: storage-config-api#RemoveStorageVolumeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Libero rerum similique in hic dolore.
          type: string
        style: simple
      - description: The storage config ID
        example: sc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Config
          example: Quo unde tempora accusantium aut aliquid consequatur.
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: storageVolumeConfigId
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Nostrum quia qui architecto ea.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              mountPath: /data
            schema:
              $ref: '#/components/schemas/AddStorageVolumeConfigRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to remove storage\
            \ volume config"
      security:
      - api_key_header_Authorization: []
      summary: RemoveStorageVolumeConfig storage-config-api
      tags:
      - storage-config-api
    put:
      operationId: storage-config-api#AddStorageVolumeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Corporis rerum velit cupiditate dolorum.
          type: string
        style: simple
      - description: The storage config ID
        example: sc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Config
          example: Illum itaque distinctio enim rerum veritatis cum.
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: storageVolumeConfigId
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Ut ducimus assumenda.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              mountPath: /data
            schema:
              $ref: '#/components/schemas/AddStorageVolumeConfigRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to add storage volume\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: AddStorageVolumeConfig storage-config-api
      tags:
      - storage-config-api
  /2022-09-01-00/service/{serviceId}/storage-volume-config:
    get:
      operationId: storage-volume-config-api#ListStorageVolumeConfig
      parameters:
      - allowEmptyValue: true
        description: Is storage volume config managed by omnistrate
        example: false
        explode: true
        in: query
        name: managed
        required: false
        schema:
          description: Is storage volume config managed by omnistrate
          example: false
          type: boolean
        style: form
      - description: The service to list storage volume configs for
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Consequatur recusandae excepturi velit dolore minima qui.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - svc-12345678
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceEnvironmentsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list storage volume\
            \ configs"
      security:
      - api_key_header_Authorization: []
      summary: ListStorageVolumeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
    post:
      operationId: storage-volume-config-api#CreateStorageVolumeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Sed aut corrupti commodi.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              clusterStorageType: S3|$var.storageType|AWS::EFS
              description: A storage volume set to store the MySQL data directory
              disableBackup: false
              instanceStorageIops: $var.storageIops
              instanceStorageSizeGi: $var.storage_size
              instanceStorageThroughputMiBps: "128"
              instanceStorageType: $var.storageType
              name: MySQL Data Volume
              storageResourceID: r-12345678
            schema:
              $ref: '#/components/schemas/CreateStorageVolumeConfigRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: svc-12345678
              schema:
                description: Storage Volume Config ID created
                example: svc-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create storage\
            \ volume config"
      security:
      - api_key_header_Authorization: []
      summary: CreateStorageVolumeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
  /2022-09-01-00/service/{serviceId}/storage-volume-config/{id}:
    delete:
      operationId: storage-volume-config-api#DeleteStorageVolumeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Voluptas vitae quae.
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Est doloremque ut minus quidem.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a storage\
            \ volume config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteStorageVolumeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
    get:
      operationId: storage-volume-config-api#DescribeStorageVolumeConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the network config to describe. If not\
          \ specified, the latest version is described."
        example: Quia delectus sequi maiores veritatis harum animi.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the network config to describe. If\
            \ not specified, the latest version is described."
          example: Quia minus cupiditate.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the network config to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Est et sed similique.
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Nobis rem et pariatur.
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Nihil dicta.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cloudProviderName: aws
                clusterStorageType: S3|$var.storageType|AWS::EFS
                description: A storage volume set to store the MySQL data directory
                disableBackup: false
                id: svc-12345678
                instanceStorageIops: "7500"
                instanceStorageSizeGi: "128"
                instanceStorageThroughputMiBps: "128"
                instanceStorageType: $var.storageType
                name: MySQL Data Volume
                serviceId: s-12345678
                storageResourceID: r-12345678
              schema:
                $ref: '#/components/schemas/DescribeStorageVolumeConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe storage\
            \ volume config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeStorageVolumeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
    patch:
      operationId: storage-volume-config-api#UpdateStorageVolumeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Iste vero quo reiciendis blanditiis.
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Excepturi blanditiis non ut accusamus nulla.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A storage volume set to store the MySQL data directory
              disableBackup: false
              name: MySQL Data Volume
            schema:
              $ref: '#/components/schemas/UpdateStorageVolumeConfigRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update storage\
            \ volume config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateStorageVolumeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
  /2022-09-01-00/service/{serviceId}/storage-volume-config/{id}/instance:
    patch:
      operationId: storage-volume-config-api#UpdateInstanceStorageVolumeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Dolores voluptas.
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Dolores illum nesciunt libero autem.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              instanceStorageIops: "7500"
              instanceStorageThroughputMiBps: "128"
              instanceStorageType: AWS::EBS_GP2
            schema:
              $ref: '#/components/schemas/UpdateInstanceStorageVolumeConfigRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update instance\
            \ storage volume type config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateInstanceStorageVolumeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
  /2022-09-01-00/service/{serviceId}/storage-volume-config/{id}/size:
    patch:
      operationId: storage-volume-config-api#UpdateStorageVolumeSizeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Unde molestiae cupiditate.
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Quae officia repellendus dolores expedita nostrum ut.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              instanceStorageSizeGi: $var.storage_size
            schema:
              $ref: '#/components/schemas/UpdateStorageVolumeSizeConfigRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update storage\
            \ volume size config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateStorageVolumeSizeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
  /2022-09-01-00/service/{serviceId}/vunit/{id}:
    get:
      operationId: vunit-api#DescribeVUnit
      parameters:
      - description: Service ID for the VUnit
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: Explicabo architecto.
          type: string
        style: simple
      - description: VUnit to operate on
        example: vu-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a VUnit
          example: Et quo enim.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cloudProvider: aws
                id: vu-12345678
                networkIds:
                - n-12345678
                - n-abcdefgh
                - n-1234efgh
                region: us-west-2
                serviceId: s-12345678
                serviceModelId: sm-12345678
              schema:
                $ref: '#/components/schemas/DescribeVUnitResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a vunit"
      security:
      - api_key_header_Authorization: []
      summary: DescribeVUnit vunit-api
      tags:
      - vunit-api
  /2022-09-01-00/service/composespec:
    post:
      operationId: service-api#CreateServiceFromComposeSpec
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              fileContent: Maiores nam qui.
              fileFormat: text/plain
              fileName: mysql.yaml
              name: MySQL multi-writer service
              serviceLogoURL: http://hermiston.com/jamison.koelpin
            schema:
              $ref: '#/components/schemas/CreateServiceFromComposeSpecRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: s-12345678
              schema:
                description: Service ID created
                example: s-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a service"
      security:
      - api_key_header_Authorization: []
      summary: CreateServiceFromComposeSpec service-api
      tags:
      - service-api
    put:
      operationId: service-api#BuildServiceFromComposeSpec
      requestBody:
        content:
          application/json:
            example:
              configs:
                Placeat molestiae aperiam iusto.: Vero quo harum dolorum consequatur
                  ut quas.
              description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              environment: dev
              environmentType: DEV
              fileContent: Est velit et.
              name: MySQL multi-writer service
              release: true
              releaseAsPreferred: true
              releaseVersionName: mysql
              secrets:
                Et omnis itaque dignissimos.: Voluptate nostrum et omnis.
                Ipsa quos iure rerum sunt adipisci.: Dolor voluptatibus maxime.
              serviceLogoURL: http://mitchelllindgren.com/colt
            schema:
              $ref: '#/components/schemas/BuildServiceFromComposeSpecRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                productTierID: pt-12345678
                serviceEnvironmentID: se-12345678
                serviceID: s-12345678
                undefinedResources:
                  mysql: r-12345678
              schema:
                $ref: '#/components/schemas/BuildServiceFromServicePlanSpecResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to build a service\
            \ from compose spec"
      security:
      - api_key_header_Authorization: []
      summary: BuildServiceFromComposeSpec service-api
      tags:
      - service-api
  /2022-09-01-00/service/serviceplanspec:
    put:
      operationId: service-api#BuildServiceFromServicePlanSpec
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              environment: dev
              environmentType: DEV
              fileContent: Itaque dicta excepturi.
              name: MySQL multi-writer service
              serviceLogoURL: http://kassulke.org/linda
            schema:
              $ref: '#/components/schemas/BuildServiceFromServicePlanSpecRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                productTierID: pt-12345678
                serviceEnvironmentID: se-12345678
                serviceID: s-12345678
                undefinedResources:
                  mysql: r-12345678
              schema:
                $ref: '#/components/schemas/BuildServiceFromServicePlanSpecResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to build a service\
            \ from compose spec"
      security:
      - api_key_header_Authorization: []
      summary: BuildServiceFromServicePlanSpec service-api
      tags:
      - service-api
  /2022-09-01-00/signin:
    post:
      operationId: signin-api#Signin
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              hashedPassword: deprecated
              password: password
            schema:
              $ref: '#/components/schemas/SigninRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                jwtToken: ""
              schema:
                $ref: '#/components/schemas/SigninResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to signin"
      summary: Signin signin-api
      tags:
      - signin-api
  /2022-09-01-00/signup:
    post:
      operationId: signup-api#Signup
      requestBody:
        content:
          application/json:
            example:
              companyDescription: We sell xyz database software
              companyUrl: https://www.mywebsite.com
              email: abc@gmail.com
              legalCompanyName: mywebsite
              name: John Doe
              password: password
            schema:
              $ref: '#/components/schemas/SignupRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to signup"
      summary: Signup signup-api
      tags:
      - signup-api
  /2022-09-01-00/subscription:
    get:
      operationId: subscription-api#ListSubscriptions
      parameters:
      - allowEmptyValue: true
        description: Service Id
        example: service-12345678
        explode: true
        in: query
        name: serviceId
        required: false
        schema:
          description: ID of a Service
          example: Reprehenderit error.
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - sub-12345678
                - sub-abcdefgh
                - sub-1234efgh
                nextPageToken: next-token
                subscriptions:
                - accountConfigIdentityId: org-12345678
                  cloudProviderNames:
                  - aws
                  - gcp
                  createdAt: 2019-01-01T00:00:00Z
                  defaultSubscription: true
                  id: sub-12345678
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  roleType: root
                  rootUserId: user-12345678
                  serviceId: s-12345678
                  serviceLogoURL: Autem deleniti dolores quisquam quia facere.
                  serviceName: MySQL multi-writer service
                  serviceOrgId: org-12345678
                  serviceOrgName: Omnistrate
                  status: ACTIVE
                  subscriptionOwnerName: John Doe
                - accountConfigIdentityId: org-12345678
                  cloudProviderNames:
                  - aws
                  - gcp
                  createdAt: 2019-01-01T00:00:00Z
                  defaultSubscription: true
                  id: sub-12345678
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  roleType: root
                  rootUserId: user-12345678
                  serviceId: s-12345678
                  serviceLogoURL: Autem deleniti dolores quisquam quia facere.
                  serviceName: MySQL multi-writer service
                  serviceOrgId: org-12345678
                  serviceOrgName: Omnistrate
                  status: ACTIVE
                  subscriptionOwnerName: John Doe
                - accountConfigIdentityId: org-12345678
                  cloudProviderNames:
                  - aws
                  - gcp
                  createdAt: 2019-01-01T00:00:00Z
                  defaultSubscription: true
                  id: sub-12345678
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  roleType: root
                  rootUserId: user-12345678
                  serviceId: s-12345678
                  serviceLogoURL: Autem deleniti dolores quisquam quia facere.
                  serviceName: MySQL multi-writer service
                  serviceOrgId: org-12345678
                  serviceOrgName: Omnistrate
                  status: ACTIVE
                  subscriptionOwnerName: John Doe
                - accountConfigIdentityId: org-12345678
                  cloudProviderNames:
                  - aws
                  - gcp
                  createdAt: 2019-01-01T00:00:00Z
                  defaultSubscription: true
                  id: sub-12345678
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  roleType: root
                  rootUserId: user-12345678
                  serviceId: s-12345678
                  serviceLogoURL: Autem deleniti dolores quisquam quia facere.
                  serviceName: MySQL multi-writer service
                  serviceOrgId: org-12345678
                  serviceOrgName: Omnistrate
                  status: ACTIVE
                  subscriptionOwnerName: John Doe
              schema:
                $ref: '#/components/schemas/ListSubscriptionsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list subscriptions"
      security:
      - api_key_header_Authorization: []
      summary: ListSubscriptions subscription-api
      tags:
      - subscription-api
    post:
      operationId: subscription-api#CreateSubscription
      requestBody:
        content:
          application/json:
            example:
              productTierId: pt-12345678
              serviceId: s-12345678
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: sub-12345678
              schema:
                description: Subscription ID created
                example: sub-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a subscription"
      security:
      - api_key_header_Authorization: []
      summary: CreateSubscription subscription-api
      tags:
      - subscription-api
  /2022-09-01-00/subscription/{id}:
    delete:
      operationId: subscription-api#DeleteSubscription
      parameters:
      - description: The subscription ID
        example: sub-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription
          example: Rerum sunt.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a subscription"
      security:
      - api_key_header_Authorization: []
      summary: DeleteSubscription subscription-api
      tags:
      - subscription-api
    get:
      operationId: subscription-api#DescribeSubscription
      parameters:
      - description: The subscription ID
        example: sub-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription
          example: Optio eum soluta qui ullam et necessitatibus.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                accountConfigIdentityId: org-12345678
                cloudProviderNames:
                - aws
                - gcp
                createdAt: 2019-01-01T00:00:00Z
                defaultSubscription: true
                id: sub-12345678
                productTierId: pt-12345678
                productTierName: Omnistrate Multi Tenancy
                roleType: root
                rootUserId: user-12345678
                serviceId: s-12345678
                serviceLogoURL: Maiores dolor omnis qui omnis ut.
                serviceName: MySQL multi-writer service
                serviceOrgId: org-12345678
                serviceOrgName: Omnistrate
                status: ACTIVE
                subscriptionOwnerName: John Doe
              schema:
                $ref: '#/components/schemas/DescribeSubscriptionResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a subscription"
      security:
      - api_key_header_Authorization: []
      summary: DescribeSubscription subscription-api
      tags:
      - subscription-api
  /2022-09-01-00/subscription/request:
    get:
      operationId: subscription-request-api#ListSubscriptionRequests
      parameters:
      - allowEmptyValue: true
        description: The status of the subscription request to filter by
        example: PENDING
        explode: true
        in: query
        name: status
        required: false
        schema:
          description: The status of the subscription request
          example: PENDING|APPROVED|DENIED|CANCELLED
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - subr-12345678
                - subr-abcdefgh
                - subr-1234efgh
                nextPageToken: next-token
                subscriptionRequests:
                - createdAt: 2019-01-01T00:00:00Z
                  id: subr-12345678
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  rootUserEmail: abc@gmail.com
                  rootUserId: org-12345678
                  rootUserName: John Doe
                  serviceId: s-12345678
                  serviceLogoURL: Necessitatibus non libero consequatur dolor ad eum.
                  serviceName: MySQL multi-writer service
                  status: PENDING
                  updatedAt: 2019-01-01T00:00:00Z
                  updatedByUserId: user-12345678
                  updatedByUserName: John Doe
                - createdAt: 2019-01-01T00:00:00Z
                  id: subr-12345678
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  rootUserEmail: abc@gmail.com
                  rootUserId: org-12345678
                  rootUserName: John Doe
                  serviceId: s-12345678
                  serviceLogoURL: Necessitatibus non libero consequatur dolor ad eum.
                  serviceName: MySQL multi-writer service
                  status: PENDING
                  updatedAt: 2019-01-01T00:00:00Z
                  updatedByUserId: user-12345678
                  updatedByUserName: John Doe
              schema:
                $ref: '#/components/schemas/ListSubscriptionRequestsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a subscription"
      security:
      - api_key_header_Authorization: []
      summary: ListSubscriptionRequests subscription-request-api
      tags:
      - subscription-request-api
    post:
      operationId: subscription-request-api#CreateSubscriptionRequest
      requestBody:
        content:
          application/json:
            example:
              productTierId: pt-12345678
              serviceId: s-12345678
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequestBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: subr-12345678
              schema:
                description: Subscription request ID created
                example: subr-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a subscription"
      security:
      - api_key_header_Authorization: []
      summary: CreateSubscriptionRequest subscription-request-api
      tags:
      - subscription-request-api
  /2022-09-01-00/subscription/request/{id}:
    delete:
      operationId: subscription-request-api#CancelSubscriptionRequest
      parameters:
      - description: The subscription ID
        example: subr-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription Request
          example: Eos maiores totam quos debitis.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a subscription"
      security:
      - api_key_header_Authorization: []
      summary: CancelSubscriptionRequest subscription-request-api
      tags:
      - subscription-request-api
    get:
      operationId: subscription-request-api#DescribeSubscriptionRequest
      parameters:
      - description: The subscription ID
        example: subr-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription Request
          example: Numquam cumque at delectus.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                createdAt: 2019-01-01T00:00:00Z
                id: subr-12345678
                productTierId: pt-12345678
                productTierName: Omnistrate Multi Tenancy
                rootUserEmail: abc@gmail.com
                rootUserId: org-12345678
                rootUserName: John Doe
                serviceId: s-12345678
                serviceLogoURL: Qui voluptate culpa.
                serviceName: MySQL multi-writer service
                status: PENDING
                updatedAt: 2019-01-01T00:00:00Z
                updatedByUserId: user-12345678
                updatedByUserName: John Doe
              schema:
                $ref: '#/components/schemas/DescribeSubscriptionRequestResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a subscription"
      security:
      - api_key_header_Authorization: []
      summary: DescribeSubscriptionRequest subscription-request-api
      tags:
      - subscription-request-api
  /2022-09-01-00/update-password:
    post:
      operationId: users-api#UpdatePassword
      requestBody:
        content:
          application/json:
            example:
              currentPassword: currentPassword
              currentPasswordHash: currentPasswordHash
              password: password
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update password"
      security:
      - api_key_header_Authorization: []
      summary: UpdatePassword users-api
      tags:
      - users-api
  /2022-09-01-00/usage:
    get:
      operationId: usage-api#GetCurrentPlanUsage
      responses:
        "200":
          content:
            application/json:
              example:
                endTime: 2021-01-01T00:00:00.000Z
                planName: STARTER
                startTime: 2021-01-01T00:00:00.000Z
                usage:
                - dimension: core/hours
                  total: 0.67
              schema:
                $ref: '#/components/schemas/GetCurrentUsageResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get usage"
      security:
      - api_key_header_Authorization: []
      summary: GetCurrentPlanUsage usage-api
      tags:
      - usage-api
  /2022-09-01-00/user:
    delete:
      operationId: users-api#DeleteUser
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete user"
      security:
      - api_key_header_Authorization: []
      summary: DeleteUser users-api
      tags:
      - users-api
    get:
      operationId: users-api#DescribeUser
      responses:
        "200":
          content:
            application/json:
              example:
                address:
                  addressLine1: 1234 Main St
                  addressLine2: Apt 123
                  addressLine3: Building 123
                  city: San Francisco
                  country: US
                  state: CA
                  zip: "94123"
                createdAt: 2023-01-10T00:00:00Z
                email: abc@gmail.com
                id: user-abcd1234
                lastModifiedAt: 2023-01-20T00:00:00Z
                name: John Dae
                orgDescription: ACME Inc.
                orgFavIconURL: Blanditiis perferendis a odio.
                orgId: org-aKQ8G13QeR
                orgLogoURL: Laudantium quo distinctio minus nostrum nulla ex.
                orgName: ACME
                orgPrivacyPolicy: Et repellendus ducimus nisi.
                orgSupportEmail: support@example.com
                orgTermsOfUse: Soluta eveniet dolor veniam.
                orgURL: something.acme
                planName: STARTER
                roleType: reader
              schema:
                $ref: '#/components/schemas/DescribeUserResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: DescribeUser users-api
      tags:
      - users-api
  /2022-09-01-00/user/{id}:
    patch:
      operationId: users-api#UpdateUser
      parameters:
      - description: The User ID
        example: user-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The User ID
          example: user-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              address:
                addressLine1: 1234 Main St
                addressLine2: Apt 123
                addressLine3: Building 123
                city: San Francisco
                country: US
                state: CA
                zip: "94123"
              name: John Dae
              orgDescription: ACME Inc.
              orgFavIconURL: http://bins.biz/dudley
              orgLogoURL: http://powlowskigrant.net/ezekiel
              orgName: ACME
              orgPrivacyPolicy: Explicabo facere in nobis necessitatibus.
              orgSupportEmail: support@example.com
              orgTermsOfUse: Minus sint esse delectus ut exercitationem neque.
              orgURL: something.acme
            schema:
              $ref: '#/components/schemas/UpdateUserRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: UpdateUser users-api
      tags:
      - users-api
  /2022-09-01-00/users/{id}/regenerate-token:
    post:
      operationId: signup-api#RegenerateToken
      parameters:
      - example: user-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: user-abcd1234
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to regenerate token"
      summary: RegenerateToken signup-api
      tags:
      - signup-api
  /2022-09-01-00/validate-token:
    post:
      operationId: signup-api#ValidateToken
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
            schema:
              $ref: '#/components/schemas/ValidateTokenRequestBody'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to validate the token"
      summary: ValidateToken signup-api
      tags:
      - signup-api
  /2022-09-01-00/version:
    get:
      description: Registration service version endpoint
      operationId: global-api#registrationServiceVersion
      responses:
        "200":
          content:
            application/json:
              example:
                apiVersion: "8"
                buildCommitSHA: 1234567890abcdef1234567890abcdef12345678
                buildTimestamp: 2020-01-01T00:00:00Z
              schema:
                $ref: '#/components/schemas/OmnistrateServiceVersionResult'
          description: OK response.
      summary: registrationServiceVersion global-api
      tags:
      - global-api
components:
  schemas:
    APIEntity:
      example:
        inputParameters:
        - defaultValue: null
          description: The name of the server
          displayName: Server Name
          isList: false
          key: serverName
          modifiable: true
          options: null
          required: true
          type: string
        - defaultValue: option1
          description: The type of the server
          displayName: Server Type
          isList: false
          key: serverType
          modifiable: true
          options:
          - option1
          - option2
          required: true
          type: string
        outputParameters:
        - description: The name of the server
          displayName: Server Name
          isList: false
          key: serverName
          type: string
        - description: The type of the server
          displayName: Server Type
          isList: false
          key: serverType
          type: string
        verb: CREATE|DESCRIBE|LIST|UPDATE|DELETE
      properties:
        inputParameters:
          description: The input parameters
          example:
          - defaultValue: null
            description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            modifiable: true
            options: null
            required: true
            type: string
          - defaultValue: option1
            description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            modifiable: true
            options:
            - option1
            - option2
            required: true
            type: string
          items:
            $ref: '#/components/schemas/InputParameterEntity'
          type: array
        outputParameters:
          description: The output parameters
          example:
          - description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            type: string
          - description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            type: string
          items:
            $ref: '#/components/schemas/OutputParameterEntity'
          type: array
        verb:
          description: The API verb
          example: CREATE|DESCRIBE|LIST|UPDATE|DELETE
          type: string
      required:
      - inputParameters
      - outputParameters
      - verb
      type: object
    AWSPrivateLinkConfiguration:
      example:
        port: 80
        targetGroupName: my-target-group
      properties:
        port:
          description: The port of the target group
          example: 80
          format: int64
          type: integer
        targetGroupName:
          description: The target group name
          example: my-target-group
          type: string
      required:
      - port
      - targetGroupName
      type: object
    AccountConfigIdentityIDResult:
      example:
        id: org-12345678
      properties:
        id:
          example: org-12345678
          type: string
      required:
      - id
      type: object
    AddAccountConfigToServiceModelRequestBody:
      example:
        accountConfigId: ac-12345678
      properties:
        accountConfigId:
          description: The infrastructure account configuration ID
          example: ac-12345678
          type: string
      required:
      - accountConfigId
      type: object
    AddCapacityToResourceInstanceRequestBody:
      example:
        capacityToBeAdded: 3
      properties:
        capacityToBeAdded:
          description: Number of replicas to be added
          example: 3
          format: int64
          type: integer
      required:
      - capacityToBeAdded
      type: object
    AddComputeInstanceTypeRequestBody:
      example:
        cloudProviderName: aws
        instanceType: t3.micro
      properties:
        cloudProviderName:
          description: The cloud provider for this compute instance type config
          example: aws
          type: string
        instanceType:
          description: The instance type for this compute instance type config
          example: t3.micro
          type: string
      required:
      - cloudProviderName
      - instanceType
      type: object
    AddCustomDNSToResourceInstanceRequestBody:
      example:
        customDNS: my-custom-dns.com
        targetPort: 8080
      properties:
        customDNS:
          description: The custom DNS to add
          example: my-custom-dns.com
          type: string
        targetPort:
          description: The target port
          example: 8080
          format: int64
          type: integer
      required:
      - customDNS
      type: object
    AddResourceDependencyRequestBody:
      example:
        parameterMap:
          clusterId: writerId
          clusterOrg: userDatabase
      properties:
        parameterMap:
          additionalProperties:
            example: Soluta assumenda quod ab et iste vel.
            type: string
          description: A map of the source parameter to the dependency resource parameter
          example:
            clusterId: writerId
            clusterOrg: userDatabase
          type: object
      type: object
    AddStorageVolumeConfigRequestBody:
      example:
        mountPath: /data
      properties:
        mountPath:
          description: The path where the storage volume will be mounted
          example: /data
          type: string
      type: object
    AdditionalSecurityContext:
      example:
        AddCapabilities:
        - CAP_NET_ADMIN
        - CAP_NET_RAW
        DropCapabilities:
        - CAP_NET_ADMIN
        - CAP_NET_RAW
        SupplementalGroupIDs:
        - 1001
        - 999
      properties:
        AddCapabilities:
          description: Capabilities to add
          example:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          items:
            example: Architecto omnis.
            type: string
          type: array
        DropCapabilities:
          description: Capabilities to drop
          example:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          items:
            example: Delectus libero.
            type: string
          type: array
        SupplementalGroupIDs:
          description: Supplemental group IDs
          example:
          - 1001
          - 999
          items:
            example: 1862331791151979157
            format: int64
            type: integer
          type: array
      type: object
    Address:
      example:
        addressLine1: 1234 Main St
        addressLine2: Apt 123
        addressLine3: Building 123
        city: San Francisco
        country: US
        state: CA
        zip: "94123"
      properties:
        addressLine1:
          description: The street address
          example: 1234 Main St
          type: string
        addressLine2:
          description: Address Line 2
          example: Apt 123
          type: string
        addressLine3:
          description: Address Line 3
          example: Building 123
          type: string
        city:
          description: Name of the City
          example: San Francisco
          type: string
        country:
          description: Name of the Country
          example: US
          type: string
        state:
          description: Name of the State/Province/Region
          example: CA
          type: string
        zip:
          description: Zip code
          example: "94123"
          type: string
      required:
      - addressLine1
      - city
      - country
      - state
      - zip
      type: object
    AutoScalingMetricSpec:
      example:
        metricEndpoint: http://localhost:9187/metrics
        metricLabelName: label
        metricLabelValue: value
        metricName: metric_name
      properties:
        metricEndpoint:
          description: The local host endpoint to supply prometheus metric
          example: http://localhost:9187/metrics
          type: string
        metricLabelName:
          description: The prometheus metric label name for scaling
          example: label
          type: string
        metricLabelValue:
          description: The prometheus metric label value for scaling
          example: value
          type: string
        metricName:
          description: The prometheus metric name for scaling
          example: metric_name
          type: string
      required:
      - metricEndpoint
      - metricLabelName
      - metricLabelValue
      - metricName
      type: object
    AutoscalingPolicy:
      description: Autoscaling policy for compute nodes
      example:
        idleMinutesBeforeScalingDown: 1
        idleThreshold: 1
        maxReplicas: "4"
        minReplicas: "1"
        overUtilizedMinutesBeforeScalingUp: 1
        overUtilizedThreshold: 1
        scalingMetric:
          metricEndpoint: http://localhost:9187/metrics
          metricLabelName: label
          metricLabelValue: value
          metricName: metric_name
      properties:
        idleMinutesBeforeScalingDown:
          default: 5
          description: Minutes before scaling down the compute nodes in idle state
          example: 1
          format: int64
          type: integer
        idleThreshold:
          default: 20
          description: Metric value below threshold will be considered to be idle
          example: 1
          format: int64
          type: integer
        maxReplicas:
          description: Maximum number of compute nodes to provision
          example: "4"
          type: string
        minReplicas:
          description: Minimum number of compute nodes to provision
          example: "1"
          type: string
        overUtilizedMinutesBeforeScalingUp:
          default: 5
          description: Minutes before scaling up the compute nodes in overUtilized
            state
          example: 1
          format: int64
          type: integer
        overUtilizedThreshold:
          default: 80
          description: Metric value beyond threshold will be considered to be overUtilized
          example: 1
          format: int64
          type: integer
        scalingMetric:
          $ref: '#/components/schemas/AutoScalingMetricSpec'
      required:
      - maxReplicas
      - minReplicas
      type: object
    BackendPortConfiguration:
      example:
        associatedResourceIDs:
        - r-12345678
        - r-abcdef12
        backendPort: 8080
        ingressPort: 1234
      properties:
        associatedResourceIDs:
          description: The IDs of the resource associated with the backend port
          example:
          - r-12345678
          - r-abcdef12
          items:
            example: Odit consequatur nesciunt.
            type: string
          type: array
        backendPort:
          description: The port to forward traffic to
          example: 8080
          format: int64
          type: integer
        ingressPort:
          description: The ingress port to configure on the load balancer
          example: 1234
          format: int64
          type: integer
      required:
      - associatedResourceIDs
      - backendPort
      - ingressPort
      type: object
    BackupConfiguration:
      example:
        backupPeriodInHours: 24
        backupRetentionInDays: 7
      properties:
        backupPeriodInHours:
          description: The period in hours to take backups
          example: 24
          format: int64
          type: integer
        backupRetentionInDays:
          description: The number of days to retain backups
          example: 7
          format: int64
          type: integer
      required:
      - backupPeriodInHours
      - backupRetentionInDays
      type: object
    BackupStatus:
      example:
        earliestRestoreTime: 2021-09-01T00:00:00Z
      properties:
        earliestRestoreTime:
          description: The earliest restore time
          example: 2021-09-01T00:00:00Z
          type: string
      required:
      - earliestRestoreTime
      type: object
    BillingPlan:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        id: bp-12345678
        maxNumberofInstances: 5
        planName: STARTER
        pricing:
          cpuCoreHours: "0.001"
          memoryGiBHours: "0.0001"
          storageGiBHours: "0.0001"
        productTierId: pt-12345678
        serviceId: s-12345678
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        id:
          description: Product tier billing plan ID
          example: bp-12345678
          type: string
        maxNumberofInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        planName:
          description: Plan name
          example: STARTER
          type: string
        pricing:
          description: Pricing in dollars.
          example:
            cpuCoreHours: "0.001"
            memoryGiBHours: "0.0001"
            storageGiBHours: "0.0001"
        productTierId:
          description: Product tier ID
          example: pt-12345678
          type: string
        serviceId:
          description: Service ID
          example: s-12345678
          type: string
      required:
      - allowCreatesWhenPaymentNotConfigured
      - id
      - maxNumberofInstances
      - planName
      - pricing
      - productTierId
      - serviceId
      type: object
    BuildServiceFromComposeSpecRequestBody:
      example:
        configs:
          Velit qui voluptas alias.: Reiciendis et ducimus.
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        environment: dev
        environmentType: DEV
        fileContent: Labore commodi.
        name: MySQL multi-writer service
        release: true
        releaseAsPreferred: true
        releaseVersionName: mysql
        secrets:
          Culpa magnam.: Perferendis dolorem totam molestiae cupiditate et.
          Est accusantium quasi pariatur cupiditate.: Quis dolorem nulla unde eaque
            amet.
          Quos quaerat.: Eligendi fugiat aspernatur.
        serviceLogoURL: http://beerchamplin.name/breanna
      properties:
        configs:
          additionalProperties:
            example: Sit iusto ut pariatur.
            type: string
          description: Configs for the service. Key is the compose spec name of the
            config and value is base64 encoded config content
          example:
            Natus temporibus.: Temporibus fugiat voluptate.
          type: object
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        environment:
          description: The environment to build the service in
          example: dev
          type: string
        environmentType:
          description: The type of the environment
          example: DEV
          type: string
        fileContent:
          description: Base64 encoded Compose Spec YAML in docker compose format
          example: Rerum rem et saepe et voluptatem sit.
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        release:
          description: Release the service after building
          example: true
          type: boolean
        releaseAsPreferred:
          description: Release the service as preferred
          example: true
          type: boolean
        releaseVersionName:
          description: Release version name
          example: mysql
          type: string
        secrets:
          additionalProperties:
            example: Aliquam consequatur adipisci recusandae nisi omnis.
            type: string
          description: Secrets for the service. Key is the compose spec name of the
            secret and value is base64 encoded secret content
          example:
            Ad perspiciatis optio eveniet illum laudantium.: Unde et expedita excepturi
              vel ut.
            Et cumque voluptatibus blanditiis aut saepe.: Architecto earum.
          type: object
        serviceLogoURL:
          description: The logo for the service
          example: http://koelpinjohnston.org/eden
          format: uri
          type: string
      required:
      - fileContent
      - name
      type: object
    BuildServiceFromServicePlanSpecRequestBody:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        environment: dev
        environmentType: DEV
        fileContent: Cupiditate sint libero sed consequuntur.
        name: MySQL multi-writer service
        serviceLogoURL: http://dickilockman.org/dessie
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        environment:
          description: The environment to build the service in
          example: dev
          type: string
        environmentType:
          description: The type of the environment
          example: DEV
          type: string
        fileContent:
          description: Base64 encoded Compose Spec YAML in service plan configuration
            format
          example: Et sint temporibus et in ut.
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: http://zulauf.info/clay
          format: uri
          type: string
      required:
      - fileContent
      - name
      type: object
    BuildServiceFromServicePlanSpecResult:
      example:
        productTierID: pt-12345678
        serviceEnvironmentID: se-12345678
        serviceID: s-12345678
        undefinedResources:
          mysql: r-12345678
      properties:
        productTierID:
          description: The product tier ID of the built service plan
          example: pt-12345678
          type: string
        serviceEnvironmentID:
          description: The service environment ID of the built service
          example: se-12345678
          type: string
        serviceID:
          description: The service ID of the built service
          example: s-12345678
          type: string
        undefinedResources:
          additionalProperties:
            example: Cumque vel esse aut non.
            type: string
          description: Resources that appear in the service plan but were not defined
            in the spec. These resources were not processed during the build.
          example:
            mysql: r-12345678
          type: object
      required:
      - productTierID
      - serviceEnvironmentID
      - serviceID
      type: object
    Change:
      example:
        attributes:
          resourceId: r-12345678
        changeType: PENDING_NEW
        name: Customer metrics
      properties:
        attributes:
          additionalProperties:
            example: Libero magni.
            type: string
          description: Additional setting/component attributes
          example:
            resourceId: r-12345678
          type: object
        changeType:
          description: Type of the pending change
          example: PENDING_NEW
          type: string
        name:
          description: The name of the setting/component that changed
          example: Customer metrics
          type: string
      required:
      - attributes
      - changeType
      - name
      type: object
    ChangePasswordRequestBody:
      example:
        email: abc@gmail.com
        password: password
        token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
        token:
          example: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
          minLength: 1
          type: string
      required:
      - email
      - password
      - token
      type: object
    ChangePlanRequestBody:
      example:
        planName: STARTER
      properties:
        planName:
          description: The name of the plan this user is changing to
          example: STARTER
          type: string
      required:
      - planName
      type: object
    ChangeSet:
      example:
        categorizedResourceChanges:
          Et nemo delectus ea.:
            changes:
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            status: PENDING_UPDATE
          Expedita voluptatem nesciunt vel ea omnis et.:
            changes:
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            status: PENDING_UPDATE
          Nesciunt cupiditate culpa fugit.:
            changes:
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            status: PENDING_UPDATE
        imageConfigChanges:
          changeState: PENDING_NEW
          imageConfigId: imgc-12345678
          imageName: mysql
        infraConfigChanges:
          changeState: PENDING_NEW
          infraConfigId: ic-12345678
          name: MySQL Writer Infra Config
        overallResourceStatus: PENDING_UPDATE
        productTierFeatureChanges: PENDING_UPDATE
        resourceChanges: PENDING_DELETE
        resourceName: Culpa perferendis facilis consequuntur soluta libero quia.
      properties:
        categorizedResourceChanges:
          additionalProperties:
            $ref: '#/components/schemas/ChangeSummary'
          description: "Summary of all changes within a resource for each category\
            \ (ie. image, infra, product tier feature, etc.)"
          example:
            Aut inventore sit assumenda id qui suscipit.:
              changes:
              - attributes:
                  resourceId: r-12345678
                changeType: PENDING_NEW
                name: Customer metrics
              - attributes:
                  resourceId: r-12345678
                changeType: PENDING_NEW
                name: Customer metrics
              - attributes:
                  resourceId: r-12345678
                changeType: PENDING_NEW
                name: Customer metrics
              status: PENDING_UPDATE
            Inventore ut sunt ad reprehenderit.:
              changes:
              - attributes:
                  resourceId: r-12345678
                changeType: PENDING_NEW
                name: Customer metrics
              - attributes:
                  resourceId: r-12345678
                changeType: PENDING_NEW
                name: Customer metrics
              - attributes:
                  resourceId: r-12345678
                changeType: PENDING_NEW
                name: Customer metrics
              status: PENDING_UPDATE
          type: object
        imageConfigChanges:
          $ref: '#/components/schemas/ImageConfigChangeSummary'
        infraConfigChanges:
          $ref: '#/components/schemas/InfraConfigChangeSummary'
        overallResourceStatus:
          description: The overall resource change status across all change categories
          example: PENDING_UPDATE
          type: string
        productTierFeatureChanges:
          description: The product tier feature changes for the resource.
          example: PENDING_UPDATE
          type: string
        resourceChanges:
          description: The service api changes for the resource.
          example: PENDING_DELETE
          type: string
        resourceName:
          description: The name of the resource
          example: Nesciunt doloribus atque dicta cum et quidem.
          type: string
      required:
      - categorizedResourceChanges
      - overallResourceStatus
      type: object
    ChangeSummary:
      example:
        changes:
        - attributes:
            resourceId: r-12345678
          changeType: PENDING_NEW
          name: Customer metrics
        - attributes:
            resourceId: r-12345678
          changeType: PENDING_NEW
          name: Customer metrics
        status: PENDING_UPDATE
      properties:
        changes:
          description: List of individual changes
          example:
          - attributes:
              resourceId: r-12345678
            changeType: PENDING_NEW
            name: Customer metrics
          - attributes:
              resourceId: r-12345678
            changeType: PENDING_NEW
            name: Customer metrics
          - attributes:
              resourceId: r-12345678
            changeType: PENDING_NEW
            name: Customer metrics
          items:
            $ref: '#/components/schemas/Change'
          type: array
        status:
          description: The product tier feature changes for the resource.
          example: PENDING_UPDATE
          type: string
      required:
      - changes
      - status
      type: object
    CheckIfContainerImageAccessibleResult:
      example:
        errorMsg: Consequatur expedita dolorem ex rerum pariatur alias.
        imageAccessible: false
      properties:
        errorMsg:
          description: Error message if the image is not accessible
          example: Quia sed ut sequi sit est perspiciatis.
          type: string
        imageAccessible:
          description: Indicates if the image is accessible
          example: false
          type: boolean
      required:
      - imageAccessible
      type: object
    ConsumptionServiceAuthResult:
      example:
        token: nna
      properties:
        token:
          description: JWT token used to perform authorization
          example: "y"
          minLength: 1
          type: string
      required:
      - token
      type: object
    ContactusRequestBody:
      example:
        company: ABC
        email: abc@gmail.com
        message: this is a test
        name: John Doe
      properties:
        company:
          example: ABC
          minLength: 1
          type: string
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        message:
          example: this is a test
          minLength: 1
          type: string
        name:
          example: John Doe
          minLength: 1
          type: string
      required:
      - company
      - email
      - message
      - name
      type: object
    CopyProductTierRequestBody:
      example:
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        description: A premium product tier
        documentation: Any documentation
        gcpRegions:
        - us-central1
        name: Premium
        planDescription: A premium plan
        pricing:
          price1: value1
        serviceModelId: sm-12345678
        support: Any support
        targetTierType: OMNISTRATE_DEDICATED_TENANCY
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Minus recusandae quo architecto odio vitae ratione.
            type: string
          type: array
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: A veritatis.
            type: string
          type: array
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricing:
          description: Pricing
          example:
            price1: value1
        serviceModelId:
          description: Service model ID
          example: sm-12345678
          type: string
        support:
          description: Support
          example: Any support
          type: string
        targetTierType:
          description: Tier type
          example: OMNISTRATE_DEDICATED_TENANCY
          type: string
      required:
      - description
      - name
      - serviceModelId
      type: object
    CopyServiceModelRequestBody:
      example:
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        features:
        - configuration:
            Modi nam minima voluptatibus error.: Accusantium aut.
          feature: Ut ut non impedit optio eum velit.
        - configuration:
            Modi nam minima voluptatibus error.: Accusantium aut.
          feature: Ut ut non impedit optio eum velit.
        name: MySQL multi-writer service hosted model
        targetServiceModelType: CUSTOMER_HOSTED
        targetTierType: OMNISTRATE_DEDICATED_TENANCY
      properties:
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            example: Enim non optio itaque aut nam.
            type: string
          type: array
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        features:
          description: Enabled service model features
          example:
          - configuration:
              Modi nam minima voluptatibus error.: Accusantium aut.
            feature: Ut ut non impedit optio eum velit.
          - configuration:
              Modi nam minima voluptatibus error.: Accusantium aut.
            feature: Ut ut non impedit optio eum velit.
          - configuration:
              Modi nam minima voluptatibus error.: Accusantium aut.
            feature: Ut ut non impedit optio eum velit.
          items:
            $ref: '#/components/schemas/ServiceModelFeatureDetail'
          type: array
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        targetServiceModelType:
          description: The model type encapsulating this service
          example: CUSTOMER_HOSTED
          type: string
        targetTierType:
          description: Target product tier type
          example: OMNISTRATE_DEDICATED_TENANCY
          type: string
      required:
      - description
      - name
      - targetServiceModelType
      type: object
    CreateAccountConfigRequestBody:
      example:
        awsAccessKey: Sapiente magni in molestiae asperiores molestiae aliquam.
        awsAccountID: "123456789012"
        awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
        awsSecretKey: Quam quis eaque.
        byoaInstanceID: instance-12345678
        cloudProviderId: infra-12345678
        description: An AWS account hosting multiple dev environments
        gcpProjectID: my-project
        gcpProjectNumber: "123456789012"
        gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
        gcpServiceAccountKey: Aut libero.
        name: Dev AWS account
      properties:
        awsAccessKey:
          description: The AWS access key
          example: Modi ut deserunt.
          type: string
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        awsBootstrapRoleARN:
          description: The security role ARN or service account ARN that grants access
            to operate the infra
          example: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          type: string
        awsSecretKey:
          description: The AWS secret key
          example: Porro autem eius eveniet ab omnis repudiandae.
          type: string
        byoaInstanceID:
          description: The BYOA instance ID that this account config is tied to
          example: instance-12345678
          type: string
        cloudProviderId:
          description: Cloud Provider ID to operate on
          example: infra-12345678
          type: string
        description:
          description: The description for the account
          example: An AWS account hosting multiple dev environments
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        gcpProjectNumber:
          description: The GCP project number
          example: "123456789012"
          type: string
        gcpServiceAccountEmail:
          description: The GCP service account email
          example: bootstrap@my-project.iam.gserviceaccount.com
          type: string
        gcpServiceAccountKey:
          description: The GCP service account key
          example: Id aut explicabo.
          type: string
        name:
          description: The name of the account
          example: Dev AWS account
          type: string
      required:
      - cloudProviderId
      - description
      - name
      type: object
    CreateComputeConfigRequestBody:
      example:
        autoscalingPolicy:
          maxReplicas: 4
          minReplicas: 1
        cpuArchitecture: X86_64|ARM64
        description: my compute config description
        name: my compute config
        replicaCount: "3"
        resources:
          limits:
            cpu: "1"
            memory: 500Mi
          requests:
            cpu: "0.5"
            memory: 200Mi
        rootVolumeSizeGi: 10
        warmPoolConfiguration:
          minimumNodesInPool: 1
      properties:
        autoscalingPolicy:
          $ref: '#/components/schemas/AutoscalingPolicy'
        cpuArchitecture:
          description: Processor architecture
          example: X86_64|ARM64
          type: string
        description:
          description: Description of the compute config
          example: my compute config description
          minLength: 1
          type: string
        name:
          description: Name of the compute config
          example: my compute config
          minLength: 1
          type: string
        replicaCount:
          description: Number of replicas to provision for this logical pool of nodes
            per instance of the resource
          example: "3"
          type: string
        resources:
          $ref: '#/components/schemas/ResourceSpec'
        rootVolumeSizeGi:
          description: Size of the root volume in Gi
          example: 10
          format: int64
          type: integer
        warmPoolConfiguration:
          $ref: '#/components/schemas/WarmPoolConfiguration'
      required:
      - description
      - name
      type: object
    CreateCustomDomainRequestBody:
      example:
        customDomain: mydomain.dev
        description: Description of the domain
        name: Dev domain
        route53Configuration:
          awsAccountID: "123456789012"
      properties:
        customDomain:
          description: The root domain of the domain to use as suffix
          example: mydomain.dev
          type: string
        description:
          description: The description for the domain
          example: Description of the domain
          type: string
        name:
          description: The name of the custom domain
          example: Dev domain
          type: string
        route53Configuration:
          $ref: '#/components/schemas/Route53Configuration'
      required:
      - customDomain
      - description
      - name
      - route53Configuration
      type: object
    CreateCustomNetworkRequestBody:
      example:
        cidr: 10.0.0.0/16
        cloudProviderName: aws
        cloudProviderRegion: us-east-1
        name: Prod us-east-1
        networkFeaturesConfiguration:
          isPrivateLinkEnabled: false
      properties:
        cidr:
          default: 10.0.0.0/16
          description: CIDR block for the network
          example: 10.0.0.0/16
          format: cidr
          type: string
        cloudProviderName:
          description: The name of the cloud provider that the instance is running
            on.
          example: aws
          type: string
        cloudProviderRegion:
          description: The region of the cloud provider that the instance is running
            in.
          example: us-east-1
          type: string
        name:
          description: User friendly network name to help distinguish networks with
            same CIDRs
          example: Prod us-east-1
          type: string
        networkFeaturesConfiguration:
          $ref: '#/components/schemas/NetworkFeaturesConfiguration'
      required:
      - cloudProviderName
      - cloudProviderRegion
      type: object
    CreateDeploymentConfigRequestBody:
      example:
        description: A production deployment config
        infraRollConfiguration:
          infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
          maximumNumberOfResourceInstancesPerBatch: 1
          maximumUnavailableReplicas: 1
        name: Production
        rolloutPriorityList:
        - region-12345678
        - region-abcd1234
        - region-3c3c3c3c
      properties:
        description:
          description: A brief description of the deployment config
          example: A production deployment config
          type: string
        infraRollConfiguration:
          $ref: '#/components/schemas/InfraRollConfiguration'
        name:
          description: Name of the deployment config
          example: Production
          type: string
        rolloutPriorityList:
          example:
          - region-12345678
          - region-abcd1234
          - region-3c3c3c3c
          items:
            example: Nostrum recusandae consequuntur quia molestias.
            type: string
          type: array
      required:
      - description
      - name
      type: object
    CreateIdentityProviderRequestBody:
      example:
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
        identityProviderName: Google
      properties:
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
        identityProviderName:
          description: The name of the Identity Provider
          example: Google
          type: string
      required:
      - clientId
      - clientSecret
      - identityProviderName
      type: object
    CreateImageConfigRequestBody:
      example:
        customImageCommandsAndArgs:
          args:
          - -d
          - mysql
          commands:
          - echo
          - "Hello, World!"
        description: A image configuration for my new entity
        imageName: mysql
        imageRegistryId: ir-12345678
        imageSignaturePublicKeyPEM: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        imageTag: latest
        serviceEnvironmentId: se-12345678
      properties:
        customImageCommandsAndArgs:
          $ref: '#/components/schemas/CustomImageCommandsAndArgs'
        description:
          description: A brief description of the image configuration
          example: A image configuration for my new entity
          type: string
        imageName:
          description: Name of the container image
          example: mysql
          minLength: 1
          type: string
        imageRegistryId:
          description: The image registry ID to use for the infra
          example: ir-12345678
          type: string
        imageSignaturePublicKeyPEM:
          description: PEM-encoded Public key part of the key used to sign the container
            image
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        imageTag:
          default: latest
          description: Tag representing the specific software image version
          example: latest
          type: string
        serviceEnvironmentId:
          description: The service environment ID
          example: se-12345678
          type: string
      required:
      - description
      - imageName
      - serviceEnvironmentId
      type: object
    CreateImageRegistryRequestBody:
      example:
        description: DockerHub is a public Docker Image Registry
        host: docker.io
        name: DockerHub
        password: mypassword
        username: myusername
      properties:
        description:
          description: A brief description of the Image Registry
          example: DockerHub is a public Docker Image Registry
          type: string
        host:
          description: The Image Registry host
          example: docker.io
          type: string
        name:
          description: Name of the Image Registry
          example: DockerHub
          type: string
        password:
          description: The password to use when authenticating to the Image Registry
          example: mypassword
          type: string
        username:
          description: The username to use when authenticating to the Image Registry
          example: myusername
          type: string
      required:
      - description
      - host
      - name
      type: object
    CreateInfraConfigRequestBody:
      example:
        computeConfigId: cc-12345678
        customTag:
          key: customKey
          value: customValue
        description: Infra config used for the base tier MySQL service
        name: MySQL Writer Infra Config
        networkConfigId: nc-12345678
        serviceEnvironmentId: se-12345678
        storageConfigId: sc-12345678
      properties:
        computeConfigId:
          description: The compute config ID
          example: cc-12345678
          type: string
        customTag:
          $ref: '#/components/schemas/EnvironmentVariable'
        description:
          description: The description for the infra config
          example: Infra config used for the base tier MySQL service
          type: string
        name:
          description: The name of the infra config
          example: MySQL Writer Infra Config
          type: string
        networkConfigId:
          description: The network config ID
          example: nc-12345678
          type: string
        serviceEnvironmentId:
          description: The service environment ID
          example: se-12345678
          type: string
        storageConfigId:
          description: The storage config ID
          example: sc-12345678
          type: string
      required:
      - description
      - name
      - serviceEnvironmentId
      type: object
    CreateInputParameterRequestBody:
      example:
        defaultValue: default value
        dependentResourceId: r-12345678
        description: Iste vero praesentium architecto ex.
        hasOptions: true
        isList: true
        key: wn
        labeledOptions:
          large: t3.xlarge
          medium: t3.large
          small: t3.medium
        limits:
          max: Quis aut.
          maxLength: Similique quia aliquid.
          min: Ipsum tempore quis et facilis velit.
          minLength: Aut molestiae possimus ex consequuntur odio.
        modifiable: false
        name: q0x
        options:
        - a
        - b
        - c
        - default value
        required: true
        resourceId: r-12345678
        type: Nulla deleniti consequatur.
      properties:
        defaultValue:
          description: Default value to use for an optional input parameter represented
            as a string
          example: default value
          type: string
        dependentResourceId:
          description: The ID of the resource whose instance this input parameter
            depends on
          example: r-12345678
          type: string
        description:
          description: A brief description of the input parameter
          example: Quia doloremque rerum ducimus.
          type: string
        hasOptions:
          default: false
          description: Marks the input parameter to be selectable from a list of values
          example: true
          type: boolean
        isList:
          default: false
          description: Marks the input parameter as a list of values
          example: true
          type: boolean
        key:
          description: Key of the input parameter
          example: yw
          minLength: 1
          pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
          type: string
        labeledOptions:
          additionalProperties:
            example: Quod ut quis voluptatum consectetur.
            type: string
          description: "A map for labeled options. The key is the label and the value\
            \ is the option. When the option is selected, the label will be displayed\
            \ to the end customer. Specify either options or labeledOptions when defining\
            \ the input parameter."
          example:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          type: object
        limits:
          $ref: '#/components/schemas/Limits'
        modifiable:
          description: Marks the input parameter as immutable
          example: true
          type: boolean
        name:
          description: External name for the input parameter
          example: "n"
          minLength: 1
          type: string
        options:
          description: A list of options to restrict the value of the input parameter
            to (represented as a string)
          example:
          - a
          - b
          - c
          - default value
          items:
            example: Itaque nihil voluptatum.
            type: string
          type: array
        required:
          description: Enforces the input parameter as a required parameter
          example: true
          type: boolean
        resourceId:
          description: The ID of the resource that this input parameter belongs to
          example: r-12345678
          type: string
        type:
          example: Laborum qui numquam libero repudiandae.
          type: string
      required:
      - description
      - key
      - modifiable
      - name
      - required
      - resourceId
      - type
      type: object
    CreateNetworkConfigRequestBody:
      example:
        description: A multi-zone HA network config
        endpointPerReplica: true
        internal: true
        name: Multi-zone
        openPorts:
        - 1299
        - 3306
        privateNetworkingConfiguration:
          privateLinkConfiguration:
            awsPrivateLinkConfigurations:
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
        publicNetworkingConfiguration:
          enableClusterLoadBalancer: true
          enableNodeLoadBalancer: true
        stableEgressIP: true
        tlsTerminationPort: 443
        zoneConfiguration: Totam deserunt sint velit ut.
      properties:
        description:
          description: A brief description of the network config
          example: A multi-zone HA network config
          type: string
        endpointPerReplica:
          description: Generates a DNS endpoint per-replica for this network config
          example: true
          type: boolean
        internal:
          default: false
          description: Restrict access to this network config to the internal network
          example: true
          type: boolean
        name:
          description: Name of the network config
          example: Multi-zone
          type: string
        openPorts:
          description: Ports to map to the generated DNS endpoint
          example:
          - 1299
          - 3306
          items:
            example: 4915177952079217346
            format: int64
            type: integer
          type: array
        privateNetworkingConfiguration:
          $ref: '#/components/schemas/PrivateNetworkingConfiguration'
        publicNetworkingConfiguration:
          $ref: '#/components/schemas/PublicNetworkingConfiguration'
        stableEgressIP:
          description: Enable stable egress IP
          example: true
          type: boolean
        tlsTerminationPort:
          description: The port that hosts the reverse proxy for TLS termination
          example: 443
          format: int64
          type: integer
        zoneConfiguration:
          description: The preferred type of zonal availability for this resource
            and the specific zone(s) to deploy in
          example: Reiciendis ut asperiores rem cumque aut aut.
          type: string
      required:
      - description
      - endpointPerReplica
      - name
      type: object
    CreateOutputParameterRequestBody:
      example:
        description: Username of the user created in the target system
        key: username
        name: Username
        resourceId: r-12345678
        value: johndoe
        valueRef: $var.username
        valueType: Non animi ipsum nam eius quo natus.
      properties:
        description:
          description: Description of the output variable being exported
          example: Username of the user created in the target system
          minLength: 1
          type: string
        key:
          description: Key of the output variable being exported
          example: username
          minLength: 1
          pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
          type: string
        name:
          description: External name of the output variable being exported
          example: Username
          minLength: 1
          type: string
        resourceId:
          description: The ID of the resource that this output parameter belongs to
          example: r-12345678
          type: string
        value:
          description: Value of the output variable being exported
          example: johndoe
          type: string
        valueRef:
          description: Reference to another variable that will be used to set the
            value of the output variable being exported
          example: $var.username
          type: string
        valueType:
          example: Hic qui molestiae nisi.
          type: string
      required:
      - description
      - key
      - name
      - resourceId
      type: object
    CreateProductTierBillingPlanRequestBody:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        maxNumberofInstances: 5
        planName: STARTER
        pricing:
          cpuCoreHours: "0.001"
          memoryGiBHours: "0.0001"
          storageGiBHours: "0.0001"
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        maxNumberofInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        planName:
          description: Plan name
          example: STARTER
          type: string
        pricing:
          description: Pricing in dollars.
          example:
            cpuCoreHours: "0.001"
            memoryGiBHours: "0.0001"
            storageGiBHours: "0.0001"
      required:
      - allowCreatesWhenPaymentNotConfigured
      - maxNumberofInstances
      - planName
      - pricing
      type: object
    CreateProductTierRequestBody:
      example:
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        description: A premium product tier
        documentation: Any documentation
        gcpRegions:
        - us-central1
        isDisabled: false
        name: Premium
        planDescription: A premium plan
        pricing:
          price1: value1
        serviceModelId: sm-12345678
        support: Any support
        tierType: OMNISTRATE_DEDICATED_TENANCY
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Illo cum aut corporis sit ea.
            type: string
          type: array
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Cupiditate consequatur sit neque delectus.
            type: string
          type: array
        isDisabled:
          description: Create the product tier in a disabled state. Enabling the product
            tier will let end-customers subscribe and use the service plan.
          example: false
          type: boolean
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricing:
          description: Pricing
          example:
            price1: value1
        serviceModelId:
          description: Service model ID
          example: sm-12345678
          type: string
        support:
          description: Support
          example: Any support
          type: string
        tierType:
          description: Tier type
          example: OMNISTRATE_DEDICATED_TENANCY
          type: string
      required:
      - description
      - name
      - planDescription
      - serviceModelId
      - tierType
      type: object
    CreateResourceInstanceRequestBody:
      example:
        cloud_provider: aws
        custom_network_id: n-1234567890
        externalBillingId: external-billing-id-1234
        network_type: PUBLIC
        region: us-east-1
        requestParams:
          param1: value1
          param2: value2
      properties:
        cloud_provider:
          description: The cloud provider name
          example: aws
          type: string
        custom_network_id:
          description: Custom network for resource
          example: n-1234567890
          type: string
        externalBillingId:
          description: The external billing id to record which customer should pay
            for this resource instance
          example: external-billing-id-1234
          type: string
        network_type:
          description: The network type
          example: PUBLIC
          type: string
        region:
          description: The region code
          example: us-east-1
          type: string
        requestParams:
          description: The request parameters
          example:
            param1: value1
            param2: value2
      type: object
    CreateResourceInstanceResponseBody:
      example:
        id: Rerum consequuntur.
      properties:
        id:
          description: Resource Instance Id
          example: Omnis et.
          type: string
      type: object
    CreateResourceRequestBody:
      example:
        additionalSecurityContext:
          AddCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          DropCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          SupplementalGroupIDs:
          - 1001
          - 999
        backupConfiguration:
          backupPeriodInHours: 24
          backupRetentionInDays: 7
        customLabels:
          key: value
        customSysCTLs:
          net.ipv4.tcp_syncookies: "1"
        customULimits:
        - ULimitsName: NoProc
          ULimitsType: Soft
          ULimitsValue: 1000
        - ULimitsName: NoFile
          ULimitsType: Hard
          ULimitsValue: 2048
        description: A resource to manage a hosted public SaaS offering of a multi-writer
          MySQL service
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        fileSystemConfiguration:
          EFSFileSystemConfiguration:
            PerformanceMode: generalPurpose|maxIO
            ProvisionedThroughputInMibps: 125
            ThroughputMode: provisioned|bursting|elastic
        helmChartConfiguration:
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          password: my-password
          username: my-user
        imageConfigId: imgc-12345678
        infraConfigId: ic-12345678
        internal: true
        isProxy: true
        key: galera
        kustomizeConfiguration:
          gitConfiguration:
            accessToken: my-token
            referenceName: tags/v1.0.0
            repositoryUrl: https://github.com/username/myrepo
            userName: my-user
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          kustomizePath: /kustomize
        l4LoadBalancerConfiguration:
          ingressPortConfiguration:
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8080
            ingressPort: 1234
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8081
            ingressPort: 5678
          - associatedResourceIDs:
            - r-vwxybz12
            - r-poij122v
            backendPort: 8082
            ingressPort: 9012
        l7LoadBalancerConfiguration:
          paths:
          - associatedResourceID: r-12345678
            path: /path
            port: 8080
        name: Galera
        operatorCRDConfiguration:
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          outputParameters:
            expiresAt: $out.status.notAfter
            issuerName: letsencrypt-prod
          readinessConditions:
            $out.status.conditions[?(@.type=='Ready')].status: true
          supplementalFiles:
          - |
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
          - |-
            apiVersion: ingress.nginx.io/v1
            kind: IngressClass
            metadata:
              name: nginx
            spec:
              controller: nginx.org/ingress-controller
          template: |-
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
                email: test@example.com
                privateKeySecretRef:
                  name: letsencrypt-prod
                solvers:
                - http01:
                    ingress:
                      class: nginx
        productTierId: pt-12345678
        proxyType: PortsBasedProxy
        resourceDependencies:
        - parameterMap:
            userDatabase: clusterOrg
            writerId: clusterWriterId
          resourceId: r-12345678
        - parameterMap:
            readerId: clusterReaderId
            userDatabase: clusterOrg
          resourceId: r-abcdef12
        resourceType: Generic
        terraformConfigurations:
          Consequuntur nam optio.:
            gitConfiguration:
              accessToken: my-token
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
          Dignissimos inventore error illum ratione fugiat velit.:
            gitConfiguration:
              accessToken: my-token
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
          Repellendus odit consequatur aliquid.:
            gitConfiguration:
              accessToken: my-token
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
      properties:
        additionalSecurityContext:
          $ref: '#/components/schemas/AdditionalSecurityContext'
        backupConfiguration:
          $ref: '#/components/schemas/BackupConfiguration'
        customLabels:
          additionalProperties:
            example: Velit et.
            type: string
          description: Custom labels for the resource
          example:
            key: value
          type: object
        customSysCTLs:
          additionalProperties:
            example: Tempore sed.
            type: string
          description: Custom sysctl settings for the resource
          example:
            net.ipv4.tcp_syncookies: "1"
          type: object
        customULimits:
          description: Custom ulimits for the resource
          example:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          items:
            $ref: '#/components/schemas/CustomULimits'
          type: array
        description:
          description: A brief description of the resource
          example: A resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          type: string
        environmentVariables:
          description: The environment variables that this resource requires
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        fileSystemConfiguration:
          $ref: '#/components/schemas/FileSystemConfiguration'
        helmChartConfiguration:
          $ref: '#/components/schemas/HelmChartConfiguration'
        imageConfigId:
          description: The ID of the image configuration that this resource refers
            to
          example: imgc-12345678
          type: string
        infraConfigId:
          description: The ID of the infrastructure configuration that this resource
            refers to
          example: ic-12345678
          type: string
        internal:
          default: false
          description: Whether this resource is internal or not
          example: false
          type: boolean
        isProxy:
          default: false
          description: Whether this resource is a proxy or not
          example: true
          type: boolean
        key:
          description: The key of the resource
          example: galera
          type: string
        kustomizeConfiguration:
          $ref: '#/components/schemas/KustomizeConfiguration'
        l4LoadBalancerConfiguration:
          $ref: '#/components/schemas/L4LoadBalancerConfiguration'
        l7LoadBalancerConfiguration:
          $ref: '#/components/schemas/L7LoadBalancerConfiguration'
        name:
          description: Name of the resource
          example: Galera
          type: string
        operatorCRDConfiguration:
          $ref: '#/components/schemas/OperatorCRDConfiguration'
        productTierId:
          description: The product tier ID
          example: pt-12345678
          type: string
        proxyType:
          default: PortsBasedProxy
          description: A proxy type of resource
          example: PortsBasedProxy
          type: string
        resourceDependencies:
          example:
          - parameterMap:
              userDatabase: clusterOrg
              writerId: clusterWriterId
            resourceId: r-12345678
          - parameterMap:
              readerId: clusterReaderId
              userDatabase: clusterOrg
            resourceId: r-abcdef12
          items:
            $ref: '#/components/schemas/ResourceDependency'
          type: array
        resourceType:
          description: The type of the resource
          example: Generic
          type: string
        terraformConfigurations:
          additionalProperties:
            $ref: '#/components/schemas/TerraformConfiguration'
          description: The Terraform configurations for various cloud providers
          example:
            Facere et.:
              gitConfiguration:
                accessToken: my-token
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
            Nobis omnis non qui fuga.:
              gitConfiguration:
                accessToken: my-token
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          type: object
      required:
      - description
      - name
      - productTierId
      type: object
    CreateSaaSPortalCustomDomainRequestBody:
      example:
        customDomain: mycustomdomain.com
        description: My custom domain description
        environmentType: DEV
        name: MyCustomDomain
      properties:
        customDomain:
          description: The custom domain
          example: mycustomdomain.com
          type: string
        description:
          description: The custom domain description
          example: My custom domain description
          type: string
        environmentType:
          description: The environment type for the custom domain
          example: DEV
          type: string
        name:
          description: The custom domain name
          example: MyCustomDomain
          type: string
      required:
      - customDomain
      - description
      - environmentType
      - name
      type: object
    CreateServiceAPIRequestBody:
      example:
        description: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
          for high availability
        serviceEnvironmentId: se-12345678
      properties:
        description:
          description: A brief description of the service API bundle
          example: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
            for high availability
          type: string
        serviceEnvironmentId:
          description: The service environment ID
          example: se-12345678
          type: string
      required:
      - description
      - serviceEnvironmentId
      type: object
    CreateServiceEnvironmentRequestBody:
      example:
        autoApproveSubscription: false
        deploymentConfigId: dc-12345678
        description: The production environment for the MySQL multi-writer service
        name: Production
        serviceAuthPublicKey: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        sourceEnvironmentId: se-12345678
        type: DEV
        visibility: Est reiciendis voluptas saepe.
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        deploymentConfigId:
          description: The deployment configuration ID
          example: dc-12345678
          type: string
        description:
          description: A brief description of the service environment
          example: The production environment for the MySQL multi-writer service
          type: string
        name:
          description: Name of the Service Environment
          example: Production
          type: string
        serviceAuthPublicKey:
          description: PEM-encoded Public key part of the key used to sign the JWT
            tokens for the service control plane APIs
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        sourceEnvironmentId:
          description: The ID of the service environment to use for promoting changes
            to this environment
          example: se-12345678
          type: string
        type:
          example: DEV
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: Repudiandae molestiae et.
          type: string
      required:
      - deploymentConfigId
      - description
      - name
      type: object
    CreateServiceFromComposeSpecRequestBody:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        fileContent: Eum aliquam minima ullam sit voluptas.
        fileFormat: text/plain
        fileName: mysql.yaml
        name: MySQL multi-writer service
        serviceLogoURL: http://vandervort.info/annalise
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        fileContent:
          description: Base64 encoded Compose Spec YAML in docker compose format
          example: Soluta eius.
          type: string
        fileFormat:
          description: MIME type of file format
          example: text/plain
          type: string
        fileName:
          description: Name of compose spec YAML file that is uploaded
          example: mysql.yaml
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: http://hartmannpagac.info/clementina
          format: uri
          type: string
      required:
      - description
      - fileContent
      - fileFormat
      - fileName
      - name
      type: object
    CreateServiceModelRequestBody:
      example:
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        features:
        - configuration:
            Modi nam minima voluptatibus error.: Accusantium aut.
          feature: Ut ut non impedit optio eum velit.
        - configuration:
            Modi nam minima voluptatibus error.: Accusantium aut.
          feature: Ut ut non impedit optio eum velit.
        - configuration:
            Modi nam minima voluptatibus error.: Accusantium aut.
          feature: Ut ut non impedit optio eum velit.
        modelType: CUSTOMER_HOSTED
        name: MySQL multi-writer service hosted model
        serviceApiId: sa-12345678
      properties:
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            example: Nihil quia.
            type: string
          type: array
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        features:
          description: Enabled service model features
          example:
          - configuration:
              Modi nam minima voluptatibus error.: Accusantium aut.
            feature: Ut ut non impedit optio eum velit.
          - configuration:
              Modi nam minima voluptatibus error.: Accusantium aut.
            feature: Ut ut non impedit optio eum velit.
          items:
            $ref: '#/components/schemas/ServiceModelFeatureDetail'
          type: array
        modelType:
          description: The model type encapsulating this service
          example: CUSTOMER_HOSTED
          type: string
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        serviceApiId:
          description: The service API this model is for
          example: sa-12345678
          type: string
      required:
      - description
      - modelType
      - name
      - serviceApiId
      type: object
    CreateServiceRequestBody:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        name: MySQL multi-writer service
        serviceLogoURL: http://buckridgebashirian.org/estrella
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: http://muller.name/henry.harvey
          format: uri
          type: string
      required:
      - description
      - name
      type: object
    CreateStorageConfigRequestBody:
      example:
        description: my-storage-config-description
        name: my-storage-config
      properties:
        description:
          description: Description of the storage config
          example: my-storage-config-description
          minLength: 1
          type: string
        name:
          description: Name of the storage config
          example: my-storage-config
          minLength: 1
          type: string
      required:
      - description
      - name
      type: object
    CreateStorageVolumeConfigRequestBody:
      example:
        clusterStorageType: S3|$var.storageType|AWS::EFS
        description: A storage volume set to store the MySQL data directory
        disableBackup: false
        instanceStorageIops: $var.storageIops
        instanceStorageSizeGi: $var.storage_size
        instanceStorageThroughputMiBps: "128"
        instanceStorageType: $var.storageType
        name: MySQL Data Volume
        storageResourceID: r-12345678
      properties:
        clusterStorageType:
          description: The type of the fixed storage for the cluster
          example: S3|$var.storageType|AWS::EFS
          type: string
        description:
          description: A brief description of the context for the storage volume pool
          example: A storage volume set to store the MySQL data directory
          type: string
        disableBackup:
          description: Disable backup for the storage volume
          example: false
          type: boolean
        instanceStorageIops:
          description: The IOPS provisioned for the configured instance storage type
          example: $var.storageIops
          type: string
        instanceStorageSizeGi:
          description: The storage size (in Gi) provisioned for the configured instance
            storage type
          example: $var.storage_size
          type: string
        instanceStorageThroughputMiBps:
          description: The throughput (in MiBps) provisioned for the configured instance
            storage type
          example: "128"
          type: string
        instanceStorageType:
          description: The type of the storage for a compute instance
          example: $var.storageType
          type: string
        name:
          description: Name of the storage volume pool
          example: MySQL Data Volume
          type: string
        storageResourceID:
          description: The storage resource ID
          example: r-12345678
          type: string
      required:
      - description
      - name
      type: object
    CreateSubscriptionRequestBody:
      example:
        productTierId: pt-12345678
        serviceId: s-12345678
      properties:
        productTierId:
          description: The product tier ID
          example: pt-12345678
          type: string
        serviceId:
          description: The service ID
          example: s-12345678
          type: string
      required:
      - productTierId
      - serviceId
      type: object
    CreateTierVersionSetRequestBody:
      example:
        description: Unde quae.
        name: Major version set
        parentVersion: "2.0"
        type: Major|Incremental|UserDefined
      properties:
        description:
          description: A brief description of the product-tier version set.
          example: Doloribus dignissimos at maiores soluta deserunt.
          type: string
        name:
          description: The name of the product-tier version set.
          example: Major version set
          type: string
        parentVersion:
          description: The parent version of this version set.
          example: "2.0"
          type: string
        type:
          description: The version-set type of the product-tier.
          example: Major|Incremental|UserDefined
          type: string
      required:
      - type
      type: object
    CreateTierVersionSetResult:
      example:
        version: "3.0"
      properties:
        version:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
      required:
      - version
      type: object
    CustomDNSEndpoint:
      example:
        aRecordTarget: 1.1.1.1
        cnameTarget: cname-target.com
        dnsName: https://my-custom-endpoint.com
        enabled: true
        status: READY
      properties:
        aRecordTarget:
          example: 1.1.1.1
          type: string
        cnameTarget:
          example: cname-target.com
          type: string
        dnsName:
          example: https://my-custom-endpoint.com
          type: string
        enabled:
          example: true
          type: boolean
        status:
          example: READY
          type: string
      required:
      - enabled
      type: object
    CustomDomain:
      example:
        clusterEndpoint: example.com
        customDomain: mycustomdomain.com
        description: My custom domain description
        environmentType: DEV
        name: MyCustomDomain
        status: READY
      properties:
        clusterEndpoint:
          description: The cluster endpoint for the saas portal instance
          example: example.com
          type: string
        customDomain:
          description: The custom domain
          example: mycustomdomain.com
          type: string
        description:
          description: The custom domain description
          example: My custom domain description
          type: string
        environmentType:
          description: The environment type for the custom domain
          example: DEV
          type: string
        name:
          description: The custom domain name
          example: MyCustomDomain
          type: string
        status:
          description: The custom domain status
          example: READY
          type: string
      required:
      - clusterEndpoint
      - customDomain
      - description
      - environmentType
      - name
      - status
      type: object
    CustomImageCommandsAndArgs:
      description: Commands and arguments to run in the container
      example:
        args:
        - -d
        - mysql
        commands:
        - echo
        - "Hello, World!"
      properties:
        args:
          description: Arguments to pass to the container
          example:
          - -d
          - mysql
          items:
            example: Praesentium quo animi harum atque sed.
            type: string
          type: array
        commands:
          description: Commands to run in the container
          example:
          - echo
          - "Hello, World!"
          items:
            example: Molestias atque velit.
            type: string
          type: array
      type: object
    CustomNetwork:
      example:
        cidr: 10.0.0.0/16
        cloudProviderName: aws
        cloudProviderRegion: us-east-1
        id: n-12345678
        name: Prod us-east-1
        networkFeaturesConfiguration:
          isPrivateLinkEnabled: true
        networkInstances:
        - awsAccountID: "123456789012"
          cloudProviderNativeNetworkId: vpc-12345678
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          hostClusterID: hc-12345678
        - awsAccountID: "123456789012"
          cloudProviderNativeNetworkId: vpc-12345678
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          hostClusterID: hc-12345678
        - awsAccountID: "123456789012"
          cloudProviderNativeNetworkId: vpc-12345678
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          hostClusterID: hc-12345678
      properties:
        cidr:
          default: 10.0.0.0/16
          description: CIDR block for the network
          example: 10.0.0.0/16
          type: string
        cloudProviderName:
          description: The name of the cloud provider that the instance is running
            on.
          example: aws
          type: string
        cloudProviderRegion:
          description: The region of the cloud provider that the instance is running
            in.
          example: us-east-1
          type: string
        id:
          description: ID of a custom network
          example: n-12345678
          type: string
        name:
          description: User friendly network name to help distinguish networks with
            same CIDRs
          example: Prod us-east-1
          type: string
        networkFeaturesConfiguration:
          $ref: '#/components/schemas/NetworkFeaturesConfiguration'
        networkInstances:
          description: List of network instances created within this custom network
          example:
          - awsAccountID: "123456789012"
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          items:
            $ref: '#/components/schemas/CustomNetworkInstance'
          type: array
      required:
      - cloudProviderName
      - cloudProviderRegion
      - id
      type: object
    CustomNetworkInstance:
      example:
        awsAccountID: "123456789012"
        cloudProviderNativeNetworkId: vpc-12345678
        gcpProjectID: my-project
        gcpProjectNumber: "123456789012"
        hostClusterID: hc-12345678
      properties:
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        cloudProviderNativeNetworkId:
          description: The ID of the network within cloud provider account
          example: vpc-12345678
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        gcpProjectNumber:
          description: The GCP project number
          example: "123456789012"
          type: string
        hostClusterID:
          description: The ID of the host cluster within the network
          example: hc-12345678
          type: string
      type: object
    CustomNetworkResourceDetail:
      description: Details of custom network used for instance
      example:
        cidr: 10.177.0.0/16
        id: n-12345678
        name: Prod us-east-1
      properties:
        cidr:
          description: CIDR block of the network
          example: 10.177.0.0/16
          type: string
        id:
          description: ID of a custom network
          example: n-12345678
          type: string
        name:
          description: User friendly network name
          example: Prod us-east-1
          type: string
      type: object
    CustomULimits:
      example:
        ULimitsName: nofile
        ULimitsType: Soft
        ULimitsValue: 1000
      properties:
        ULimitsName:
          description: The name of the ulimit
          example: nofile
          type: string
        ULimitsType:
          description: The type of the ulimit
          example: Soft
          type: string
        ULimitsValue:
          description: The value of the ulimit
          example: 1000
          format: int64
          type: integer
      required:
      - ULimitsName
      - ULimitsType
      - ULimitsValue
      type: object
    CustomerLoginWithIdentityProviderRequestBody:
      example:
        authorizationCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        environmentType: DEV
        identityProviderName: Google
        invitedEmail: abc@gmail.com
        legalCompanyName: mywebsite
        redirectUri: https://www.example/redirect
      properties:
        authorizationCode:
          description: The authorization code from the Identity Provider
          example: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
          type: string
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        environmentType:
          description: The environment type of the portal that the customer is signing
            in to
          example: DEV
          type: string
        identityProviderName:
          description: The name of the Identity Provider
          example: Google
          type: string
        invitedEmail:
          description: Email address that the user was invited with
          example: abc@gmail.com
          format: email
          type: string
        legalCompanyName:
          example: mywebsite
          minLength: 1
          type: string
        redirectUri:
          description: The redirect URI used to get the authorization code
          example: https://www.example/redirect
          type: string
      required:
      - authorizationCode
      - identityProviderName
      type: object
    CustomerSigninRequestBody:
      example:
        email: abc@gmail.com
        environmentType: DEV
        hashedPassword: deprecated
        password: password
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        environmentType:
          description: The environment type of the portal that the customer is signing
            in to
          example: DEV
          type: string
        hashedPassword:
          example: deprecated
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
      required:
      - email
      type: object
    DemoRequestBody:
      example:
        company: ABC
        email: abc@gmail.com
        name: John Doe
        phone: +1-234567890
      properties:
        company:
          example: ABC
          minLength: 1
          type: string
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        name:
          example: John Doe
          minLength: 1
          type: string
        phone:
          example: +1-234567890
          type: string
      required:
      - company
      - email
      - name
      type: object
    DeregisterActionHookRequestBody:
      example:
        scope: CLUSTER
        type: ADD
      properties:
        scope:
          description: The scope of the hook
          example: CLUSTER
          type: string
        type:
          description: The type of hook to execute
          example: ADD
          type: string
      required:
      - scope
      - type
      type: object
    DescribeAccountConfigByAWSAccountIDResult:
      example:
        awsAccountID: "123456789012"
        awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
        awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
        awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
        byoaInstanceIDs:
        - instance-12345678
        - instance-abcdefgh
        cloudProviderId: infra-12345678
        description: An AWS account hosting multiple dev environments
        id: ac-12345678
        name: Dev AWS account
        status: READY
        statusMessage: Account is ready
      properties:
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        awsBootstrapRoleARN:
          description: The security role ARN or service account ARN that grants access
            to operate the infra
          example: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          type: string
        awsCloudFormationNoLBTemplateURL:
          description: The URL to the CloudFormation template (no LoadBalancer policy
            version)
          example: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          type: string
        awsCloudFormationTemplateURL:
          description: The URL to the CloudFormation template
          example: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          type: string
        byoaInstanceIDs:
          description: The BYOA instance IDs that this account config is tied to
          example:
          - instance-12345678
          - instance-abcdefgh
          items:
            example: Sint minus dolore minima vel.
            type: string
          type: array
        cloudProviderId:
          description: Cloud Provider ID to operate on
          example: infra-12345678
          type: string
        description:
          description: The description for the account
          example: An AWS account hosting multiple dev environments
          type: string
        id:
          description: Account Config ID to operate on
          example: ac-12345678
          type: string
        name:
          description: The name of the account
          example: Dev AWS account
          type: string
        status:
          description: The status of the account
          example: READY
          type: string
        statusMessage:
          description: The status message of the account
          example: Account is ready
          type: string
      required:
      - awsAccountID
      - awsBootstrapRoleARN
      - cloudProviderId
      - description
      - id
      - name
      - status
      - statusMessage
      type: object
    DescribeAccountConfigByGCPProjectIDResult:
      example:
        byoaInstanceIDs:
        - instance-12345678
        - instance-abcdefgh
        cloudProviderId: infra-12345678
        description: An AWS account hosting multiple dev environments
        gcpProjectID: my-project
        gcpProjectNumber: "123456789012"
        gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
        id: ac-12345678
        name: Dev AWS account
        status: READY
        statusMessage: Account is ready
      properties:
        byoaInstanceIDs:
          description: The BYOA instance IDs that this account config is tied to
          example:
          - instance-12345678
          - instance-abcdefgh
          items:
            example: Quia eveniet officia exercitationem ut nemo.
            type: string
          type: array
        cloudProviderId:
          description: Cloud Provider ID to operate on
          example: infra-12345678
          type: string
        description:
          description: The description for the account
          example: An AWS account hosting multiple dev environments
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        gcpProjectNumber:
          description: The GCP project number
          example: "123456789012"
          type: string
        gcpServiceAccountEmail:
          description: The GCP service account email
          example: bootstrap@my-project.iam.gserviceaccount.com
          type: string
        id:
          description: Account Config ID to operate on
          example: ac-12345678
          type: string
        name:
          description: The name of the account
          example: Dev AWS account
          type: string
        status:
          description: The status of the account
          example: READY
          type: string
        statusMessage:
          description: The status message of the account
          example: Account is ready
          type: string
      required:
      - cloudProviderId
      - description
      - gcpProjectID
      - gcpProjectNumber
      - gcpServiceAccountEmail
      - id
      - name
      - status
      - statusMessage
      type: object
    DescribeAccountConfigResult:
      example:
        awsAccountID: "123456789012"
        awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
        awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
        awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
        byoaInstanceIDs:
        - instance-12345678
        - instance-abcdefgh
        cloudProviderId: infra-12345678
        description: An AWS account hosting multiple dev environments
        gcpProjectID: my-project
        gcpProjectNumber: "123456789012"
        gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
        id: ac-12345678
        name: Dev AWS account
        status: READY
        statusMessage: Account is ready
      properties:
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        awsBootstrapRoleARN:
          description: The security role ARN or service account ARN that grants access
            to operate the infra
          example: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          type: string
        awsCloudFormationNoLBTemplateURL:
          description: The URL to the CloudFormation template (no LoadBalancer policy
            version)
          example: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          type: string
        awsCloudFormationTemplateURL:
          description: The URL to the CloudFormation template
          example: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          type: string
        byoaInstanceIDs:
          description: The BYOA instance IDs that this account config is tied to
          example:
          - instance-12345678
          - instance-abcdefgh
          items:
            example: Perferendis ad quam aut.
            type: string
          type: array
        cloudProviderId:
          description: Cloud Provider ID to operate on
          example: infra-12345678
          type: string
        description:
          description: The description for the account
          example: An AWS account hosting multiple dev environments
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        gcpProjectNumber:
          description: The GCP project number
          example: "123456789012"
          type: string
        gcpServiceAccountEmail:
          description: The GCP service account email
          example: bootstrap@my-project.iam.gserviceaccount.com
          type: string
        id:
          description: Account Config ID to operate on
          example: ac-12345678
          type: string
        name:
          description: The name of the account
          example: Dev AWS account
          type: string
        status:
          description: The status of the account
          example: READY
          type: string
        statusMessage:
          description: The status message of the account
          example: Account is ready
          type: string
      required:
      - cloudProviderId
      - description
      - id
      - name
      - status
      - statusMessage
      type: object
    DescribeAvailabilityZoneResult:
      example:
        cloudProviderName: aws
        code: us-east-1a
        description: US East (N. Virginia) Availability Zone A
        id: az-12345678
        regionCode: us-east-1
      properties:
        cloudProviderName:
          description: The cloud provider for this compute instance type config
          example: aws
          type: string
        code:
          description: Cloud-provider native availability zone code
          example: us-east-1a
          type: string
        description:
          description: Description of the AvailabilityZone
          example: US East (N. Virginia) Availability Zone A
          type: string
        id:
          example: az-12345678
          type: string
        regionCode:
          description: Cloud-provider native region code
          example: us-east-1
          type: string
      required:
      - cloudProviderName
      - code
      - description
      - id
      - regionCode
      type: object
    DescribeCloudProviderResult:
      example:
        description: Amazon Web Services
        id: infra-12345678
        name: aws
      properties:
        description:
          description: Description of the CloudProvider
          example: Amazon Web Services
          type: string
        id:
          description: ID of the CloudProvider
          example: infra-12345678
          type: string
        name:
          description: Name of the CloudProvider
          example: aws
          type: string
      required:
      - description
      - id
      - name
      type: object
    DescribeComputeConfigResult:
      example:
        autoscalingPolicy:
          maxReplicas: 4
          minReplicas: 1
        cpuArchitecture: X86_64|ARM64
        description: my compute config description
        id: cc-12345678
        infraConfigIDs:
        - ic-12345678
        - ic-abcdefgh
        instanceTypes:
          aws:
          - t3.micro
          - t3.small
          azure:
          - Standard_B1ls
          - Standard_B1ms
          gcp:
          - $var.instance_type
        name: my compute config
        replicaCount: "3"
        resources:
          limits:
            cpu: "1"
            memory: 500Mi
          requests:
            cpu: "0.5"
            memory: 200Mi
        rootVolumeSizeGi: 10
        serviceId: s-12345678
        warmPoolConfiguration:
          minimumNodesInPool: 1
      properties:
        autoscalingPolicy:
          $ref: '#/components/schemas/AutoscalingPolicy'
        cpuArchitecture:
          description: Processor architecture
          example: X86_64|ARM64
          type: string
        description:
          description: Description of the compute config
          example: my compute config description
          type: string
        id:
          description: ID of the compute config
          example: cc-12345678
          type: string
        infraConfigIDs:
          description: The list of infra config IDs associated with the compute config.
          example:
          - ic-12345678
          - ic-abcdefgh
          items:
            example: Iusto dolorem.
            type: string
          type: array
        instanceTypes:
          additionalProperties:
            example:
            - Amet ut ullam ratione libero minus voluptates.
            - Dolorem impedit in enim.
            items:
              example: Aut qui mollitia accusamus vero ut.
              type: string
            type: array
          description: The instance types for this compute config
          example:
            aws:
            - t3.micro
            - t3.small
            azure:
            - Standard_B1ls
            - Standard_B1ms
            gcp:
            - $var.instance_type
          type: object
        name:
          description: Name of the compute config
          example: my compute config
          type: string
        replicaCount:
          description: Number of replicas to provision for this logical pool of nodes
            per instance of the resource
          example: "3"
          type: string
        resources:
          $ref: '#/components/schemas/ResourceSpec'
        rootVolumeSizeGi:
          description: Size of the root volume in Gi
          example: 10
          format: int64
          type: integer
        serviceId:
          description: The service ID
          example: s-12345678
          type: string
        warmPoolConfiguration:
          $ref: '#/components/schemas/WarmPoolConfiguration'
      required:
      - description
      - id
      - name
      - replicaCount
      - serviceId
      type: object
    DescribeCustomDomainResult:
      example:
        customDomain: mydomain.dev
        description: Description of the domain
        id: cd-12345678
        name: Dev domain
        route53Configuration:
          awsAccountID: "123456789012"
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
        status: READY
        statusMessage: Account is ready
      properties:
        customDomain:
          description: The root domain of the domain to use as suffix
          example: mydomain.dev
          type: string
        description:
          description: The description for the domain
          example: Description of the domain
          type: string
        id:
          description: custom domain ID to operate on
          example: cd-12345678
          type: string
        name:
          description: The name of the custom domain
          example: Dev domain
          type: string
        route53Configuration:
          $ref: '#/components/schemas/Route53ConfigurationDescription'
        status:
          description: The status of the custom domain
          example: READY
          type: string
        statusMessage:
          description: The status message of the custom domain
          example: Account is ready
          type: string
      required:
      - customDomain
      - description
      - id
      - name
      - route53Configuration
      type: object
    DescribeDeploymentConfigResult:
      example:
        description: A production deployment config
        id: dc-12345678
        infraRollConfiguration:
          infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
          maximumNumberOfResourceInstancesPerBatch: 1
          maximumUnavailableReplicas: 1
        name: Production
        rolloutPriorityList:
        - region-12345678
        - region-abcd1234
        - region-3c3c3c3c
      properties:
        description:
          description: A brief description of the deployment config
          example: A production deployment config
          type: string
        id:
          description: The deployment configuration ID
          example: dc-12345678
          type: string
        infraRollConfiguration:
          $ref: '#/components/schemas/InfraRollConfiguration'
        name:
          description: Name of the deployment config
          example: Production
          type: string
        rolloutPriorityList:
          example:
          - region-12345678
          - region-abcd1234
          - region-3c3c3c3c
          items:
            example: Architecto ut itaque fugit.
            type: string
          type: array
      required:
      - description
      - id
      - infraRollConfiguration
      - name
      - rolloutPriorityList
      type: object
    DescribeEventResult:
      example:
        eventSource: "Customer, Infra or Maintenance"
        id: event-12345678
        message: instance-abcd1234 created
        orgId: org-12345678
        orgName: Acme Corporation
        resourceInstanceId: instance-abcd1234
        resourceName: Galera
        time: 2023-01-10T00:00:00Z
        userId: user-12345678
        userName: John Doe
        workflowFailures:
        - eventTime: 2020-01-01T00:00:00Z
          message: Bootstrap failed for reason X
        - eventTime: 2020-01-01T00:01:00Z
          message: Compute failed for reason Y
      properties:
        eventSource:
          description: The event source
          example: "Customer, Infra or Maintenance"
          type: string
        id:
          description: The ID of the event
          example: event-12345678
          type: string
        message:
          description: Resource Instance of message
          example: instance-abcd1234 created
          type: string
        orgId:
          description: The organization ID of the user that caused the event
          example: org-12345678
          type: string
        orgName:
          description: The organization name of the user that caused the event
          example: Acme Corporation
          type: string
        resourceInstanceId:
          description: Instance Id of the resource instance
          example: instance-abcd1234
          type: string
        resourceName:
          description: Name of the resource
          example: Galera
          type: string
        time:
          description: The event time
          example: 2023-01-10T00:00:00Z
          type: string
        userId:
          description: The ID of the user that caused the event
          example: user-12345678
          type: string
        userName:
          description: The user name of the user that caused the event
          example: John Doe
          type: string
        workflowFailures:
          description: The list of workflow events that indicate failures
          example:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
          items:
            $ref: '#/components/schemas/WorkflowFailure'
          type: array
      required:
      - id
      - message
      - resourceInstanceId
      - resourceName
      - time
      type: object
    DescribeIdentityProviderResult:
      example:
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
        id: idp-12345678
        identityProviderName: Google
        status: Ready
      properties:
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
        id:
          description: The Identity Provider ID
          example: idp-12345678
          type: string
        identityProviderName:
          description: The name of the Identity Provider
          example: Google
          type: string
        status:
          description: The status of the Identity Provider
          example: Ready
          type: string
      required:
      - clientId
      - id
      - identityProviderName
      - status
      type: object
    DescribeImageConfigResult:
      example:
        customImageCommandsAndArgs:
          args:
          - -d
          - mysql
          commands:
          - echo
          - "Hello, World!"
        description: An image configuration for my new entity
        id: imgc-12345678
        imageName: mysql
        imageRegistryId: ir-12345678
        imageSignaturePublicKeyPEM: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        imageTag: v1
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
      properties:
        customImageCommandsAndArgs:
          $ref: '#/components/schemas/CustomImageCommandsAndArgs'
        description:
          description: A brief description of the image configuration
          example: An image configuration for my new entity
          type: string
        id:
          description: The image configuration ID
          example: imgc-12345678
          type: string
        imageName:
          description: Name of the container image
          example: mysql
          minLength: 1
          type: string
        imageRegistryId:
          description: The image registry ID to use for the infra
          example: ir-12345678
          type: string
        imageSignaturePublicKeyPEM:
          description: PEM-encoded Public key part of the key used to sign the container
            image
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        imageTag:
          default: latest
          description: Tag representing the software image version that is currently
            preferred
          example: v1
          type: string
        serviceEnvironmentId:
          description: The service environment ID
          example: se-12345678
          type: string
        serviceId:
          description: The service ID
          example: s-12345678
          type: string
      required:
      - description
      - id
      - imageName
      - imageRegistryId
      - imageTag
      - serviceEnvironmentId
      - serviceId
      type: object
    DescribeImageRegistryResult:
      example:
        description: DockerHub is a public Docker Image Registry
        host: docker.io
        id: ir-12345678
        name: DockerHub
        password: mypassword
        username: myusername
      properties:
        description:
          description: A brief description of the Image Registry
          example: DockerHub is a public Docker Image Registry
          type: string
        host:
          description: The Image Registry host
          example: docker.io
          type: string
        id:
          description: The ID of the Image Registry
          example: ir-12345678
          type: string
        name:
          description: Name of the Image Registry
          example: DockerHub
          type: string
        password:
          description: The password to use when authenticating to the Image Registry
          example: mypassword
          type: string
        username:
          description: The username to use when authenticating to the Image Registry
          example: myusername
          type: string
      required:
      - description
      - host
      - id
      - name
      type: object
    DescribeInfraConfigResult:
      example:
        computeConfigId: cc-12345678
        customTag:
          key: customKey
          value: customValue
        description: Infra config used for the base tier MySQL service
        id: ic-12345678
        name: MySQL Writer Infra Config
        networkConfigId: nc-12345678
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        storageConfigId: sc-12345678
      properties:
        computeConfigId:
          description: The compute config ID
          example: cc-12345678
          type: string
        customTag:
          $ref: '#/components/schemas/EnvironmentVariable'
        description:
          description: The description for the infra config
          example: Infra config used for the base tier MySQL service
          type: string
        id:
          description: Infra Config ID to operate on
          example: ic-12345678
          type: string
        name:
          description: The name of the infra config
          example: MySQL Writer Infra Config
          type: string
        networkConfigId:
          description: The network config ID
          example: nc-12345678
          type: string
        serviceEnvironmentId:
          description: The service environment ID
          example: se-12345678
          type: string
        serviceId:
          description: The service ID
          example: s-12345678
          type: string
        storageConfigId:
          description: The storage config ID
          example: sc-12345678
          type: string
      required:
      - description
      - id
      - name
      - serviceEnvironmentId
      - serviceId
      type: object
    DescribeInputParameterResult:
      example:
        defaultValue: "true"
        dependentResourceId: r-12345678
        description: Sint nihil velit.
        hasOptions: true
        id: var-12345678
        isList: true
        key: sli
        labeledOptions:
          large: t3.xlarge
          medium: t3.large
          small: t3.medium
        limits:
          max: Debitis ea aspernatur aut blanditiis aperiam eum.
          maxLength: Et dolor modi.
          min: Expedita eos unde minima quia.
          minLength: Ab omnis illum.
        modifiable: true
        name: 8b3
        options:
        - "true"
        - "false"
        required: false
        resourceId: r-12345678
        serviceId: s-12345678
        type: Eveniet earum eum aperiam quasi qui et.
      properties:
        defaultValue:
          description: Default value to use for an optional input parameter represented
            as a string
          example: "true"
          type: string
        dependentResourceId:
          description: The ID of the resource whose instance this input parameter
            depends on
          example: r-12345678
          type: string
        description:
          description: A brief description of the input parameter
          example: Qui nihil esse.
          type: string
        hasOptions:
          default: false
          description: Marks the input parameter to be selectable from a list of values
          example: false
          type: boolean
        id:
          description: ID of the input parameter
          example: var-12345678
          type: string
        isList:
          default: false
          description: Marks the input parameter as a list of values
          example: true
          type: boolean
        key:
          description: Key of the input parameter
          example: 6i6
          minLength: 1
          type: string
        labeledOptions:
          additionalProperties:
            example: Qui dolore et.
            type: string
          description: "A map for labeled options. The key is the label and the value\
            \ is the option. When the option is selected, the label will be displayed\
            \ to the end customer."
          example:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          type: object
        limits:
          $ref: '#/components/schemas/Limits'
        modifiable:
          description: Marks the input parameter as immutable
          example: true
          type: boolean
        name:
          description: External name for the input parameter
          example: j
          minLength: 1
          type: string
        options:
          description: A list of options to restrict the value of the input parameter
            to (represented as a string)
          example:
          - "true"
          - "false"
          items:
            example: In sunt molestiae itaque cum.
            type: string
          type: array
        required:
          description: Enforces the input parameter as a required parameter
          example: true
          type: boolean
        resourceId:
          description: The ID of the resource that this input parameter belongs to
          example: r-12345678
          type: string
        serviceId:
          description: The ID of the service that this output parameter belongs to
          example: s-12345678
          type: string
        type:
          example: Non accusantium doloribus et iure fuga soluta.
          type: string
      required:
      - description
      - id
      - isList
      - key
      - modifiable
      - name
      - required
      - resourceId
      - serviceId
      - type
      type: object
    DescribeLimitResult:
      example:
        description: A premium limit
        family: COMPUTE_INFRA
        key: MAX_VIRTUAL_CORES_PER_RESOURCE
        modifiable: true
        name: Premium Tier
        value: 4
      properties:
        description:
          description: A brief description of the limit
          example: A premium limit
          type: string
        family:
          description: Limit family
          example: COMPUTE_INFRA
          type: string
        key:
          description: Unique key to identify the limit
          example: MAX_VIRTUAL_CORES_PER_RESOURCE
          type: string
        modifiable:
          description: Whether the limit can be modified
          example: true
          type: boolean
        name:
          description: Name of the limit
          example: Premium Tier
          type: string
        value:
          description: Value of the limit being enforced
          example: 4
          format: int64
          type: integer
      required:
      - description
      - family
      - key
      - modifiable
      - name
      - value
      type: object
    DescribeNetworkConfigResult:
      example:
        description: A multi-zone HA network config
        endpointPerReplica: true
        id: nc-12345678
        infraConfigIDs:
        - ic-12345678
        - ic-abcdefgh
        internal: true
        name: Multi-zone
        openPorts:
        - 1299
        - 3306
        privateNetworkingConfiguration:
          privateLinkConfiguration:
            awsPrivateLinkConfigurations:
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
        publicNetworkingConfiguration:
          enableClusterLoadBalancer: true
          enableNodeLoadBalancer: true
        serviceId: s-12345678
        stableEgressIP: true
        tlsTerminationPort: 443
        zoneConfiguration: Neque omnis quos odio eius unde dolorem.
      properties:
        description:
          description: A brief description of the network config
          example: A multi-zone HA network config
          type: string
        endpointPerReplica:
          description: Generates a DNS endpoint per-replica for this network config
          example: true
          type: boolean
        id:
          description: The ID of the network config
          example: nc-12345678
          type: string
        infraConfigIDs:
          description: The list of infra config IDs associated with the compute config.
          example:
          - ic-12345678
          - ic-abcdefgh
          items:
            example: Porro neque.
            type: string
          type: array
        internal:
          description: Restrict access to this network config to the internal network
          example: true
          type: boolean
        name:
          description: Name of the network config
          example: Multi-zone
          type: string
        openPorts:
          description: Ports to map to the generated DNS endpoint
          example:
          - 1299
          - 3306
          items:
            example: 5883591738158006945
            format: int64
            type: integer
          type: array
        privateNetworkingConfiguration:
          $ref: '#/components/schemas/PrivateNetworkingConfiguration'
        publicNetworkingConfiguration:
          $ref: '#/components/schemas/PublicNetworkingConfiguration'
        serviceId:
          description: The ID of the service
          example: s-12345678
          type: string
        stableEgressIP:
          description: Create an external node load balancer per node rather than
            expose the node ip directly
          example: true
          type: boolean
        tlsTerminationPort:
          description: The port that hosts the reverse proxy for TLS termination
          example: 443
          format: int64
          type: integer
        zoneConfiguration:
          example: Est dolore.
          type: string
      required:
      - description
      - endpointPerReplica
      - id
      - internal
      - name
      - openPorts
      - serviceId
      - stableEgressIP
      - zoneConfiguration
      type: object
    DescribeNetworkResult:
      example:
        cidr: 10.0.0.0/16
        id: n-12345678
        networkConfigId: nc-12345678
        serviceId: s-12345678
        type: PUBLIC
        vunitId: vu-12345678
      properties:
        cidr:
          description: CIDR block for the network
          example: 10.0.0.0/16
          type: string
        id:
          description: Network to operate on
          example: n-12345678
          type: string
        networkConfigId:
          description: Network config ID for the network
          example: nc-12345678
          type: string
        serviceId:
          description: Service ID context
          example: s-12345678
          type: string
        type:
          description: The type of network
          example: PUBLIC
          type: string
        vunitId:
          description: VUnit ID for the Network
          example: vu-12345678
          type: string
      type: object
    DescribeOutputParameterResult:
      example:
        description: Username of the user created in the target system
        id: op-12345678
        key: username
        name: Username
        resourceId: r-12345678
        serviceId: s-12345678
        value: johndoe
        valueRef: $var.username
        valueType: Nesciunt recusandae cupiditate magnam occaecati non molestiae.
      properties:
        description:
          description: Description of the output variable being exported
          example: Username of the user created in the target system
          minLength: 1
          type: string
        id:
          description: The ID of the output parameter
          example: op-12345678
          type: string
        key:
          description: Key of the output variable being exported
          example: username
          minLength: 1
          type: string
        name:
          description: External name of the output variable being exported
          example: Username
          minLength: 1
          type: string
        resourceId:
          description: The ID of the resource that this input parameter belongs to
          example: r-12345678
          type: string
        serviceId:
          description: The ID of the service that this output parameter belongs to
          example: s-12345678
          type: string
        value:
          description: Value of the output variable being exported
          example: johndoe
          minLength: 1
          type: string
        valueRef:
          description: Reference to an input variable that will be used to set the
            value of the output variable being exported
          example: $var.username
          type: string
        valueType:
          example: Et assumenda.
          type: string
      required:
      - description
      - id
      - key
      - name
      - resourceId
      - serviceId
      type: object
    DescribePendingChangesResult:
      example:
        id: sa-12345678
        resourceChangeSets:
          Animi necessitatibus.:
            categorizedResourceChanges:
              Libero et deleniti et facilis exercitationem.:
                changes:
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                status: PENDING_UPDATE
            imageConfigChanges:
              changeState: PENDING_NEW
              imageConfigId: imgc-12345678
              imageName: mysql
            infraConfigChanges:
              changeState: PENDING_NEW
              infraConfigId: ic-12345678
              name: MySQL Writer Infra Config
            overallResourceStatus: PENDING_UPDATE
            productTierFeatureChanges: PENDING_UPDATE
            resourceChanges: PENDING_DELETE
            resourceName: Alias labore delectus quae sit error.
          Tempore veniam est et mollitia.:
            categorizedResourceChanges:
              Libero et deleniti et facilis exercitationem.:
                changes:
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                status: PENDING_UPDATE
            imageConfigChanges:
              changeState: PENDING_NEW
              imageConfigId: imgc-12345678
              imageName: mysql
            infraConfigChanges:
              changeState: PENDING_NEW
              infraConfigId: ic-12345678
              name: MySQL Writer Infra Config
            overallResourceStatus: PENDING_UPDATE
            productTierFeatureChanges: PENDING_UPDATE
            resourceChanges: PENDING_DELETE
            resourceName: Alias labore delectus quae sit error.
          Voluptas deserunt quos consectetur tempore velit totam.:
            categorizedResourceChanges:
              Libero et deleniti et facilis exercitationem.:
                changes:
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                status: PENDING_UPDATE
            imageConfigChanges:
              changeState: PENDING_NEW
              imageConfigId: imgc-12345678
              imageName: mysql
            infraConfigChanges:
              changeState: PENDING_NEW
              infraConfigId: ic-12345678
              name: MySQL Writer Infra Config
            overallResourceStatus: PENDING_UPDATE
            productTierFeatureChanges: PENDING_UPDATE
            resourceChanges: PENDING_DELETE
            resourceName: Alias labore delectus quae sit error.
        serviceId: s-12345678
      properties:
        id:
          description: The service API ID
          example: sa-12345678
          type: string
        resourceChangeSets:
          additionalProperties:
            $ref: '#/components/schemas/ChangeSet'
          description: The difference for the service API configuration per resource
          example:
            Assumenda impedit aliquid temporibus nobis incidunt quia.:
              categorizedResourceChanges:
                Libero et deleniti et facilis exercitationem.:
                  changes:
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  status: PENDING_UPDATE
              imageConfigChanges:
                changeState: PENDING_NEW
                imageConfigId: imgc-12345678
                imageName: mysql
              infraConfigChanges:
                changeState: PENDING_NEW
                infraConfigId: ic-12345678
                name: MySQL Writer Infra Config
              overallResourceStatus: PENDING_UPDATE
              productTierFeatureChanges: PENDING_UPDATE
              resourceChanges: PENDING_DELETE
              resourceName: Alias labore delectus quae sit error.
            Recusandae sint.:
              categorizedResourceChanges:
                Libero et deleniti et facilis exercitationem.:
                  changes:
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  status: PENDING_UPDATE
              imageConfigChanges:
                changeState: PENDING_NEW
                imageConfigId: imgc-12345678
                imageName: mysql
              infraConfigChanges:
                changeState: PENDING_NEW
                infraConfigId: ic-12345678
                name: MySQL Writer Infra Config
              overallResourceStatus: PENDING_UPDATE
              productTierFeatureChanges: PENDING_UPDATE
              resourceChanges: PENDING_DELETE
              resourceName: Alias labore delectus quae sit error.
            Sunt iste quia quam voluptatum excepturi non.:
              categorizedResourceChanges:
                Libero et deleniti et facilis exercitationem.:
                  changes:
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  status: PENDING_UPDATE
              imageConfigChanges:
                changeState: PENDING_NEW
                imageConfigId: imgc-12345678
                imageName: mysql
              infraConfigChanges:
                changeState: PENDING_NEW
                infraConfigId: ic-12345678
                name: MySQL Writer Infra Config
              overallResourceStatus: PENDING_UPDATE
              productTierFeatureChanges: PENDING_UPDATE
              resourceChanges: PENDING_DELETE
              resourceName: Alias labore delectus quae sit error.
          type: object
        serviceId:
          description: The service ID that this API bundle belongs to
          example: s-12345678
          type: string
      required:
      - id
      - resourceChangeSets
      - serviceId
      type: object
    DescribePlanResult:
      example:
        modifiedAt: 2023-01-01T00:00:00Z
        nextChargeDate: 2023-02-01
        paymentConfigured: true
        paymentInfoPortalURL: https://billing.paigo.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
        planCoreHourCost: 0.05
        planDescription: The starter plan is priced at 'X' units
        planFrequency: MONTHLY
        planMonthlyCost: 49
        planName: STARTER
        remainingCredits: "100"
        startDate: 2023-01-01
      properties:
        modifiedAt:
          description: The time the plan was last modified
          example: 2023-01-01T00:00:00Z
          type: string
        nextChargeDate:
          description: The next day stripe will process a charge for this plan
          example: 2023-02-01
          type: string
        paymentConfigured:
          description: Whether the customer has configured their payment information.
          example: true
          type: boolean
        paymentInfoPortalURL:
          description: The URL from Paigo to redirect users to so they can enter their
            payment information.  Only present when first adding payment information
          example: https://billing.paigo.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
          type: string
        planCoreHourCost:
          description: The cost per core hour of this plan
          example: 0.05
          format: double
          type: number
        planDescription:
          description: The description of the plan
          example: The starter plan is priced at 'X' units
          type: string
        planFrequency:
          description: Whether the plan is charged monthly or yearly
          example: MONTHLY
          type: string
        planMonthlyCost:
          description: The minimum monthly cost of this plan
          example: 49
          format: double
          type: number
        planName:
          description: The name of the plan this user is changing to
          example: STARTER
          type: string
        remainingCredits:
          description: The credits remaining for the customer for the customer in
            Paigo
          example: "100"
          type: string
        startDate:
          description: The date that the plan starts
          example: 2023-01-01
          type: string
      required:
      - planName
      type: object
    DescribeProductTierResult:
      example:
        apiGroups:
          r-12345678: v1
          r-23456789: v2
          r-34567890: v3
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        cloudProvidersConfigReadiness:
          aws:
            resourceA: missing terraform configuration
            resourceB: missing cloudformation configuration
        description: A premium product tier
        documentation: Any documentation
        enabledFeatures:
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        features:
          BILLING: false
          LOGS: true
          METRICS: false
        gcpRegions:
        - us-central1
        id: pt-12345678
        isDisabled: false
        key: premium
        name: Premium
        planDescription: A premium plan
        pricing:
          price1: value1
        serviceId: s-12345678
        serviceModelId: sm-12345678
        support: Any support
        tierType: OMNISTRATE_DEDICATED_TENANCY
      properties:
        apiGroups:
          additionalProperties:
            example: 5av
            minLength: 1
            type: string
          description: The resources that belong to this service API bundle and their
            active versions
          example:
            r-12345678: v1
            r-23456789: v2
            r-34567890: v3
          type: object
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Et et explicabo facere.
            type: string
          type: array
        cloudProvidersConfigReadiness:
          additionalProperties:
            additionalProperties:
              example: Reprehenderit est excepturi aliquid sequi repellat quia.
              type: string
            example:
              Nihil provident dolore.: Eveniet aspernatur labore praesentium labore.
              Quia qui.: Consequatur quas quas explicabo.
            type: object
          description: The readiness of the cloud providers configurations
          example:
            aws:
              resourceA: missing terraform configuration
              resourceB: missing cloudformation configuration
          type: object
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        enabledFeatures:
          description: "The features that are enabled for this product tier, including\
            \ scope details and configuration"
          example:
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          items:
            $ref: '#/components/schemas/ProductTierFeatureDetail'
          type: array
        features:
          additionalProperties:
            example: true
            type: boolean
          description: The features that are enabled / disabled for this product tier
          example:
            BILLING: false
            LOGS: true
            METRICS: false
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Dolor voluptatem magni.
            type: string
          type: array
        id:
          description: Product tier ID
          example: pt-12345678
          type: string
        isDisabled:
          description: Flag to indicate if the product tier is disabled.
          example: false
          type: boolean
        key:
          description: Unique Key of the product tier
          example: premium
          type: string
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricing:
          description: Pricing
          example:
            price1: value1
        serviceId:
          description: Service ID
          example: s-12345678
          type: string
        serviceModelId:
          description: Service model ID
          example: sm-12345678
          type: string
        support:
          description: Support
          example: Any support
          type: string
        tierType:
          description: Tier type
          example: OMNISTRATE_DEDICATED_TENANCY
          type: string
      required:
      - description
      - documentation
      - id
      - isDisabled
      - key
      - name
      - planDescription
      - pricing
      - serviceId
      - serviceModelId
      - support
      - tierType
      type: object
    DescribeRegionResult:
      example:
        cloudProviderId: infra-12345678
        cloudProviderName: aws
        code: us-east-1
        description: US East (N. Virginia)
        id: region-12345678
      properties:
        cloudProviderId:
          example: infra-12345678
          type: string
        cloudProviderName:
          description: The cloud provider for this compute instance type config
          example: aws
          type: string
        code:
          description: Cloud-provider native region code
          example: us-east-1
          minLength: 1
          type: string
        description:
          description: Description of the Region
          example: US East (N. Virginia)
          minLength: 1
          type: string
        id:
          description: ID of the Region
          example: region-12345678
          type: string
      required:
      - cloudProviderId
      - cloudProviderName
      - code
      - description
      - id
      type: object
    DescribeResourceInstanceResult:
      example:
        active: true
        awsAccountID: "123456789012"
        backupStatus:
          earliestRestoreTime: 2021-09-01T00:00:00Z
        cloud_provider: aws
        created_at: 2023-01-10T00:00:00Z
        createdByUserId: user-12345678
        createdByUserName: John Doe
        customNetworkDetail:
          cidr: 10.177.0.0/16
          id: n-12345678
          name: Prod us-east-1
        detailedNetworkTopology:
          r-abcd1234:
            allowedIPRanges:
            - 0.0.0.0/0
            clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            clusterPorts:
            - 3306
            main: true
            networkingType: PUBLIC
            nodes:
            - availabilityZone: us-east-2a
              endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              healthStatus: healthy
              id: primary-0
              ports:
              - 3306
              status: RUNNING
            privateNetworkCIDR: 10.0.0.2/24
            privateNetworkID: n-1234abcd
            publiclyAccessible: true
            resourceKey: primary
            resourceName: Primary MySQL Instance
        externalPayerId: external-payer-id-1234
        gcpProjectID: my-project
        highAvailability: true
        id: instance-abcd1234
        last_modified_at: 2023-01-20T00:00:00Z
        network_type: PUBLIC
        productTierFeatures:
          BILLING:
            enabled: false
          LOGS:
            auth:
              password: px3c4d5f6g7h8i
              username: abcd1234
            enabled: true
            websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
          METRICS:
            enabled: false
        region: us-east-1
        result_params:
          param1: value1
          param2: value2
        status: RUNNING
        subscriptionId: sub-abcd1234
      properties:
        active:
          description: True if this resource instance has associated infrastructure
            deployed
          example: true
          type: boolean
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        backupStatus:
          $ref: '#/components/schemas/BackupStatus'
        cloud_provider:
          description: The cloud provider name
          example: aws
          type: string
        created_at:
          description: The instance creation time
          example: 2023-01-10T00:00:00Z
          type: string
        createdByUserId:
          description: The user ID that created the resource instance
          example: user-12345678
          type: string
        createdByUserName:
          description: The name of the user that created the resource instance
          example: John Doe
          type: string
        customNetworkDetail:
          $ref: '#/components/schemas/CustomNetworkResourceDetail'
        detailedNetworkTopology:
          additionalProperties:
            $ref: '#/components/schemas/ResourceNetworkTopologyResult'
          description: The detailed network topology
          example:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: primary
              resourceName: Primary MySQL Instance
          type: object
        externalPayerId:
          description: The external payer id to record which customer should pay for
            this resource instance
          example: external-payer-id-1234
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        highAvailability:
          description: Whether the instance is High Availability
          example: true
          type: boolean
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        last_modified_at:
          description: The instance update time
          example: 2023-01-20T00:00:00Z
          type: string
        network_type:
          description: The network type
          example: PUBLIC
          type: string
        productTierFeatures:
          additionalProperties: true
          description: The product tier features
          example:
            BILLING:
              enabled: false
            LOGS:
              auth:
                password: px3c4d5f6g7h8i
                username: abcd1234
              enabled: true
              websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
            METRICS:
              enabled: false
          type: object
        region:
          description: The region code
          example: us-east-1
          type: string
        result_params:
          description: Custom result parameters
          example:
            param1: value1
            param2: value2
        status:
          description: The instance status
          example: RUNNING
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
      required:
      - active
      - createdByUserId
      - createdByUserName
      - created_at
      - id
      - last_modified_at
      - productTierFeatures
      - result_params
      - status
      type: object
    DescribeResourceResult:
      example:
        actionHooks:
        - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
          scope: CLUSTER
          type: INIT
        additionalSecurityContext:
          AddCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          DropCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          SupplementalGroupIDs:
          - 1001
          - 999
        backupConfiguration:
          backupPeriodInHours: 24
          backupRetentionInDays: 7
        capabilities:
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        customLabels:
          key: value
        customSysCTLs:
          net.ipv4.tcp_syncookies: "1"
        customULimits:
        - ULimitsName: NoProc
          ULimitsType: Soft
          ULimitsValue: 1000
        - ULimitsName: NoFile
          ULimitsType: Hard
          ULimitsValue: 2048
        dependencies:
        - parameterMap:
            clusterId: writerId
            clusterOrg: userDatabase
          resourceId: r-12345678
        - parameterMap:
            clusterId: readerId
            clusterOrg: userDatabase
          resourceId: r-abcdef12
        description: An resource to manage a hosted public SaaS offering of a multi-writer
          MySQL service
        environmentVariables:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        fileSystemConfiguration:
          EFSFileSystemConfiguration:
            PerformanceMode: generalPurpose|maxIO
            ProvisionedThroughputInMibps: 125
            ThroughputMode: provisioned|bursting|elastic
        helmChartConfiguration:
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          password: my-password
          username: my-user
        id: r-12345678
        imageConfigId: imgc-12345678
        infraConfigId: ic-12345678
        internal: true
        isDeprecated: true
        key: galera
        kustomizeConfiguration:
          gitConfiguration:
            accessToken: my-token
            referenceName: tags/v1.0.0
            repositoryUrl: https://github.com/username/myrepo
            userName: my-user
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          kustomizePath: /kustomize
        l4LoadBalancerConfiguration:
          ingressPortConfiguration:
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8080
            ingressPort: 1234
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8081
            ingressPort: 5678
          - associatedResourceIDs:
            - r-vwxybz12
            - r-poij122v
            backendPort: 8082
            ingressPort: 9012
        l7LoadBalancerConfiguration:
          paths:
          - associatedResourceID: r-12345678
            path: /path
            port: 8080
        name: Galera
        operatorCRDConfiguration:
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          outputParameters:
            expiresAt: $out.status.notAfter
            issuerName: letsencrypt-prod
          readinessConditions:
            $out.status.conditions[?(@.type=='Ready')].status: true
          supplementalFiles:
          - |
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
          - |-
            apiVersion: ingress.nginx.io/v1
            kind: IngressClass
            metadata:
              name: nginx
            spec:
              controller: nginx.org/ingress-controller
          template: |-
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
                email: test@example.com
                privateKeySecretRef:
                  name: letsencrypt-prod
                solvers:
                - http01:
                    ingress:
                      class: nginx
        productTierId: pt-12345678
        proxyType: PortsBasedProxy
        resourceType: Generic
        serviceId: s-12345678
        terraformConfigurations:
          Laboriosam minus voluptas dolores.:
            gitConfiguration:
              accessToken: my-token
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
          Quia distinctio cupiditate corporis.:
            gitConfiguration:
              accessToken: my-token
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
          Sunt iusto voluptate et.:
            gitConfiguration:
              accessToken: my-token
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
      properties:
        actionHooks:
          description: The action hooks that this resource supports
          example:
          - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
            scope: CLUSTER
            type: INIT
          items:
            $ref: '#/components/schemas/RegisterActionHookRequestBody'
          type: array
        additionalSecurityContext:
          $ref: '#/components/schemas/AdditionalSecurityContext'
        backupConfiguration:
          $ref: '#/components/schemas/BackupConfiguration'
        capabilities:
          description: The capabilities enabled for the resource
          example:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          items:
            $ref: '#/components/schemas/ResourceCapability'
          type: array
        customLabels:
          additionalProperties:
            example: Ut sed porro ea doloremque perspiciatis itaque.
            type: string
          description: Custom labels for the resource
          example:
            key: value
          type: object
        customSysCTLs:
          additionalProperties:
            example: Aut corporis.
            type: string
          description: Custom sysctl settings for the resource
          example:
            net.ipv4.tcp_syncookies: "1"
          type: object
        customULimits:
          description: Custom ulimits for the resource
          example:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          items:
            $ref: '#/components/schemas/CustomULimits'
          type: array
        dependencies:
          example:
          - parameterMap:
              clusterId: writerId
              clusterOrg: userDatabase
            resourceId: r-12345678
          - parameterMap:
              clusterId: readerId
              clusterOrg: userDatabase
            resourceId: r-abcdef12
          items:
            $ref: '#/components/schemas/ResourceDependency'
          type: array
        description:
          description: A brief description of the resource
          example: An resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          type: string
        environmentVariables:
          description: The environment variables that this resource requires
          example:
          - name: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        fileSystemConfiguration:
          $ref: '#/components/schemas/FileSystemConfiguration'
        helmChartConfiguration:
          $ref: '#/components/schemas/HelmChartConfiguration'
        id:
          description: The ID of the resource
          example: r-12345678
          type: string
        imageConfigId:
          description: The ID of the image configuration that this resource refers
            to
          example: imgc-12345678
          type: string
        infraConfigId:
          description: The ID of the infrastructure configuration that this resource
            refers to
          example: ic-12345678
          type: string
        internal:
          default: false
          description: Whether this resource is internal or not
          example: false
          type: boolean
        isDeprecated:
          default: false
          description: Whether this resource is deprecated or not
          example: true
          type: boolean
        key:
          description: The key of the resource
          example: galera
          type: string
        kustomizeConfiguration:
          $ref: '#/components/schemas/KustomizeConfiguration'
        l4LoadBalancerConfiguration:
          $ref: '#/components/schemas/L4LoadBalancerConfiguration'
        l7LoadBalancerConfiguration:
          $ref: '#/components/schemas/L7LoadBalancerConfiguration'
        name:
          description: Name of the resource
          example: Galera
          type: string
        operatorCRDConfiguration:
          $ref: '#/components/schemas/OperatorCRDConfiguration'
        productTierId:
          description: The product tier ID
          example: pt-12345678
          type: string
        proxyType:
          description: The proxy type of instance
          example: PortsBasedProxy
          type: string
        resourceType:
          description: The type of the resource
          example: Generic
          type: string
        serviceId:
          description: The service ID that this API bundle belongs to
          example: s-12345678
          type: string
        terraformConfigurations:
          additionalProperties:
            $ref: '#/components/schemas/TerraformConfiguration'
          description: The Terraform configurations for various cloud providers
          example:
            Dolorum dolorem ut doloremque.:
              gitConfiguration:
                accessToken: my-token
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          type: object
      required:
      - description
      - id
      - internal
      - isDeprecated
      - key
      - name
      - productTierId
      - resourceType
      - serviceId
      type: object
    DescribeServiceAPIResult:
      example:
        apiVersion: v1
        deploymentConfigId: dc-12345678
        description: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
          for high availability
        id: sa-12345678
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        serviceName: mysql
      properties:
        apiVersion:
          description: The external version of the API
          example: v1
          type: string
        deploymentConfigId:
          description: The deployment configuration ID
          example: dc-12345678
          type: string
        description:
          description: A brief description of the service API bundle
          example: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
            for high availability
          type: string
        id:
          description: The service API ID
          example: sa-12345678
          type: string
        serviceEnvironmentId:
          description: The service environment ID
          example: se-12345678
          type: string
        serviceId:
          description: The service ID that this API bundle belongs to
          example: s-12345678
          type: string
        serviceName:
          description: The name of the service
          example: mysql
          type: string
      required:
      - apiVersion
      - deploymentConfigId
      - description
      - id
      - serviceEnvironmentId
      - serviceId
      - serviceName
      type: object
    DescribeServiceEnvironmentResult:
      example:
        autoApproveSubscription: false
        deploymentConfigId: dc-12345678
        description: The production environment for the MySQL multi-writer service
        id: se-12345678
        key: production
        name: Production
        roleType: admin
        saasPortalStatus: READY
        saasPortalUrl: https://saas-portal.example.com
        serviceAuthPublicKey: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        serviceId: s-12345678
        sourceEnvironmentId: se-12345678
        type: DEV
        visibility: Soluta exercitationem accusantium modi.
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        deploymentConfigId:
          description: The deployment configuration ID
          example: dc-12345678
          type: string
        description:
          description: A brief description of the service environment
          example: The production environment for the MySQL multi-writer service
          type: string
        id:
          description: The ID of the service environment
          example: se-12345678
          type: string
        key:
          description: Unique Key of the Service Environment
          example: production
          type: string
        name:
          description: Name of the Service Environment
          example: Production
          type: string
        roleType:
          description: The role type of the caller user
          example: admin
          type: string
        saasPortalStatus:
          description: The status of the SaaS portal for this environment type
          example: READY
          type: string
        saasPortalUrl:
          description: The URL of the SaaS portal for this environment type
          example: https://saas-portal.example.com
          type: string
        serviceAuthPublicKey:
          description: PEM-encoded Public key part of the key used to sign the JWT
            tokens for the service control plane APIs
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        serviceId:
          description: The ID of the service this environment belongs to
          example: s-12345678
          type: string
        sourceEnvironmentId:
          description: The ID of the service environment to use for promoting changes
            to this environment
          example: se-12345678
          type: string
        type:
          example: DEV
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: Quaerat eligendi possimus.
          type: string
      required:
      - deploymentConfigId
      - description
      - id
      - key
      - name
      - serviceId
      - type
      - visibility
      type: object
    DescribeServiceModelResult:
      example:
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        activeAccountConfigIds:
          aws: ac-12345678
          gcp: ac-23456789
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        features:
        - configuration:
            Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
              perspiciatis vel qui.
          feature: Aut illum quia non molestiae aut.
        - configuration:
            Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
              perspiciatis vel qui.
          feature: Aut illum quia non molestiae aut.
        - configuration:
            Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
              perspiciatis vel qui.
          feature: Aut illum quia non molestiae aut.
        id: sm-12345678
        key: mysql-multi-writer-service-hosted-model
        modelType: CUSTOMER_HOSTED
        name: MySQL multi-writer service hosted model
        productTiers:
        - pt-12345678
        - pt-87654321
        serviceApiId: sa-12345678
        serviceId: s-12345678
      properties:
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            example: At ut.
            type: string
          type: array
        activeAccountConfigIds:
          additionalProperties:
            example: Consequatur repellat error corporis.
            type: string
          description: The active infrastructure account configuration IDs per cloud
            provider
          example:
            aws: ac-12345678
            gcp: ac-23456789
          type: object
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        features:
          description: Enabled service model features
          example:
          - configuration:
              Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                perspiciatis vel qui.
            feature: Aut illum quia non molestiae aut.
          - configuration:
              Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                perspiciatis vel qui.
            feature: Aut illum quia non molestiae aut.
          - configuration:
              Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                perspiciatis vel qui.
            feature: Aut illum quia non molestiae aut.
          - configuration:
              Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                perspiciatis vel qui.
            feature: Aut illum quia non molestiae aut.
          items:
            $ref: '#/components/schemas/ServiceModelFeatureDetail'
          type: array
        id:
          description: The service model ID
          example: sm-12345678
          type: string
        key:
          description: The unique key for this service model
          example: mysql-multi-writer-service-hosted-model
          type: string
        modelType:
          description: The model type encapsulating this service
          example: CUSTOMER_HOSTED
          type: string
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        productTiers:
          description: The product tiers associated with this service model
          example:
          - pt-12345678
          - pt-87654321
          items:
            example: Ipsum odit.
            type: string
          type: array
        serviceApiId:
          description: The service API this model is for
          example: sa-12345678
          type: string
        serviceId:
          description: The service ID this model belongs to
          example: s-12345678
          type: string
      required:
      - description
      - id
      - key
      - modelType
      - name
      - serviceApiId
      - serviceId
      type: object
    DescribeServiceOfferingResourceResult:
      example:
        apis:
        - inputParameters:
          - defaultValue: null
            description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            modifiable: true
            options: null
            required: true
            type: string
          - defaultValue: option1
            description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            modifiable: true
            options:
            - option1
            - option2
            required: true
            type: string
          outputParameters:
          - description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            type: string
          - description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            type: string
          verb: create
        - inputParameters:
          - defaultValue: null
            description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            modifiable: true
            options: null
            required: true
            type: string
          outputParameters:
          - description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            type: string
          - description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            type: string
          verb: describe
      properties:
        apis:
          description: The APIs
          example:
          - inputParameters:
            - defaultValue: null
              description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              modifiable: true
              options: null
              required: true
              type: string
            - defaultValue: option1
              description: The type of the server
              displayName: Server Type
              isList: false
              key: serverType
              modifiable: true
              options:
              - option1
              - option2
              required: true
              type: string
            outputParameters:
            - description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              type: string
            - description: The type of the server
              displayName: Server Type
              isList: false
              key: serverType
              type: string
            verb: create
          - inputParameters:
            - defaultValue: null
              description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              modifiable: true
              options: null
              required: true
              type: string
            outputParameters:
            - description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              type: string
            - description: The type of the server
              displayName: Server Type
              isList: false
              key: serverType
              type: string
            verb: describe
          items:
            $ref: '#/components/schemas/APIEntity'
          type: array
      type: object
    DescribeServiceOfferingResult:
      example:
        createdAt: 2019-01-01T00:00:00Z
        isDeprecated: false
        offerings:
        - assets:
            cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
            cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
          billingPlans:
          - maxNumberofInstances: 4
          productTierName: Premium
          productTierURLKey: premium
          resourceParameters:
          - name: MySQL
            urlKey: mysql
          - name: Redis
            urlKey: redis
          serviceAPIID: sa-12345678
          serviceAPIVersion: v1
          serviceEnvironmentName: Production
          serviceEnvironmentURLKey: prod
          serviceEnvironmentVisibility: PRIVATE
          serviceModelName: Bring Your Own Account
          serviceModelURLKey: byoa
        - productTierName: Basic
          productTierURLKey: basic
          resourceParameters:
          - name: MySQL
            urlKey: mysql
          - name: Redis
            urlKey: redis
          serviceAPIID: sa-abcdefgh
          serviceAPIVersion: v1
          serviceEnvironmentName: Production
          serviceEnvironmentURLKey: prod
          serviceEnvironmentVisibility: PUBLIC
          serviceModelName: Hosted
          serviceModelURLKey: hosted
        serviceDescription: MySQL is a relational database
        serviceId: s-12345678
        serviceName: MySQL
        serviceOrgId: org-12345678
        serviceProviderId: sp-9zrg9W8Are
        serviceProviderName: "Omnistrate, Inc."
        serviceURLKey: mysql
      properties:
        createdAt:
          description: The time the service was created
          example: 2019-01-01T00:00:00Z
          type: string
        isDeprecated:
          default: false
          description: Whether the service offering is deprecated
          example: false
          type: boolean
        offerings:
          description: The service offerings
          example:
          - assets:
              cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
              cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
            billingPlans:
            - maxNumberofInstances: 4
            productTierName: Premium
            productTierURLKey: premium
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-12345678
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PRIVATE
            serviceModelName: Bring Your Own Account
            serviceModelURLKey: byoa
          - productTierName: Basic
            productTierURLKey: basic
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-abcdefgh
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PUBLIC
            serviceModelName: Hosted
            serviceModelURLKey: hosted
          items:
            $ref: '#/components/schemas/ServiceOffering'
          type: array
        serviceDescription:
          description: The service description
          example: MySQL is a relational database
          type: string
        serviceId:
          description: The service id
          example: s-12345678
          type: string
        serviceName:
          description: The service name
          example: MySQL
          type: string
        serviceOrgId:
          description: The org id of the service
          example: org-12345678
          type: string
        serviceProviderId:
          description: The id of the service provider
          example: sp-9zrg9W8Are
          type: string
        serviceProviderName:
          description: The name of the service provider
          example: "Omnistrate, Inc."
          type: string
        serviceURLKey:
          description: The service URL key
          example: mysql
          type: string
      required:
      - createdAt
      - isDeprecated
      - offerings
      - serviceDescription
      - serviceId
      - serviceName
      - serviceOrgId
      - serviceProviderId
      - serviceProviderName
      - serviceURLKey
      type: object
    DescribeServiceResult:
      example:
        createdAt: 2019-01-01T00:00:00Z
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        id: s-12345678
        key: mysql
        name: MySQL multi-writer service
        roleType: admin
        serviceEnvironments:
        - id: se-12345678
          name: dev
          promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          saasPortalStatus: READY
          saasPortalUrl: https://saas-portal.example.com
          servicePlans:
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          sourceEnvironmentID: se-12345678
          sourceEnvironmentName: dev
          type: DEV
          visibility: private
        - id: se-12345678
          name: dev
          promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          saasPortalStatus: READY
          saasPortalUrl: https://saas-portal.example.com
          servicePlans:
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          sourceEnvironmentID: se-12345678
          sourceEnvironmentName: dev
          type: DEV
          visibility: private
        - id: se-12345678
          name: dev
          promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          saasPortalStatus: READY
          saasPortalUrl: https://saas-portal.example.com
          servicePlans:
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          sourceEnvironmentID: se-12345678
          sourceEnvironmentName: dev
          type: DEV
          visibility: private
        - id: se-12345678
          name: dev
          promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          saasPortalStatus: READY
          saasPortalUrl: https://saas-portal.example.com
          servicePlans:
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          sourceEnvironmentID: se-12345678
          sourceEnvironmentName: dev
          type: DEV
          visibility: private
        serviceLogoURL: Facilis vitae voluptatem esse debitis.
        serviceProviderID: sp-12345678
        serviceProviderName: "Omnistrate, Inc."
      properties:
        createdAt:
          description: The time the service was created
          example: 2019-01-01T00:00:00Z
          type: string
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        id:
          description: The service ID to operate on
          example: s-12345678
          type: string
        key:
          description: Unique key of the service
          example: mysql
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        roleType:
          description: The role type of the caller user
          example: admin
          type: string
        serviceEnvironments:
          description: List of service environments
          example:
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          items:
            $ref: '#/components/schemas/ServiceEnvironment'
          type: array
        serviceLogoURL:
          description: The logo for the service
          example: Sequi quia explicabo eligendi facilis recusandae.
          type: string
        serviceProviderID:
          description: The ID of the service provider owning the service
          example: sp-12345678
          type: string
        serviceProviderName:
          description: The name of the service provider
          example: "Omnistrate, Inc."
          type: string
      required:
      - createdAt
      - description
      - id
      - key
      - name
      - serviceEnvironments
      - serviceProviderID
      - serviceProviderName
      type: object
    DescribeStorageConfigResult:
      example:
        description: my-storage-config-description
        id: sc-12345678
        infraConfigIDs:
        - ic-12345678
        - ic-abcdefgh
        name: my-storage-config
        serviceId: s-12345678
        volumes:
          svc-12345678:
          - /data
          - /mnt/logs
          svc-23456789:
          - /config
      properties:
        description:
          description: Description of the storage config
          example: my-storage-config-description
          type: string
        id:
          description: The storage config ID
          example: sc-12345678
          type: string
        infraConfigIDs:
          description: The list of infra config IDs associated with the compute config.
          example:
          - ic-12345678
          - ic-abcdefgh
          items:
            example: Tempora illo.
            type: string
          type: array
        name:
          description: Name of the storage config
          example: my-storage-config
          type: string
        serviceId:
          description: The service ID
          example: s-12345678
          type: string
        volumes:
          additionalProperties:
            example:
            - Numquam officiis reprehenderit hic.
            - Quo facilis.
            items:
              example: Ea non.
              type: string
            type: array
          description: The storage volume config IDs and the corresponding mount path
          example:
            svc-12345678:
            - /data
            - /mnt/logs
            svc-23456789:
            - /config
          type: object
      required:
      - description
      - id
      - name
      - serviceId
      - volumes
      type: object
    DescribeStorageVolumeConfigResult:
      example:
        cloudProviderName: aws
        clusterStorageType: S3|$var.storageType|AWS::EFS
        description: A storage volume set to store the MySQL data directory
        disableBackup: false
        id: svc-12345678
        instanceStorageIops: "7500"
        instanceStorageSizeGi: "128"
        instanceStorageThroughputMiBps: "128"
        instanceStorageType: $var.storageType
        name: MySQL Data Volume
        serviceId: s-12345678
        storageResourceID: r-12345678
      properties:
        cloudProviderName:
          description: The cloud provider name for fixed storage types
          example: aws
          type: string
        clusterStorageType:
          description: The type of the fixed storage for the cluster
          example: S3|$var.storageType|AWS::EFS
          type: string
        description:
          description: A brief description of the context for the storage volume pool
          example: A storage volume set to store the MySQL data directory
          type: string
        disableBackup:
          description: Disable backup for the storage volume
          example: false
          type: boolean
        id:
          description: The storage volume config ID
          example: svc-12345678
          type: string
        instanceStorageIops:
          description: The IOPS provisioned for the configured instance storage type
          example: "7500"
          type: string
        instanceStorageSizeGi:
          description: The fixed storage size (in Gi) provisioned for the configured
            instance storage type
          example: "128"
          type: string
        instanceStorageThroughputMiBps:
          description: The throughput (in MiBps) provisioned for the configured instance
            storage type
          example: "128"
          type: string
        instanceStorageType:
          description: The type of the fixed storage for a compute instance
          example: $var.storageType
          type: string
        name:
          description: Name of the storage volume pool
          example: MySQL Data Volume
          type: string
        serviceId:
          description: The service ID
          example: s-12345678
          type: string
        storageResourceID:
          description: The storage resource ID
          example: r-12345678
          type: string
      required:
      - description
      - id
      - name
      - serviceId
      type: object
    DescribeSubscriptionRequestResult:
      example:
        createdAt: 2019-01-01T00:00:00Z
        id: subr-12345678
        productTierId: pt-12345678
        productTierName: Omnistrate Multi Tenancy
        rootUserEmail: abc@gmail.com
        rootUserId: org-12345678
        rootUserName: John Doe
        serviceId: s-12345678
        serviceLogoURL: Est quae perspiciatis quae nihil nam.
        serviceName: MySQL multi-writer service
        status: PENDING
        updatedAt: 2019-01-01T00:00:00Z
        updatedByUserId: user-12345678
        updatedByUserName: John Doe
      properties:
        createdAt:
          description: The time that this subscription request was issued
          example: 2019-01-01T00:00:00Z
          type: string
        id:
          description: The subscription ID
          example: subr-12345678
          type: string
        productTierId:
          description: The product tier ID that this subscription is tied to
          example: pt-12345678
          type: string
        productTierName:
          description: The name of the product tier
          example: Omnistrate Multi Tenancy
          type: string
        rootUserEmail:
          description: The email of the user that issued the subscription request
          example: abc@gmail.com
          type: string
        rootUserId:
          description: The ID of the user that issued the subscription request
          example: org-12345678
          type: string
        rootUserName:
          description: The name of the user that issued the subscription request
          example: John Doe
          type: string
        serviceId:
          description: The service ID that this subscription is tied to
          example: s-12345678
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Ipsa ab officia aliquam voluptas.
          type: string
        serviceName:
          description: The name of the service
          example: MySQL multi-writer service
          type: string
        status:
          description: The status of the subscription request
          example: PENDING
          type: string
        updatedAt:
          description: The time that this subscription request was issued
          example: 2019-01-01T00:00:00Z
          type: string
        updatedByUserId:
          description: The user ID that last updated the subscription request
          example: user-12345678
          type: string
        updatedByUserName:
          description: The user that last updated the subscription request
          example: John Doe
          type: string
      required:
      - createdAt
      - id
      - productTierId
      - productTierName
      - rootUserEmail
      - rootUserId
      - rootUserName
      - serviceId
      - serviceName
      - status
      - updatedAt
      - updatedByUserId
      - updatedByUserName
      type: object
    DescribeSubscriptionResult:
      example:
        accountConfigIdentityId: org-12345678
        cloudProviderNames:
        - aws
        - gcp
        createdAt: 2019-01-01T00:00:00Z
        defaultSubscription: true
        id: sub-12345678
        productTierId: pt-12345678
        productTierName: Omnistrate Multi Tenancy
        roleType: root
        rootUserId: user-12345678
        serviceId: s-12345678
        serviceLogoURL: Architecto quis.
        serviceName: MySQL multi-writer service
        serviceOrgId: org-12345678
        serviceOrgName: Omnistrate
        status: ACTIVE
        subscriptionOwnerName: John Doe
      properties:
        accountConfigIdentityId:
          description: The org ID of the account config identity
          example: org-12345678
          type: string
        cloudProviderNames:
          description: List of cloud provider names
          example:
          - aws
          - gcp
          items:
            example: Eos voluptatibus tempora voluptatum eos.
            type: string
          type: array
        createdAt:
          description: The time that this subscription was created
          example: 2019-01-01T00:00:00Z
          type: string
        defaultSubscription:
          description: Whether this is the default subscription for the user
          example: true
          type: boolean
        id:
          description: The subscription ID
          example: sub-12345678
          type: string
        productTierId:
          description: The product tier ID that this subscription is tied to
          example: pt-12345678
          type: string
        productTierName:
          description: The name of the product tier
          example: Omnistrate Multi Tenancy
          type: string
        roleType:
          description: The role type of the caller user in this subscription
          example: root
          type: string
        rootUserId:
          description: The user ID that this subscription belong to
          example: user-12345678
          type: string
        serviceId:
          description: The service ID that this subscription is tied to
          example: s-12345678
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Unde sapiente exercitationem ad doloremque officia veritatis.
          type: string
        serviceName:
          description: The name of the service
          example: MySQL multi-writer service
          type: string
        serviceOrgId:
          description: The org ID of the org that owns the service
          example: org-12345678
          type: string
        serviceOrgName:
          description: The name of the org that owns the service
          example: Omnistrate
          type: string
        status:
          description: The status of the subscription
          example: ACTIVE
          type: string
        subscriptionOwnerName:
          description: The name of the subscription owner user
          example: John Doe
          type: string
      required:
      - accountConfigIdentityId
      - cloudProviderNames
      - createdAt
      - defaultSubscription
      - id
      - productTierId
      - productTierName
      - roleType
      - rootUserId
      - serviceId
      - serviceLogoURL
      - serviceName
      - serviceOrgId
      - serviceOrgName
      - status
      - subscriptionOwnerName
      type: object
    DescribeUserBillingDetailsResult:
      example:
        billingEmbedURL: https://billing.provider.com/embed?customerId=cus_xxxxxxxxxxxxxx
        name: John Dae
        paymentConfigured: true
        paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
        userId: user-abcd1234
      properties:
        billingEmbedURL:
          description: The URL from the billing provider to embed in an iframe to
            show the user's billing information
          example: https://billing.provider.com/embed?customerId=cus_xxxxxxxxxxxxxx
          type: string
        name:
          description: The name of the user
          example: John Dae
          type: string
        paymentConfigured:
          description: Whether the customer has configured their payment information.
          example: true
          type: boolean
        paymentInfoPortalURL:
          description: The URL from the billing provide to redirect users to so they
            can enter their payment information.  Only present when first adding payment
            information
          example: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
          type: string
        userId:
          description: The User ID
          example: user-abcd1234
          type: string
      required:
      - billingEmbedURL
      - name
      - paymentConfigured
      - userId
      type: object
    DescribeUserResult:
      example:
        address:
          addressLine1: 1234 Main St
          addressLine2: Apt 123
          addressLine3: Building 123
          city: San Francisco
          country: US
          state: CA
          zip: "94123"
        createdAt: 2023-01-10T00:00:00Z
        email: abc@gmail.com
        id: user-abcd1234
        lastModifiedAt: 2023-01-20T00:00:00Z
        name: John Dae
        orgDescription: ACME Inc.
        orgFavIconURL: Illo ad illo ut.
        orgId: org-aKQ8G13QeR
        orgLogoURL: Libero quas quidem provident ratione.
        orgName: ACME
        orgPrivacyPolicy: Placeat repudiandae tenetur magni rerum libero delectus.
        orgSupportEmail: support@example.com
        orgTermsOfUse: Nisi accusantium ipsa eligendi sunt.
        orgURL: something.acme
        planName: STARTER
        roleType: reader
      properties:
        address:
          $ref: '#/components/schemas/Address'
        createdAt:
          description: The user creation time
          example: 2023-01-10T00:00:00Z
          type: string
        email:
          description: The email of the user
          example: abc@gmail.com
          type: string
        id:
          description: The User ID
          example: user-abcd1234
          type: string
        lastModifiedAt:
          description: The user update time
          example: 2023-01-20T00:00:00Z
          type: string
        name:
          description: The name of the user
          example: John Dae
          type: string
        orgDescription:
          description: The description of the org that this user owns
          example: ACME Inc.
          type: string
        orgFavIconURL:
          description: The favicon of the org that this user owns
          example: Ut hic sit.
          type: string
        orgId:
          description: The ID of the org that this user owns
          example: org-aKQ8G13QeR
          type: string
        orgLogoURL:
          description: The logo of the org that this user owns
          example: Hic ut omnis ea et harum at.
          type: string
        orgName:
          description: The org name that this user owns
          example: ACME
          type: string
        orgPrivacyPolicy:
          description: The privacy policy for the org that this user owns
          example: Aperiam expedita et et.
          type: string
        orgSupportEmail:
          description: The support email of the org that this user owns
          example: support@example.com
          type: string
        orgTermsOfUse:
          description: The terms of use for the org that this user owns
          example: Quia est et vel autem amet id.
          type: string
        orgURL:
          description: The url of the org that this user owns
          example: something.acme
          type: string
        planName:
          description: The name of the plan of the user
          example: STARTER
          type: string
        roleType:
          description: The role type of the user
          example: reader
          type: string
      required:
      - createdAt
      - email
      - id
      - lastModifiedAt
      - name
      - orgDescription
      - orgFavIconURL
      - orgId
      - orgLogoURL
      - orgName
      - orgPrivacyPolicy
      - orgSupportEmail
      - orgTermsOfUse
      - orgURL
      - roleType
      type: object
    DescribeUsersByOrgResult:
      example:
        Id: org-aKQ8G13QeR
        orgUsers:
        - email: abc@gmail.com
          invitedAt: 2023-01-10T00:00:00Z
          name: John Doe
          roleType: reader
          userId: user-abcd1234
      properties:
        Id:
          description: The ID of the org
          example: org-aKQ8G13QeR
          type: string
        orgUsers:
          description: The users associated with the corresponding org
          example:
          - email: abc@gmail.com
            invitedAt: 2023-01-10T00:00:00Z
            name: John Doe
            roleType: reader
            userId: user-abcd1234
          items:
            $ref: '#/components/schemas/OrgUsers'
          type: array
      required:
      - Id
      - orgUsers
      type: object
    DescribeUsersBySubscriptionResult:
      example:
        Id: sub-abcd1234
        subscriptionUsers:
        - email: abc@gmail.com
          name: John Doe
          roleType: reader
          userId: user-abcd1234
      properties:
        Id:
          description: The ID of the subscription
          example: sub-abcd1234
          type: string
        subscriptionUsers:
          description: The users associated with the corresponding subscription
          example:
          - email: abc@gmail.com
            name: John Doe
            roleType: reader
            userId: user-abcd1234
          items:
            $ref: '#/components/schemas/SubscriptionUsers'
          type: array
      required:
      - Id
      - subscriptionUsers
      type: object
    DescribeVUnitResult:
      example:
        cloudProvider: aws
        id: vu-12345678
        networkIds:
        - n-12345678
        - n-abcdefgh
        - n-1234efgh
        region: us-west-2
        serviceId: s-12345678
        serviceModelId: sm-12345678
      properties:
        cloudProvider:
          description: The infra / cloud provider name
          example: aws
          type: string
        id:
          description: VUnit to operate on
          example: vu-12345678
          type: string
        networkIds:
          description: List of network IDs in the given context
          example:
          - n-12345678
          - n-abcdefgh
          - n-1234efgh
          items:
            example: Ad non minima rerum non beatae.
            type: string
          type: array
        region:
          description: Region code specific to the cloud-provider
          example: us-west-2
          type: string
        serviceId:
          description: Service ID for the VUnit
          example: s-12345678
          type: string
        serviceModelId:
          description: Service Model ID for the VUnit
          example: sm-12345678
          type: string
      required:
      - cloudProvider
      - networkIds
      - region
      - serviceModelId
      type: object
    Describeresourcemetricsconfigresult:
      example:
        id: r-12345678
        metricEndpoint: http://localhost:9187/metrics
        serviceId: s-12345678
      properties:
        id:
          description: The ID of the resource
          example: r-12345678
          type: string
        metricEndpoint:
          description: The local host endpoint to supply prometheus metric
          example: http://localhost:9187/metrics
          type: string
        serviceId:
          description: The service ID that this API bundle belongs to
          example: s-12345678
          type: string
      required:
      - id
      - metricEndpoint
      - serviceId
      type: object
    DetailedNodeHealthResult:
      example:
        ConnectivityStatus: HEALTHY
        DiskHealth: HEALTHY
        LoadHealth: POD_NORMAL
        NodeHealth: HEALTHY
        ProcessHealth: HEALTHY
        ProcessLiveness: HEALTHY
      properties:
        ConnectivityStatus:
          description: The health status of the network endpoints
          example: HEALTHY
          type: string
        DiskHealth:
          description: The health status of the disk
          example: HEALTHY
          type: string
        LoadHealth:
          description: The load status of the pod
          example: POD_NORMAL
          type: string
        NodeHealth:
          description: The health status of the machine hosting the service
          example: HEALTHY
          type: string
        ProcessHealth:
          description: The health status of the process
          example: HEALTHY
          type: string
        ProcessLiveness:
          description: The liveness status of the process
          example: HEALTHY
          type: string
      required:
      - ConnectivityStatus
      - DiskHealth
      - LoadHealth
      - NodeHealth
      - ProcessHealth
      - ProcessLiveness
      type: object
    DiffTierVersionSetsResult:
      example:
        anotherVersion: "3.1"
        productTierId: Ullam voluptatem.
        resourceChangeSets:
          Ad impedit sed vero nulla molestiae et.:
            categorizedResourceChanges:
              Libero et deleniti et facilis exercitationem.:
                changes:
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                status: PENDING_UPDATE
            imageConfigChanges:
              changeState: PENDING_NEW
              imageConfigId: imgc-12345678
              imageName: mysql
            infraConfigChanges:
              changeState: PENDING_NEW
              infraConfigId: ic-12345678
              name: MySQL Writer Infra Config
            overallResourceStatus: PENDING_UPDATE
            productTierFeatureChanges: PENDING_UPDATE
            resourceChanges: PENDING_DELETE
            resourceName: Alias labore delectus quae sit error.
          Ut eaque adipisci repellendus alias eius quo.:
            categorizedResourceChanges:
              Libero et deleniti et facilis exercitationem.:
                changes:
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                status: PENDING_UPDATE
            imageConfigChanges:
              changeState: PENDING_NEW
              imageConfigId: imgc-12345678
              imageName: mysql
            infraConfigChanges:
              changeState: PENDING_NEW
              infraConfigId: ic-12345678
              name: MySQL Writer Infra Config
            overallResourceStatus: PENDING_UPDATE
            productTierFeatureChanges: PENDING_UPDATE
            resourceChanges: PENDING_DELETE
            resourceName: Alias labore delectus quae sit error.
        serviceId: s-12345678
        version: "3.0"
      properties:
        anotherVersion:
          description: The target version to compare against.
          example: "3.1"
          type: string
        productTierId:
          description: The product tier ID that this version set belongs to.
          example: Soluta quod repudiandae omnis.
          type: string
        resourceChangeSets:
          additionalProperties:
            $ref: '#/components/schemas/ChangeSet'
          description: The difference for the service API configuration per resource
          example:
            Fuga ut consequatur et voluptas atque.:
              categorizedResourceChanges:
                Libero et deleniti et facilis exercitationem.:
                  changes:
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  status: PENDING_UPDATE
              imageConfigChanges:
                changeState: PENDING_NEW
                imageConfigId: imgc-12345678
                imageName: mysql
              infraConfigChanges:
                changeState: PENDING_NEW
                infraConfigId: ic-12345678
                name: MySQL Writer Infra Config
              overallResourceStatus: PENDING_UPDATE
              productTierFeatureChanges: PENDING_UPDATE
              resourceChanges: PENDING_DELETE
              resourceName: Alias labore delectus quae sit error.
            Incidunt sint quae vero et consequatur.:
              categorizedResourceChanges:
                Libero et deleniti et facilis exercitationem.:
                  changes:
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  status: PENDING_UPDATE
              imageConfigChanges:
                changeState: PENDING_NEW
                imageConfigId: imgc-12345678
                imageName: mysql
              infraConfigChanges:
                changeState: PENDING_NEW
                infraConfigId: ic-12345678
                name: MySQL Writer Infra Config
              overallResourceStatus: PENDING_UPDATE
              productTierFeatureChanges: PENDING_UPDATE
              resourceChanges: PENDING_DELETE
              resourceName: Alias labore delectus quae sit error.
            Ipsam ut impedit.:
              categorizedResourceChanges:
                Libero et deleniti et facilis exercitationem.:
                  changes:
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  status: PENDING_UPDATE
              imageConfigChanges:
                changeState: PENDING_NEW
                imageConfigId: imgc-12345678
                imageName: mysql
              infraConfigChanges:
                changeState: PENDING_NEW
                infraConfigId: ic-12345678
                name: MySQL Writer Infra Config
              overallResourceStatus: PENDING_UPDATE
              productTierFeatureChanges: PENDING_UPDATE
              resourceChanges: PENDING_DELETE
              resourceName: Alias labore delectus quae sit error.
          type: object
        serviceId:
          description: ID of the Service
          example: s-12345678
          type: string
        version:
          description: The version number for the version set.
          example: "3.0"
          type: string
      required:
      - anotherVersion
      - productTierId
      - resourceChangeSets
      - serviceId
      - version
      type: object
    DisableProductTierFeatureRequestBody:
      example:
        feature: BILLING
        scope: INTERNAL
      properties:
        feature:
          description: Feature to disable
          example: BILLING
          type: string
        scope:
          description: Feature scope
          example: INTERNAL
          type: string
      required:
      - feature
      type: object
    DisableResourceCapabilityRequestBody:
      example:
        capability: SERVERLESS
      properties:
        capability:
          description: The capability to disable
          example: SERVERLESS
          type: string
      required:
      - capability
      type: object
    DisableServiceModelFeatureRequestBody:
      example:
        feature: Et quisquam dolorum laboriosam.
      properties:
        feature:
          example: Sit ipsam eum omnis commodi commodi.
          type: string
      required:
      - feature
      type: object
    EFSFileSystemConfiguration:
      example:
        PerformanceMode: generalPurpose|maxIO
        ProvisionedThroughputInMibps: 125
        ThroughputMode: provisioned|bursting|elastic
      properties:
        PerformanceMode:
          description: The performance mode of the EFS file system
          example: generalPurpose|maxIO
          type: string
        ProvisionedThroughputInMibps:
          description: "The throughput, measured in MiBps, that you want to provision\
            \ for the EFS file system, if throughput mode if provisioned"
          example: 125
          format: double
          type: number
        ThroughputMode:
          description: The throughput mode of the EFS file system
          example: provisioned|bursting|elastic
          type: string
      required:
      - PerformanceMode
      - ThroughputMode
      type: object
    EnableProductTierFeatureRequestBody:
      example:
        configuration:
          S3BucketArn: arn:aws:s3:::my_billing_bucket_name
        feature: BILLING
        scope: INTERNAL
      properties:
        configuration:
          additionalProperties: true
          description: The configuration parameters of the product tier feature
          example:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
          type: object
        feature:
          description: Feature to enable
          example: BILLING
          type: string
        scope:
          description: Feature scope
          example: INTERNAL
          type: string
      required:
      - feature
      type: object
    EnableResourceCapabilityRequestBody:
      example:
        capability: SERVERLESS
        configuration:
          EnableAutoStop: true
          MinimumNodesInPool: 5
          PortsMappingProxyConfig:
            MaxNumberOfClustersPerProxyInstance: 50
            NumberOfPortsPerCluster: 4
          ReferenceProxyKey: resource-proxy
          TargetPort: 5432
      properties:
        capability:
          description: The type of capability of a resource
          example: SERVERLESS
          type: string
        configuration:
          additionalProperties: true
          description: The configuration parameters of a capability of a resource
          example:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
          type: object
      required:
      - capability
      type: object
    EnvironmentHealthReport:
      example:
        models:
          sm-12345678:
            vu-11111111: UNKNOWN
            vu-12345678: UP
            vu-87654321: DOWN
      properties:
        models:
          additionalProperties:
            $ref: '#/components/schemas/VUnitHealthReport'
          description: Health report for each model in the environment
          example:
            sm-12345678:
              vu-11111111: UNKNOWN
              vu-12345678: UP
              vu-87654321: DOWN
          type: object
      type: object
    EnvironmentPromotionStatus:
      example:
        status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
        targetEnvironmentID: se-12345678
      properties:
        status:
          description: The status of the promotion
          example: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          type: string
        targetEnvironmentID:
          description: The ID of the target environment
          example: se-12345678
          type: string
      required:
      - status
      - targetEnvironmentID
      type: object
    EnvironmentVariable:
      description: A service environment variable
      example:
        key: MYSQL_ROOT_PASSWORD
        value: password
      properties:
        key:
          description: The key of the environment variable
          example: MYSQL_ROOT_PASSWORD
          type: string
        value:
          description: The value of the environment variable
          example: password
          type: string
      required:
      - key
      - value
      type: object
    Error:
      example:
        fault: false
        id: 123abc
        message: parameter 'p' must be an integer
        name: bad_request
        temporary: false
        timeout: true
      properties:
        fault:
          description: Is the error a server-side fault?
          example: false
          type: boolean
        id:
          description: ID is a unique identifier for this particular occurrence of
            the problem.
          example: 123abc
          type: string
        message:
          description: Message is a human-readable explanation specific to this occurrence
            of the problem.
          example: parameter 'p' must be an integer
          type: string
        name:
          description: Name is the name of this class of errors.
          example: bad_request
          type: string
        temporary:
          description: Is the error temporary?
          example: false
          type: boolean
        timeout:
          description: Is the error a timeout?
          example: false
          type: boolean
      required:
      - fault
      - id
      - message
      - name
      - temporary
      - timeout
      type: object
    FailoverResourceInstanceRequestBody:
      example:
        failedReplicaAction: FAILOVER_AND_RESTART
        failedReplicaID: db-0
      properties:
        failedReplicaAction:
          description: The failed replica action
          example: FAILOVER_AND_RESTART
          type: string
        failedReplicaID:
          description: The failed replica ID
          example: db-0
          type: string
      required:
      - failedReplicaID
      type: object
    FileMetadata:
      example:
        description: A file to store the configuration for the resource
        fileId: f-12345678
        mountPath: /etc/config
        name: file.txt
        size: 1234
        type: Config
        uploadTime: 2023-01-10T00:00:00Z
        uploadedBy: user
      properties:
        description:
          description: The description of the file
          example: A file to store the configuration for the resource
          type: string
        fileId:
          description: The ID of the file
          example: f-12345678
          type: string
        mountPath:
          description: The mount path of the file
          example: /etc/config
          type: string
        name:
          description: The name of the file
          example: file.txt
          type: string
        size:
          description: The size of the file
          example: 1234
          format: int64
          type: integer
        type:
          description: The type of the file
          example: Config
          type: string
        uploadTime:
          description: The time the file was uploaded
          example: 2023-01-10T00:00:00Z
          type: string
        uploadedBy:
          description: The user who uploaded the file
          example: user
          type: string
      required:
      - description
      - fileId
      - mountPath
      - name
      - size
      - type
      - uploadTime
      - uploadedBy
      type: object
    FileSystemConfiguration:
      example:
        EFSFileSystemConfiguration:
          PerformanceMode: generalPurpose|maxIO
          ProvisionedThroughputInMibps: 125
          ThroughputMode: provisioned|bursting|elastic
      properties:
        EFSFileSystemConfiguration:
          $ref: '#/components/schemas/EFSFileSystemConfiguration'
      type: object
    GenerateComposeSpecFromContainerImageRequestBody:
      example:
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        image: library/mysql:5.7
        imageRegistry: docker.io
        password: password
        username: username
      properties:
        environmentVariables:
          description: Runtime environment variables needed to run the image
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        image:
          description: Name of the image along with the tag. Include the repository
            name if the image is not from the official repository
          example: library/mysql:5.7
          type: string
        imageRegistry:
          description: Registry where the image is stored
          example: docker.io
          type: string
        password:
          description: Password to access the image registry
          example: password
          type: string
        username:
          description: Username to access the image registry
          example: username
          type: string
      required:
      - image
      - imageRegistry
      type: object
    GenerateComposeSpecFromContainerImageResult:
      example:
        fileContent: Illum dolor ab atque assumenda occaecati consequatur.
      properties:
        fileContent:
          description: Base64 encoded Compose Spec YAML in docker compose format
          example: Occaecati tempore maxime dolor esse.
          type: string
      required:
      - fileContent
      type: object
    GetCurrentUsageResult:
      example:
        endTime: 2021-01-01T00:00:00.000Z
        planName: STARTER
        startTime: 2021-01-01T00:00:00.000Z
        usage:
        - dimension: core/hours
          total: 0.67
      properties:
        endTime:
          description: End timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        planName:
          description: The name of the current plan
          example: STARTER
          type: string
        startTime:
          description: Start timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        usage:
          description: Usage for the current plan
          example:
          - dimension: core/hours
            total: 0.67
          items:
            $ref: '#/components/schemas/UsagePerDimension'
          type: array
      type: object
    GetServicePlanResult:
      example:
        AutoApproveSubscription: false
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        activeAccountConfigIds:
          aws: ac-12345678
          gcp: ac-23456789
        apiVersion: v1
        awsRegions:
        - us-east-2
        - ca-central-1
        deploymentConfigId: dc-12345678
        gcpRegions:
        - us-central1
        hasPendingChanges: true
        isProductTierDisabled: true
        latestMajorVersion: "3.0"
        modelType: CUSTOMER_HOSTED
        productTierDescription: A premium product tier
        productTierDocumentation: Any documentation
        productTierFeatures:
          BILLING: false
          LOGS: true
          METRICS: false
        productTierId: pt-12345678
        productTierKey: premium
        productTierName: Premium
        productTierPlanDescription: A premium plan
        productTierPricing:
          price1: value1
        productTierSupport: Any support
        serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
          clusters for high availability
        serviceApiId: sa-12345678
        serviceEnvironmentId: se-12345678
        serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
          clusters for high availability
        serviceModelFeatures:
        - configuration:
            Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
              perspiciatis vel qui.
          feature: Aut illum quia non molestiae aut.
        - configuration:
            Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
              perspiciatis vel qui.
          feature: Aut illum quia non molestiae aut.
        - configuration:
            Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
              perspiciatis vel qui.
          feature: Aut illum quia non molestiae aut.
        - configuration:
            Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
              perspiciatis vel qui.
          feature: Aut illum quia non molestiae aut.
        serviceModelId: sm-12345678
        serviceModelName: MySQL multi-writer service hosted model
        tierType: OMNISTRATE_DEDICATED_TENANCY
        versionSetStatus: Preferred|Active|Deprecated|Pending
      properties:
        AutoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            example: Aliquid possimus tenetur ut sit sunt sint.
            type: string
          type: array
        activeAccountConfigIds:
          additionalProperties:
            example: Quasi ut nihil dolor rerum omnis.
            type: string
          description: The active infrastructure account configuration IDs per cloud
            provider
          example:
            aws: ac-12345678
            gcp: ac-23456789
          type: object
        apiVersion:
          description: The external version of the API
          example: v1
          type: string
        awsRegions:
          description: The AWS regions that this service plan is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Voluptatem soluta voluptates consequatur aut sit sunt.
            type: string
          type: array
        deploymentConfigId:
          description: The deployment configuration ID
          example: dc-12345678
          type: string
        gcpRegions:
          description: The GCP regions that this service plan is available on
          example:
          - us-central1
          items:
            example: Et temporibus qui qui provident ipsam.
            type: string
          type: array
        hasPendingChanges:
          description: Whether there are any pending changes for the product tier
            configuration
          example: true
          type: boolean
        isProductTierDisabled:
          description: Whether the product tier is disabled
          example: true
          type: boolean
        latestMajorVersion:
          description: The version number for the latest major version set.
          example: "3.0"
          type: string
        modelType:
          description: The model type encapsulating this service
          example: CUSTOMER_HOSTED
          type: string
        productTierDescription:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        productTierDocumentation:
          description: Documentation
          example: Any documentation
          type: string
        productTierFeatures:
          additionalProperties:
            example: true
            type: boolean
          description: The features that are enabled / disabled for this product tier
          example:
            BILLING: false
            LOGS: true
            METRICS: false
          type: object
        productTierId:
          description: Product tier ID
          example: pt-12345678
          type: string
        productTierKey:
          description: Unique Key of the product tier
          example: premium
          type: string
        productTierName:
          description: Name of the product tier
          example: Premium
          type: string
        productTierPlanDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        productTierPricing:
          description: Pricing
          example:
            price1: value1
        productTierSupport:
          description: Support
          example: Any support
          type: string
        serviceApiDescription:
          description: A brief description of the service API bundle
          example: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
            for high availability
          type: string
        serviceApiId:
          description: The service API ID
          example: sa-12345678
          type: string
        serviceEnvironmentId:
          description: The service environment ID
          example: se-12345678
          type: string
        serviceModelDescription:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        serviceModelFeatures:
          description: Enabled service model features
          example:
          - configuration:
              Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                perspiciatis vel qui.
            feature: Aut illum quia non molestiae aut.
          - configuration:
              Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                perspiciatis vel qui.
            feature: Aut illum quia non molestiae aut.
          - configuration:
              Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                perspiciatis vel qui.
            feature: Aut illum quia non molestiae aut.
          items:
            $ref: '#/components/schemas/ServiceModelFeatureDetail'
          type: array
        serviceModelId:
          description: The service model ID
          example: sm-12345678
          type: string
        serviceModelName:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        tierType:
          description: Tier type
          example: OMNISTRATE_DEDICATED_TENANCY
          type: string
        versionSetStatus:
          description: The tier version set status.
          example: Preferred|Active|Deprecated|Pending
          type: string
      required:
      - AutoApproveSubscription
      - apiVersion
      - deploymentConfigId
      - hasPendingChanges
      - isProductTierDisabled
      - latestMajorVersion
      - modelType
      - productTierDescription
      - productTierDocumentation
      - productTierId
      - productTierKey
      - productTierName
      - productTierPlanDescription
      - productTierPricing
      - productTierSupport
      - serviceApiDescription
      - serviceApiId
      - serviceEnvironmentId
      - serviceModelDescription
      - serviceModelId
      - serviceModelName
      - tierType
      - versionSetStatus
      type: object
    GitConfiguration:
      example:
        accessToken: my-token
        referenceName: tags/v1.0.0
        repositoryUrl: https://github.com/username/myrepo
        userName: my-user
      properties:
        accessToken:
          description: The access token
          example: my-token
          type: string
        referenceName:
          description: The reference name of the repository
          example: tags/v1.0.0
          type: string
        repositoryUrl:
          description: The URL of the repository
          example: https://github.com/username/myrepo
          type: string
        userName:
          description: The name of github user
          example: my-user
          type: string
      required:
      - referenceName
      - repositoryUrl
      type: object
    HelmChartConfiguration:
      example:
        chartName: my-chart
        chartRepoName: my-repo
        chartRepoUrl: https://my-repo.com
        chartValues:
          key1: value1
          key2: 3
          key3:
            key4: value4
        chartVersion: 1.0.0
        password: my-password
        username: my-user
      properties:
        chartName:
          description: The chart name of the Helm package
          example: my-chart
          type: string
        chartRepoName:
          description: The chart repository name of the Helm package
          example: my-repo
          type: string
        chartRepoUrl:
          description: The chart repository URL of the Helm package
          example: https://my-repo.com
          type: string
        chartValues:
          additionalProperties: true
          description: The values of the Helm package
          example:
            key1: value1
            key2: 3
            key3:
              key4: value4
          type: object
        chartVersion:
          description: The chart version of the Helm package
          example: 1.0.0
          type: string
        password:
          description: The password to authenticate with the registry
          example: my-password
          type: string
        username:
          description: The username to authenticate with the registry
          example: my-user
          type: string
      required:
      - chartName
      - chartRepoName
      - chartRepoUrl
      - chartVersion
      type: object
    HelmPackage:
      example:
        chartName: my-chart
        chartRepoName: my-repo
        chartRepoUrl: https://my-repo.com
        chartValues:
          key1: value1
          key2: 3
          key3:
            key4: value4
        chartVersion: 1.0.0
        namespace: default
        password: my-password
        username: my-user
      properties:
        chartName:
          description: The chart name of the Helm package
          example: my-chart
          type: string
        chartRepoName:
          description: The chart repository name of the Helm package
          example: my-repo
          type: string
        chartRepoUrl:
          description: The chart repository URL of the Helm package
          example: https://my-repo.com
          type: string
        chartValues:
          additionalProperties: true
          description: The values of the Helm package
          example:
            key1: value1
            key2: 3
            key3:
              key4: value4
          type: object
        chartVersion:
          description: The chart version of the Helm package
          example: 1.0.0
          type: string
        namespace:
          description: The namespace where the Helm package should be installed
          example: default
          type: string
        password:
          description: The password to authenticate with the registry
          example: my-password
          type: string
        username:
          description: The username to authenticate with the registry
          example: my-user
          type: string
      required:
      - chartName
      - chartRepoName
      - chartRepoUrl
      - chartVersion
      - namespace
      type: object
    ImageConfigChangeSummary:
      example:
        changeState: PENDING_NEW
        imageConfigId: imgc-12345678
        imageName: mysql
      properties:
        changeState:
          description: The pending change state for the infra configuration
          example: PENDING_NEW
          type: string
        imageConfigId:
          description: The ID of the image configuration that this resource refers
            to
          example: imgc-12345678
          type: string
        imageName:
          description: Name of the container image
          example: mysql
          minLength: 1
          type: string
      type: object
    InfraConfigChangeSummary:
      example:
        changeState: PENDING_NEW
        infraConfigId: ic-12345678
        name: MySQL Writer Infra Config
      properties:
        changeState:
          description: The pending change state for the infra configuration
          example: PENDING_NEW
          type: string
        infraConfigId:
          description: The ID of the infrastructure configuration that this resource
            refers to
          example: ic-12345678
          type: string
        name:
          description: The name of the infra config
          example: MySQL Writer Infra Config
          type: string
      type: object
    InfraRollConfiguration:
      description: The rollout configuration to use for making changes to the resources
        backed by this infra
      example:
        infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
        maximumNumberOfResourceInstancesPerBatch: 1
        maximumUnavailableReplicas: 1
      properties:
        infraRolloutStrategy:
          description: Rollout strategy to use for infra config updates
          example: NEW_DEPLOYMENT_ONLY
          type: string
        maximumNumberOfResourceInstancesPerBatch:
          default: 1
          description: Maximum number of resource instances to update in a single
            batch
          example: 1
          format: int64
          minimum: 1
          type: integer
        maximumUnavailableReplicas:
          default: 1
          description: Maximum number of replicas of this resource that can be unavailable
            before halting the rollout
          example: 1
          format: int64
          minimum: 1
          type: integer
      type: object
    InputParameterEntity:
      example:
        custom: false
        defaultValue: option1
        dependentResourceID: r-12345678
        description: The name of the server
        displayName: Server Name
        isList: false
        key: serverName
        modifiable: true
        options:
        - option1
        - option2
        required: true
        type: Boolean|Float64|String|JSON|Resource
      properties:
        custom:
          description: Whether the parameter is custom
          example: false
          type: boolean
        defaultValue:
          description: The parameter default value
          example: option1
          type: string
        dependentResourceID:
          description: The parameter dependent resource ID
          example: r-12345678
          type: string
        description:
          description: The parameter description
          example: The name of the server
          type: string
        displayName:
          description: The parameter display name
          example: Server Name
          type: string
        isList:
          description: Whether the parameter is a list
          example: false
          type: boolean
        key:
          description: The parameter key
          example: serverName
          type: string
        modifiable:
          description: Whether the parameter is modifiable
          example: true
          type: boolean
        options:
          description: The parameter options
          example:
          - option1
          - option2
          items:
            example: Consequatur ipsam ut quo officiis molestiae corrupti.
            type: string
          type: array
        required:
          description: Whether the parameter is required
          example: true
          type: boolean
        type:
          description: The parameter type
          example: Boolean|Float64|String|JSON|Resource
          type: string
      required:
      - custom
      - description
      - displayName
      - isList
      - key
      - modifiable
      - required
      - type
      type: object
    InviteUserRequestBody:
      example:
        email: abc@gmail.com
        roleType: reader
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          example: reader
          type: string
      required:
      - email
      - roleType
      type: object
    Invoice:
      example:
        currency: USD
        invoiceDate: 2021-01-01T00:00:00.000Z
        invoiceId: 123MyCoolCorp980-2021-01-01-1234567890
        invoicePaymentTerm: "30"
        invoiceStatus: Open
        invoiceUrl: https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf
        taxAmount: 10
        totalAmount: 110
        totalAmountWithoutTax: 100
      properties:
        currency:
          description: The currency of the charge
          example: USD
          type: string
        invoiceDate:
          description: Date of the invoice
          example: 2021-01-01T00:00:00.000Z
          type: string
        invoiceId:
          description: ID of the invoice
          example: 123MyCoolCorp980-2021-01-01-1234567890
          type: string
        invoicePaymentTerm:
          description: Invoice Payment Term
          example: "30"
          type: string
        invoiceStatus:
          example: Open
          type: string
        invoiceUrl:
          description: URL for this invoice
          example: https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf
          type: string
        taxAmount:
          description: "Amount of tax, if any"
          example: 10
          format: double
          type: number
        totalAmount:
          description: Amount of Invoice
          example: 110
          format: double
          type: number
        totalAmountWithoutTax:
          description: Amount of Invoice without tax
          example: 100
          format: double
          type: number
      type: object
    KustomizeConfiguration:
      example:
        gitConfiguration:
          accessToken: my-token
          referenceName: tags/v1.0.0
          repositoryUrl: https://github.com/username/myrepo
          userName: my-user
        helmChartDependencies:
        - chartName: cert-manager
          chartVersion: v1.5.3
        - chartName: nginx-ingress
          chartVersion: v0.48.1
        - chartName: external-dns
          chartVersion: v0.7.0
        - chartName: cnpg-operator
          chartVersion: v0.23.1
        kustomizePath: /kustomize
      properties:
        gitConfiguration:
          $ref: '#/components/schemas/GitConfiguration'
        helmChartDependencies:
          description: The helm chart dependencies for the CRD - Optional
          example:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          items:
            $ref: '#/components/schemas/OperatorHelmChartDependency'
          type: array
        kustomizePath:
          description: The path to the kustomize directory
          example: /kustomize
          type: string
      required:
      - kustomizePath
      type: object
    L4LoadBalancerConfiguration:
      example:
        ingressPortConfiguration:
        - associatedResourceIDs:
          - r-12345678
          - r-abcdef12
          backendPort: 8080
          ingressPort: 1234
        - associatedResourceIDs:
          - r-12345678
          - r-abcdef12
          backendPort: 8081
          ingressPort: 5678
        - associatedResourceIDs:
          - r-vwxybz12
          - r-poij122v
          backendPort: 8082
          ingressPort: 9012
      properties:
        ingressPortConfiguration:
          description: The ingress port configuration to configure on the load balancer
          example:
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8080
            ingressPort: 1234
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8081
            ingressPort: 5678
          - associatedResourceIDs:
            - r-vwxybz12
            - r-poij122v
            backendPort: 8082
            ingressPort: 9012
          items:
            $ref: '#/components/schemas/BackendPortConfiguration'
          type: array
      type: object
    L7LoadBalancerConfiguration:
      example:
        paths:
        - associatedResourceID: r-12345678
          path: /path
          port: 8080
      properties:
        paths:
          description: The paths to configure on the load balancer
          example:
          - associatedResourceID: r-12345678
            path: /path
            port: 8080
          items:
            $ref: '#/components/schemas/LoadBalancerPathConfiguration'
          type: array
      type: object
    Limits:
      description: Limit of a parameter
      example:
        max: Veritatis quia sequi non sint rem.
        maxLength: Autem maxime beatae ea assumenda.
        min: Iusto eum quidem quod qui.
        minLength: Deleniti veritatis laboriosam.
      properties:
        max:
          description: Maximum value for an integer or floating-point parameter
          example: Vel aut provident dolorem.
          type: string
        maxLength:
          description: Maximum length of a string parameter
          example: Inventore et reprehenderit ut.
          type: string
        min:
          description: Minimum value for an integer or floating-point parameter
          example: Et maiores numquam quas ab.
          type: string
        minLength:
          description: Minimum length of a string parameter
          example: Nihil repellat omnis est debitis voluptas amet.
          type: string
      type: object
    ListAccountConfigResult:
      example:
        accountConfigs:
        - awsAccountID: "123456789012"
          awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          byoaInstanceIDs:
          - instance-12345678
          - instance-abcdefgh
          cloudProviderId: infra-12345678
          description: An AWS account hosting multiple dev environments
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
          id: ac-12345678
          name: Dev AWS account
          status: READY
          statusMessage: Account is ready
        - awsAccountID: "123456789012"
          awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          byoaInstanceIDs:
          - instance-12345678
          - instance-abcdefgh
          cloudProviderId: infra-12345678
          description: An AWS account hosting multiple dev environments
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
          id: ac-12345678
          name: Dev AWS account
          status: READY
          statusMessage: Account is ready
        - awsAccountID: "123456789012"
          awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          byoaInstanceIDs:
          - instance-12345678
          - instance-abcdefgh
          cloudProviderId: infra-12345678
          description: An AWS account hosting multiple dev environments
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
          id: ac-12345678
          name: Dev AWS account
          status: READY
          statusMessage: Account is ready
        ids:
        - ac-12345678
        - ac-abcdefgh
        - ac-1234efgh
        nextPageToken: next-token
      properties:
        accountConfigs:
          description: The list of account configs
          example:
          - awsAccountID: "123456789012"
            awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
            awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
            byoaInstanceIDs:
            - instance-12345678
            - instance-abcdefgh
            cloudProviderId: infra-12345678
            description: An AWS account hosting multiple dev environments
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
            id: ac-12345678
            name: Dev AWS account
            status: READY
            statusMessage: Account is ready
          - awsAccountID: "123456789012"
            awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
            awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
            byoaInstanceIDs:
            - instance-12345678
            - instance-abcdefgh
            cloudProviderId: infra-12345678
            description: An AWS account hosting multiple dev environments
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
            id: ac-12345678
            name: Dev AWS account
            status: READY
            statusMessage: Account is ready
          - awsAccountID: "123456789012"
            awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
            awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
            byoaInstanceIDs:
            - instance-12345678
            - instance-abcdefgh
            cloudProviderId: infra-12345678
            description: An AWS account hosting multiple dev environments
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
            id: ac-12345678
            name: Dev AWS account
            status: READY
            statusMessage: Account is ready
          - awsAccountID: "123456789012"
            awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
            awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
            byoaInstanceIDs:
            - instance-12345678
            - instance-abcdefgh
            cloudProviderId: infra-12345678
            description: An AWS account hosting multiple dev environments
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
            id: ac-12345678
            name: Dev AWS account
            status: READY
            statusMessage: Account is ready
          items:
            $ref: '#/components/schemas/DescribeAccountConfigResult'
          type: array
        ids:
          example:
          - ac-12345678
          - ac-abcdefgh
          - ac-1234efgh
          items:
            example: Rerum consequatur placeat quaerat.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      type: object
    ListActionHooksResult:
      example:
        hooks:
        - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
          scope: CLUSTER
          type: ADD
        - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
          scope: CLUSTER
          type: ADD
      properties:
        hooks:
          description: The list of action hooks
          example:
          - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
            scope: CLUSTER
            type: ADD
          - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
            scope: CLUSTER
            type: ADD
          - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
            scope: CLUSTER
            type: ADD
          items:
            $ref: '#/components/schemas/RegisterActionHookRequestBody'
          type: array
      required:
      - hooks
      type: object
    ListAssociatedResourcesResult:
      example:
        id: ic-12345678
        resourceIds:
        - r-12345678
        - r-abcdefgh
        serviceId: s-12345678
      properties:
        id:
          description: Infra Config ID to operate on
          example: ic-12345678
          type: string
        resourceIds:
          description: The resources associated with the infra config
          example:
          - r-12345678
          - r-abcdefgh
          items:
            example: Necessitatibus qui distinctio quidem.
            type: string
          type: array
        serviceId:
          description: The service ID
          example: s-12345678
          type: string
      required:
      - id
      - resourceIds
      - serviceId
      type: object
    ListBYOAConfigRequestBody:
      example:
        cloudProviderName: aws
      properties:
        cloudProviderName:
          description: Cloud Provider name to filter on
          example: aws
          type: string
      required:
      - cloudProviderName
      type: object
    ListComputeInstanceTypesResult:
      example:
        nextPageToken: next-token
        types:
        - m5.xlarge
        - c5.xlarge
        - r5.xlarge
      properties:
        nextPageToken:
          description: The next page token
          example: next-token
          type: string
        types:
          description: The list of compute instance type IDs
          example:
          - m5.xlarge
          - c5.xlarge
          - r5.xlarge
          items:
            example: Tempore eos.
            type: string
          type: array
      required:
      - types
      type: object
    ListCustomDomainResult:
      example:
        CustomDomains:
        - customDomain: mydomain.dev
          description: Description of the domain
          id: cd-12345678
          name: Dev domain
          route53Configuration:
            awsAccountID: "123456789012"
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
          status: READY
          statusMessage: Account is ready
        - customDomain: mydomain.dev
          description: Description of the domain
          id: cd-12345678
          name: Dev domain
          route53Configuration:
            awsAccountID: "123456789012"
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
          status: READY
          statusMessage: Account is ready
        - customDomain: mydomain.dev
          description: Description of the domain
          id: cd-12345678
          name: Dev domain
          route53Configuration:
            awsAccountID: "123456789012"
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
          status: READY
          statusMessage: Account is ready
        - customDomain: mydomain.dev
          description: Description of the domain
          id: cd-12345678
          name: Dev domain
          route53Configuration:
            awsAccountID: "123456789012"
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
          status: READY
          statusMessage: Account is ready
        ids:
        - cd-12345678
        - cd-abcdefgh
        - cd-1234efgh
        nextPageToken: next-token
      properties:
        CustomDomains:
          description: The list of custom domains
          example:
          - customDomain: mydomain.dev
            description: Description of the domain
            id: cd-12345678
            name: Dev domain
            route53Configuration:
              awsAccountID: "123456789012"
              awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
            status: READY
            statusMessage: Account is ready
          - customDomain: mydomain.dev
            description: Description of the domain
            id: cd-12345678
            name: Dev domain
            route53Configuration:
              awsAccountID: "123456789012"
              awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
            status: READY
            statusMessage: Account is ready
          - customDomain: mydomain.dev
            description: Description of the domain
            id: cd-12345678
            name: Dev domain
            route53Configuration:
              awsAccountID: "123456789012"
              awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
            status: READY
            statusMessage: Account is ready
          items:
            $ref: '#/components/schemas/DescribeCustomDomainResult'
          type: array
        ids:
          example:
          - cd-12345678
          - cd-abcdefgh
          - cd-1234efgh
          items:
            example: Harum voluptas explicabo sint molestias.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      type: object
    ListCustomNetworksResult:
      example:
        customNetworks:
        - cidr: 10.0.0.0/16
          cloudProviderName: aws
          cloudProviderRegion: us-east-1
          id: n-12345678
          name: Prod us-east-1
          networkFeaturesConfiguration:
            isPrivateLinkEnabled: true
          networkInstances:
          - awsAccountID: "123456789012"
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
        - cidr: 10.0.0.0/16
          cloudProviderName: aws
          cloudProviderRegion: us-east-1
          id: n-12345678
          name: Prod us-east-1
          networkFeaturesConfiguration:
            isPrivateLinkEnabled: true
          networkInstances:
          - awsAccountID: "123456789012"
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
        - cidr: 10.0.0.0/16
          cloudProviderName: aws
          cloudProviderRegion: us-east-1
          id: n-12345678
          name: Prod us-east-1
          networkFeaturesConfiguration:
            isPrivateLinkEnabled: true
          networkInstances:
          - awsAccountID: "123456789012"
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
        - cidr: 10.0.0.0/16
          cloudProviderName: aws
          cloudProviderRegion: us-east-1
          id: n-12345678
          name: Prod us-east-1
          networkFeaturesConfiguration:
            isPrivateLinkEnabled: true
          networkInstances:
          - awsAccountID: "123456789012"
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
      properties:
        customNetworks:
          description: List of custom networks
          example:
          - cidr: 10.0.0.0/16
            cloudProviderName: aws
            cloudProviderRegion: us-east-1
            id: n-12345678
            name: Prod us-east-1
            networkFeaturesConfiguration:
              isPrivateLinkEnabled: true
            networkInstances:
            - awsAccountID: "123456789012"
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
          - cidr: 10.0.0.0/16
            cloudProviderName: aws
            cloudProviderRegion: us-east-1
            id: n-12345678
            name: Prod us-east-1
            networkFeaturesConfiguration:
              isPrivateLinkEnabled: true
            networkInstances:
            - awsAccountID: "123456789012"
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
          - cidr: 10.0.0.0/16
            cloudProviderName: aws
            cloudProviderRegion: us-east-1
            id: n-12345678
            name: Prod us-east-1
            networkFeaturesConfiguration:
              isPrivateLinkEnabled: true
            networkInstances:
            - awsAccountID: "123456789012"
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
          - cidr: 10.0.0.0/16
            cloudProviderName: aws
            cloudProviderRegion: us-east-1
            id: n-12345678
            name: Prod us-east-1
            networkFeaturesConfiguration:
              isPrivateLinkEnabled: true
            networkInstances:
            - awsAccountID: "123456789012"
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
          items:
            $ref: '#/components/schemas/CustomNetwork'
          type: array
      required:
      - customNetworks
      type: object
    ListDependentResourcesResult:
      example:
        id: r-12345678
        ids:
        - r-12345678
        - r-abcdefgh
        - r-1234abcd
        nextPageToken: next-token
        serviceId: s-12345678
      properties:
        id:
          description: The ID of the resource
          example: r-12345678
          type: string
        ids:
          description: List of dependent resource IDs
          example:
          - r-12345678
          - r-abcdefgh
          - r-1234abcd
          items:
            example: Nesciunt perspiciatis.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
        serviceId:
          description: The service ID that this API bundle belongs to
          example: s-12345678
          type: string
      required:
      - ids
      type: object
    ListEventResult:
      example:
        events:
        - eventSource: "Customer, Infra or Maintenance"
          id: event-12345678
          message: instance-abcd1234 created
          orgId: org-12345678
          orgName: Acme Corporation
          resourceInstanceId: instance-abcd1234
          resourceName: Galera
          time: 2023-01-10T00:00:00Z
          userId: user-12345678
          userName: John Doe
          workflowFailures:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
        - eventSource: "Customer, Infra or Maintenance"
          id: event-12345678
          message: instance-abcd1234 created
          orgId: org-12345678
          orgName: Acme Corporation
          resourceInstanceId: instance-abcd1234
          resourceName: Galera
          time: 2023-01-10T00:00:00Z
          userId: user-12345678
          userName: John Doe
          workflowFailures:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
        - eventSource: "Customer, Infra or Maintenance"
          id: event-12345678
          message: instance-abcd1234 created
          orgId: org-12345678
          orgName: Acme Corporation
          resourceInstanceId: instance-abcd1234
          resourceName: Galera
          time: 2023-01-10T00:00:00Z
          userId: user-12345678
          userName: John Doe
          workflowFailures:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
        - eventSource: "Customer, Infra or Maintenance"
          id: event-12345678
          message: instance-abcd1234 created
          orgId: org-12345678
          orgName: Acme Corporation
          resourceInstanceId: instance-abcd1234
          resourceName: Galera
          time: 2023-01-10T00:00:00Z
          userId: user-12345678
          userName: John Doe
          workflowFailures:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
        ids:
        - event-12345678
        nextPageToken: token
      properties:
        events:
          description: The list of events
          example:
          - eventSource: "Customer, Infra or Maintenance"
            id: event-12345678
            message: instance-abcd1234 created
            orgId: org-12345678
            orgName: Acme Corporation
            resourceInstanceId: instance-abcd1234
            resourceName: Galera
            time: 2023-01-10T00:00:00Z
            userId: user-12345678
            userName: John Doe
            workflowFailures:
            - eventTime: 2020-01-01T00:00:00Z
              message: Bootstrap failed for reason X
            - eventTime: 2020-01-01T00:01:00Z
              message: Compute failed for reason Y
          - eventSource: "Customer, Infra or Maintenance"
            id: event-12345678
            message: instance-abcd1234 created
            orgId: org-12345678
            orgName: Acme Corporation
            resourceInstanceId: instance-abcd1234
            resourceName: Galera
            time: 2023-01-10T00:00:00Z
            userId: user-12345678
            userName: John Doe
            workflowFailures:
            - eventTime: 2020-01-01T00:00:00Z
              message: Bootstrap failed for reason X
            - eventTime: 2020-01-01T00:01:00Z
              message: Compute failed for reason Y
          items:
            $ref: '#/components/schemas/DescribeEventResult'
          type: array
        ids:
          description: The list of event IDs
          example:
          - event-12345678
          items:
            example: Soluta explicabo minima eum vel laudantium enim.
            type: string
          type: array
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
      required:
      - ids
      type: object
    ListFilesResult:
      example:
        files:
        - description: A file to store the configuration for the resource
          fileId: f-12345678
          mountPath: /etc/config
          name: file.txt
          size: 1234
          type: Config
          uploadTime: 2023-01-10T00:00:00Z
          uploadedBy: user
        - description: A file to store the configuration for the resource
          fileId: f-12345678
          mountPath: /etc/config
          name: file.txt
          size: 1234
          type: Config
          uploadTime: 2023-01-10T00:00:00Z
          uploadedBy: user
      properties:
        files:
          description: List of files
          example:
          - description: A file to store the configuration for the resource
            fileId: f-12345678
            mountPath: /etc/config
            name: file.txt
            size: 1234
            type: Config
            uploadTime: 2023-01-10T00:00:00Z
            uploadedBy: user
          - description: A file to store the configuration for the resource
            fileId: f-12345678
            mountPath: /etc/config
            name: file.txt
            size: 1234
            type: Config
            uploadTime: 2023-01-10T00:00:00Z
            uploadedBy: user
          - description: A file to store the configuration for the resource
            fileId: f-12345678
            mountPath: /etc/config
            name: file.txt
            size: 1234
            type: Config
            uploadTime: 2023-01-10T00:00:00Z
            uploadedBy: user
          - description: A file to store the configuration for the resource
            fileId: f-12345678
            mountPath: /etc/config
            name: file.txt
            size: 1234
            type: Config
            uploadTime: 2023-01-10T00:00:00Z
            uploadedBy: user
          items:
            $ref: '#/components/schemas/FileMetadata'
          type: array
      required:
      - files
      type: object
    ListHelmPackagesResult:
      example:
        helmPackages:
        - chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          namespace: default
          password: my-password
          username: my-user
        - chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          namespace: default
          password: my-password
          username: my-user
        - chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          namespace: default
          password: my-password
          username: my-user
        - chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          namespace: default
          password: my-password
          username: my-user
      properties:
        helmPackages:
          description: List of Helm packages
          example:
          - chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            namespace: default
            password: my-password
            username: my-user
          - chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            namespace: default
            password: my-password
            username: my-user
          items:
            $ref: '#/components/schemas/HelmPackage'
          type: array
      type: object
    ListIdentityProvidersResult:
      example:
        identityProviders:
        - clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          clientSecret: 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
          id: idp-12345678
          identityProviderName: Google
          status: Ready
        - clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          clientSecret: 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
          id: idp-12345678
          identityProviderName: Google
          status: Ready
      properties:
        identityProviders:
          description: The list of Identity Providers
          example:
          - clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
            clientSecret: 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
            id: idp-12345678
            identityProviderName: Google
            status: Ready
          - clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
            clientSecret: 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
            id: idp-12345678
            identityProviderName: Google
            status: Ready
          - clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
            clientSecret: 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
            id: idp-12345678
            identityProviderName: Google
            status: Ready
          - clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
            clientSecret: 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
            id: idp-12345678
            identityProviderName: Google
            status: Ready
          items:
            $ref: '#/components/schemas/DescribeIdentityProviderResult'
          type: array
      required:
      - identityProviders
      type: object
    ListInputParametersResult:
      example:
        ids:
        - ip-12345678
        - ip-12345679
        inputParameters:
        - defaultValue: "true"
          dependentResourceId: r-12345678
          description: Ut mollitia eveniet.
          hasOptions: false
          id: var-12345678
          isList: true
          key: s
          labeledOptions:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          limits:
            max: Debitis ea aspernatur aut blanditiis aperiam eum.
            maxLength: Et dolor modi.
            min: Expedita eos unde minima quia.
            minLength: Ab omnis illum.
          modifiable: false
          name: b
          options:
          - "true"
          - "false"
          required: true
          resourceId: r-12345678
          serviceId: s-12345678
          type: Dolorem commodi deserunt architecto ut.
        - defaultValue: "true"
          dependentResourceId: r-12345678
          description: Ut mollitia eveniet.
          hasOptions: false
          id: var-12345678
          isList: true
          key: s
          labeledOptions:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          limits:
            max: Debitis ea aspernatur aut blanditiis aperiam eum.
            maxLength: Et dolor modi.
            min: Expedita eos unde minima quia.
            minLength: Ab omnis illum.
          modifiable: false
          name: b
          options:
          - "true"
          - "false"
          required: true
          resourceId: r-12345678
          serviceId: s-12345678
          type: Dolorem commodi deserunt architecto ut.
        nextPageToken: next-token
      properties:
        ids:
          description: List of input parameter IDs
          example:
          - ip-12345678
          - ip-12345679
          items:
            example: Sit aut omnis in et.
            type: string
          type: array
        inputParameters:
          description: The input parameters
          example:
          - defaultValue: "true"
            dependentResourceId: r-12345678
            description: Ut mollitia eveniet.
            hasOptions: false
            id: var-12345678
            isList: true
            key: s
            labeledOptions:
              large: t3.xlarge
              medium: t3.large
              small: t3.medium
            limits:
              max: Debitis ea aspernatur aut blanditiis aperiam eum.
              maxLength: Et dolor modi.
              min: Expedita eos unde minima quia.
              minLength: Ab omnis illum.
            modifiable: false
            name: b
            options:
            - "true"
            - "false"
            required: true
            resourceId: r-12345678
            serviceId: s-12345678
            type: Dolorem commodi deserunt architecto ut.
          - defaultValue: "true"
            dependentResourceId: r-12345678
            description: Ut mollitia eveniet.
            hasOptions: false
            id: var-12345678
            isList: true
            key: s
            labeledOptions:
              large: t3.xlarge
              medium: t3.large
              small: t3.medium
            limits:
              max: Debitis ea aspernatur aut blanditiis aperiam eum.
              maxLength: Et dolor modi.
              min: Expedita eos unde minima quia.
              minLength: Ab omnis illum.
            modifiable: false
            name: b
            options:
            - "true"
            - "false"
            required: true
            resourceId: r-12345678
            serviceId: s-12345678
            type: Dolorem commodi deserunt architecto ut.
          - defaultValue: "true"
            dependentResourceId: r-12345678
            description: Ut mollitia eveniet.
            hasOptions: false
            id: var-12345678
            isList: true
            key: s
            labeledOptions:
              large: t3.xlarge
              medium: t3.large
              small: t3.medium
            limits:
              max: Debitis ea aspernatur aut blanditiis aperiam eum.
              maxLength: Et dolor modi.
              min: Expedita eos unde minima quia.
              minLength: Ab omnis illum.
            modifiable: false
            name: b
            options:
            - "true"
            - "false"
            required: true
            resourceId: r-12345678
            serviceId: s-12345678
            type: Dolorem commodi deserunt architecto ut.
          items:
            $ref: '#/components/schemas/DescribeInputParameterResult'
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListInvoicesResult:
      example:
        invoices:
        - currency: USD
          invoiceDate: 2021-01-01T00:00:00.000Z
          invoiceId: 123MyCoolCorp980-2021-01-01-1234567890
          invoicePaymentTerm: "30"
          invoiceStatus: Open
          invoiceUrl: https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf
          taxAmount: 10
          totalAmount: 110
          totalAmountWithoutTax: 100
        - currency: USD
          invoiceDate: 2021-01-01T00:00:00.000Z
          invoiceId: 123MyCoolCorp980-2021-01-01-1234567890
          invoicePaymentTerm: "30"
          invoiceStatus: Open
          invoiceUrl: https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf
          taxAmount: 10
          totalAmount: 110
          totalAmountWithoutTax: 100
        - currency: USD
          invoiceDate: 2021-01-01T00:00:00.000Z
          invoiceId: 123MyCoolCorp980-2021-01-01-1234567890
          invoicePaymentTerm: "30"
          invoiceStatus: Open
          invoiceUrl: https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf
          taxAmount: 10
          totalAmount: 110
          totalAmountWithoutTax: 100
      properties:
        invoices:
          description: List of Invoices
          example:
          - currency: USD
            invoiceDate: 2021-01-01T00:00:00.000Z
            invoiceId: 123MyCoolCorp980-2021-01-01-1234567890
            invoicePaymentTerm: "30"
            invoiceStatus: Open
            invoiceUrl: https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf
            taxAmount: 10
            totalAmount: 110
            totalAmountWithoutTax: 100
          - currency: USD
            invoiceDate: 2021-01-01T00:00:00.000Z
            invoiceId: 123MyCoolCorp980-2021-01-01-1234567890
            invoicePaymentTerm: "30"
            invoiceStatus: Open
            invoiceUrl: https://my-cool-bucket.s3.amazonaws.com/invoices/123MyCoolCorp980/2021-01-01/123MyCoolCorp980-2021-01-01-1234567890.pdf
            taxAmount: 10
            totalAmount: 110
            totalAmountWithoutTax: 100
          items:
            $ref: '#/components/schemas/Invoice'
          type: array
      type: object
    ListLimitRequestBody:
      example:
        family: COMPUTE_INFRA
      properties:
        family:
          description: Limit family
          example: COMPUTE_INFRA
          type: string
      required:
      - family
      type: object
    ListLimitResult:
      example:
        keys:
        - MAX_VIRTUAL_CORES_PER_RESOURCE
        nextPageToken: next-token
      properties:
        keys:
          description: List of limit keys
          example:
          - MAX_VIRTUAL_CORES_PER_RESOURCE
          items:
            example: Dolore ullam debitis maiores.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      required:
      - keys
      type: object
    ListOutputParametersResult:
      example:
        ids:
        - op-12345678
        nextPageToken: next-token
        outputParameters:
        - description: Username of the user created in the target system
          id: op-12345678
          key: username
          name: Username
          resourceId: r-12345678
          serviceId: s-12345678
          value: johndoe
          valueRef: $var.username
          valueType: Aut vitae.
        - description: Username of the user created in the target system
          id: op-12345678
          key: username
          name: Username
          resourceId: r-12345678
          serviceId: s-12345678
          value: johndoe
          valueRef: $var.username
          valueType: Aut vitae.
        - description: Username of the user created in the target system
          id: op-12345678
          key: username
          name: Username
          resourceId: r-12345678
          serviceId: s-12345678
          value: johndoe
          valueRef: $var.username
          valueType: Aut vitae.
      properties:
        ids:
          description: The IDs of the output parameters
          example:
          - op-12345678
          items:
            example: Est molestiae.
            type: string
          type: array
        nextPageToken:
          description: The token to use for the next page of results
          example: next-token
          type: string
        outputParameters:
          description: The output parameters
          example:
          - description: Username of the user created in the target system
            id: op-12345678
            key: username
            name: Username
            resourceId: r-12345678
            serviceId: s-12345678
            value: johndoe
            valueRef: $var.username
            valueType: Aut vitae.
          - description: Username of the user created in the target system
            id: op-12345678
            key: username
            name: Username
            resourceId: r-12345678
            serviceId: s-12345678
            value: johndoe
            valueRef: $var.username
            valueType: Aut vitae.
          - description: Username of the user created in the target system
            id: op-12345678
            key: username
            name: Username
            resourceId: r-12345678
            serviceId: s-12345678
            value: johndoe
            valueRef: $var.username
            valueType: Aut vitae.
          items:
            $ref: '#/components/schemas/DescribeOutputParameterResult'
          type: array
      required:
      - ids
      type: object
    ListProductTierBillingPlanResult:
      example:
        billingPlans:
        - allowCreatesWhenPaymentNotConfigured: true
          id: bp-12345678
          maxNumberofInstances: 5
          planName: STARTER
          pricing:
            cpuCoreHours: "0.001"
            memoryGiBHours: "0.0001"
            storageGiBHours: "0.0001"
          productTierId: pt-12345678
          serviceId: s-12345678
        - allowCreatesWhenPaymentNotConfigured: true
          id: bp-12345678
          maxNumberofInstances: 5
          planName: STARTER
          pricing:
            cpuCoreHours: "0.001"
            memoryGiBHours: "0.0001"
            storageGiBHours: "0.0001"
          productTierId: pt-12345678
          serviceId: s-12345678
        - allowCreatesWhenPaymentNotConfigured: true
          id: bp-12345678
          maxNumberofInstances: 5
          planName: STARTER
          pricing:
            cpuCoreHours: "0.001"
            memoryGiBHours: "0.0001"
            storageGiBHours: "0.0001"
          productTierId: pt-12345678
          serviceId: s-12345678
        - allowCreatesWhenPaymentNotConfigured: true
          id: bp-12345678
          maxNumberofInstances: 5
          planName: STARTER
          pricing:
            cpuCoreHours: "0.001"
            memoryGiBHours: "0.0001"
            storageGiBHours: "0.0001"
          productTierId: pt-12345678
          serviceId: s-12345678
      properties:
        billingPlans:
          description: List of product tier billing plans
          example:
          - allowCreatesWhenPaymentNotConfigured: true
            id: bp-12345678
            maxNumberofInstances: 5
            planName: STARTER
            pricing:
              cpuCoreHours: "0.001"
              memoryGiBHours: "0.0001"
              storageGiBHours: "0.0001"
            productTierId: pt-12345678
            serviceId: s-12345678
          - allowCreatesWhenPaymentNotConfigured: true
            id: bp-12345678
            maxNumberofInstances: 5
            planName: STARTER
            pricing:
              cpuCoreHours: "0.001"
              memoryGiBHours: "0.0001"
              storageGiBHours: "0.0001"
            productTierId: pt-12345678
            serviceId: s-12345678
          items:
            $ref: '#/components/schemas/BillingPlan'
          type: array
      required:
      - billingPlans
      type: object
    ListResourceCapabilitiesResponse:
      example:
        capabilities:
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
      properties:
        capabilities:
          description: The configurationParameters to enable capabilities for the
            resource
          example:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          items:
            $ref: '#/components/schemas/ResourceCapability'
          type: array
      type: object
    ListResourcesResult:
      example:
        ids:
        - r-12345678
        - r-abcdefgh
        - r-1234abcd
        nextPageToken: next-token
        resources:
        - actionHooks:
          - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
            scope: CLUSTER
            type: INIT
          additionalSecurityContext:
            AddCapabilities:
            - CAP_NET_ADMIN
            - CAP_NET_RAW
            DropCapabilities:
            - CAP_NET_ADMIN
            - CAP_NET_RAW
            SupplementalGroupIDs:
            - 1001
            - 999
          backupConfiguration:
            backupPeriodInHours: 24
            backupRetentionInDays: 7
          capabilities:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          customLabels:
            key: value
          customSysCTLs:
            net.ipv4.tcp_syncookies: "1"
          customULimits:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          dependencies:
          - parameterMap:
              clusterId: writerId
              clusterOrg: userDatabase
            resourceId: r-12345678
          - parameterMap:
              clusterId: readerId
              clusterOrg: userDatabase
            resourceId: r-abcdef12
          description: An resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          environmentVariables:
          - name: MYSQL_ROOT_PASSWORD
            value: password
          fileSystemConfiguration:
            EFSFileSystemConfiguration:
              PerformanceMode: generalPurpose|maxIO
              ProvisionedThroughputInMibps: 125
              ThroughputMode: provisioned|bursting|elastic
          helmChartConfiguration:
            chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            password: my-password
            username: my-user
          id: r-12345678
          imageConfigId: imgc-12345678
          infraConfigId: ic-12345678
          internal: false
          isDeprecated: true
          key: galera
          kustomizeConfiguration:
            gitConfiguration:
              accessToken: my-token
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            helmChartDependencies:
            - chartName: cert-manager
              chartVersion: v1.5.3
            - chartName: nginx-ingress
              chartVersion: v0.48.1
            - chartName: external-dns
              chartVersion: v0.7.0
            - chartName: cnpg-operator
              chartVersion: v0.23.1
            kustomizePath: /kustomize
          l4LoadBalancerConfiguration:
            ingressPortConfiguration:
            - associatedResourceIDs:
              - r-12345678
              - r-abcdef12
              backendPort: 8080
              ingressPort: 1234
            - associatedResourceIDs:
              - r-12345678
              - r-abcdef12
              backendPort: 8081
              ingressPort: 5678
            - associatedResourceIDs:
              - r-vwxybz12
              - r-poij122v
              backendPort: 8082
              ingressPort: 9012
          l7LoadBalancerConfiguration:
            paths:
            - associatedResourceID: r-12345678
              path: /path
              port: 8080
          name: Galera
          operatorCRDConfiguration:
            helmChartDependencies:
            - chartName: cert-manager
              chartVersion: v1.5.3
            - chartName: nginx-ingress
              chartVersion: v0.48.1
            - chartName: external-dns
              chartVersion: v0.7.0
            - chartName: cnpg-operator
              chartVersion: v0.23.1
            outputParameters:
              expiresAt: $out.status.notAfter
              issuerName: letsencrypt-prod
            readinessConditions:
              $out.status.conditions[?(@.type=='Ready')].status: true
            supplementalFiles:
            - |
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: letsencrypt-prod
              spec:
                acme:
                  server: https://acme-v02.api.letsencrypt.org/directory
            - |-
              apiVersion: ingress.nginx.io/v1
              kind: IngressClass
              metadata:
                name: nginx
              spec:
                controller: nginx.org/ingress-controller
            template: |-
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: letsencrypt-prod
              spec:
                acme:
                  server: https://acme-v02.api.letsencrypt.org/directory
                  email: test@example.com
                  privateKeySecretRef:
                    name: letsencrypt-prod
                  solvers:
                  - http01:
                      ingress:
                        class: nginx
          productTierId: pt-12345678
          proxyType: PortsBasedProxy
          resourceType: Generic
          serviceId: s-12345678
          terraformConfigurations:
            Dolorem aperiam consequatur quasi.:
              gitConfiguration:
                accessToken: my-token
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
        - actionHooks:
          - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
            scope: CLUSTER
            type: INIT
          additionalSecurityContext:
            AddCapabilities:
            - CAP_NET_ADMIN
            - CAP_NET_RAW
            DropCapabilities:
            - CAP_NET_ADMIN
            - CAP_NET_RAW
            SupplementalGroupIDs:
            - 1001
            - 999
          backupConfiguration:
            backupPeriodInHours: 24
            backupRetentionInDays: 7
          capabilities:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          customLabels:
            key: value
          customSysCTLs:
            net.ipv4.tcp_syncookies: "1"
          customULimits:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          dependencies:
          - parameterMap:
              clusterId: writerId
              clusterOrg: userDatabase
            resourceId: r-12345678
          - parameterMap:
              clusterId: readerId
              clusterOrg: userDatabase
            resourceId: r-abcdef12
          description: An resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          environmentVariables:
          - name: MYSQL_ROOT_PASSWORD
            value: password
          fileSystemConfiguration:
            EFSFileSystemConfiguration:
              PerformanceMode: generalPurpose|maxIO
              ProvisionedThroughputInMibps: 125
              ThroughputMode: provisioned|bursting|elastic
          helmChartConfiguration:
            chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            password: my-password
            username: my-user
          id: r-12345678
          imageConfigId: imgc-12345678
          infraConfigId: ic-12345678
          internal: false
          isDeprecated: true
          key: galera
          kustomizeConfiguration:
            gitConfiguration:
              accessToken: my-token
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            helmChartDependencies:
            - chartName: cert-manager
              chartVersion: v1.5.3
            - chartName: nginx-ingress
              chartVersion: v0.48.1
            - chartName: external-dns
              chartVersion: v0.7.0
            - chartName: cnpg-operator
              chartVersion: v0.23.1
            kustomizePath: /kustomize
          l4LoadBalancerConfiguration:
            ingressPortConfiguration:
            - associatedResourceIDs:
              - r-12345678
              - r-abcdef12
              backendPort: 8080
              ingressPort: 1234
            - associatedResourceIDs:
              - r-12345678
              - r-abcdef12
              backendPort: 8081
              ingressPort: 5678
            - associatedResourceIDs:
              - r-vwxybz12
              - r-poij122v
              backendPort: 8082
              ingressPort: 9012
          l7LoadBalancerConfiguration:
            paths:
            - associatedResourceID: r-12345678
              path: /path
              port: 8080
          name: Galera
          operatorCRDConfiguration:
            helmChartDependencies:
            - chartName: cert-manager
              chartVersion: v1.5.3
            - chartName: nginx-ingress
              chartVersion: v0.48.1
            - chartName: external-dns
              chartVersion: v0.7.0
            - chartName: cnpg-operator
              chartVersion: v0.23.1
            outputParameters:
              expiresAt: $out.status.notAfter
              issuerName: letsencrypt-prod
            readinessConditions:
              $out.status.conditions[?(@.type=='Ready')].status: true
            supplementalFiles:
            - |
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: letsencrypt-prod
              spec:
                acme:
                  server: https://acme-v02.api.letsencrypt.org/directory
            - |-
              apiVersion: ingress.nginx.io/v1
              kind: IngressClass
              metadata:
                name: nginx
              spec:
                controller: nginx.org/ingress-controller
            template: |-
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: letsencrypt-prod
              spec:
                acme:
                  server: https://acme-v02.api.letsencrypt.org/directory
                  email: test@example.com
                  privateKeySecretRef:
                    name: letsencrypt-prod
                  solvers:
                  - http01:
                      ingress:
                        class: nginx
          productTierId: pt-12345678
          proxyType: PortsBasedProxy
          resourceType: Generic
          serviceId: s-12345678
          terraformConfigurations:
            Dolorem aperiam consequatur quasi.:
              gitConfiguration:
                accessToken: my-token
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
        - actionHooks:
          - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
            scope: CLUSTER
            type: INIT
          additionalSecurityContext:
            AddCapabilities:
            - CAP_NET_ADMIN
            - CAP_NET_RAW
            DropCapabilities:
            - CAP_NET_ADMIN
            - CAP_NET_RAW
            SupplementalGroupIDs:
            - 1001
            - 999
          backupConfiguration:
            backupPeriodInHours: 24
            backupRetentionInDays: 7
          capabilities:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          customLabels:
            key: value
          customSysCTLs:
            net.ipv4.tcp_syncookies: "1"
          customULimits:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          dependencies:
          - parameterMap:
              clusterId: writerId
              clusterOrg: userDatabase
            resourceId: r-12345678
          - parameterMap:
              clusterId: readerId
              clusterOrg: userDatabase
            resourceId: r-abcdef12
          description: An resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          environmentVariables:
          - name: MYSQL_ROOT_PASSWORD
            value: password
          fileSystemConfiguration:
            EFSFileSystemConfiguration:
              PerformanceMode: generalPurpose|maxIO
              ProvisionedThroughputInMibps: 125
              ThroughputMode: provisioned|bursting|elastic
          helmChartConfiguration:
            chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            password: my-password
            username: my-user
          id: r-12345678
          imageConfigId: imgc-12345678
          infraConfigId: ic-12345678
          internal: false
          isDeprecated: true
          key: galera
          kustomizeConfiguration:
            gitConfiguration:
              accessToken: my-token
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            helmChartDependencies:
            - chartName: cert-manager
              chartVersion: v1.5.3
            - chartName: nginx-ingress
              chartVersion: v0.48.1
            - chartName: external-dns
              chartVersion: v0.7.0
            - chartName: cnpg-operator
              chartVersion: v0.23.1
            kustomizePath: /kustomize
          l4LoadBalancerConfiguration:
            ingressPortConfiguration:
            - associatedResourceIDs:
              - r-12345678
              - r-abcdef12
              backendPort: 8080
              ingressPort: 1234
            - associatedResourceIDs:
              - r-12345678
              - r-abcdef12
              backendPort: 8081
              ingressPort: 5678
            - associatedResourceIDs:
              - r-vwxybz12
              - r-poij122v
              backendPort: 8082
              ingressPort: 9012
          l7LoadBalancerConfiguration:
            paths:
            - associatedResourceID: r-12345678
              path: /path
              port: 8080
          name: Galera
          operatorCRDConfiguration:
            helmChartDependencies:
            - chartName: cert-manager
              chartVersion: v1.5.3
            - chartName: nginx-ingress
              chartVersion: v0.48.1
            - chartName: external-dns
              chartVersion: v0.7.0
            - chartName: cnpg-operator
              chartVersion: v0.23.1
            outputParameters:
              expiresAt: $out.status.notAfter
              issuerName: letsencrypt-prod
            readinessConditions:
              $out.status.conditions[?(@.type=='Ready')].status: true
            supplementalFiles:
            - |
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: letsencrypt-prod
              spec:
                acme:
                  server: https://acme-v02.api.letsencrypt.org/directory
            - |-
              apiVersion: ingress.nginx.io/v1
              kind: IngressClass
              metadata:
                name: nginx
              spec:
                controller: nginx.org/ingress-controller
            template: |-
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: letsencrypt-prod
              spec:
                acme:
                  server: https://acme-v02.api.letsencrypt.org/directory
                  email: test@example.com
                  privateKeySecretRef:
                    name: letsencrypt-prod
                  solvers:
                  - http01:
                      ingress:
                        class: nginx
          productTierId: pt-12345678
          proxyType: PortsBasedProxy
          resourceType: Generic
          serviceId: s-12345678
          terraformConfigurations:
            Dolorem aperiam consequatur quasi.:
              gitConfiguration:
                accessToken: my-token
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
      properties:
        ids:
          description: List of resource IDs
          example:
          - r-12345678
          - r-abcdefgh
          - r-1234abcd
          items:
            example: Nesciunt reprehenderit.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
        resources:
          description: List of resources
          example:
          - actionHooks:
            - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
              scope: CLUSTER
              type: INIT
            additionalSecurityContext:
              AddCapabilities:
              - CAP_NET_ADMIN
              - CAP_NET_RAW
              DropCapabilities:
              - CAP_NET_ADMIN
              - CAP_NET_RAW
              SupplementalGroupIDs:
              - 1001
              - 999
            backupConfiguration:
              backupPeriodInHours: 24
              backupRetentionInDays: 7
            capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            customLabels:
              key: value
            customSysCTLs:
              net.ipv4.tcp_syncookies: "1"
            customULimits:
            - ULimitsName: NoProc
              ULimitsType: Soft
              ULimitsValue: 1000
            - ULimitsName: NoFile
              ULimitsType: Hard
              ULimitsValue: 2048
            dependencies:
            - parameterMap:
                clusterId: writerId
                clusterOrg: userDatabase
              resourceId: r-12345678
            - parameterMap:
                clusterId: readerId
                clusterOrg: userDatabase
              resourceId: r-abcdef12
            description: An resource to manage a hosted public SaaS offering of a
              multi-writer MySQL service
            environmentVariables:
            - name: MYSQL_ROOT_PASSWORD
              value: password
            fileSystemConfiguration:
              EFSFileSystemConfiguration:
                PerformanceMode: generalPurpose|maxIO
                ProvisionedThroughputInMibps: 125
                ThroughputMode: provisioned|bursting|elastic
            helmChartConfiguration:
              chartName: my-chart
              chartRepoName: my-repo
              chartRepoUrl: https://my-repo.com
              chartValues:
                key1: value1
                key2: 3
                key3:
                  key4: value4
              chartVersion: 1.0.0
              password: my-password
              username: my-user
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            internal: false
            isDeprecated: true
            key: galera
            kustomizeConfiguration:
              gitConfiguration:
                accessToken: my-token
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              helmChartDependencies:
              - chartName: cert-manager
                chartVersion: v1.5.3
              - chartName: nginx-ingress
                chartVersion: v0.48.1
              - chartName: external-dns
                chartVersion: v0.7.0
              - chartName: cnpg-operator
                chartVersion: v0.23.1
              kustomizePath: /kustomize
            l4LoadBalancerConfiguration:
              ingressPortConfiguration:
              - associatedResourceIDs:
                - r-12345678
                - r-abcdef12
                backendPort: 8080
                ingressPort: 1234
              - associatedResourceIDs:
                - r-12345678
                - r-abcdef12
                backendPort: 8081
                ingressPort: 5678
              - associatedResourceIDs:
                - r-vwxybz12
                - r-poij122v
                backendPort: 8082
                ingressPort: 9012
            l7LoadBalancerConfiguration:
              paths:
              - associatedResourceID: r-12345678
                path: /path
                port: 8080
            name: Galera
            operatorCRDConfiguration:
              helmChartDependencies:
              - chartName: cert-manager
                chartVersion: v1.5.3
              - chartName: nginx-ingress
                chartVersion: v0.48.1
              - chartName: external-dns
                chartVersion: v0.7.0
              - chartName: cnpg-operator
                chartVersion: v0.23.1
              outputParameters:
                expiresAt: $out.status.notAfter
                issuerName: letsencrypt-prod
              readinessConditions:
                $out.status.conditions[?(@.type=='Ready')].status: true
              supplementalFiles:
              - |
                apiVersion: cert-manager.io/v1
                kind: ClusterIssuer
                metadata:
                  name: letsencrypt-prod
                spec:
                  acme:
                    server: https://acme-v02.api.letsencrypt.org/directory
              - |-
                apiVersion: ingress.nginx.io/v1
                kind: IngressClass
                metadata:
                  name: nginx
                spec:
                  controller: nginx.org/ingress-controller
              template: |-
                apiVersion: cert-manager.io/v1
                kind: ClusterIssuer
                metadata:
                  name: letsencrypt-prod
                spec:
                  acme:
                    server: https://acme-v02.api.letsencrypt.org/directory
                    email: test@example.com
                    privateKeySecretRef:
                      name: letsencrypt-prod
                    solvers:
                    - http01:
                        ingress:
                          class: nginx
            productTierId: pt-12345678
            proxyType: PortsBasedProxy
            resourceType: Generic
            serviceId: s-12345678
            terraformConfigurations:
              Dolorem aperiam consequatur quasi.:
                gitConfiguration:
                  accessToken: my-token
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                privateModuleGitAccessTokens:
                  tokenName: accessToken
                terraformPath: /project1/tf
          - actionHooks:
            - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
              scope: CLUSTER
              type: INIT
            additionalSecurityContext:
              AddCapabilities:
              - CAP_NET_ADMIN
              - CAP_NET_RAW
              DropCapabilities:
              - CAP_NET_ADMIN
              - CAP_NET_RAW
              SupplementalGroupIDs:
              - 1001
              - 999
            backupConfiguration:
              backupPeriodInHours: 24
              backupRetentionInDays: 7
            capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            customLabels:
              key: value
            customSysCTLs:
              net.ipv4.tcp_syncookies: "1"
            customULimits:
            - ULimitsName: NoProc
              ULimitsType: Soft
              ULimitsValue: 1000
            - ULimitsName: NoFile
              ULimitsType: Hard
              ULimitsValue: 2048
            dependencies:
            - parameterMap:
                clusterId: writerId
                clusterOrg: userDatabase
              resourceId: r-12345678
            - parameterMap:
                clusterId: readerId
                clusterOrg: userDatabase
              resourceId: r-abcdef12
            description: An resource to manage a hosted public SaaS offering of a
              multi-writer MySQL service
            environmentVariables:
            - name: MYSQL_ROOT_PASSWORD
              value: password
            fileSystemConfiguration:
              EFSFileSystemConfiguration:
                PerformanceMode: generalPurpose|maxIO
                ProvisionedThroughputInMibps: 125
                ThroughputMode: provisioned|bursting|elastic
            helmChartConfiguration:
              chartName: my-chart
              chartRepoName: my-repo
              chartRepoUrl: https://my-repo.com
              chartValues:
                key1: value1
                key2: 3
                key3:
                  key4: value4
              chartVersion: 1.0.0
              password: my-password
              username: my-user
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            internal: false
            isDeprecated: true
            key: galera
            kustomizeConfiguration:
              gitConfiguration:
                accessToken: my-token
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              helmChartDependencies:
              - chartName: cert-manager
                chartVersion: v1.5.3
              - chartName: nginx-ingress
                chartVersion: v0.48.1
              - chartName: external-dns
                chartVersion: v0.7.0
              - chartName: cnpg-operator
                chartVersion: v0.23.1
              kustomizePath: /kustomize
            l4LoadBalancerConfiguration:
              ingressPortConfiguration:
              - associatedResourceIDs:
                - r-12345678
                - r-abcdef12
                backendPort: 8080
                ingressPort: 1234
              - associatedResourceIDs:
                - r-12345678
                - r-abcdef12
                backendPort: 8081
                ingressPort: 5678
              - associatedResourceIDs:
                - r-vwxybz12
                - r-poij122v
                backendPort: 8082
                ingressPort: 9012
            l7LoadBalancerConfiguration:
              paths:
              - associatedResourceID: r-12345678
                path: /path
                port: 8080
            name: Galera
            operatorCRDConfiguration:
              helmChartDependencies:
              - chartName: cert-manager
                chartVersion: v1.5.3
              - chartName: nginx-ingress
                chartVersion: v0.48.1
              - chartName: external-dns
                chartVersion: v0.7.0
              - chartName: cnpg-operator
                chartVersion: v0.23.1
              outputParameters:
                expiresAt: $out.status.notAfter
                issuerName: letsencrypt-prod
              readinessConditions:
                $out.status.conditions[?(@.type=='Ready')].status: true
              supplementalFiles:
              - |
                apiVersion: cert-manager.io/v1
                kind: ClusterIssuer
                metadata:
                  name: letsencrypt-prod
                spec:
                  acme:
                    server: https://acme-v02.api.letsencrypt.org/directory
              - |-
                apiVersion: ingress.nginx.io/v1
                kind: IngressClass
                metadata:
                  name: nginx
                spec:
                  controller: nginx.org/ingress-controller
              template: |-
                apiVersion: cert-manager.io/v1
                kind: ClusterIssuer
                metadata:
                  name: letsencrypt-prod
                spec:
                  acme:
                    server: https://acme-v02.api.letsencrypt.org/directory
                    email: test@example.com
                    privateKeySecretRef:
                      name: letsencrypt-prod
                    solvers:
                    - http01:
                        ingress:
                          class: nginx
            productTierId: pt-12345678
            proxyType: PortsBasedProxy
            resourceType: Generic
            serviceId: s-12345678
            terraformConfigurations:
              Dolorem aperiam consequatur quasi.:
                gitConfiguration:
                  accessToken: my-token
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                privateModuleGitAccessTokens:
                  tokenName: accessToken
                terraformPath: /project1/tf
          - actionHooks:
            - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
              scope: CLUSTER
              type: INIT
            additionalSecurityContext:
              AddCapabilities:
              - CAP_NET_ADMIN
              - CAP_NET_RAW
              DropCapabilities:
              - CAP_NET_ADMIN
              - CAP_NET_RAW
              SupplementalGroupIDs:
              - 1001
              - 999
            backupConfiguration:
              backupPeriodInHours: 24
              backupRetentionInDays: 7
            capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            customLabels:
              key: value
            customSysCTLs:
              net.ipv4.tcp_syncookies: "1"
            customULimits:
            - ULimitsName: NoProc
              ULimitsType: Soft
              ULimitsValue: 1000
            - ULimitsName: NoFile
              ULimitsType: Hard
              ULimitsValue: 2048
            dependencies:
            - parameterMap:
                clusterId: writerId
                clusterOrg: userDatabase
              resourceId: r-12345678
            - parameterMap:
                clusterId: readerId
                clusterOrg: userDatabase
              resourceId: r-abcdef12
            description: An resource to manage a hosted public SaaS offering of a
              multi-writer MySQL service
            environmentVariables:
            - name: MYSQL_ROOT_PASSWORD
              value: password
            fileSystemConfiguration:
              EFSFileSystemConfiguration:
                PerformanceMode: generalPurpose|maxIO
                ProvisionedThroughputInMibps: 125
                ThroughputMode: provisioned|bursting|elastic
            helmChartConfiguration:
              chartName: my-chart
              chartRepoName: my-repo
              chartRepoUrl: https://my-repo.com
              chartValues:
                key1: value1
                key2: 3
                key3:
                  key4: value4
              chartVersion: 1.0.0
              password: my-password
              username: my-user
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            internal: false
            isDeprecated: true
            key: galera
            kustomizeConfiguration:
              gitConfiguration:
                accessToken: my-token
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              helmChartDependencies:
              - chartName: cert-manager
                chartVersion: v1.5.3
              - chartName: nginx-ingress
                chartVersion: v0.48.1
              - chartName: external-dns
                chartVersion: v0.7.0
              - chartName: cnpg-operator
                chartVersion: v0.23.1
              kustomizePath: /kustomize
            l4LoadBalancerConfiguration:
              ingressPortConfiguration:
              - associatedResourceIDs:
                - r-12345678
                - r-abcdef12
                backendPort: 8080
                ingressPort: 1234
              - associatedResourceIDs:
                - r-12345678
                - r-abcdef12
                backendPort: 8081
                ingressPort: 5678
              - associatedResourceIDs:
                - r-vwxybz12
                - r-poij122v
                backendPort: 8082
                ingressPort: 9012
            l7LoadBalancerConfiguration:
              paths:
              - associatedResourceID: r-12345678
                path: /path
                port: 8080
            name: Galera
            operatorCRDConfiguration:
              helmChartDependencies:
              - chartName: cert-manager
                chartVersion: v1.5.3
              - chartName: nginx-ingress
                chartVersion: v0.48.1
              - chartName: external-dns
                chartVersion: v0.7.0
              - chartName: cnpg-operator
                chartVersion: v0.23.1
              outputParameters:
                expiresAt: $out.status.notAfter
                issuerName: letsencrypt-prod
              readinessConditions:
                $out.status.conditions[?(@.type=='Ready')].status: true
              supplementalFiles:
              - |
                apiVersion: cert-manager.io/v1
                kind: ClusterIssuer
                metadata:
                  name: letsencrypt-prod
                spec:
                  acme:
                    server: https://acme-v02.api.letsencrypt.org/directory
              - |-
                apiVersion: ingress.nginx.io/v1
                kind: IngressClass
                metadata:
                  name: nginx
                spec:
                  controller: nginx.org/ingress-controller
              template: |-
                apiVersion: cert-manager.io/v1
                kind: ClusterIssuer
                metadata:
                  name: letsencrypt-prod
                spec:
                  acme:
                    server: https://acme-v02.api.letsencrypt.org/directory
                    email: test@example.com
                    privateKeySecretRef:
                      name: letsencrypt-prod
                    solvers:
                    - http01:
                        ingress:
                          class: nginx
            productTierId: pt-12345678
            proxyType: PortsBasedProxy
            resourceType: Generic
            serviceId: s-12345678
            terraformConfigurations:
              Dolorem aperiam consequatur quasi.:
                gitConfiguration:
                  accessToken: my-token
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                privateModuleGitAccessTokens:
                  tokenName: accessToken
                terraformPath: /project1/tf
          items:
            $ref: '#/components/schemas/DescribeResourceResult'
          type: array
      required:
      - ids
      type: object
    ListSaaSPortalCustomDomainsResult:
      example:
        customDomains:
        - clusterEndpoint: example.com
          customDomain: mycustomdomain.com
          description: My custom domain description
          environmentType: DEV
          name: MyCustomDomain
          status: READY
        - clusterEndpoint: example.com
          customDomain: mycustomdomain.com
          description: My custom domain description
          environmentType: DEV
          name: MyCustomDomain
          status: READY
      properties:
        customDomains:
          description: The list of custom domains
          example:
          - clusterEndpoint: example.com
            customDomain: mycustomdomain.com
            description: My custom domain description
            environmentType: DEV
            name: MyCustomDomain
            status: READY
          - clusterEndpoint: example.com
            customDomain: mycustomdomain.com
            description: My custom domain description
            environmentType: DEV
            name: MyCustomDomain
            status: READY
          items:
            $ref: '#/components/schemas/CustomDomain'
          type: array
      required:
      - customDomains
      type: object
    ListSaaSPortalsResult:
      example:
        saasPortals:
        - customDomain: mycustomdomain.com
          customDomainStatus: READY
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: saasportal
              resourceName: SaaS Portal
          emailConfig:
            smtpFromEmail: example@gmail.com
            smtpHost: smtp.gmail.com
            smtpPassword: password
            smtpPort: 587
            smtpUsername: username
          endpoint: https://saas-portal.example.com
          environmentType: DEV
          googleAnalyticsTagID: G-123456789
          imageConfig:
            imageName: myimage
            imageRegistry: ghcr.io
            imageTag: latest
          status: READY
        - customDomain: mycustomdomain.com
          customDomainStatus: READY
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: saasportal
              resourceName: SaaS Portal
          emailConfig:
            smtpFromEmail: example@gmail.com
            smtpHost: smtp.gmail.com
            smtpPassword: password
            smtpPort: 587
            smtpUsername: username
          endpoint: https://saas-portal.example.com
          environmentType: DEV
          googleAnalyticsTagID: G-123456789
          imageConfig:
            imageName: myimage
            imageRegistry: ghcr.io
            imageTag: latest
          status: READY
        - customDomain: mycustomdomain.com
          customDomainStatus: READY
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: saasportal
              resourceName: SaaS Portal
          emailConfig:
            smtpFromEmail: example@gmail.com
            smtpHost: smtp.gmail.com
            smtpPassword: password
            smtpPort: 587
            smtpUsername: username
          endpoint: https://saas-portal.example.com
          environmentType: DEV
          googleAnalyticsTagID: G-123456789
          imageConfig:
            imageName: myimage
            imageRegistry: ghcr.io
            imageTag: latest
          status: READY
      properties:
        saasPortals:
          description: The list of saas portals
          example:
          - customDomain: mycustomdomain.com
            customDomainStatus: READY
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: saasportal
                resourceName: SaaS Portal
            emailConfig:
              smtpFromEmail: example@gmail.com
              smtpHost: smtp.gmail.com
              smtpPassword: password
              smtpPort: 587
              smtpUsername: username
            endpoint: https://saas-portal.example.com
            environmentType: DEV
            googleAnalyticsTagID: G-123456789
            imageConfig:
              imageName: myimage
              imageRegistry: ghcr.io
              imageTag: latest
            status: READY
          - customDomain: mycustomdomain.com
            customDomainStatus: READY
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: saasportal
                resourceName: SaaS Portal
            emailConfig:
              smtpFromEmail: example@gmail.com
              smtpHost: smtp.gmail.com
              smtpPassword: password
              smtpPort: 587
              smtpUsername: username
            endpoint: https://saas-portal.example.com
            environmentType: DEV
            googleAnalyticsTagID: G-123456789
            imageConfig:
              imageName: myimage
              imageRegistry: ghcr.io
              imageTag: latest
            status: READY
          - customDomain: mycustomdomain.com
            customDomainStatus: READY
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: saasportal
                resourceName: SaaS Portal
            emailConfig:
              smtpFromEmail: example@gmail.com
              smtpHost: smtp.gmail.com
              smtpPassword: password
              smtpPort: 587
              smtpUsername: username
            endpoint: https://saas-portal.example.com
            environmentType: DEV
            googleAnalyticsTagID: G-123456789
            imageConfig:
              imageName: myimage
              imageRegistry: ghcr.io
              imageTag: latest
            status: READY
          items:
            $ref: '#/components/schemas/SaaSPortal'
          type: array
      required:
      - saasPortals
      type: object
    ListServiceEnvironmentsResult:
      example:
        ids:
        - se-12345678
        - se-23456789
        nextPageToken: next-token
      properties:
        ids:
          description: The list of service environment IDs
          example:
          - se-12345678
          - se-23456789
          items:
            example: Ullam eaque ea commodi.
            type: string
          type: array
        nextPageToken:
          description: The next token to use to retrieve the next page of results
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListServiceOfferingsResult:
      example:
        nextPageToken: next-token
        serviceIds:
        - s-12345678
        - s-abcdefgh
        services:
        - createdAt: 2019-01-01T00:00:00Z
          isDeprecated: false
          offerings:
          - assets:
              cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
              cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
            billingPlans:
            - maxNumberofInstances: 4
            productTierName: Premium
            productTierURLKey: premium
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-12345678
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PRIVATE
            serviceModelName: Bring Your Own Account
            serviceModelURLKey: byoa
          - productTierName: Basic
            productTierURLKey: basic
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-abcdefgh
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PUBLIC
            serviceModelName: Hosted
            serviceModelURLKey: hosted
          serviceDescription: MySQL is a relational database
          serviceId: s-12345678
          serviceName: MySQL
          serviceOrgId: org-12345678
          serviceProviderId: sp-9zrg9W8Are
          serviceProviderName: "Omnistrate, Inc."
          serviceURLKey: mysql
        - createdAt: 2019-01-01T00:00:00Z
          isDeprecated: false
          offerings:
          - assets:
              cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
              cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
            billingPlans:
            - maxNumberofInstances: 4
            productTierName: Premium
            productTierURLKey: premium
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-12345678
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PRIVATE
            serviceModelName: Bring Your Own Account
            serviceModelURLKey: byoa
          - productTierName: Basic
            productTierURLKey: basic
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-abcdefgh
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PUBLIC
            serviceModelName: Hosted
            serviceModelURLKey: hosted
          serviceDescription: MySQL is a relational database
          serviceId: s-12345678
          serviceName: MySQL
          serviceOrgId: org-12345678
          serviceProviderId: sp-9zrg9W8Are
          serviceProviderName: "Omnistrate, Inc."
          serviceURLKey: mysql
      properties:
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        serviceIds:
          description: The service IDs
          example:
          - s-12345678
          - s-abcdefgh
          items:
            example: Maxime adipisci quae deleniti et.
            type: string
          type: array
        services:
          description: List of services
          example:
          - createdAt: 2019-01-01T00:00:00Z
            isDeprecated: false
            offerings:
            - assets:
                cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
              billingPlans:
              - maxNumberofInstances: 4
              productTierName: Premium
              productTierURLKey: premium
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-12345678
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PRIVATE
              serviceModelName: Bring Your Own Account
              serviceModelURLKey: byoa
            - productTierName: Basic
              productTierURLKey: basic
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-abcdefgh
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PUBLIC
              serviceModelName: Hosted
              serviceModelURLKey: hosted
            serviceDescription: MySQL is a relational database
            serviceId: s-12345678
            serviceName: MySQL
            serviceOrgId: org-12345678
            serviceProviderId: sp-9zrg9W8Are
            serviceProviderName: "Omnistrate, Inc."
            serviceURLKey: mysql
          - createdAt: 2019-01-01T00:00:00Z
            isDeprecated: false
            offerings:
            - assets:
                cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
              billingPlans:
              - maxNumberofInstances: 4
              productTierName: Premium
              productTierURLKey: premium
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-12345678
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PRIVATE
              serviceModelName: Bring Your Own Account
              serviceModelURLKey: byoa
            - productTierName: Basic
              productTierURLKey: basic
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-abcdefgh
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PUBLIC
              serviceModelName: Hosted
              serviceModelURLKey: hosted
            serviceDescription: MySQL is a relational database
            serviceId: s-12345678
            serviceName: MySQL
            serviceOrgId: org-12345678
            serviceProviderId: sp-9zrg9W8Are
            serviceProviderName: "Omnistrate, Inc."
            serviceURLKey: mysql
          - createdAt: 2019-01-01T00:00:00Z
            isDeprecated: false
            offerings:
            - assets:
                cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
              billingPlans:
              - maxNumberofInstances: 4
              productTierName: Premium
              productTierURLKey: premium
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-12345678
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PRIVATE
              serviceModelName: Bring Your Own Account
              serviceModelURLKey: byoa
            - productTierName: Basic
              productTierURLKey: basic
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-abcdefgh
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PUBLIC
              serviceModelName: Hosted
              serviceModelURLKey: hosted
            serviceDescription: MySQL is a relational database
            serviceId: s-12345678
            serviceName: MySQL
            serviceOrgId: org-12345678
            serviceProviderId: sp-9zrg9W8Are
            serviceProviderName: "Omnistrate, Inc."
            serviceURLKey: mysql
          items:
            $ref: '#/components/schemas/DescribeServiceOfferingResult'
          type: array
      required:
      - serviceIds
      type: object
    ListServicePlansResult:
      example:
        nextPageToken: next-token
        servicePlans:
        - AutoApproveSubscription: false
          accountConfigIds:
          - ac-12345678
          - ac-23456789
          activeAccountConfigIds:
            aws: ac-12345678
            gcp: ac-23456789
          apiVersion: v1
          awsRegions:
          - us-east-2
          - ca-central-1
          deploymentConfigId: dc-12345678
          gcpRegions:
          - us-central1
          hasPendingChanges: true
          isProductTierDisabled: true
          latestMajorVersion: "3.0"
          modelType: CUSTOMER_HOSTED
          productTierDescription: A premium product tier
          productTierDocumentation: Any documentation
          productTierFeatures:
            BILLING: false
            LOGS: true
            METRICS: false
          productTierId: pt-12345678
          productTierKey: premium
          productTierName: Premium
          productTierPlanDescription: A premium plan
          productTierPricing:
            price1: value1
          productTierSupport: Any support
          serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
            clusters for high availability
          serviceApiId: sa-12345678
          serviceEnvironmentId: se-12345678
          serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
            clusters for high availability
          serviceModelFeatures:
          - configuration:
              Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                perspiciatis vel qui.
            feature: Aut illum quia non molestiae aut.
          - configuration:
              Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                perspiciatis vel qui.
            feature: Aut illum quia non molestiae aut.
          - configuration:
              Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                perspiciatis vel qui.
            feature: Aut illum quia non molestiae aut.
          serviceModelId: sm-12345678
          serviceModelName: MySQL multi-writer service hosted model
          tierType: OMNISTRATE_DEDICATED_TENANCY
          versionSetStatus: Preferred|Active|Deprecated|Pending
        - AutoApproveSubscription: false
          accountConfigIds:
          - ac-12345678
          - ac-23456789
          activeAccountConfigIds:
            aws: ac-12345678
            gcp: ac-23456789
          apiVersion: v1
          awsRegions:
          - us-east-2
          - ca-central-1
          deploymentConfigId: dc-12345678
          gcpRegions:
          - us-central1
          hasPendingChanges: true
          isProductTierDisabled: true
          latestMajorVersion: "3.0"
          modelType: CUSTOMER_HOSTED
          productTierDescription: A premium product tier
          productTierDocumentation: Any documentation
          productTierFeatures:
            BILLING: false
            LOGS: true
            METRICS: false
          productTierId: pt-12345678
          productTierKey: premium
          productTierName: Premium
          productTierPlanDescription: A premium plan
          productTierPricing:
            price1: value1
          productTierSupport: Any support
          serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
            clusters for high availability
          serviceApiId: sa-12345678
          serviceEnvironmentId: se-12345678
          serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
            clusters for high availability
          serviceModelFeatures:
          - configuration:
              Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                perspiciatis vel qui.
            feature: Aut illum quia non molestiae aut.
          - configuration:
              Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                perspiciatis vel qui.
            feature: Aut illum quia non molestiae aut.
          - configuration:
              Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                perspiciatis vel qui.
            feature: Aut illum quia non molestiae aut.
          serviceModelId: sm-12345678
          serviceModelName: MySQL multi-writer service hosted model
          tierType: OMNISTRATE_DEDICATED_TENANCY
          versionSetStatus: Preferred|Active|Deprecated|Pending
      properties:
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
        servicePlans:
          description: List of service plans
          example:
          - AutoApproveSubscription: false
            accountConfigIds:
            - ac-12345678
            - ac-23456789
            activeAccountConfigIds:
              aws: ac-12345678
              gcp: ac-23456789
            apiVersion: v1
            awsRegions:
            - us-east-2
            - ca-central-1
            deploymentConfigId: dc-12345678
            gcpRegions:
            - us-central1
            hasPendingChanges: true
            isProductTierDisabled: true
            latestMajorVersion: "3.0"
            modelType: CUSTOMER_HOSTED
            productTierDescription: A premium product tier
            productTierDocumentation: Any documentation
            productTierFeatures:
              BILLING: false
              LOGS: true
              METRICS: false
            productTierId: pt-12345678
            productTierKey: premium
            productTierName: Premium
            productTierPlanDescription: A premium plan
            productTierPricing:
              price1: value1
            productTierSupport: Any support
            serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
              clusters for high availability
            serviceApiId: sa-12345678
            serviceEnvironmentId: se-12345678
            serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
              clusters for high availability
            serviceModelFeatures:
            - configuration:
                Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                  perspiciatis vel qui.
              feature: Aut illum quia non molestiae aut.
            - configuration:
                Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                  perspiciatis vel qui.
              feature: Aut illum quia non molestiae aut.
            - configuration:
                Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                  perspiciatis vel qui.
              feature: Aut illum quia non molestiae aut.
            serviceModelId: sm-12345678
            serviceModelName: MySQL multi-writer service hosted model
            tierType: OMNISTRATE_DEDICATED_TENANCY
            versionSetStatus: Preferred|Active|Deprecated|Pending
          - AutoApproveSubscription: false
            accountConfigIds:
            - ac-12345678
            - ac-23456789
            activeAccountConfigIds:
              aws: ac-12345678
              gcp: ac-23456789
            apiVersion: v1
            awsRegions:
            - us-east-2
            - ca-central-1
            deploymentConfigId: dc-12345678
            gcpRegions:
            - us-central1
            hasPendingChanges: true
            isProductTierDisabled: true
            latestMajorVersion: "3.0"
            modelType: CUSTOMER_HOSTED
            productTierDescription: A premium product tier
            productTierDocumentation: Any documentation
            productTierFeatures:
              BILLING: false
              LOGS: true
              METRICS: false
            productTierId: pt-12345678
            productTierKey: premium
            productTierName: Premium
            productTierPlanDescription: A premium plan
            productTierPricing:
              price1: value1
            productTierSupport: Any support
            serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
              clusters for high availability
            serviceApiId: sa-12345678
            serviceEnvironmentId: se-12345678
            serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
              clusters for high availability
            serviceModelFeatures:
            - configuration:
                Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                  perspiciatis vel qui.
              feature: Aut illum quia non molestiae aut.
            - configuration:
                Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                  perspiciatis vel qui.
              feature: Aut illum quia non molestiae aut.
            - configuration:
                Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                  perspiciatis vel qui.
              feature: Aut illum quia non molestiae aut.
            serviceModelId: sm-12345678
            serviceModelName: MySQL multi-writer service hosted model
            tierType: OMNISTRATE_DEDICATED_TENANCY
            versionSetStatus: Preferred|Active|Deprecated|Pending
          items:
            $ref: '#/components/schemas/GetServicePlanResult'
          type: array
      required:
      - servicePlans
      type: object
    ListServiceResult:
      example:
        ids:
        - s-12345678
        - s-abcdefgh
        - s-1234efgh
        nextPageToken: next-token
        services:
        - createdAt: 2019-01-01T00:00:00Z
          description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: s-12345678
          key: mysql
          name: MySQL multi-writer service
          roleType: admin
          serviceEnvironments:
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          serviceLogoURL: Rerum quis consequatur.
          serviceProviderID: sp-12345678
          serviceProviderName: "Omnistrate, Inc."
        - createdAt: 2019-01-01T00:00:00Z
          description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: s-12345678
          key: mysql
          name: MySQL multi-writer service
          roleType: admin
          serviceEnvironments:
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          serviceLogoURL: Rerum quis consequatur.
          serviceProviderID: sp-12345678
          serviceProviderName: "Omnistrate, Inc."
        - createdAt: 2019-01-01T00:00:00Z
          description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: s-12345678
          key: mysql
          name: MySQL multi-writer service
          roleType: admin
          serviceEnvironments:
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          serviceLogoURL: Rerum quis consequatur.
          serviceProviderID: sp-12345678
          serviceProviderName: "Omnistrate, Inc."
        - createdAt: 2019-01-01T00:00:00Z
          description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: s-12345678
          key: mysql
          name: MySQL multi-writer service
          roleType: admin
          serviceEnvironments:
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          serviceLogoURL: Rerum quis consequatur.
          serviceProviderID: sp-12345678
          serviceProviderName: "Omnistrate, Inc."
      properties:
        ids:
          description: List of service IDs
          example:
          - s-12345678
          - s-abcdefgh
          - s-1234efgh
          items:
            example: Aliquam aspernatur sint illum vero sit.
            type: string
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results
          example: next-token
          type: string
        services:
          description: List of services
          example:
          - createdAt: 2019-01-01T00:00:00Z
            description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: s-12345678
            key: mysql
            name: MySQL multi-writer service
            roleType: admin
            serviceEnvironments:
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            serviceLogoURL: Rerum quis consequatur.
            serviceProviderID: sp-12345678
            serviceProviderName: "Omnistrate, Inc."
          - createdAt: 2019-01-01T00:00:00Z
            description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: s-12345678
            key: mysql
            name: MySQL multi-writer service
            roleType: admin
            serviceEnvironments:
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            serviceLogoURL: Rerum quis consequatur.
            serviceProviderID: sp-12345678
            serviceProviderName: "Omnistrate, Inc."
          - createdAt: 2019-01-01T00:00:00Z
            description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: s-12345678
            key: mysql
            name: MySQL multi-writer service
            roleType: admin
            serviceEnvironments:
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            serviceLogoURL: Rerum quis consequatur.
            serviceProviderID: sp-12345678
            serviceProviderName: "Omnistrate, Inc."
          items:
            $ref: '#/components/schemas/DescribeServiceResult'
          type: array
      required:
      - ids
      type: object
    ListSubscriptionRequestsResult:
      example:
        ids:
        - subr-12345678
        - subr-abcdefgh
        - subr-1234efgh
        nextPageToken: next-token
        subscriptionRequests:
        - createdAt: 2019-01-01T00:00:00Z
          id: subr-12345678
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          rootUserEmail: abc@gmail.com
          rootUserId: org-12345678
          rootUserName: John Doe
          serviceId: s-12345678
          serviceLogoURL: Necessitatibus non libero consequatur dolor ad eum.
          serviceName: MySQL multi-writer service
          status: PENDING
          updatedAt: 2019-01-01T00:00:00Z
          updatedByUserId: user-12345678
          updatedByUserName: John Doe
        - createdAt: 2019-01-01T00:00:00Z
          id: subr-12345678
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          rootUserEmail: abc@gmail.com
          rootUserId: org-12345678
          rootUserName: John Doe
          serviceId: s-12345678
          serviceLogoURL: Necessitatibus non libero consequatur dolor ad eum.
          serviceName: MySQL multi-writer service
          status: PENDING
          updatedAt: 2019-01-01T00:00:00Z
          updatedByUserId: user-12345678
          updatedByUserName: John Doe
      properties:
        ids:
          description: List of subscription request IDs
          example:
          - subr-12345678
          - subr-abcdefgh
          - subr-1234efgh
          items:
            example: Dolores sequi illo.
            type: string
          type: array
        nextPageToken:
          description: The next token to use when listing subscription requests
          example: next-token
          type: string
        subscriptionRequests:
          description: List of subscription requests
          example:
          - createdAt: 2019-01-01T00:00:00Z
            id: subr-12345678
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            rootUserEmail: abc@gmail.com
            rootUserId: org-12345678
            rootUserName: John Doe
            serviceId: s-12345678
            serviceLogoURL: Necessitatibus non libero consequatur dolor ad eum.
            serviceName: MySQL multi-writer service
            status: PENDING
            updatedAt: 2019-01-01T00:00:00Z
            updatedByUserId: user-12345678
            updatedByUserName: John Doe
          - createdAt: 2019-01-01T00:00:00Z
            id: subr-12345678
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            rootUserEmail: abc@gmail.com
            rootUserId: org-12345678
            rootUserName: John Doe
            serviceId: s-12345678
            serviceLogoURL: Necessitatibus non libero consequatur dolor ad eum.
            serviceName: MySQL multi-writer service
            status: PENDING
            updatedAt: 2019-01-01T00:00:00Z
            updatedByUserId: user-12345678
            updatedByUserName: John Doe
          items:
            $ref: '#/components/schemas/DescribeSubscriptionRequestResult'
          type: array
      required:
      - ids
      type: object
    ListSubscriptionsResult:
      example:
        ids:
        - sub-12345678
        - sub-abcdefgh
        - sub-1234efgh
        nextPageToken: next-token
        subscriptions:
        - accountConfigIdentityId: org-12345678
          cloudProviderNames:
          - aws
          - gcp
          createdAt: 2019-01-01T00:00:00Z
          defaultSubscription: true
          id: sub-12345678
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          roleType: root
          rootUserId: user-12345678
          serviceId: s-12345678
          serviceLogoURL: Autem deleniti dolores quisquam quia facere.
          serviceName: MySQL multi-writer service
          serviceOrgId: org-12345678
          serviceOrgName: Omnistrate
          status: ACTIVE
          subscriptionOwnerName: John Doe
        - accountConfigIdentityId: org-12345678
          cloudProviderNames:
          - aws
          - gcp
          createdAt: 2019-01-01T00:00:00Z
          defaultSubscription: true
          id: sub-12345678
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          roleType: root
          rootUserId: user-12345678
          serviceId: s-12345678
          serviceLogoURL: Autem deleniti dolores quisquam quia facere.
          serviceName: MySQL multi-writer service
          serviceOrgId: org-12345678
          serviceOrgName: Omnistrate
          status: ACTIVE
          subscriptionOwnerName: John Doe
      properties:
        ids:
          description: List of subscription IDs
          example:
          - sub-12345678
          - sub-abcdefgh
          - sub-1234efgh
          items:
            example: Commodi placeat suscipit maiores eum aperiam.
            type: string
          type: array
        nextPageToken:
          description: The next token to use when listing subscriptions
          example: next-token
          type: string
        subscriptions:
          description: List of subscriptions
          example:
          - accountConfigIdentityId: org-12345678
            cloudProviderNames:
            - aws
            - gcp
            createdAt: 2019-01-01T00:00:00Z
            defaultSubscription: true
            id: sub-12345678
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            roleType: root
            rootUserId: user-12345678
            serviceId: s-12345678
            serviceLogoURL: Autem deleniti dolores quisquam quia facere.
            serviceName: MySQL multi-writer service
            serviceOrgId: org-12345678
            serviceOrgName: Omnistrate
            status: ACTIVE
            subscriptionOwnerName: John Doe
          - accountConfigIdentityId: org-12345678
            cloudProviderNames:
            - aws
            - gcp
            createdAt: 2019-01-01T00:00:00Z
            defaultSubscription: true
            id: sub-12345678
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            roleType: root
            rootUserId: user-12345678
            serviceId: s-12345678
            serviceLogoURL: Autem deleniti dolores quisquam quia facere.
            serviceName: MySQL multi-writer service
            serviceOrgId: org-12345678
            serviceOrgName: Omnistrate
            status: ACTIVE
            subscriptionOwnerName: John Doe
          - accountConfigIdentityId: org-12345678
            cloudProviderNames:
            - aws
            - gcp
            createdAt: 2019-01-01T00:00:00Z
            defaultSubscription: true
            id: sub-12345678
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            roleType: root
            rootUserId: user-12345678
            serviceId: s-12345678
            serviceLogoURL: Autem deleniti dolores quisquam quia facere.
            serviceName: MySQL multi-writer service
            serviceOrgId: org-12345678
            serviceOrgName: Omnistrate
            status: ACTIVE
            subscriptionOwnerName: John Doe
          - accountConfigIdentityId: org-12345678
            cloudProviderNames:
            - aws
            - gcp
            createdAt: 2019-01-01T00:00:00Z
            defaultSubscription: true
            id: sub-12345678
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            roleType: root
            rootUserId: user-12345678
            serviceId: s-12345678
            serviceLogoURL: Autem deleniti dolores quisquam quia facere.
            serviceName: MySQL multi-writer service
            serviceOrgId: org-12345678
            serviceOrgName: Omnistrate
            status: ACTIVE
            subscriptionOwnerName: John Doe
          items:
            $ref: '#/components/schemas/DescribeSubscriptionResult'
          type: array
      required:
      - ids
      type: object
    ListTierVersionSetsResult:
      example:
        nextPageToken: next-token
        tierVersionSets:
        - autoApproveSubscription: false
          baseVersion: "3.0"
          createdAt: 2020-01-01T00:00:00Z
          createdBy: John Doe
          description: Praesentium optio nesciunt.
          enabledFeatures:
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          features:
            BILLING: false
            LOGS: true
            METRICS: false
          instanceCount: 12
          latestUpgradePathId: upgrade-12345678
          name: Regular version set
          parentVersion: "2.0"
          productTierId: Tempora eos omnis illo.
          releasedAt: 2020-01-01T00:00:00Z
          releasedBy: John Doe
          resources:
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          serviceId: s-12345678
          serviceModelId: Ut culpa voluptas corporis maxime nihil eaque.
          status: Preferred|Active|Deprecated|Pending
          type: Major|Incremental|UserDefined
          updatedAt: 2020-01-01T00:00:00Z
          version: "3.0"
        - autoApproveSubscription: false
          baseVersion: "3.0"
          createdAt: 2020-01-01T00:00:00Z
          createdBy: John Doe
          description: Praesentium optio nesciunt.
          enabledFeatures:
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          features:
            BILLING: false
            LOGS: true
            METRICS: false
          instanceCount: 12
          latestUpgradePathId: upgrade-12345678
          name: Regular version set
          parentVersion: "2.0"
          productTierId: Tempora eos omnis illo.
          releasedAt: 2020-01-01T00:00:00Z
          releasedBy: John Doe
          resources:
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          serviceId: s-12345678
          serviceModelId: Ut culpa voluptas corporis maxime nihil eaque.
          status: Preferred|Active|Deprecated|Pending
          type: Major|Incremental|UserDefined
          updatedAt: 2020-01-01T00:00:00Z
          version: "3.0"
      properties:
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        tierVersionSets:
          description: List of product-tier version sets.
          example:
          - autoApproveSubscription: false
            baseVersion: "3.0"
            createdAt: 2020-01-01T00:00:00Z
            createdBy: John Doe
            description: Praesentium optio nesciunt.
            enabledFeatures:
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            features:
              BILLING: false
              LOGS: true
              METRICS: false
            instanceCount: 12
            latestUpgradePathId: upgrade-12345678
            name: Regular version set
            parentVersion: "2.0"
            productTierId: Tempora eos omnis illo.
            releasedAt: 2020-01-01T00:00:00Z
            releasedBy: John Doe
            resources:
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            serviceId: s-12345678
            serviceModelId: Ut culpa voluptas corporis maxime nihil eaque.
            status: Preferred|Active|Deprecated|Pending
            type: Major|Incremental|UserDefined
            updatedAt: 2020-01-01T00:00:00Z
            version: "3.0"
          - autoApproveSubscription: false
            baseVersion: "3.0"
            createdAt: 2020-01-01T00:00:00Z
            createdBy: John Doe
            description: Praesentium optio nesciunt.
            enabledFeatures:
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            features:
              BILLING: false
              LOGS: true
              METRICS: false
            instanceCount: 12
            latestUpgradePathId: upgrade-12345678
            name: Regular version set
            parentVersion: "2.0"
            productTierId: Tempora eos omnis illo.
            releasedAt: 2020-01-01T00:00:00Z
            releasedBy: John Doe
            resources:
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            serviceId: s-12345678
            serviceModelId: Ut culpa voluptas corporis maxime nihil eaque.
            status: Preferred|Active|Deprecated|Pending
            type: Major|Incremental|UserDefined
            updatedAt: 2020-01-01T00:00:00Z
            version: "3.0"
          - autoApproveSubscription: false
            baseVersion: "3.0"
            createdAt: 2020-01-01T00:00:00Z
            createdBy: John Doe
            description: Praesentium optio nesciunt.
            enabledFeatures:
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            features:
              BILLING: false
              LOGS: true
              METRICS: false
            instanceCount: 12
            latestUpgradePathId: upgrade-12345678
            name: Regular version set
            parentVersion: "2.0"
            productTierId: Tempora eos omnis illo.
            releasedAt: 2020-01-01T00:00:00Z
            releasedBy: John Doe
            resources:
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            serviceId: s-12345678
            serviceModelId: Ut culpa voluptas corporis maxime nihil eaque.
            status: Preferred|Active|Deprecated|Pending
            type: Major|Incremental|UserDefined
            updatedAt: 2020-01-01T00:00:00Z
            version: "3.0"
          - autoApproveSubscription: false
            baseVersion: "3.0"
            createdAt: 2020-01-01T00:00:00Z
            createdBy: John Doe
            description: Praesentium optio nesciunt.
            enabledFeatures:
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            features:
              BILLING: false
              LOGS: true
              METRICS: false
            instanceCount: 12
            latestUpgradePathId: upgrade-12345678
            name: Regular version set
            parentVersion: "2.0"
            productTierId: Tempora eos omnis illo.
            releasedAt: 2020-01-01T00:00:00Z
            releasedBy: John Doe
            resources:
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            serviceId: s-12345678
            serviceModelId: Ut culpa voluptas corporis maxime nihil eaque.
            status: Preferred|Active|Deprecated|Pending
            type: Major|Incremental|UserDefined
            updatedAt: 2020-01-01T00:00:00Z
            version: "3.0"
          items:
            $ref: '#/components/schemas/TierVersionSet'
          type: array
      required:
      - tierVersionSets
      type: object
    ListVUnitsRequestBody:
      example:
        cloudProvider: aws
        region: us-west-2
      properties:
        cloudProvider:
          description: The infra / cloud provider name
          example: aws
          type: string
        region:
          description: Region code specific to the cloud-provider
          example: us-west-2
          type: string
      required:
      - cloudProvider
      - region
      type: object
    ListVUnitsResult:
      example:
        ids:
          aws:
          - vu-12345678
          - vu-abcdefgh
          gcp:
          - vu-1234efgh
        nextPageToken: next-token
      properties:
        ids:
          additionalProperties:
            example:
            - Autem et quia sunt non.
            - Et dolores.
            items:
              example: Sit qui quia dicta.
              type: string
            type: array
          description: List of VUnit IDs per Cloud provider
          example:
            aws:
            - vu-12345678
            - vu-abcdefgh
            gcp:
            - vu-1234efgh
          type: object
        nextPageToken:
          description: Next page token
          example: next-token
          type: string
      type: object
    LoadBalancerPathConfiguration:
      example:
        associatedResourceID: r-12345678
        path: /path
        port: 8080
      properties:
        associatedResourceID:
          description: The ID of the resource associated with the path
          example: r-12345678
          type: string
        path:
          description: The REST API path backed by the load balancer
          example: /path
          type: string
        port:
          description: The port to forward traffic to
          example: 8080
          format: int64
          type: integer
      required:
      - associatedResourceID
      - path
      - port
      type: object
    LoginWithIdentityProviderRequestBody:
      example:
        authorizationCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        deviceCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
        identityProviderName: Google
        invitedEmail: abc@gmail.com
        legalCompanyName: mywebsite
        redirectUri: https://www.example/redirect
      properties:
        authorizationCode:
          description: The authorization code from the Identity Provider
          example: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
          type: string
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        deviceCode:
          description: The device code from the Identity Provider
          example: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
          type: string
        identityProviderName:
          description: The name of the Identity Provider
          example: Google
          type: string
        invitedEmail:
          description: Email address that the user was invited with
          example: abc@gmail.com
          format: email
          type: string
        legalCompanyName:
          example: mywebsite
          minLength: 1
          type: string
        redirectUri:
          description: The redirect URI used to get the authorization code
          example: https://www.example/redirect
          type: string
      required:
      - identityProviderName
      type: object
    NetworkFeaturesConfiguration:
      example:
        isPrivateLinkEnabled: false
      properties:
        isPrivateLinkEnabled:
          description: Indicates if PrivateLink is enabled for the network
          example: true
          type: boolean
      type: object
    NodeNetworkTopologyResult:
      example:
        availabilityZone: us-east-2a
        detailedHealth:
          ConnectivityStatus: UNHEALTHY
          DiskHealth: UNKNOWN
          LoadHealth: POD_NORMAL
          NodeHealth: HEALTHY
          ProcessHealth: HEALTHY
          ProcessLiveness: HEALTHY
        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
        healthStatus: HEALTHY
        id: primary-0
        ports:
        - 80
        - 443
        status: RUNNING
        storageSize: 10
      properties:
        availabilityZone:
          description: The availability zone of the node
          example: us-east-2a
          type: string
        detailedHealth:
          $ref: '#/components/schemas/DetailedNodeHealthResult'
        endpoint:
          description: The endpoint of the node
          example: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          type: string
        healthStatus:
          description: The heath status of the node
          example: HEALTHY
          type: string
        id:
          description: The ID of the node
          example: primary-0
          type: string
        ports:
          description: The ports that this node exposes
          example:
          - 80
          - 443
          items:
            example: 8539527576363432745
            format: int64
            type: integer
          type: array
        status:
          description: The status of the node
          example: RUNNING
          type: string
        storageSize:
          description: The storage size of the node in GiB
          example: 10
          format: int64
          type: integer
      required:
      - availabilityZone
      - detailedHealth
      - endpoint
      - healthStatus
      - id
      - status
      type: object
    OfferingBillingPlan:
      example:
        maxNumberofInstances: 5
      properties:
        maxNumberofInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
      type: object
    OmnistrateServiceHealthResult:
      example:
        status: RUNNING
      properties:
        status:
          description: The status of the service
          example: RUNNING
          type: string
      required:
      - status
      type: object
    OmnistrateServiceVersionResult:
      example:
        apiVersion: "7"
        buildCommitSHA: 1234567890abcdef1234567890abcdef12345678
        buildTimestamp: 2020-01-01T00:00:00Z
      properties:
        apiVersion:
          description: Omnistrate API version
          example: 5pp
          minLength: 1
          type: string
        buildCommitSHA:
          description: The commit hash of the build
          example: 1234567890abcdef1234567890abcdef12345678
          type: string
        buildTimestamp:
          description: The timestamp of the build
          example: 2020-01-01T00:00:00Z
          type: string
      required:
      - apiVersion
      - buildCommitSHA
      - buildTimestamp
      type: object
    OperatorCRDConfiguration:
      example:
        helmChartDependencies:
        - chartName: cert-manager
          chartVersion: v1.5.3
        - chartName: nginx-ingress
          chartVersion: v0.48.1
        - chartName: external-dns
          chartVersion: v0.7.0
        - chartName: cnpg-operator
          chartVersion: v0.23.1
        outputParameters:
          expiresAt: $out.status.notAfter
          issuerName: letsencrypt-prod
        readinessConditions:
          $out.status.conditions[?(@.type=='Ready')].status: true
        supplementalFiles:
        - |
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: letsencrypt-prod
          spec:
            acme:
              server: https://acme-v02.api.letsencrypt.org/directory
        - |-
          apiVersion: ingress.nginx.io/v1
          kind: IngressClass
          metadata:
            name: nginx
          spec:
            controller: nginx.org/ingress-controller
        template: |-
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: letsencrypt-prod
          spec:
            acme:
              server: https://acme-v02.api.letsencrypt.org/directory
              email: test@example.com
              privateKeySecretRef:
                name: letsencrypt-prod
              solvers:
              - http01:
                  ingress:
                    class: nginx
      properties:
        helmChartDependencies:
          description: The helm chart dependencies for the CRD (including charts necessary
            to manage the operator) - Optional
          example:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          items:
            $ref: '#/components/schemas/OperatorHelmChartDependency'
          type: array
        outputParameters:
          additionalProperties:
            example: Ut accusamus officia quia dolorum.
            type: string
          description: The output parameters to export to the user from the CRD
          example:
            expiresAt: $out.status.notAfter
            issuerName: letsencrypt-prod
          type: object
        readinessConditions:
          additionalProperties: true
          description: The readiness conditions to check for the CRD
          example:
            $out.status.conditions[?(@.type=='Ready')].status: true
          type: object
        supplementalFiles:
          description: The supplemental files to apply with the CRD
          example:
          - |
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
          - |-
            apiVersion: ingress.nginx.io/v1
            kind: IngressClass
            metadata:
              name: nginx
            spec:
              controller: nginx.org/ingress-controller
          items:
            example: Est repellat a et atque possimus.
            type: string
          type: array
        template:
          description: The template of the CRD to apply on every deployment
          example: |-
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
                email: test@example.com
                privateKeySecretRef:
                  name: letsencrypt-prod
                solvers:
                - http01:
                    ingress:
                      class: nginx
          type: string
      required:
      - template
      type: object
    OperatorHelmChartDependency:
      example:
        chartName: cert-manager
        chartVersion: v1.5.3
      properties:
        chartName:
          description: The name of the helm chart
          example: cert-manager
          type: string
        chartVersion:
          description: The version of the helm chart
          example: v1.5.3
          type: string
      required:
      - chartName
      - chartVersion
      type: object
    OrgUsers:
      example:
        email: abc@gmail.com
        invitedAt: 2023-01-10T00:00:00Z
        name: John Dae
        roleType: reader
        userId: user-abcd1234
      properties:
        email:
          description: The email of the user
          example: abc@gmail.com
          type: string
        invitedAt:
          description: The time when the user was invited
          example: 2023-01-10T00:00:00Z
          type: string
        name:
          description: The name of the user
          example: John Dae
          type: string
        roleType:
          example: reader
          type: string
        userId:
          description: The User ID
          example: user-abcd1234
          type: string
      required:
      - email
      - invitedAt
      - name
      - roleType
      - userId
      type: object
    OutputParameterEntity:
      example:
        custom: false
        description: The name of the server
        displayName: Server Name
        isList: false
        key: serverName
        type: Boolean|Float64|String|JSON|Resource
      properties:
        custom:
          description: Whether the parameter is custom
          example: false
          type: boolean
        description:
          description: The parameter description
          example: The name of the server
          type: string
        displayName:
          description: The parameter display name
          example: Server Name
          type: string
        isList:
          description: Whether the parameter is a list
          example: false
          type: boolean
        key:
          description: The parameter key
          example: serverName
          type: string
        type:
          description: The parameter type
          example: Boolean|Float64|String|JSON|Resource
          type: string
      required:
      - custom
      - description
      - displayName
      - isList
      - key
      - type
      type: object
    PrivateLinkConfiguration:
      example:
        awsPrivateLinkConfigurations:
        - port: 80
          targetGroupName: my-target-group
        - port: 80
          targetGroupName: my-target-group
      properties:
        awsPrivateLinkConfigurations:
          description: The list of private link configurations
          example:
          - port: 80
            targetGroupName: my-target-group
          - port: 80
            targetGroupName: my-target-group
          - port: 80
            targetGroupName: my-target-group
          items:
            $ref: '#/components/schemas/AWSPrivateLinkConfiguration'
          type: array
      type: object
    PrivateNetworkingConfiguration:
      description: The private networking configuration for the network config
      example:
        privateLinkConfiguration:
          awsPrivateLinkConfigurations:
          - port: 80
            targetGroupName: my-target-group
          - port: 80
            targetGroupName: my-target-group
          - port: 80
            targetGroupName: my-target-group
          - port: 80
            targetGroupName: my-target-group
      properties:
        privateLinkConfiguration:
          $ref: '#/components/schemas/PrivateLinkConfiguration'
      type: object
    ProductTierFeatureDetail:
      example:
        configuration:
          provider: native
        feature: LOGS
        scope: INTERNAL
      properties:
        configuration:
          additionalProperties: true
          description: The configuration parameters of the product tier feature
          example:
            provider: native
          type: object
        feature:
          description: Feature name
          example: LOGS
          type: string
        scope:
          description: Feature scope
          example: INTERNAL
          type: string
      type: object
    ProxyEndpoint:
      example:
        openPorts:
        - "30000"
        - "30001"
        proxyEndpoint: https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
      properties:
        openPorts:
          example:
          - "30000"
          - "30001"
          items:
            example: Dolor non omnis.
            type: string
          type: array
        proxyEndpoint:
          example: https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
          type: string
      type: object
    PublicNetworkingConfiguration:
      description: The public networking configuration for the network config
      example:
        enableClusterLoadBalancer: true
        enableNodeLoadBalancer: true
      properties:
        enableClusterLoadBalancer:
          description: Enable a single load balancer for all replicas
          example: true
          type: boolean
        enableNodeLoadBalancer:
          description: Create an external node load balancer per node rather than
            exposing the node ip directly
          example: true
          type: boolean
      type: object
    RecentDeploymentFailureStatus:
      description: The status of the recent deployment failure
      example:
        failedAt: 2021-09-01T00:00:00Z
        failureReason: Failed to connect to the database
      properties:
        failedAt:
          description: The time at which the deployment failed
          example: 2021-09-01T00:00:00Z
          type: string
        failureReason:
          description: The reason for the deployment failure
          example: Failed to connect to the database
          type: string
      required:
      - failedAt
      - failureReason
      type: object
    RegisterActionHookRequestBody:
      example:
        commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
        scope: CLUSTER
        type: ADD
      properties:
        commandTemplate:
          description: The Base64 encoded command template to execute
          example: ZWNobyAiaGVsbG8gd29ybGQi
          type: string
        scope:
          description: The scope of the hook
          example: CLUSTER
          type: string
        type:
          description: The type of hook to execute
          example: ADD
          type: string
      required:
      - commandTemplate
      - scope
      - type
      type: object
    RegisterResourceMetricsConfigRequestBody:
      example:
        metricEndpoint: http://localhost:9187/metrics
      properties:
        metricEndpoint:
          description: The local host endpoint to supply prometheus metric
          example: http://localhost:9187/metrics
          type: string
      required:
      - metricEndpoint
      type: object
    ReleaseInfraConfigRequestBody:
      example:
        productTierId: pt-12345678
      properties:
        productTierId:
          description: The product tier ID
          example: pt-12345678
          type: string
      type: object
    ReleaseServiceAPIRequestBody:
      example:
        isPreferred: true
        productTierId: pt-12345678
        versionSetName: v1
        versionSetType: Major|Incremental|UserDefined
      properties:
        isPreferred:
          default: false
          description: Indicates whether this version set is preferred.
          example: true
          type: boolean
        productTierId:
          description: The product tier ID
          example: pt-12345678
          type: string
        versionSetName:
          description: The name of the version set to release
          example: v1
          type: string
        versionSetType:
          description: The version-set type of the product-tier.
          example: Major|Incremental|UserDefined
          type: string
      type: object
    ReleaseTierVersionSetRequestBody:
      example:
        isPreferred: true
        name: Major version set
      properties:
        isPreferred:
          description: Indicates whether this version set is preferred.
          example: true
          type: boolean
        name:
          description: The name of the product-tier version set.
          example: Major version set
          type: string
      type: object
    RemoveCapacityFromResourceInstanceRequestBody:
      example:
        capacityToBeRemoved: 3
      properties:
        capacityToBeRemoved:
          description: Number of replicas to be removed
          example: 3
          format: int64
          type: integer
      required:
      - capacityToBeRemoved
      type: object
    ReportHealthResult:
      example:
        health: UP
        id: s-12345678
        report:
          se-12345678:
            sm-12345678:
              vu-11111111: UNKNOWN
              vu-12345678: UP
              vu-87654321: DOWN
      properties:
        health:
          description: The health of the service
          example: UP
          type: string
        id:
          description: The ID of the service
          example: s-12345678
          type: string
        report:
          additionalProperties:
            $ref: '#/components/schemas/EnvironmentHealthReport'
          description: The health of each environment under this service
          example:
            se-12345678:
              sm-12345678:
                vu-11111111: UNKNOWN
                vu-12345678: UP
                vu-87654321: DOWN
          type: object
      type: object
    ResetPasswordRequestBody:
      example:
        email: abc@gmail.com
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
      required:
      - email
      type: object
    ResourceCapability:
      description: The capability of a resource
      example:
        capability: SERVERLESS
        configuration:
          EnableAutoStop: true
          MinimumNodesInPool: 5
          PortsMappingProxyConfig:
            MaxNumberOfClustersPerProxyInstance: 50
            NumberOfPortsPerCluster: 4
          ProxyId: r-123456
          ReferenceProxyKey: resource-proxy
          TargetPort: 5432
      properties:
        capability:
          description: The type of capability of a resource
          example: SERVERLESS
          type: string
        configuration:
          additionalProperties: true
          description: The configuration parameters of a capability of a resource
          example:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
          type: object
      required:
      - capability
      - configuration
      type: object
    ResourceDependency:
      description: Resource dependency relation specification
      example:
        parameterMap:
          Repellendus velit rem ut corrupti.: Magni ipsam repudiandae.
          Vel aperiam.: Qui libero voluptas possimus.
          Vitae odio excepturi.: Molestiae numquam et.
        resourceId: Et rem ullam.
      properties:
        parameterMap:
          additionalProperties:
            example: Et officiis ipsa.
            type: string
          description: A map of the source parameter to the resource dependency parameter
          example:
            Molestiae corrupti totam accusamus placeat veritatis.: Quo possimus.
          type: object
        resourceId:
          description: The ID of the resource
          example: A minima autem officia.
          type: string
      required:
      - resourceId
      type: object
    ResourceEntity:
      example:
        isAutoscalingEnabled: true
        isBackupEnabled: true
        isDeprecated: false
        name: My Resource
        resourceId: r-12345678
        resourceType: Kustomize
        urlKey: myResource
      properties:
        isAutoscalingEnabled:
          description: Whether the resource has autoscaling enabled
          example: true
          type: boolean
        isBackupEnabled:
          description: Whether the resource has backup enabled
          example: true
          type: boolean
        isDeprecated:
          default: false
          description: Whether the service offering is deprecated
          example: false
          type: boolean
        name:
          description: The resource name
          example: My Resource
          type: string
        resourceId:
          description: The resource ID
          example: r-12345678
          type: string
        resourceType:
          description: The resource type
          example: Kustomize
          type: string
        urlKey:
          description: The resource URL key
          example: myResource
          type: string
      required:
      - isBackupEnabled
      - isDeprecated
      - name
      - resourceId
      - urlKey
      type: object
    ResourceNetworkTopologyResult:
      example:
        allowedIPRanges:
        - 0.0.0.0/0
        clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
        clusterPorts:
        - 443
        customDNSEndpoint:
          dnsName: my-custom-dns.com
          status: READY
        hasCompute: true
        main: true
        networkingType: PUBLIC
        nodes:
        - availabilityZone: us-east-2a
          detailedHealth:
            ConnectivityStatus: UNHEALTHY
            DiskHealth: UNKNOWN
            LoadHealth: POD_NORMAL
            NodeHealth: HEALTHY
            ProcessHealth: HEALTHY
            ProcessLiveness: HEALTHY
          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          healthStatus: HEALTHY
          id: primary-0
          ports:
          - 80
          - 443
          status: RUNNING
          storageSize: 10
        - availabilityZone: us-east-2a
          detailedHealth:
            ConnectivityStatus: UNHEALTHY
            DiskHealth: UNKNOWN
            LoadHealth: POD_NORMAL
            NodeHealth: HEALTHY
            ProcessHealth: HEALTHY
            ProcessLiveness: HEALTHY
          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          healthStatus: HEALTHY
          id: primary-0
          ports:
          - 80
          - 443
          status: RUNNING
          storageSize: 10
        privateNetworkCIDR: 10.0.0.2/24
        privateNetworkID: n-1234abcd
        proxyEndpoint:
          openPorts:
          - "30000"
          - "30001"
          proxyEndpoint: https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
        publiclyAccessible: true
        recentDeploymentFailure:
          failedAt: 2021-09-01T00:00:00Z
          failureReason: Failed to connect to the database
        resourceInstanceMetadata:
          KustomizeGeneratedTemplates: template
        resourceKey: primary
        resourceName: Primary MySQL DB Node
        resourceType: Kustomize
      properties:
        allowedIPRanges:
          description: The allowed IP ranges for this resource
          example:
          - 0.0.0.0/0
          items:
            example: Blanditiis nam tenetur aut labore quia veniam.
            type: string
          type: array
        clusterEndpoint:
          description: The cluster endpoint that load-balances across replicas of
            this resource
          example: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          type: string
        clusterPorts:
          description: The ports that the whole cluster exposes
          example:
          - 443
          items:
            example: 3816454514766609959
            format: int64
            type: integer
          type: array
        customDNSEndpoint:
          $ref: '#/components/schemas/CustomDNSEndpoint'
        hasCompute:
          description: Whether this resource has associated compute
          example: true
          type: boolean
        main:
          description: Whether this is the main resource
          example: true
          type: boolean
        networkingType:
          description: The networking type for this resource
          example: PUBLIC
          type: string
        nodes:
          description: The nodes that this resource is deployed on
          example:
          - availabilityZone: us-east-2a
            detailedHealth:
              ConnectivityStatus: UNHEALTHY
              DiskHealth: UNKNOWN
              LoadHealth: POD_NORMAL
              NodeHealth: HEALTHY
              ProcessHealth: HEALTHY
              ProcessLiveness: HEALTHY
            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            healthStatus: HEALTHY
            id: primary-0
            ports:
            - 80
            - 443
            status: RUNNING
            storageSize: 10
          - availabilityZone: us-east-2a
            detailedHealth:
              ConnectivityStatus: UNHEALTHY
              DiskHealth: UNKNOWN
              LoadHealth: POD_NORMAL
              NodeHealth: HEALTHY
              ProcessHealth: HEALTHY
              ProcessLiveness: HEALTHY
            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            healthStatus: HEALTHY
            id: primary-0
            ports:
            - 80
            - 443
            status: RUNNING
            storageSize: 10
          - availabilityZone: us-east-2a
            detailedHealth:
              ConnectivityStatus: UNHEALTHY
              DiskHealth: UNKNOWN
              LoadHealth: POD_NORMAL
              NodeHealth: HEALTHY
              ProcessHealth: HEALTHY
              ProcessLiveness: HEALTHY
            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            healthStatus: HEALTHY
            id: primary-0
            ports:
            - 80
            - 443
            status: RUNNING
            storageSize: 10
          items:
            $ref: '#/components/schemas/NodeNetworkTopologyResult'
          type: array
        privateNetworkCIDR:
          description: The private network CIDR for this resource
          example: 10.0.0.2/24
          type: string
        privateNetworkID:
          description: The private network ID for this resource
          example: n-1234abcd
          type: string
        proxyEndpoint:
          $ref: '#/components/schemas/ProxyEndpoint'
        publiclyAccessible:
          description: Whether this resource is publicly accessible
          example: true
          type: boolean
        recentDeploymentFailure:
          $ref: '#/components/schemas/RecentDeploymentFailureStatus'
        resourceInstanceMetadata:
          description: The resource instance metadata
          example:
            KustomizeGeneratedTemplates: template
        resourceKey:
          description: The key of the resource
          example: primary
          type: string
        resourceName:
          description: The name of the resource
          example: Primary MySQL DB Node
          type: string
        resourceType:
          description: The type of the resource
          example: Kustomize
          type: string
      required:
      - allowedIPRanges
      - clusterEndpoint
      - hasCompute
      - main
      - networkingType
      - nodeEndpoints
      - ports
      - publiclyAccessible
      - resourceKey
      - resourceName
      type: object
    ResourceSpec:
      description: Resource requirements
      example:
        limits:
          cpu: "1"
          memory: 500Mi
        requests:
          cpu: "0.5"
          memory: 200Mi
      properties:
        limits:
          $ref: '#/components/schemas/ResourceSpec_limits'
        requests:
          $ref: '#/components/schemas/ResourceSpec_requests'
      type: object
    ResourceSummary:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        id: r-12345678
        imageConfigId: imgc-12345678
        infraConfigId: ic-12345678
        isExternal: true
        managedResourceType: PortsBasedProxy
        name: MySQL multi-writer service
      properties:
        description:
          description: A brief description of the resource
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        id:
          description: The ID of the resource
          example: r-12345678
          type: string
        imageConfigId:
          description: The ID of the image configuration that this resource refers
            to
          example: imgc-12345678
          type: string
        infraConfigId:
          description: The ID of the infrastructure configuration that this resource
            refers to
          example: ic-12345678
          type: string
        isExternal:
          description: Whether the resource is external
          example: true
          type: boolean
        managedResourceType:
          description: The managed resource type of instance
          example: PortsBasedProxy
          type: string
        name:
          description: The name of the resource
          example: MySQL multi-writer service
          type: string
      required:
      - description
      - id
      - isExternal
      - name
      type: object
    RestoreResourceInstanceRequestBody:
      example:
        network_type: PUBLIC
        targetRestoreTime: 2021-09-01T00:00:00Z
      properties:
        network_type:
          description: The network type
          example: PUBLIC
          type: string
        targetRestoreTime:
          description: The target restore time
          example: 2021-09-01T00:00:00Z
          type: string
      required:
      - targetRestoreTime
      type: object
    Route53Configuration:
      example:
        awsAccountID: "123456789012"
      properties:
        awsAccountID:
          description: The AWS account hosting the the hosted zone for the domain
          example: "123456789012"
          type: string
      required:
      - awsAccountID
      type: object
    Route53ConfigurationDescription:
      example:
        awsAccountID: "123456789012"
        awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
      properties:
        awsAccountID:
          description: The AWS account hosting the the hosted zone for the domain
          example: "123456789012"
          type: string
        awsCloudFormationTemplateURL:
          description: The URL to the CloudFormation template
          example: https://s3.amazonaws.com/my-bucket/my-template.json
          type: string
      required:
      - awsAccountID
      - awsCloudFormationTemplateURL
      type: object
    SaaSPortal:
      example:
        customDomain: mycustomdomain.com
        customDomainStatus: READY
        detailedNetworkTopology:
          r-abcd1234:
            allowedIPRanges:
            - 0.0.0.0/0
            clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            clusterPorts:
            - 3306
            main: true
            networkingType: PUBLIC
            nodes:
            - availabilityZone: us-east-2a
              endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              healthStatus: healthy
              id: primary-0
              ports:
              - 3306
              status: RUNNING
            privateNetworkCIDR: 10.0.0.2/24
            privateNetworkID: n-1234abcd
            publiclyAccessible: true
            resourceKey: saasportal
            resourceName: SaaS Portal
        emailConfig:
          smtpFromEmail: example@gmail.com
          smtpHost: smtp.gmail.com
          smtpPassword: password
          smtpPort: 587
          smtpUsername: username
        endpoint: https://saas-portal.example.com
        environmentType: DEV
        googleAnalyticsTagID: G-123456789
        imageConfig:
          imageName: myimage
          imageRegistry: ghcr.io
          imageTag: latest
        status: READY
      properties:
        customDomain:
          description: The custom domain of the SaaS portal
          example: mycustomdomain.com
          type: string
        customDomainStatus:
          description: The custom domain status of the SaaS portal
          example: READY
          type: string
        detailedNetworkTopology:
          additionalProperties:
            $ref: '#/components/schemas/ResourceNetworkTopologyResult'
          description: The detailed network topology of the SaaS portal
          example:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: saasportal
              resourceName: SaaS Portal
          type: object
        emailConfig:
          $ref: '#/components/schemas/SaaSPortalEmailConfig'
        endpoint:
          description: The endpoint of the SaaS portal for this environment type
          example: https://saas-portal.example.com
          type: string
        environmentType:
          description: The environment type for the SaaS portal
          example: DEV
          type: string
        googleAnalyticsTagID:
          description: The Google Analytics tag ID for the SaaS portal
          example: G-123456789
          type: string
        imageConfig:
          $ref: '#/components/schemas/SaaSPortalImageConfig'
        status:
          description: The status of the SaaS portal for this environment type
          example: READY
          type: string
      required:
      - environmentType
      - status
      type: object
    SaaSPortalEmailConfig:
      example:
        smtpFromEmail: example@gmail.com
        smtpHost: smtp.gmail.com
        smtpPassword: password
        smtpPort: 587
        smtpUsername: username
      properties:
        smtpFromEmail:
          description: The SMTP from email
          example: example@gmail.com
          type: string
        smtpHost:
          description: The SMTP host
          example: smtp.gmail.com
          type: string
        smtpPassword:
          description: The SMTP password
          example: password
          type: string
        smtpPort:
          description: The SMTP port
          example: 587
          format: int64
          type: integer
        smtpUsername:
          description: The SMTP username
          example: username
          type: string
      required:
      - smtpFromEmail
      - smtpHost
      - smtpPassword
      - smtpUsername
      type: object
    SaaSPortalImageConfig:
      example:
        imageName: myimage
        imageRegistry: ghcr.io
        imageTag: latest
      properties:
        imageName:
          description: The image name for the SaaS portal
          example: myimage
          type: string
        imageRegistry:
          description: The image registry for the SaaS portal
          example: ghcr.io
          type: string
        imageTag:
          description: The image tag for the SaaS portal
          example: latest
          type: string
      required:
      - imageName
      - imageRegistry
      - imageTag
      type: object
    SaveHelmPackageRequestBody:
      example:
        helmPackage:
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          namespace: default
          password: my-password
          username: my-user
      properties:
        helmPackage:
          $ref: '#/components/schemas/HelmPackage'
      required:
      - helmPackage
      type: object
    ServiceAssets:
      example:
        cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
        cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
      properties:
        cloudFormationURL:
          description: The URL for CloudFormation onboarding
          example: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
          type: string
        cloudFormationURLNoLB:
          description: The URL for CloudFormation onboarding without LoadBalancer
            policy
          example: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
          type: string
      type: object
    ServiceEnvironment:
      example:
        id: se-12345678
        name: dev
        promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
        saasPortalStatus: READY
        saasPortalUrl: https://saas-portal.example.com
        servicePlans:
        - description: A Basic product tier
          modelType: CUSTOMER_HOSTED
          name: Basic
          productTierID: pt-12345678
          tierType: OMNISTRATE_DEDICATED_TENANCY
        - description: A Basic product tier
          modelType: CUSTOMER_HOSTED
          name: Basic
          productTierID: pt-12345678
          tierType: OMNISTRATE_DEDICATED_TENANCY
        - description: A Basic product tier
          modelType: CUSTOMER_HOSTED
          name: Basic
          productTierID: pt-12345678
          tierType: OMNISTRATE_DEDICATED_TENANCY
        - description: A Basic product tier
          modelType: CUSTOMER_HOSTED
          name: Basic
          productTierID: pt-12345678
          tierType: OMNISTRATE_DEDICATED_TENANCY
        sourceEnvironmentID: se-12345678
        sourceEnvironmentName: dev
        type: DEV
        visibility: private
      properties:
        id:
          description: Service environment ID
          example: se-12345678
          type: string
        name:
          description: Name of the Service Environment
          example: dev
          type: string
        promoteStatus:
          description: The status of the promotion
          example: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          type: string
        saasPortalStatus:
          description: The status of the SaaS portal for this environment type
          example: READY
          type: string
        saasPortalUrl:
          description: The URL of the SaaS portal for this environment type
          example: https://saas-portal.example.com
          type: string
        servicePlans:
          description: List of service plans
          example:
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          items:
            $ref: '#/components/schemas/ServicePlan'
          type: array
        sourceEnvironmentID:
          description: The source environment ID
          example: se-12345678
          type: string
        sourceEnvironmentName:
          description: The source environment name
          example: dev
          type: string
        type:
          example: DEV
          type: string
        visibility:
          description: Visibility of the service environment
          example: private
          type: string
      required:
      - id
      - name
      - servicePlans
      - visibility
      type: object
    ServiceModelFeatureDetail:
      example:
        configuration:
          Accusantium animi sit exercitationem.: Voluptas sit rerum voluptas harum
            rerum et.
          Corporis rerum.: Possimus facilis ea modi recusandae exercitationem.
          Magni nemo error.: Vel repudiandae.
        feature: Voluptas ipsum eveniet error perspiciatis ut suscipit.
      properties:
        configuration:
          additionalProperties: true
          example:
            Debitis iusto molestiae amet commodi temporibus eum.: Sint rerum autem
              et.
            Excepturi velit aut.: Officia voluptas aliquam et est aut.
            Totam velit.: Facere alias rerum laudantium vel est.
          type: object
        feature:
          example: Excepturi aliquid ducimus molestiae quod eius a.
          type: string
      required:
      - configuration
      - feature
      type: object
    ServiceOffering:
      example:
        AutoApproveSubscription: false
        assets:
          cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
          cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
        awsRegions:
        - us-east-2
        - ca-central-1
        billingPlans:
        - maxNumberofInstances: 5
        - maxNumberofInstances: 5
        - maxNumberofInstances: 5
        - maxNumberofInstances: 5
        cloudProviders:
        - AWS
        - GCP
        - Azure
        gcpRegions:
        - us-central1
        productTierDescription: A premium product tier
        productTierDocumentation: Any documentation
        productTierID: pt-12345678
        productTierName: Premium
        productTierPlanDescription: A premium plan
        productTierPricing:
          price1: value1
        productTierSupport: Any support
        productTierType: OMNISTRATE_DEDICATED_TENANCY
        productTierURLKey: premium
        productTierVersion: 1.0.0
        resourceParameters:
        - name: MySQL
          resourceId: r-12345678
          urlKey: mysql
        - name: Redis
          resourceId: r-abcdefgh
          urlKey: redis
        serviceAPIID: sa-12345678
        serviceAPIVersion: v1
        serviceEnvironmentID: se-12345678
        serviceEnvironmentName: Development
        serviceEnvironmentType: DEV
        serviceEnvironmentURLKey: dev
        serviceEnvironmentVisibility: PRIVATE
        serviceLogoURL: Quaerat non molestiae vitae fuga.
        serviceModelFeatures:
        - configuration:
            Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
              perspiciatis vel qui.
          feature: Aut illum quia non molestiae aut.
        - configuration:
            Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
              perspiciatis vel qui.
          feature: Aut illum quia non molestiae aut.
        - configuration:
            Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
              perspiciatis vel qui.
          feature: Aut illum quia non molestiae aut.
        serviceModelID: sm-12345678
        serviceModelName: Hosted
        serviceModelStatus: Ready
        serviceModelType: "CUSTOMER_HOSTED, OMNISTRATE_HOSTED, BYOA"
        serviceModelURLKey: hosted
      properties:
        AutoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        assets:
          $ref: '#/components/schemas/ServiceAssets'
        awsRegions:
          description: The AWS regions that this service offering is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Consequatur ut dolorem doloribus et quo laborum.
            type: string
          type: array
        billingPlans:
          description: List of billing plans for this product tier.
          example:
          - maxNumberofInstances: 5
          - maxNumberofInstances: 5
          - maxNumberofInstances: 5
          - maxNumberofInstances: 5
          items:
            $ref: '#/components/schemas/OfferingBillingPlan'
          type: array
        cloudProviders:
          description: List of supported cloud providers for this product tier.
          example:
          - AWS
          - GCP
          - Azure
          items:
            example: Nihil quia neque.
            type: string
          type: array
        gcpRegions:
          description: The GCP regions that this service offering is available on
          example:
          - us-central1
          items:
            example: Est provident dignissimos.
            type: string
          type: array
        productTierDescription:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        productTierDocumentation:
          description: Documentation
          example: Any documentation
          type: string
        productTierID:
          description: The service product ID
          example: pt-12345678
          type: string
        productTierName:
          description: The product tier name
          example: Premium
          type: string
        productTierPlanDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        productTierPricing:
          description: Pricing
          example:
            price1: value1
        productTierSupport:
          description: Support
          example: Any support
          type: string
        productTierType:
          description: Tier type
          example: OMNISTRATE_DEDICATED_TENANCY
          type: string
        productTierURLKey:
          description: The product tier URL key
          example: premium
          type: string
        productTierVersion:
          description: The product tier version
          example: 1.0.0
          type: string
        resourceParameters:
          description: The resource parameters
          example:
          - name: MySQL
            resourceId: r-12345678
            urlKey: mysql
          - name: Redis
            resourceId: r-abcdefgh
            urlKey: redis
          items:
            $ref: '#/components/schemas/ResourceEntity'
          type: array
        serviceAPIID:
          description: The service API ID
          example: sa-12345678
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentID:
          description: The service Environment ID
          example: se-12345678
          type: string
        serviceEnvironmentName:
          description: The service environment name
          example: Development
          type: string
        serviceEnvironmentType:
          description: The service environment type
          example: DEV
          type: string
        serviceEnvironmentURLKey:
          description: The service environment URL key
          example: dev
          type: string
        serviceEnvironmentVisibility:
          description: The service environment visibility
          example: PRIVATE
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Voluptas fuga.
          type: string
        serviceModelFeatures:
          description: Enabled service model features
          example:
          - configuration:
              Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                perspiciatis vel qui.
            feature: Aut illum quia non molestiae aut.
          - configuration:
              Facere accusantium ut saepe ipsum.: Asperiores exercitationem accusantium
                perspiciatis vel qui.
            feature: Aut illum quia non molestiae aut.
          items:
            $ref: '#/components/schemas/ServiceModelFeatureDetail'
          type: array
        serviceModelID:
          description: The service Model ID
          example: sm-12345678
          type: string
        serviceModelName:
          description: The service model name
          example: Hosted
          type: string
        serviceModelStatus:
          description: The service model status
          example: Ready
          type: string
        serviceModelType:
          description: The type of the service model. CUSTOMER_HOSTED is a service
            model that is hosted in the customer account and managed by Omnistrate.
            OMNISTRATE_HOSTED is a service model that is managed by Omnistrate platform.
            BYOA is a service model that is hosted in the service provider's account
            and managed by Omnistrate.
          example: "CUSTOMER_HOSTED, OMNISTRATE_HOSTED, BYOA"
          type: string
        serviceModelURLKey:
          description: The service model URL key
          example: hosted
          type: string
      required:
      - AutoApproveSubscription
      - productTierDocumentation
      - productTierID
      - productTierName
      - productTierPricing
      - productTierSupport
      - productTierType
      - productTierURLKey
      - productTierVersion
      - resourceParameters
      - serviceAPIID
      - serviceAPIVersion
      - serviceEnvironmentID
      - serviceEnvironmentName
      - serviceEnvironmentType
      - serviceEnvironmentURLKey
      - serviceEnvironmentVisibility
      - serviceLogoURL
      - serviceModelID
      - serviceModelName
      - serviceModelStatus
      - serviceModelType
      - serviceModelURLKey
      type: object
    ServicePlan:
      example:
        description: A Basic product tier
        modelType: CUSTOMER_HOSTED
        name: Basic
        productTierID: pt-12345678
        tierType: OMNISTRATE_DEDICATED_TENANCY
      properties:
        description:
          description: Description of the Product Tier
          example: A Basic product tier
          type: string
        modelType:
          description: The model type encapsulating this service
          example: CUSTOMER_HOSTED
          type: string
        name:
          description: Name of the Product Tier
          example: Basic
          type: string
        productTierID:
          description: Product tier ID
          example: pt-12345678
          type: string
        tierType:
          description: Product tier type
          example: OMNISTRATE_DEDICATED_TENANCY
          type: string
      required:
      - description
      - modelType
      - name
      - productTierID
      - tierType
      type: object
    SetEnvironmentVariablesRequestBody:
      example:
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
      properties:
        environmentVariables:
          description: The environment variables that this resource requires
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
      type: object
    SigninRequestBody:
      example:
        email: abc@gmail.com
        hashedPassword: deprecated
        password: password
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        hashedPassword:
          example: deprecated
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
      required:
      - email
      type: object
    SigninResult:
      example:
        jwtToken: ""
      properties:
        jwtToken:
          description: The jwt token
          example: ""
          type: string
      required:
      - jwtToken
      type: object
    SignupRequestBody:
      example:
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        email: abc@gmail.com
        legalCompanyName: mywebsite
        name: John Doe
        password: password
      properties:
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        legalCompanyName:
          default: ""
          example: mywebsite
          type: string
        name:
          example: John Doe
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
      required:
      - email
      - name
      - password
      type: object
    SubscriptionUsers:
      example:
        email: abc@gmail.com
        name: John Dae
        roleType: reader
        userId: user-abcd1234
      properties:
        email:
          description: The email of the user
          example: abc@gmail.com
          type: string
        name:
          description: The name of the user
          example: John Dae
          type: string
        roleType:
          example: reader
          type: string
        userId:
          description: The User ID
          example: user-abcd1234
          type: string
      required:
      - email
      - name
      - roleType
      - userId
      type: object
    TerraformConfiguration:
      example:
        gitConfiguration:
          accessToken: my-token
          referenceName: tags/v1.0.0
          repositoryUrl: https://github.com/username/myrepo
          userName: my-user
        privateModuleGitAccessTokens:
          tokenName: accessToken
        terraformPath: /project1/tf
      properties:
        gitConfiguration:
          $ref: '#/components/schemas/GitConfiguration'
        privateModuleGitAccessTokens:
          additionalProperties:
            example: Eum iure nihil.
            type: string
          description: The git access tokens for private modules
          example:
            tokenName: accessToken
          type: object
        terraformPath:
          description: The path to the terraform files directory
          example: /project1/tf
          type: string
      required:
      - terraformPath
      type: object
    TierVersionSet:
      description: Details about the product-tier version set.
      example:
        autoApproveSubscription: false
        baseVersion: "3.0"
        createdAt: 2020-01-01T00:00:00Z
        createdBy: John Doe
        description: Magni eius molestias velit qui voluptas nisi.
        enabledFeatures:
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        features:
          BILLING: false
          LOGS: true
          METRICS: false
        instanceCount: 12
        latestUpgradePathId: upgrade-12345678
        name: Regular version set
        parentVersion: "2.0"
        productTierId: Voluptas aut quo ut ut exercitationem pariatur.
        releasedAt: 2020-01-01T00:00:00Z
        releasedBy: John Doe
        resources:
        - description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: r-12345678
          imageConfigId: imgc-12345678
          infraConfigId: ic-12345678
          isExternal: true
          managedResourceType: PortsBasedProxy
          name: MySQL multi-writer service
        - description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: r-12345678
          imageConfigId: imgc-12345678
          infraConfigId: ic-12345678
          isExternal: true
          managedResourceType: PortsBasedProxy
          name: MySQL multi-writer service
        serviceId: s-12345678
        serviceModelId: Repellat libero.
        status: Preferred|Active|Deprecated|Pending
        type: Major|Incremental|UserDefined
        updatedAt: 2020-01-01T00:00:00Z
        version: "3.0"
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        baseVersion:
          description: The base version of the version set.
          example: "3.0"
          type: string
        createdAt:
          description: The timestamp when the version set was created.
          example: 2020-01-01T00:00:00Z
          type: string
        createdBy:
          description: The name of the user who created the version set.
          example: John Doe
          type: string
        description:
          description: A brief description of the product-tier version set.
          example: Quia maxime nesciunt et corrupti ut aut.
          type: string
        enabledFeatures:
          description: "The features that are enabled for this product tier, including\
            \ scope details and configuration"
          example:
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          items:
            $ref: '#/components/schemas/ProductTierFeatureDetail'
          type: array
        features:
          additionalProperties:
            example: true
            type: boolean
          description: The features that are enabled / disabled for this product tier
          example:
            BILLING: false
            LOGS: true
            METRICS: false
          type: object
        instanceCount:
          description: The number of instances that are currently running this version
            set.
          example: 12
          format: int64
          type: integer
        latestUpgradePathId:
          description: The ID of the latest upgrade path away from the tier-version
            set.
          example: upgrade-12345678
          type: string
        name:
          description: The name of the product-tier version set.
          example: Regular version set
          type: string
        parentVersion:
          description: The parent version of this release.
          example: "2.0"
          type: string
        productTierId:
          description: The product tier ID that this version set belongs to.
          example: Sit magni exercitationem optio eligendi sunt.
          type: string
        releasedAt:
          description: The timestamp when the version set was released.
          example: 2020-01-01T00:00:00Z
          type: string
        releasedBy:
          description: The name of the user who released the version set.
          example: John Doe
          type: string
        resources:
          description: List of resources that are part of this version set.
          example:
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          items:
            $ref: '#/components/schemas/ResourceSummary'
          type: array
        serviceId:
          description: ID of the Service
          example: s-12345678
          type: string
        serviceModelId:
          description: The service model ID that this version set belongs to.
          example: Vero omnis ipsum voluptates rerum.
          type: string
        status:
          description: The tier version set status.
          example: Preferred|Active|Deprecated|Pending
          type: string
        type:
          description: The version-set type of the product-tier.
          example: Major|Incremental|UserDefined
          type: string
        updatedAt:
          description: The timestamp when the version set was updated.
          example: 2020-01-01T00:00:00Z
          type: string
        version:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
      required:
      - baseVersion
      - createdAt
      - enabledFeatures
      - features
      - productTierId
      - releasedAt
      - serviceId
      - serviceModelId
      - status
      - type
      - updatedAt
      - version
      type: object
    UpdateComputeConfigRequestBody:
      example:
        autoscalingPolicy:
          maxReplicas: 4
          minReplicas: 1
        cpuArchitecture: X86_64|ARM64
        description: my compute config description
        name: my compute config
        replicaCount: "3"
        resources:
          limits:
            cpu: "1"
            memory: 500Mi
          requests:
            cpu: "0.5"
            memory: 200Mi
        rootVolumeSizeGi: 10
        warmPoolConfiguration:
          minimumNodesInPool: 1
      properties:
        autoscalingPolicy:
          $ref: '#/components/schemas/AutoscalingPolicy'
        cpuArchitecture:
          description: Processor architecture
          example: X86_64|ARM64
          type: string
        description:
          description: Description of the compute config
          example: my compute config description
          minLength: 1
          type: string
        name:
          description: Name of the compute config
          example: my compute config
          minLength: 1
          type: string
        replicaCount:
          description: Number of replicas to provision for this logical pool of nodes
            per instance of the resource
          example: "3"
          type: string
        resources:
          $ref: '#/components/schemas/ResourceSpec'
        rootVolumeSizeGi:
          description: Size of the root volume in Gi
          example: 10
          format: int64
          type: integer
        warmPoolConfiguration:
          $ref: '#/components/schemas/WarmPoolConfiguration'
      type: object
    UpdateDeploymentConfigRequestBody:
      example:
        description: A production deployment config
        infraRollConfiguration:
          infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
          maximumNumberOfResourceInstancesPerBatch: 1
          maximumUnavailableReplicas: 1
        name: Production
        rolloutPriorityList:
        - region-12345678
        - region-abcd1234
        - region-3c3c3c3c
      properties:
        description:
          description: A brief description of the deployment config
          example: A production deployment config
          type: string
        infraRollConfiguration:
          $ref: '#/components/schemas/InfraRollConfiguration'
        name:
          description: Name of the deployment config
          example: Production
          type: string
        rolloutPriorityList:
          example:
          - region-12345678
          - region-abcd1234
          - region-3c3c3c3c
          items:
            example: Deleniti nesciunt commodi eos.
            type: string
          type: array
      type: object
    UpdateFileMetadataRequestBody:
      example:
        description: A file to store the configuration for the resource
        mountPath: /etc/config
        name: file.txt
      properties:
        description:
          description: The description of the file
          example: A file to store the configuration for the resource
          type: string
        mountPath:
          description: The mount path of the file
          example: /etc/config
          type: string
        name:
          description: The name of the file
          example: file.txt
          type: string
      type: object
    UpdateIdentityProviderRequestBody:
      example:
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
      properties:
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
      type: object
    UpdateImageConfigRequestBody:
      example:
        customImageCommandsAndArgs:
          args:
          - -d
          - mysql
          commands:
          - echo
          - "Hello, World!"
        description: An image configuration for my new entity
        imageName: mysql
        imageRegistryId: ir-12345678
        imageSignaturePublicKeyPEM: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        imageTag: v1
      properties:
        customImageCommandsAndArgs:
          $ref: '#/components/schemas/CustomImageCommandsAndArgs'
        description:
          description: A brief description of the image configuration
          example: An image configuration for my new entity
          type: string
        imageName:
          description: Name of the container image
          example: mysql
          minLength: 1
          type: string
        imageRegistryId:
          description: The image registry ID to use for the infra
          example: ir-12345678
          type: string
        imageSignaturePublicKeyPEM:
          description: PEM-encoded Public key part of the key used to sign the container
            image
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        imageTag:
          description: Tag representing the software image version that is currently
            preferred
          example: v1
          type: string
      type: object
    UpdateImageRegistryRequestBody:
      example:
        description: DockerHub is a public Docker Image Registry
        host: docker.io
        name: DockerHub
        password: mypassword
        username: myusername
      properties:
        description:
          description: A brief description of the Image Registry
          example: DockerHub is a public Docker Image Registry
          type: string
        host:
          description: The Image Registry host
          example: docker.io
          type: string
        name:
          description: Name of the Image Registry
          example: DockerHub
          type: string
        password:
          description: The password to use when authenticating to the Image Registry
          example: mypassword
          type: string
        username:
          description: The username to use when authenticating to the Image Registry
          example: myusername
          type: string
      type: object
    UpdateInfraConfigRequestBody:
      example:
        computeConfigId: cc-12345678
        customTag:
          key: customKey
          value: customValue
        description: Infra config used for the base tier MySQL service
        name: MySQL Writer Infra Config
        networkConfigId: nc-12345678
        storageConfigId: sc-12345678
      properties:
        computeConfigId:
          description: The compute config ID
          example: cc-12345678
          type: string
        customTag:
          $ref: '#/components/schemas/EnvironmentVariable'
        description:
          description: The description for the infra config
          example: Infra config used for the base tier MySQL service
          type: string
        name:
          description: The name of the infra config
          example: MySQL Writer Infra Config
          type: string
        networkConfigId:
          description: The network config ID
          example: nc-12345678
          type: string
        storageConfigId:
          description: The storage config ID per compute node
          example: sc-12345678
          type: string
      type: object
    UpdateInputParameterRequestBody:
      example:
        defaultValue: "[\"1\", \"2.8\", \"3\"]"
        description: Quaerat id corporis et soluta excepturi.
        hasOptions: true
        labeledOptions:
          large: t3.xlarge
          medium: t3.large
          small: t3.medium
        limits:
          max: Quis aut.
          maxLength: Similique quia aliquid.
          min: Ipsum tempore quis et facilis velit.
          minLength: Aut molestiae possimus ex consequuntur odio.
        modifiable: false
        name: dt
        options:
        - "[\"1\", \"2.8\", \"3\"]"
        - "[\"3.4\", \"4.5\"]"
        required: false
      properties:
        defaultValue:
          description: Default value to use for an optional input parameter represented
            as a string
          example: "[\"1\", \"2.8\", \"3\"]"
          type: string
        description:
          description: A brief description of the input parameter
          example: Delectus impedit aut occaecati odit voluptatem fuga.
          type: string
        hasOptions:
          description: Marks the input parameter to be selectable from a list of values
          example: false
          type: boolean
        labeledOptions:
          additionalProperties:
            example: Ut ut nesciunt illo laborum earum.
            type: string
          description: "A map for labeled options. The key is the label and the value\
            \ is the option. When the option is selected, the label will be displayed\
            \ to the end customer. Specify either options or labeledOptions when defining\
            \ the input parameter."
          example:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          type: object
        limits:
          $ref: '#/components/schemas/Limits'
        modifiable:
          description: Marks the input parameter as immutable
          example: false
          type: boolean
        name:
          description: External name for the input parameter
          example: "n"
          minLength: 1
          type: string
        options:
          description: A list of options to restrict the value of the input parameter
            to (represented as a string)
          example:
          - "[\"1\", \"2.8\", \"3\"]"
          - "[\"3.4\", \"4.5\"]"
          items:
            example: Ullam pariatur facere voluptatem dolorum qui.
            type: string
          type: array
        required:
          description: Enforces the input parameter as a required parameter
          example: false
          type: boolean
      type: object
    UpdateInstanceStorageVolumeConfigRequestBody:
      example:
        instanceStorageIops: "7500"
        instanceStorageThroughputMiBps: "128"
        instanceStorageType: AWS::EBS_GP2
      properties:
        instanceStorageIops:
          description: The IOPS provisioned for the configured instance storage type
          example: "7500"
          type: string
        instanceStorageThroughputMiBps:
          description: The throughput (in MiBps) provisioned for the configured instance
            storage type
          example: "128"
          type: string
        instanceStorageType:
          description: The type of the storage for a compute instance
          example: AWS::EBS_GP2
          type: string
      type: object
    UpdateLimitRequestBody:
      example:
        description: A premium limit
        name: Premium Tier
        value: 4
      properties:
        description:
          description: A brief description of the limit
          example: A premium limit
          type: string
        name:
          description: Name of the limit
          example: Premium Tier
          type: string
        value:
          description: Value of the limit being enforced
          example: 4
          format: int64
          type: integer
      required:
      - value
      type: object
    UpdateNetworkConfigRequestBody:
      example:
        description: A multi-zone HA network config
        endpointPerReplica: true
        internal: true
        name: Multi-zone
        openPorts:
        - 1299
        - 3306
        privateNetworkingConfiguration:
          privateLinkConfiguration:
            awsPrivateLinkConfigurations:
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
        publicNetworkingConfiguration:
          enableClusterLoadBalancer: true
          enableNodeLoadBalancer: true
        stableEgressIP: true
        tlsTerminationPort: 443
        zoneConfiguration: Pariatur laborum quaerat est ipsa.
      properties:
        description:
          description: A brief description of the network config
          example: A multi-zone HA network config
          type: string
        endpointPerReplica:
          description: Generates a DNS endpoint per-replica for this network config
          example: true
          type: boolean
        internal:
          description: Restrict access to this network config to the internal network
          example: true
          type: boolean
        name:
          description: Name of the network config
          example: Multi-zone
          type: string
        openPorts:
          description: Ports to map to the generated DNS endpoint
          example:
          - 1299
          - 3306
          items:
            example: 828645871194077510
            format: int64
            type: integer
          type: array
        privateNetworkingConfiguration:
          $ref: '#/components/schemas/PrivateNetworkingConfiguration'
        publicNetworkingConfiguration:
          $ref: '#/components/schemas/PublicNetworkingConfiguration'
        stableEgressIP:
          description: Create an external node load balancer per node rather than
            expose the node ip directly
          example: true
          type: boolean
        tlsTerminationPort:
          description: The port that hosts the reverse proxy for TLS termination
          example: 443
          format: int64
          type: integer
        zoneConfiguration:
          description: The preferred type of zonal availability for this resource
            and the specific zone(s) to deploy in
          example: Qui voluptatibus laudantium sit reprehenderit ut.
          type: string
      type: object
    UpdateOutputParameterRequestBody:
      example:
        description: Username of the user created in the target system
        name: Username
        value: johndoe
        valueRef: $var.username
        valueType: Vel quo tempora tempore debitis.
      properties:
        description:
          description: Description of the output variable being exported
          example: Username of the user created in the target system
          minLength: 1
          type: string
        name:
          description: External name of the output variable being exported
          example: Username
          minLength: 1
          type: string
        value:
          description: Value of the output variable being exported
          example: johndoe
          minLength: 1
          type: string
        valueRef:
          description: Reference to an input variable that will be used to set the
            value of the output variable being exported
          example: $var.username
          type: string
        valueType:
          example: Eos earum facilis iusto.
          type: string
      type: object
    UpdatePasswordRequestBody:
      example:
        currentPassword: currentPassword
        currentPasswordHash: currentPasswordHash
        password: password
      properties:
        currentPassword:
          example: currentPassword
          minLength: 1
          type: string
        currentPasswordHash:
          example: currentPasswordHash
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
      required:
      - password
      type: object
    UpdateProductTierBillingPlanRequestBody:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        maxNumberofInstances: 5
        planName: STARTER
        pricing:
          cpuCoreHours: "0.001"
          memoryGBHours: "0.0001"
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        maxNumberofInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        planName:
          description: Plan name
          example: STARTER
          type: string
        pricing:
          description: Pricing in dollars.
          example:
            cpuCoreHours: "0.001"
            memoryGBHours: "0.0001"
      type: object
    UpdateProductTierRequestBody:
      example:
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        description: A premium product tier
        documentation: Any documentation
        gcpRegions:
        - us-central1
        isDisabled: false
        name: Premium
        planDescription: A premium plan
        pricing:
          price1: value1
        support: Any support
        tierType: OMNISTRATE_DEDICATED_TENANCY
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Quia atque deleniti.
            type: string
          type: array
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Odit iure quidem omnis aspernatur dolorem et.
            type: string
          type: array
        isDisabled:
          description: Update the product tier's state as enabled/disabled. Enabling
            the product tier will let end-customers subscribe and use the service
            plan.
          example: false
          type: boolean
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricing:
          description: Pricing
          example:
            price1: value1
        support:
          description: Support
          example: Any support
          type: string
        tierType:
          description: Tier type
          example: OMNISTRATE_DEDICATED_TENANCY
          type: string
      type: object
    UpdateResourceInstanceRequestBody:
      example:
        requestParams:
          param1: value1
          param2: value2
      properties:
        requestParams:
          description: The request parameters
          example:
            param1: value1
            param2: value2
      type: object
    UpdateResourceRequestBody:
      example:
        additionalSecurityContext:
          AddCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          DropCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          SupplementalGroupIDs:
          - 1001
          - 999
        backupConfiguration:
          backupPeriodInHours: 24
          backupRetentionInDays: 7
        customLabels:
          key: value
        customSysCTLs:
          net.ipv4.tcp_syncookies: "1"
        customULimits:
        - ULimitsName: NoProc
          ULimitsType: Soft
          ULimitsValue: 1000
        - ULimitsName: NoFile
          ULimitsType: Hard
          ULimitsValue: 2048
        dependencies:
        - parameterMap:
            clusterId: writerId
            clusterOrg: userDatabase
          resourceId: r-12345678
        - parameterMap:
            clusterId: readerId
            clusterOrg: userDatabase
          resourceId: r-abcdef12
        description: A resource to manage a hosted public SaaS offering of a multi-writer
          MySQL service
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        helmChartConfiguration:
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          password: my-password
          username: my-user
        imageConfigId: imgc-12345678
        infraConfigId: ic-12345678
        kustomizeConfiguration:
          gitConfiguration:
            accessToken: my-token
            referenceName: tags/v1.0.0
            repositoryUrl: https://github.com/username/myrepo
            userName: my-user
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          kustomizePath: /kustomize
        l4LoadBalancerConfiguration:
          ingressPortConfiguration:
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8080
            ingressPort: 1234
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8081
            ingressPort: 5678
          - associatedResourceIDs:
            - r-vwxybz12
            - r-poij122v
            backendPort: 8082
            ingressPort: 9012
        l7LoadBalancerConfiguration:
          paths:
          - associatedResourceID: r-12345678
            path: /path
            port: 8080
        name: Galera
        operatorCRDConfiguration:
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          outputParameters:
            expiresAt: $out.status.notAfter
            issuerName: letsencrypt-prod
          readinessConditions:
            $out.status.conditions[?(@.type=='Ready')].status: true
          supplementalFiles:
          - |
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
          - |-
            apiVersion: ingress.nginx.io/v1
            kind: IngressClass
            metadata:
              name: nginx
            spec:
              controller: nginx.org/ingress-controller
          template: |-
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
                email: test@example.com
                privateKeySecretRef:
                  name: letsencrypt-prod
                solvers:
                - http01:
                    ingress:
                      class: nginx
        terraformConfigurations:
          Aut sunt esse provident.:
            gitConfiguration:
              accessToken: my-token
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
          Numquam omnis laboriosam.:
            gitConfiguration:
              accessToken: my-token
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
          Rem facere incidunt aliquid maiores.:
            gitConfiguration:
              accessToken: my-token
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
      properties:
        additionalSecurityContext:
          $ref: '#/components/schemas/AdditionalSecurityContext'
        backupConfiguration:
          $ref: '#/components/schemas/BackupConfiguration'
        customLabels:
          additionalProperties:
            example: Dolores asperiores non voluptatem.
            type: string
          description: Custom labels for the resource
          example:
            key: value
          type: object
        customSysCTLs:
          additionalProperties:
            example: Voluptatibus dignissimos voluptas enim aut.
            type: string
          description: Custom sysctl settings for the resource
          example:
            net.ipv4.tcp_syncookies: "1"
          type: object
        customULimits:
          description: Custom ulimits for the resource
          example:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          items:
            $ref: '#/components/schemas/CustomULimits'
          type: array
        dependencies:
          example:
          - parameterMap:
              clusterId: writerId
              clusterOrg: userDatabase
            resourceId: r-12345678
          - parameterMap:
              clusterId: readerId
              clusterOrg: userDatabase
            resourceId: r-abcdef12
          items:
            $ref: '#/components/schemas/ResourceDependency'
          type: array
        description:
          description: A brief description of the resource
          example: A resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          type: string
        environmentVariables:
          description: The environment variables that this resource requires
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        helmChartConfiguration:
          $ref: '#/components/schemas/HelmChartConfiguration'
        imageConfigId:
          description: The ID of the image configuration that this resource refers
            to
          example: imgc-12345678
          type: string
        infraConfigId:
          description: The ID of the infrastructure configuration that this resource
            refers to
          example: ic-12345678
          type: string
        kustomizeConfiguration:
          $ref: '#/components/schemas/KustomizeConfiguration'
        l4LoadBalancerConfiguration:
          $ref: '#/components/schemas/L4LoadBalancerConfiguration'
        l7LoadBalancerConfiguration:
          $ref: '#/components/schemas/L7LoadBalancerConfiguration'
        name:
          description: Name of the resource
          example: Galera
          type: string
        operatorCRDConfiguration:
          $ref: '#/components/schemas/OperatorCRDConfiguration'
        terraformConfigurations:
          additionalProperties:
            $ref: '#/components/schemas/TerraformConfiguration'
          description: The Terraform configurations for various cloud providers
          example:
            Voluptate et ex.:
              gitConfiguration:
                accessToken: my-token
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          type: object
      type: object
    UpdateSaaSPortalCustomDomainRequestBody:
      example:
        customDomain: mycustomdomain.com
        description: My custom domain description
        name: MyCustomDomain
      properties:
        customDomain:
          description: The custom domain
          example: mycustomdomain.com
          type: string
        description:
          description: The custom domain description
          example: My custom domain description
          type: string
        name:
          description: The custom domain name
          example: MyCustomDomain
          type: string
      type: object
    UpdateSaaSPortalRequestBody:
      example:
        customDomain: mycustomdomain.com
        emailConfig:
          smtpFromEmail: example@gmail.com
          smtpHost: smtp.gmail.com
          smtpPassword: password
          smtpPort: 587
          smtpUsername: username
        googleAnalyticsTagID: G-123456789
        imageConfig:
          imageName: myimage
          imageRegistry: ghcr.io
          imageTag: latest
      properties:
        customDomain:
          description: The custom domain for the SaaS portal
          example: mycustomdomain.com
          type: string
        emailConfig:
          $ref: '#/components/schemas/SaaSPortalEmailConfig'
        googleAnalyticsTagID:
          description: The Google Analytics tag ID for the SaaS portal
          example: G-123456789
          type: string
        imageConfig:
          $ref: '#/components/schemas/SaaSPortalImageConfig'
      type: object
    UpdateServiceAPIRequestBody:
      example:
        description: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
          for high availability
      properties:
        description:
          description: A brief description of the service API bundle
          example: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
            for high availability
          type: string
      type: object
    UpdateServiceEnvironmentRequestBody:
      example:
        autoApproveSubscription: false
        deploymentConfigId: dc-12345678
        description: The production environment for the MySQL multi-writer service
        name: Production
        serviceAuthPublicKey: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        sourceEnvironmentId: se-12345678
        visibility: Et nihil nulla consequuntur rerum magni.
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        deploymentConfigId:
          description: The deployment configuration ID
          example: dc-12345678
          type: string
        description:
          description: A brief description of the service environment
          example: The production environment for the MySQL multi-writer service
          type: string
        name:
          description: Name of the Service Environment
          example: Production
          type: string
        serviceAuthPublicKey:
          description: PEM-encoded Public key part of the key used to sign the JWT
            tokens for the service control plane APIs
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        sourceEnvironmentId:
          description: The ID of the service environment to use for promoting changes
            to this environment
          example: se-12345678
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: Eum aut aut error cupiditate sit.
          type: string
      type: object
    UpdateServiceModelRequestBody:
      example:
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        name: MySQL multi-writer service hosted model
      properties:
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
      type: object
    UpdateServiceRequestBody:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        name: MySQL multi-writer service
        serviceLogoURL: Est consequatur consectetur.
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Et non tempora beatae sint molestias accusamus.
          type: string
      type: object
    UpdateStorageVolumeConfigRequestBody:
      example:
        description: A storage volume set to store the MySQL data directory
        disableBackup: false
        name: MySQL Data Volume
      properties:
        description:
          description: A brief description of the context for the storage volume pool
          example: A storage volume set to store the MySQL data directory
          type: string
        disableBackup:
          description: Disable backup for the storage volume
          example: false
          type: boolean
        name:
          description: Name of the storage volume pool
          example: MySQL Data Volume
          type: string
      type: object
    UpdateStorageVolumeSizeConfigRequestBody:
      example:
        instanceStorageSizeGi: $var.storage_size
      properties:
        instanceStorageSizeGi:
          description: The storage size (in Gi) provisioned for the configured instance
            storage type
          example: $var.storage_size
          type: string
      required:
      - instanceStorageSizeGi
      type: object
    UpdateUserRequestBody:
      example:
        address:
          addressLine1: 1234 Main St
          addressLine2: Apt 123
          addressLine3: Building 123
          city: San Francisco
          country: US
          state: CA
          zip: "94123"
        name: John Dae
        orgDescription: ACME Inc.
        orgFavIconURL: http://okuneva.info/kolby_ryan
        orgLogoURL: http://lindgrenkassulke.name/ellis
        orgName: ACME
        orgPrivacyPolicy: Earum doloremque autem nesciunt laborum tenetur ipsa.
        orgSupportEmail: support@example.com
        orgTermsOfUse: Molestias modi error fugiat eaque non harum.
        orgURL: something.acme
      properties:
        address:
          $ref: '#/components/schemas/Address'
        name:
          description: The name of the user
          example: John Dae
          type: string
        orgDescription:
          description: The description of the org that this user owns
          example: ACME Inc.
          type: string
        orgFavIconURL:
          description: The favicon of the org that this user owns
          example: http://predovic.org/stuart
          format: uri
          type: string
        orgLogoURL:
          description: The logo of the org that this user owns
          example: http://murray.info/ebony.boyle
          format: uri
          type: string
        orgName:
          description: The org name that this user owns
          example: ACME
          type: string
        orgPrivacyPolicy:
          description: The privacy policy for the org that this user owns in an HTML
            format
          example: Sint aut deserunt.
          type: string
        orgSupportEmail:
          description: The support email of the org that this user owns
          example: support@example.com
          type: string
        orgTermsOfUse:
          description: The terms of use for the org that this user owns in an HTML
            format
          example: Voluptas quo cumque error.
          type: string
        orgURL:
          description: The url of the org that this user owns
          example: something.acme
          type: string
      type: object
    UsagePerDimension:
      example:
        dimension: core/hours
        total: 0.67
      properties:
        dimension:
          description: Dimension of usage
          example: core/hours
          type: string
        total:
          description: Total amount of usage during the period
          example: 0.67
          format: double
          type: number
      type: object
    VUnitHealthReport:
      example:
        vunits:
          vu-11111111: UNKNOWN
          vu-12345678: UP
          vu-87654321: DOWN
      properties:
        vunits:
          additionalProperties:
            example: Totam sed.
            type: string
          description: The health of each vunit under this service environment
          example:
            vu-11111111: UNKNOWN
            vu-12345678: UP
            vu-87654321: DOWN
          type: object
      type: object
    ValidateTokenRequestBody:
      example:
        email: abc@gmail.com
        token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        token:
          example: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
          minLength: 1
          type: string
      required:
      - email
      - token
      type: object
    WarmPoolConfiguration:
      description: Warm pool configuration for compute nodes
      example:
        minimumNodesInPool: 1
        minimumPercentageNodesInPool: 5
      properties:
        minimumNodesInPool:
          default: 1
          description: Minimum number of compute nodes in pool
          example: 1
          format: int64
          type: integer
        minimumPercentageNodesInPool:
          default: 0
          description: Minimum percentage of compute nodes in pool
          example: 5
          format: int64
          type: integer
      type: object
    WorkflowFailure:
      example:
        eventTime: 2020-01-01T00:00:00Z
        message: Bootstrap failed for reason X
      properties:
        eventTime:
          description: The time of the event
          example: 2020-01-01T00:00:00Z
          type: string
        message:
          description: Details of the event
          example: Bootstrap failed for reason X
          type: string
      required:
      - eventTime
      - message
      type: object
    ResourceSpec_limits:
      description: The maximum amount of CPU and memory that the container can use
      example:
        cpu: "1"
        memory: 500Mi
      properties:
        cpu:
          description: The maximum amount of CPU that the container can use
          example: "1"
          type: string
        memory:
          description: The maximum amount of memory that the container can use
          example: 500Mi
          type: string
      type: object
    ResourceSpec_requests:
      description: The amount of CPU and memory that Kubernetes will guarantee for
        the container
      example:
        cpu: "0.5"
        memory: 200Mi
      properties:
        cpu:
          description: The amount of CPU that Kubernetes will guarantee for the container
          example: "0.5"
          type: string
        memory:
          description: The amount of memory that Kubernetes will guarantee for the
            container
          example: 200Mi
          type: string
      type: object
  securitySchemes:
    api_key_header_Authorization:
      description: Secures endpoints by requiring a JWT token
      scheme: bearer
      type: http
    basic_header_Authorization:
      description: Basic authentication
      scheme: basic
      type: http
