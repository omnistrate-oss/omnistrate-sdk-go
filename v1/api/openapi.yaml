openapi: 3.0.3
info:
  description: REST API for Omnistrate Service Registration
  title: Omnistrate Registration API
  version: 2022-09-01-00
servers:
- url: https://api.omnistrate.cloud
tags:
- description: Common API for all Omnistrate API endpoints
  name: global-api
- name: service-api
- name: service-environment-api
- name: service-model-api
- name: product-tier-api
- name: service-api-api
- name: service-plan-api
- name: resource-api
- name: tier-version-set-api
- name: input-parameter-api
- name: output-parameter-api
- description: The external facing VUnit API
  name: vunit-api
- description: The infra config API manages the infra for Omnistrate resources
  name: infra-config-api
- description: The image config API manages the image config for Omnistrate entities
  name: image-config-api
- description: The deployment config API manages the deployment config for Omnistrate
    entities
  name: deployment-config-api
- description: The compute config API manages the compute config for Omnistrate entities
  name: compute-config-api
- description: The storage config API manages the storage config for Omnistrate entities
  name: storage-config-api
- description: The storage volume config API manages the storage volume config for
    Omnistrate entities
  name: storage-volume-config-api
- description: The network config API manages the network config for Omnistrate entities
  name: network-config-api
- description: The Availability Zone API provides read-only access to availability
    zones
  name: availability-zone-api
- description: The Region API provides read-only access to regions
  name: region-api
- description: The Cloud Provider API provides read-only access to cloud provider
    metadata
  name: cloud-provider-api
- description: The Demo API provides a demo of the system
  name: demo-api
- description: The Contactus API for customers to reach out to us
  name: contactus-api
- description: The signin API for customers to authenticate with us
  name: signin-api
- description: The Signup API for customers to signup with us
  name: signup-api
- description: The Plan API is for payment info.  It's explicitly empty for free plans.
  name: plan-api
- description: The Usage API is for getting the last calendar month usage.
  name: usage-api
- description: The Invoices API gets the list of invoices for the organization
  name: invoice-api
- description: The user management API to manage user metadata
  name: users-api
- description: The Consumption Signin API signs the user into the consumption service
  name: consumption-user-api
- description: The Services Orchestration API manages the orchestration of services
  name: services-orchestration-api
- description: The Resource Instance API manages the instances of a resource
  name: resource-instance-api
- description: The Consumption Usage API retrieves the usage data for consumption
    users
  name: consumption-usage-api
- description: The Consumption Invoice API retrieves the invoice data for consumption
    users
  name: consumption-invoice-api
- description: The Consumption Invoice API retrieves the billing information for consumption
    users
  name: consumption-billing-api
- description: The Account Config API manages the access information for a Service
    Provider account
  name: account-config-api
- description: The Custom Domain API manages the delegated domain names for the Service
    Provider
  name: custom-domain-api
- description: The limit API manages the limit for Omnistrate entities
  name: limit-api
- description: The image registry API manages the image registry for Omnistrate resources
  name: image-registry-api
- description: The service offering API provides a public API to list all public services
  name: service-offering-api
- description: The set of APIs for auditing instance events for consumption side users.
  name: audit-events-api
- description: The subscription management API to manage subscription metadata
  name: subscription-api
- description: The subscription request API for end customers to issue subscription
    requests
  name: subscription-request-api
- name: identity-provider-api
- name: saas-portal-api
- name: helm-package-api
- name: compose-gen-api
- name: custom-network-api
- description: The API to manage stripe connected accounts
  name: stripe-connect-api
paths:
  /2022-09-01-00/accountconfig:
    post:
      operationId: account-config-api#CreateAccountConfig
      requestBody:
        content:
          application/json:
            example:
              awsAccessKey: Est omnis dolore vitae enim saepe sit.
              awsAccountID: "123456789012"
              awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
              awsSecretKey: Aliquid necessitatibus.
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              byoaInstanceID: instance-12345678
              cloudProviderId: infra-12345678
              description: An AWS account hosting multiple dev environments
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
              gcpServiceAccountKey: Repellendus dolorem aliquam placeat velit laboriosam
                eius.
              name: Dev AWS account
            schema:
              $ref: '#/components/schemas/CreateAccountConfigRequest2'
        required: true
      responses:
        "202":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: ac-12345678
              schema:
                description: The ID of the registered account config
                example: ac-12345678
                type: string
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateAccountConfig account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/{id}:
    delete:
      operationId: account-config-api#DeleteAccountConfig
      parameters:
      - description: Account Config ID to operate on
        example: ac-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Account Config
          example: Animi laboriosam eos nobis culpa illum dolore.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteAccountConfig account-config-api
      tags:
      - account-config-api
    get:
      operationId: account-config-api#DescribeAccountConfig
      parameters:
      - description: Account Config ID to operate on
        example: ac-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Account Config
          example: Sint qui modi.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                awsAccountID: "123456789012"
                awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                azureTenantID: 12345678-1234-1234-1234-123456789012
                byoaInstanceIDs:
                - instance-12345678
                - instance-abcdefgh
                cloudProviderId: infra-12345678
                description: An AWS account hosting multiple dev environments
                gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                gcpProjectID: my-project
                gcpProjectNumber: "123456789012"
                gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                id: ac-12345678
                name: Dev AWS account
                status: READY
                statusMessage: Account is ready
              schema:
                $ref: '#/components/schemas/DescribeAccountConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeAccountConfig account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/aws/{awsAccountID}:
    get:
      operationId: account-config-api#DescribeAccountConfigByAWSAccountID
      parameters:
      - description: The AWS account ID
        example: "123456789012"
        explode: false
        in: path
        name: awsAccountID
        required: true
        schema:
          description: The AWS account ID
          example: "123456789012"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                awsAccountID: "123456789012"
                awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml&param_CreateLoadBalancerPolicy=false
                awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                byoaInstanceIDs:
                - instance-12345678
                - instance-abcdefgh
                cloudProviderId: infra-12345678
                description: An AWS account hosting multiple dev environments
                id: ac-12345678
                name: Dev AWS account
                status: READY
                statusMessage: Account is ready
              schema:
                $ref: '#/components/schemas/DescribeAccountConfigByAWSAccountIDResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeAccountConfigByAWSAccountID account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/azure/{azureSubscriptionID}:
    get:
      operationId: account-config-api#DescribeAccountConfigByAzureSubscriptionID
      parameters:
      - description: The Azure subscription ID
        example: 12345678-1234-1234-1234-123456789012
        explode: false
        in: path
        name: azureSubscriptionID
        required: true
        schema:
          description: The Azure subscription ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                azureTenantID: 12345678-1234-1234-1234-123456789012
                byoaInstanceIDs:
                - instance-12345678
                - instance-abcdefgh
                cloudProviderId: infra-12345678
                description: An AWS account hosting multiple dev environments
                id: ac-12345678
                name: Dev AWS account
                status: READY
                statusMessage: Account is ready
              schema:
                $ref: '#/components/schemas/DescribeAccountConfigByAzureSubscriptionIDResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeAccountConfigByAzureSubscriptionID account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/byoa:
    get:
      operationId: account-config-api#ListBYOAConfig
      requestBody:
        content:
          application/json:
            example:
              cloudProviderName: aws
            schema:
              $ref: '#/components/schemas/ListBYOAConfigRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                accountConfigs:
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: infra-12345678
                  description: An AWS account hosting multiple dev environments
                  gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: ac-12345678
                  name: Dev AWS account
                  status: READY
                  statusMessage: Account is ready
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: infra-12345678
                  description: An AWS account hosting multiple dev environments
                  gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: ac-12345678
                  name: Dev AWS account
                  status: READY
                  statusMessage: Account is ready
                ids:
                - ac-12345678
                - ac-abcdefgh
                - ac-1234efgh
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListBYOAConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list account configs"
      security:
      - api_key_header_Authorization: []
      summary: ListBYOAConfig account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/cloudprovider/{cloudProviderName}:
    get:
      operationId: account-config-api#ListAccountConfig
      parameters:
      - description: Cloud Provider name to filter on
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                accountConfigs:
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: infra-12345678
                  description: An AWS account hosting multiple dev environments
                  gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: ac-12345678
                  name: Dev AWS account
                  status: READY
                  statusMessage: Account is ready
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: infra-12345678
                  description: An AWS account hosting multiple dev environments
                  gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: ac-12345678
                  name: Dev AWS account
                  status: READY
                  statusMessage: Account is ready
                ids:
                - ac-12345678
                - ac-abcdefgh
                - ac-1234efgh
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListAccountConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list account configs"
      security:
      - api_key_header_Authorization: []
      summary: ListAccountConfig account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/gcp/{gcpProjectID}:
    get:
      operationId: account-config-api#DescribeAccountConfigByGCPProjectID
      parameters:
      - description: The GCP project ID
        example: my-project
        explode: false
        in: path
        name: gcpProjectID
        required: true
        schema:
          description: The GCP project ID
          example: my-project
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                byoaInstanceIDs:
                - instance-12345678
                - instance-abcdefgh
                cloudProviderId: infra-12345678
                description: An AWS account hosting multiple dev environments
                gcpProjectID: my-project
                gcpProjectNumber: "123456789012"
                gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                id: ac-12345678
                name: Dev AWS account
                status: READY
                statusMessage: Account is ready
              schema:
                $ref: '#/components/schemas/DescribeAccountConfigByGCPProjectIDResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeAccountConfigByGCPProjectID account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/identityid:
    get:
      description: Returns the identity id of the account config to be used in the
        trust policy of the account
      operationId: account-config-api#AccountConfigIdentityID
      responses:
        "200":
          content:
            application/json:
              example:
                id: org-12345678
              schema:
                $ref: '#/components/schemas/AccountConfigIdentityIDResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get an account\
            \ config identity id"
      security:
      - api_key_header_Authorization: []
      summary: AccountConfigIdentityID account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/accountconfig/verify/{id}:
    post:
      operationId: account-config-api#VerifyAccountConfig
      parameters:
      - description: Account Config ID to operate on
        example: ac-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Account Config
          example: Delectus sunt.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list account configs"
      security:
      - api_key_header_Authorization: []
      summary: VerifyAccountConfig account-config-api
      tags:
      - account-config-api
  /2022-09-01-00/availability-zone/{id}:
    get:
      operationId: availability-zone-api#DescribeAvailabilityZone
      parameters:
      - example: az-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an AZ
          example: Doloremque voluptas tempora perspiciatis.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cloudProviderName: aws
                code: us-east-1a
                description: US East (N. Virginia) Availability Zone A
                id: az-12345678
                regionCode: us-east-1
              schema:
                $ref: '#/components/schemas/DescribeAvailabilityZoneResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an availability\
            \ zone"
      security:
      - api_key_header_Authorization: []
      summary: DescribeAvailabilityZone availability-zone-api
      tags:
      - availability-zone-api
  /2022-09-01-00/availability-zone/cloud-provider/{cloudProviderName}:
    get:
      operationId: availability-zone-api#ListAvailabilityZone
      parameters:
      - description: The cloud provider for this compute instance type config
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - az-12345678
                - az-87654321
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListAvailabilityZonesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list availability\
            \ zones"
      security:
      - api_key_header_Authorization: []
      summary: ListAvailabilityZone availability-zone-api
      tags:
      - availability-zone-api
  /2022-09-01-00/availability-zone/code/{code}/cloud-provider/{cloudProviderName}:
    get:
      operationId: availability-zone-api#GetAvailabilityZoneByCode
      parameters:
      - description: Cloud-provider native availability zone code
        example: us-east-1a
        explode: false
        in: path
        name: code
        required: true
        schema:
          description: Cloud-provider native availability zone code
          example: us-east-1a
          type: string
        style: simple
      - description: The cloud provider for this compute instance type config
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: Corporis modi delectus voluptatem.
              schema:
                example: Libero ullam officia nam non maiores fugit.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get an availability\
            \ zone by code"
      security:
      - api_key_header_Authorization: []
      summary: GetAvailabilityZoneByCode availability-zone-api
      tags:
      - availability-zone-api
  /2022-09-01-00/availability-zone/region/code/{regionCode}/cloud-provider/{cloudProviderName}:
    get:
      operationId: availability-zone-api#ListAvailabilityZonesByRegionCode
      parameters:
      - example: us-east-1
        explode: false
        in: path
        name: regionCode
        required: true
        schema:
          example: us-east-1
          type: string
        style: simple
      - description: The cloud provider for this compute instance type config
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - az-12345678
                - az-87654321
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListAvailabilityZonesByRegionCodeResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list availability\
            \ zones by region code"
      security:
      - api_key_header_Authorization: []
      summary: ListAvailabilityZonesByRegionCode availability-zone-api
      tags:
      - availability-zone-api
  /2022-09-01-00/change-password:
    post:
      operationId: signup-api#ChangePassword
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              password: password
              token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to change password"
      summary: ChangePassword signup-api
      tags:
      - signup-api
  /2022-09-01-00/cloud-provider:
    get:
      operationId: cloud-provider-api#ListCloudProvider
      parameters:
      - allowEmptyValue: true
        description: "Service ID. If specified together with serviceModelId,list the\
          \ cloud provider of the service model. Otherwise list all cloud provider."
        example: s-12345678
        explode: true
        in: query
        name: serviceId
        required: false
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: form
      - allowEmptyValue: true
        description: "Service model ID. If specified together with serviceId,list\
          \ the cloud provider of the service model. Otherwise list all cloud provider."
        example: sm-12345678
        explode: true
        in: query
        name: serviceModelId
        required: false
        schema:
          description: ID of a Service Model
          example: Vitae est delectus sit aperiam.
          type: string
        style: form
      - allowEmptyValue: true
        description: "Product tier ID. If specified together with serviceId,list the\
          \ cloud provider of the product tier. Otherwise list all cloud provider."
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Optio et.
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - infra-12345678
                - infra-87654321
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListCloudProvidersResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list cloud providers"
      security:
      - api_key_header_Authorization: []
      summary: ListCloudProvider cloud-provider-api
      tags:
      - cloud-provider-api
  /2022-09-01-00/cloud-provider/{id}:
    get:
      operationId: cloud-provider-api#DescribeCloudProvider
      parameters:
      - description: ID of the CloudProvider
        example: infra-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an CloudProvider
          example: Laboriosam consequatur.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: Amazon Web Services
                id: infra-12345678
                name: aws
              schema:
                $ref: '#/components/schemas/DescribeCloudProviderResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an cloud\
            \ provider"
      security:
      - api_key_header_Authorization: []
      summary: DescribeCloudProvider cloud-provider-api
      tags:
      - cloud-provider-api
  /2022-09-01-00/cloud-provider/name/{name}:
    get:
      operationId: cloud-provider-api#GetCloudProviderByName
      parameters:
      - description: Name of the CloudProvider
        example: aws
        explode: false
        in: path
        name: name
        required: true
        schema:
          description: Name of the CloudProvider
          example: aws
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: Suscipit sapiente et maiores ut.
              schema:
                example: Asperiores fugiat dolor in vero.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get an cloud provider\
            \ by name"
      security:
      - api_key_header_Authorization: []
      summary: GetCloudProviderByName cloud-provider-api
      tags:
      - cloud-provider-api
  /2022-09-01-00/compose-gen/image:
    get:
      operationId: compose-gen-api#CheckIfContainerImageAccessible
      parameters:
      - allowEmptyValue: true
        description: Registry where the image is stored
        example: docker.io
        explode: true
        in: query
        name: imageRegistry
        required: true
        schema:
          description: Registry where the image is stored
          example: docker.io
          type: string
        style: form
      - allowEmptyValue: true
        description: Username to access the image registry
        example: username
        explode: true
        in: query
        name: username
        required: false
        schema:
          description: Username to access the image registry
          example: username
          type: string
        style: form
      - allowEmptyValue: true
        description: Password to access the image registry
        example: password
        explode: true
        in: query
        name: password
        required: false
        schema:
          description: Password to access the image registry
          example: password
          type: string
        style: form
      - allowEmptyValue: true
        description: Name of the image along with the tag. Include the repository
          name if the image is not from the official repository
        example: library/mysql:5.7
        explode: true
        in: query
        name: image
        required: true
        schema:
          description: Name of the image along with the tag. Include the repository
            name if the image is not from the official repository
          example: library/mysql:5.7
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                errorMsg: Necessitatibus eligendi est.
                imageAccessible: true
              schema:
                $ref: '#/components/schemas/CheckIfContainerImageAccessibleResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to build a service\
            \ from compose spec"
      security:
      - api_key_header_Authorization: []
      summary: CheckIfContainerImageAccessible compose-gen-api
      tags:
      - compose-gen-api
    post:
      operationId: compose-gen-api#GenerateComposeSpecFromContainerImage
      requestBody:
        content:
          application/json:
            example:
              environmentVariables:
              - key: MYSQL_ROOT_PASSWORD
                value: password
              image: library/mysql:5.7
              imageRegistry: docker.io
              password: password
              username: username
            schema:
              $ref: '#/components/schemas/GenerateComposeSpecFromContainerImageRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                fileContent: Eveniet aut placeat corrupti corrupti.
              schema:
                $ref: '#/components/schemas/GenerateComposeSpecFromContainerImageResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to build a service\
            \ from compose spec"
      security:
      - api_key_header_Authorization: []
      summary: GenerateComposeSpecFromContainerImage compose-gen-api
      tags:
      - compose-gen-api
  /2022-09-01-00/contactus:
    post:
      operationId: contactus-api#Contactus
      requestBody:
        content:
          application/json:
            example:
              company: ABC
              email: abc@gmail.com
              message: this is a test
              name: John Doe
            schema:
              $ref: '#/components/schemas/ContactusRequest'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to contactus"
      summary: Contactus contactus-api
      tags:
      - contactus-api
  /2022-09-01-00/customdomain:
    get:
      operationId: custom-domain-api#ListCustomDomain
      responses:
        "200":
          content:
            application/json:
              example:
                CustomDomains:
                - customDomain: mydomain.dev
                  description: Description of the domain
                  id: cd-12345678
                  name: Dev domain
                  route53Configuration:
                    awsAccountID: "123456789012"
                    awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
                  status: READY
                  statusMessage: Account is ready
                - customDomain: mydomain.dev
                  description: Description of the domain
                  id: cd-12345678
                  name: Dev domain
                  route53Configuration:
                    awsAccountID: "123456789012"
                    awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
                  status: READY
                  statusMessage: Account is ready
                ids:
                - cd-12345678
                - cd-abcdefgh
                - cd-1234efgh
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListCustomDomainResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list Custom Domains"
      security:
      - api_key_header_Authorization: []
      summary: ListCustomDomain custom-domain-api
      tags:
      - custom-domain-api
    post:
      operationId: custom-domain-api#CreateCustomDomain
      requestBody:
        content:
          application/json:
            example:
              customDomain: mydomain.dev
              description: Description of the domain
              name: Dev domain
              route53Configuration:
                awsAccountID: "123456789012"
            schema:
              $ref: '#/components/schemas/CreateCustomDomainRequest2'
        required: true
      responses:
        "202":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: cd-12345678
              schema:
                description: The ID of the registered Custom Domain
                example: cd-12345678
                type: string
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create an Custom\
            \ Domain"
      security:
      - api_key_header_Authorization: []
      summary: CreateCustomDomain custom-domain-api
      tags:
      - custom-domain-api
  /2022-09-01-00/customdomain/{id}:
    delete:
      operationId: custom-domain-api#DeleteCustomDomain
      parameters:
      - description: custom domain ID to operate on
        example: cd-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Custom Domain
          example: Debitis necessitatibus eos eos et corrupti.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete an Custom\
            \ Domain"
      security:
      - api_key_header_Authorization: []
      summary: DeleteCustomDomain custom-domain-api
      tags:
      - custom-domain-api
    get:
      operationId: custom-domain-api#DescribeCustomDomain
      parameters:
      - description: custom domain ID to operate on
        example: cd-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Custom Domain
          example: Nemo autem accusantium.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                customDomain: mydomain.dev
                description: Description of the domain
                id: cd-12345678
                name: Dev domain
                route53Configuration:
                  awsAccountID: "123456789012"
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
                status: READY
                statusMessage: Account is ready
              schema:
                $ref: '#/components/schemas/DescribeCustomDomainResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an Custom\
            \ Domain"
      security:
      - api_key_header_Authorization: []
      summary: DescribeCustomDomain custom-domain-api
      tags:
      - custom-domain-api
  /2022-09-01-00/customdomain/identityid:
    get:
      description: Returns the identity id of the Custom Domain to be used in the
        trust policy of the account
      operationId: custom-domain-api#CustomDomainIdentityID
      responses:
        "200":
          content:
            application/json:
              example:
                id: org-12345678
              schema:
                $ref: '#/components/schemas/CustomDomainIdentityIDResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get an Custom\
            \ Domain identity id"
      security:
      - api_key_header_Authorization: []
      summary: CustomDomainIdentityID custom-domain-api
      tags:
      - custom-domain-api
  /2022-09-01-00/customdomain/verify/{id}:
    post:
      operationId: custom-domain-api#VerifyCustomDomain
      parameters:
      - description: custom domain ID to operate on
        example: cd-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Custom Domain
          example: Ad eum odio.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list Custom Domains"
      security:
      - api_key_header_Authorization: []
      summary: VerifyCustomDomain custom-domain-api
      tags:
      - custom-domain-api
  /2022-09-01-00/customer-delete-user:
    delete:
      operationId: users-api#CustomerDeleteUser
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete user"
      security:
      - api_key_header_Authorization: []
      summary: CustomerDeleteUser users-api
      tags:
      - users-api
  /2022-09-01-00/customer-invite-user:
    post:
      operationId: users-api#CustomerInviteUser
      requestBody:
        content:
          application/json:
            example:
              email: abc@example.com
            schema:
              $ref: '#/components/schemas/CustomerInviteUserRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to invite user"
      security:
      - api_key_header_Authorization: []
      summary: CustomerInviteUser users-api
      tags:
      - users-api
  /2022-09-01-00/customer-login-with-identity-provider:
    post:
      operationId: users-api#CustomerLoginWithIdentityProvider
      requestBody:
        content:
          application/json:
            example:
              authorizationCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
              companyDescription: We sell xyz database software
              companyUrl: https://www.mywebsite.com
              environmentType: DEV
              identityProviderName: Google
              invitedEmail: abc@gmail.com
              legalCompanyName: mywebsite
              redirectUri: https://www.example/redirect
            schema:
              $ref: '#/components/schemas/CustomerLoginWithIdentityProviderRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                jwtToken: ""
              schema:
                $ref: '#/components/schemas/CustomerLoginWithIdentityProviderResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to signin"
      security:
      - api_key_header_Authorization: []
      summary: CustomerLoginWithIdentityProvider users-api
      tags:
      - users-api
  /2022-09-01-00/customer-reset-password:
    post:
      operationId: users-api#CustomerResetPassword
      requestBody:
        content:
          application/json:
            example:
              email: abc@example.com
            schema:
              $ref: '#/components/schemas/CustomerResetPasswordRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to signin"
      security:
      - api_key_header_Authorization: []
      summary: CustomerResetPassword users-api
      tags:
      - users-api
  /2022-09-01-00/customer-user-signin:
    post:
      operationId: users-api#CustomerSignin
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              environmentType: DEV
              hashedPassword: deprecated
              password: password
            schema:
              $ref: '#/components/schemas/CustomerSigninRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                jwtToken: ""
              schema:
                $ref: '#/components/schemas/CustomerSigninResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to signin"
      security:
      - api_key_header_Authorization: []
      summary: CustomerSignin users-api
      tags:
      - users-api
  /2022-09-01-00/customer-user-signup:
    post:
      operationId: users-api#CustomerSignup
      requestBody:
        content:
          application/json:
            example:
              companyDescription: We sell xyz database software
              companyUrl: https://www.mywebsite.com
              email: abc@gmail.com
              legalCompanyName: mywebsite
              name: John Doe
              password: password
            schema:
              $ref: '#/components/schemas/CustomerSignupRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete user"
      security:
      - api_key_header_Authorization: []
      summary: CustomerSignup users-api
      tags:
      - users-api
  /2022-09-01-00/demo:
    post:
      operationId: demo-api#Demo
      requestBody:
        content:
          application/json:
            example:
              company: ABC
              email: abc@gmail.com
              name: John Doe
              phone: +1-234567890
            schema:
              $ref: '#/components/schemas/DemoRequest'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to demo"
      summary: Demo demo-api
      tags:
      - demo-api
  /2022-09-01-00/deployment-config:
    get:
      operationId: deployment-config-api#ListDeploymentConfigs
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - dc-12345678
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListDeploymentConfigsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list deployment\
            \ configs"
      security:
      - api_key_header_Authorization: []
      summary: ListDeploymentConfigs deployment-config-api
      tags:
      - deployment-config-api
    post:
      operationId: deployment-config-api#CreateDeploymentConfig
      requestBody:
        content:
          application/json:
            example:
              description: A production deployment config
              infraRollConfiguration:
                infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
                maximumNumberOfResourceInstancesPerBatch: 1
                maximumUnavailableReplicas: 1
              name: Production
              rolloutPriorityList:
              - region-12345678
              - region-abcd1234
              - region-3c3c3c3c
            schema:
              $ref: '#/components/schemas/CreateDeploymentConfigRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: dc-12345678
              schema:
                description: Deployment Config ID created
                example: dc-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create the deployment\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateDeploymentConfig deployment-config-api
      tags:
      - deployment-config-api
  /2022-09-01-00/deployment-config/{id}:
    delete:
      operationId: deployment-config-api#DeleteDeploymentConfig
      parameters:
      - description: The deployment configuration ID
        example: dc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Deployment Config
          example: Quam asperiores quae.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete the deployment\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteDeploymentConfig deployment-config-api
      tags:
      - deployment-config-api
    get:
      operationId: deployment-config-api#DescribeDeploymentConfig
      parameters:
      - description: The deployment configuration ID
        examples:
          default:
            summary: default
            value: default
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The deployment configuration ID
          example: default
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: A production deployment config
                id: dc-12345678
                infraRollConfiguration:
                  infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
                  maximumNumberOfResourceInstancesPerBatch: 1
                  maximumUnavailableReplicas: 1
                name: Production
                rolloutPriorityList:
                - region-12345678
                - region-abcd1234
                - region-3c3c3c3c
              schema:
                $ref: '#/components/schemas/DescribeDeploymentConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe the deployment\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeDeploymentConfig deployment-config-api
      tags:
      - deployment-config-api
    patch:
      operationId: deployment-config-api#UpdateDeploymentConfig
      parameters:
      - description: The deployment configuration ID
        example: dc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Deployment Config
          example: Qui voluptates doloribus quidem fugit et.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A production deployment config
              infraRollConfiguration:
                infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
                maximumNumberOfResourceInstancesPerBatch: 1
                maximumUnavailableReplicas: 1
              name: Production
              rolloutPriorityList:
              - region-12345678
              - region-abcd1234
              - region-3c3c3c3c
            schema:
              $ref: '#/components/schemas/UpdateDeploymentConfigRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update the deployment\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateDeploymentConfig deployment-config-api
      tags:
      - deployment-config-api
  /2022-09-01-00/health:
    get:
      description: Registration service health check endpoint
      operationId: global-api#registrationServiceHealth
      responses:
        "200":
          content:
            application/json:
              example:
                status: RUNNING
              schema:
                $ref: '#/components/schemas/OmnistrateServiceHealthResult'
          description: OK response.
      summary: registrationServiceHealth global-api
      tags:
      - global-api
  /2022-09-01-00/helm-package:
    get:
      operationId: helm-package-api#ListHelmPackages
      parameters:
      - allowEmptyValue: true
        description: The chart name to filter by
        example: my-chart
        explode: true
        in: query
        name: chartName
        required: false
        schema:
          description: The chart name to filter by
          example: my-chart
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                helmPackages:
                - chartName: my-chart
                  chartRepoName: my-repo
                  chartRepoUrl: https://my-repo.com
                  chartValues:
                    key1: value1
                    key2: 3
                    key3:
                      key4: value4
                  chartVersion: 1.0.0
                  namespace: default
                  password: my-password
                  username: my-user
                - chartName: my-chart
                  chartRepoName: my-repo
                  chartRepoUrl: https://my-repo.com
                  chartValues:
                    key1: value1
                    key2: 3
                    key3:
                      key4: value4
                  chartVersion: 1.0.0
                  namespace: default
                  password: my-password
                  username: my-user
                - chartName: my-chart
                  chartRepoName: my-repo
                  chartRepoUrl: https://my-repo.com
                  chartValues:
                    key1: value1
                    key2: 3
                    key3:
                      key4: value4
                  chartVersion: 1.0.0
                  namespace: default
                  password: my-password
                  username: my-user
              schema:
                $ref: '#/components/schemas/ListHelmPackagesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list helm packages"
      security:
      - api_key_header_Authorization: []
      summary: ListHelmPackages helm-package-api
      tags:
      - helm-package-api
    put:
      operationId: helm-package-api#SaveHelmPackage
      requestBody:
        content:
          application/json:
            example:
              helmPackage:
                chartName: my-chart
                chartRepoName: my-repo
                chartRepoUrl: https://my-repo.com
                chartValues:
                  key1: value1
                  key2: 3
                  key3:
                    key4: value4
                chartVersion: 1.0.0
                namespace: default
                password: my-password
                username: my-user
            schema:
              $ref: '#/components/schemas/SaveHelmPackageRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a helm\
            \ package"
      security:
      - api_key_header_Authorization: []
      summary: SaveHelmPackage helm-package-api
      tags:
      - helm-package-api
  /2022-09-01-00/helm-package/{chartName}/{chartVersion}:
    delete:
      operationId: helm-package-api#DeleteHelmPackage
      parameters:
      - description: The chart name of the Helm package to delete
        example: my-chart
        explode: false
        in: path
        name: chartName
        required: true
        schema:
          description: The chart name of the Helm package to delete
          example: my-chart
          type: string
        style: simple
      - description: The chart version of the Helm package to delete
        example: 1.0.0
        explode: false
        in: path
        name: chartVersion
        required: true
        schema:
          description: The chart version of the Helm package to delete
          example: 1.0.0
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request to delete a helm\
            \ package"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a helm\
            \ package"
      security:
      - api_key_header_Authorization: []
      summary: DeleteHelmPackage helm-package-api
      tags:
      - helm-package-api
    get:
      operationId: helm-package-api#DescribeHelmPackage
      parameters:
      - description: The chart name of the Helm package to describe
        example: my-chart
        explode: false
        in: path
        name: chartName
        required: true
        schema:
          description: The chart name of the Helm package to describe
          example: my-chart
          type: string
        style: simple
      - description: The chart version of the Helm package to describe
        example: 1.0.0
        explode: false
        in: path
        name: chartVersion
        required: true
        schema:
          description: The chart version of the Helm package to describe
          example: 1.0.0
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                chartName: my-chart
                chartRepoName: my-repo
                chartRepoUrl: https://my-repo.com
                chartValues:
                  key1: value1
                  key2: 3
                  key3:
                    key4: value4
                chartVersion: 1.0.0
                namespace: default
                password: my-password
                username: my-user
              schema:
                $ref: '#/components/schemas/HelmPackage'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request to describe a\
            \ helm package"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a helm\
            \ package"
      security:
      - api_key_header_Authorization: []
      summary: DescribeHelmPackage helm-package-api
      tags:
      - helm-package-api
  /2022-09-01-00/identity-provider:
    get:
      operationId: identity-provider-api#ListIdentityProviders
      responses:
        "200":
          content:
            application/json:
              example:
                identityProviders:
                - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
                  clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
                  clientSecret: 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
                  disabled: false
                  emailIdentifiers: company.com
                  environmentType: Accusamus culpa.
                  id: idp-12345678
                  identityProviderName: Google
                  loginButtonIconUrl: https://example.com/icon.png
                  loginButtonText: Login with Google
                  name: Google for my company
                  scopes:
                  - openid
                  - email
                  - profile
                  status: Ready
                  tokenEndpoint: https://oauth2.googleapis.com/token
                  userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
                - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
                  clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
                  clientSecret: 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
                  disabled: false
                  emailIdentifiers: company.com
                  environmentType: Accusamus culpa.
                  id: idp-12345678
                  identityProviderName: Google
                  loginButtonIconUrl: https://example.com/icon.png
                  loginButtonText: Login with Google
                  name: Google for my company
                  scopes:
                  - openid
                  - email
                  - profile
                  status: Ready
                  tokenEndpoint: https://oauth2.googleapis.com/token
                  userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
                - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
                  clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
                  clientSecret: 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
                  disabled: false
                  emailIdentifiers: company.com
                  environmentType: Accusamus culpa.
                  id: idp-12345678
                  identityProviderName: Google
                  loginButtonIconUrl: https://example.com/icon.png
                  loginButtonText: Login with Google
                  name: Google for my company
                  scopes:
                  - openid
                  - email
                  - profile
                  status: Ready
                  tokenEndpoint: https://oauth2.googleapis.com/token
                  userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
                - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
                  clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
                  clientSecret: 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
                  disabled: false
                  emailIdentifiers: company.com
                  environmentType: Accusamus culpa.
                  id: idp-12345678
                  identityProviderName: Google
                  loginButtonIconUrl: https://example.com/icon.png
                  loginButtonText: Login with Google
                  name: Google for my company
                  scopes:
                  - openid
                  - email
                  - profile
                  status: Ready
                  tokenEndpoint: https://oauth2.googleapis.com/token
                  userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
              schema:
                $ref: '#/components/schemas/ListIdentityProvidersResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list identity\
            \ providers"
      security:
      - api_key_header_Authorization: []
      summary: ListIdentityProviders identity-provider-api
      tags:
      - identity-provider-api
    post:
      operationId: identity-provider-api#CreateIdentityProvider
      requestBody:
        content:
          application/json:
            example:
              authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
              clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
              clientSecret: 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
              disabled: false
              emailIdentifiers: company.com
              environmentType: Non aliquid et hic eius consectetur qui.
              identityProviderName: Google
              loginButtonIconUrl: https://example.com/icon.png
              loginButtonText: Login with Google
              name: Google for my company
              scopes:
              - openid
              - email
              - profile
              tokenEndpoint: https://oauth2.googleapis.com/token
              userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
            schema:
              $ref: '#/components/schemas/CreateIdentityProviderRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: idp-12345678
              schema:
                description: Identity Provider ID created
                example: idp-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create an identity\
            \ provider"
      security:
      - api_key_header_Authorization: []
      summary: CreateIdentityProvider identity-provider-api
      tags:
      - identity-provider-api
  /2022-09-01-00/identity-provider/{id}:
    delete:
      operationId: identity-provider-api#DeleteIdentityProvider
      parameters:
      - description: The Identity Provider ID
        example: idp-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Identity Provider
          example: Ipsam rerum temporibus ut rem voluptatum odio.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list identity\
            \ providers"
      security:
      - api_key_header_Authorization: []
      summary: DeleteIdentityProvider identity-provider-api
      tags:
      - identity-provider-api
    get:
      operationId: identity-provider-api#DescribeIdentityProvider
      parameters:
      - description: The Identity Provider ID
        example: idp-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Identity Provider
          example: Blanditiis unde odit.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
                clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
                clientSecret: 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
                disabled: false
                emailIdentifiers: company.com
                environmentType: Pariatur hic quis.
                id: idp-12345678
                identityProviderName: Google
                loginButtonIconUrl: https://example.com/icon.png
                loginButtonText: Login with Google
                name: Google for my company
                scopes:
                - openid
                - email
                - profile
                status: Ready
                tokenEndpoint: https://oauth2.googleapis.com/token
                userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
              schema:
                $ref: '#/components/schemas/DescribeIdentityProviderResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list identity\
            \ providers"
      security:
      - api_key_header_Authorization: []
      summary: DescribeIdentityProvider identity-provider-api
      tags:
      - identity-provider-api
    patch:
      operationId: identity-provider-api#UpdateIdentityProvider
      parameters:
      - description: The Identity Provider ID
        example: idp-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Identity Provider
          example: Voluptate dolores ea.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
              clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
              clientSecret: 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
              disabled: false
              emailIdentifiers: company.com
              environmentType: Accusamus est.
              loginButtonIconUrl: https://example.com/icon.png
              loginButtonText: Login with Google
              name: Google for my company
              scopes:
              - openid
              - email
              - profile
              tokenEndpoint: https://oauth2.googleapis.com/token
              userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
            schema:
              $ref: '#/components/schemas/UpdateIdentityProviderRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list identity\
            \ providers"
      security:
      - api_key_header_Authorization: []
      summary: UpdateIdentityProvider identity-provider-api
      tags:
      - identity-provider-api
    post:
      operationId: identity-provider-api#VerifyIdentityProvider
      parameters:
      - description: The Identity Provider ID
        example: idp-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Identity Provider
          example: Et suscipit.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
                clientSecret: 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
                id: idp-12345678
                identityProviderName: Google
                name: Google for my company
                status: Ready
              schema:
                $ref: '#/components/schemas/VerifyIdentityProviderResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to verify identity\
            \ provider"
      security:
      - api_key_header_Authorization: []
      summary: VerifyIdentityProvider identity-provider-api
      tags:
      - identity-provider-api
  /2022-09-01-00/image-registry:
    get:
      operationId: image-registry-api#ListImageRegistry
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - ir-12345678
                - ir-abcdefgh
                - ir-abcd5678
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListImageRegistryResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list image registries"
      security:
      - api_key_header_Authorization: []
      summary: ListImageRegistry image-registry-api
      tags:
      - image-registry-api
    post:
      operationId: image-registry-api#CreateImageRegistry
      requestBody:
        content:
          application/json:
            example:
              description: DockerHub is a public Docker Image Registry
              host: docker.io
              name: DockerHub
              password: mypassword
              username: myusername
            schema:
              $ref: '#/components/schemas/CreateImageRegistryRequest2'
        required: true
      responses:
        "202":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: ir-12345678
              schema:
                description: Image Registry ID created
                example: ir-12345678
                type: string
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create an image\
            \ registry"
      security:
      - api_key_header_Authorization: []
      summary: CreateImageRegistry image-registry-api
      tags:
      - image-registry-api
  /2022-09-01-00/image-registry/{id}:
    delete:
      operationId: image-registry-api#DeleteImageRegistry
      parameters:
      - description: The ID of the Image Registry
        example: ir-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Registry
          example: Eaque praesentium vel minus accusamus pariatur nihil.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete an image\
            \ registry"
      security:
      - api_key_header_Authorization: []
      summary: DeleteImageRegistry image-registry-api
      tags:
      - image-registry-api
    get:
      operationId: image-registry-api#DescribeImageRegistry
      parameters:
      - description: The ID of the Image Registry
        example: ir-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Registry
          example: Excepturi culpa.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: DockerHub is a public Docker Image Registry
                host: docker.io
                id: ir-12345678
                name: DockerHub
                password: mypassword
                username: myusername
              schema:
                $ref: '#/components/schemas/DescribeImageRegistryResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an image\
            \ registry"
      security:
      - api_key_header_Authorization: []
      summary: DescribeImageRegistry image-registry-api
      tags:
      - image-registry-api
    patch:
      operationId: image-registry-api#UpdateImageRegistry
      parameters:
      - description: The ID of the Image Registry
        example: ir-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Registry
          example: Similique minus illo quibusdam quia voluptatem.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: DockerHub is a public Docker Image Registry
              host: docker.io
              name: DockerHub
              password: mypassword
              username: myusername
            schema:
              $ref: '#/components/schemas/UpdateImageRegistryRequest2'
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update an image\
            \ registry"
      security:
      - api_key_header_Authorization: []
      summary: UpdateImageRegistry image-registry-api
      tags:
      - image-registry-api
  /2022-09-01-00/invite-user:
    post:
      operationId: users-api#InviteUser
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              roleType: reader
            schema:
              $ref: '#/components/schemas/InviteUserRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to invite user"
      security:
      - api_key_header_Authorization: []
      summary: InviteUser users-api
      tags:
      - users-api
  /2022-09-01-00/invoice:
    get:
      operationId: invoice-api#ListInvoices
      responses:
        "200":
          content:
            application/json:
              example:
                invoices:
                - currency: USD
                  dueDate: 2023-10-01T00:00:00Z
                  invoiceDate: 2021-01-01T00:00:00.000Z
                  invoiceId: in_1234568
                  invoiceNumber: 2021-01-01-1234567890
                  invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
                  invoiceStatus: Open
                  invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
                  paymentTerms: Net 30
                  taxAmount: 10
                  totalAmount: 110
                  totalAmountWithoutTax: 100
                - currency: USD
                  dueDate: 2023-10-01T00:00:00Z
                  invoiceDate: 2021-01-01T00:00:00.000Z
                  invoiceId: in_1234568
                  invoiceNumber: 2021-01-01-1234567890
                  invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
                  invoiceStatus: Open
                  invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
                  paymentTerms: Net 30
                  taxAmount: 10
                  totalAmount: 110
                  totalAmountWithoutTax: 100
              schema:
                $ref: '#/components/schemas/ListInvoicesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list invoices"
      security:
      - api_key_header_Authorization: []
      summary: ListInvoices invoice-api
      tags:
      - invoice-api
  /2022-09-01-00/limit:
    get:
      operationId: limit-api#ListLimit
      requestBody:
        content:
          application/json:
            example:
              family: COMPUTE_INFRA
            schema:
              $ref: '#/components/schemas/ListLimitRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                keys:
                - MAX_VIRTUAL_CORES_PER_RESOURCE
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListLimitResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list limit"
      security:
      - api_key_header_Authorization: []
      summary: ListLimit limit-api
      tags:
      - limit-api
  /2022-09-01-00/limit/family/{family}/key/{key}:
    delete:
      operationId: limit-api#DeleteLimit
      parameters:
      - description: Limit family
        example: COMPUTE_INFRA
        explode: false
        in: path
        name: family
        required: true
        schema:
          description: The limit family
          example: SERVICE
          type: string
        style: simple
      - description: Unique key to identify the limit
        example: MAX_VIRTUAL_CORES_PER_RESOURCE
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: Unique key to identify the limit
          example: MAX_VIRTUAL_CORES_PER_RESOURCE
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete limit"
      security:
      - api_key_header_Authorization: []
      summary: DeleteLimit limit-api
      tags:
      - limit-api
    get:
      operationId: limit-api#DescribeLimit
      parameters:
      - description: Limit family
        example: COMPUTE_INFRA
        explode: false
        in: path
        name: family
        required: true
        schema:
          description: The limit family
          example: SERVICE
          type: string
        style: simple
      - description: Unique key to identify the limit
        example: MAX_VIRTUAL_CORES_PER_RESOURCE
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: Unique key to identify the limit
          example: MAX_VIRTUAL_CORES_PER_RESOURCE
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: A premium limit
                family: COMPUTE_INFRA
                key: MAX_VIRTUAL_CORES_PER_RESOURCE
                modifiable: true
                name: Premium Tier
                value: 4
              schema:
                $ref: '#/components/schemas/DescribeLimitResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe limit"
      security:
      - api_key_header_Authorization: []
      summary: DescribeLimit limit-api
      tags:
      - limit-api
    patch:
      operationId: limit-api#UpdateLimit
      parameters:
      - description: Limit family
        example: COMPUTE_INFRA
        explode: false
        in: path
        name: family
        required: true
        schema:
          description: The limit family
          example: SERVICE
          type: string
        style: simple
      - description: Unique key to identify the limit
        example: MAX_VIRTUAL_CORES_PER_RESOURCE
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: Unique key to identify the limit
          example: MAX_VIRTUAL_CORES_PER_RESOURCE
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A premium limit
              name: Premium Tier
              value: 4
            schema:
              $ref: '#/components/schemas/UpdateLimitRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update limit"
      security:
      - api_key_header_Authorization: []
      summary: UpdateLimit limit-api
      tags:
      - limit-api
  /2022-09-01-00/login-with-identity-provider:
    post:
      operationId: signin-api#LoginWithIdentityProvider
      requestBody:
        content:
          application/json:
            example:
              authorizationCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
              companyDescription: We sell xyz database software
              companyUrl: https://www.mywebsite.com
              deviceCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
              identityProviderName: Google
              invitedEmail: abc@gmail.com
              legalCompanyName: mywebsite
              redirectUri: https://www.example/redirect
            schema:
              $ref: '#/components/schemas/LoginWithIdentityProviderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                jwtToken: ""
              schema:
                $ref: '#/components/schemas/LoginWithIdentityProviderResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to login with identity\
            \ provider"
      summary: LoginWithIdentityProvider signin-api
      tags:
      - signin-api
  /2022-09-01-00/logout:
    post:
      operationId: users-api#Logout
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to logout"
      security:
      - api_key_header_Authorization: []
      summary: Logout users-api
      tags:
      - users-api
  /2022-09-01-00/org-users:
    get:
      operationId: users-api#DescribeUsersByOrg
      responses:
        "200":
          content:
            application/json:
              example:
                Id: org-aKQ8G13QeR
                orgUsers:
                - email: abc@gmail.com
                  invitedAt: 2023-01-10T00:00:00Z
                  name: John Doe
                  roleType: reader
                  userId: user-abcd1234
              schema:
                $ref: '#/components/schemas/DescribeUsersByOrgResult'
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: DescribeUsersByOrg users-api
      tags:
      - users-api
  /2022-09-01-00/plan:
    get:
      operationId: plan-api#DescribePlan
      responses:
        "200":
          content:
            application/json:
              example:
                modifiedAt: 2023-01-01T00:00:00Z
                paymentConfigured: true
                paymentInfoPortalURL: https://billing.stripe.com/p/session/abc123
                planCoreHourCost: 0.05
                planDescription: The starter plan is priced at 'X' units
                planFrequency: MONTHLY
                planMonthlyCost: 49
                planName: STARTER
                startDate: 2023-01-01
              schema:
                $ref: '#/components/schemas/DescribePlanResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to add plan"
      security:
      - api_key_header_Authorization: []
      summary: DescribePlan plan-api
      tags:
      - plan-api
    post:
      operationId: plan-api#ChangePlan
      requestBody:
        content:
          application/json:
            example:
              planName: STARTER
            schema:
              $ref: '#/components/schemas/ChangePlanRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to add plan"
      security:
      - api_key_header_Authorization: []
      summary: ChangePlan plan-api
      tags:
      - plan-api
  /2022-09-01-00/region/{id}:
    get:
      operationId: region-api#DescribeRegion
      parameters:
      - description: ID of the Region
        example: region-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Region
          example: Omnis ipsa.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cloudProviderId: infra-12345678
                cloudProviderName: aws
                code: us-east-1
                description: US East (N. Virginia)
                id: region-12345678
              schema:
                $ref: '#/components/schemas/DescribeRegionResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a region"
      security:
      - api_key_header_Authorization: []
      summary: DescribeRegion region-api
      tags:
      - region-api
  /2022-09-01-00/region/cloudprovider/{cloudProviderName}:
    get:
      operationId: region-api#ListRegion
      parameters:
      - allowEmptyValue: true
        description: "Service ID. If specified together with serviceModelId,list the\
          \ regions of the service model. Otherwise list all regions."
        example: s-12345678
        explode: true
        in: query
        name: serviceId
        required: false
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: form
      - allowEmptyValue: true
        description: "Service model ID. If specified together with serviceId,list\
          \ the regions of the service model. Otherwise list all regions."
        example: sm-12345678
        explode: true
        in: query
        name: serviceModelId
        required: false
        schema:
          description: ID of a Service Model
          example: Voluptate quam nihil libero quia et commodi.
          type: string
        style: form
      - allowEmptyValue: true
        description: "Product tier ID. If specified together with serviceId,list the\
          \ regions of the product tier. Otherwise list all regions."
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Qui commodi in.
          type: string
        style: form
      - allowEmptyValue: true
        description: "Model type. If specified, list regions for the specified model\
          \ type."
        example: CUSTOMER_HOSTED
        explode: true
        in: query
        name: modelType
        required: false
        schema:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        style: form
      - description: The cloud provider for this compute instance type config
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - region-12345678
                - region-87654321
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListRegionsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list regions"
      security:
      - api_key_header_Authorization: []
      summary: ListRegion region-api
      tags:
      - region-api
  /2022-09-01-00/region/code/{code}/cloud-provider/{cloudProviderName}:
    get:
      operationId: region-api#GetRegionByCode
      parameters:
      - description: Cloud-provider native region code
        example: us-east-1
        explode: false
        in: path
        name: code
        required: true
        schema:
          description: Cloud-provider native region code
          example: us-east-1
          minLength: 1
          type: string
        style: simple
      - description: The cloud provider for this compute instance type config
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: Reiciendis sunt.
              schema:
                example: Eum doloremque veritatis cum inventore.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get a region by\
            \ code"
      security:
      - api_key_header_Authorization: []
      summary: GetRegionByCode region-api
      tags:
      - region-api
  /2022-09-01-00/reset-password:
    post:
      operationId: signup-api#ResetPassword
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to reset password"
      summary: ResetPassword signup-api
      tags:
      - signup-api
  /2022-09-01-00/resource-instance:
    get:
      operationId: resource-instance-api#ListAllResourceInstances
      parameters:
      - allowEmptyValue: true
        description: The environment type to filter by
        example: DEV
        explode: true
        in: query
        name: environmentType
        required: false
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                nextPageToken: next-token
                resourceInstances:
                - active: true
                  autoscalingEnabled: true
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  backupStatus:
                    backupPeriodInHours: 2
                    backupRetentionInDays: 7
                    earliestRestoreTime: 2021-09-01T00:00:00Z
                    lastBackupTime: 2021-09-01T00:00:00Z
                  cloud_provider: aws
                  created_at: 2023-01-10T00:00:00Z
                  createdByUserId: user-12345678
                  createdByUserName: John Doe
                  currentReplicas: "2"
                  customNetworkDetail:
                    cidr: 10.177.0.0/16
                    id: n-12345678
                    name: Prod us-east-1
                  detailedNetworkTopology:
                    r-abcd1234:
                      allowedIPRanges:
                      - 0.0.0.0/0
                      clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      clusterPorts:
                      - 3306
                      isJob: false
                      jobMetrics:
                      - additionalData:
                          exitCode: 0
                          status: Succeeded
                        endTime: 2023-01-01T10:05:00Z
                        metricType: cpu_core_seconds
                        startTime: 2023-01-01T10:00:00Z
                        value: 120.5
                      - additionalData:
                          peakMemoryUsage: 512MB
                        endTime: 2023-01-01T10:05:00Z
                        metricType: memory_mb_seconds
                        startTime: 2023-01-01T10:00:00Z
                        value: 2560
                      main: true
                      networkingType: PUBLIC
                      nodes:
                      - availabilityZone: us-east-2a
                        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        healthStatus: healthy
                        id: primary-0
                        ports:
                        - 3306
                        status: RUNNING
                      privateNetworkCIDR: 10.0.0.2/24
                      privateNetworkID: n-1234abcd
                      publiclyAccessible: true
                      resourceKey: primary
                      resourceName: Primary MySQL Instance
                  externalPayerId: external-payer-id-1234
                  gcpProjectID: my-project
                  highAvailability: true
                  id: instance-abcd1234
                  instanceLoadStatus: Minima ipsum magni iste sunt nam quisquam.
                  kubernetesDashboardEndpoint:
                    dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                    deploymentCellID: hc-12345678
                  last_modified_at: 2023-01-20T00:00:00Z
                  maintenanceTasks:
                    Dolores omnis quam dolore alias voluptatem doloribus.: Iste ea.
                    Quibusdam enim.: At asperiores sunt voluptate.
                  maxReplicas: "1"
                  minReplicas: "1"
                  network_type: PUBLIC
                  productTierFeatures:
                    LOGS:
                      auth:
                        password: px3c4d5f6g7h8i
                        username: abcd1234
                      enabled: true
                      websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                    METRICS:
                      enabled: false
                  region: us-east-1
                  resourceID: r-abcd1234
                  result_params:
                    param1: value1
                    param2: value2
                  serverlessEnabled: true
                  status: RUNNING
                  subscriptionId: sub-abcd1234
                  subscriptionLicense:
                    certificateBase64: public-cert
                    expirationDate: 2024-01-01T10:00:00Z
                    licenseBase64: license-file
                  subscriptionStatus: ACTIVE
                - active: true
                  autoscalingEnabled: true
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  backupStatus:
                    backupPeriodInHours: 2
                    backupRetentionInDays: 7
                    earliestRestoreTime: 2021-09-01T00:00:00Z
                    lastBackupTime: 2021-09-01T00:00:00Z
                  cloud_provider: aws
                  created_at: 2023-01-10T00:00:00Z
                  createdByUserId: user-12345678
                  createdByUserName: John Doe
                  currentReplicas: "2"
                  customNetworkDetail:
                    cidr: 10.177.0.0/16
                    id: n-12345678
                    name: Prod us-east-1
                  detailedNetworkTopology:
                    r-abcd1234:
                      allowedIPRanges:
                      - 0.0.0.0/0
                      clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      clusterPorts:
                      - 3306
                      isJob: false
                      jobMetrics:
                      - additionalData:
                          exitCode: 0
                          status: Succeeded
                        endTime: 2023-01-01T10:05:00Z
                        metricType: cpu_core_seconds
                        startTime: 2023-01-01T10:00:00Z
                        value: 120.5
                      - additionalData:
                          peakMemoryUsage: 512MB
                        endTime: 2023-01-01T10:05:00Z
                        metricType: memory_mb_seconds
                        startTime: 2023-01-01T10:00:00Z
                        value: 2560
                      main: true
                      networkingType: PUBLIC
                      nodes:
                      - availabilityZone: us-east-2a
                        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        healthStatus: healthy
                        id: primary-0
                        ports:
                        - 3306
                        status: RUNNING
                      privateNetworkCIDR: 10.0.0.2/24
                      privateNetworkID: n-1234abcd
                      publiclyAccessible: true
                      resourceKey: primary
                      resourceName: Primary MySQL Instance
                  externalPayerId: external-payer-id-1234
                  gcpProjectID: my-project
                  highAvailability: true
                  id: instance-abcd1234
                  instanceLoadStatus: Minima ipsum magni iste sunt nam quisquam.
                  kubernetesDashboardEndpoint:
                    dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                    deploymentCellID: hc-12345678
                  last_modified_at: 2023-01-20T00:00:00Z
                  maintenanceTasks:
                    Dolores omnis quam dolore alias voluptatem doloribus.: Iste ea.
                    Quibusdam enim.: At asperiores sunt voluptate.
                  maxReplicas: "1"
                  minReplicas: "1"
                  network_type: PUBLIC
                  productTierFeatures:
                    LOGS:
                      auth:
                        password: px3c4d5f6g7h8i
                        username: abcd1234
                      enabled: true
                      websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                    METRICS:
                      enabled: false
                  region: us-east-1
                  resourceID: r-abcd1234
                  result_params:
                    param1: value1
                    param2: value2
                  serverlessEnabled: true
                  status: RUNNING
                  subscriptionId: sub-abcd1234
                  subscriptionLicense:
                    certificateBase64: public-cert
                    expirationDate: 2024-01-01T10:00:00Z
                    licenseBase64: license-file
                  subscriptionStatus: ACTIVE
                - active: true
                  autoscalingEnabled: true
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  backupStatus:
                    backupPeriodInHours: 2
                    backupRetentionInDays: 7
                    earliestRestoreTime: 2021-09-01T00:00:00Z
                    lastBackupTime: 2021-09-01T00:00:00Z
                  cloud_provider: aws
                  created_at: 2023-01-10T00:00:00Z
                  createdByUserId: user-12345678
                  createdByUserName: John Doe
                  currentReplicas: "2"
                  customNetworkDetail:
                    cidr: 10.177.0.0/16
                    id: n-12345678
                    name: Prod us-east-1
                  detailedNetworkTopology:
                    r-abcd1234:
                      allowedIPRanges:
                      - 0.0.0.0/0
                      clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      clusterPorts:
                      - 3306
                      isJob: false
                      jobMetrics:
                      - additionalData:
                          exitCode: 0
                          status: Succeeded
                        endTime: 2023-01-01T10:05:00Z
                        metricType: cpu_core_seconds
                        startTime: 2023-01-01T10:00:00Z
                        value: 120.5
                      - additionalData:
                          peakMemoryUsage: 512MB
                        endTime: 2023-01-01T10:05:00Z
                        metricType: memory_mb_seconds
                        startTime: 2023-01-01T10:00:00Z
                        value: 2560
                      main: true
                      networkingType: PUBLIC
                      nodes:
                      - availabilityZone: us-east-2a
                        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        healthStatus: healthy
                        id: primary-0
                        ports:
                        - 3306
                        status: RUNNING
                      privateNetworkCIDR: 10.0.0.2/24
                      privateNetworkID: n-1234abcd
                      publiclyAccessible: true
                      resourceKey: primary
                      resourceName: Primary MySQL Instance
                  externalPayerId: external-payer-id-1234
                  gcpProjectID: my-project
                  highAvailability: true
                  id: instance-abcd1234
                  instanceLoadStatus: Minima ipsum magni iste sunt nam quisquam.
                  kubernetesDashboardEndpoint:
                    dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                    deploymentCellID: hc-12345678
                  last_modified_at: 2023-01-20T00:00:00Z
                  maintenanceTasks:
                    Dolores omnis quam dolore alias voluptatem doloribus.: Iste ea.
                    Quibusdam enim.: At asperiores sunt voluptate.
                  maxReplicas: "1"
                  minReplicas: "1"
                  network_type: PUBLIC
                  productTierFeatures:
                    LOGS:
                      auth:
                        password: px3c4d5f6g7h8i
                        username: abcd1234
                      enabled: true
                      websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                    METRICS:
                      enabled: false
                  region: us-east-1
                  resourceID: r-abcd1234
                  result_params:
                    param1: value1
                    param2: value2
                  serverlessEnabled: true
                  status: RUNNING
                  subscriptionId: sub-abcd1234
                  subscriptionLicense:
                    certificateBase64: public-cert
                    expirationDate: 2024-01-01T10:00:00Z
                    licenseBase64: license-file
                  subscriptionStatus: ACTIVE
              schema:
                $ref: '#/components/schemas/ListAllResourceInstancesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list all resource\
            \ instances"
      security:
      - api_key_header_Authorization: []
      summary: ListAllResourceInstances resource-instance-api
      tags:
      - resource-instance-api
  /2022-09-01-00/resource-instance/{id}/deployment-cell-dashboard/token:
    post:
      operationId: resource-instance-api#GenerateTokenForDeploymentCellDashboard
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: true
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The instance ID whose deployment cell dashboard token is to be
          generated
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                deploymentCellID: hc-12345678
                expirationTimestamp: 2021-01-01T00:00:00Z
                token: token
              schema:
                $ref: '#/components/schemas/GenerateTokenForDeploymentCellDashboardResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to generate a kubernetes\
            \ dashboard token."
      security:
      - api_key_header_Authorization: []
      summary: GenerateTokenForDeploymentCellDashboard resource-instance-api
      tags:
      - resource-instance-api
  /2022-09-01-00/resource-instance/{instanceId}/audit-events:
    get:
      operationId: audit-events-api#ListAuditEventsForInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The ID of the resource instance
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: The ID of the resource instance
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                ids:
                - event-12345678
                nextPageToken: Excepturi voluptas sit velit praesentium deserunt.
              schema:
                $ref: '#/components/schemas/ListAuditEventsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list event"
      security:
      - api_key_header_Authorization: []
      summary: ListAuditEventsForInstance audit-events-api
      tags:
      - audit-events-api
  /2022-09-01-00/resource-instance/{instanceId}/event:
    get:
      operationId: audit-events-api#DeprecatedListAuditEventsForInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The ID of the resource instance
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: The ID of the resource instance
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                ids:
                - event-12345678
                nextPageToken: Ea consequatur.
              schema:
                $ref: '#/components/schemas/ListAuditEventsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list event"
      security:
      - api_key_header_Authorization: []
      summary: DeprecatedListAuditEventsForInstance audit-events-api
      tags:
      - audit-events-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}
  : get:
      operationId: resource-instance-api#ListResourceInstances
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Velit sint fuga ex magni possimus eos.
          type: string
        style: simple
      - description: The service key
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service key
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - instance-abcd1234
                - instance-abcd1235
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListResourceInstancesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list resource\
            \ instances"
      security:
      - api_key_header_Authorization: []
      summary: ListResourceInstances resource-instance-api
      tags:
      - resource-instance-api
    post:
      operationId: resource-instance-api#CreateResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Nesciunt culpa quod sequi.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              cloud_provider: aws
              custom_network_id: n-1234567890
              externalBillingId: external-billing-id-1234
              network_type: PUBLIC
              region: us-east-1
              requestParams:
                param1: value1
                param2: value2
            schema:
              $ref: '#/components/schemas/CreateResourceInstanceRequest2'
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                id: Quaerat id.
              schema:
                $ref: '#/components/schemas/CreateServicesOrchestrationResponseBody'
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: CreateResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}
  : delete:
      operationId: resource-instance-api#DeleteResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Earum eaque voluptatum sequi eum.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: DeleteResourceInstance resource-instance-api
      tags:
      - resource-instance-api
    get:
      operationId: resource-instance-api#DescribeResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Officiis sit ipsum vel alias.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                active: true
                autoscalingEnabled: true
                awsAccountID: "123456789012"
                azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                backupStatus:
                  backupPeriodInHours: 2
                  backupRetentionInDays: 7
                  earliestRestoreTime: 2021-09-01T00:00:00Z
                  lastBackupTime: 2021-09-01T00:00:00Z
                cloud_provider: aws
                created_at: 2023-01-10T00:00:00Z
                createdByUserId: user-12345678
                createdByUserName: John Doe
                currentReplicas: "2"
                customNetworkDetail:
                  cidr: 10.177.0.0/16
                  id: n-12345678
                  name: Prod us-east-1
                detailedNetworkTopology:
                  r-abcd1234:
                    allowedIPRanges:
                    - 0.0.0.0/0
                    clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    clusterPorts:
                    - 3306
                    isJob: false
                    jobMetrics:
                    - additionalData:
                        exitCode: 0
                        status: Succeeded
                      endTime: 2023-01-01T10:05:00Z
                      metricType: cpu_core_seconds
                      startTime: 2023-01-01T10:00:00Z
                      value: 120.5
                    - additionalData:
                        peakMemoryUsage: 512MB
                      endTime: 2023-01-01T10:05:00Z
                      metricType: memory_mb_seconds
                      startTime: 2023-01-01T10:00:00Z
                      value: 2560
                    main: true
                    networkingType: PUBLIC
                    nodes:
                    - availabilityZone: us-east-2a
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      healthStatus: healthy
                      id: primary-0
                      ports:
                      - 3306
                      status: RUNNING
                    privateNetworkCIDR: 10.0.0.2/24
                    privateNetworkID: n-1234abcd
                    publiclyAccessible: true
                    resourceKey: primary
                    resourceName: Primary MySQL Instance
                externalPayerId: external-payer-id-1234
                gcpProjectID: my-project
                highAvailability: true
                id: instance-abcd1234
                instanceLoadStatus: Occaecati aut deserunt placeat exercitationem
                  illo pariatur.
                kubernetesDashboardEndpoint:
                  dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                  deploymentCellID: hc-12345678
                last_modified_at: 2023-01-20T00:00:00Z
                maintenanceTasks:
                  Fugiat officiis deleniti quis.: Minus recusandae.
                  Officiis asperiores ut voluptatem.: Rem incidunt.
                  Sapiente inventore ex enim.: Voluptate odio porro perferendis.
                maxReplicas: "1"
                minReplicas: "1"
                network_type: PUBLIC
                productTierFeatures:
                  LOGS:
                    auth:
                      password: px3c4d5f6g7h8i
                      username: abcd1234
                    enabled: true
                    websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                  METRICS:
                    enabled: false
                region: us-east-1
                resourceID: r-abcd1234
                result_params:
                  param1: value1
                  param2: value2
                serverlessEnabled: true
                status: RUNNING
                subscriptionId: sub-abcd1234
                subscriptionLicense:
                  certificateBase64: public-cert
                  expirationDate: 2024-01-01T10:00:00Z
                  licenseBase64: license-file
                subscriptionStatus: ACTIVE
              schema:
                $ref: '#/components/schemas/DescribeResourceInstanceResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: DescribeResourceInstance resource-instance-api
      tags:
      - resource-instance-api
    patch:
      operationId: resource-instance-api#UpdateResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Mollitia rerum voluptatem blanditiis.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              requestParams:
                param1: value1
                param2: value2
            schema:
              $ref: '#/components/schemas/UpdateResourceInstanceRequest2'
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: UpdateResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/add-capacity
  : post:
      operationId: resource-instance-api#AddCapacityToResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Adipisci voluptatum.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              capacityToBeAdded: 3
            schema:
              $ref: '#/components/schemas/AddCapacityToResourceInstanceRequest2'
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to add capacity to\
            \ a resource instance"
      security:
      - api_key_header_Authorization: []
      summary: AddCapacityToResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/custom-dns
  : delete:
      operationId: resource-instance-api#RemoveCustomDNSFromResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Facere itaque non qui cumque.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: http-service
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: http-service
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: RemoveCustomDNSFromResourceInstance resource-instance-api
      tags:
      - resource-instance-api
    post:
      operationId: resource-instance-api#AddCustomDNSToResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Laudantium laboriosam minima repudiandae porro ut dolorem.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: http-service
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: http-service
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              customDNS: my-custom-dns.com
              targetPort: 8080
            schema:
              $ref: '#/components/schemas/AddCustomDNSToResourceInstanceRequest2'
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: AddCustomDNSToResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/failover
  : post:
      operationId: resource-instance-api#FailoverResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Occaecati ab odit.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              failedReplicaAction: FAILOVER_AND_RESTART
              failedReplicaID: db-0
            schema:
              $ref: '#/components/schemas/FailoverResourceInstanceRequest2'
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to failover a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: FailoverResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/remove-capacity
  : post:
      operationId: resource-instance-api#RemoveCapacityFromResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Et omnis laudantium.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              capacityToBeRemoved: 3
            schema:
              $ref: '#/components/schemas/RemoveCapacityFromResourceInstanceRequest2'
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to remove capacity\
            \ from a resource instance"
      security:
      - api_key_header_Authorization: []
      summary: RemoveCapacityFromResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/restart
  : post:
      operationId: resource-instance-api#RestartResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Provident vitae quo aspernatur architecto molestiae velit.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to restart a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: RestartResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/restore
  : post:
      operationId: resource-instance-api#RestoreResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Expedita nam beatae magni veritatis aut eos.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              network_type: PUBLIC
              targetRestoreTime: 2021-09-01T00:00:00Z
            schema:
              $ref: '#/components/schemas/RestoreResourceInstanceRequest2'
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                id: Perferendis placeat consequatur voluptas dolor rerum non.
              schema:
                $ref: '#/components/schemas/CreateServicesOrchestrationResponseBody'
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: RestoreResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/snapshot
  : get:
      operationId: resource-instance-api#ListResourceInstanceSnapshots
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Iste et aliquam est.
          type: string
        style: simple
      - description: The service key
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service key
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                snapshots:
                - completeTime: 2021-09-01T00:00:00Z
                  createdTime: 2021-09-01T00:00:00Z
                  encrypted: true
                  progress: 100
                  snapshotId: instance-ss-12345678
                  status: completed
              schema:
                $ref: '#/components/schemas/ListResourceInstanceSnapshotsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list snapshots\
            \ of a resource instance"
      security:
      - api_key_header_Authorization: []
      summary: ListResourceInstanceSnapshots resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/start
  : post:
      operationId: resource-instance-api#StartResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Quo molestiae explicabo et nihil aut.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to start a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: StartResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/{id}/stop
  : post:
      operationId: resource-instance-api#StopResourceInstance
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Suscipit enim aspernatur quod est ut ut.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to stop a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: StopResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}/snapshot/{snapshotId}/restore
  : post:
      operationId: resource-instance-api#RestoreResourceInstanceFromSnapshot
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Error vero rem.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      - description: The snapshot ID
        example: instance-ss-abcd1234
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          description: ID of a Resource Instance Snapshot
          example: Quam quia repellendus eveniet aut sint.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              network_type: PUBLIC
            schema:
              $ref: '#/components/schemas/RestoreResourceInstanceFromSnapshotRequest2'
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                id: Et inventore voluptatum et.
              schema:
                $ref: '#/components/schemas/CreateServicesOrchestrationResponseBody'
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: RestoreResourceInstanceFromSnapshot resource-instance-api
      tags:
      - resource-instance-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/audit-events
  : get:
      operationId: audit-events-api#ListAuditEventsForServicePlan
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Non et vitae impedit.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                ids:
                - event-12345678
                nextPageToken: Nihil similique.
              schema:
                $ref: '#/components/schemas/ListAuditEventsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list event"
      security:
      - api_key_header_Authorization: []
      summary: ListAuditEventsForServicePlan audit-events-api
      tags:
      - audit-events-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/event
  : get:
      operationId: audit-events-api#DeprecatedListAuditEventsForServicePlan
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Minima aut commodi voluptatibus deleniti sed sint.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                ids:
                - event-12345678
                nextPageToken: Consectetur earum ut.
              schema:
                $ref: '#/components/schemas/ListAuditEventsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list event"
      security:
      - api_key_header_Authorization: []
      summary: DeprecatedListAuditEventsForServicePlan audit-events-api
      tags:
      - audit-events-api
  ? /2022-09-01-00/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/setup-kit
  : get:
      operationId: resource-instance-api#ResourceInstanceProvisionerSetupKit
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Deserunt aut dolorem.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to setup kit for\
            \ a resource instance"
      security:
      - api_key_header_Authorization: []
      summary: ResourceInstanceProvisionerSetupKit resource-instance-api
      tags:
      - resource-instance-api
  /2022-09-01-00/resource-instance/account-config/{id}:
    post:
      operationId: resource-instance-api#UpdateAccountConfigResourceInstance
      parameters:
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              serviceId: service-1234
              setConnection: true
              subscriptionId: sub-abcd1234
            schema:
              $ref: '#/components/schemas/UpdateAccountConfigResourceInstanceRequest2'
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: UpdateAccountConfigResourceInstance resource-instance-api
      tags:
      - resource-instance-api
  /2022-09-01-00/resource-instance/audit-events:
    get:
      operationId: audit-events-api#ListAllAuditEvents
      parameters:
      - allowEmptyValue: true
        description: The service ID to list events for
        example: s-123456
        explode: true
        in: query
        name: serviceID
        required: false
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: form
      - allowEmptyValue: true
        example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
        explode: true
        in: query
        name: environmentType
        required: false
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        style: form
      - allowEmptyValue: true
        description: The event types to filter by
        example:
        - Occaecati laborum.
        - Et qui quasi.
        explode: true
        in: query
        name: eventSourceTypes
        required: false
        schema:
          description: The event types to filter by
          example:
          - Maxime ex labore eligendi voluptatibus.
          - Aut odit omnis dolores commodi numquam voluptatibus.
          - Omnis tempora nihil modi libero nisi.
          - Enim eaque.
          items:
            example: Et perspiciatis quia dignissimos magni debitis.
            type: string
          type: array
        style: form
      - allowEmptyValue: true
        description: The instance ID to list events for
        example: instance-12345678
        explode: true
        in: query
        name: instanceID
        required: false
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: form
      - allowEmptyValue: true
        description: The next token to use for pagination
        example: token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The next token to use for pagination
          example: token
          type: string
        style: form
      - allowEmptyValue: true
        description: The number of events to return per page
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        style: form
      - allowEmptyValue: true
        description: Start date of the events
        example: 2023-01-01T10:00:00Z
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: End date of the events
        example: 2024-01-01T10:00:00Z
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                - eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceInstanceId: instance-abcd1234
                  resourceName: Galera
                  subscriptionId: sub-abcd1234
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                ids:
                - event-12345678
                nextPageToken: Quas sint consequatur dolore temporibus.
              schema:
                $ref: '#/components/schemas/ListAuditEventsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list all events"
      security:
      - api_key_header_Authorization: []
      summary: ListAllAuditEvents audit-events-api
      tags:
      - audit-events-api
  /2022-09-01-00/resource-instance/audit-events/{id}:
    get:
      operationId: audit-events-api#DescribeAuditEvent
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The ID of the event
        example: event-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Event
          example: Ex dolor delectus.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                eventSource: "Customer, Infra or Maintenance"
                id: event-12345678
                message: instance-abcd1234 created
                orgId: org-12345678
                orgName: Acme Corporation
                resourceInstanceId: instance-abcd1234
                resourceName: Galera
                subscriptionId: sub-abcd1234
                time: 2023-01-10T00:00:00Z
                userId: user-12345678
                userName: John Doe
                workflowFailures:
                - eventTime: 2020-01-01T00:00:00Z
                  message: Bootstrap failed for reason X
                - eventTime: 2020-01-01T00:01:00Z
                  message: Compute failed for reason Y
              schema:
                $ref: '#/components/schemas/DescribeAuditEventResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe event"
      security:
      - api_key_header_Authorization: []
      summary: DescribeAuditEvent audit-events-api
      tags:
      - audit-events-api
  /2022-09-01-00/resource-instance/billing-details:
    get:
      operationId: consumption-billing-api#DescribeConsumptionBillingDetails
      parameters:
      - allowEmptyValue: true
        description: Return Url used to configure payment methods links
        example: https://mysaasportal.com
        explode: true
        in: query
        name: returnUrl
        required: false
        schema:
          description: Return Url used to configure payment methods links
          example: https://mysaasportal.com
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                paymentConfigured: true
                paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
              schema:
                $ref: '#/components/schemas/DescribeConsumptionBillingDetailsResult'
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: DescribeConsumptionBillingDetails consumption-billing-api
      tags:
      - consumption-billing-api
  /2022-09-01-00/resource-instance/billing-status:
    get:
      operationId: consumption-billing-api#DescribeConsumptionBillingStatus
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
              schema:
                $ref: '#/components/schemas/DescribeConsumptionBillingStatusResult'
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: DescribeConsumptionBillingStatus consumption-billing-api
      tags:
      - consumption-billing-api
  /2022-09-01-00/resource-instance/custom-network:
    get:
      operationId: custom-network-api#ListCustomNetworks
      parameters:
      - allowEmptyValue: true
        description: The name of the cloud provider that custom network should be
          created in
        example: aws
        explode: true
        in: query
        name: cloudProviderName
        required: false
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: form
      - allowEmptyValue: true
        description: The region of the cloud provider that the network should be created
          in
        example: us-east-1
        explode: true
        in: query
        name: cloudProviderRegion
        required: false
        schema:
          description: The region of the cloud provider that the network should be
            created in
          example: us-east-1
          type: string
        style: form
      - allowEmptyValue: true
        description: "Flag indicating whether to return only custom networks, or to\
          \ include default and imported networks as well"
        example: false
        explode: true
        in: query
        name: customNetworksOnly
        required: false
        schema:
          description: "Flag indicating whether to return only custom networks, or\
            \ to include default and imported networks as well"
          example: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                customNetworks:
                - cidr: 10.0.0.0/16
                  cloudProviderName: aws
                  cloudProviderRegion: us-east-1
                  id: n-12345678
                  name: Prod us-east-1
                  networkDefinitionType: Custom
                  networkFeaturesConfiguration:
                    isPrivateLinkEnabled: true
                  networkInstances:
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  owningUserId: user-12345678
                  owningUserName: John Doe
                - cidr: 10.0.0.0/16
                  cloudProviderName: aws
                  cloudProviderRegion: us-east-1
                  id: n-12345678
                  name: Prod us-east-1
                  networkDefinitionType: Custom
                  networkFeaturesConfiguration:
                    isPrivateLinkEnabled: true
                  networkInstances:
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  owningUserId: user-12345678
                  owningUserName: John Doe
                - cidr: 10.0.0.0/16
                  cloudProviderName: aws
                  cloudProviderRegion: us-east-1
                  id: n-12345678
                  name: Prod us-east-1
                  networkDefinitionType: Custom
                  networkFeaturesConfiguration:
                    isPrivateLinkEnabled: true
                  networkInstances:
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  owningUserId: user-12345678
                  owningUserName: John Doe
                - cidr: 10.0.0.0/16
                  cloudProviderName: aws
                  cloudProviderRegion: us-east-1
                  id: n-12345678
                  name: Prod us-east-1
                  networkDefinitionType: Custom
                  networkFeaturesConfiguration:
                    isPrivateLinkEnabled: true
                  networkInstances:
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  owningUserId: user-12345678
                  owningUserName: John Doe
              schema:
                $ref: '#/components/schemas/ListCustomNetworksResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list custom networks"
      security:
      - api_key_header_Authorization: []
      summary: ListCustomNetworks custom-network-api
      tags:
      - custom-network-api
    post:
      operationId: custom-network-api#CreateCustomNetwork
      requestBody:
        content:
          application/json:
            example:
              cidr: 10.0.0.0/16
              cloudProviderName: aws
              cloudProviderRegion: us-east-1
              name: Prod us-east-1
              networkFeaturesConfiguration:
                isPrivateLinkEnabled: false
            schema:
              $ref: '#/components/schemas/CreateCustomNetworkRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                cidr: 10.0.0.0/16
                cloudProviderName: aws
                cloudProviderRegion: us-east-1
                id: n-12345678
                name: Prod us-east-1
                networkDefinitionType: Custom
                networkFeaturesConfiguration:
                  isPrivateLinkEnabled: true
                networkInstances:
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                owningUserId: user-12345678
                owningUserName: John Doe
              schema:
                $ref: '#/components/schemas/CustomNetwork'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a custom\
            \ network"
      security:
      - api_key_header_Authorization: []
      summary: CreateCustomNetwork custom-network-api
      tags:
      - custom-network-api
  /2022-09-01-00/resource-instance/custom-network/{id}:
    delete:
      operationId: custom-network-api#DeleteCustomNetwork
      parameters:
      - description: ID of a custom network
        example: n-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a custom network
          example: Tempora ratione earum optio.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request to delete a custom\
            \ network"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested custom network\
            \ is not found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a custom\
            \ network"
      security:
      - api_key_header_Authorization: []
      summary: DeleteCustomNetwork custom-network-api
      tags:
      - custom-network-api
    get:
      operationId: custom-network-api#DescribeCustomNetwork
      parameters:
      - description: ID of a custom network
        example: n-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a custom network
          example: Doloremque nam.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cidr: 10.0.0.0/16
                cloudProviderName: aws
                cloudProviderRegion: us-east-1
                id: n-12345678
                name: Prod us-east-1
                networkDefinitionType: Custom
                networkFeaturesConfiguration:
                  isPrivateLinkEnabled: true
                networkInstances:
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                owningUserId: user-12345678
                owningUserName: John Doe
              schema:
                $ref: '#/components/schemas/CustomNetwork'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request to describe a\
            \ custom network"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested custom network\
            \ is not found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a custom\
            \ network"
      security:
      - api_key_header_Authorization: []
      summary: DescribeCustomNetwork custom-network-api
      tags:
      - custom-network-api
    patch:
      operationId: custom-network-api#UpdateCustomNetwork
      parameters:
      - description: ID of a custom network
        example: n-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a custom network
          example: Ut non recusandae nihil a.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: Dev us-east-1
            schema:
              $ref: '#/components/schemas/UpdateCustomNetworkRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                cidr: 10.0.0.0/16
                cloudProviderName: aws
                cloudProviderRegion: us-east-1
                id: n-12345678
                name: Prod us-east-1
                networkDefinitionType: Custom
                networkFeaturesConfiguration:
                  isPrivateLinkEnabled: true
                networkInstances:
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                owningUserId: user-12345678
                owningUserName: John Doe
              schema:
                $ref: '#/components/schemas/CustomNetwork'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested custom network\
            \ is not found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a custom\
            \ network"
      security:
      - api_key_header_Authorization: []
      summary: UpdateCustomNetwork custom-network-api
      tags:
      - custom-network-api
  /2022-09-01-00/resource-instance/event/{id}:
    get:
      operationId: audit-events-api#DeprecatedDescribeAuditEvent
      parameters:
      - allowEmptyValue: true
        description: Subscription Id
        example: sub-abcd1234
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: Subscription Id
          example: sub-abcd1234
          type: string
        style: form
      - description: The ID of the event
        example: event-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Event
          example: Rerum dolor qui est distinctio.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                eventSource: "Customer, Infra or Maintenance"
                id: event-12345678
                message: instance-abcd1234 created
                orgId: org-12345678
                orgName: Acme Corporation
                resourceInstanceId: instance-abcd1234
                resourceName: Galera
                subscriptionId: sub-abcd1234
                time: 2023-01-10T00:00:00Z
                userId: user-12345678
                userName: John Doe
                workflowFailures:
                - eventTime: 2020-01-01T00:00:00Z
                  message: Bootstrap failed for reason X
                - eventTime: 2020-01-01T00:01:00Z
                  message: Compute failed for reason Y
              schema:
                $ref: '#/components/schemas/DescribeAuditEventResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe event"
      security:
      - api_key_header_Authorization: []
      summary: DeprecatedDescribeAuditEvent audit-events-api
      tags:
      - audit-events-api
  /2022-09-01-00/resource-instance/health:
    get:
      description: Consumption service health check endpoint
      operationId: global-api#consumptionServiceHealth
      responses:
        "200":
          content:
            application/json:
              example:
                status: RUNNING
              schema:
                $ref: '#/components/schemas/OmnistrateServiceHealthResult'
          description: OK response.
      summary: consumptionServiceHealth global-api
      tags:
      - global-api
  /2022-09-01-00/resource-instance/invoice:
    get:
      operationId: consumption-invoice-api#ListConsumptionInvoices
      responses:
        "200":
          content:
            application/json:
              example:
                invoices:
                - currency: USD
                  dueDate: 2023-10-01T00:00:00Z
                  invoiceDate: 2021-01-01T00:00:00.000Z
                  invoiceId: in_1234568
                  invoiceNumber: 2021-01-01-1234567890
                  invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
                  invoiceStatus: Open
                  invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
                  paymentTerms: Net 30
                  taxAmount: 10
                  totalAmount: 110
                  totalAmountWithoutTax: 100
                - currency: USD
                  dueDate: 2023-10-01T00:00:00Z
                  invoiceDate: 2021-01-01T00:00:00.000Z
                  invoiceId: in_1234568
                  invoiceNumber: 2021-01-01-1234567890
                  invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
                  invoiceStatus: Open
                  invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
                  paymentTerms: Net 30
                  taxAmount: 10
                  totalAmount: 110
                  totalAmountWithoutTax: 100
              schema:
                $ref: '#/components/schemas/ListInvoicesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list invoices"
      security:
      - api_key_header_Authorization: []
      summary: ListConsumptionInvoices consumption-invoice-api
      tags:
      - consumption-invoice-api
  /2022-09-01-00/resource-instance/services-orchestration:
    get:
      operationId: services-orchestration-api#ListServicesOrchestrations
      responses:
        "200":
          content:
            application/json:
              example:
              - ServicesTopology:
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Qui rerum ut at.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Qui rerum ut at.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Qui rerum ut at.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Qui rerum ut at.
                createdAt: 2021-01-01T00:00:00Z
                id: so-12345678
                orchestrationFailedReason: Invalid DSL
                resultParams:
                  param1: value1
                  param2: value2
                status: PENDING
                updatedAt: 2021-01-01T00:00:00Z
              - ServicesTopology:
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Qui rerum ut at.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Qui rerum ut at.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Qui rerum ut at.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Qui rerum ut at.
                createdAt: 2021-01-01T00:00:00Z
                id: so-12345678
                orchestrationFailedReason: Invalid DSL
                resultParams:
                  param1: value1
                  param2: value2
                status: PENDING
                updatedAt: 2021-01-01T00:00:00Z
              - ServicesTopology:
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Qui rerum ut at.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Qui rerum ut at.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Qui rerum ut at.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Qui rerum ut at.
                createdAt: 2021-01-01T00:00:00Z
                id: so-12345678
                orchestrationFailedReason: Invalid DSL
                resultParams:
                  param1: value1
                  param2: value2
                status: PENDING
                updatedAt: 2021-01-01T00:00:00Z
              - ServicesTopology:
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Qui rerum ut at.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Qui rerum ut at.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Qui rerum ut at.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Qui rerum ut at.
                createdAt: 2021-01-01T00:00:00Z
                id: so-12345678
                orchestrationFailedReason: Invalid DSL
                resultParams:
                  param1: value1
                  param2: value2
                status: PENDING
                updatedAt: 2021-01-01T00:00:00Z
              schema:
                example:
                - ServicesTopology:
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: i-12345678
                    serviceId: s-12345678
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Qui rerum ut at.
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: i-12345678
                    serviceId: s-12345678
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Qui rerum ut at.
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: i-12345678
                    serviceId: s-12345678
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Qui rerum ut at.
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: i-12345678
                    serviceId: s-12345678
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Qui rerum ut at.
                  createdAt: 2021-01-01T00:00:00Z
                  id: so-12345678
                  orchestrationFailedReason: Invalid DSL
                  resultParams:
                    param1: value1
                    param2: value2
                  status: PENDING
                  updatedAt: 2021-01-01T00:00:00Z
                - ServicesTopology:
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: i-12345678
                    serviceId: s-12345678
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Qui rerum ut at.
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: i-12345678
                    serviceId: s-12345678
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Qui rerum ut at.
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: i-12345678
                    serviceId: s-12345678
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Qui rerum ut at.
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: i-12345678
                    serviceId: s-12345678
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Qui rerum ut at.
                  createdAt: 2021-01-01T00:00:00Z
                  id: so-12345678
                  orchestrationFailedReason: Invalid DSL
                  resultParams:
                    param1: value1
                    param2: value2
                  status: PENDING
                  updatedAt: 2021-01-01T00:00:00Z
                items:
                  $ref: '#/components/schemas/DescribeServicesOrchestrationResult'
                type: array
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list resource\
            \ instances"
      security:
      - api_key_header_Authorization: []
      summary: ListServicesOrchestrations services-orchestration-api
      tags:
      - services-orchestration-api
    post:
      operationId: services-orchestration-api#CreateServicesOrchestration
      requestBody:
        content:
          application/json:
            example:
              orchestrationCreateDSL: Reiciendis suscipit quasi numquam voluptates
                autem.
            schema:
              $ref: '#/components/schemas/CreateServicesOrchestrationRequest2'
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                id: Quidem qui.
              schema:
                $ref: '#/components/schemas/CreateServicesOrchestrationResponseBody'
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: CreateServicesOrchestration services-orchestration-api
      tags:
      - services-orchestration-api
  /2022-09-01-00/resource-instance/services-orchestration/{id}:
    delete:
      operationId: services-orchestration-api#DeleteServicesOrchestration
      parameters:
      - description: The ID of the services orchestration
        example: so-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Services Orchestration
          example: Maiores numquam aspernatur.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: DeleteServicesOrchestration services-orchestration-api
      tags:
      - services-orchestration-api
    get:
      operationId: services-orchestration-api#DescribeServicesOrchestration
      parameters:
      - description: The ID of the services orchestration
        example: so-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Services Orchestration
          example: Et iste blanditiis corporis.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ServicesTopology:
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Pariatur ut.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Pariatur ut.
                - dependsOnDeployment:
                  - instanceDeploymentAlias1
                  - instanceDeploymentAlias2
                  failedReason: Invalid inputs
                  instanceDeploymentAlias: instanceDeploymentAlias
                  instanceId: i-12345678
                  serviceId: s-12345678
                  status: PENDING
                  statusMessage: Creating deployment
                  subscriptionId: Pariatur ut.
                createdAt: 2021-01-01T00:00:00Z
                id: so-12345678
                orchestrationFailedReason: Invalid DSL
                resultParams:
                  param1: value1
                  param2: value2
                status: PENDING
                updatedAt: 2021-01-01T00:00:00Z
              schema:
                $ref: '#/components/schemas/DescribeServicesOrchestrationResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServicesOrchestration services-orchestration-api
      tags:
      - services-orchestration-api
    patch:
      operationId: services-orchestration-api#ModifyServicesOrchestration
      parameters:
      - description: The ID of the services orchestration
        example: so-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Services Orchestration
          example: Sit at voluptas sunt voluptas iure.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              orchestrationModifyDSL: Aspernatur nihil veritatis.
            schema:
              $ref: '#/components/schemas/ModifyServicesOrchestrationRequest2'
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: ModifyServicesOrchestration services-orchestration-api
      tags:
      - services-orchestration-api
  /2022-09-01-00/resource-instance/subscription-users:
    get:
      operationId: consumption-user-api#ListAllSubscriptionUsers
      parameters:
      - allowEmptyValue: true
        description: The environment type to filter by
        example: DEV
        explode: true
        in: query
        name: environmentType
        required: false
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                subscriptionUsers:
                - email: abc@gmail.com
                  name: John Doe
                  roleType: reader
                  userId: user-abcd1234
              schema:
                $ref: '#/components/schemas/ListAllSubscriptionUsersResult'
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list all subscription\
            \ users"
      security:
      - api_key_header_Authorization: []
      summary: ListAllSubscriptionUsers consumption-user-api
      tags:
      - consumption-user-api
  /2022-09-01-00/resource-instance/subscription/{subscriptionId}/invite-user:
    post:
      operationId: consumption-user-api#InviteUser
      parameters:
      - description: The subscription ID
        example: sub-abcd1234
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              roleType: reader
            schema:
              $ref: '#/components/schemas/InviteConsumptionUserRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to invite user"
      security:
      - api_key_header_Authorization: []
      summary: InviteUser consumption-user-api
      tags:
      - consumption-user-api
  /2022-09-01-00/resource-instance/subscription/{subscriptionId}/revoke-user-role:
    delete:
      operationId: consumption-user-api#RevokeUserRole
      parameters:
      - description: The subscription ID
        example: sub-abcd1234
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              roleType: reader
            schema:
              $ref: '#/components/schemas/RevokeConsumptionUserRoleRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete user"
      security:
      - api_key_header_Authorization: []
      summary: RevokeUserRole consumption-user-api
      tags:
      - consumption-user-api
  /2022-09-01-00/resource-instance/subscription/{subscriptionId}/subscription-users:
    get:
      operationId: consumption-user-api#DescribeUsersBySubscription
      parameters:
      - description: The subscription ID
        example: sub-abcd1234
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Id: sub-abcd1234
                subscriptionUsers:
                - email: abc@gmail.com
                  name: John Doe
                  roleType: reader
                  subscriptionId: sub-abcd1234
                  userId: user-abcd1234
              schema:
                $ref: '#/components/schemas/DescribeUsersBySubscriptionResult'
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: DescribeUsersBySubscription consumption-user-api
      tags:
      - consumption-user-api
  /2022-09-01-00/resource-instance/usage:
    get:
      operationId: consumption-usage-api#GetCurrentConsumptionUsage
      parameters:
      - allowEmptyValue: true
        description: The subscription ID to get usage for
        example: sub-12345678
        explode: true
        in: query
        name: subscriptionID
        required: false
        schema:
          description: ID of a Subscription
          example: Quibusdam eveniet.
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                endTime: 2021-01-01T00:00:00.000Z
                startTime: 2021-01-01T00:00:00.000Z
                usage:
                - dimension: core/hours
                  endTime: 2021-01-01T00:00:00.000Z
                  startTime: 2021-01-01T00:00:00.000Z
                  total: 0.67
              schema:
                $ref: '#/components/schemas/GetConsumptionUsageResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: GetCurrentConsumptionUsage consumption-usage-api
      tags:
      - consumption-usage-api
  /2022-09-01-00/resource-instance/usage-per-day:
    get:
      operationId: consumption-usage-api#GetConsumptionUsagePerDay
      parameters:
      - allowEmptyValue: true
        description: Start date of the usage report
        example: 2023-01-01T10:00:00Z
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: End date of the usage report
        example: 2024-01-01T10:00:00Z
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: The subscription ID to get usage for
        example: sub-12345678
        explode: true
        in: query
        name: subscriptionID
        required: false
        schema:
          description: ID of a Subscription
          example: Aut at est.
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                endTime: 2021-01-01T00:00:00.000Z
                startTime: 2021-01-01T00:00:00.000Z
                usage:
                - dimension: core/hours
                  endTime: 2021-01-01T00:00:00.000Z
                  startTime: 2021-01-01T00:00:00.000Z
                  total: 0.67
              schema:
                $ref: '#/components/schemas/GetConsumptionUsageResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get usage"
      security:
      - api_key_header_Authorization: []
      summary: GetConsumptionUsagePerDay consumption-usage-api
      tags:
      - consumption-usage-api
  /2022-09-01-00/resource-instance/user/{id}/billing-details:
    get:
      operationId: consumption-user-api#DescribeUserBillingDetails
      parameters:
      - example: user-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a User
          example: Velit molestiae sunt voluptatem sint nihil labore.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                billingEmbedURL: DEPRECATED
                name: John Dae
                paymentConfigured: true
                paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
                userId: user-abcd1234
              schema:
                $ref: '#/components/schemas/DescribeConsumptionUserBillingDetailsResult'
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: DescribeUserBillingDetails consumption-user-api
      tags:
      - consumption-user-api
  /2022-09-01-00/resource-instance/user/signin:
    post:
      operationId: consumption-user-api#Signin
      responses:
        "200":
          content:
            application/json:
              example:
                token: pc
              schema:
                $ref: '#/components/schemas/ConsumptionServiceAuthResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to signin"
      security:
      - basic_header_Authorization: []
      summary: Signin consumption-user-api
      tags:
      - consumption-user-api
  /2022-09-01-00/resource-instance/version:
    get:
      description: Consumption service version endpoint
      operationId: global-api#consumptionServiceVersion
      responses:
        "200":
          content:
            application/json:
              example:
                apiVersion: ng
                buildCommitSHA: 1234567890abcdef1234567890abcdef12345678
                buildTimestamp: 2020-01-01T00:00:00Z
              schema:
                $ref: '#/components/schemas/OmnistrateServiceVersionResult'
          description: OK response.
      summary: consumptionServiceVersion global-api
      tags:
      - global-api
  /2022-09-01-00/revoke-user-role:
    delete:
      operationId: users-api#RevokeUserRole
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              roleType: reader
            schema:
              $ref: '#/components/schemas/RevokeUserRoleRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete user"
      security:
      - api_key_header_Authorization: []
      summary: RevokeUserRole users-api
      tags:
      - users-api
  /2022-09-01-00/saas-portal:
    get:
      operationId: saas-portal-api#ListSaaSPortals
      responses:
        "200":
          content:
            application/json:
              example:
                saasPortals:
                - customDomain: mycustomdomain.com
                  customDomainStatus: READY
                  detailedNetworkTopology:
                    r-abcd1234:
                      allowedIPRanges:
                      - 0.0.0.0/0
                      clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      clusterPorts:
                      - 3306
                      main: true
                      networkingType: PUBLIC
                      nodes:
                      - availabilityZone: us-east-2a
                        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        healthStatus: healthy
                        id: primary-0
                        ports:
                        - 3306
                        status: RUNNING
                      privateNetworkCIDR: 10.0.0.2/24
                      privateNetworkID: n-1234abcd
                      publiclyAccessible: true
                      resourceKey: saasportal
                      resourceName: SaaS Portal
                  disablePasswordLogin: false
                  emailConfig:
                    smtpFromEmail: example@gmail.com
                    smtpHost: smtp.gmail.com
                    smtpPassword: password
                    smtpPort: 587
                    smtpUsername: username
                  endpoint: https://saas-portal.example.com
                  environmentType: DEV
                  googleAnalyticsTagID: G-123456789
                  imageConfig:
                    imageName: myimage
                    imageRegistry: ghcr.io
                    imageTag: latest
                  status: READY
                - customDomain: mycustomdomain.com
                  customDomainStatus: READY
                  detailedNetworkTopology:
                    r-abcd1234:
                      allowedIPRanges:
                      - 0.0.0.0/0
                      clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      clusterPorts:
                      - 3306
                      main: true
                      networkingType: PUBLIC
                      nodes:
                      - availabilityZone: us-east-2a
                        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        healthStatus: healthy
                        id: primary-0
                        ports:
                        - 3306
                        status: RUNNING
                      privateNetworkCIDR: 10.0.0.2/24
                      privateNetworkID: n-1234abcd
                      publiclyAccessible: true
                      resourceKey: saasportal
                      resourceName: SaaS Portal
                  disablePasswordLogin: false
                  emailConfig:
                    smtpFromEmail: example@gmail.com
                    smtpHost: smtp.gmail.com
                    smtpPassword: password
                    smtpPort: 587
                    smtpUsername: username
                  endpoint: https://saas-portal.example.com
                  environmentType: DEV
                  googleAnalyticsTagID: G-123456789
                  imageConfig:
                    imageName: myimage
                    imageRegistry: ghcr.io
                    imageTag: latest
                  status: READY
                - customDomain: mycustomdomain.com
                  customDomainStatus: READY
                  detailedNetworkTopology:
                    r-abcd1234:
                      allowedIPRanges:
                      - 0.0.0.0/0
                      clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      clusterPorts:
                      - 3306
                      main: true
                      networkingType: PUBLIC
                      nodes:
                      - availabilityZone: us-east-2a
                        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        healthStatus: healthy
                        id: primary-0
                        ports:
                        - 3306
                        status: RUNNING
                      privateNetworkCIDR: 10.0.0.2/24
                      privateNetworkID: n-1234abcd
                      publiclyAccessible: true
                      resourceKey: saasportal
                      resourceName: SaaS Portal
                  disablePasswordLogin: false
                  emailConfig:
                    smtpFromEmail: example@gmail.com
                    smtpHost: smtp.gmail.com
                    smtpPassword: password
                    smtpPort: 587
                    smtpUsername: username
                  endpoint: https://saas-portal.example.com
                  environmentType: DEV
                  googleAnalyticsTagID: G-123456789
                  imageConfig:
                    imageName: myimage
                    imageRegistry: ghcr.io
                    imageTag: latest
                  status: READY
                - customDomain: mycustomdomain.com
                  customDomainStatus: READY
                  detailedNetworkTopology:
                    r-abcd1234:
                      allowedIPRanges:
                      - 0.0.0.0/0
                      clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      clusterPorts:
                      - 3306
                      main: true
                      networkingType: PUBLIC
                      nodes:
                      - availabilityZone: us-east-2a
                        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        healthStatus: healthy
                        id: primary-0
                        ports:
                        - 3306
                        status: RUNNING
                      privateNetworkCIDR: 10.0.0.2/24
                      privateNetworkID: n-1234abcd
                      publiclyAccessible: true
                      resourceKey: saasportal
                      resourceName: SaaS Portal
                  disablePasswordLogin: false
                  emailConfig:
                    smtpFromEmail: example@gmail.com
                    smtpHost: smtp.gmail.com
                    smtpPassword: password
                    smtpPort: 587
                    smtpUsername: username
                  endpoint: https://saas-portal.example.com
                  environmentType: DEV
                  googleAnalyticsTagID: G-123456789
                  imageConfig:
                    imageName: myimage
                    imageRegistry: ghcr.io
                    imageTag: latest
                  status: READY
              schema:
                $ref: '#/components/schemas/ListSaaSPortalsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list saas portals"
      security:
      - api_key_header_Authorization: []
      summary: ListSaaSPortals saas-portal-api
      tags:
      - saas-portal-api
  /2022-09-01-00/saas-portal-custom-domain:
    get:
      operationId: saas-portal-api#ListSaaSPortalCustomDomains
      responses:
        "200":
          content:
            application/json:
              example:
                customDomains:
                - clusterEndpoint: example.com
                  customDomain: mycustomdomain.com
                  description: My custom domain description
                  environmentType: DEV
                  name: MyCustomDomain
                  status: READY
                - clusterEndpoint: example.com
                  customDomain: mycustomdomain.com
                  description: My custom domain description
                  environmentType: DEV
                  name: MyCustomDomain
                  status: READY
                - clusterEndpoint: example.com
                  customDomain: mycustomdomain.com
                  description: My custom domain description
                  environmentType: DEV
                  name: MyCustomDomain
                  status: READY
              schema:
                $ref: '#/components/schemas/ListSaaSPortalCustomDomainsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list saas portal\
            \ custom domains"
      security:
      - api_key_header_Authorization: []
      summary: ListSaaSPortalCustomDomains saas-portal-api
      tags:
      - saas-portal-api
    post:
      operationId: saas-portal-api#CreateSaaSPortalCustomDomain
      requestBody:
        content:
          application/json:
            example:
              customDomain: mycustomdomain.com
              description: My custom domain description
              environmentType: DEV
              name: MyCustomDomain
            schema:
              $ref: '#/components/schemas/CreateSaaSPortalCustomDomainRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create saas portal\
            \ custom domain"
      security:
      - api_key_header_Authorization: []
      summary: CreateSaaSPortalCustomDomain saas-portal-api
      tags:
      - saas-portal-api
  /2022-09-01-00/saas-portal-custom-domain/{environmentType}:
    delete:
      operationId: saas-portal-api#DeleteSaaSPortalCustomDomain
      parameters:
      - description: The environment type for the custom domain
        example: DEV
        explode: false
        in: path
        name: environmentType
        required: true
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete saas portal\
            \ custom domains"
      security:
      - api_key_header_Authorization: []
      summary: DeleteSaaSPortalCustomDomain saas-portal-api
      tags:
      - saas-portal-api
    patch:
      operationId: saas-portal-api#UpdateSaaSPortalCustomDomain
      parameters:
      - description: The environment type for the saas portal custom domain to update
        example: DEV
        explode: false
        in: path
        name: environmentType
        required: true
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              customDomain: mycustomdomain.com
              description: My custom domain description
              name: MyCustomDomain
            schema:
              $ref: '#/components/schemas/UpdateSaaSPortalCustomDomainRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update saas portal\
            \ custom domain"
      security:
      - api_key_header_Authorization: []
      summary: UpdateSaaSPortalCustomDomain saas-portal-api
      tags:
      - saas-portal-api
  /2022-09-01-00/saas-portal/{environmentType}:
    patch:
      operationId: saas-portal-api#UpdateSaaSPortal
      parameters:
      - description: The environment type for the saas portal custom domain to update
        example: DEV
        explode: false
        in: path
        name: environmentType
        required: true
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              customDomain: mycustomdomain.com
              disablePasswordLogin: false
              emailConfig:
                smtpFromEmail: example@gmail.com
                smtpHost: smtp.gmail.com
                smtpPassword: password
                smtpPort: 587
                smtpUsername: username
              googleAnalyticsTagID: G-123456789
              imageConfig:
                imageName: myimage
                imageRegistry: ghcr.io
                imageTag: latest
            schema:
              $ref: '#/components/schemas/UpdateSaaSPortalRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update saas portal"
      security:
      - api_key_header_Authorization: []
      summary: UpdateSaaSPortal saas-portal-api
      tags:
      - saas-portal-api
  /2022-09-01-00/service:
    get:
      operationId: service-api#ListService
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - s-12345678
                - s-abcdefgh
                - s-1234efgh
                nextPageToken: next-token
                services:
                - createdAt: 2019-01-01T00:00:00Z
                  description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: s-12345678
                  key: mysql
                  name: MySQL multi-writer service
                  roleType: admin
                  serviceEnvironments:
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  serviceLogoURL: Iusto omnis est fugit nisi et.
                  serviceProviderID: sp-12345678
                  serviceProviderName: "Omnistrate, Inc."
                - createdAt: 2019-01-01T00:00:00Z
                  description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: s-12345678
                  key: mysql
                  name: MySQL multi-writer service
                  roleType: admin
                  serviceEnvironments:
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  serviceLogoURL: Iusto omnis est fugit nisi et.
                  serviceProviderID: sp-12345678
                  serviceProviderName: "Omnistrate, Inc."
                - createdAt: 2019-01-01T00:00:00Z
                  description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: s-12345678
                  key: mysql
                  name: MySQL multi-writer service
                  roleType: admin
                  serviceEnvironments:
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  serviceLogoURL: Iusto omnis est fugit nisi et.
                  serviceProviderID: sp-12345678
                  serviceProviderName: "Omnistrate, Inc."
                - createdAt: 2019-01-01T00:00:00Z
                  description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: s-12345678
                  key: mysql
                  name: MySQL multi-writer service
                  roleType: admin
                  serviceEnvironments:
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  - id: se-12345678
                    name: dev
                    promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                    saasPortalStatus: READY
                    saasPortalUrl: https://saas-portal.example.com
                    servicePlans:
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    - description: A Basic product tier
                      modelType: CUSTOMER_HOSTED
                      name: Basic
                      productTierID: pt-12345678
                      tierType: OMNISTRATE_DEDICATED_TENANCY
                    sourceEnvironmentID: se-12345678
                    sourceEnvironmentName: dev
                    type: DEV
                    visibility: private
                  serviceLogoURL: Iusto omnis est fugit nisi et.
                  serviceProviderID: sp-12345678
                  serviceProviderName: "Omnistrate, Inc."
              schema:
                $ref: '#/components/schemas/ListServiceResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list services"
      security:
      - api_key_header_Authorization: []
      summary: ListService service-api
      tags:
      - service-api
    post:
      operationId: service-api#CreateService
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              name: MySQL multi-writer service
              serviceLogoURL: http://wiegand.name/avis_volkman
            schema:
              $ref: '#/components/schemas/CreateServiceRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: s-12345678
              schema:
                description: Service ID created
                example: s-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a service"
      security:
      - api_key_header_Authorization: []
      summary: CreateService service-api
      tags:
      - service-api
  /2022-09-01-00/service-offering:
    get:
      operationId: service-offering-api#ListServiceOffering
      parameters:
      - allowEmptyValue: true
        description: Org Id
        example: org-12345678
        explode: true
        in: query
        name: orgId
        required: false
        schema:
          description: ID of an Org
          example: Laudantium nobis ut et ut voluptatem.
          type: string
        style: form
      - allowEmptyValue: true
        description: The visibility of service offering
        example: PRIVATE
        explode: true
        in: query
        name: visibility
        required: false
        schema:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
        style: form
      - allowEmptyValue: true
        description: The environment type to filter by
        example: DEV
        explode: true
        in: query
        name: environmentType
        required: false
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                nextPageToken: next-token
                serviceIds:
                - s-12345678
                - s-abcdefgh
                services:
                - createdAt: 2019-01-01T00:00:00Z
                  isDeprecated: false
                  offerings:
                  - allowCreatesWhenPaymentNotConfigured: true
                    assets:
                      cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                      cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
                    maxNumberOfInstances: 4
                    productTierName: Premium
                    productTierURLKey: premium
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-12345678
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PRIVATE
                    serviceModelName: Bring Your Own Account
                    serviceModelURLKey: byoa
                  - productTierName: Basic
                    productTierURLKey: basic
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-abcdefgh
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PUBLIC
                    serviceModelName: Hosted
                    serviceModelURLKey: hosted
                  serviceDescription: MySQL is a relational database
                  serviceId: s-12345678
                  serviceName: MySQL
                  serviceOrgId: org-12345678
                  serviceProviderId: sp-9zrg9W8Are
                  serviceProviderName: "Omnistrate, Inc."
                  serviceURLKey: mysql
                - createdAt: 2019-01-01T00:00:00Z
                  isDeprecated: false
                  offerings:
                  - allowCreatesWhenPaymentNotConfigured: true
                    assets:
                      cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                      cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
                    maxNumberOfInstances: 4
                    productTierName: Premium
                    productTierURLKey: premium
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-12345678
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PRIVATE
                    serviceModelName: Bring Your Own Account
                    serviceModelURLKey: byoa
                  - productTierName: Basic
                    productTierURLKey: basic
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-abcdefgh
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PUBLIC
                    serviceModelName: Hosted
                    serviceModelURLKey: hosted
                  serviceDescription: MySQL is a relational database
                  serviceId: s-12345678
                  serviceName: MySQL
                  serviceOrgId: org-12345678
                  serviceProviderId: sp-9zrg9W8Are
                  serviceProviderName: "Omnistrate, Inc."
                  serviceURLKey: mysql
                - createdAt: 2019-01-01T00:00:00Z
                  isDeprecated: false
                  offerings:
                  - allowCreatesWhenPaymentNotConfigured: true
                    assets:
                      cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                      cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
                    maxNumberOfInstances: 4
                    productTierName: Premium
                    productTierURLKey: premium
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-12345678
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PRIVATE
                    serviceModelName: Bring Your Own Account
                    serviceModelURLKey: byoa
                  - productTierName: Basic
                    productTierURLKey: basic
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-abcdefgh
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PUBLIC
                    serviceModelName: Hosted
                    serviceModelURLKey: hosted
                  serviceDescription: MySQL is a relational database
                  serviceId: s-12345678
                  serviceName: MySQL
                  serviceOrgId: org-12345678
                  serviceProviderId: sp-9zrg9W8Are
                  serviceProviderName: "Omnistrate, Inc."
                  serviceURLKey: mysql
              schema:
                $ref: '#/components/schemas/ListServiceOfferingsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list service offerings"
      security:
      - api_key_header_Authorization: []
      summary: ListServiceOffering service-offering-api
      tags:
      - service-offering-api
  /2022-09-01-00/service-offering/{serviceId}:
    get:
      operationId: service-offering-api#DescribeServiceOffering
      parameters:
      - allowEmptyValue: true
        description: The visibility of service offering
        example: PRIVATE
        explode: true
        in: query
        name: visibility
        required: false
        schema:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
        style: form
      - allowEmptyValue: true
        description: The environment type to filter by
        example: DEV
        explode: true
        in: query
        name: environmentType
        required: false
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                createdAt: 2019-01-01T00:00:00Z
                isDeprecated: false
                offerings:
                - allowCreatesWhenPaymentNotConfigured: true
                  assets:
                    cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                    cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
                  maxNumberOfInstances: 4
                  productTierName: Premium
                  productTierURLKey: premium
                  resourceParameters:
                  - name: MySQL
                    urlKey: mysql
                  - name: Redis
                    urlKey: redis
                  serviceAPIID: sa-12345678
                  serviceAPIVersion: v1
                  serviceEnvironmentName: Production
                  serviceEnvironmentURLKey: prod
                  serviceEnvironmentVisibility: PRIVATE
                  serviceModelName: Bring Your Own Account
                  serviceModelURLKey: byoa
                - productTierName: Basic
                  productTierURLKey: basic
                  resourceParameters:
                  - name: MySQL
                    urlKey: mysql
                  - name: Redis
                    urlKey: redis
                  serviceAPIID: sa-abcdefgh
                  serviceAPIVersion: v1
                  serviceEnvironmentName: Production
                  serviceEnvironmentURLKey: prod
                  serviceEnvironmentVisibility: PUBLIC
                  serviceModelName: Hosted
                  serviceModelURLKey: hosted
                serviceDescription: MySQL is a relational database
                serviceId: s-12345678
                serviceName: MySQL
                serviceOrgId: org-12345678
                serviceProviderId: sp-9zrg9W8Are
                serviceProviderName: "Omnistrate, Inc."
                serviceURLKey: mysql
              schema:
                $ref: '#/components/schemas/DescribeServiceOfferingResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a service\
            \ offering"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceOffering service-offering-api
      tags:
      - service-offering-api
  /2022-09-01-00/service-offering/{serviceId}/resource/{resourceId}/instance/{instanceId}:
    get:
      operationId: service-offering-api#DescribeServiceOfferingResource
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The resource ID
        example: r-12345678
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          description: ID of a resource
          example: Quam quaerat quasi voluptatibus.
          type: string
        style: simple
      - description: The instance ID
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          default: none
          description: The instance ID
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                apis:
                - inputParameters:
                  - defaultValue: null
                    description: The name of the server
                    displayName: Server Name
                    isList: false
                    key: serverName
                    modifiable: true
                    options: null
                    required: true
                    type: string
                  - defaultValue: option1
                    description: The type of the server
                    displayName: Server Type
                    isList: false
                    key: serverType
                    modifiable: true
                    options:
                    - option1
                    - option2
                    required: true
                    type: string
                  outputParameters:
                  - description: The name of the server
                    displayName: Server Name
                    isList: false
                    key: serverName
                    type: string
                  - description: The type of the server
                    displayName: Server Type
                    isList: false
                    key: serverType
                    type: string
                  verb: create
                - inputParameters:
                  - defaultValue: null
                    description: The name of the server
                    displayName: Server Name
                    isList: false
                    key: serverName
                    modifiable: true
                    options: null
                    required: true
                    type: string
                  outputParameters:
                  - description: The name of the server
                    displayName: Server Name
                    isList: false
                    key: serverName
                    type: string
                  - description: The type of the server
                    displayName: Server Type
                    isList: false
                    key: serverType
                    type: string
                  verb: describe
              schema:
                $ref: '#/components/schemas/DescribeServiceOfferingResourceResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a service\
            \ offering resource"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceOfferingResource service-offering-api
      tags:
      - service-offering-api
  /2022-09-01-00/service/{id}:
    delete:
      operationId: service-api#DeleteService
      parameters:
      - description: The service ID to operate on
        example: s-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a service"
      security:
      - api_key_header_Authorization: []
      summary: DeleteService service-api
      tags:
      - service-api
    get:
      operationId: service-api#DescribeService
      parameters:
      - description: The service ID to operate on
        example: s-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                createdAt: 2019-01-01T00:00:00Z
                description: A MySQL SaaS specializing in multi-writer clusters for
                  high availability
                id: s-12345678
                key: mysql
                name: MySQL multi-writer service
                roleType: admin
                serviceEnvironments:
                - id: se-12345678
                  name: dev
                  promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  saasPortalStatus: READY
                  saasPortalUrl: https://saas-portal.example.com
                  servicePlans:
                  - description: A Basic product tier
                    modelType: CUSTOMER_HOSTED
                    name: Basic
                    productTierID: pt-12345678
                    tierType: OMNISTRATE_DEDICATED_TENANCY
                  - description: A Basic product tier
                    modelType: CUSTOMER_HOSTED
                    name: Basic
                    productTierID: pt-12345678
                    tierType: OMNISTRATE_DEDICATED_TENANCY
                  sourceEnvironmentID: se-12345678
                  sourceEnvironmentName: dev
                  type: DEV
                  visibility: private
                - id: se-12345678
                  name: dev
                  promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  saasPortalStatus: READY
                  saasPortalUrl: https://saas-portal.example.com
                  servicePlans:
                  - description: A Basic product tier
                    modelType: CUSTOMER_HOSTED
                    name: Basic
                    productTierID: pt-12345678
                    tierType: OMNISTRATE_DEDICATED_TENANCY
                  - description: A Basic product tier
                    modelType: CUSTOMER_HOSTED
                    name: Basic
                    productTierID: pt-12345678
                    tierType: OMNISTRATE_DEDICATED_TENANCY
                  sourceEnvironmentID: se-12345678
                  sourceEnvironmentName: dev
                  type: DEV
                  visibility: private
                - id: se-12345678
                  name: dev
                  promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  saasPortalStatus: READY
                  saasPortalUrl: https://saas-portal.example.com
                  servicePlans:
                  - description: A Basic product tier
                    modelType: CUSTOMER_HOSTED
                    name: Basic
                    productTierID: pt-12345678
                    tierType: OMNISTRATE_DEDICATED_TENANCY
                  - description: A Basic product tier
                    modelType: CUSTOMER_HOSTED
                    name: Basic
                    productTierID: pt-12345678
                    tierType: OMNISTRATE_DEDICATED_TENANCY
                  sourceEnvironmentID: se-12345678
                  sourceEnvironmentName: dev
                  type: DEV
                  visibility: private
                serviceLogoURL: Consequuntur doloremque ullam esse perferendis est.
                serviceProviderID: sp-12345678
                serviceProviderName: "Omnistrate, Inc."
              schema:
                $ref: '#/components/schemas/DescribeServiceResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a service"
      security:
      - api_key_header_Authorization: []
      summary: DescribeService service-api
      tags:
      - service-api
    patch:
      operationId: service-api#UpdateService
      parameters:
      - description: The service ID to operate on
        example: s-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              name: MySQL multi-writer service
              serviceLogoURL: Veniam excepturi ex vel.
            schema:
              $ref: '#/components/schemas/UpdateServiceRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a service"
      security:
      - api_key_header_Authorization: []
      summary: UpdateService service-api
      tags:
      - service-api
  /2022-09-01-00/service/{id}/health:
    get:
      operationId: service-api#ServiceHealth
      parameters:
      - description: The ID of the service
        example: s-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                health: UP
                id: s-12345678
                report:
                  se-12345678:
                    sm-12345678:
                      vu-11111111: UNKNOWN
                      vu-12345678: UP
                      vu-87654321: DOWN
              schema:
                $ref: '#/components/schemas/ReportHealthResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get service health"
      security:
      - api_key_header_Authorization: []
      summary: ServiceHealth service-api
      tags:
      - service-api
  /2022-09-01-00/service/{serviceId}/compute-config:
    get:
      operationId: compute-config-api#ListComputeConfig
      parameters:
      - allowEmptyValue: true
        description: Is compute config managed by omnistrate
        example: false
        explode: true
        in: query
        name: managed
        required: false
        schema:
          description: Is compute config managed by omnistrate
          example: false
          type: boolean
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - cc-12345678
                - cc-abcdefgh
                - cc-1234efgh
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListComputeConfigsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list compute configs"
      security:
      - api_key_header_Authorization: []
      summary: ListComputeConfig compute-config-api
      tags:
      - compute-config-api
    post:
      operationId: compute-config-api#CreateComputeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              autoscalingPolicy:
                maxReplicas: 4
                minReplicas: 1
              cpuArchitecture: X86_64|ARM64
              description: my compute config description
              name: my compute config
              replicaCount: "3"
              resources:
                limits:
                  cpu: "1"
                  memory: 500Mi
                requests:
                  cpu: "0.5"
                  memory: 200Mi
              rootVolumeSizeGi: 10
              warmPoolConfiguration:
                minimumNodesInPool: 1
            schema:
              $ref: '#/components/schemas/CreateComputeConfigRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: cc-12345678
              schema:
                description: Compute Config ID created
                example: cc-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create compute\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateComputeConfig compute-config-api
      tags:
      - compute-config-api
  /2022-09-01-00/service/{serviceId}/compute-config/{id}:
    delete:
      operationId: compute-config-api#DeleteComputeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: ID of the compute config
        example: cc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Compute Config
          example: Qui molestiae velit dolores sed deserunt qui.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a compute\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteComputeConfig compute-config-api
      tags:
      - compute-config-api
    get:
      operationId: compute-config-api#DescribeComputeConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the compute config to describe. If not\
          \ specified, the latest version is described."
        example: Dicta assumenda repellendus consequuntur.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the compute config to describe. If\
            \ not specified, the latest version is described."
          example: Deleniti doloremque nam neque.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the compute config to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Consequatur est explicabo sit et ut recusandae.
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: ID of the compute config
        example: cc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Compute Config
          example: Nostrum aut.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                autoscalingPolicy:
                  maxReplicas: 4
                  minReplicas: 1
                computeInstanceTypeConfigOverrides:
                  aws:
                    t3.micro:
                      instanceLifeCycleType: Spot
                      rootVolumeSizeGi: 10
                      warmPoolConfiguration:
                        minimumNodesInPool: 1
                    t3.small:
                      instanceLifeCycleType: OnDemand
                      warmPoolConfiguration:
                        minimumNodesInPool: 2
                  azure:
                    Standard_B1ls:
                      rootVolumeSizeGi: 10
                      warmPoolConfiguration:
                        minimumNodesInPool: 1
                cpuArchitecture: X86_64|ARM64
                description: my compute config description
                id: cc-12345678
                infraConfigIDs:
                - ic-12345678
                - ic-abcdefgh
                instanceTypes:
                  aws:
                  - t3.micro
                  - t3.small
                  azure:
                  - Standard_B1ls
                  - Standard_B1ms
                  gcp:
                  - $var.instance_type
                name: my compute config
                replicaCount: "3"
                resources:
                  limits:
                    cpu: "1"
                    memory: 500Mi
                  requests:
                    cpu: "0.5"
                    memory: 200Mi
                rootVolumeSizeGi: 10
                serviceId: s-12345678
                warmPoolConfiguration:
                  minimumNodesInPool: 1
              schema:
                $ref: '#/components/schemas/DescribeComputeConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe compute\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeComputeConfig compute-config-api
      tags:
      - compute-config-api
    patch:
      operationId: compute-config-api#UpdateComputeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: ID of the compute config
        example: cc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Compute Config
          example: Ut est quasi.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              autoscalingPolicy:
                maxReplicas: 4
                minReplicas: 1
              cpuArchitecture: X86_64|ARM64
              description: my compute config description
              name: my compute config
              replicaCount: "3"
              resources:
                limits:
                  cpu: "1"
                  memory: 500Mi
                requests:
                  cpu: "0.5"
                  memory: 200Mi
              rootVolumeSizeGi: 10
              warmPoolConfiguration:
                minimumNodesInPool: 1
            schema:
              $ref: '#/components/schemas/UpdateComputeConfigRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update compute\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateComputeConfig compute-config-api
      tags:
      - compute-config-api
  /2022-09-01-00/service/{serviceId}/compute-config/{id}/instance-type:
    delete:
      operationId: compute-config-api#RemoveComputeInstanceType
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: ID of the compute config
        example: cc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Compute Config
          example: Enim velit nobis molestias culpa.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              cloudProviderName: aws
              instanceType: t3.micro
            schema:
              $ref: '#/components/schemas/RemoveComputeInstanceTypeRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to remove compute\
            \ instance type"
      security:
      - api_key_header_Authorization: []
      summary: RemoveComputeInstanceType compute-config-api
      tags:
      - compute-config-api
    post:
      operationId: compute-config-api#AddComputeInstanceType
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: ID of the compute config
        example: cc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Compute Config
          example: Non quibusdam doloremque.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              cloudProviderName: aws
              configOverride:
                instanceLifeCycleType: Spot
                rootVolumeSizeGi: 10
                warmPoolConfiguration:
                  minimumNodesInPool: 1
              instanceType: t3.micro
            schema:
              $ref: '#/components/schemas/AddComputeInstanceTypeRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to add compute instance\
            \ type"
      security:
      - api_key_header_Authorization: []
      summary: AddComputeInstanceType compute-config-api
      tags:
      - compute-config-api
  /2022-09-01-00/service/{serviceId}/compute-config/cloud-provider/{cloudProviderName}/instance-types:
    get:
      operationId: compute-config-api#ListComputeInstanceTypes
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The cloud provider for this compute instance type config
        example: aws
        explode: false
        in: path
        name: cloudProviderName
        required: true
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                nextPageToken: next-token
                types:
                - m5.xlarge
                - c5.xlarge
                - r5.xlarge
              schema:
                $ref: '#/components/schemas/ListComputeInstanceTypesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list compute instance\
            \ types"
      security:
      - api_key_header_Authorization: []
      summary: ListComputeInstanceTypes compute-config-api
      tags:
      - compute-config-api
  /2022-09-01-00/service/{serviceId}/environment:
    get:
      operationId: service-environment-api#ListServiceEnvironment
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - se-12345678
                - se-23456789
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceEnvironmentsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list service environments"
      security:
      - api_key_header_Authorization: []
      summary: ListServiceEnvironment service-environment-api
      tags:
      - service-environment-api
    post:
      operationId: service-environment-api#CreateServiceEnvironment
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              autoApproveSubscription: false
              deploymentConfigId: dc-12345678
              description: The production environment for the MySQL multi-writer service
              name: Production
              serviceAuthPublicKey: |
                -----BEGIN PUBLIC KEY-----
                MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
                7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
                -----END PUBLIC KEY-----
              sourceEnvironmentId: se-12345678
              type: DEV
              visibility: Qui facilis dolorem delectus est cumque.
            schema:
              $ref: '#/components/schemas/CreateServiceEnvironmentRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: se-12345678
              schema:
                description: Service Environment ID created
                example: se-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a service\
            \ environment"
      security:
      - api_key_header_Authorization: []
      summary: CreateServiceEnvironment service-environment-api
      tags:
      - service-environment-api
  /2022-09-01-00/service/{serviceId}/environment/{id}:
    delete:
      operationId: service-environment-api#DeleteServiceEnvironment
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the service environment
        example: se-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a service\
            \ environment"
      security:
      - api_key_header_Authorization: []
      summary: DeleteServiceEnvironment service-environment-api
      tags:
      - service-environment-api
    get:
      operationId: service-environment-api#DescribeServiceEnvironment
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the service environment
        example: se-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                autoApproveSubscription: false
                deploymentConfigId: dc-12345678
                description: The production environment for the MySQL multi-writer
                  service
                id: se-12345678
                key: production
                name: Production
                roleType: admin
                saasPortalStatus: READY
                saasPortalUrl: https://saas-portal.example.com
                serviceAuthPublicKey: |
                  -----BEGIN PUBLIC KEY-----
                  MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
                  7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
                  -----END PUBLIC KEY-----
                serviceId: s-12345678
                sourceEnvironmentId: se-12345678
                type: DEV
                visibility: Numquam non sit quia.
              schema:
                $ref: '#/components/schemas/DescribeServiceEnvironmentResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a service\
            \ environment"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceEnvironment service-environment-api
      tags:
      - service-environment-api
    patch:
      operationId: service-environment-api#UpdateServiceEnvironment
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the service environment
        example: se-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              autoApproveSubscription: false
              deploymentConfigId: dc-12345678
              description: The production environment for the MySQL multi-writer service
              name: Production
              serviceAuthPublicKey: |
                -----BEGIN PUBLIC KEY-----
                MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
                7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
                -----END PUBLIC KEY-----
              sourceEnvironmentId: se-12345678
              visibility: Explicabo non laboriosam deleniti quia soluta.
            schema:
              $ref: '#/components/schemas/UpdateServiceEnvironmentRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a service\
            \ environment"
      security:
      - api_key_header_Authorization: []
      summary: UpdateServiceEnvironment service-environment-api
      tags:
      - service-environment-api
  /2022-09-01-00/service/{serviceId}/environment/{id}/promote:
    get:
      operationId: service-environment-api#PromoteServiceEnvironmentStatus
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the service environment
        example: se-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                targetEnvironmentID: se-12345678
              - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                targetEnvironmentID: se-12345678
              - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                targetEnvironmentID: se-12345678
              - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                targetEnvironmentID: se-12345678
              schema:
                example:
                - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  targetEnvironmentID: se-12345678
                - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  targetEnvironmentID: se-12345678
                - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  targetEnvironmentID: se-12345678
                - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
                  targetEnvironmentID: se-12345678
                items:
                  $ref: '#/components/schemas/EnvironmentPromotionStatus'
                type: array
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get the status\
            \ of a service environment promotion"
      security:
      - api_key_header_Authorization: []
      summary: PromoteServiceEnvironmentStatus service-environment-api
      tags:
      - service-environment-api
    post:
      operationId: service-environment-api#PromoteServiceEnvironment
      parameters:
      - description: The ID of the service this environment belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the service environment
        example: se-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to promote a service\
            \ environment"
      security:
      - api_key_header_Authorization: []
      summary: PromoteServiceEnvironment service-environment-api
      tags:
      - service-environment-api
  /2022-09-01-00/service/{serviceId}/environment/{serviceEnvironmentId}/service-plan:
    get:
      operationId: service-plan-api#ListServicePlans
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Service environment ID
        example: se-12345678
        explode: false
        in: path
        name: serviceEnvironmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                nextPageToken: next-token
                servicePlans:
                - AutoApproveSubscription: false
                  accountConfigIds:
                  - ac-12345678
                  - ac-23456789
                  activeAccountConfigIds:
                    aws: ac-12345678
                    gcp: ac-23456789
                  apiVersion: v1
                  awsRegions:
                  - us-east-2
                  - ca-central-1
                  azureRegions:
                  - northcentralus
                  deploymentConfigId: dc-12345678
                  gcpRegions:
                  - us-central1
                  hasPendingChanges: true
                  isProductTierDisabled: true
                  latestMajorVersion: "3.0"
                  modelType: CUSTOMER_HOSTED
                  productTierDescription: A premium product tier
                  productTierDocumentation: Any documentation
                  productTierFeatures:
                    LOGS: true
                    METRICS: false
                  productTierId: pt-12345678
                  productTierKey: premium
                  productTierName: Premium
                  productTierPlanDescription: A premium plan
                  productTierPricing:
                    price1: value1
                  productTierSupport: Any support
                  serviceApiDescription: A MySQL SaaS API specializing in multi-writer
                    multi-tenant clusters for high availability
                  serviceApiId: sa-12345678
                  serviceEnvironmentId: se-12345678
                  serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
                    clusters for high availability
                  serviceModelFeatures:
                  - configuration:
                      Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                        voluptas facere.
                      Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                        sit expedita.
                      Soluta esse sit aut inventore.: Minima consectetur rerum eum
                        neque molestiae.
                    feature: Dolorem ea impedit est omnis officia qui.
                  - configuration:
                      Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                        voluptas facere.
                      Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                        sit expedita.
                      Soluta esse sit aut inventore.: Minima consectetur rerum eum
                        neque molestiae.
                    feature: Dolorem ea impedit est omnis officia qui.
                  - configuration:
                      Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                        voluptas facere.
                      Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                        sit expedita.
                      Soluta esse sit aut inventore.: Minima consectetur rerum eum
                        neque molestiae.
                    feature: Dolorem ea impedit est omnis officia qui.
                  - configuration:
                      Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                        voluptas facere.
                      Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                        sit expedita.
                      Soluta esse sit aut inventore.: Minima consectetur rerum eum
                        neque molestiae.
                    feature: Dolorem ea impedit est omnis officia qui.
                  serviceModelId: sm-12345678
                  serviceModelName: MySQL multi-writer service hosted model
                  tierType: OMNISTRATE_DEDICATED_TENANCY
                  versionSetStatus: Preferred|Active|Deprecated|Pending
                - AutoApproveSubscription: false
                  accountConfigIds:
                  - ac-12345678
                  - ac-23456789
                  activeAccountConfigIds:
                    aws: ac-12345678
                    gcp: ac-23456789
                  apiVersion: v1
                  awsRegions:
                  - us-east-2
                  - ca-central-1
                  azureRegions:
                  - northcentralus
                  deploymentConfigId: dc-12345678
                  gcpRegions:
                  - us-central1
                  hasPendingChanges: true
                  isProductTierDisabled: true
                  latestMajorVersion: "3.0"
                  modelType: CUSTOMER_HOSTED
                  productTierDescription: A premium product tier
                  productTierDocumentation: Any documentation
                  productTierFeatures:
                    LOGS: true
                    METRICS: false
                  productTierId: pt-12345678
                  productTierKey: premium
                  productTierName: Premium
                  productTierPlanDescription: A premium plan
                  productTierPricing:
                    price1: value1
                  productTierSupport: Any support
                  serviceApiDescription: A MySQL SaaS API specializing in multi-writer
                    multi-tenant clusters for high availability
                  serviceApiId: sa-12345678
                  serviceEnvironmentId: se-12345678
                  serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
                    clusters for high availability
                  serviceModelFeatures:
                  - configuration:
                      Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                        voluptas facere.
                      Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                        sit expedita.
                      Soluta esse sit aut inventore.: Minima consectetur rerum eum
                        neque molestiae.
                    feature: Dolorem ea impedit est omnis officia qui.
                  - configuration:
                      Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                        voluptas facere.
                      Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                        sit expedita.
                      Soluta esse sit aut inventore.: Minima consectetur rerum eum
                        neque molestiae.
                    feature: Dolorem ea impedit est omnis officia qui.
                  - configuration:
                      Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                        voluptas facere.
                      Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                        sit expedita.
                      Soluta esse sit aut inventore.: Minima consectetur rerum eum
                        neque molestiae.
                    feature: Dolorem ea impedit est omnis officia qui.
                  - configuration:
                      Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                        voluptas facere.
                      Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                        sit expedita.
                      Soluta esse sit aut inventore.: Minima consectetur rerum eum
                        neque molestiae.
                    feature: Dolorem ea impedit est omnis officia qui.
                  serviceModelId: sm-12345678
                  serviceModelName: MySQL multi-writer service hosted model
                  tierType: OMNISTRATE_DEDICATED_TENANCY
                  versionSetStatus: Preferred|Active|Deprecated|Pending
                - AutoApproveSubscription: false
                  accountConfigIds:
                  - ac-12345678
                  - ac-23456789
                  activeAccountConfigIds:
                    aws: ac-12345678
                    gcp: ac-23456789
                  apiVersion: v1
                  awsRegions:
                  - us-east-2
                  - ca-central-1
                  azureRegions:
                  - northcentralus
                  deploymentConfigId: dc-12345678
                  gcpRegions:
                  - us-central1
                  hasPendingChanges: true
                  isProductTierDisabled: true
                  latestMajorVersion: "3.0"
                  modelType: CUSTOMER_HOSTED
                  productTierDescription: A premium product tier
                  productTierDocumentation: Any documentation
                  productTierFeatures:
                    LOGS: true
                    METRICS: false
                  productTierId: pt-12345678
                  productTierKey: premium
                  productTierName: Premium
                  productTierPlanDescription: A premium plan
                  productTierPricing:
                    price1: value1
                  productTierSupport: Any support
                  serviceApiDescription: A MySQL SaaS API specializing in multi-writer
                    multi-tenant clusters for high availability
                  serviceApiId: sa-12345678
                  serviceEnvironmentId: se-12345678
                  serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
                    clusters for high availability
                  serviceModelFeatures:
                  - configuration:
                      Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                        voluptas facere.
                      Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                        sit expedita.
                      Soluta esse sit aut inventore.: Minima consectetur rerum eum
                        neque molestiae.
                    feature: Dolorem ea impedit est omnis officia qui.
                  - configuration:
                      Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                        voluptas facere.
                      Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                        sit expedita.
                      Soluta esse sit aut inventore.: Minima consectetur rerum eum
                        neque molestiae.
                    feature: Dolorem ea impedit est omnis officia qui.
                  - configuration:
                      Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                        voluptas facere.
                      Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                        sit expedita.
                      Soluta esse sit aut inventore.: Minima consectetur rerum eum
                        neque molestiae.
                    feature: Dolorem ea impedit est omnis officia qui.
                  - configuration:
                      Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                        voluptas facere.
                      Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                        sit expedita.
                      Soluta esse sit aut inventore.: Minima consectetur rerum eum
                        neque molestiae.
                    feature: Dolorem ea impedit est omnis officia qui.
                  serviceModelId: sm-12345678
                  serviceModelName: MySQL multi-writer service hosted model
                  tierType: OMNISTRATE_DEDICATED_TENANCY
                  versionSetStatus: Preferred|Active|Deprecated|Pending
                - AutoApproveSubscription: false
                  accountConfigIds:
                  - ac-12345678
                  - ac-23456789
                  activeAccountConfigIds:
                    aws: ac-12345678
                    gcp: ac-23456789
                  apiVersion: v1
                  awsRegions:
                  - us-east-2
                  - ca-central-1
                  azureRegions:
                  - northcentralus
                  deploymentConfigId: dc-12345678
                  gcpRegions:
                  - us-central1
                  hasPendingChanges: true
                  isProductTierDisabled: true
                  latestMajorVersion: "3.0"
                  modelType: CUSTOMER_HOSTED
                  productTierDescription: A premium product tier
                  productTierDocumentation: Any documentation
                  productTierFeatures:
                    LOGS: true
                    METRICS: false
                  productTierId: pt-12345678
                  productTierKey: premium
                  productTierName: Premium
                  productTierPlanDescription: A premium plan
                  productTierPricing:
                    price1: value1
                  productTierSupport: Any support
                  serviceApiDescription: A MySQL SaaS API specializing in multi-writer
                    multi-tenant clusters for high availability
                  serviceApiId: sa-12345678
                  serviceEnvironmentId: se-12345678
                  serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
                    clusters for high availability
                  serviceModelFeatures:
                  - configuration:
                      Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                        voluptas facere.
                      Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                        sit expedita.
                      Soluta esse sit aut inventore.: Minima consectetur rerum eum
                        neque molestiae.
                    feature: Dolorem ea impedit est omnis officia qui.
                  - configuration:
                      Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                        voluptas facere.
                      Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                        sit expedita.
                      Soluta esse sit aut inventore.: Minima consectetur rerum eum
                        neque molestiae.
                    feature: Dolorem ea impedit est omnis officia qui.
                  - configuration:
                      Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                        voluptas facere.
                      Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                        sit expedita.
                      Soluta esse sit aut inventore.: Minima consectetur rerum eum
                        neque molestiae.
                    feature: Dolorem ea impedit est omnis officia qui.
                  - configuration:
                      Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                        voluptas facere.
                      Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                        sit expedita.
                      Soluta esse sit aut inventore.: Minima consectetur rerum eum
                        neque molestiae.
                    feature: Dolorem ea impedit est omnis officia qui.
                  serviceModelId: sm-12345678
                  serviceModelName: MySQL multi-writer service hosted model
                  tierType: OMNISTRATE_DEDICATED_TENANCY
                  versionSetStatus: Preferred|Active|Deprecated|Pending
              schema:
                $ref: '#/components/schemas/ListServicePlansResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list product tiers"
      security:
      - api_key_header_Authorization: []
      summary: ListServicePlans service-plan-api
      tags:
      - service-plan-api
  /2022-09-01-00/service/{serviceId}/image-config:
    post:
      operationId: image-config-api#CreateImageConfig
      parameters:
      - description: The service ID to use for the infra
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              customImageCommandsAndArgs:
                args:
                - -d
                - mysql
                commands:
                - echo
                - "Hello, World!"
              description: A image configuration for my new entity
              imageName: mysql
              imageRegistryId: ir-12345678
              imageSignaturePublicKeyPEM: |
                -----BEGIN PUBLIC KEY-----
                MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
                7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
                -----END PUBLIC KEY-----
              imageTag: latest
              serviceEnvironmentId: se-12345678
            schema:
              $ref: '#/components/schemas/CreateImageConfigRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: imgc-12345678
              schema:
                description: Image Config ID created
                example: imgc-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create the image\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateImageConfig image-config-api
      tags:
      - image-config-api
  /2022-09-01-00/service/{serviceId}/image-config/{id}:
    delete:
      operationId: image-config-api#DeleteImageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The image configuration ID
        example: imgc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Config
          example: Sit odio ducimus.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete the image\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteImageConfig image-config-api
      tags:
      - image-config-api
    get:
      operationId: image-config-api#DescribeImageConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the image config to describe. If not\
          \ specified, the latest version is described."
        example: Inventore porro earum in cumque error.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the image config to describe. If not\
            \ specified, the latest version is described."
          example: Blanditiis voluptatem nihil aut.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the image config to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Rerum blanditiis voluptatum voluptatem.
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The image configuration ID
        example: imgc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Config
          example: Cum in quae.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                customImageCommandsAndArgs:
                  args:
                  - -d
                  - mysql
                  commands:
                  - echo
                  - "Hello, World!"
                description: An image configuration for my new entity
                id: imgc-12345678
                imageName: mysql
                imageRegistryId: ir-12345678
                imageSignaturePublicKeyPEM: |
                  -----BEGIN PUBLIC KEY-----
                  MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
                  7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
                  -----END PUBLIC KEY-----
                imageTag: v1
                serviceEnvironmentId: se-12345678
                serviceId: s-12345678
              schema:
                $ref: '#/components/schemas/DescribeImageConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe the image\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeImageConfig image-config-api
      tags:
      - image-config-api
    patch:
      operationId: image-config-api#UpdateImageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The image configuration ID
        example: imgc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Config
          example: Sunt quia consequatur velit.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              customImageCommandsAndArgs:
                args:
                - -d
                - mysql
                commands:
                - echo
                - "Hello, World!"
              description: An image configuration for my new entity
              imageName: mysql
              imageRegistryId: ir-12345678
              imageSignaturePublicKeyPEM: |
                -----BEGIN PUBLIC KEY-----
                MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
                7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
                -----END PUBLIC KEY-----
              imageTag: v1
            schema:
              $ref: '#/components/schemas/UpdateImageConfigRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update the image\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateImageConfig image-config-api
      tags:
      - image-config-api
  /2022-09-01-00/service/{serviceId}/image-config/{id}/release:
    post:
      operationId: image-config-api#ReleaseImageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The image configuration ID
        example: imgc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Config
          example: Et repudiandae voluptatem explicabo.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              productTierId: pt-12345678
            schema:
              $ref: '#/components/schemas/ReleaseImageConfigRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to release the image\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: ReleaseImageConfig image-config-api
      tags:
      - image-config-api
  /2022-09-01-00/service/{serviceId}/image-config/{id}/rollout:
    get:
      operationId: image-config-api#RolloutFleetImageStatus
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The image configuration ID
        example: imgc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Config
          example: Accusantium deleniti.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                status: IN_PROGRESS
              schema:
                $ref: '#/components/schemas/RolloutFleetImageStatusResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get the fleet\
            \ image rollout status"
      security:
      - api_key_header_Authorization: []
      summary: RolloutFleetImageStatus image-config-api
      tags:
      - image-config-api
    post:
      operationId: image-config-api#RolloutFleetImageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The image configuration ID
        example: imgc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Image Config
          example: Quidem consectetur quasi qui distinctio.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to rollout to the\
            \ fleet"
      security:
      - api_key_header_Authorization: []
      summary: RolloutFleetImageConfig image-config-api
      tags:
      - image-config-api
  /2022-09-01-00/service/{serviceId}/infra-config:
    post:
      operationId: infra-config-api#CreateInfraConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              computeConfigId: cc-12345678
              customTag:
                key: customKey
                value: customValue
              description: Infra config used for the base tier MySQL service
              name: MySQL Writer Infra Config
              networkConfigId: nc-12345678
              serviceEnvironmentId: se-12345678
              storageConfigId: sc-12345678
            schema:
              $ref: '#/components/schemas/CreateInfraConfigRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: ic-12345678
              schema:
                description: Infra Config ID created
                example: ic-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create an infra\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateInfraConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}:
    delete:
      operationId: infra-config-api#DeleteInfraConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Sed impedit.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete an infra\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteInfraConfig infra-config-api
      tags:
      - infra-config-api
    get:
      operationId: infra-config-api#DescribeInfraConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the infra config to describe. If not\
          \ specified, the latest version is described."
        example: Sit aut vel soluta id sit.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the infra config to describe. If not\
            \ specified, the latest version is described."
          example: Dolorem ut aliquid impedit voluptas deserunt.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the infra config to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Architecto maxime.
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Ea nam iusto et est nostrum.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                computeConfigId: cc-12345678
                customTag:
                  key: customKey
                  value: customValue
                description: Infra config used for the base tier MySQL service
                id: ic-12345678
                name: MySQL Writer Infra Config
                networkConfigId: nc-12345678
                serviceEnvironmentId: se-12345678
                serviceId: s-12345678
                storageConfigId: sc-12345678
              schema:
                $ref: '#/components/schemas/DescribeInfraConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an infra\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeInfraConfig infra-config-api
      tags:
      - infra-config-api
    patch:
      operationId: infra-config-api#UpdateInfraConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Commodi quia molestiae rem.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              computeConfigId: cc-12345678
              customTag:
                key: customKey
                value: customValue
              description: Infra config used for the base tier MySQL service
              name: MySQL Writer Infra Config
              networkConfigId: nc-12345678
              storageConfigId: sc-12345678
            schema:
              $ref: '#/components/schemas/UpdateInfraConfigRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update an infra\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateInfraConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/associated-resources:
    get:
      operationId: infra-config-api#ListAssociatedResources
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Est ipsam.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: ic-12345678
                resourceIds:
                - r-12345678
                - r-abcdefgh
                serviceId: s-12345678
              schema:
                $ref: '#/components/schemas/ListAssociatedResourcesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list associated\
            \ resources"
      security:
      - api_key_header_Authorization: []
      summary: ListAssociatedResources infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/compute-config:
    delete:
      operationId: infra-config-api#DetachComputeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Vel et quidem.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to detach a compute\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DetachComputeConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/network-config:
    delete:
      operationId: infra-config-api#DetachNetworkConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Eos consequuntur consectetur autem tempora.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to detach a network\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DetachNetworkConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/release:
    post:
      operationId: infra-config-api#ReleaseInfraConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Enim nostrum est enim non.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              productTierId: pt-12345678
            schema:
              $ref: '#/components/schemas/ReleaseInfraConfigRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to release an infra\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: ReleaseInfraConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/rollout:
    post:
      operationId: infra-config-api#RolloutFleetInfra
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Harum eum mollitia fuga corrupti aliquid.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to rollout to the\
            \ fleet"
      security:
      - api_key_header_Authorization: []
      summary: RolloutFleetInfra infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/rollout/status:
    get:
      operationId: infra-config-api#RolloutFleetInfraStatus
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Ipsum reiciendis.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                status: IN_PROGRESS
              schema:
                $ref: '#/components/schemas/RolloutFleetInfraStatusResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get the fleet\
            \ rollout infra status"
      security:
      - api_key_header_Authorization: []
      summary: RolloutFleetInfraStatus infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/infra-config/{id}/storage-config:
    delete:
      operationId: infra-config-api#DetachStorageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Infra Config ID to operate on
        example: ic-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Infra Config
          example: Qui eveniet saepe voluptas.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to detach a storage\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DetachStorageConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/input-parameter:
    post:
      operationId: input-parameter-api#CreateInputParameter
      parameters:
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              defaultValue: default value
              dependentResourceId: r-12345678
              description: Vitae dolores.
              hasOptions: true
              isList: false
              key: k
              labeledOptions:
                large: t3.xlarge
                medium: t3.large
                small: t3.medium
              limits:
                max: Aperiam saepe pariatur sed et sapiente.
                maxLength: Qui numquam cumque temporibus.
                min: Sit eos illo iusto omnis.
                minLength: Quis sunt.
              modifiable: false
              name: a7l
              options:
              - a
              - b
              - c
              - default value
              required: false
              resourceId: r-12345678
              type: Consequatur asperiores.
            schema:
              $ref: '#/components/schemas/CreateInputParameterRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: ip-12345678
              schema:
                description: Input Parameter ID created
                example: ip-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create an input\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: CreateInputParameter input-parameter-api
      tags:
      - input-parameter-api
  /2022-09-01-00/service/{serviceId}/input-parameter/{id}:
    delete:
      operationId: input-parameter-api#DeleteInputParameter
      parameters:
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: ID of the input parameter
        example: var-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Input Parameter
          example: Ea distinctio at reprehenderit dolorem.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete an input\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: DeleteInputParameter input-parameter-api
      tags:
      - input-parameter-api
    get:
      operationId: input-parameter-api#DescribeInputParameter
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the instance to describe. If not specified,\
          \ the latest version is described."
        example: Et quam et ut et.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the instance to describe. If not specified,\
            \ the latest version is described."
          example: Debitis id.
          type: string
        style: form
      - allowEmptyValue: true
        description: Product tier id of the instance to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Eum blanditiis animi.
          type: string
        style: form
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: ID of the input parameter
        example: var-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Input Parameter
          example: Dolores et.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                defaultValue: "true"
                dependentResourceId: r-12345678
                description: Blanditiis voluptas.
                hasOptions: false
                id: var-12345678
                isList: true
                key: "4"
                labeledOptions:
                  large: t3.xlarge
                  medium: t3.large
                  small: t3.medium
                limits:
                  max: Vero maxime nihil iure esse nostrum sit.
                  maxLength: Qui adipisci quisquam labore qui voluptatem occaecati.
                  min: Vero alias nam perferendis mollitia consequatur ex.
                  minLength: Ab molestiae.
                modifiable: false
                name: o1
                options:
                - "true"
                - "false"
                required: false
                resourceId: r-12345678
                serviceId: s-12345678
                type: Est saepe velit voluptas.
              schema:
                $ref: '#/components/schemas/DescribeInputParameterResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an input\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: DescribeInputParameter input-parameter-api
      tags:
      - input-parameter-api
    patch:
      operationId: input-parameter-api#UpdateInputParameter
      parameters:
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: ID of the input parameter
        example: var-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Input Parameter
          example: Velit iusto quod in.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              defaultValue: "[\"1\", \"2.8\", \"3\"]"
              description: Mollitia eveniet quaerat.
              hasOptions: false
              labeledOptions:
                large: t3.xlarge
                medium: t3.large
                small: t3.medium
              limits:
                max: Aperiam saepe pariatur sed et sapiente.
                maxLength: Qui numquam cumque temporibus.
                min: Sit eos illo iusto omnis.
                minLength: Quis sunt.
              modifiable: false
              name: "9"
              options:
              - "[\"1\", \"2.8\", \"3\"]"
              - "[\"3.4\", \"4.5\"]"
              required: true
            schema:
              $ref: '#/components/schemas/UpdateInputParameterRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update an input\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: UpdateInputParameter input-parameter-api
      tags:
      - input-parameter-api
  /2022-09-01-00/service/{serviceId}/model:
    post:
      operationId: service-model-api#CreateServiceModel
      parameters:
      - description: The service this model is for
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              accountConfigIds:
              - ac-12345678
              - ac-23456789
              description: A MySQL Hosted SaaS specializing in multi-writer clusters
                for high availability
              features:
              - configuration:
                  Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum
                    eum ab.
                  Nulla consequatur facilis magnam.: Quisquam voluptas.
                  Sed aliquam ut eos ullam.: Fuga aut optio.
                feature: Voluptatum est suscipit.
              - configuration:
                  Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum
                    eum ab.
                  Nulla consequatur facilis magnam.: Quisquam voluptas.
                  Sed aliquam ut eos ullam.: Fuga aut optio.
                feature: Voluptatum est suscipit.
              - configuration:
                  Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum
                    eum ab.
                  Nulla consequatur facilis magnam.: Quisquam voluptas.
                  Sed aliquam ut eos ullam.: Fuga aut optio.
                feature: Voluptatum est suscipit.
              modelType: CUSTOMER_HOSTED
              name: MySQL multi-writer service hosted model
              serviceApiId: sa-12345678
            schema:
              $ref: '#/components/schemas/CreateServiceModelRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: sm-12345678
              schema:
                description: Service Model ID created
                example: sm-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a service\
            \ model"
      security:
      - api_key_header_Authorization: []
      summary: CreateServiceModel service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/model/{id}:
    delete:
      operationId: service-model-api#DeleteServiceModel
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Aut porro in vero autem.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a service\
            \ model"
      security:
      - api_key_header_Authorization: []
      summary: DeleteServiceModel service-model-api
      tags:
      - service-model-api
    get:
      operationId: service-model-api#DescribeServiceModel
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Necessitatibus incidunt cum ut.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                accountConfigIds:
                - ac-12345678
                - ac-23456789
                activeAccountConfigIds:
                  aws: ac-12345678
                  gcp: ac-23456789
                description: A MySQL Hosted SaaS specializing in multi-writer clusters
                  for high availability
                features:
                - configuration:
                    Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                      voluptas facere.
                    Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                      sit expedita.
                    Soluta esse sit aut inventore.: Minima consectetur rerum eum neque
                      molestiae.
                  feature: Dolorem ea impedit est omnis officia qui.
                - configuration:
                    Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                      voluptas facere.
                    Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                      sit expedita.
                    Soluta esse sit aut inventore.: Minima consectetur rerum eum neque
                      molestiae.
                  feature: Dolorem ea impedit est omnis officia qui.
                - configuration:
                    Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                      voluptas facere.
                    Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                      sit expedita.
                    Soluta esse sit aut inventore.: Minima consectetur rerum eum neque
                      molestiae.
                  feature: Dolorem ea impedit est omnis officia qui.
                id: sm-12345678
                key: mysql-multi-writer-service-hosted-model
                modelType: CUSTOMER_HOSTED
                name: MySQL multi-writer service hosted model
                productTiers:
                - pt-12345678
                - pt-87654321
                serviceApiId: sa-12345678
                serviceId: s-12345678
              schema:
                $ref: '#/components/schemas/DescribeServiceModelResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a service\
            \ model"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceModel service-model-api
      tags:
      - service-model-api
    patch:
      operationId: service-model-api#UpdateServiceModel
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Id et laborum reiciendis.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL Hosted SaaS specializing in multi-writer clusters
                for high availability
              name: MySQL multi-writer service hosted model
            schema:
              $ref: '#/components/schemas/UpdateServiceModelRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a service\
            \ model"
      security:
      - api_key_header_Authorization: []
      summary: UpdateServiceModel service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/model/{id}/account-config:
    delete:
      operationId: service-model-api#RemoveAccountConfigFromServiceModel
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Quod sint alias molestiae fugiat consequuntur itaque.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              accountConfigId: ac-12345678
            schema:
              $ref: '#/components/schemas/RemoveAccountConfigFromServiceModelRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to remove an account\
            \ config from a service model"
      security:
      - api_key_header_Authorization: []
      summary: RemoveAccountConfigFromServiceModel service-model-api
      tags:
      - service-model-api
    post:
      operationId: service-model-api#AddAccountConfigToServiceModel
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Corporis qui sapiente repellendus excepturi.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              accountConfigId: ac-12345678
            schema:
              $ref: '#/components/schemas/AddAccountConfigToServiceModelRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to add an account\
            \ config to a service model"
      security:
      - api_key_header_Authorization: []
      summary: AddAccountConfigToServiceModel service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/model/{id}/account-config/{accountConfigId}/active:
    post:
      operationId: service-model-api#SetActiveAccountConfig
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Ipsam quo fugiat.
          type: string
        style: simple
      - description: The infrastructure account configuration ID
        example: ac-12345678
        explode: false
        in: path
        name: accountConfigId
        required: true
        schema:
          description: ID of an Account Config
          example: Aliquid non id aspernatur mollitia neque.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to set the active\
            \ account config"
      security:
      - api_key_header_Authorization: []
      summary: SetActiveAccountConfig service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/model/{id}/feature:
    delete:
      operationId: service-model-api#DisableServiceModelFeature
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Exercitationem debitis nemo corporis est.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              feature: Praesentium facilis doloribus eius sit velit.
            schema:
              $ref: '#/components/schemas/DisableServiceModelFeatureRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when the service model feature\
            \ could not be disabled"
      security:
      - api_key_header_Authorization: []
      summary: DisableServiceModelFeature service-model-api
      tags:
      - service-model-api
    put:
      operationId: service-model-api#EnableServiceModelFeature
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Aut sed dolores qui.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              configuration:
                Magni consequatur.: In voluptate.
                Mollitia asperiores exercitationem accusantium perspiciatis.: Qui
                  distinctio excepturi consectetur et a.
                Qui est eaque ut voluptates sed ut.: Ea incidunt qui ut ipsam non
                  quia.
              feature: Aut dicta iusto facere accusantium ut.
            schema:
              $ref: '#/components/schemas/EnableServiceModelFeatureRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when the service model feature\
            \ could not be enabled"
      security:
      - api_key_header_Authorization: []
      summary: EnableServiceModelFeature service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/model/{id}/release:
    get:
      operationId: service-model-api#ReleaseServiceModelStatus
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service model ID
        example: sm-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service Model
          example: Nihil a magnam.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                status: READY
              schema:
                $ref: '#/components/schemas/ReleaseServiceModelResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to release a service\
            \ model status"
      security:
      - api_key_header_Authorization: []
      summary: ReleaseServiceModelStatus service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/model/{serviceModelId}/product-tier:
    get:
      operationId: product-tier-api#ListProductTier
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Service model ID
        example: sm-12345678
        explode: false
        in: path
        name: serviceModelId
        required: true
        schema:
          description: ID of a Service Model
          example: Eum ut sit itaque.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - Ipsam maiores.
                - Quaerat quisquam molestias nam dolor id vitae.
                - Pariatur voluptatem et laboriosam neque et.
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListProductTiersResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list product tiers"
      security:
      - api_key_header_Authorization: []
      summary: ListProductTier product-tier-api
      tags:
      - product-tier-api
  /2022-09-01-00/service/{serviceId}/model/{serviceModelId}/vunit:
    get:
      operationId: vunit-api#ListVUnits
      parameters:
      - description: Service ID for the VUnit
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Service Model ID for the VUnit
        example: sm-12345678
        explode: false
        in: path
        name: serviceModelId
        required: true
        schema:
          description: ID of a Service Model
          example: Aut corporis.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              cloudProvider: aws
              region: us-west-2
            schema:
              $ref: '#/components/schemas/ListVUnitsRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                  aws:
                  - vu-12345678
                  - vu-abcdefgh
                  gcp:
                  - vu-1234efgh
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListVUnitsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list vunits"
      security:
      - api_key_header_Authorization: []
      summary: ListVUnits vunit-api
      tags:
      - vunit-api
  /2022-09-01-00/service/{serviceId}/model/copy/{sourceId}:
    post:
      operationId: service-model-api#CopyServiceModel
      parameters:
      - description: The service ID this model belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The source service model ID
        example: sm-12345678
        explode: false
        in: path
        name: sourceId
        required: true
        schema:
          description: ID of a Service Model
          example: Perspiciatis tempora recusandae aliquid nihil.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              accountConfigIds:
              - ac-12345678
              - ac-23456789
              description: A MySQL Hosted SaaS specializing in multi-writer clusters
                for high availability
              features:
              - configuration:
                  Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum
                    eum ab.
                  Nulla consequatur facilis magnam.: Quisquam voluptas.
                  Sed aliquam ut eos ullam.: Fuga aut optio.
                feature: Voluptatum est suscipit.
              - configuration:
                  Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum
                    eum ab.
                  Nulla consequatur facilis magnam.: Quisquam voluptas.
                  Sed aliquam ut eos ullam.: Fuga aut optio.
                feature: Voluptatum est suscipit.
              - configuration:
                  Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum
                    eum ab.
                  Nulla consequatur facilis magnam.: Quisquam voluptas.
                  Sed aliquam ut eos ullam.: Fuga aut optio.
                feature: Voluptatum est suscipit.
              - configuration:
                  Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum
                    eum ab.
                  Nulla consequatur facilis magnam.: Quisquam voluptas.
                  Sed aliquam ut eos ullam.: Fuga aut optio.
                feature: Voluptatum est suscipit.
              name: MySQL multi-writer service hosted model
              targetServiceModelType: CUSTOMER_HOSTED
              targetTierType: OMNISTRATE_DEDICATED_TENANCY
            schema:
              $ref: '#/components/schemas/CopyServiceModelRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: sm-12345678
              schema:
                description: New Service Model ID
                example: sm-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to copy a service\
            \ model"
      security:
      - api_key_header_Authorization: []
      summary: CopyServiceModel service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/network-config:
    get:
      operationId: network-config-api#ListNetworkConfig
      parameters:
      - allowEmptyValue: true
        description: Is network config managed by omnistrate
        example: false
        explode: true
        in: query
        name: managed
        required: false
        schema:
          description: Is network config managed by omnistrate
          example: false
          type: boolean
        style: form
      - description: The service ID to list network configs for
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - Ipsum quod aut nisi debitis.
                - Culpa animi dolorem.
                - Optio soluta dolores.
                nextPageToken: token
              schema:
                $ref: '#/components/schemas/ListNetworkConfigsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list network configs"
      security:
      - api_key_header_Authorization: []
      summary: ListNetworkConfig network-config-api
      tags:
      - network-config-api
    post:
      operationId: network-config-api#CreateNetworkConfig
      parameters:
      - description: The ID of the service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A multi-zone HA network config
              endpointPerReplica: true
              internal: true
              name: Multi-zone
              openPorts:
              - 1299
              - 3306
              privateNetworkingConfiguration:
                privateLinkConfiguration:
                  awsPrivateLinkConfigurations:
                  - port: 80
                    targetGroupName: my-target-group
                  - port: 80
                    targetGroupName: my-target-group
              publicNetworkingConfiguration:
                enableClusterLoadBalancer: true
                enableNodeLoadBalancer: true
              stableEgressIP: true
              tlsTerminationPort: 443
              zoneConfiguration: Sed debitis in autem et dolores a.
            schema:
              $ref: '#/components/schemas/CreateNetworkConfigRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: nc-12345678
              schema:
                description: Network Config ID created
                example: nc-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create network\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateNetworkConfig network-config-api
      tags:
      - network-config-api
  /2022-09-01-00/service/{serviceId}/network-config/{id}:
    delete:
      operationId: network-config-api#DeleteNetworkConfig
      parameters:
      - description: The ID of the service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the network config
        example: nc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Network Config
          example: Beatae mollitia est ipsum consequuntur.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a network\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteNetworkConfig network-config-api
      tags:
      - network-config-api
    get:
      operationId: network-config-api#DescribeNetworkConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the network config to describe. If not\
          \ specified, the latest version is described."
        example: Provident reiciendis omnis animi deleniti architecto in.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the network config to describe. If\
            \ not specified, the latest version is described."
          example: Eligendi neque sit aut consequatur commodi excepturi.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the network config to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Et qui eaque.
          type: string
        style: form
      - description: The ID of the service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the network config
        example: nc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Network Config
          example: Quidem et.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: A multi-zone HA network config
                endpointPerReplica: true
                id: nc-12345678
                infraConfigIDs:
                - ic-12345678
                - ic-abcdefgh
                internal: true
                name: Multi-zone
                openPorts:
                - 1299
                - 3306
                privateNetworkingConfiguration:
                  privateLinkConfiguration:
                    awsPrivateLinkConfigurations:
                    - port: 80
                      targetGroupName: my-target-group
                    - port: 80
                      targetGroupName: my-target-group
                    - port: 80
                      targetGroupName: my-target-group
                publicNetworkingConfiguration:
                  enableClusterLoadBalancer: true
                  enableNodeLoadBalancer: true
                serviceId: s-12345678
                stableEgressIP: true
                tlsTerminationPort: 443
                zoneConfiguration: Ratione suscipit doloremque reiciendis excepturi.
              schema:
                $ref: '#/components/schemas/DescribeNetworkConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe network\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeNetworkConfig network-config-api
      tags:
      - network-config-api
    patch:
      operationId: network-config-api#UpdateNetworkConfig
      parameters:
      - description: The ID of the service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the network config
        example: nc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Network Config
          example: Temporibus nulla est maiores dolorem illum.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A multi-zone HA network config
              endpointPerReplica: true
              internal: true
              name: Multi-zone
              openPorts:
              - 1299
              - 3306
              privateNetworkingConfiguration:
                privateLinkConfiguration:
                  awsPrivateLinkConfigurations:
                  - port: 80
                    targetGroupName: my-target-group
                  - port: 80
                    targetGroupName: my-target-group
              publicNetworkingConfiguration:
                enableClusterLoadBalancer: true
                enableNodeLoadBalancer: true
              stableEgressIP: true
              tlsTerminationPort: 443
              zoneConfiguration: Quia nobis fuga.
            schema:
              $ref: '#/components/schemas/UpdateNetworkConfigRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update network\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateNetworkConfig network-config-api
      tags:
      - network-config-api
  /2022-09-01-00/service/{serviceId}/network/{id}:
    get:
      operationId: vunit-api#DescribeNetwork
      parameters:
      - description: Service ID context
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Network to operate on
        example: n-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Network
          example: Mollitia corporis odit magni.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cidr: 10.0.0.0/16
                id: n-12345678
                networkConfigId: nc-12345678
                serviceId: s-12345678
                type: PUBLIC
                vunitId: vu-12345678
              schema:
                $ref: '#/components/schemas/DescribeNetworkResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a network"
      security:
      - api_key_header_Authorization: []
      summary: DescribeNetwork vunit-api
      tags:
      - vunit-api
  /2022-09-01-00/service/{serviceId}/output-parameter:
    post:
      operationId: output-parameter-api#CreateOutputParameter
      parameters:
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: Username of the user created in the target system
              key: username
              name: Username
              resourceId: r-12345678
              value: johndoe
              valueRef: $var.username
              valueType: Quibusdam ratione et voluptates ipsam repudiandae.
            schema:
              $ref: '#/components/schemas/CreateOutputParameterRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: op-12345678
              schema:
                description: Output Parameter ID created
                example: op-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create an output\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: CreateOutputParameter output-parameter-api
      tags:
      - output-parameter-api
  /2022-09-01-00/service/{serviceId}/output-parameter/{id}:
    delete:
      operationId: output-parameter-api#DeleteOutputParameter
      parameters:
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the output parameter
        example: op-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Output Parameter
          example: Quod magnam numquam.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete an output\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: DeleteOutputParameter output-parameter-api
      tags:
      - output-parameter-api
    get:
      operationId: output-parameter-api#DescribeOutputParameter
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the resource to describe. If not specified,\
          \ the latest version is described."
        example: Ducimus vitae.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the resource to describe. If not specified,\
            \ the latest version is described."
          example: Beatae id quis suscipit quos.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the resource to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Eos enim assumenda.
          type: string
        style: form
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the output parameter
        example: op-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Output Parameter
          example: Alias sunt aspernatur possimus.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: Username of the user created in the target system
                id: op-12345678
                key: username
                name: Username
                resourceId: r-12345678
                serviceId: s-12345678
                value: johndoe
                valueRef: $var.username
                valueType: Veritatis voluptatem expedita.
              schema:
                $ref: '#/components/schemas/DescribeOutputParameterResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an output\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: DescribeOutputParameter output-parameter-api
      tags:
      - output-parameter-api
    patch:
      operationId: output-parameter-api#UpdateOutputParameter
      parameters:
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the output parameter
        example: op-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Output Parameter
          example: Et dolorum occaecati eum sed.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: Username of the user created in the target system
              name: Username
              value: johndoe
              valueRef: $var.username
              valueType: Omnis molestias accusamus praesentium temporibus cum delectus.
            schema:
              $ref: '#/components/schemas/UpdateOutputParameterRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update an output\
            \ parameter"
      security:
      - api_key_header_Authorization: []
      summary: UpdateOutputParameter output-parameter-api
      tags:
      - output-parameter-api
  /2022-09-01-00/service/{serviceId}/product-tier:
    post:
      operationId: product-tier-api#CreateProductTier
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              allowCreatesWhenPaymentNotConfigured: true
              autoApproveSubscription: false
              awsRegions:
              - us-east-2
              - ca-central-1
              azureRegions:
              - northcentralus
              billingProductID: abc123
              description: A premium product tier
              documentation: Any documentation
              exportUsageMetering: true
              exportUsageMeteringConfig:
                GCS:
                  GCSBucketName: my_billing_bucket_name
                S3:
                  S3BucketArn: arn:aws:s3:::my_billing_bucket_name
              gcpRegions:
              - us-central1
              isDisabled: false
              maxNumberOfInstances: 5
              name: Premium
              planDescription: A premium plan
              pricePerUnit:
                CPU core hours:
                  amount: 0.001
                  currency: USD
                Memory GiB hours:
                  amount: 1.0E-4
                  currency: USD
                Storage GiB hours:
                  amount: 1.0E-4
                  currency: USD
              pricing:
                price1: value1
              serviceModelId: sm-12345678
              support: Any support
              tierType: OMNISTRATE_DEDICATED_TENANCY
            schema:
              $ref: '#/components/schemas/CreateProductTierRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: pt-12345678
              schema:
                description: Product Tier ID created
                example: pt-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a product\
            \ tier"
      security:
      - api_key_header_Authorization: []
      summary: CreateProductTier product-tier-api
      tags:
      - product-tier-api
  /2022-09-01-00/service/{serviceId}/product-tier/{id}:
    delete:
      operationId: product-tier-api#DeleteProductTier
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier
          example: Nulla debitis facere dicta eum cupiditate nemo.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a product\
            \ tier"
      security:
      - api_key_header_Authorization: []
      summary: DeleteProductTier product-tier-api
      tags:
      - product-tier-api
    get:
      operationId: product-tier-api#DescribeProductTier
      parameters:
      - allowEmptyValue: true
        description: The version number for the specific version set
        example: "3.0"
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: The version number for the specific version set
          example: "3.0"
          type: string
        style: form
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier
          example: Eveniet ullam voluptas nulla voluptatem amet maxime.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                allowCreatesWhenPaymentNotConfigured: true
                apiGroups:
                  r-12345678: v1
                  r-23456789: v2
                  r-34567890: v3
                autoApproveSubscription: false
                awsRegions:
                - us-east-2
                - ca-central-1
                azureRegions:
                - northcentralus
                billingProductID: abc123
                cloudProvidersConfigReadiness:
                  aws:
                    resourceA: missing terraform configuration
                    resourceB: missing cloudformation configuration
                description: A premium product tier
                documentation: Any documentation
                enabledFeatures:
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                exportUsageMetering: true
                exportUsageMeteringConfig:
                  GCS:
                    GCSBucketName: my_billing_bucket_name
                  S3:
                    S3BucketArn: arn:aws:s3:::my_billing_bucket_name
                features:
                  LOGS: true
                  METRICS: false
                gcpRegions:
                - us-central1
                id: pt-12345678
                isDisabled: false
                key: premium
                maxNumberOfInstances: 5
                name: Premium
                planDescription: A premium plan
                pricePerUnit:
                  CPU core hours:
                    amount: 0.001
                    currency: USD
                  Memory GiB hours:
                    amount: 1.0E-4
                    currency: USD
                  Storage GiB hours:
                    amount: 1.0E-4
                    currency: USD
                pricing:
                  price1: value1
                serviceId: s-12345678
                serviceModelId: sm-12345678
                support: Any support
                tierType: OMNISTRATE_DEDICATED_TENANCY
              schema:
                $ref: '#/components/schemas/DescribeProductTierResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a product\
            \ tier"
      security:
      - api_key_header_Authorization: []
      summary: DescribeProductTier product-tier-api
      tags:
      - product-tier-api
    patch:
      operationId: product-tier-api#UpdateProductTier
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier
          example: Ipsa omnis qui.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              allowCreatesWhenPaymentNotConfigured: true
              autoApproveSubscription: false
              awsRegions:
              - us-east-2
              - ca-central-1
              azureRegions:
              - northcentralus
              billingProductID: abc123
              description: A premium product tier
              documentation: Any documentation
              exportUsageMetering: true
              exportUsageMeteringConfig:
                GCS:
                  GCSBucketName: my_billing_bucket_name
                S3:
                  S3BucketArn: arn:aws:s3:::my_billing_bucket_name
              gcpRegions:
              - us-central1
              isDisabled: false
              maxNumberOfInstances: 5
              name: Premium
              planDescription: A premium plan
              pricePerUnit:
                CPU core hours:
                  amount: 0.001
                  currency: USD
                Memory GiB hours:
                  amount: 1.0E-4
                  currency: USD
                Storage GiB hours:
                  amount: 1.0E-4
                  currency: USD
              pricing:
                price1: value1
              support: Any support
              tierType: OMNISTRATE_DEDICATED_TENANCY
            schema:
              $ref: '#/components/schemas/UpdateProductTierRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a product\
            \ tier"
      security:
      - api_key_header_Authorization: []
      summary: UpdateProductTier product-tier-api
      tags:
      - product-tier-api
  /2022-09-01-00/service/{serviceId}/product-tier/{id}/feature:
    delete:
      operationId: product-tier-api#DisableProductTierFeature
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier
          example: Neque at dolores et porro.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              feature: BILLING
              scope: INTERNAL
            schema:
              $ref: '#/components/schemas/DisableProductTierFeatureRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when the product tier feature\
            \ could not be disabled"
      security:
      - api_key_header_Authorization: []
      summary: DisableProductTierFeature product-tier-api
      tags:
      - product-tier-api
    put:
      operationId: product-tier-api#EnableProductTierFeature
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Product Tier
          example: Esse esse.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              configuration:
                S3BucketArn: arn:aws:s3:::my_billing_bucket_name
              feature: BILLING
              scope: INTERNAL
            schema:
              $ref: '#/components/schemas/EnableProductTierFeatureRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when the product tier feature\
            \ could not be enabled"
      security:
      - api_key_header_Authorization: []
      summary: EnableProductTierFeature product-tier-api
      tags:
      - product-tier-api
  /2022-09-01-00/service/{serviceId}/product-tier/{productTierId}/service-plan:
    get:
      operationId: service-plan-api#GetServicePlan
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: Product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Consectetur sunt velit placeat.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                AutoApproveSubscription: false
                accountConfigIds:
                - ac-12345678
                - ac-23456789
                activeAccountConfigIds:
                  aws: ac-12345678
                  gcp: ac-23456789
                apiVersion: v1
                awsRegions:
                - us-east-2
                - ca-central-1
                azureRegions:
                - northcentralus
                deploymentConfigId: dc-12345678
                gcpRegions:
                - us-central1
                hasPendingChanges: true
                isProductTierDisabled: true
                latestMajorVersion: "3.0"
                modelType: CUSTOMER_HOSTED
                productTierDescription: A premium product tier
                productTierDocumentation: Any documentation
                productTierFeatures:
                  LOGS: true
                  METRICS: false
                productTierId: pt-12345678
                productTierKey: premium
                productTierName: Premium
                productTierPlanDescription: A premium plan
                productTierPricing:
                  price1: value1
                productTierSupport: Any support
                serviceApiDescription: A MySQL SaaS API specializing in multi-writer
                  multi-tenant clusters for high availability
                serviceApiId: sa-12345678
                serviceEnvironmentId: se-12345678
                serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
                  clusters for high availability
                serviceModelFeatures:
                - configuration:
                    Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                      voluptas facere.
                    Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                      sit expedita.
                    Soluta esse sit aut inventore.: Minima consectetur rerum eum neque
                      molestiae.
                  feature: Dolorem ea impedit est omnis officia qui.
                - configuration:
                    Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                      voluptas facere.
                    Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                      sit expedita.
                    Soluta esse sit aut inventore.: Minima consectetur rerum eum neque
                      molestiae.
                  feature: Dolorem ea impedit est omnis officia qui.
                - configuration:
                    Earum qui accusamus veniam.: Dolorem qui quasi aliquam voluptas
                      voluptas facere.
                    Ratione non quis officiis qui totam id.: Ducimus dicta eveniet
                      sit expedita.
                    Soluta esse sit aut inventore.: Minima consectetur rerum eum neque
                      molestiae.
                  feature: Dolorem ea impedit est omnis officia qui.
                serviceModelId: sm-12345678
                serviceModelName: MySQL multi-writer service hosted model
                tierType: OMNISTRATE_DEDICATED_TENANCY
                versionSetStatus: Preferred|Active|Deprecated|Pending
              schema:
                $ref: '#/components/schemas/GetServicePlanResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list product tiers"
      security:
      - api_key_header_Authorization: []
      summary: GetServicePlan service-plan-api
      tags:
      - service-plan-api
  /2022-09-01-00/service/{serviceId}/product-tier/copy/{sourceId}:
    post:
      operationId: product-tier-api#CopyProductTier
      parameters:
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The source product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: sourceId
        required: true
        schema:
          description: ID of a Product Tier
          example: Et fugiat laudantium non eum quia cum.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              allowCreatesWhenPaymentNotConfigured: true
              autoApproveSubscription: false
              awsRegions:
              - us-east-2
              - ca-central-1
              azureRegions:
              - northcentralus
              billingProductID: abc123
              description: A premium product tier
              documentation: Any documentation
              exportUsageMetering: true
              exportUsageMeteringConfig:
                GCS:
                  GCSBucketName: my_billing_bucket_name
                S3:
                  S3BucketArn: arn:aws:s3:::my_billing_bucket_name
              gcpRegions:
              - us-central1
              maxNumberOfInstances: 5
              name: Premium
              planDescription: A premium plan
              pricePerUnit:
                CPU core hours:
                  amount: 0.001
                  currency: USD
                Memory GiB hours:
                  amount: 1.0E-4
                  currency: USD
                Storage GiB hours:
                  amount: 1.0E-4
                  currency: USD
              pricing:
                price1: value1
              serviceModelId: sm-12345678
              support: Any support
              targetTierType: OMNISTRATE_DEDICATED_TENANCY
            schema:
              $ref: '#/components/schemas/CopyProductTierRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: pt-12345678
              schema:
                description: Product Tier ID created
                example: pt-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a product\
            \ tier"
      security:
      - api_key_header_Authorization: []
      summary: CopyProductTier product-tier-api
      tags:
      - product-tier-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set:
    get:
      operationId: tier-version-set-api#ListTierVersionSets
      parameters:
      - allowEmptyValue: true
        description: "If true, the latest major version is returned. The parameter\
          \ needs to be specified in isolation."
        example: true
        explode: true
        in: query
        name: latestMajorVersionOnly
        required: false
        schema:
          description: "If true, the latest major version is returned. The parameter\
            \ needs to be specified in isolation."
          example: true
          type: boolean
        style: form
      - allowEmptyValue: true
        description: Returns the latest incremental version for the given major version.
          The paramenter needs to be specified in isolation.
        example: "3.0"
        explode: true
        in: query
        name: latestIncrementalVersionForMajorVersion
        required: false
        schema:
          description: Returns the latest incremental version for the given major
            version. The paramenter needs to be specified in isolation.
          example: "3.0"
          type: string
        style: form
      - allowEmptyValue: true
        description: The next token to use for pagination
        example: token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The next token to use for pagination
          example: token
          type: string
        style: form
      - allowEmptyValue: true
        description: The number of resources to return per page
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        style: form
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Et aut.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                nextPageToken: next-token
                tierVersionSets:
                - autoApproveSubscription: false
                  baseVersion: "3.0"
                  createdAt: 2020-01-01T00:00:00Z
                  createdBy: John Doe
                  description: Maiores aliquid explicabo et ut error delectus.
                  enabledFeatures:
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  features:
                    LOGS: true
                    METRICS: false
                  instanceCount: 12
                  latestUpgradePathId: upgrade-12345678
                  name: Regular version set
                  parentVersion: "2.0"
                  productTierId: Eligendi voluptas ipsum et.
                  releasedAt: 2020-01-01T00:00:00Z
                  releasedBy: John Doe
                  resources:
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: r-12345678
                    imageConfigId: imgc-12345678
                    infraConfigId: ic-12345678
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: r-12345678
                    imageConfigId: imgc-12345678
                    infraConfigId: ic-12345678
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                  serviceId: s-12345678
                  serviceModelId: Placeat dolores suscipit iste enim harum.
                  status: Preferred|Active|Deprecated|Pending
                  type: Major|Incremental|UserDefined
                  updatedAt: 2020-01-01T00:00:00Z
                  version: "3.0"
                - autoApproveSubscription: false
                  baseVersion: "3.0"
                  createdAt: 2020-01-01T00:00:00Z
                  createdBy: John Doe
                  description: Maiores aliquid explicabo et ut error delectus.
                  enabledFeatures:
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  features:
                    LOGS: true
                    METRICS: false
                  instanceCount: 12
                  latestUpgradePathId: upgrade-12345678
                  name: Regular version set
                  parentVersion: "2.0"
                  productTierId: Eligendi voluptas ipsum et.
                  releasedAt: 2020-01-01T00:00:00Z
                  releasedBy: John Doe
                  resources:
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: r-12345678
                    imageConfigId: imgc-12345678
                    infraConfigId: ic-12345678
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: r-12345678
                    imageConfigId: imgc-12345678
                    infraConfigId: ic-12345678
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                  serviceId: s-12345678
                  serviceModelId: Placeat dolores suscipit iste enim harum.
                  status: Preferred|Active|Deprecated|Pending
                  type: Major|Incremental|UserDefined
                  updatedAt: 2020-01-01T00:00:00Z
                  version: "3.0"
                - autoApproveSubscription: false
                  baseVersion: "3.0"
                  createdAt: 2020-01-01T00:00:00Z
                  createdBy: John Doe
                  description: Maiores aliquid explicabo et ut error delectus.
                  enabledFeatures:
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  features:
                    LOGS: true
                    METRICS: false
                  instanceCount: 12
                  latestUpgradePathId: upgrade-12345678
                  name: Regular version set
                  parentVersion: "2.0"
                  productTierId: Eligendi voluptas ipsum et.
                  releasedAt: 2020-01-01T00:00:00Z
                  releasedBy: John Doe
                  resources:
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: r-12345678
                    imageConfigId: imgc-12345678
                    infraConfigId: ic-12345678
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: r-12345678
                    imageConfigId: imgc-12345678
                    infraConfigId: ic-12345678
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                  serviceId: s-12345678
                  serviceModelId: Placeat dolores suscipit iste enim harum.
                  status: Preferred|Active|Deprecated|Pending
                  type: Major|Incremental|UserDefined
                  updatedAt: 2020-01-01T00:00:00Z
                  version: "3.0"
                - autoApproveSubscription: false
                  baseVersion: "3.0"
                  createdAt: 2020-01-01T00:00:00Z
                  createdBy: John Doe
                  description: Maiores aliquid explicabo et ut error delectus.
                  enabledFeatures:
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  - configuration:
                      provider: native
                    feature: LOGS
                    scope: INTERNAL
                  features:
                    LOGS: true
                    METRICS: false
                  instanceCount: 12
                  latestUpgradePathId: upgrade-12345678
                  name: Regular version set
                  parentVersion: "2.0"
                  productTierId: Eligendi voluptas ipsum et.
                  releasedAt: 2020-01-01T00:00:00Z
                  releasedBy: John Doe
                  resources:
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: r-12345678
                    imageConfigId: imgc-12345678
                    infraConfigId: ic-12345678
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                  - description: A MySQL SaaS specializing in multi-writer clusters
                      for high availability
                    id: r-12345678
                    imageConfigId: imgc-12345678
                    infraConfigId: ic-12345678
                    isExternal: true
                    managedResourceType: PortsBasedProxy
                    name: MySQL multi-writer service
                  serviceId: s-12345678
                  serviceModelId: Placeat dolores suscipit iste enim harum.
                  status: Preferred|Active|Deprecated|Pending
                  type: Major|Incremental|UserDefined
                  updatedAt: 2020-01-01T00:00:00Z
                  version: "3.0"
              schema:
                $ref: '#/components/schemas/ListTierVersionSetsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: ListTierVersionSets tier-version-set-api
      tags:
      - tier-version-set-api
    post:
      operationId: tier-version-set-api#CreateTierVersionSet
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Voluptas vero voluptatibus deserunt sint quis aperiam.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: Praesentium optio nesciunt.
              name: Major version set
              parentVersion: "2.0"
              type: Major|Incremental|UserDefined
            schema:
              $ref: '#/components/schemas/CreateTierVersionSetRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                version: "3.0"
              schema:
                $ref: '#/components/schemas/CreateTierVersionSetResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request."
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a version\
            \ set."
      security:
      - api_key_header_Authorization: []
      summary: CreateTierVersionSet tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}:
    get:
      operationId: tier-version-set-api#DescribeTierVersionSet
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Qui impedit aliquam.
          type: string
        style: simple
      - description: The version number for the specific version set.
        example: "3.0"
        explode: false
        in: path
        name: version
        required: true
        schema:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                autoApproveSubscription: false
                baseVersion: "3.0"
                createdAt: 2020-01-01T00:00:00Z
                createdBy: John Doe
                description: Fugiat magni sapiente.
                enabledFeatures:
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                features:
                  LOGS: true
                  METRICS: false
                instanceCount: 12
                latestUpgradePathId: upgrade-12345678
                name: Regular version set
                parentVersion: "2.0"
                productTierId: Labore iusto eos.
                releasedAt: 2020-01-01T00:00:00Z
                releasedBy: John Doe
                resources:
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                serviceId: s-12345678
                serviceModelId: Rerum architecto incidunt quis iste commodi.
                status: Preferred|Active|Deprecated|Pending
                type: Major|Incremental|UserDefined
                updatedAt: 2020-01-01T00:00:00Z
                version: "3.0"
              schema:
                $ref: '#/components/schemas/TierVersionSet'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: DescribeTierVersionSet tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/deprecate:
    patch:
      operationId: tier-version-set-api#DeprecateTierVersionSet
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Enim cupiditate modi.
          type: string
        style: simple
      - description: The version number for the specific version set.
        example: "3.0"
        explode: false
        in: path
        name: version
        required: true
        schema:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                autoApproveSubscription: false
                baseVersion: "3.0"
                createdAt: 2020-01-01T00:00:00Z
                createdBy: John Doe
                description: Nihil eum quasi error.
                enabledFeatures:
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                features:
                  LOGS: true
                  METRICS: false
                instanceCount: 12
                latestUpgradePathId: upgrade-12345678
                name: Regular version set
                parentVersion: "2.0"
                productTierId: Et quasi ut nostrum saepe.
                releasedAt: 2020-01-01T00:00:00Z
                releasedBy: John Doe
                resources:
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                serviceId: s-12345678
                serviceModelId: Pariatur sed mollitia numquam.
                status: Preferred|Active|Deprecated|Pending
                type: Major|Incremental|UserDefined
                updatedAt: 2020-01-01T00:00:00Z
                version: "3.0"
              schema:
                $ref: '#/components/schemas/TierVersionSet'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: DeprecateTierVersionSet tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/diff/{anotherVersion}:
    get:
      operationId: tier-version-set-api#DiffTierVersionSets
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Eius laborum nihil tenetur nobis blanditiis consequatur.
          type: string
        style: simple
      - description: The version number for the version set.
        example: "3.0"
        explode: false
        in: path
        name: version
        required: true
        schema:
          description: The version number for the version set.
          example: "3.0"
          type: string
        style: simple
      - description: The target version to compare against.
        example: "3.1"
        explode: false
        in: path
        name: anotherVersion
        required: true
        schema:
          description: The target version to compare against.
          example: "3.1"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                anotherVersion: "3.1"
                productTierId: Eos unde minima.
                resourceChangeSets:
                  Debitis ea aspernatur aut blanditiis aperiam eum.:
                    categorizedResourceChanges:
                      Omnis molestiae eaque id unde distinctio est.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        status: PENDING_UPDATE
                    imageConfigChanges:
                      changeState: PENDING_NEW
                      imageConfigId: imgc-12345678
                      imageName: mysql
                    infraConfigChanges:
                      changeState: PENDING_NEW
                      infraConfigId: ic-12345678
                      name: MySQL Writer Infra Config
                    overallResourceStatus: PENDING_UPDATE
                    productTierFeatureChanges: PENDING_UPDATE
                    resourceChanges: PENDING_DELETE
                    resourceName: Provident praesentium ut deserunt voluptate vel
                      necessitatibus.
                serviceId: s-12345678
                version: "3.0"
              schema:
                $ref: '#/components/schemas/DiffTierVersionSetsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: DiffTierVersionSets tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/promote:
    patch:
      operationId: tier-version-set-api#PromoteTierVersionSet
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Temporibus voluptatem nobis omnis alias nihil quibusdam.
          type: string
        style: simple
      - description: The version number for the specific version set.
        example: "3.0"
        explode: false
        in: path
        name: version
        required: true
        schema:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                autoApproveSubscription: false
                baseVersion: "3.0"
                createdAt: 2020-01-01T00:00:00Z
                createdBy: John Doe
                description: Amet similique quia.
                enabledFeatures:
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                features:
                  LOGS: true
                  METRICS: false
                instanceCount: 12
                latestUpgradePathId: upgrade-12345678
                name: Regular version set
                parentVersion: "2.0"
                productTierId: Possimus ex consequuntur.
                releasedAt: 2020-01-01T00:00:00Z
                releasedBy: John Doe
                resources:
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                serviceId: s-12345678
                serviceModelId: Pariatur qui.
                status: Preferred|Active|Deprecated|Pending
                type: Major|Incremental|UserDefined
                updatedAt: 2020-01-01T00:00:00Z
                version: "3.0"
              schema:
                $ref: '#/components/schemas/TierVersionSet'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used when a bad request is made"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used when authentication fails"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used when authorization fails"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used when a failure occurs"
      security:
      - api_key_header_Authorization: []
      summary: PromoteTierVersionSet tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/productTier/{productTierId}/version-set/{version}/release:
    patch:
      operationId: tier-version-set-api#ReleaseTierVersionSet
      parameters:
      - description: ID of the Service
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this version set belongs to.
        example: Beatae beatae.
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Quia voluptate id.
          type: string
        style: simple
      - description: The version number for the specific version set.
        example: "3.0"
        explode: false
        in: path
        name: version
        required: true
        schema:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              isPreferred: true
              name: Major version set
            schema:
              $ref: '#/components/schemas/ReleaseTierVersionSetRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                autoApproveSubscription: false
                baseVersion: "3.0"
                createdAt: 2020-01-01T00:00:00Z
                createdBy: John Doe
                description: Dolorem nisi repellat aut sed commodi aut.
                enabledFeatures:
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                - configuration:
                    provider: native
                  feature: LOGS
                  scope: INTERNAL
                features:
                  LOGS: true
                  METRICS: false
                instanceCount: 12
                latestUpgradePathId: upgrade-12345678
                name: Regular version set
                parentVersion: "2.0"
                productTierId: Omnis alias.
                releasedAt: 2020-01-01T00:00:00Z
                releasedBy: John Doe
                resources:
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                - description: A MySQL SaaS specializing in multi-writer clusters
                    for high availability
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  isExternal: true
                  managedResourceType: PortsBasedProxy
                  name: MySQL multi-writer service
                serviceId: s-12345678
                serviceModelId: Nesciunt dolorem est quo dolorem omnis quas.
                status: Preferred|Active|Deprecated|Pending
                type: Major|Incremental|UserDefined
                updatedAt: 2020-01-01T00:00:00Z
                version: "3.0"
              schema:
                $ref: '#/components/schemas/TierVersionSet'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request."
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to release a version\
            \ set."
      security:
      - api_key_header_Authorization: []
      summary: ReleaseTierVersionSet tier-version-set-api
      tags:
      - tier-version-set-api
  /2022-09-01-00/service/{serviceId}/producttier/{productTierId}/resource:
    get:
      operationId: resource-api#ListResources
      parameters:
      - allowEmptyValue: true
        description: Is resource managed by omnistrate
        example: false
        explode: true
        in: query
        name: managed
        required: false
        schema:
          description: Is resource managed by omnistrate
          example: false
          type: boolean
        style: form
      - allowEmptyValue: true
        description: "Product tier version of the instance to describe. If not specified,\
          \ the latest version is described."
        example: Animi consequuntur ipsam explicabo.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the instance to describe. If not specified,\
            \ the latest version is described."
          example: Vel suscipit et.
          type: string
        style: form
      - description: The ID of the service to list resources for
        example: si-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID
        example: pt-12345678
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Animi iusto est sit est voluptate ad.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - r-12345678
                - r-abcdefgh
                - r-1234abcd
                nextPageToken: next-token
                resources:
                - actionHooks:
                  - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
                    scope: CLUSTER
                    type: INIT
                  additionalSecurityContext:
                    AddCapabilities:
                    - CAP_NET_ADMIN
                    - CAP_NET_RAW
                    DropCapabilities:
                    - CAP_NET_ADMIN
                    - CAP_NET_RAW
                    SupplementalGroupIDs:
                    - 1001
                    - 999
                  backupConfiguration:
                    backupPeriodInHours: 24
                    backupRetentionInDays: 7
                  blobStorageConfiguration:
                    GCSConfiguration: {}
                    S3Configuration: {}
                  capabilities:
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  customLabels:
                    key: value
                  customSysCTLs:
                    net.ipv4.tcp_syncookies: "1"
                  customULimits:
                  - ULimitsName: NoProc
                    ULimitsType: Soft
                    ULimitsValue: 1000
                  - ULimitsName: NoFile
                    ULimitsType: Hard
                    ULimitsValue: 2048
                  dependencies:
                  - parameterMap:
                      clusterId: writerId
                      clusterOrg: userDatabase
                    resourceId: r-12345678
                  - parameterMap:
                      clusterId: readerId
                      clusterOrg: userDatabase
                    resourceId: r-abcdef12
                  description: An resource to manage a hosted public SaaS offering
                    of a multi-writer MySQL service
                  environmentVariables:
                  - name: MYSQL_ROOT_PASSWORD
                    value: password
                  fileSystemConfiguration:
                    EFSFileSystemConfiguration:
                      PerformanceMode: generalPurpose|maxIO
                      ProvisionedThroughputInMibps: 125
                      ThroughputMode: provisioned|bursting|elastic
                  helmChartConfiguration:
                    chartName: my-chart
                    chartRepoName: my-repo
                    chartRepoUrl: https://my-repo.com
                    chartValues:
                      key1: value1
                      key2: 3
                      key3:
                        key4: value4
                    chartVersion: 1.0.0
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    password: my-password
                    runtimeConfiguration:
                      disableHooks: true
                      recreate: true
                      resetThenReuseValues: true
                      resetValues: true
                      reuseValues: true
                      skipCRDs: true
                      timeoutNanos: 1000000000
                      upgradeCRDs: true
                      wait: true
                      waitForJobs: true
                    username: my-user
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  internal: false
                  isDeprecated: false
                  jobConfig:
                    activeDeadlineSeconds: 300
                    backoffLimit: 5
                  key: galera
                  kustomizeConfiguration:
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    gitConfiguration:
                      accessToken: my-token
                      commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    helmChartDependencies:
                    - chartName: cert-manager
                      chartVersion: v1.5.3
                    - chartName: nginx-ingress
                      chartVersion: v0.48.1
                    - chartName: external-dns
                      chartVersion: v0.7.0
                    - chartName: cnpg-operator
                      chartVersion: v0.23.1
                    kustomizePath: /kustomize
                  l4LoadBalancerConfiguration:
                    ingressPortConfiguration:
                    - associatedResourceIDs:
                      - r-12345678
                      - r-abcdef12
                      backendPort: 8080
                      ingressPort: 1234
                    - associatedResourceIDs:
                      - r-12345678
                      - r-abcdef12
                      backendPort: 8081
                      ingressPort: 5678
                    - associatedResourceIDs:
                      - r-vwxybz12
                      - r-poij122v
                      backendPort: 8082
                      ingressPort: 9012
                  l7LoadBalancerConfiguration:
                    paths:
                    - associatedResourceID: r-12345678
                      path: /path
                      port: 8080
                  name: Galera
                  operatorCRDConfiguration:
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    helmChartDependencies:
                    - chartName: cert-manager
                      chartVersion: v1.5.3
                    - chartName: nginx-ingress
                      chartVersion: v0.48.1
                    - chartName: external-dns
                      chartVersion: v0.7.0
                    - chartName: cnpg-operator
                      chartVersion: v0.23.1
                    outputParameters:
                      expiresAt: $out.status.notAfter
                      issuerName: letsencrypt-prod
                    readinessConditions:
                      $out.status.conditions[?(@.type=='Ready')].status: true
                    supplementalFiles:
                    - |
                      apiVersion: cert-manager.io/v1
                      kind: ClusterIssuer
                      metadata:
                        name: letsencrypt-prod
                      spec:
                        acme:
                          server: https://acme-v02.api.letsencrypt.org/directory
                    - |-
                      apiVersion: ingress.nginx.io/v1
                      kind: IngressClass
                      metadata:
                        name: nginx
                      spec:
                        controller: nginx.org/ingress-controller
                    template: |-
                      apiVersion: cert-manager.io/v1
                      kind: ClusterIssuer
                      metadata:
                        name: letsencrypt-prod
                      spec:
                        acme:
                          server: https://acme-v02.api.letsencrypt.org/directory
                          email: test@example.com
                          privateKeySecretRef:
                            name: letsencrypt-prod
                          solvers:
                          - http01:
                              ingress:
                                class: nginx
                  productTierId: pt-12345678
                  proxyType: PortsBasedProxy
                  resourceType: Generic
                  serviceId: s-12345678
                  terraformConfigurations:
                    Accusamus sed facere consectetur et qui.:
                      gitConfiguration:
                        accessToken: my-token
                        commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                        referenceName: tags/v1.0.0
                        repositoryUrl: https://github.com/username/myrepo
                        userName: my-user
                      privateModuleGitAccessTokens:
                        tokenName: accessToken
                      requiredOutputKeys:
                      - output1
                      requiredOutputs:
                      - exported: true
                        key: output1
                      terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
                      terraformPath: /project1/tf
                    Sequi asperiores.:
                      gitConfiguration:
                        accessToken: my-token
                        commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                        referenceName: tags/v1.0.0
                        repositoryUrl: https://github.com/username/myrepo
                        userName: my-user
                      privateModuleGitAccessTokens:
                        tokenName: accessToken
                      requiredOutputKeys:
                      - output1
                      requiredOutputs:
                      - exported: true
                        key: output1
                      terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
                      terraformPath: /project1/tf
                - actionHooks:
                  - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
                    scope: CLUSTER
                    type: INIT
                  additionalSecurityContext:
                    AddCapabilities:
                    - CAP_NET_ADMIN
                    - CAP_NET_RAW
                    DropCapabilities:
                    - CAP_NET_ADMIN
                    - CAP_NET_RAW
                    SupplementalGroupIDs:
                    - 1001
                    - 999
                  backupConfiguration:
                    backupPeriodInHours: 24
                    backupRetentionInDays: 7
                  blobStorageConfiguration:
                    GCSConfiguration: {}
                    S3Configuration: {}
                  capabilities:
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  customLabels:
                    key: value
                  customSysCTLs:
                    net.ipv4.tcp_syncookies: "1"
                  customULimits:
                  - ULimitsName: NoProc
                    ULimitsType: Soft
                    ULimitsValue: 1000
                  - ULimitsName: NoFile
                    ULimitsType: Hard
                    ULimitsValue: 2048
                  dependencies:
                  - parameterMap:
                      clusterId: writerId
                      clusterOrg: userDatabase
                    resourceId: r-12345678
                  - parameterMap:
                      clusterId: readerId
                      clusterOrg: userDatabase
                    resourceId: r-abcdef12
                  description: An resource to manage a hosted public SaaS offering
                    of a multi-writer MySQL service
                  environmentVariables:
                  - name: MYSQL_ROOT_PASSWORD
                    value: password
                  fileSystemConfiguration:
                    EFSFileSystemConfiguration:
                      PerformanceMode: generalPurpose|maxIO
                      ProvisionedThroughputInMibps: 125
                      ThroughputMode: provisioned|bursting|elastic
                  helmChartConfiguration:
                    chartName: my-chart
                    chartRepoName: my-repo
                    chartRepoUrl: https://my-repo.com
                    chartValues:
                      key1: value1
                      key2: 3
                      key3:
                        key4: value4
                    chartVersion: 1.0.0
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    password: my-password
                    runtimeConfiguration:
                      disableHooks: true
                      recreate: true
                      resetThenReuseValues: true
                      resetValues: true
                      reuseValues: true
                      skipCRDs: true
                      timeoutNanos: 1000000000
                      upgradeCRDs: true
                      wait: true
                      waitForJobs: true
                    username: my-user
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  internal: false
                  isDeprecated: false
                  jobConfig:
                    activeDeadlineSeconds: 300
                    backoffLimit: 5
                  key: galera
                  kustomizeConfiguration:
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    gitConfiguration:
                      accessToken: my-token
                      commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    helmChartDependencies:
                    - chartName: cert-manager
                      chartVersion: v1.5.3
                    - chartName: nginx-ingress
                      chartVersion: v0.48.1
                    - chartName: external-dns
                      chartVersion: v0.7.0
                    - chartName: cnpg-operator
                      chartVersion: v0.23.1
                    kustomizePath: /kustomize
                  l4LoadBalancerConfiguration:
                    ingressPortConfiguration:
                    - associatedResourceIDs:
                      - r-12345678
                      - r-abcdef12
                      backendPort: 8080
                      ingressPort: 1234
                    - associatedResourceIDs:
                      - r-12345678
                      - r-abcdef12
                      backendPort: 8081
                      ingressPort: 5678
                    - associatedResourceIDs:
                      - r-vwxybz12
                      - r-poij122v
                      backendPort: 8082
                      ingressPort: 9012
                  l7LoadBalancerConfiguration:
                    paths:
                    - associatedResourceID: r-12345678
                      path: /path
                      port: 8080
                  name: Galera
                  operatorCRDConfiguration:
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    helmChartDependencies:
                    - chartName: cert-manager
                      chartVersion: v1.5.3
                    - chartName: nginx-ingress
                      chartVersion: v0.48.1
                    - chartName: external-dns
                      chartVersion: v0.7.0
                    - chartName: cnpg-operator
                      chartVersion: v0.23.1
                    outputParameters:
                      expiresAt: $out.status.notAfter
                      issuerName: letsencrypt-prod
                    readinessConditions:
                      $out.status.conditions[?(@.type=='Ready')].status: true
                    supplementalFiles:
                    - |
                      apiVersion: cert-manager.io/v1
                      kind: ClusterIssuer
                      metadata:
                        name: letsencrypt-prod
                      spec:
                        acme:
                          server: https://acme-v02.api.letsencrypt.org/directory
                    - |-
                      apiVersion: ingress.nginx.io/v1
                      kind: IngressClass
                      metadata:
                        name: nginx
                      spec:
                        controller: nginx.org/ingress-controller
                    template: |-
                      apiVersion: cert-manager.io/v1
                      kind: ClusterIssuer
                      metadata:
                        name: letsencrypt-prod
                      spec:
                        acme:
                          server: https://acme-v02.api.letsencrypt.org/directory
                          email: test@example.com
                          privateKeySecretRef:
                            name: letsencrypt-prod
                          solvers:
                          - http01:
                              ingress:
                                class: nginx
                  productTierId: pt-12345678
                  proxyType: PortsBasedProxy
                  resourceType: Generic
                  serviceId: s-12345678
                  terraformConfigurations:
                    Accusamus sed facere consectetur et qui.:
                      gitConfiguration:
                        accessToken: my-token
                        commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                        referenceName: tags/v1.0.0
                        repositoryUrl: https://github.com/username/myrepo
                        userName: my-user
                      privateModuleGitAccessTokens:
                        tokenName: accessToken
                      requiredOutputKeys:
                      - output1
                      requiredOutputs:
                      - exported: true
                        key: output1
                      terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
                      terraformPath: /project1/tf
                    Sequi asperiores.:
                      gitConfiguration:
                        accessToken: my-token
                        commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                        referenceName: tags/v1.0.0
                        repositoryUrl: https://github.com/username/myrepo
                        userName: my-user
                      privateModuleGitAccessTokens:
                        tokenName: accessToken
                      requiredOutputKeys:
                      - output1
                      requiredOutputs:
                      - exported: true
                        key: output1
                      terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
                      terraformPath: /project1/tf
                - actionHooks:
                  - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
                    scope: CLUSTER
                    type: INIT
                  additionalSecurityContext:
                    AddCapabilities:
                    - CAP_NET_ADMIN
                    - CAP_NET_RAW
                    DropCapabilities:
                    - CAP_NET_ADMIN
                    - CAP_NET_RAW
                    SupplementalGroupIDs:
                    - 1001
                    - 999
                  backupConfiguration:
                    backupPeriodInHours: 24
                    backupRetentionInDays: 7
                  blobStorageConfiguration:
                    GCSConfiguration: {}
                    S3Configuration: {}
                  capabilities:
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  customLabels:
                    key: value
                  customSysCTLs:
                    net.ipv4.tcp_syncookies: "1"
                  customULimits:
                  - ULimitsName: NoProc
                    ULimitsType: Soft
                    ULimitsValue: 1000
                  - ULimitsName: NoFile
                    ULimitsType: Hard
                    ULimitsValue: 2048
                  dependencies:
                  - parameterMap:
                      clusterId: writerId
                      clusterOrg: userDatabase
                    resourceId: r-12345678
                  - parameterMap:
                      clusterId: readerId
                      clusterOrg: userDatabase
                    resourceId: r-abcdef12
                  description: An resource to manage a hosted public SaaS offering
                    of a multi-writer MySQL service
                  environmentVariables:
                  - name: MYSQL_ROOT_PASSWORD
                    value: password
                  fileSystemConfiguration:
                    EFSFileSystemConfiguration:
                      PerformanceMode: generalPurpose|maxIO
                      ProvisionedThroughputInMibps: 125
                      ThroughputMode: provisioned|bursting|elastic
                  helmChartConfiguration:
                    chartName: my-chart
                    chartRepoName: my-repo
                    chartRepoUrl: https://my-repo.com
                    chartValues:
                      key1: value1
                      key2: 3
                      key3:
                        key4: value4
                    chartVersion: 1.0.0
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    password: my-password
                    runtimeConfiguration:
                      disableHooks: true
                      recreate: true
                      resetThenReuseValues: true
                      resetValues: true
                      reuseValues: true
                      skipCRDs: true
                      timeoutNanos: 1000000000
                      upgradeCRDs: true
                      wait: true
                      waitForJobs: true
                    username: my-user
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  internal: false
                  isDeprecated: false
                  jobConfig:
                    activeDeadlineSeconds: 300
                    backoffLimit: 5
                  key: galera
                  kustomizeConfiguration:
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    gitConfiguration:
                      accessToken: my-token
                      commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    helmChartDependencies:
                    - chartName: cert-manager
                      chartVersion: v1.5.3
                    - chartName: nginx-ingress
                      chartVersion: v0.48.1
                    - chartName: external-dns
                      chartVersion: v0.7.0
                    - chartName: cnpg-operator
                      chartVersion: v0.23.1
                    kustomizePath: /kustomize
                  l4LoadBalancerConfiguration:
                    ingressPortConfiguration:
                    - associatedResourceIDs:
                      - r-12345678
                      - r-abcdef12
                      backendPort: 8080
                      ingressPort: 1234
                    - associatedResourceIDs:
                      - r-12345678
                      - r-abcdef12
                      backendPort: 8081
                      ingressPort: 5678
                    - associatedResourceIDs:
                      - r-vwxybz12
                      - r-poij122v
                      backendPort: 8082
                      ingressPort: 9012
                  l7LoadBalancerConfiguration:
                    paths:
                    - associatedResourceID: r-12345678
                      path: /path
                      port: 8080
                  name: Galera
                  operatorCRDConfiguration:
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    helmChartDependencies:
                    - chartName: cert-manager
                      chartVersion: v1.5.3
                    - chartName: nginx-ingress
                      chartVersion: v0.48.1
                    - chartName: external-dns
                      chartVersion: v0.7.0
                    - chartName: cnpg-operator
                      chartVersion: v0.23.1
                    outputParameters:
                      expiresAt: $out.status.notAfter
                      issuerName: letsencrypt-prod
                    readinessConditions:
                      $out.status.conditions[?(@.type=='Ready')].status: true
                    supplementalFiles:
                    - |
                      apiVersion: cert-manager.io/v1
                      kind: ClusterIssuer
                      metadata:
                        name: letsencrypt-prod
                      spec:
                        acme:
                          server: https://acme-v02.api.letsencrypt.org/directory
                    - |-
                      apiVersion: ingress.nginx.io/v1
                      kind: IngressClass
                      metadata:
                        name: nginx
                      spec:
                        controller: nginx.org/ingress-controller
                    template: |-
                      apiVersion: cert-manager.io/v1
                      kind: ClusterIssuer
                      metadata:
                        name: letsencrypt-prod
                      spec:
                        acme:
                          server: https://acme-v02.api.letsencrypt.org/directory
                          email: test@example.com
                          privateKeySecretRef:
                            name: letsencrypt-prod
                          solvers:
                          - http01:
                              ingress:
                                class: nginx
                  productTierId: pt-12345678
                  proxyType: PortsBasedProxy
                  resourceType: Generic
                  serviceId: s-12345678
                  terraformConfigurations:
                    Accusamus sed facere consectetur et qui.:
                      gitConfiguration:
                        accessToken: my-token
                        commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                        referenceName: tags/v1.0.0
                        repositoryUrl: https://github.com/username/myrepo
                        userName: my-user
                      privateModuleGitAccessTokens:
                        tokenName: accessToken
                      requiredOutputKeys:
                      - output1
                      requiredOutputs:
                      - exported: true
                        key: output1
                      terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
                      terraformPath: /project1/tf
                    Sequi asperiores.:
                      gitConfiguration:
                        accessToken: my-token
                        commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                        referenceName: tags/v1.0.0
                        repositoryUrl: https://github.com/username/myrepo
                        userName: my-user
                      privateModuleGitAccessTokens:
                        tokenName: accessToken
                      requiredOutputKeys:
                      - output1
                      requiredOutputs:
                      - exported: true
                        key: output1
                      terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
                      terraformPath: /project1/tf
                - actionHooks:
                  - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
                    scope: CLUSTER
                    type: INIT
                  additionalSecurityContext:
                    AddCapabilities:
                    - CAP_NET_ADMIN
                    - CAP_NET_RAW
                    DropCapabilities:
                    - CAP_NET_ADMIN
                    - CAP_NET_RAW
                    SupplementalGroupIDs:
                    - 1001
                    - 999
                  backupConfiguration:
                    backupPeriodInHours: 24
                    backupRetentionInDays: 7
                  blobStorageConfiguration:
                    GCSConfiguration: {}
                    S3Configuration: {}
                  capabilities:
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  customLabels:
                    key: value
                  customSysCTLs:
                    net.ipv4.tcp_syncookies: "1"
                  customULimits:
                  - ULimitsName: NoProc
                    ULimitsType: Soft
                    ULimitsValue: 1000
                  - ULimitsName: NoFile
                    ULimitsType: Hard
                    ULimitsValue: 2048
                  dependencies:
                  - parameterMap:
                      clusterId: writerId
                      clusterOrg: userDatabase
                    resourceId: r-12345678
                  - parameterMap:
                      clusterId: readerId
                      clusterOrg: userDatabase
                    resourceId: r-abcdef12
                  description: An resource to manage a hosted public SaaS offering
                    of a multi-writer MySQL service
                  environmentVariables:
                  - name: MYSQL_ROOT_PASSWORD
                    value: password
                  fileSystemConfiguration:
                    EFSFileSystemConfiguration:
                      PerformanceMode: generalPurpose|maxIO
                      ProvisionedThroughputInMibps: 125
                      ThroughputMode: provisioned|bursting|elastic
                  helmChartConfiguration:
                    chartName: my-chart
                    chartRepoName: my-repo
                    chartRepoUrl: https://my-repo.com
                    chartValues:
                      key1: value1
                      key2: 3
                      key3:
                        key4: value4
                    chartVersion: 1.0.0
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    password: my-password
                    runtimeConfiguration:
                      disableHooks: true
                      recreate: true
                      resetThenReuseValues: true
                      resetValues: true
                      reuseValues: true
                      skipCRDs: true
                      timeoutNanos: 1000000000
                      upgradeCRDs: true
                      wait: true
                      waitForJobs: true
                    username: my-user
                  id: r-12345678
                  imageConfigId: imgc-12345678
                  infraConfigId: ic-12345678
                  internal: false
                  isDeprecated: false
                  jobConfig:
                    activeDeadlineSeconds: 300
                    backoffLimit: 5
                  key: galera
                  kustomizeConfiguration:
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    gitConfiguration:
                      accessToken: my-token
                      commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    helmChartDependencies:
                    - chartName: cert-manager
                      chartVersion: v1.5.3
                    - chartName: nginx-ingress
                      chartVersion: v0.48.1
                    - chartName: external-dns
                      chartVersion: v0.7.0
                    - chartName: cnpg-operator
                      chartVersion: v0.23.1
                    kustomizePath: /kustomize
                  l4LoadBalancerConfiguration:
                    ingressPortConfiguration:
                    - associatedResourceIDs:
                      - r-12345678
                      - r-abcdef12
                      backendPort: 8080
                      ingressPort: 1234
                    - associatedResourceIDs:
                      - r-12345678
                      - r-abcdef12
                      backendPort: 8081
                      ingressPort: 5678
                    - associatedResourceIDs:
                      - r-vwxybz12
                      - r-poij122v
                      backendPort: 8082
                      ingressPort: 9012
                  l7LoadBalancerConfiguration:
                    paths:
                    - associatedResourceID: r-12345678
                      path: /path
                      port: 8080
                  name: Galera
                  operatorCRDConfiguration:
                    endpointConfiguration:
                      admin:
                        host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                        networkingType: PRIVATE
                        ports:
                        - 8080
                        - 8081
                        primary: false
                      cluster:
                        host: https://my-endpoint.com
                        networkingType: PUBLIC
                        ports:
                        - 8080
                        - 8081
                        primary: true
                    helmChartDependencies:
                    - chartName: cert-manager
                      chartVersion: v1.5.3
                    - chartName: nginx-ingress
                      chartVersion: v0.48.1
                    - chartName: external-dns
                      chartVersion: v0.7.0
                    - chartName: cnpg-operator
                      chartVersion: v0.23.1
                    outputParameters:
                      expiresAt: $out.status.notAfter
                      issuerName: letsencrypt-prod
                    readinessConditions:
                      $out.status.conditions[?(@.type=='Ready')].status: true
                    supplementalFiles:
                    - |
                      apiVersion: cert-manager.io/v1
                      kind: ClusterIssuer
                      metadata:
                        name: letsencrypt-prod
                      spec:
                        acme:
                          server: https://acme-v02.api.letsencrypt.org/directory
                    - |-
                      apiVersion: ingress.nginx.io/v1
                      kind: IngressClass
                      metadata:
                        name: nginx
                      spec:
                        controller: nginx.org/ingress-controller
                    template: |-
                      apiVersion: cert-manager.io/v1
                      kind: ClusterIssuer
                      metadata:
                        name: letsencrypt-prod
                      spec:
                        acme:
                          server: https://acme-v02.api.letsencrypt.org/directory
                          email: test@example.com
                          privateKeySecretRef:
                            name: letsencrypt-prod
                          solvers:
                          - http01:
                              ingress:
                                class: nginx
                  productTierId: pt-12345678
                  proxyType: PortsBasedProxy
                  resourceType: Generic
                  serviceId: s-12345678
                  terraformConfigurations:
                    Accusamus sed facere consectetur et qui.:
                      gitConfiguration:
                        accessToken: my-token
                        commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                        referenceName: tags/v1.0.0
                        repositoryUrl: https://github.com/username/myrepo
                        userName: my-user
                      privateModuleGitAccessTokens:
                        tokenName: accessToken
                      requiredOutputKeys:
                      - output1
                      requiredOutputs:
                      - exported: true
                        key: output1
                      terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
                      terraformPath: /project1/tf
                    Sequi asperiores.:
                      gitConfiguration:
                        accessToken: my-token
                        commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                        referenceName: tags/v1.0.0
                        repositoryUrl: https://github.com/username/myrepo
                        userName: my-user
                      privateModuleGitAccessTokens:
                        tokenName: accessToken
                      requiredOutputKeys:
                      - output1
                      requiredOutputs:
                      - exported: true
                        key: output1
                      terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
                      terraformPath: /project1/tf
              schema:
                $ref: '#/components/schemas/ListResourcesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list resources"
      security:
      - api_key_header_Authorization: []
      summary: ListResources resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource:
    post:
      operationId: resource-api#CreateResource
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              additionalSecurityContext:
                AddCapabilities:
                - CAP_NET_ADMIN
                - CAP_NET_RAW
                DropCapabilities:
                - CAP_NET_ADMIN
                - CAP_NET_RAW
                SupplementalGroupIDs:
                - 1001
                - 999
              backupConfiguration:
                backupPeriodInHours: 24
                backupRetentionInDays: 7
              blobStorageConfiguration:
                GCSConfiguration: {}
                S3Configuration: {}
              customLabels:
                key: value
              customSysCTLs:
                net.ipv4.tcp_syncookies: "1"
              customULimits:
              - ULimitsName: NoProc
                ULimitsType: Soft
                ULimitsValue: 1000
              - ULimitsName: NoFile
                ULimitsType: Hard
                ULimitsValue: 2048
              description: A resource to manage a hosted public SaaS offering of a
                multi-writer MySQL service
              environmentVariables:
              - key: MYSQL_ROOT_PASSWORD
                value: password
              fileSystemConfiguration:
                EFSFileSystemConfiguration:
                  PerformanceMode: generalPurpose|maxIO
                  ProvisionedThroughputInMibps: 125
                  ThroughputMode: provisioned|bursting|elastic
              helmChartConfiguration:
                chartName: my-chart
                chartRepoName: my-repo
                chartRepoUrl: https://my-repo.com
                chartValues:
                  key1: value1
                  key2: 3
                  key3:
                    key4: value4
                chartVersion: 1.0.0
                endpointConfiguration:
                  admin:
                    host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                    networkingType: PRIVATE
                    ports:
                    - 8080
                    - 8081
                    primary: false
                  cluster:
                    host: https://my-endpoint.com
                    networkingType: PUBLIC
                    ports:
                    - 8080
                    - 8081
                    primary: true
                password: my-password
                runtimeConfiguration:
                  disableHooks: true
                  recreate: true
                  resetThenReuseValues: true
                  resetValues: true
                  reuseValues: true
                  skipCRDs: true
                  timeoutNanos: 1000000000
                  upgradeCRDs: true
                  wait: true
                  waitForJobs: true
                username: my-user
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              internal: true
              isProxy: false
              jobConfig:
                activeDeadlineSeconds: 300
                backoffLimit: 5
              key: galera
              kustomizeConfiguration:
                endpointConfiguration:
                  admin:
                    host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                    networkingType: PRIVATE
                    ports:
                    - 8080
                    - 8081
                    primary: false
                  cluster:
                    host: https://my-endpoint.com
                    networkingType: PUBLIC
                    ports:
                    - 8080
                    - 8081
                    primary: true
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                helmChartDependencies:
                - chartName: cert-manager
                  chartVersion: v1.5.3
                - chartName: nginx-ingress
                  chartVersion: v0.48.1
                - chartName: external-dns
                  chartVersion: v0.7.0
                - chartName: cnpg-operator
                  chartVersion: v0.23.1
                kustomizePath: /kustomize
              l4LoadBalancerConfiguration:
                ingressPortConfiguration:
                - associatedResourceIDs:
                  - r-12345678
                  - r-abcdef12
                  backendPort: 8080
                  ingressPort: 1234
                - associatedResourceIDs:
                  - r-12345678
                  - r-abcdef12
                  backendPort: 8081
                  ingressPort: 5678
                - associatedResourceIDs:
                  - r-vwxybz12
                  - r-poij122v
                  backendPort: 8082
                  ingressPort: 9012
              l7LoadBalancerConfiguration:
                paths:
                - associatedResourceID: r-12345678
                  path: /path
                  port: 8080
              name: Galera
              operatorCRDConfiguration:
                endpointConfiguration:
                  admin:
                    host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                    networkingType: PRIVATE
                    ports:
                    - 8080
                    - 8081
                    primary: false
                  cluster:
                    host: https://my-endpoint.com
                    networkingType: PUBLIC
                    ports:
                    - 8080
                    - 8081
                    primary: true
                helmChartDependencies:
                - chartName: cert-manager
                  chartVersion: v1.5.3
                - chartName: nginx-ingress
                  chartVersion: v0.48.1
                - chartName: external-dns
                  chartVersion: v0.7.0
                - chartName: cnpg-operator
                  chartVersion: v0.23.1
                outputParameters:
                  expiresAt: $out.status.notAfter
                  issuerName: letsencrypt-prod
                readinessConditions:
                  $out.status.conditions[?(@.type=='Ready')].status: true
                supplementalFiles:
                - |
                  apiVersion: cert-manager.io/v1
                  kind: ClusterIssuer
                  metadata:
                    name: letsencrypt-prod
                  spec:
                    acme:
                      server: https://acme-v02.api.letsencrypt.org/directory
                - |-
                  apiVersion: ingress.nginx.io/v1
                  kind: IngressClass
                  metadata:
                    name: nginx
                  spec:
                    controller: nginx.org/ingress-controller
                template: |-
                  apiVersion: cert-manager.io/v1
                  kind: ClusterIssuer
                  metadata:
                    name: letsencrypt-prod
                  spec:
                    acme:
                      server: https://acme-v02.api.letsencrypt.org/directory
                      email: test@example.com
                      privateKeySecretRef:
                        name: letsencrypt-prod
                      solvers:
                      - http01:
                          ingress:
                            class: nginx
              productTierId: pt-12345678
              proxyType: PortsBasedProxy
              resourceDependencies:
              - parameterMap:
                  userDatabase: clusterOrg
                  writerId: clusterWriterId
                resourceId: r-12345678
              - parameterMap:
                  readerId: clusterReaderId
                  userDatabase: clusterOrg
                resourceId: r-abcdef12
              resourceType: Generic
              terraformConfigurations:
                Ad eos odio minima ad.:
                  gitConfiguration:
                    accessToken: my-token
                    commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  privateModuleGitAccessTokens:
                    tokenName: accessToken
                  requiredOutputKeys:
                  - output1
                  requiredOutputs:
                  - exported: true
                    key: output1
                  terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
                  terraformPath: /project1/tf
                Culpa perferendis et qui.:
                  gitConfiguration:
                    accessToken: my-token
                    commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  privateModuleGitAccessTokens:
                    tokenName: accessToken
                  requiredOutputKeys:
                  - output1
                  requiredOutputs:
                  - exported: true
                    key: output1
                  terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
                  terraformPath: /project1/tf
                Officiis facilis impedit animi et.:
                  gitConfiguration:
                    accessToken: my-token
                    commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  privateModuleGitAccessTokens:
                    tokenName: accessToken
                  requiredOutputKeys:
                  - output1
                  requiredOutputs:
                  - exported: true
                    key: output1
                  terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
                  terraformPath: /project1/tf
            schema:
              $ref: '#/components/schemas/CreateResourceRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: r-12345678
              schema:
                description: resource ID created
                example: r-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create an resource"
      security:
      - api_key_header_Authorization: []
      summary: CreateResource resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}:
    delete:
      operationId: resource-api#DeleteResource
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Vero accusantium minima.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete an resource"
      security:
      - api_key_header_Authorization: []
      summary: DeleteResource resource-api
      tags:
      - resource-api
    get:
      operationId: resource-api#DescribeResource
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the resource to describe. If not specified,\
          \ the latest version is described."
        example: Magnam omnis illum beatae blanditiis.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the resource to describe. If not specified,\
            \ the latest version is described."
          example: Cum consequatur ut vero.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the resource to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Dolores veritatis est sit officiis eveniet iure.
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Cupiditate dolore quod est et nihil.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                actionHooks:
                - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
                  scope: CLUSTER
                  type: INIT
                additionalSecurityContext:
                  AddCapabilities:
                  - CAP_NET_ADMIN
                  - CAP_NET_RAW
                  DropCapabilities:
                  - CAP_NET_ADMIN
                  - CAP_NET_RAW
                  SupplementalGroupIDs:
                  - 1001
                  - 999
                backupConfiguration:
                  backupPeriodInHours: 24
                  backupRetentionInDays: 7
                blobStorageConfiguration:
                  GCSConfiguration: {}
                  S3Configuration: {}
                capabilities:
                - capability: SERVERLESS
                  configuration:
                    EnableAutoStop: true
                    MinimumNodesInPool: 5
                    PortsMappingProxyConfig:
                      MaxNumberOfClustersPerProxyInstance: 50
                      NumberOfPortsPerCluster: 4
                    ProxyId: r-123456
                    ReferenceProxyKey: resource-proxy
                    TargetPort: 5432
                - capability: SERVERLESS
                  configuration:
                    EnableAutoStop: true
                    MinimumNodesInPool: 5
                    PortsMappingProxyConfig:
                      MaxNumberOfClustersPerProxyInstance: 50
                      NumberOfPortsPerCluster: 4
                    ProxyId: r-123456
                    ReferenceProxyKey: resource-proxy
                    TargetPort: 5432
                - capability: SERVERLESS
                  configuration:
                    EnableAutoStop: true
                    MinimumNodesInPool: 5
                    PortsMappingProxyConfig:
                      MaxNumberOfClustersPerProxyInstance: 50
                      NumberOfPortsPerCluster: 4
                    ProxyId: r-123456
                    ReferenceProxyKey: resource-proxy
                    TargetPort: 5432
                customLabels:
                  key: value
                customSysCTLs:
                  net.ipv4.tcp_syncookies: "1"
                customULimits:
                - ULimitsName: NoProc
                  ULimitsType: Soft
                  ULimitsValue: 1000
                - ULimitsName: NoFile
                  ULimitsType: Hard
                  ULimitsValue: 2048
                dependencies:
                - parameterMap:
                    clusterId: writerId
                    clusterOrg: userDatabase
                  resourceId: r-12345678
                - parameterMap:
                    clusterId: readerId
                    clusterOrg: userDatabase
                  resourceId: r-abcdef12
                description: An resource to manage a hosted public SaaS offering of
                  a multi-writer MySQL service
                environmentVariables:
                - name: MYSQL_ROOT_PASSWORD
                  value: password
                fileSystemConfiguration:
                  EFSFileSystemConfiguration:
                    PerformanceMode: generalPurpose|maxIO
                    ProvisionedThroughputInMibps: 125
                    ThroughputMode: provisioned|bursting|elastic
                helmChartConfiguration:
                  chartName: my-chart
                  chartRepoName: my-repo
                  chartRepoUrl: https://my-repo.com
                  chartValues:
                    key1: value1
                    key2: 3
                    key3:
                      key4: value4
                  chartVersion: 1.0.0
                  endpointConfiguration:
                    admin:
                      host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                      networkingType: PRIVATE
                      ports:
                      - 8080
                      - 8081
                      primary: false
                    cluster:
                      host: https://my-endpoint.com
                      networkingType: PUBLIC
                      ports:
                      - 8080
                      - 8081
                      primary: true
                  password: my-password
                  runtimeConfiguration:
                    disableHooks: true
                    recreate: true
                    resetThenReuseValues: true
                    resetValues: true
                    reuseValues: true
                    skipCRDs: true
                    timeoutNanos: 1000000000
                    upgradeCRDs: true
                    wait: true
                    waitForJobs: true
                  username: my-user
                id: r-12345678
                imageConfigId: imgc-12345678
                infraConfigId: ic-12345678
                internal: true
                isDeprecated: true
                jobConfig:
                  activeDeadlineSeconds: 300
                  backoffLimit: 5
                key: galera
                kustomizeConfiguration:
                  endpointConfiguration:
                    admin:
                      host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                      networkingType: PRIVATE
                      ports:
                      - 8080
                      - 8081
                      primary: false
                    cluster:
                      host: https://my-endpoint.com
                      networkingType: PUBLIC
                      ports:
                      - 8080
                      - 8081
                      primary: true
                  gitConfiguration:
                    accessToken: my-token
                    commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  helmChartDependencies:
                  - chartName: cert-manager
                    chartVersion: v1.5.3
                  - chartName: nginx-ingress
                    chartVersion: v0.48.1
                  - chartName: external-dns
                    chartVersion: v0.7.0
                  - chartName: cnpg-operator
                    chartVersion: v0.23.1
                  kustomizePath: /kustomize
                l4LoadBalancerConfiguration:
                  ingressPortConfiguration:
                  - associatedResourceIDs:
                    - r-12345678
                    - r-abcdef12
                    backendPort: 8080
                    ingressPort: 1234
                  - associatedResourceIDs:
                    - r-12345678
                    - r-abcdef12
                    backendPort: 8081
                    ingressPort: 5678
                  - associatedResourceIDs:
                    - r-vwxybz12
                    - r-poij122v
                    backendPort: 8082
                    ingressPort: 9012
                l7LoadBalancerConfiguration:
                  paths:
                  - associatedResourceID: r-12345678
                    path: /path
                    port: 8080
                name: Galera
                operatorCRDConfiguration:
                  endpointConfiguration:
                    admin:
                      host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                      networkingType: PRIVATE
                      ports:
                      - 8080
                      - 8081
                      primary: false
                    cluster:
                      host: https://my-endpoint.com
                      networkingType: PUBLIC
                      ports:
                      - 8080
                      - 8081
                      primary: true
                  helmChartDependencies:
                  - chartName: cert-manager
                    chartVersion: v1.5.3
                  - chartName: nginx-ingress
                    chartVersion: v0.48.1
                  - chartName: external-dns
                    chartVersion: v0.7.0
                  - chartName: cnpg-operator
                    chartVersion: v0.23.1
                  outputParameters:
                    expiresAt: $out.status.notAfter
                    issuerName: letsencrypt-prod
                  readinessConditions:
                    $out.status.conditions[?(@.type=='Ready')].status: true
                  supplementalFiles:
                  - |
                    apiVersion: cert-manager.io/v1
                    kind: ClusterIssuer
                    metadata:
                      name: letsencrypt-prod
                    spec:
                      acme:
                        server: https://acme-v02.api.letsencrypt.org/directory
                  - |-
                    apiVersion: ingress.nginx.io/v1
                    kind: IngressClass
                    metadata:
                      name: nginx
                    spec:
                      controller: nginx.org/ingress-controller
                  template: |-
                    apiVersion: cert-manager.io/v1
                    kind: ClusterIssuer
                    metadata:
                      name: letsencrypt-prod
                    spec:
                      acme:
                        server: https://acme-v02.api.letsencrypt.org/directory
                        email: test@example.com
                        privateKeySecretRef:
                          name: letsencrypt-prod
                        solvers:
                        - http01:
                            ingress:
                              class: nginx
                productTierId: pt-12345678
                proxyType: PortsBasedProxy
                resourceType: Generic
                serviceId: s-12345678
                terraformConfigurations:
                  Et minima dolor.:
                    gitConfiguration:
                      accessToken: my-token
                      commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                      referenceName: tags/v1.0.0
                      repositoryUrl: https://github.com/username/myrepo
                      userName: my-user
                    privateModuleGitAccessTokens:
                      tokenName: accessToken
                    requiredOutputKeys:
                    - output1
                    requiredOutputs:
                    - exported: true
                      key: output1
                    terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
                    terraformPath: /project1/tf
              schema:
                $ref: '#/components/schemas/DescribeResourceResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe an resource"
      security:
      - api_key_header_Authorization: []
      summary: DescribeResource resource-api
      tags:
      - resource-api
    patch:
      operationId: resource-api#UpdateResource
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Eos et saepe culpa quos.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              additionalSecurityContext:
                AddCapabilities:
                - CAP_NET_ADMIN
                - CAP_NET_RAW
                DropCapabilities:
                - CAP_NET_ADMIN
                - CAP_NET_RAW
                SupplementalGroupIDs:
                - 1001
                - 999
              backupConfiguration:
                backupPeriodInHours: 24
                backupRetentionInDays: 7
              customLabels:
                key: value
              customSysCTLs:
                net.ipv4.tcp_syncookies: "1"
              customULimits:
              - ULimitsName: NoProc
                ULimitsType: Soft
                ULimitsValue: 1000
              - ULimitsName: NoFile
                ULimitsType: Hard
                ULimitsValue: 2048
              dependencies:
              - parameterMap:
                  clusterId: writerId
                  clusterOrg: userDatabase
                resourceId: r-12345678
              - parameterMap:
                  clusterId: readerId
                  clusterOrg: userDatabase
                resourceId: r-abcdef12
              description: A resource to manage a hosted public SaaS offering of a
                multi-writer MySQL service
              environmentVariables:
              - key: MYSQL_ROOT_PASSWORD
                value: password
              helmChartConfiguration:
                chartName: my-chart
                chartRepoName: my-repo
                chartRepoUrl: https://my-repo.com
                chartValues:
                  key1: value1
                  key2: 3
                  key3:
                    key4: value4
                chartVersion: 1.0.0
                endpointConfiguration:
                  admin:
                    host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                    networkingType: PRIVATE
                    ports:
                    - 8080
                    - 8081
                    primary: false
                  cluster:
                    host: https://my-endpoint.com
                    networkingType: PUBLIC
                    ports:
                    - 8080
                    - 8081
                    primary: true
                password: my-password
                runtimeConfiguration:
                  disableHooks: true
                  recreate: true
                  resetThenReuseValues: true
                  resetValues: true
                  reuseValues: true
                  skipCRDs: true
                  timeoutNanos: 1000000000
                  upgradeCRDs: true
                  wait: true
                  waitForJobs: true
                username: my-user
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              jobConfig:
                activeDeadlineSeconds: 300
                backoffLimit: 5
              kustomizeConfiguration:
                endpointConfiguration:
                  admin:
                    host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                    networkingType: PRIVATE
                    ports:
                    - 8080
                    - 8081
                    primary: false
                  cluster:
                    host: https://my-endpoint.com
                    networkingType: PUBLIC
                    ports:
                    - 8080
                    - 8081
                    primary: true
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                helmChartDependencies:
                - chartName: cert-manager
                  chartVersion: v1.5.3
                - chartName: nginx-ingress
                  chartVersion: v0.48.1
                - chartName: external-dns
                  chartVersion: v0.7.0
                - chartName: cnpg-operator
                  chartVersion: v0.23.1
                kustomizePath: /kustomize
              l4LoadBalancerConfiguration:
                ingressPortConfiguration:
                - associatedResourceIDs:
                  - r-12345678
                  - r-abcdef12
                  backendPort: 8080
                  ingressPort: 1234
                - associatedResourceIDs:
                  - r-12345678
                  - r-abcdef12
                  backendPort: 8081
                  ingressPort: 5678
                - associatedResourceIDs:
                  - r-vwxybz12
                  - r-poij122v
                  backendPort: 8082
                  ingressPort: 9012
              l7LoadBalancerConfiguration:
                paths:
                - associatedResourceID: r-12345678
                  path: /path
                  port: 8080
              name: Galera
              operatorCRDConfiguration:
                endpointConfiguration:
                  admin:
                    host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                    networkingType: PRIVATE
                    ports:
                    - 8080
                    - 8081
                    primary: false
                  cluster:
                    host: https://my-endpoint.com
                    networkingType: PUBLIC
                    ports:
                    - 8080
                    - 8081
                    primary: true
                helmChartDependencies:
                - chartName: cert-manager
                  chartVersion: v1.5.3
                - chartName: nginx-ingress
                  chartVersion: v0.48.1
                - chartName: external-dns
                  chartVersion: v0.7.0
                - chartName: cnpg-operator
                  chartVersion: v0.23.1
                outputParameters:
                  expiresAt: $out.status.notAfter
                  issuerName: letsencrypt-prod
                readinessConditions:
                  $out.status.conditions[?(@.type=='Ready')].status: true
                supplementalFiles:
                - |
                  apiVersion: cert-manager.io/v1
                  kind: ClusterIssuer
                  metadata:
                    name: letsencrypt-prod
                  spec:
                    acme:
                      server: https://acme-v02.api.letsencrypt.org/directory
                - |-
                  apiVersion: ingress.nginx.io/v1
                  kind: IngressClass
                  metadata:
                    name: nginx
                  spec:
                    controller: nginx.org/ingress-controller
                template: |-
                  apiVersion: cert-manager.io/v1
                  kind: ClusterIssuer
                  metadata:
                    name: letsencrypt-prod
                  spec:
                    acme:
                      server: https://acme-v02.api.letsencrypt.org/directory
                      email: test@example.com
                      privateKeySecretRef:
                        name: letsencrypt-prod
                      solvers:
                      - http01:
                          ingress:
                            class: nginx
              terraformConfigurations:
                Ut earum.:
                  gitConfiguration:
                    accessToken: my-token
                    commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  privateModuleGitAccessTokens:
                    tokenName: accessToken
                  requiredOutputKeys:
                  - output1
                  requiredOutputs:
                  - exported: true
                    key: output1
                  terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
                  terraformPath: /project1/tf
            schema:
              $ref: '#/components/schemas/UpdateResourceRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update an resource"
      security:
      - api_key_header_Authorization: []
      summary: UpdateResource resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/action-hook:
    delete:
      operationId: resource-api#DeregisterActionHook
      parameters:
      - description: The ID of the service to which the hook belongs
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource to which the hook belongs
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Eum natus quae sequi praesentium enim sint.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              scope: CLUSTER
              type: ADD
            schema:
              $ref: '#/components/schemas/DeregisterActionHookRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to deregister an\
            \ action hook"
      security:
      - api_key_header_Authorization: []
      summary: DeregisterActionHook resource-api
      tags:
      - resource-api
    get:
      operationId: resource-api#ListActionHooks
      parameters:
      - description: The ID of the service to which the hook belongs
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource to which the hook belongs
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Placeat cum itaque aut in voluptate eaque.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                hooks:
                - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
                  customCommand:
                  - /bin/sh
                  - -c
                  customImage: my-custom-image:latest
                  scope: CLUSTER
                  type: ADD
                - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
                  customCommand:
                  - /bin/sh
                  - -c
                  customImage: my-custom-image:latest
                  scope: CLUSTER
                  type: ADD
              schema:
                $ref: '#/components/schemas/ListActionHooksResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list action hooks"
      security:
      - api_key_header_Authorization: []
      summary: ListActionHooks resource-api
      tags:
      - resource-api
    post:
      operationId: resource-api#RegisterActionHook
      parameters:
      - description: The ID of the service to which the hook belongs
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource to which the hook belongs
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Quae sunt saepe dolore.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
              customCommand:
              - /bin/sh
              - -c
              customImage: my-custom-image:latest
              scope: CLUSTER
              type: ADD
            schema:
              $ref: '#/components/schemas/RegisterActionHookRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to register an action\
            \ hook"
      security:
      - api_key_header_Authorization: []
      summary: RegisterActionHook resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/capability:
    delete:
      operationId: resource-api#DisableResourceCapability
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Aut voluptatem odio quas ea voluptatem.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              capability: SERVERLESS
            schema:
              $ref: '#/components/schemas/DisableResourceCapabilityRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to disable resource\
            \ capabilities"
      security:
      - api_key_header_Authorization: []
      summary: DisableResourceCapability resource-api
      tags:
      - resource-api
    get:
      operationId: resource-api#ListResourceCapabilities
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the instance to describe. If not specified,\
          \ the latest version is described."
        example: Sit sed labore et optio cum et.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the instance to describe. If not specified,\
            \ the latest version is described."
          example: Modi ullam odit et sed.
          type: string
        style: form
      - allowEmptyValue: true
        description: Product tier id of the instance to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Voluptatum laudantium enim similique rerum ea.
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Ipsum qui quasi similique.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                capabilities:
                - capability: SERVERLESS
                  configuration:
                    EnableAutoStop: true
                    MinimumNodesInPool: 5
                    PortsMappingProxyConfig:
                      MaxNumberOfClustersPerProxyInstance: 50
                      NumberOfPortsPerCluster: 4
                    ProxyId: r-123456
                    ReferenceProxyKey: resource-proxy
                    TargetPort: 5432
                - capability: SERVERLESS
                  configuration:
                    EnableAutoStop: true
                    MinimumNodesInPool: 5
                    PortsMappingProxyConfig:
                      MaxNumberOfClustersPerProxyInstance: 50
                      NumberOfPortsPerCluster: 4
                    ProxyId: r-123456
                    ReferenceProxyKey: resource-proxy
                    TargetPort: 5432
                - capability: SERVERLESS
                  configuration:
                    EnableAutoStop: true
                    MinimumNodesInPool: 5
                    PortsMappingProxyConfig:
                      MaxNumberOfClustersPerProxyInstance: 50
                      NumberOfPortsPerCluster: 4
                    ProxyId: r-123456
                    ReferenceProxyKey: resource-proxy
                    TargetPort: 5432
              schema:
                $ref: '#/components/schemas/ListResourceCapabilitiesResponse'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to disable resource\
            \ capabilities"
      security:
      - api_key_header_Authorization: []
      summary: ListResourceCapabilities resource-api
      tags:
      - resource-api
    put:
      operationId: resource-api#EnableResourceCapability
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Fugiat libero autem tempore sunt explicabo cupiditate.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            schema:
              $ref: '#/components/schemas/EnableResourceCapabilityRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to enable resource\
            \ capabilities"
      security:
      - api_key_header_Authorization: []
      summary: EnableResourceCapability resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/dependent-resource:
    get:
      operationId: resource-api#ListDependentResource
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Numquam dolorem quae eveniet.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: r-12345678
                ids:
                - r-12345678
                - r-abcdefgh
                - r-1234abcd
                nextPageToken: next-token
                serviceId: s-12345678
              schema:
                $ref: '#/components/schemas/ListDependentResourcesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list resources"
      security:
      - api_key_header_Authorization: []
      summary: ListDependentResource resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/deprecate:
    patch:
      operationId: resource-api#DeprecateResource
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Nesciunt impedit mollitia adipisci amet doloribus.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to deprecate an resource"
      security:
      - api_key_header_Authorization: []
      summary: DeprecateResource resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/environment-variables:
    delete:
      operationId: resource-api#UnsetEnvironmentVariables
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Dignissimos architecto soluta et facilis laboriosam rerum.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              environmentVariables:
              - key: MYSQL_ROOT_PASSWORD
                value: password
            schema:
              $ref: '#/components/schemas/UnsetEnvironmentVariablesRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to remove environment\
            \ variables from a resource"
      security:
      - api_key_header_Authorization: []
      summary: UnsetEnvironmentVariables resource-api
      tags:
      - resource-api
    patch:
      operationId: resource-api#SetEnvironmentVariables
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Repudiandae et soluta consequatur fugit non id.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              environmentVariables:
              - key: MYSQL_ROOT_PASSWORD
                value: password
            schema:
              $ref: '#/components/schemas/SetEnvironmentVariablesRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to add environment\
            \ variables to a resource"
      security:
      - api_key_header_Authorization: []
      summary: SetEnvironmentVariables resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/file:
    get:
      operationId: resource-api#ListFiles
      parameters:
      - allowEmptyValue: true
        description: ProductTierId of the config file to describe
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Et quia voluptas nesciunt.
          type: string
        style: form
      - allowEmptyValue: true
        description: "Product tier version of the config file to describe. If missing,\
          \ last version is described"
        example: "1.0"
        explode: true
        in: query
        name: productTierVersion
        required: false
        schema:
          description: "Product tier version of the config file to describe. If missing,\
            \ last version is described"
          example: "1.0"
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Illum quia et in.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                files:
                - description: A file to store the configuration for the resource
                  fileId: f-12345678
                  mountPath: /etc/config
                  name: file.txt
                  size: 1234
                  type: Config
                  uploadTime: 2023-01-10T00:00:00Z
                  uploadedBy: user
                - description: A file to store the configuration for the resource
                  fileId: f-12345678
                  mountPath: /etc/config
                  name: file.txt
                  size: 1234
                  type: Config
                  uploadTime: 2023-01-10T00:00:00Z
                  uploadedBy: user
                - description: A file to store the configuration for the resource
                  fileId: f-12345678
                  mountPath: /etc/config
                  name: file.txt
                  size: 1234
                  type: Config
                  uploadTime: 2023-01-10T00:00:00Z
                  uploadedBy: user
              schema:
                $ref: '#/components/schemas/ListFilesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list files"
      security:
      - api_key_header_Authorization: []
      summary: ListFiles resource-api
      tags:
      - resource-api
    post:
      operationId: resource-api#AddFile
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Voluptas totam fugit reiciendis.
          type: string
        style: simple
      - description: "Content-Type header, must define value for multipart boundary."
        example: multipart/form-data; boundary=boundary
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          default: multipart/form-data; boundary=boundary
          description: "Content-Type header, must define value for multipart boundary."
          example: multipart/form-data; boundary=boundary
          pattern: "multipart/[^;]+; boundary=.+"
          type: string
        style: simple
      - description: The name of the file
        example: file.txt
        explode: false
        in: header
        name: Name
        required: true
        schema:
          description: The name of the file
          example: file.txt
          type: string
        style: simple
      - description: The description of the file
        example: A file to store the configuration for the resource
        explode: false
        in: header
        name: Description
        required: true
        schema:
          description: The description of the file
          example: A file to store the configuration for the resource
          type: string
        style: simple
      - description: The type of the file
        example: Config
        explode: false
        in: header
        name: FileType
        required: true
        schema:
          description: The type of the file
          example: Config|Secret
          type: string
        style: simple
      - description: The mount path of the file
        example: /etc/config
        explode: false
        in: header
        name: MountPath
        required: true
        schema:
          description: The mount path of the file
          example: /etc/config
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example: Quis doloribus consequuntur.
              schema:
                example: Est id.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "415":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_media_type: Error returned when the Content-Type header\
            \ does not define a multipart request."
      security:
      - api_key_header_Authorization: []
      summary: AddFile resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/file/{fileId}:
    delete:
      operationId: resource-api#RemoveFile
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Ut ea odit commodi et possimus.
          type: string
        style: simple
      - description: The ID of the file
        example: file-12345678
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          description: ID of a File
          example: Eveniet est eum ut itaque laboriosam reprehenderit.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when the requested file is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a file"
      security:
      - api_key_header_Authorization: []
      summary: RemoveFile resource-api
      tags:
      - resource-api
    get:
      operationId: resource-api#GetFile
      parameters:
      - allowEmptyValue: true
        description: Product Tier ID of the config files to list
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Dolor voluptatibus.
          type: string
        style: form
      - allowEmptyValue: true
        description: "Product Tier version of the config files to list. If missing,\
          \ last version is used"
        example: "1.0"
        explode: true
        in: query
        name: productTierVersion
        required: false
        schema:
          description: "Product Tier version of the config files to list. If missing,\
            \ last version is used"
          example: "1.0"
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Voluptas enim voluptas vel accusamus non.
          type: string
        style: simple
      - description: The ID of the file
        example: f-12345678
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          description: ID of a File
          example: Maiores sed et labore molestiae expedita rerum.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: OK response.
          headers:
            Content-Length:
              description: Length is the downloaded content length in bytes.
              example: 4194304
              explode: false
              schema:
                description: Length is the downloaded content length in bytes.
                example: 4194304
                format: int64
                type: integer
              style: simple
            Content-Type:
              description: "Content-Type header, must define value for multipart boundary."
              example: multipart/form-data; boundary=boundary
              explode: false
              schema:
                default: multipart/form-data; boundary=boundary
                description: "Content-Type header, must define value for multipart\
                  \ boundary."
                example: multipart/form-data; boundary=boundary
                type: string
              style: simple
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when the requested file is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a file"
      security:
      - api_key_header_Authorization: []
      summary: GetFile resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/file/{fileId}/content:
    put:
      operationId: resource-api#UpdateFileContent
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Voluptatum dignissimos mollitia veniam sapiente quis.
          type: string
        style: simple
      - description: The ID of the file
        example: f-12345678
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          description: ID of a File
          example: Qui earum dolorum.
          type: string
        style: simple
      - description: "Content-Type header, must define value for multipart boundary."
        example: multipart/form-data; boundary=boundary
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          default: multipart/form-data; boundary=boundary
          description: "Content-Type header, must define value for multipart boundary."
          example: multipart/form-data; boundary=boundary
          pattern: "multipart/[^;]+; boundary=.+"
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
      security:
      - api_key_header_Authorization: []
      summary: UpdateFileContent resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/file/{fileId}/metadata:
    patch:
      operationId: resource-api#UpdateFileMetadata
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Cumque cupiditate quo cupiditate impedit quis culpa.
          type: string
        style: simple
      - description: The ID of the file
        example: f-12345678
        explode: false
        in: path
        name: fileId
        required: true
        schema:
          description: ID of a File
          example: Debitis et voluptas labore.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A file to store the configuration for the resource
              mountPath: /etc/config
              name: file.txt
            schema:
              $ref: '#/components/schemas/UpdateFileMetadataRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
      security:
      - api_key_header_Authorization: []
      summary: UpdateFileMetadata resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/metrics:
    delete:
      operationId: resource-api#DeregisterResourceMetricsConfig
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Repellat quia.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response on failure to register resource metrics"
      security:
      - api_key_header_Authorization: []
      summary: DeregisterResourceMetricsConfig resource-api
      tags:
      - resource-api
    get:
      operationId: resource-api#DescribeResourceMetricsConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the resource to describe. If not specified,\
          \ the latest version is described."
        example: Cumque laudantium est.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the resource to describe. If not specified,\
            \ the latest version is described."
          example: Doloribus qui ea modi.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the resource to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Rerum quis aut quia voluptatibus aut.
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Nulla cum nihil dolor deleniti.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: r-12345678
                metricEndpoint: http://localhost:9187/metrics
                serviceId: s-12345678
              schema:
                $ref: '#/components/schemas/Describeresourcemetricsconfigresult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response when the requested resource is not found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response when requested resource is in an invalid\
            \ state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response on failure to describe resource metrics"
      security:
      - api_key_header_Authorization: []
      summary: DescribeResourceMetricsConfig resource-api
      tags:
      - resource-api
    post:
      operationId: resource-api#RegisterResourceMetricsConfig
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Laborum commodi dolores quisquam nemo omnis quaerat.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              metricEndpoint: http://localhost:9187/metrics
            schema:
              $ref: '#/components/schemas/RegisterResourceMetricsConfigRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response on failure to register resource metrics"
      security:
      - api_key_header_Authorization: []
      summary: RegisterResourceMetricsConfig resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{id}/resource-dependency/{resourceDependencyId}:
    delete:
      operationId: resource-api#RemoveResourceDependency
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Ut iusto aut amet.
          type: string
        style: simple
      - description: The ID of the resource dependency to remove
        example: r-12345678
        explode: false
        in: path
        name: resourceDependencyId
        required: true
        schema:
          description: ID of a resource
          example: Tenetur aut quasi perspiciatis sapiente repellendus.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to remove a resource\
            \ dependency from a resource"
      security:
      - api_key_header_Authorization: []
      summary: RemoveResourceDependency resource-api
      tags:
      - resource-api
    post:
      operationId: resource-api#AddResourceDependency
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource
        example: r-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a resource
          example: Harum commodi sapiente.
          type: string
        style: simple
      - description: The ID of the resource to be added as a dependency
        example: r-12345678
        explode: false
        in: path
        name: resourceDependencyId
        required: true
        schema:
          description: ID of a resource
          example: Consequuntur quaerat similique aliquam.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              parameterMap:
                clusterId: writerId
                clusterOrg: userDatabase
            schema:
              $ref: '#/components/schemas/AddResourceDependencyRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to add a resource\
            \ dependency to a resource"
      security:
      - api_key_header_Authorization: []
      summary: AddResourceDependency resource-api
      tags:
      - resource-api
  /2022-09-01-00/service/{serviceId}/resource/{resourceId}/input-parameter:
    get:
      operationId: input-parameter-api#ListInputParameter
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the instance to describe. If not specified,\
          \ the latest version is described."
        example: Similique hic tempore at.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the instance to describe. If not specified,\
            \ the latest version is described."
          example: Sit ut quae occaecati.
          type: string
        style: form
      - allowEmptyValue: true
        description: Product tier id of the instance to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Voluptatum cum voluptas commodi assumenda.
          type: string
        style: form
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource that this input parameter belongs to
        example: r-12345678
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          description: ID of a resource
          example: Suscipit et consectetur.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - ip-12345678
                - ip-12345679
                inputParameters:
                - defaultValue: "true"
                  dependentResourceId: r-12345678
                  description: Voluptatem architecto enim voluptatibus et magnam dolor.
                  hasOptions: false
                  id: var-12345678
                  isList: true
                  key: os
                  labeledOptions:
                    large: t3.xlarge
                    medium: t3.large
                    small: t3.medium
                  limits:
                    max: Vero maxime nihil iure esse nostrum sit.
                    maxLength: Qui adipisci quisquam labore qui voluptatem occaecati.
                    min: Vero alias nam perferendis mollitia consequatur ex.
                    minLength: Ab molestiae.
                  modifiable: false
                  name: "2"
                  options:
                  - "true"
                  - "false"
                  required: false
                  resourceId: r-12345678
                  serviceId: s-12345678
                  type: Animi quia.
                - defaultValue: "true"
                  dependentResourceId: r-12345678
                  description: Voluptatem architecto enim voluptatibus et magnam dolor.
                  hasOptions: false
                  id: var-12345678
                  isList: true
                  key: os
                  labeledOptions:
                    large: t3.xlarge
                    medium: t3.large
                    small: t3.medium
                  limits:
                    max: Vero maxime nihil iure esse nostrum sit.
                    maxLength: Qui adipisci quisquam labore qui voluptatem occaecati.
                    min: Vero alias nam perferendis mollitia consequatur ex.
                    minLength: Ab molestiae.
                  modifiable: false
                  name: "2"
                  options:
                  - "true"
                  - "false"
                  required: false
                  resourceId: r-12345678
                  serviceId: s-12345678
                  type: Animi quia.
                - defaultValue: "true"
                  dependentResourceId: r-12345678
                  description: Voluptatem architecto enim voluptatibus et magnam dolor.
                  hasOptions: false
                  id: var-12345678
                  isList: true
                  key: os
                  labeledOptions:
                    large: t3.xlarge
                    medium: t3.large
                    small: t3.medium
                  limits:
                    max: Vero maxime nihil iure esse nostrum sit.
                    maxLength: Qui adipisci quisquam labore qui voluptatem occaecati.
                    min: Vero alias nam perferendis mollitia consequatur ex.
                    minLength: Ab molestiae.
                  modifiable: false
                  name: "2"
                  options:
                  - "true"
                  - "false"
                  required: false
                  resourceId: r-12345678
                  serviceId: s-12345678
                  type: Animi quia.
                - defaultValue: "true"
                  dependentResourceId: r-12345678
                  description: Voluptatem architecto enim voluptatibus et magnam dolor.
                  hasOptions: false
                  id: var-12345678
                  isList: true
                  key: os
                  labeledOptions:
                    large: t3.xlarge
                    medium: t3.large
                    small: t3.medium
                  limits:
                    max: Vero maxime nihil iure esse nostrum sit.
                    maxLength: Qui adipisci quisquam labore qui voluptatem occaecati.
                    min: Vero alias nam perferendis mollitia consequatur ex.
                    minLength: Ab molestiae.
                  modifiable: false
                  name: "2"
                  options:
                  - "true"
                  - "false"
                  required: false
                  resourceId: r-12345678
                  serviceId: s-12345678
                  type: Animi quia.
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListInputParametersResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list input parameters"
      security:
      - api_key_header_Authorization: []
      summary: ListInputParameter input-parameter-api
      tags:
      - input-parameter-api
  /2022-09-01-00/service/{serviceId}/resource/{resourceId}/output-parameter:
    get:
      operationId: output-parameter-api#ListOutputParameter
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the resource to describe. If not specified,\
          \ the latest version is described."
        example: In laudantium.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the resource to describe. If not specified,\
            \ the latest version is described."
          example: Magni est impedit vitae.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the resource to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Quae et possimus itaque rerum ratione.
          type: string
        style: form
      - description: The ID of the service that this output parameter belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The ID of the resource that this output parameter belongs to
        example: r-12345678
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          description: ID of a resource
          example: Id iste.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - op-12345678
                nextPageToken: next-token
                outputParameters:
                - description: Username of the user created in the target system
                  id: op-12345678
                  key: username
                  name: Username
                  resourceId: r-12345678
                  serviceId: s-12345678
                  value: johndoe
                  valueRef: $var.username
                  valueType: Magnam optio eius.
                - description: Username of the user created in the target system
                  id: op-12345678
                  key: username
                  name: Username
                  resourceId: r-12345678
                  serviceId: s-12345678
                  value: johndoe
                  valueRef: $var.username
                  valueType: Magnam optio eius.
              schema:
                $ref: '#/components/schemas/ListOutputParametersResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list output parameters"
      security:
      - api_key_header_Authorization: []
      summary: ListOutputParameter output-parameter-api
      tags:
      - output-parameter-api
  /2022-09-01-00/service/{serviceId}/service-api:
    post:
      operationId: service-api-api#CreateServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL SaaS API specializing in multi-writer multi-tenant
                clusters for high availability
              serviceEnvironmentId: se-12345678
            schema:
              $ref: '#/components/schemas/CreateServiceAPIRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: sa-12345678
              schema:
                description: Service API ID created
                example: sa-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a service\
            \ API"
      security:
      - api_key_header_Authorization: []
      summary: CreateServiceAPI service-api-api
      tags:
      - service-api-api
  /2022-09-01-00/service/{serviceId}/service-api/{id}:
    delete:
      operationId: service-api-api#DeleteServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Repellendus qui qui nihil possimus.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a service\
            \ API"
      security:
      - api_key_header_Authorization: []
      summary: DeleteServiceAPI service-api-api
      tags:
      - service-api-api
    get:
      operationId: service-api-api#DescribeServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Deleniti blanditiis ratione non iusto.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                apiVersion: v1
                deploymentConfigId: dc-12345678
                description: A MySQL SaaS API specializing in multi-writer multi-tenant
                  clusters for high availability
                id: sa-12345678
                serviceEnvironmentId: se-12345678
                serviceId: s-12345678
                serviceName: mysql
              schema:
                $ref: '#/components/schemas/DescribeServiceAPIResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a service\
            \ API"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceAPI service-api-api
      tags:
      - service-api-api
    patch:
      operationId: service-api-api#UpdateServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Et voluptatem exercitationem quo harum aut.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL SaaS API specializing in multi-writer multi-tenant
                clusters for high availability
            schema:
              $ref: '#/components/schemas/UpdateServiceAPIRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update a service\
            \ API"
      security:
      - api_key_header_Authorization: []
      summary: UpdateServiceAPI service-api-api
      tags:
      - service-api-api
  /2022-09-01-00/service/{serviceId}/service-api/{id}/all-pending-changes:
    delete:
      operationId: service-api-api#DiscardPendingChanges
      parameters:
      - allowEmptyValue: true
        description: ProductTierID of the resource to describe pending changes forNeeds
          to specified in combination with the product tier version
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Sunt nostrum nostrum unde placeat aliquid.
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Asperiores incidunt.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe pending\
            \ changes to a service API"
      security:
      - api_key_header_Authorization: []
      summary: DiscardPendingChanges service-api-api
      tags:
      - service-api-api
    get:
      operationId: service-api-api#DescribePendingChanges
      parameters:
      - allowEmptyValue: true
        description: ProductTierID of the resource to describe pending changes forNeeds
          to specified in combination with the product tier version
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Et quod sed.
          type: string
        style: form
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Excepturi maiores optio aperiam.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: sa-12345678
                resourceChangeSets:
                  Doloribus fuga eum impedit et eos cupiditate.:
                    categorizedResourceChanges:
                      Omnis molestiae eaque id unde distinctio est.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        status: PENDING_UPDATE
                    imageConfigChanges:
                      changeState: PENDING_NEW
                      imageConfigId: imgc-12345678
                      imageName: mysql
                    infraConfigChanges:
                      changeState: PENDING_NEW
                      infraConfigId: ic-12345678
                      name: MySQL Writer Infra Config
                    overallResourceStatus: PENDING_UPDATE
                    productTierFeatureChanges: PENDING_UPDATE
                    resourceChanges: PENDING_DELETE
                    resourceName: Provident praesentium ut deserunt voluptate vel
                      necessitatibus.
                  Eum perspiciatis qui quia.:
                    categorizedResourceChanges:
                      Omnis molestiae eaque id unde distinctio est.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        status: PENDING_UPDATE
                    imageConfigChanges:
                      changeState: PENDING_NEW
                      imageConfigId: imgc-12345678
                      imageName: mysql
                    infraConfigChanges:
                      changeState: PENDING_NEW
                      infraConfigId: ic-12345678
                      name: MySQL Writer Infra Config
                    overallResourceStatus: PENDING_UPDATE
                    productTierFeatureChanges: PENDING_UPDATE
                    resourceChanges: PENDING_DELETE
                    resourceName: Provident praesentium ut deserunt voluptate vel
                      necessitatibus.
                  Repudiandae doloremque sed possimus velit velit aut.:
                    categorizedResourceChanges:
                      Omnis molestiae eaque id unde distinctio est.:
                        changes:
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        - attributes:
                            resourceId: r-12345678
                          changeType: PENDING_NEW
                          name: Customer metrics
                        status: PENDING_UPDATE
                    imageConfigChanges:
                      changeState: PENDING_NEW
                      imageConfigId: imgc-12345678
                      imageName: mysql
                    infraConfigChanges:
                      changeState: PENDING_NEW
                      infraConfigId: ic-12345678
                      name: MySQL Writer Infra Config
                    overallResourceStatus: PENDING_UPDATE
                    productTierFeatureChanges: PENDING_UPDATE
                    resourceChanges: PENDING_DELETE
                    resourceName: Provident praesentium ut deserunt voluptate vel
                      necessitatibus.
                serviceId: s-12345678
              schema:
                $ref: '#/components/schemas/DescribePendingChangesResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe pending\
            \ changes to a service API"
      security:
      - api_key_header_Authorization: []
      summary: DescribePendingChanges service-api-api
      tags:
      - service-api-api
  /2022-09-01-00/service/{serviceId}/service-api/{id}/deprecate:
    post:
      operationId: service-api-api#DeprecateServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Quam eum nihil libero velit.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to deprecate a service\
            \ API"
      security:
      - api_key_header_Authorization: []
      summary: DeprecateServiceAPI service-api-api
      tags:
      - service-api-api
  /2022-09-01-00/service/{serviceId}/service-api/{id}/release:
    post:
      operationId: service-api-api#ReleaseServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Service API
          example: Quis quia ut sit excepturi temporibus.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              dryRun: false
              isPreferred: true
              productTierId: pt-12345678
              versionSetName: v1
              versionSetType: Major|Incremental|UserDefined
            schema:
              $ref: '#/components/schemas/ReleaseServiceAPIRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to release a service\
            \ API"
      security:
      - api_key_header_Authorization: []
      summary: ReleaseServiceAPI service-api-api
      tags:
      - service-api-api
  /2022-09-01-00/service/{serviceId}/serviceapi/{serviceApiId}/model:
    get:
      operationId: service-model-api#ListServiceModel
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service API ID
        example: sa-12345678
        explode: false
        in: path
        name: serviceApiId
        required: true
        schema:
          description: ID of a Service API
          example: Cupiditate labore saepe quod repellat quia.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - sm-12345678
                - sm-87654321
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceModelsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list service models"
      security:
      - api_key_header_Authorization: []
      summary: ListServiceModel service-model-api
      tags:
      - service-model-api
  /2022-09-01-00/service/{serviceId}/serviceenvironment/{serviceEnvironmentId}/image-config:
    get:
      operationId: image-config-api#ListImageConfigs
      parameters:
      - description: The service ID to use for the infra
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID
        example: se-12345678
        explode: false
        in: path
        name: serviceEnvironmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - imgc-12345678
                - imgc-87654321
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListImageConfigsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list image configs"
      security:
      - api_key_header_Authorization: []
      summary: ListImageConfigs image-config-api
      tags:
      - image-config-api
  /2022-09-01-00/service/{serviceId}/serviceenvironment/{serviceEnvironmentId}/infra-config:
    get:
      operationId: infra-config-api#ListInfraConfig
      parameters:
      - allowEmptyValue: true
        description: Is infra config managed by omnistrate
        example: false
        explode: true
        in: query
        name: managed
        required: false
        schema:
          description: Is infra config managed by omnistrate
          example: false
          type: boolean
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID
        example: se-12345678
        explode: false
        in: path
        name: serviceEnvironmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - ic-12345678
                - ic-abcdefgh
                - ic-1234efgh
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListInfraConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list infra configs"
      security:
      - api_key_header_Authorization: []
      summary: ListInfraConfig infra-config-api
      tags:
      - infra-config-api
  /2022-09-01-00/service/{serviceId}/serviceenvironment/{serviceEnvironmentId}/service-api:
    get:
      operationId: service-api-api#ListServiceAPI
      parameters:
      - description: The service ID that this API bundle belongs to
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID
        example: se-12345678
        explode: false
        in: path
        name: serviceEnvironmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - sa-12345678
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListServiceAPIsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list service APIs"
      security:
      - api_key_header_Authorization: []
      summary: ListServiceAPI service-api-api
      tags:
      - service-api-api
  /2022-09-01-00/service/{serviceId}/storage-config:
    get:
      operationId: storage-config-api#ListStorageConfig
      parameters:
      - allowEmptyValue: true
        description: Is storage config managed by omnistrate
        example: false
        explode: true
        in: query
        name: managed
        required: false
        schema:
          description: Is storage config managed by omnistrate
          example: false
          type: boolean
        style: form
      - description: The service id to filter by
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - sc-12345678
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListStorageConfigsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list storage configs"
      security:
      - api_key_header_Authorization: []
      summary: ListStorageConfig storage-config-api
      tags:
      - storage-config-api
    post:
      operationId: storage-config-api#CreateStorageConfig
      parameters:
      - description: The service to which this storage config belongs
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: my-storage-config-description
              name: my-storage-config
            schema:
              $ref: '#/components/schemas/CreateStorageConfigRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: sc-12345678
              schema:
                description: Storage Config ID created
                example: sc-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create storage\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: CreateStorageConfig storage-config-api
      tags:
      - storage-config-api
  /2022-09-01-00/service/{serviceId}/storage-config/{id}:
    delete:
      operationId: storage-config-api#DeleteStorageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage config ID
        example: sc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Config
          example: Excepturi voluptate repellendus.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a storage\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteStorageConfig storage-config-api
      tags:
      - storage-config-api
    get:
      operationId: storage-config-api#DescribeStorageConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the storage config to describe. If not\
          \ specified, the latest version is described."
        example: Expedita est debitis eius.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the storage config to describe. If\
            \ not specified, the latest version is described."
          example: Rerum illo porro in.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the storage config to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Quod fugit ut voluptas totam.
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage config ID
        example: sc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Config
          example: Natus modi ullam sint est tempora.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                description: my-storage-config-description
                id: sc-12345678
                infraConfigIDs:
                - ic-12345678
                - ic-abcdefgh
                name: my-storage-config
                serviceId: s-12345678
                volumes:
                  svc-12345678:
                  - /data
                  - /mnt/logs
                  svc-23456789:
                  - /config
              schema:
                $ref: '#/components/schemas/DescribeStorageConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe storage\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeStorageConfig storage-config-api
      tags:
      - storage-config-api
    patch:
      operationId: storage-config-api#UpdateStorageConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage config ID
        example: sc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Config
          example: Et debitis.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: my-storage-config-description
              name: my-storage-config
            schema:
              $ref: '#/components/schemas/UpdateStorageConfigRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update storage\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateStorageConfig storage-config-api
      tags:
      - storage-config-api
  /2022-09-01-00/service/{serviceId}/storage-config/{id}/volume/{storageVolumeConfigId}:
    delete:
      operationId: storage-config-api#RemoveStorageVolumeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage config ID
        example: sc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Config
          example: Soluta optio iusto quam numquam.
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: storageVolumeConfigId
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Porro et placeat pariatur.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              mountPath: /data
            schema:
              $ref: '#/components/schemas/RemoveStorageVolumeConfigRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to remove storage\
            \ volume config"
      security:
      - api_key_header_Authorization: []
      summary: RemoveStorageVolumeConfig storage-config-api
      tags:
      - storage-config-api
    put:
      operationId: storage-config-api#AddStorageVolumeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage config ID
        example: sc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Config
          example: Autem explicabo quibusdam illum velit nam.
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: storageVolumeConfigId
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Ex id eligendi molestiae.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              mountPath: /data
            schema:
              $ref: '#/components/schemas/AddStorageVolumeConfigRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to add storage volume\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: AddStorageVolumeConfig storage-config-api
      tags:
      - storage-config-api
  /2022-09-01-00/service/{serviceId}/storage-volume-config:
    get:
      operationId: storage-volume-config-api#ListStorageVolumeConfig
      parameters:
      - allowEmptyValue: true
        description: Is storage volume config managed by omnistrate
        example: false
        explode: true
        in: query
        name: managed
        required: false
        schema:
          description: Is storage volume config managed by omnistrate
          example: false
          type: boolean
        style: form
      - description: The service to list storage volume configs for
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - svc-12345678
                nextPageToken: next-token
              schema:
                $ref: '#/components/schemas/ListStorageVolumeConfigsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list storage volume\
            \ configs"
      security:
      - api_key_header_Authorization: []
      summary: ListStorageVolumeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
    post:
      operationId: storage-volume-config-api#CreateStorageVolumeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              clusterStorageType: S3|$var.storageType|AWS::EFS
              description: A storage volume set to store the MySQL data directory
              disableBackup: false
              instanceStorageIops: $var.storageIops
              instanceStorageSizeGi: $var.storage_size
              instanceStorageThroughputMiBps: "128"
              instanceStorageType: $var.storageType
              name: MySQL Data Volume
              storageResourceID: r-12345678
            schema:
              $ref: '#/components/schemas/CreateStorageVolumeConfigRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: svc-12345678
              schema:
                description: Storage Volume Config ID created
                example: svc-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create storage\
            \ volume config"
      security:
      - api_key_header_Authorization: []
      summary: CreateStorageVolumeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
  /2022-09-01-00/service/{serviceId}/storage-volume-config/{id}:
    delete:
      operationId: storage-volume-config-api#DeleteStorageVolumeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Eius quia.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a storage\
            \ volume config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteStorageVolumeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
    get:
      operationId: storage-volume-config-api#DescribeStorageVolumeConfig
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the network config to describe. If not\
          \ specified, the latest version is described."
        example: Quos qui quas quis vel similique.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the network config to describe. If\
            \ not specified, the latest version is described."
          example: Voluptatem voluptatem earum ut.
          type: string
        style: form
      - allowEmptyValue: true
        description: ProductTierId of the network config to describe. Needs to specified
          in combination with the product tier version
        example: Beatae beatae.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Ut est iure ea tenetur excepturi.
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Voluptas architecto libero temporibus.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cloudProviderName: aws
                clusterStorageType: S3|$var.storageType|AWS::EFS
                description: A storage volume set to store the MySQL data directory
                disableBackup: false
                id: svc-12345678
                instanceStorageIops: "7500"
                instanceStorageSizeGi: "128"
                instanceStorageThroughputMiBps: "128"
                instanceStorageType: $var.storageType
                name: MySQL Data Volume
                serviceId: s-12345678
                storageResourceID: r-12345678
              schema:
                $ref: '#/components/schemas/DescribeStorageVolumeConfigResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe storage\
            \ volume config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeStorageVolumeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
    patch:
      operationId: storage-volume-config-api#UpdateStorageVolumeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Exercitationem ratione deleniti.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              description: A storage volume set to store the MySQL data directory
              disableBackup: false
              name: MySQL Data Volume
            schema:
              $ref: '#/components/schemas/UpdateStorageVolumeConfigRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update storage\
            \ volume config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateStorageVolumeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
  /2022-09-01-00/service/{serviceId}/storage-volume-config/{id}/instance:
    patch:
      operationId: storage-volume-config-api#UpdateInstanceStorageVolumeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Fugit deserunt eum ut officia dolores harum.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              instanceStorageIops: "7500"
              instanceStorageThroughputMiBps: "128"
              instanceStorageType: AWS::EBS_GP2
            schema:
              $ref: '#/components/schemas/UpdateInstanceStorageVolumeConfigRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update instance\
            \ storage volume type config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateInstanceStorageVolumeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
  /2022-09-01-00/service/{serviceId}/storage-volume-config/{id}/size:
    patch:
      operationId: storage-volume-config-api#UpdateStorageVolumeSizeConfig
      parameters:
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The storage volume config ID
        example: svc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Storage Volume Config
          example: Autem aliquid ipsum molestiae quod.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              instanceStorageSizeGi: $var.storage_size
            schema:
              $ref: '#/components/schemas/UpdateStorageVolumeSizeConfigRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update storage\
            \ volume size config"
      security:
      - api_key_header_Authorization: []
      summary: UpdateStorageVolumeSizeConfig storage-volume-config-api
      tags:
      - storage-volume-config-api
  /2022-09-01-00/service/{serviceId}/vunit/{id}:
    get:
      operationId: vunit-api#DescribeVUnit
      parameters:
      - description: Service ID for the VUnit
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: VUnit to operate on
        example: vu-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a VUnit
          example: Nobis totam.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cloudProvider: aws
                id: vu-12345678
                networkIds:
                - n-12345678
                - n-abcdefgh
                - n-1234efgh
                region: us-west-2
                serviceId: s-12345678
                serviceModelId: sm-12345678
              schema:
                $ref: '#/components/schemas/DescribeVUnitResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a vunit"
      security:
      - api_key_header_Authorization: []
      summary: DescribeVUnit vunit-api
      tags:
      - vunit-api
  /2022-09-01-00/service/composespec:
    post:
      operationId: service-api#CreateServiceFromComposeSpec
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              fileContent: Incidunt consequatur deleniti sit neque explicabo quo.
              fileFormat: text/plain
              fileName: mysql.yaml
              name: MySQL multi-writer service
              serviceLogoURL: http://weimannadams.name/river
            schema:
              $ref: '#/components/schemas/CreateServiceFromComposeSpecRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: s-12345678
              schema:
                description: Service ID created
                example: s-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a service"
      security:
      - api_key_header_Authorization: []
      summary: CreateServiceFromComposeSpec service-api
      tags:
      - service-api
    put:
      operationId: service-api#BuildServiceFromComposeSpec
      requestBody:
        content:
          application/json:
            example:
              configs:
                Consequatur neque rem quia.: Autem enim dolorum velit ea id.
                Velit eius sint sapiente.: Rem eligendi eligendi.
              description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              environment: dev
              environmentType: DEV
              fileContent: Cum quia quod.
              name: MySQL multi-writer service
              release: true
              releaseAsPreferred: true
              releaseVersionName: mysql
              secrets:
                Illo quae dolor.: Quo eius.
                Vel id et.: Dicta cumque vero.
                Voluptatem sit totam ipsum sed et.: Labore ut incidunt cupiditate
                  quis.
              serviceLogoURL: http://schaefer.name/tavares
            schema:
              $ref: '#/components/schemas/BuildServiceFromComposeSpecRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                productTierID: pt-12345678
                serviceEnvironmentID: se-12345678
                serviceID: s-12345678
                undefinedResources:
                  mysql: r-12345678
              schema:
                $ref: '#/components/schemas/BuildServiceFromComposeSpecResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to build a service\
            \ from compose spec"
      security:
      - api_key_header_Authorization: []
      summary: BuildServiceFromComposeSpec service-api
      tags:
      - service-api
  /2022-09-01-00/service/serviceplanspec:
    put:
      operationId: service-api#BuildServiceFromServicePlanSpec
      requestBody:
        content:
          application/json:
            example:
              description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              environment: dev
              environmentType: DEV
              fileContent: Laboriosam dolorem.
              name: MySQL multi-writer service
              release: true
              releaseAsPreferred: true
              releaseVersionName: mysql
              serviceLogoURL: http://ward.info/tracey_torphy
            schema:
              $ref: '#/components/schemas/BuildServiceFromServicePlanSpecRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                productTierID: pt-12345678
                serviceEnvironmentID: se-12345678
                serviceID: s-12345678
                undefinedResources:
                  mysql: r-12345678
              schema:
                $ref: '#/components/schemas/BuildServiceFromServicePlanSpecResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to build a service\
            \ from compose spec"
      security:
      - api_key_header_Authorization: []
      summary: BuildServiceFromServicePlanSpec service-api
      tags:
      - service-api
  /2022-09-01-00/signin:
    post:
      operationId: signin-api#Signin
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              hashedPassword: deprecated
              password: password
            schema:
              $ref: '#/components/schemas/SigninRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                jwtToken: ""
              schema:
                $ref: '#/components/schemas/SigninResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to signin"
      summary: Signin signin-api
      tags:
      - signin-api
  /2022-09-01-00/signup:
    post:
      operationId: signup-api#Signup
      requestBody:
        content:
          application/json:
            example:
              companyDescription: We sell xyz database software
              companyUrl: https://www.mywebsite.com
              email: abc@gmail.com
              legalCompanyName: mywebsite
              name: John Doe
              password: password
            schema:
              $ref: '#/components/schemas/SignupRequest'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to signup"
      summary: Signup signup-api
      tags:
      - signup-api
  /2022-09-01-00/stripe-setup:
    delete:
      operationId: stripe-connect-api#RevokeOAuthAccess
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list invoices"
      security:
      - api_key_header_Authorization: []
      summary: RevokeOAuthAccess stripe-connect-api
      tags:
      - stripe-connect-api
    get:
      operationId: stripe-connect-api#GetStripeAuthorizeUrl
      responses:
        "200":
          content:
            application/json:
              example:
                authorizeURL: https://connect.stripe.com/oauth/authorize?response_type=code&client_id=ca_12345678&scope=read_write&state=12345678
              schema:
                $ref: '#/components/schemas/StripeAuthorizeURLResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list invoices"
      security:
      - api_key_header_Authorization: []
      summary: GetStripeAuthorizeUrl stripe-connect-api
      tags:
      - stripe-connect-api
    post:
      operationId: stripe-connect-api#CompleteOAuthConnection
      requestBody:
        content:
          application/json:
            example:
              code: ac_12345678
              state: "12345678"
            schema:
              $ref: '#/components/schemas/CompleteOAuthConnectionRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                stripeUserID: acct_12345678
              schema:
                $ref: '#/components/schemas/CompleteOAuthConnectionResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list invoices"
      security:
      - api_key_header_Authorization: []
      summary: CompleteOAuthConnection stripe-connect-api
      tags:
      - stripe-connect-api
  /2022-09-01-00/subscription:
    get:
      operationId: subscription-api#ListSubscriptions
      parameters:
      - allowEmptyValue: true
        description: Service Id
        example: service-12345678
        explode: true
        in: query
        name: serviceId
        required: false
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: form
      - allowEmptyValue: true
        description: The environment type to filter by
        example: DEV
        explode: true
        in: query
        name: environmentType
        required: false
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - sub-12345678
                - sub-abcdefgh
                - sub-1234efgh
                nextPageToken: next-token
                subscriptions:
                - accountConfigIdentityId: org-12345678
                  cloudProviderNames:
                  - aws
                  - gcp
                  createdAt: 2019-01-01T00:00:00Z
                  defaultSubscription: true
                  id: sub-12345678
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  roleType: root
                  rootUserId: user-12345678
                  serviceId: s-12345678
                  serviceLogoURL: Magni rem ut ut quia.
                  serviceName: MySQL multi-writer service
                  serviceOrgId: org-12345678
                  serviceOrgName: Omnistrate
                  status: ACTIVE
                  subscriptionOwnerName: John Doe
                - accountConfigIdentityId: org-12345678
                  cloudProviderNames:
                  - aws
                  - gcp
                  createdAt: 2019-01-01T00:00:00Z
                  defaultSubscription: true
                  id: sub-12345678
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  roleType: root
                  rootUserId: user-12345678
                  serviceId: s-12345678
                  serviceLogoURL: Magni rem ut ut quia.
                  serviceName: MySQL multi-writer service
                  serviceOrgId: org-12345678
                  serviceOrgName: Omnistrate
                  status: ACTIVE
                  subscriptionOwnerName: John Doe
                - accountConfigIdentityId: org-12345678
                  cloudProviderNames:
                  - aws
                  - gcp
                  createdAt: 2019-01-01T00:00:00Z
                  defaultSubscription: true
                  id: sub-12345678
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  roleType: root
                  rootUserId: user-12345678
                  serviceId: s-12345678
                  serviceLogoURL: Magni rem ut ut quia.
                  serviceName: MySQL multi-writer service
                  serviceOrgId: org-12345678
                  serviceOrgName: Omnistrate
                  status: ACTIVE
                  subscriptionOwnerName: John Doe
              schema:
                $ref: '#/components/schemas/ListSubscriptionsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to list subscriptions"
      security:
      - api_key_header_Authorization: []
      summary: ListSubscriptions subscription-api
      tags:
      - subscription-api
    post:
      operationId: subscription-api#CreateSubscription
      requestBody:
        content:
          application/json:
            example:
              productTierId: pt-12345678
              serviceId: s-12345678
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: sub-12345678
              schema:
                description: Subscription ID created
                example: sub-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a subscription"
      security:
      - api_key_header_Authorization: []
      summary: CreateSubscription subscription-api
      tags:
      - subscription-api
  /2022-09-01-00/subscription/{id}:
    delete:
      operationId: subscription-api#DeleteSubscription
      parameters:
      - description: The subscription ID
        example: sub-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription
          example: Sed autem.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete a subscription"
      security:
      - api_key_header_Authorization: []
      summary: DeleteSubscription subscription-api
      tags:
      - subscription-api
    get:
      operationId: subscription-api#DescribeSubscription
      parameters:
      - description: The subscription ID
        example: sub-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription
          example: Nostrum voluptate.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                accountConfigIdentityId: org-12345678
                cloudProviderNames:
                - aws
                - gcp
                createdAt: 2019-01-01T00:00:00Z
                defaultSubscription: true
                id: sub-12345678
                productTierId: pt-12345678
                productTierName: Omnistrate Multi Tenancy
                roleType: root
                rootUserId: user-12345678
                serviceId: s-12345678
                serviceLogoURL: Rerum ratione.
                serviceName: MySQL multi-writer service
                serviceOrgId: org-12345678
                serviceOrgName: Omnistrate
                status: ACTIVE
                subscriptionOwnerName: John Doe
              schema:
                $ref: '#/components/schemas/DescribeSubscriptionResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a subscription"
      security:
      - api_key_header_Authorization: []
      summary: DescribeSubscription subscription-api
      tags:
      - subscription-api
  /2022-09-01-00/subscription/request:
    get:
      operationId: subscription-request-api#ListSubscriptionRequests
      parameters:
      - allowEmptyValue: true
        description: The status of the subscription request to filter by
        example: PENDING
        explode: true
        in: query
        name: status
        required: false
        schema:
          description: The status of the subscription request
          example: PENDING|APPROVED|DENIED|CANCELLED
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - subr-12345678
                - subr-abcdefgh
                - subr-1234efgh
                nextPageToken: next-token
                subscriptionRequests:
                - createdAt: 2019-01-01T00:00:00Z
                  id: subr-12345678
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  rootUserEmail: abc@gmail.com
                  rootUserId: org-12345678
                  rootUserName: John Doe
                  serviceId: s-12345678
                  serviceLogoURL: Fuga ut non est.
                  serviceName: MySQL multi-writer service
                  status: PENDING
                  updatedAt: 2019-01-01T00:00:00Z
                  updatedByUserId: user-12345678
                  updatedByUserName: John Doe
                - createdAt: 2019-01-01T00:00:00Z
                  id: subr-12345678
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  rootUserEmail: abc@gmail.com
                  rootUserId: org-12345678
                  rootUserName: John Doe
                  serviceId: s-12345678
                  serviceLogoURL: Fuga ut non est.
                  serviceName: MySQL multi-writer service
                  status: PENDING
                  updatedAt: 2019-01-01T00:00:00Z
                  updatedByUserId: user-12345678
                  updatedByUserName: John Doe
                - createdAt: 2019-01-01T00:00:00Z
                  id: subr-12345678
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  rootUserEmail: abc@gmail.com
                  rootUserId: org-12345678
                  rootUserName: John Doe
                  serviceId: s-12345678
                  serviceLogoURL: Fuga ut non est.
                  serviceName: MySQL multi-writer service
                  status: PENDING
                  updatedAt: 2019-01-01T00:00:00Z
                  updatedByUserId: user-12345678
                  updatedByUserName: John Doe
                - createdAt: 2019-01-01T00:00:00Z
                  id: subr-12345678
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  rootUserEmail: abc@gmail.com
                  rootUserId: org-12345678
                  rootUserName: John Doe
                  serviceId: s-12345678
                  serviceLogoURL: Fuga ut non est.
                  serviceName: MySQL multi-writer service
                  status: PENDING
                  updatedAt: 2019-01-01T00:00:00Z
                  updatedByUserId: user-12345678
                  updatedByUserName: John Doe
              schema:
                $ref: '#/components/schemas/ListSubscriptionRequestsResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a subscription"
      security:
      - api_key_header_Authorization: []
      summary: ListSubscriptionRequests subscription-request-api
      tags:
      - subscription-request-api
    post:
      operationId: subscription-request-api#CreateSubscriptionRequest
      requestBody:
        content:
          application/json:
            example:
              productTierId: pt-12345678
              serviceId: s-12345678
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequestRequest2'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                default:
                  summary: default
                  value: subr-12345678
              schema:
                description: Subscription request ID created
                example: subr-12345678
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a subscription"
      security:
      - api_key_header_Authorization: []
      summary: CreateSubscriptionRequest subscription-request-api
      tags:
      - subscription-request-api
  /2022-09-01-00/subscription/request/{id}:
    delete:
      operationId: subscription-request-api#CancelSubscriptionRequest
      parameters:
      - description: The subscription ID
        example: subr-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription Request
          example: Dolores aspernatur.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a subscription"
      security:
      - api_key_header_Authorization: []
      summary: CancelSubscriptionRequest subscription-request-api
      tags:
      - subscription-request-api
    get:
      operationId: subscription-request-api#DescribeSubscriptionRequest
      parameters:
      - description: The subscription ID
        example: subr-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription Request
          example: Aut esse sunt sit dolores omnis.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                createdAt: 2019-01-01T00:00:00Z
                id: subr-12345678
                productTierId: pt-12345678
                productTierName: Omnistrate Multi Tenancy
                rootUserEmail: abc@gmail.com
                rootUserId: org-12345678
                rootUserName: John Doe
                serviceId: s-12345678
                serviceLogoURL: Omnis quia ex fuga consequuntur.
                serviceName: MySQL multi-writer service
                status: PENDING
                updatedAt: 2019-01-01T00:00:00Z
                updatedByUserId: user-12345678
                updatedByUserName: John Doe
              schema:
                $ref: '#/components/schemas/DescribeSubscriptionRequestResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to create a subscription"
      security:
      - api_key_header_Authorization: []
      summary: DescribeSubscriptionRequest subscription-request-api
      tags:
      - subscription-request-api
  /2022-09-01-00/update-password:
    post:
      operationId: users-api#UpdatePassword
      requestBody:
        content:
          application/json:
            example:
              currentPassword: currentPassword
              currentPasswordHash: currentPasswordHash
              password: password
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to update password"
      security:
      - api_key_header_Authorization: []
      summary: UpdatePassword users-api
      tags:
      - users-api
  /2022-09-01-00/usage:
    get:
      operationId: usage-api#GetCurrentUsage
      responses:
        "200":
          content:
            application/json:
              example:
                endTime: 2021-01-01T00:00:00.000Z
                planName: STARTER
                startTime: 2021-01-01T00:00:00.000Z
                usage:
                - dimension: core/hours
                  endTime: 2021-01-01T00:00:00.000Z
                  startTime: 2021-01-01T00:00:00.000Z
                  total: 0.67
              schema:
                $ref: '#/components/schemas/GetUsageResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get usage"
      security:
      - api_key_header_Authorization: []
      summary: GetCurrentUsage usage-api
      tags:
      - usage-api
  /2022-09-01-00/usage-per-day:
    get:
      operationId: usage-api#GetUsagePerDay
      parameters:
      - allowEmptyValue: true
        description: Start date of the usage report
        example: 2023-01-01T10:00:00Z
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: End date of the usage report
        example: 2024-01-01T10:00:00Z
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                endTime: 2021-01-01T00:00:00.000Z
                planName: STARTER
                startTime: 2021-01-01T00:00:00.000Z
                usage:
                - dimension: core/hours
                  endTime: 2021-01-01T00:00:00.000Z
                  startTime: 2021-01-01T00:00:00.000Z
                  total: 0.67
              schema:
                $ref: '#/components/schemas/GetUsageResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to get usage"
      security:
      - api_key_header_Authorization: []
      summary: GetUsagePerDay usage-api
      tags:
      - usage-api
  /2022-09-01-00/user:
    delete:
      operationId: users-api#DeleteUser
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to delete user"
      security:
      - api_key_header_Authorization: []
      summary: DeleteUser users-api
      tags:
      - users-api
    get:
      operationId: users-api#DescribeUser
      responses:
        "200":
          content:
            application/json:
              example:
                address:
                  addressLine1: 1234 Main St
                  addressLine2: Apt 123
                  addressLine3: Building 123
                  city: San Francisco
                  country: US
                  state: CA
                  zip: "94123"
                createdAt: 2023-01-10T00:00:00Z
                email: abc@gmail.com
                enabled: true
                id: user-abcd1234
                lastModifiedAt: 2023-01-20T00:00:00Z
                name: John Dae
                orgCookiePolicy: Sunt quia quae quaerat.
                orgDescription: ACME Inc.
                orgFavIconURL: Voluptatem qui laboriosam recusandae qui.
                orgId: org-aKQ8G13QeR
                orgLogoURL: Temporibus non repudiandae ut impedit.
                orgName: ACME
                orgPrivacyPolicy: Qui dolorem rerum.
                orgSupportEmail: support@example.com
                orgTermsOfUse: At nulla eum magni aliquam.
                orgURL: something.acme
                planName: STARTER
                roleType: reader
                status: ACTIVE
              schema:
                $ref: '#/components/schemas/DescribeUserResult'
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: DescribeUser users-api
      tags:
      - users-api
  /2022-09-01-00/user/{id}:
    patch:
      operationId: users-api#UpdateUser
      parameters:
      - description: The User ID
        example: user-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The User ID
          example: user-abcd1234
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              address:
                addressLine1: 1234 Main St
                addressLine2: Apt 123
                addressLine3: Building 123
                city: San Francisco
                country: US
                state: CA
                zip: "94123"
              name: John Dae
              orgCookiePolicy: Porro voluptatem.
              orgDescription: ACME Inc.
              orgFavIconURL: http://thompson.biz/kailee_gerhold
              orgLogoURL: http://muellermcdermott.name/dashawn_hodkiewicz
              orgName: ACME
              orgPrivacyPolicy: Reprehenderit nihil aut est.
              orgSupportEmail: support@example.com
              orgTermsOfUse: Odio perferendis maxime autem necessitatibus.
              orgURL: something.acme
            schema:
              $ref: '#/components/schemas/UpdateUserRequest2'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to describe a user"
      security:
      - api_key_header_Authorization: []
      summary: UpdateUser users-api
      tags:
      - users-api
  /2022-09-01-00/users/{id}/regenerate-token:
    post:
      operationId: signup-api#RegenerateToken
      parameters:
      - example: user-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: user-abcd1234
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to regenerate token"
      summary: RegenerateToken signup-api
      tags:
      - signup-api
  /2022-09-01-00/validate-token:
    post:
      operationId: signup-api#ValidateToken
      requestBody:
        content:
          application/json:
            example:
              email: abc@gmail.com
              token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
            schema:
              $ref: '#/components/schemas/ValidateTokenRequest'
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
          description: "failed_request: Response used on failure to validate the token"
      summary: ValidateToken signup-api
      tags:
      - signup-api
  /2022-09-01-00/version:
    get:
      description: Registration service version endpoint
      operationId: global-api#registrationServiceVersion
      responses:
        "200":
          content:
            application/json:
              example:
                apiVersion: "8"
                buildCommitSHA: 1234567890abcdef1234567890abcdef12345678
                buildTimestamp: 2020-01-01T00:00:00Z
              schema:
                $ref: '#/components/schemas/OmnistrateServiceVersionResult'
          description: OK response.
      summary: registrationServiceVersion global-api
      tags:
      - global-api
components:
  schemas:
    APIEntity:
      example:
        inputParameters:
        - defaultValue: null
          description: The name of the server
          displayName: Server Name
          isList: false
          key: serverName
          modifiable: true
          options: null
          required: true
          type: string
        - defaultValue: option1
          description: The type of the server
          displayName: Server Type
          isList: false
          key: serverType
          modifiable: true
          options:
          - option1
          - option2
          required: true
          type: string
        outputParameters:
        - description: The name of the server
          displayName: Server Name
          isList: false
          key: serverName
          type: string
        - description: The type of the server
          displayName: Server Type
          isList: false
          key: serverType
          type: string
        verb: CREATE|DESCRIBE|LIST|UPDATE|DELETE
      properties:
        inputParameters:
          description: The input parameters
          example:
          - defaultValue: null
            description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            modifiable: true
            options: null
            required: true
            type: string
          - defaultValue: option1
            description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            modifiable: true
            options:
            - option1
            - option2
            required: true
            type: string
          items:
            $ref: '#/components/schemas/InputParameterEntity'
          type: array
        outputParameters:
          description: The output parameters
          example:
          - description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            type: string
          - description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            type: string
          items:
            $ref: '#/components/schemas/OutputParameterEntity'
          type: array
        verb:
          description: The API verb
          example: CREATE|DESCRIBE|LIST|UPDATE|DELETE
          type: string
      required:
      - inputParameters
      - outputParameters
      - verb
      type: object
    AWSPrivateLinkConfiguration:
      example:
        port: 80
        targetGroupName: my-target-group
      properties:
        port:
          description: The port of the target group
          example: 80
          format: int64
          type: integer
        targetGroupName:
          description: The target group name
          example: my-target-group
          type: string
      required:
      - port
      - targetGroupName
      type: object
    AWSPrivateLinkConfigurations:
      description: The list of private link configurations
      example:
      - port: 80
        targetGroupName: my-target-group
      - port: 80
        targetGroupName: my-target-group
      - port: 80
        targetGroupName: my-target-group
      items:
        $ref: '#/components/schemas/AWSPrivateLinkConfiguration'
      type: array
    AccountConfigIdentityIDRequest:
      example:
        token: y8w
      properties:
        token:
          description: JWT token used to perform authorization
          example: d
          minLength: 1
          type: string
      required:
      - token
      type: object
    AccountConfigIdentityIDResult:
      example:
        id: org-12345678
      properties:
        id:
          description: ID of an Org
          example: Minus dolore.
          type: string
      required:
      - id
      type: object
    AcknowledgeEventRequest:
      example:
        id: e-123456
        token: a2w
      properties:
        id:
          description: ID of a Event
          example: Vel corporis molestias omnis.
          type: string
        token:
          description: JWT token used to perform authorization
          example: om
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    ActionHook:
      example:
        commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
        customCommand:
        - /bin/sh
        - -c
        customImage: my-custom-image:latest
        scope: CLUSTER
        type: ADD
      properties:
        commandTemplate:
          description: The Base64 encoded command template to execute
          example: ZWNobyAiaGVsbG8gd29ybGQi
          type: string
        customCommand:
          description: The custom command to execute the hook with
          example:
          - /bin/sh
          - -c
          items:
            example: Aperiam quos.
            type: string
          type: array
        customImage:
          description: The custom image to execute the hook
          example: my-custom-image:latest
          type: string
        scope:
          description: The scope of the hook
          example: CLUSTER|NODE
          type: string
        type:
          description: The type of hook to execute
          example: INIT|ADD|REMOVE|PROMOTE|DEMOTE|HEALTH_CHECK|READINESS_CHECK|STARTUP_CHECK|PRE_START|POST_START|PRE_UPGRADE|POST_UPGRADE|PRE_STOP|POST_STOP
          type: string
      required:
      - commandTemplate
      - scope
      - type
      type: object
    AddAccountConfigToServiceModelRequest:
      example:
        accountConfigId: ac-12345678
        id: sm-12345678
        serviceId: s-12345678
        token: h
      properties:
        accountConfigId:
          description: ID of an Account Config
          example: Alias ut quidem.
          type: string
        id:
          description: ID of a Service Model
          example: Ea aliquam et recusandae id officia aut.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 2zq
          minLength: 1
          type: string
      required:
      - accountConfigId
      - id
      - serviceId
      - token
      type: object
    AddAccountConfigToServiceModelRequest2:
      example:
        accountConfigId: ac-12345678
      properties:
        accountConfigId:
          description: The infrastructure account configuration ID
          example: ac-12345678
          type: string
      required:
      - accountConfigId
      type: object
    AddCapacityToResourceInstanceRequest:
      example:
        capacityToBeAdded: 3
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: jg
      properties:
        capacityToBeAdded:
          description: Number of replicas to be added
          example: 3
          format: int64
          type: integer
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Aut nobis.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: w
          minLength: 1
          type: string
      required:
      - capacityToBeAdded
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    AddCapacityToResourceInstanceRequest2:
      example:
        capacityToBeAdded: 3
      properties:
        capacityToBeAdded:
          description: Number of replicas to be added
          example: 3
          format: int64
          type: integer
      required:
      - capacityToBeAdded
      type: object
    AddComputeInstanceTypeRequest:
      example:
        cloudProviderName: aws
        configOverride:
          instanceLifeCycleType: Spot
          rootVolumeSizeGi: 10
          warmPoolConfiguration:
            minimumNodesInPool: 1
        id: cc-12345678
        instanceType: t3.micro
        serviceId: s-12345678
        token: e2l
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        configOverride:
          $ref: '#/components/schemas/ComputeInstanceTypeConfigOverride'
        id:
          description: ID of a Compute Config
          example: Quis tenetur blanditiis a harum.
          type: string
        instanceType:
          description: The instance type for this compute instance type config
          example: t3.micro
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 9fn
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - id
      - instanceType
      - serviceId
      - token
      type: object
    AddComputeInstanceTypeRequest2:
      example:
        cloudProviderName: aws
        configOverride:
          instanceLifeCycleType: Spot
          rootVolumeSizeGi: 10
          warmPoolConfiguration:
            minimumNodesInPool: 1
        instanceType: t3.micro
      properties:
        cloudProviderName:
          description: The cloud provider for this compute instance type config
          example: aws
          type: string
        configOverride:
          $ref: '#/components/schemas/ComputeInstanceTypeConfigOverride'
        instanceType:
          description: The instance type for this compute instance type config
          example: t3.micro
          type: string
      required:
      - cloudProviderName
      - instanceType
      type: object
    AddCustomDNSToResourceInstanceRequest:
      example:
        customDNS: my-custom-dns.com
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: http-service
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        targetPort: 8080
        token: 0wt
      properties:
        customDNS:
          description: The custom DNS to add
          example: my-custom-dns.com
          type: string
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: http-service
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Suscipit est et quibusdam et iste.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        targetPort:
          description: The target port
          example: 8080
          format: int64
          type: integer
        token:
          description: JWT token used to perform authorization
          example: 8gy
          minLength: 1
          type: string
      required:
      - customDNS
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    AddCustomDNSToResourceInstanceRequest2:
      example:
        customDNS: my-custom-dns.com
        targetPort: 8080
      properties:
        customDNS:
          description: The custom DNS to add
          example: my-custom-dns.com
          type: string
        targetPort:
          description: The target port
          example: 8080
          format: int64
          type: integer
      required:
      - customDNS
      type: object
    AddFileRequest:
      example:
        content_type: multipart/form-data; boundary=boundary
        description: A file to store the configuration for the resource
        fileType: Config
        id: r-12345678
        mountPath: /etc/config
        name: file.txt
        serviceId: s-12345678
        token: "4"
      properties:
        content_type:
          default: multipart/form-data; boundary=boundary
          description: "Content-Type header, must define value for multipart boundary."
          example: multipart/form-data; boundary=boundary
          pattern: "multipart/[^;]+; boundary=.+"
          type: string
        description:
          description: The description of the file
          example: A file to store the configuration for the resource
          type: string
        fileType:
          description: The type of the file
          example: Config|Secret
          type: string
        id:
          description: ID of a resource
          example: Soluta nemo.
          type: string
        mountPath:
          description: The mount path of the file
          example: /etc/config
          type: string
        name:
          description: The name of the file
          example: file.txt
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: n3b
          minLength: 1
          type: string
      required:
      - content_type
      - description
      - fileType
      - id
      - mountPath
      - name
      - serviceId
      - token
      type: object
    AddResourceDependencyRequest:
      example:
        id: r-12345678
        parameterMap:
          clusterId: writerId
          clusterOrg: userDatabase
        resourceDependencyId: r-12345678
        serviceId: s-12345678
        token: "2"
      properties:
        id:
          description: ID of a resource
          example: Porro assumenda odit et molestias temporibus est.
          type: string
        parameterMap:
          additionalProperties:
            example: Placeat et est dolore magnam quo autem.
            type: string
          description: A map of the source parameter to the dependency resource parameter
          example:
            clusterId: writerId
            clusterOrg: userDatabase
          type: object
        resourceDependencyId:
          description: ID of a resource
          example: Dolores aliquam quos aspernatur ut modi.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ns
          minLength: 1
          type: string
      required:
      - id
      - resourceDependencyId
      - serviceId
      - token
      type: object
    AddResourceDependencyRequest2:
      example:
        parameterMap:
          clusterId: writerId
          clusterOrg: userDatabase
      properties:
        parameterMap:
          additionalProperties:
            example: Non atque blanditiis placeat et et.
            type: string
          description: A map of the source parameter to the dependency resource parameter
          example:
            clusterId: writerId
            clusterOrg: userDatabase
          type: object
      type: object
    AddStorageVolumeConfigRequest:
      example:
        id: sc-12345678
        mountPath: /data
        serviceId: s-12345678
        storageVolumeConfigId: svc-12345678
        token: "0"
      properties:
        id:
          description: ID of a Storage Config
          example: Quasi at.
          type: string
        mountPath:
          description: The path where the storage volume will be mounted
          example: /data
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        storageVolumeConfigId:
          description: ID of a Storage Volume Config
          example: Beatae omnis dolores eaque.
          type: string
        token:
          description: JWT token used to perform authorization
          example: i8
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - storageVolumeConfigId
      - token
      type: object
    AddStorageVolumeConfigRequest2:
      example:
        mountPath: /data
      properties:
        mountPath:
          description: The path where the storage volume will be mounted
          example: /data
          type: string
      type: object
    AdditionalSecurityContext:
      example:
        AddCapabilities:
        - CAP_NET_ADMIN
        - CAP_NET_RAW
        DropCapabilities:
        - CAP_NET_ADMIN
        - CAP_NET_RAW
        SupplementalGroupIDs:
        - 1001
        - 999
      properties:
        AddCapabilities:
          description: Capabilities to add
          example:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          items:
            example: Qui ut repellat odio tenetur.
            type: string
          type: array
        DropCapabilities:
          description: Capabilities to drop
          example:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          items:
            example: Inventore expedita iure dolor repellendus.
            type: string
          type: array
        SupplementalGroupIDs:
          description: Supplemental group IDs
          example:
          - 1001
          - 999
          items:
            example: 8844422099649685953
            format: int64
            type: integer
          type: array
      type: object
    Address:
      example:
        addressLine1: 1234 Main St
        addressLine2: Apt 123
        addressLine3: Building 123
        city: San Francisco
        country: US
        state: CA
        zip: "94123"
      properties:
        addressLine1:
          description: The street address
          example: 1234 Main St
          type: string
        addressLine2:
          description: Address Line 2
          example: Apt 123
          type: string
        addressLine3:
          description: Address Line 3
          example: Building 123
          type: string
        city:
          description: Name of the City
          example: San Francisco
          type: string
        country:
          description: Name of the Country
          example: US
          type: string
        state:
          description: Name of the State/Province/Region
          example: CA
          type: string
        zip:
          description: Zip code
          example: "94123"
          type: string
      required:
      - addressLine1
      - city
      - country
      - state
      - zip
      type: object
    AutoScalingMetricSpec:
      example:
        metricEndpoint: http://localhost:9187/metrics
        metricLabelName: label
        metricLabelValue: value
        metricName: metric_name
      properties:
        metricEndpoint:
          description: The local host endpoint to supply prometheus metric
          example: http://localhost:9187/metrics
          type: string
        metricLabelName:
          description: The prometheus metric label name for scaling
          example: label
          type: string
        metricLabelValue:
          description: The prometheus metric label value for scaling
          example: value
          type: string
        metricName:
          description: The prometheus metric name for scaling
          example: metric_name
          type: string
      required:
      - metricEndpoint
      - metricLabelName
      - metricLabelValue
      - metricName
      type: object
    AutoscalingPolicy:
      description: Autoscaling policy for compute nodes
      example:
        idleMinutesBeforeScalingDown: 1
        idleThreshold: 1
        maxReplicas: "4"
        minReplicas: "1"
        overUtilizedMinutesBeforeScalingUp: 1
        overUtilizedThreshold: 1
        scalingMetric:
          metricEndpoint: http://localhost:9187/metrics
          metricLabelName: label
          metricLabelValue: value
          metricName: metric_name
      properties:
        idleMinutesBeforeScalingDown:
          default: 5
          description: Minutes before scaling down the compute nodes in idle state
          example: 1
          format: int64
          type: integer
        idleThreshold:
          default: 20
          description: Metric value below threshold will be considered to be idle
          example: 1
          format: int64
          type: integer
        maxReplicas:
          description: Maximum number of compute nodes to provision
          example: "4"
          type: string
        minReplicas:
          description: Minimum number of compute nodes to provision
          example: "1"
          type: string
        overUtilizedMinutesBeforeScalingUp:
          default: 5
          description: Minutes before scaling up the compute nodes in overUtilized
            state
          example: 1
          format: int64
          type: integer
        overUtilizedThreshold:
          default: 80
          description: Metric value beyond threshold will be considered to be overUtilized
          example: 1
          format: int64
          type: integer
        scalingMetric:
          $ref: '#/components/schemas/AutoScalingMetricSpec'
      required:
      - maxReplicas
      - minReplicas
      type: object
    BackendPortConfiguration:
      example:
        associatedResourceIDs:
        - r-12345678
        - r-abcdef12
        backendPort: 8080
        ingressPort: 1234
      properties:
        associatedResourceIDs:
          description: The IDs of the resource associated with the backend port
          example:
          - r-12345678
          - r-abcdef12
          items:
            description: ID of a resource
            example: Non voluptatum incidunt ullam corporis minima quos.
            type: string
          type: array
        backendPort:
          description: The port to forward traffic to
          example: 8080
          format: int64
          type: integer
        ingressPort:
          description: The ingress port to configure on the load balancer
          example: 1234
          format: int64
          type: integer
      required:
      - associatedResourceIDs
      - backendPort
      - ingressPort
      type: object
    BackupConfiguration:
      example:
        backupPeriodInHours: 24
        backupRetentionInDays: 7
      properties:
        backupPeriodInHours:
          description: The period in hours to take backups
          example: 24
          format: int64
          type: integer
        backupRetentionInDays:
          description: The number of days to retain backups
          example: 7
          format: int64
          type: integer
      required:
      - backupPeriodInHours
      - backupRetentionInDays
      type: object
    BackupStatus:
      example:
        backupPeriodInHours: 2
        backupRetentionInDays: 7
        earliestRestoreTime: 2021-09-01T00:00:00Z
        lastBackupTime: 2021-09-01T00:00:00Z
      properties:
        backupPeriodInHours:
          description: The backup period in hours
          example: 2
          format: int64
          type: integer
        backupRetentionInDays:
          description: The backup retention in days
          example: 7
          format: int64
          type: integer
        earliestRestoreTime:
          description: The earliest restore time
          example: 2021-09-01T00:00:00Z
          type: string
        lastBackupTime:
          description: The last backup time
          example: 2021-09-01T00:00:00Z
          type: string
      required:
      - backupPeriodInHours
      - backupRetentionInDays
      type: object
    BlobStorageConfiguration:
      example:
        GCSConfiguration: {}
        S3Configuration: {}
      properties:
        GCSConfiguration:
          example: {}
          type: object
        S3Configuration:
          example: {}
          type: object
      type: object
    BuildServiceFromComposeSpecRequest:
      example:
        configs:
          Culpa rerum sunt necessitatibus.: Cumque at delectus aspernatur.
          Eum soluta qui ullam.: Necessitatibus provident reprehenderit.
          Maiores totam quos debitis recusandae eos.: Maxime ullam quaerat sapiente.
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        environment: dev
        environmentType: DEV
        fileContent: Aut velit veniam earum maiores dolorem voluptas.
        name: MySQL multi-writer service
        release: true
        releaseAsPreferred: true
        releaseVersionName: mysql
        secrets:
          Adipisci dolor.: Nulla consequatur quis aliquid quia sunt est.
          Eos sed et quibusdam.: Impedit soluta ab itaque nemo et.
        serviceLogoURL: http://baileytrantow.info/janessa_tromp
        token: d
      properties:
        configs:
          additionalProperties:
            example: Aut omnis iure et possimus ea.
            type: string
          description: Configs for the service. Key is the compose spec name of the
            config and value is base64 encoded config content
          example:
            Nam adipisci.: Ratione ut veritatis tempora omnis voluptatem et.
          type: object
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        environment:
          description: The environment to build the service in
          example: dev
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        fileContent:
          description: Base64 encoded Compose Spec YAML in docker compose format
          example: Perferendis voluptatem labore sunt et non veritatis.
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        release:
          description: Release the service after building
          example: true
          type: boolean
        releaseAsPreferred:
          description: Release the service as preferred
          example: true
          type: boolean
        releaseVersionName:
          description: Release version name
          example: mysql
          type: string
        secrets:
          additionalProperties:
            example: Est accusamus ratione excepturi.
            type: string
          description: Secrets for the service. Key is the compose spec name of the
            secret and value is base64 encoded secret content
          example:
            Fuga ullam accusantium.: Illo veniam dolor quis aspernatur natus.
            Tempora illo ex.: Est nobis vitae quos.
          type: object
        serviceLogoURL:
          description: The logo for the service
          example: http://predovictremblay.net/elmira.fisher
          format: uri
          type: string
        token:
          description: JWT token used to perform authorization
          example: rh0
          minLength: 1
          type: string
      required:
      - fileContent
      - name
      - token
      type: object
    BuildServiceFromComposeSpecRequest2:
      example:
        configs:
          Facilis aspernatur mollitia est.: Quos doloremque soluta laborum facere.
          Qui pariatur quos eum omnis.: Est eligendi blanditiis dolore enim.
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        environment: dev
        environmentType: DEV
        fileContent: Sunt aut quos omnis culpa maxime laudantium.
        name: MySQL multi-writer service
        release: true
        releaseAsPreferred: true
        releaseVersionName: mysql
        secrets:
          Adipisci voluptatem ad voluptas accusantium.: Doloremque blanditiis.
          At cum odit non.: Consequatur et ut hic assumenda sint omnis.
        serviceLogoURL: http://robel.com/gino.pollich
      properties:
        configs:
          additionalProperties:
            example: Corporis enim.
            type: string
          description: Configs for the service. Key is the compose spec name of the
            config and value is base64 encoded config content
          example:
            Quo sunt sed ut.: Facilis enim qui.
          type: object
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        environment:
          description: The environment to build the service in
          example: dev
          type: string
        environmentType:
          description: The type of the environment
          example: DEV
          type: string
        fileContent:
          description: Base64 encoded Compose Spec YAML in docker compose format
          example: Esse atque reprehenderit natus illum.
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        release:
          description: Release the service after building
          example: true
          type: boolean
        releaseAsPreferred:
          description: Release the service as preferred
          example: true
          type: boolean
        releaseVersionName:
          description: Release version name
          example: mysql
          type: string
        secrets:
          additionalProperties:
            example: Rerum in numquam laudantium et praesentium molestiae.
            type: string
          description: Secrets for the service. Key is the compose spec name of the
            secret and value is base64 encoded secret content
          example:
            Aut laboriosam.: Cum delectus id consequatur sed.
          type: object
        serviceLogoURL:
          description: The logo for the service
          example: http://leannonschowalter.com/monique
          format: uri
          type: string
      required:
      - fileContent
      - name
      type: object
    BuildServiceFromComposeSpecResult:
      example:
        productTierID: pt-12345678
        serviceEnvironmentID: se-12345678
        serviceID: s-12345678
        undefinedResources:
          mysql: r-12345678
      properties:
        productTierID:
          description: ID of a Product Tier
          example: Illum nesciunt libero autem ea.
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        undefinedResources:
          additionalProperties:
            description: ID of a resource
            example: Minus cupiditate quisquam quia delectus sequi maiores.
            type: string
          description: Resources that appear in the service plan but were not defined
            in the spec. These resources were not processed during the build.
          example:
            mysql: r-12345678
          type: object
      required:
      - productTierID
      - serviceEnvironmentID
      - serviceID
      type: object
    BuildServiceFromServicePlanSpecRequest:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        environment: dev
        environmentType: DEV
        fileContent: Doloremque sed exercitationem et qui quaerat ea.
        name: MySQL multi-writer service
        release: true
        releaseAsPreferred: true
        releaseVersionName: mysql
        serviceLogoURL: http://sipes.biz/alan.volkman
        token: g1
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        environment:
          description: The environment to build the service in
          example: dev
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        fileContent:
          description: Base64 encoded Compose Spec YAML in service plan configuration
            format
          example: Molestiae aut quaerat sunt.
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        release:
          description: Release the service after building
          example: true
          type: boolean
        releaseAsPreferred:
          description: Release the service as preferred
          example: true
          type: boolean
        releaseVersionName:
          description: Release version name
          example: mysql
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: http://corkery.name/bennie
          format: uri
          type: string
        token:
          description: JWT token used to perform authorization
          example: "6"
          minLength: 1
          type: string
      required:
      - fileContent
      - name
      - token
      type: object
    BuildServiceFromServicePlanSpecRequest2:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        environment: dev
        environmentType: DEV
        fileContent: Qui facilis consequatur et accusantium maiores dolor.
        name: MySQL multi-writer service
        release: true
        releaseAsPreferred: true
        releaseVersionName: mysql
        serviceLogoURL: http://gottlieb.org/adaline_breitenberg
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        environment:
          description: The environment to build the service in
          example: dev
          type: string
        environmentType:
          description: The type of the environment
          example: DEV
          type: string
        fileContent:
          description: Base64 encoded Compose Spec YAML in service plan configuration
            format
          example: Temporibus sunt accusantium aut ducimus.
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        release:
          description: Release the service after building
          example: true
          type: boolean
        releaseAsPreferred:
          description: Release the service as preferred
          example: true
          type: boolean
        releaseVersionName:
          description: Release version name
          example: mysql
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: http://bogan.name/kobe.upton
          format: uri
          type: string
      required:
      - fileContent
      - name
      type: object
    BuildServiceFromServicePlanSpecResult:
      example:
        productTierID: pt-12345678
        serviceEnvironmentID: se-12345678
        serviceID: s-12345678
        undefinedResources:
          mysql: r-12345678
      properties:
        productTierID:
          description: ID of a Product Tier
          example: Ut et.
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        undefinedResources:
          additionalProperties:
            description: ID of a resource
            example: Voluptas nihil.
            type: string
          description: Resources that appear in the service plan but were not defined
            in the spec. These resources were not processed during the build.
          example:
            mysql: r-12345678
          type: object
      required:
      - productTierID
      - serviceEnvironmentID
      - serviceID
      type: object
    CancelSubscriptionRequestRequest:
      example:
        id: subr-12345678
        token: da
      properties:
        id:
          description: ID of a Subscription Request
          example: Aut ipsa.
          type: string
        token:
          description: JWT token used to perform authorization
          example: k
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    Change:
      example:
        attributes:
          resourceId: r-12345678
        changeType: PENDING_NEW
        name: Customer metrics
      properties:
        attributes:
          additionalProperties:
            example: Quia est et vel autem amet id.
            type: string
          description: Additional setting/component attributes
          example:
            resourceId: r-12345678
          type: object
        changeType:
          description: State of the configuration change
          example: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
          type: string
        name:
          description: The name of the setting/component that changed
          example: Customer metrics
          type: string
      required:
      - attributes
      - changeType
      - name
      type: object
    ChangePasswordRequest:
      example:
        email: abc@gmail.com
        password: password
        token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
        token:
          example: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
          minLength: 1
          type: string
      required:
      - email
      - password
      - token
      type: object
    ChangePlanRequest:
      example:
        planName: STARTER
        token: y6z
      properties:
        planName:
          description: This parameter is used to select the appropriate Product Plan
          example: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
          type: string
        token:
          description: JWT token used to perform authorization
          example: 7gm
          minLength: 1
          type: string
      required:
      - planName
      - token
      type: object
    ChangePlanRequest2:
      example:
        planName: STARTER
      properties:
        planName:
          description: The name of the plan this user is changing to
          example: STARTER
          type: string
      required:
      - planName
      type: object
    ChangeSet:
      example:
        categorizedResourceChanges:
          Deserunt et sed.:
            changes:
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            status: PENDING_UPDATE
        imageConfigChanges:
          changeState: PENDING_NEW
          imageConfigId: imgc-12345678
          imageName: mysql
        infraConfigChanges:
          changeState: PENDING_NEW
          infraConfigId: ic-12345678
          name: MySQL Writer Infra Config
        overallResourceStatus: PENDING_UPDATE
        productTierFeatureChanges: PENDING_UPDATE
        resourceChanges: PENDING_DELETE
        resourceName: Accusantium cumque qui alias doloribus placeat.
      properties:
        categorizedResourceChanges:
          additionalProperties: true
          description: "Summary of all changes within a resource for each category\
            \ (ie. image, infra, product tier feature, etc.)"
          example:
            Deserunt et sed.:
              changes:
              - attributes:
                  resourceId: r-12345678
                changeType: PENDING_NEW
                name: Customer metrics
              - attributes:
                  resourceId: r-12345678
                changeType: PENDING_NEW
                name: Customer metrics
              - attributes:
                  resourceId: r-12345678
                changeType: PENDING_NEW
                name: Customer metrics
              - attributes:
                  resourceId: r-12345678
                changeType: PENDING_NEW
                name: Customer metrics
              status: PENDING_UPDATE
          type: object
        imageConfigChanges:
          $ref: '#/components/schemas/ImageConfigChangeSummary'
        infraConfigChanges:
          $ref: '#/components/schemas/InfraConfigChangeSummary'
        overallResourceStatus:
          description: Summary status of the changes
          example: NO_CHANGE|PENDING_CHANGE|NONE
          type: string
        productTierFeatureChanges:
          description: State of the configuration change
          example: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
          type: string
        resourceChanges:
          description: State of the configuration change
          example: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
          type: string
        resourceName:
          description: The name of the resource
          example: Voluptatem vel libero illo inventore neque.
          type: string
      required:
      - categorizedResourceChanges
      - overallResourceStatus
      type: object
    ChangeSummary:
      example:
        changes:
        - attributes:
            resourceId: r-12345678
          changeType: PENDING_NEW
          name: Customer metrics
        - attributes:
            resourceId: r-12345678
          changeType: PENDING_NEW
          name: Customer metrics
        - attributes:
            resourceId: r-12345678
          changeType: PENDING_NEW
          name: Customer metrics
        - attributes:
            resourceId: r-12345678
          changeType: PENDING_NEW
          name: Customer metrics
        status: PENDING_UPDATE
      properties:
        changes:
          description: List of individual changes
          example:
          - attributes:
              resourceId: r-12345678
            changeType: PENDING_NEW
            name: Customer metrics
          - attributes:
              resourceId: r-12345678
            changeType: PENDING_NEW
            name: Customer metrics
          - attributes:
              resourceId: r-12345678
            changeType: PENDING_NEW
            name: Customer metrics
          items:
            $ref: '#/components/schemas/Change'
          type: array
        status:
          description: Summary status of the changes
          example: NO_CHANGE|PENDING_CHANGE|NONE
          type: string
      required:
      - changes
      - status
      type: object
    CheckIfContainerImageAccessibleRequest:
      example:
        image: library/mysql:5.7
        imageRegistry: docker.io
        password: password
        token: u
        username: username
      properties:
        image:
          description: Name of the image along with the tag. Include the repository
            name if the image is not from the official repository
          example: library/mysql:5.7
          type: string
        imageRegistry:
          description: Registry where the image is stored
          example: docker.io
          type: string
        password:
          description: Password to access the image registry
          example: password
          type: string
        token:
          description: JWT token used to perform authorization
          example: m
          minLength: 1
          type: string
        username:
          description: Username to access the image registry
          example: username
          type: string
      required:
      - image
      - imageRegistry
      - token
      type: object
    CheckIfContainerImageAccessibleResult:
      example:
        errorMsg: Ipsa earum similique.
        imageAccessible: false
      properties:
        errorMsg:
          description: Error message if the image is not accessible
          example: Ducimus sed ut expedita temporibus voluptatem.
          type: string
        imageAccessible:
          description: Indicates if the image is accessible
          example: true
          type: boolean
      required:
      - imageAccessible
      type: object
    CloudProviderHealthSummary:
      example:
        cloudProvider: aws
        deployingInstances: 4272411670035649318
        healthyInstances: 7934422432354382171
        message: Cloud provider is healthy
        regionalHealthSummary:
          Atque necessitatibus voluptatum distinctio et numquam rerum.:
            deployingInstances: 1276218605858303989
            deploymentCellHealthSummary:
              Asperiores animi voluptas illo quis.:
                deployingInstances: 9031036685391377989
                healthyInstances: 1455563721315335748
                hostClusterID: hc-12345678
                message: Cell is healthy
                status: Healthy
                totalInstances: 7556616230690939714
                unhealthyInstances: 928820487896459684
                unknownInstances: 689084757366581839
            healthyInstances: 8558377965344457119
            message: Region is healthy
            region: us-east-1
            status: Healthy
            totalInstances: 9129149433207078769
            unhealthyInstances: 7156615963917017313
            unknownInstances: 8805267149196218880
          Voluptatem impedit ab ipsum et.:
            deployingInstances: 1276218605858303989
            deploymentCellHealthSummary:
              Asperiores animi voluptas illo quis.:
                deployingInstances: 9031036685391377989
                healthyInstances: 1455563721315335748
                hostClusterID: hc-12345678
                message: Cell is healthy
                status: Healthy
                totalInstances: 7556616230690939714
                unhealthyInstances: 928820487896459684
                unknownInstances: 689084757366581839
            healthyInstances: 8558377965344457119
            message: Region is healthy
            region: us-east-1
            status: Healthy
            totalInstances: 9129149433207078769
            unhealthyInstances: 7156615963917017313
            unknownInstances: 8805267149196218880
        status: Healthy
        totalInstances: 8323176401999343048
        unhealthyInstances: 5556073772340169643
        unknownInstances: 8128003675439571401
      properties:
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        deployingInstances:
          description: The number of instances currently deploying
          example: 7829841123122523694
          format: int64
          type: integer
        healthyInstances:
          description: The number of healthy instances in the cloud provider
          example: 1201511995706186497
          format: int64
          type: integer
        message:
          description: The status message
          example: Cloud provider is healthy
          type: string
        regionalHealthSummary:
          additionalProperties:
            $ref: '#/components/schemas/RegionalHealthSummary'
          description: The summary of health by region
          example:
            Ex dolores illo.:
              deployingInstances: 1276218605858303989
              deploymentCellHealthSummary:
                Asperiores animi voluptas illo quis.:
                  deployingInstances: 9031036685391377989
                  healthyInstances: 1455563721315335748
                  hostClusterID: hc-12345678
                  message: Cell is healthy
                  status: Healthy
                  totalInstances: 7556616230690939714
                  unhealthyInstances: 928820487896459684
                  unknownInstances: 689084757366581839
              healthyInstances: 8558377965344457119
              message: Region is healthy
              region: us-east-1
              status: Healthy
              totalInstances: 9129149433207078769
              unhealthyInstances: 7156615963917017313
              unknownInstances: 8805267149196218880
            Odio ex sit ex aut.:
              deployingInstances: 1276218605858303989
              deploymentCellHealthSummary:
                Asperiores animi voluptas illo quis.:
                  deployingInstances: 9031036685391377989
                  healthyInstances: 1455563721315335748
                  hostClusterID: hc-12345678
                  message: Cell is healthy
                  status: Healthy
                  totalInstances: 7556616230690939714
                  unhealthyInstances: 928820487896459684
                  unknownInstances: 689084757366581839
              healthyInstances: 8558377965344457119
              message: Region is healthy
              region: us-east-1
              status: Healthy
              totalInstances: 9129149433207078769
              unhealthyInstances: 7156615963917017313
              unknownInstances: 8805267149196218880
            Qui totam.:
              deployingInstances: 1276218605858303989
              deploymentCellHealthSummary:
                Asperiores animi voluptas illo quis.:
                  deployingInstances: 9031036685391377989
                  healthyInstances: 1455563721315335748
                  hostClusterID: hc-12345678
                  message: Cell is healthy
                  status: Healthy
                  totalInstances: 7556616230690939714
                  unhealthyInstances: 928820487896459684
                  unknownInstances: 689084757366581839
              healthyInstances: 8558377965344457119
              message: Region is healthy
              region: us-east-1
              status: Healthy
              totalInstances: 9129149433207078769
              unhealthyInstances: 7156615963917017313
              unknownInstances: 8805267149196218880
          type: object
        status:
          description: The status of the cloud provider
          example: Healthy
          type: string
        totalInstances:
          description: The total number of instances in the cloud provider
          example: 8613671092688062695
          format: int64
          type: integer
        unhealthyInstances:
          description: The number of unhealthy instances in the cloud provider
          example: 5310714781574534575
          format: int64
          type: integer
        unknownInstances:
          description: The number of instances with unknown status
          example: 5134207052289279601
          format: int64
          type: integer
      required:
      - cloudProvider
      - deployingInstances
      - healthyInstances
      - message
      - regionalHealthSummary
      - status
      - totalInstances
      - unhealthyInstances
      type: object
    CloudProvidersConfigReadiness:
      additionalProperties: true
      description: The readiness of the cloud providers configurations
      example:
        aws:
          resourceA: missing terraform configuration
          resourceB: missing cloudformation configuration
      type: object
    ClusterEndpoint:
      example:
        endpoint: https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
        healthStatus: HEALTHY
        networkingType: PUBLIC
        openPorts:
        - 30000
        - 30001
        primary: true
      properties:
        endpoint:
          default: ""
          description: The endpoint
          example: https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
          type: string
        healthStatus:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|N/A
          type: string
        networkingType:
          description: The networking type for this resource
          example: PUBLIC
          type: string
        openPorts:
          description: The open ports
          example:
          - 30000
          - 30001
          items:
            example: 5082894771982551114
            format: int64
            type: integer
          type: array
        primary:
          default: false
          description: Whether this is the primary endpoint
          example: true
          type: boolean
      type: object
    CompleteOAuthConnectionRequest:
      example:
        code: ac_12345678
        state: "12345678"
        token: "9"
      properties:
        code:
          description: Authorization code from Stripe
          example: ac_12345678
          type: string
        state:
          description: Random string used on the authorize URL
          example: "12345678"
          type: string
        token:
          description: JWT token used to perform authorization
          example: 5wf
          minLength: 1
          type: string
      required:
      - token
      type: object
    CompleteOAuthConnectionRequest2:
      example:
        code: ac_12345678
        state: "12345678"
      properties:
        code:
          description: Authorization code from Stripe
          example: ac_12345678
          type: string
        state:
          description: Random string used on the authorize URL
          example: "12345678"
          type: string
      type: object
    CompleteOAuthConnectionResult:
      example:
        stripeUserID: acct_12345678
      properties:
        stripeUserID:
          description: Stripe User ID
          example: acct_12345678
          type: string
      type: object
    ComputeInstanceTypeConfigOverride:
      example:
        instanceLifeCycleType: Spot|OnDemand
        rootVolumeSizeGi: 10
        warmPoolConfiguration:
          minimumNodesInPool: 1
      properties:
        instanceLifeCycleType:
          description: The instance life cycle type for this compute instance type
            config
          example: Spot|OnDemand
          type: string
        rootVolumeSizeGi:
          description: Size of the root volume in Gi
          example: 10
          format: int64
          type: integer
        warmPoolConfiguration:
          $ref: '#/components/schemas/WarmPoolConfiguration'
      type: object
    ConsumptionServiceAuthRequest:
      example:
        password: Facere facere sed soluta.
        username: Est saepe rem aperiam et non alias.
      properties:
        password:
          example: Ducimus voluptatum laudantium culpa ipsam.
          type: string
        username:
          example: Sed voluptatem atque.
          type: string
      required:
      - password
      - username
      type: object
    ConsumptionServiceAuthResult:
      example:
        token: esh
      properties:
        token:
          description: JWT token used to perform authorization
          example: i2
          minLength: 1
          type: string
      required:
      - token
      type: object
    ContactusRequest:
      example:
        company: ABC
        email: abc@gmail.com
        message: this is a test
        name: John Doe
      properties:
        company:
          example: ABC
          minLength: 1
          type: string
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        message:
          example: this is a test
          minLength: 1
          type: string
        name:
          example: John Doe
          minLength: 1
          type: string
      required:
      - company
      - email
      - message
      - name
      type: object
    CopyProductTierRequest:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        billingProductID: abc123
        description: A premium product tier
        documentation: Any documentation
        exportUsageMetering: true
        exportUsageMeteringConfig:
          GCS:
            GCSBucketName: my_billing_bucket_name
          S3:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
        gcpRegions:
        - us-central1
        maxNumberOfInstances: 5
        name: Premium
        planDescription: A premium plan
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        pricing:
          price1: value1
        serviceId: s-12345678
        serviceModelId: sm-12345678
        sourceId: pt-12345678
        support: Any support
        targetTierType: OMNISTRATE_DEDICATED_TENANCY
        token: fy
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Reiciendis fuga et et beatae voluptas.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this product tier is available on
          example:
          - northcentralus
          items:
            example: Ut delectus et ut.
            type: string
          type: array
        billingProductID:
          description: Optional billing product ID for tax purposes
          example: abc123
          type: string
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        exportUsageMetering:
          description: Export usage metering data
          example: true
          type: boolean
        exportUsageMeteringConfig:
          additionalProperties: true
          description: Export usage metering data configuration
          example:
            GCS:
              GCSBucketName: my_billing_bucket_name
            S3:
              S3BucketArn: arn:aws:s3:::my_billing_bucket_name
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Odit voluptatem qui enim expedita quam.
            type: string
          type: array
        maxNumberOfInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricePerUnit:
          additionalProperties: true
          description: Price per unit.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        pricing:
          description: Pricing
          example:
            price1: value1
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Magnam consectetur error at.
          type: string
        sourceId:
          description: ID of a Product Tier
          example: Maiores ut temporibus dicta.
          type: string
        support:
          description: Support
          example: Any support
          type: string
        targetTierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        token:
          description: JWT token used to perform authorization
          example: "3"
          minLength: 1
          type: string
      required:
      - description
      - name
      - serviceId
      - serviceModelId
      - sourceId
      - token
      type: object
    CopyProductTierRequest2:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        billingProductID: abc123
        description: A premium product tier
        documentation: Any documentation
        exportUsageMetering: true
        exportUsageMeteringConfig:
          GCS:
            GCSBucketName: my_billing_bucket_name
          S3:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
        gcpRegions:
        - us-central1
        maxNumberOfInstances: 5
        name: Premium
        planDescription: A premium plan
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        pricing:
          price1: value1
        serviceModelId: sm-12345678
        support: Any support
        targetTierType: OMNISTRATE_DEDICATED_TENANCY
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Magnam illo.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this product tier is available on
          example:
          - northcentralus
          items:
            example: Quia et doloribus.
            type: string
          type: array
        billingProductID:
          description: Optional billing product ID for tax purposes
          example: abc123
          type: string
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        exportUsageMetering:
          description: Export usage metering data
          example: true
          type: boolean
        exportUsageMeteringConfig:
          additionalProperties: true
          description: Export usage metering data configuration
          example:
            GCS:
              GCSBucketName: my_billing_bucket_name
            S3:
              S3BucketArn: arn:aws:s3:::my_billing_bucket_name
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Optio repudiandae est animi.
            type: string
          type: array
        maxNumberOfInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricePerUnit:
          additionalProperties: true
          description: Price per unit.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        pricing:
          description: Pricing
          example:
            price1: value1
        serviceModelId:
          description: Service model ID
          example: sm-12345678
          type: string
        support:
          description: Support
          example: Any support
          type: string
        targetTierType:
          description: Tier type
          example: OMNISTRATE_DEDICATED_TENANCY
          type: string
      required:
      - description
      - name
      - serviceModelId
      type: object
    CopyServiceModelRequest:
      example:
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        features:
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        name: MySQL multi-writer service hosted model
        serviceId: s-12345678
        sourceId: sm-12345678
        targetServiceModelType: CUSTOMER_HOSTED
        targetTierType: OMNISTRATE_DEDICATED_TENANCY
        token: z
      properties:
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            description: ID of an Account Config
            example: Hic et ex illo nam cupiditate.
            type: string
          type: array
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        features:
          description: Enabled service model features
          example:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          items:
            $ref: '#/components/schemas/ServiceModelFeatureDetail'
          type: array
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceId:
          description: ID of a Service Model
          example: Omnis magni rem consequatur doloribus sint.
          type: string
        targetServiceModelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        targetTierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        token:
          description: JWT token used to perform authorization
          example: g
          minLength: 1
          type: string
      required:
      - description
      - name
      - serviceId
      - sourceId
      - targetServiceModelType
      - token
      type: object
    CopyServiceModelRequest2:
      example:
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        features:
        - configuration:
            Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum eum
              ab.
            Nulla consequatur facilis magnam.: Quisquam voluptas.
            Sed aliquam ut eos ullam.: Fuga aut optio.
          feature: Voluptatum est suscipit.
        - configuration:
            Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum eum
              ab.
            Nulla consequatur facilis magnam.: Quisquam voluptas.
            Sed aliquam ut eos ullam.: Fuga aut optio.
          feature: Voluptatum est suscipit.
        name: MySQL multi-writer service hosted model
        targetServiceModelType: CUSTOMER_HOSTED
        targetTierType: OMNISTRATE_DEDICATED_TENANCY
      properties:
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            example: Voluptatem facilis hic ipsa eum.
            type: string
          type: array
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        features:
          description: Enabled service model features
          example:
          - configuration:
              Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum eum
                ab.
              Nulla consequatur facilis magnam.: Quisquam voluptas.
              Sed aliquam ut eos ullam.: Fuga aut optio.
            feature: Voluptatum est suscipit.
          - configuration:
              Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum eum
                ab.
              Nulla consequatur facilis magnam.: Quisquam voluptas.
              Sed aliquam ut eos ullam.: Fuga aut optio.
            feature: Voluptatum est suscipit.
          - configuration:
              Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum eum
                ab.
              Nulla consequatur facilis magnam.: Quisquam voluptas.
              Sed aliquam ut eos ullam.: Fuga aut optio.
            feature: Voluptatum est suscipit.
          items:
            $ref: '#/components/schemas/ServiceModelFeatureDetail'
          type: array
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        targetServiceModelType:
          description: The model type encapsulating this service
          example: CUSTOMER_HOSTED
          type: string
        targetTierType:
          description: Target product tier type
          example: OMNISTRATE_DEDICATED_TENANCY
          type: string
      required:
      - description
      - name
      - targetServiceModelType
      type: object
    CreateAccountConfigRequest:
      description: Account configuration including the role required to access
      example:
        awsAccessKey: Fuga sapiente magni in.
        awsAccountID: "123456789012"
        awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
        awsSecretKey: Asperiores molestiae aliquam amet quam quis eaque.
        azureSubscriptionID: 12345678-1234-1234-1234-123456789012
        azureTenantID: 12345678-1234-1234-1234-123456789012
        byoaInstanceID: instance-12345678
        cloudProviderId: infra-12345678
        description: An AWS account hosting multiple dev environments
        gcpProjectID: my-project
        gcpProjectNumber: "123456789012"
        gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
        gcpServiceAccountKey: Aut libero.
        name: Dev AWS account
        token: jk
      properties:
        awsAccessKey:
          description: The AWS access key
          example: Labore quia veniam eligendi excepturi modi ut.
          type: string
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        awsBootstrapRoleARN:
          description: The security role ARN or service account ARN that grants access
            to operate the infra
          example: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          type: string
        awsSecretKey:
          description: The AWS secret key
          example: Odit porro autem eius eveniet.
          type: string
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        azureTenantID:
          description: The Azure tenant ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        byoaInstanceID:
          description: The BYOA instance ID that this account config is tied to
          example: instance-12345678
          type: string
        cloudProviderId:
          description: ID of an CloudProvider
          example: Temporibus veniam maxime quae blanditiis nam tenetur.
          type: string
        description:
          description: The description for the account
          example: An AWS account hosting multiple dev environments
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        gcpProjectNumber:
          description: The GCP project number
          example: "123456789012"
          type: string
        gcpServiceAccountEmail:
          description: The GCP service account email
          example: bootstrap@my-project.iam.gserviceaccount.com
          type: string
        gcpServiceAccountKey:
          description: The GCP service account key
          example: Omnis repudiandae.
          type: string
        name:
          description: The name of the account
          example: Dev AWS account
          type: string
        token:
          description: JWT token used to perform authorization
          example: x
          minLength: 1
          type: string
      required:
      - cloudProviderId
      - description
      - name
      - token
      type: object
    CreateAccountConfigRequest2:
      example:
        awsAccessKey: Veritatis qui quidem dolorem expedita sapiente eaque.
        awsAccountID: "123456789012"
        awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
        awsSecretKey: Et recusandae.
        azureSubscriptionID: 12345678-1234-1234-1234-123456789012
        azureTenantID: 12345678-1234-1234-1234-123456789012
        byoaInstanceID: instance-12345678
        cloudProviderId: infra-12345678
        description: An AWS account hosting multiple dev environments
        gcpProjectID: my-project
        gcpProjectNumber: "123456789012"
        gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
        gcpServiceAccountKey: Aspernatur iste.
        name: Dev AWS account
      properties:
        awsAccessKey:
          description: The AWS access key
          example: Saepe non soluta unde quibusdam.
          type: string
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        awsBootstrapRoleARN:
          description: The security role ARN or service account ARN that grants access
            to operate the infra
          example: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          type: string
        awsSecretKey:
          description: The AWS secret key
          example: Quia maiores et animi fuga et ut.
          type: string
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        azureTenantID:
          description: The Azure tenant ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        byoaInstanceID:
          description: The BYOA instance ID that this account config is tied to
          example: instance-12345678
          type: string
        cloudProviderId:
          description: Cloud Provider ID to operate on
          example: infra-12345678
          type: string
        description:
          description: The description for the account
          example: An AWS account hosting multiple dev environments
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        gcpProjectNumber:
          description: The GCP project number
          example: "123456789012"
          type: string
        gcpServiceAccountEmail:
          description: The GCP service account email
          example: bootstrap@my-project.iam.gserviceaccount.com
          type: string
        gcpServiceAccountKey:
          description: The GCP service account key
          example: Assumenda ducimus et quos.
          type: string
        name:
          description: The name of the account
          example: Dev AWS account
          type: string
      required:
      - cloudProviderId
      - description
      - name
      type: object
    CreateComputeConfigRequest:
      example:
        autoscalingPolicy:
          maxReplicas: 4
          minReplicas: 1
        cpuArchitecture: X86_64|ARM64
        description: my compute config description
        name: my compute config
        replicaCount: "3"
        resources:
          limits:
            cpu: "1"
            memory: 500Mi
          requests:
            cpu: "0.5"
            memory: 200Mi
        rootVolumeSizeGi: 10
        serviceId: s-12345678
        token: 5v
        warmPoolConfiguration:
          minimumNodesInPool: 1
      properties:
        autoscalingPolicy:
          $ref: '#/components/schemas/AutoscalingPolicy'
        cpuArchitecture:
          description: Processor architecture
          example: X86_64|ARM64
          type: string
        description:
          description: Description of the compute config
          example: my compute config description
          minLength: 1
          type: string
        name:
          description: Name of the compute config
          example: my compute config
          minLength: 1
          type: string
        replicaCount:
          description: Number of replicas to provision for this logical pool of nodes
            per instance of the resource
          example: "3"
          type: string
        resources:
          $ref: '#/components/schemas/ResourceSpec'
        rootVolumeSizeGi:
          description: Size of the root volume in Gi
          example: 10
          format: int64
          type: integer
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ff
          minLength: 1
          type: string
        warmPoolConfiguration:
          $ref: '#/components/schemas/WarmPoolConfiguration'
      required:
      - description
      - name
      - serviceId
      - token
      type: object
    CreateComputeConfigRequest2:
      example:
        autoscalingPolicy:
          maxReplicas: 4
          minReplicas: 1
        cpuArchitecture: X86_64|ARM64
        description: my compute config description
        name: my compute config
        replicaCount: "3"
        resources:
          limits:
            cpu: "1"
            memory: 500Mi
          requests:
            cpu: "0.5"
            memory: 200Mi
        rootVolumeSizeGi: 10
        warmPoolConfiguration:
          minimumNodesInPool: 1
      properties:
        autoscalingPolicy:
          $ref: '#/components/schemas/AutoscalingPolicy'
        cpuArchitecture:
          description: Processor architecture
          example: X86_64|ARM64
          type: string
        description:
          description: Description of the compute config
          example: my compute config description
          minLength: 1
          type: string
        name:
          description: Name of the compute config
          example: my compute config
          minLength: 1
          type: string
        replicaCount:
          description: Number of replicas to provision for this logical pool of nodes
            per instance of the resource
          example: "3"
          type: string
        resources:
          $ref: '#/components/schemas/ResourceSpec'
        rootVolumeSizeGi:
          description: Size of the root volume in Gi
          example: 10
          format: int64
          type: integer
        warmPoolConfiguration:
          $ref: '#/components/schemas/WarmPoolConfiguration'
      required:
      - description
      - name
      type: object
    CreateCustomDomainRequest:
      description: Custom domain including the role required to access
      example:
        customDomain: mydomain.dev
        description: Description of the domain
        name: Dev domain
        route53Configuration:
          awsAccountID: "123456789012"
        token: 8vg
      properties:
        customDomain:
          description: The root domain of the domain to use as suffix
          example: mydomain.dev
          type: string
        description:
          description: The description for the domain
          example: Description of the domain
          type: string
        name:
          description: The name of the custom domain
          example: Dev domain
          type: string
        route53Configuration:
          $ref: '#/components/schemas/Route53Configuration'
        token:
          description: JWT token used to perform authorization
          example: "0"
          minLength: 1
          type: string
      required:
      - customDomain
      - description
      - name
      - route53Configuration
      - token
      type: object
    CreateCustomDomainRequest2:
      example:
        customDomain: mydomain.dev
        description: Description of the domain
        name: Dev domain
        route53Configuration:
          awsAccountID: "123456789012"
      properties:
        customDomain:
          description: The root domain of the domain to use as suffix
          example: mydomain.dev
          type: string
        description:
          description: The description for the domain
          example: Description of the domain
          type: string
        name:
          description: The name of the custom domain
          example: Dev domain
          type: string
        route53Configuration:
          $ref: '#/components/schemas/Route53Configuration'
      required:
      - customDomain
      - description
      - name
      - route53Configuration
      type: object
    CreateCustomNetworkRequest:
      example:
        cidr: 10.0.0.0/16
        cloudProviderName: aws
        cloudProviderRegion: us-east-1
        name: Prod us-east-1
        networkFeaturesConfiguration:
          isPrivateLinkEnabled: false
        token: e
      properties:
        cidr:
          default: 10.0.0.0/16
          description: CIDR block for the network
          example: 10.0.0.0/16
          format: cidr
          type: string
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        cloudProviderRegion:
          description: The region of the cloud provider that the instance is running
            in.
          example: us-east-1
          type: string
        name:
          description: User friendly network name to help distinguish networks with
            same CIDRs
          example: Prod us-east-1
          type: string
        networkFeaturesConfiguration:
          $ref: '#/components/schemas/NetworkFeaturesConfiguration'
        token:
          description: JWT token used to perform authorization
          example: rfo
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - cloudProviderRegion
      - token
      type: object
    CreateCustomNetworkRequest2:
      example:
        cidr: 10.0.0.0/16
        cloudProviderName: aws
        cloudProviderRegion: us-east-1
        name: Prod us-east-1
        networkFeaturesConfiguration:
          isPrivateLinkEnabled: false
      properties:
        cidr:
          default: 10.0.0.0/16
          description: CIDR block for the network
          example: 10.0.0.0/16
          format: cidr
          type: string
        cloudProviderName:
          description: The name of the cloud provider that the instance is running
            on.
          example: aws
          type: string
        cloudProviderRegion:
          description: The region of the cloud provider that the instance is running
            in.
          example: us-east-1
          type: string
        name:
          description: User friendly network name to help distinguish networks with
            same CIDRs
          example: Prod us-east-1
          type: string
        networkFeaturesConfiguration:
          $ref: '#/components/schemas/NetworkFeaturesConfiguration'
      required:
      - cloudProviderName
      - cloudProviderRegion
      type: object
    CreateDeploymentConfigRequest:
      example:
        description: A production deployment config
        infraRollConfiguration:
          infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
          maximumNumberOfResourceInstancesPerBatch: 1
          maximumUnavailableReplicas: 1
        name: Production
        rolloutPriorityList:
        - region-12345678
        - region-abcd1234
        - region-3c3c3c3c
        token: 7u2
      properties:
        description:
          description: A brief description of the deployment config
          example: A production deployment config
          type: string
        infraRollConfiguration:
          $ref: '#/components/schemas/InfraRollConfiguration'
        name:
          description: Name of the deployment config
          example: Production
          type: string
        rolloutPriorityList:
          example:
          - region-12345678
          - region-abcd1234
          - region-3c3c3c3c
          items:
            description: ID of a Region
            example: Beatae reiciendis eveniet rerum voluptas deserunt adipisci.
            type: string
          type: array
        token:
          description: JWT token used to perform authorization
          example: ex
          minLength: 1
          type: string
      required:
      - description
      - name
      - token
      type: object
    CreateDeploymentConfigRequest2:
      example:
        description: A production deployment config
        infraRollConfiguration:
          infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
          maximumNumberOfResourceInstancesPerBatch: 1
          maximumUnavailableReplicas: 1
        name: Production
        rolloutPriorityList:
        - region-12345678
        - region-abcd1234
        - region-3c3c3c3c
      properties:
        description:
          description: A brief description of the deployment config
          example: A production deployment config
          type: string
        infraRollConfiguration:
          $ref: '#/components/schemas/InfraRollConfiguration'
        name:
          description: Name of the deployment config
          example: Production
          type: string
        rolloutPriorityList:
          example:
          - region-12345678
          - region-abcd1234
          - region-3c3c3c3c
          items:
            example: Quasi odit facilis eveniet.
            type: string
          type: array
      required:
      - description
      - name
      type: object
    CreateIdentityProviderRequest:
      example:
        authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
        disabled: false
        emailIdentifiers: company.com
        environmentType: Ut dolore et sed.
        identityProviderName: Google
        loginButtonIconUrl: https://example.com/icon.png
        loginButtonText: Login with Google
        name: Google for my company
        scopes:
        - openid
        - email
        - profile
        token: bj
        tokenEndpoint: https://oauth2.googleapis.com/token
        userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
      properties:
        authorizationEndpoint:
          description: The authorization endpoint of the Identity Provider
          example: https://accounts.google.com/o/oauth2/auth
          type: string
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
        disabled:
          description: Whether the Identity Provider is disabled
          example: false
          type: boolean
        emailIdentifiers:
          description: The email identifiers to use for the Identity Provider
          example: company.com
          type: string
        environmentType:
          description: The type of environment to filter costs by
          example: Et dignissimos explicabo nesciunt.
          type: string
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        loginButtonIconUrl:
          description: The URL of the icon to use for the login button
          example: https://example.com/icon.png
          type: string
        loginButtonText:
          description: The text to use for the login button
          example: Login with Google
          type: string
        name:
          description: The name of the Identity Provider
          example: Google for my company
          type: string
        scopes:
          description: The scopes to request from the Identity Provider
          example:
          - openid
          - email
          - profile
          items:
            example: Non error odit omnis beatae ut nemo.
            type: string
          type: array
        token:
          description: JWT token used to perform authorization
          example: k2
          minLength: 1
          type: string
        tokenEndpoint:
          description: The token endpoint of the Identity Provider
          example: https://oauth2.googleapis.com/token
          type: string
        userInfoEndpoint:
          description: The user info endpoint of the Identity Provider
          example: https://www.googleapis.com/oauth2/v3/userinfo
          type: string
      required:
      - clientId
      - clientSecret
      - identityProviderName
      - token
      type: object
    CreateIdentityProviderRequest2:
      example:
        authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
        disabled: false
        emailIdentifiers: company.com
        environmentType: Error explicabo.
        identityProviderName: Google
        loginButtonIconUrl: https://example.com/icon.png
        loginButtonText: Login with Google
        name: Google for my company
        scopes:
        - openid
        - email
        - profile
        tokenEndpoint: https://oauth2.googleapis.com/token
        userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
      properties:
        authorizationEndpoint:
          description: The authorization endpoint of the Identity Provider
          example: https://accounts.google.com/o/oauth2/auth
          type: string
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
        disabled:
          description: Whether the Identity Provider is disabled
          example: false
          type: boolean
        emailIdentifiers:
          description: The email identifiers to use for the Identity Provider
          example: company.com
          type: string
        environmentType:
          description: The type of environment to filter costs by
          example: Ex sed.
          type: string
        identityProviderName:
          description: The name of the Identity Provider
          example: Google
          type: string
        loginButtonIconUrl:
          description: The URL of the icon to use for the login button
          example: https://example.com/icon.png
          type: string
        loginButtonText:
          description: The text to use for the login button
          example: Login with Google
          type: string
        name:
          description: The name of the Identity Provider
          example: Google for my company
          type: string
        scopes:
          description: The scopes to request from the Identity Provider
          example:
          - openid
          - email
          - profile
          items:
            example: Iusto nobis.
            type: string
          type: array
        tokenEndpoint:
          description: The token endpoint of the Identity Provider
          example: https://oauth2.googleapis.com/token
          type: string
        userInfoEndpoint:
          description: The user info endpoint of the Identity Provider
          example: https://www.googleapis.com/oauth2/v3/userinfo
          type: string
      required:
      - clientId
      - clientSecret
      - identityProviderName
      type: object
    CreateImageConfigRequest:
      description: Create the image configuration required to bring up a new entity
      example:
        customImageCommandsAndArgs:
          args:
          - -d
          - mysql
          commands:
          - echo
          - "Hello, World!"
        description: A image configuration for my new entity
        imageName: mysql
        imageRegistryId: ir-12345678
        imageSignaturePublicKeyPEM: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        imageTag: latest
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        token: r
      properties:
        customImageCommandsAndArgs:
          $ref: '#/components/schemas/CustomImageCommandsAndArgs'
        description:
          description: A brief description of the image configuration
          example: A image configuration for my new entity
          type: string
        imageName:
          description: Name of the container image
          example: mysql
          minLength: 1
          type: string
        imageRegistryId:
          description: ID of an Image Registry
          example: Dolorem explicabo dolor est et.
          type: string
        imageSignaturePublicKeyPEM:
          description: PEM-encoded Public key part of the key used to sign the container
            image
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        imageTag:
          default: latest
          description: Tag representing the specific software image version
          example: latest
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: n26
          minLength: 1
          type: string
      required:
      - description
      - imageName
      - serviceEnvironmentId
      - serviceId
      - token
      type: object
    CreateImageConfigRequest2:
      example:
        customImageCommandsAndArgs:
          args:
          - -d
          - mysql
          commands:
          - echo
          - "Hello, World!"
        description: A image configuration for my new entity
        imageName: mysql
        imageRegistryId: ir-12345678
        imageSignaturePublicKeyPEM: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        imageTag: latest
        serviceEnvironmentId: se-12345678
      properties:
        customImageCommandsAndArgs:
          $ref: '#/components/schemas/CustomImageCommandsAndArgs'
        description:
          description: A brief description of the image configuration
          example: A image configuration for my new entity
          type: string
        imageName:
          description: Name of the container image
          example: mysql
          minLength: 1
          type: string
        imageRegistryId:
          description: The image registry ID to use for the infra
          example: ir-12345678
          type: string
        imageSignaturePublicKeyPEM:
          description: PEM-encoded Public key part of the key used to sign the container
            image
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        imageTag:
          default: latest
          description: Tag representing the specific software image version
          example: latest
          type: string
        serviceEnvironmentId:
          description: The service environment ID
          example: se-12345678
          type: string
      required:
      - description
      - imageName
      - serviceEnvironmentId
      type: object
    CreateImageRegistryRequest:
      description: Create an HTTP API v2 Docker Image Registry
      example:
        description: DockerHub is a public Docker Image Registry
        host: docker.io
        name: DockerHub
        password: mypassword
        token: i
        username: myusername
      properties:
        description:
          description: A brief description of the Image Registry
          example: DockerHub is a public Docker Image Registry
          type: string
        host:
          description: The Image Registry host
          example: docker.io
          type: string
        name:
          description: Name of the Image Registry
          example: DockerHub
          type: string
        password:
          description: The password to use when authenticating to the Image Registry
          example: mypassword
          type: string
        token:
          description: JWT token used to perform authorization
          example: 8rf
          minLength: 1
          type: string
        username:
          description: The username to use when authenticating to the Image Registry
          example: myusername
          type: string
      required:
      - description
      - host
      - name
      - token
      type: object
    CreateImageRegistryRequest2:
      example:
        description: DockerHub is a public Docker Image Registry
        host: docker.io
        name: DockerHub
        password: mypassword
        username: myusername
      properties:
        description:
          description: A brief description of the Image Registry
          example: DockerHub is a public Docker Image Registry
          type: string
        host:
          description: The Image Registry host
          example: docker.io
          type: string
        name:
          description: Name of the Image Registry
          example: DockerHub
          type: string
        password:
          description: The password to use when authenticating to the Image Registry
          example: mypassword
          type: string
        username:
          description: The username to use when authenticating to the Image Registry
          example: myusername
          type: string
      required:
      - description
      - host
      - name
      type: object
    CreateInfraConfigRequest:
      description: Create the infra required to host a resource
      example:
        computeConfigId: cc-12345678
        customTag:
          key: customKey
          value: customValue
        description: Infra config used for the base tier MySQL service
        name: MySQL Writer Infra Config
        networkConfigId: nc-12345678
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        storageConfigId: sc-12345678
        token: fe
      properties:
        computeConfigId:
          description: ID of a Compute Config
          example: Nihil a consectetur vel.
          type: string
        customTag:
          $ref: '#/components/schemas/CustomTag'
        description:
          description: The description for the infra config
          example: Infra config used for the base tier MySQL service
          type: string
        name:
          description: The name of the infra config
          example: MySQL Writer Infra Config
          type: string
        networkConfigId:
          description: ID of a Network Config
          example: Deleniti natus ipsa tenetur quaerat voluptates.
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        storageConfigId:
          description: ID of a Storage Config
          example: Non qui illo voluptatibus quod fuga sapiente.
          type: string
        token:
          description: JWT token used to perform authorization
          example: h
          minLength: 1
          type: string
      required:
      - description
      - name
      - serviceEnvironmentId
      - serviceId
      - token
      type: object
    CreateInfraConfigRequest2:
      example:
        computeConfigId: cc-12345678
        customTag:
          key: customKey
          value: customValue
        description: Infra config used for the base tier MySQL service
        name: MySQL Writer Infra Config
        networkConfigId: nc-12345678
        serviceEnvironmentId: se-12345678
        storageConfigId: sc-12345678
      properties:
        computeConfigId:
          description: The compute config ID
          example: cc-12345678
          type: string
        customTag:
          $ref: '#/components/schemas/CustomTag'
        description:
          description: The description for the infra config
          example: Infra config used for the base tier MySQL service
          type: string
        name:
          description: The name of the infra config
          example: MySQL Writer Infra Config
          type: string
        networkConfigId:
          description: The network config ID
          example: nc-12345678
          type: string
        serviceEnvironmentId:
          description: The service environment ID
          example: se-12345678
          type: string
        storageConfigId:
          description: The storage config ID
          example: sc-12345678
          type: string
      required:
      - description
      - name
      - serviceEnvironmentId
      type: object
    CreateInputParameterRequest:
      example:
        defaultValue: default value
        dependentResourceId: r-12345678
        description: Necessitatibus voluptatum esse alias.
        hasOptions: true
        isList: false
        key: s3
        labeledOptions:
          large: t3.xlarge
          medium: t3.large
          small: t3.medium
        limits:
          max: Hic sit.
          maxLength: Incidunt quibusdam et atque quia sed.
          min: A unde eveniet voluptatem omnis qui eveniet.
          minLength: Iure distinctio rerum provident iure eligendi facilis.
        modifiable: true
        name: "6"
        options:
        - a
        - b
        - c
        - default value
        required: false
        resourceId: r-12345678
        serviceId: s-12345678
        token: av
        type: Boolean|Float64|String|Resource|Secret|Password
      properties:
        defaultValue:
          description: Default value to use for an optional input parameter represented
            as a string
          example: default value
          type: string
        dependentResourceId:
          description: ID of a resource
          example: Quae nihil quos expedita.
          type: string
        description:
          description: A brief description of the input parameter
          example: Dignissimos aliquid doloremque rerum fuga et quas.
          type: string
        hasOptions:
          default: false
          description: Marks the input parameter to be selectable from a list of values
          example: false
          type: boolean
        isList:
          default: false
          description: Marks the input parameter as a list of values
          example: true
          type: boolean
        key:
          description: Key of the input parameter
          example: 8z
          minLength: 1
          pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
          type: string
        labeledOptions:
          additionalProperties:
            example: Non hic amet voluptatem.
            type: string
          description: "A map for labeled options. The key is the label and the value\
            \ is the option. When the option is selected, the label will be displayed\
            \ to the end customer. Specify either options or labeledOptions when defining\
            \ the input parameter."
          example:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          type: object
        limits:
          $ref: '#/components/schemas/Limits'
        modifiable:
          description: Marks the input parameter as immutable
          example: true
          type: boolean
        name:
          description: External name for the input parameter
          example: fmd
          minLength: 1
          type: string
        options:
          description: A list of options to restrict the value of the input parameter
            to (represented as a string)
          example:
          - a
          - b
          - c
          - default value
          items:
            example: Et similique sed minus officiis eligendi.
            type: string
          type: array
        required:
          description: Enforces the input parameter as a required parameter
          example: false
          type: boolean
        resourceId:
          description: ID of a resource
          example: Voluptas beatae explicabo nostrum sunt voluptatum.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "2"
          minLength: 1
          type: string
        type:
          description: Type of the variable encoding the value
          example: Boolean|Float64|String|Resource|Secret|Password
          type: string
      required:
      - description
      - key
      - modifiable
      - name
      - required
      - resourceId
      - serviceId
      - token
      - type
      type: object
    CreateInputParameterRequest2:
      example:
        defaultValue: default value
        dependentResourceId: r-12345678
        description: Voluptates quidem pariatur facere ut.
        hasOptions: true
        isList: true
        key: "077"
        labeledOptions:
          large: t3.xlarge
          medium: t3.large
          small: t3.medium
        limits:
          max: Aperiam saepe pariatur sed et sapiente.
          maxLength: Qui numquam cumque temporibus.
          min: Sit eos illo iusto omnis.
          minLength: Quis sunt.
        modifiable: true
        name: kd
        options:
        - a
        - b
        - c
        - default value
        required: false
        resourceId: r-12345678
        type: Est illo illum quia enim voluptatibus.
      properties:
        defaultValue:
          description: Default value to use for an optional input parameter represented
            as a string
          example: default value
          type: string
        dependentResourceId:
          description: The ID of the resource whose instance this input parameter
            depends on
          example: r-12345678
          type: string
        description:
          description: A brief description of the input parameter
          example: Veritatis quos fugit eos culpa.
          type: string
        hasOptions:
          default: false
          description: Marks the input parameter to be selectable from a list of values
          example: true
          type: boolean
        isList:
          default: false
          description: Marks the input parameter as a list of values
          example: false
          type: boolean
        key:
          description: Key of the input parameter
          example: v
          minLength: 1
          pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
          type: string
        labeledOptions:
          additionalProperties:
            example: Ut facilis sint.
            type: string
          description: "A map for labeled options. The key is the label and the value\
            \ is the option. When the option is selected, the label will be displayed\
            \ to the end customer. Specify either options or labeledOptions when defining\
            \ the input parameter."
          example:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          type: object
        limits:
          $ref: '#/components/schemas/Limits'
        modifiable:
          description: Marks the input parameter as immutable
          example: false
          type: boolean
        name:
          description: External name for the input parameter
          example: 4nc
          minLength: 1
          type: string
        options:
          description: A list of options to restrict the value of the input parameter
            to (represented as a string)
          example:
          - a
          - b
          - c
          - default value
          items:
            example: Officia quia reiciendis at harum.
            type: string
          type: array
        required:
          description: Enforces the input parameter as a required parameter
          example: true
          type: boolean
        resourceId:
          description: The ID of the resource that this input parameter belongs to
          example: r-12345678
          type: string
        type:
          example: Maiores itaque ut autem et nemo repellendus.
          type: string
      required:
      - description
      - key
      - modifiable
      - name
      - required
      - resourceId
      - type
      type: object
    CreateNetworkConfigRequest:
      example:
        description: A multi-zone HA network config
        endpointPerReplica: true
        internal: true
        name: Multi-zone
        openPorts:
        - 1299
        - 3306
        privateNetworkingConfiguration:
          privateLinkConfiguration:
            awsPrivateLinkConfigurations:
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
        publicNetworkingConfiguration:
          enableClusterLoadBalancer: true
          enableNodeLoadBalancer: true
        serviceId: s-12345678
        stableEgressIP: true
        tlsTerminationPort: 443
        token: zvj
        zoneConfiguration: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
      properties:
        description:
          description: A brief description of the network config
          example: A multi-zone HA network config
          type: string
        endpointPerReplica:
          description: Generates a DNS endpoint per-replica for this network config
          example: true
          type: boolean
        internal:
          default: false
          description: Restrict access to this network config to the internal network
          example: true
          type: boolean
        name:
          description: Name of the network config
          example: Multi-zone
          type: string
        openPorts:
          description: Ports to map to the generated DNS endpoint
          example:
          - 1299
          - 3306
          items:
            example: 4603550281597010509
            format: int64
            type: integer
          type: array
        privateNetworkingConfiguration:
          $ref: '#/components/schemas/PrivateNetworkingConfiguration'
        publicNetworkingConfiguration:
          $ref: '#/components/schemas/PublicNetworkingConfiguration'
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        stableEgressIP:
          description: Enable stable egress IP
          example: true
          type: boolean
        tlsTerminationPort:
          description: The port that hosts the reverse proxy for TLS termination
          example: 443
          format: int64
          type: integer
        token:
          description: JWT token used to perform authorization
          example: 7i9
          minLength: 1
          type: string
        zoneConfiguration:
          description: The preferred type of zonal availability for this resource
            and the specific zone(s) to deploy in
          example: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
          type: string
      required:
      - description
      - endpointPerReplica
      - name
      - serviceId
      - token
      type: object
    CreateNetworkConfigRequest2:
      example:
        description: A multi-zone HA network config
        endpointPerReplica: true
        internal: true
        name: Multi-zone
        openPorts:
        - 1299
        - 3306
        privateNetworkingConfiguration:
          privateLinkConfiguration:
            awsPrivateLinkConfigurations:
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
        publicNetworkingConfiguration:
          enableClusterLoadBalancer: true
          enableNodeLoadBalancer: true
        stableEgressIP: true
        tlsTerminationPort: 443
        zoneConfiguration: Sit reprehenderit culpa qui.
      properties:
        description:
          description: A brief description of the network config
          example: A multi-zone HA network config
          type: string
        endpointPerReplica:
          description: Generates a DNS endpoint per-replica for this network config
          example: true
          type: boolean
        internal:
          default: false
          description: Restrict access to this network config to the internal network
          example: true
          type: boolean
        name:
          description: Name of the network config
          example: Multi-zone
          type: string
        openPorts:
          description: Ports to map to the generated DNS endpoint
          example:
          - 1299
          - 3306
          items:
            example: 993653997320925299
            format: int64
            type: integer
          type: array
        privateNetworkingConfiguration:
          $ref: '#/components/schemas/PrivateNetworkingConfiguration'
        publicNetworkingConfiguration:
          $ref: '#/components/schemas/PublicNetworkingConfiguration'
        stableEgressIP:
          description: Enable stable egress IP
          example: true
          type: boolean
        tlsTerminationPort:
          description: The port that hosts the reverse proxy for TLS termination
          example: 443
          format: int64
          type: integer
        zoneConfiguration:
          description: The preferred type of zonal availability for this resource
            and the specific zone(s) to deploy in
          example: Et qui laudantium voluptatem error alias.
          type: string
      required:
      - description
      - endpointPerReplica
      - name
      type: object
    CreateOutputParameterRequest:
      example:
        description: Username of the user created in the target system
        key: username
        name: Username
        resourceId: r-12345678
        serviceId: s-12345678
        token: d5b
        value: johndoe
        valueRef: $var.username
        valueType: Boolean|Float64|String|Secret|Password
      properties:
        description:
          description: Description of the output variable being exported
          example: Username of the user created in the target system
          minLength: 1
          type: string
        key:
          description: Key of the output variable being exported
          example: username
          minLength: 1
          pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
          type: string
        name:
          description: External name of the output variable being exported
          example: Username
          minLength: 1
          type: string
        resourceId:
          description: ID of a resource
          example: Non culpa impedit ut pariatur nulla.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: j
          minLength: 1
          type: string
        value:
          description: Value of the output variable being exported
          example: johndoe
          type: string
        valueRef:
          description: Reference to another variable that will be used to set the
            value of the output variable being exported
          example: $var.username
          type: string
        valueType:
          description: Type of the variable encoding the value
          example: Boolean|Float64|String|Secret|Password
          type: string
      required:
      - description
      - key
      - name
      - resourceId
      - serviceId
      - token
      type: object
    CreateOutputParameterRequest2:
      example:
        description: Username of the user created in the target system
        key: username
        name: Username
        resourceId: r-12345678
        value: johndoe
        valueRef: $var.username
        valueType: Similique delectus perferendis animi et.
      properties:
        description:
          description: Description of the output variable being exported
          example: Username of the user created in the target system
          minLength: 1
          type: string
        key:
          description: Key of the output variable being exported
          example: username
          minLength: 1
          pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
          type: string
        name:
          description: External name of the output variable being exported
          example: Username
          minLength: 1
          type: string
        resourceId:
          description: The ID of the resource that this output parameter belongs to
          example: r-12345678
          type: string
        value:
          description: Value of the output variable being exported
          example: johndoe
          type: string
        valueRef:
          description: Reference to another variable that will be used to set the
            value of the output variable being exported
          example: $var.username
          type: string
        valueType:
          example: A sed sit et ut incidunt accusamus.
          type: string
      required:
      - description
      - key
      - name
      - resourceId
      type: object
    CreatePipelineRequest:
      example:
        description: MySQL SaaS promotion pipeline
        name: my-pipeline
        serviceEnvironmentSequence:
        - se-12345678
        - se-23456789
        serviceId: s-12345678
        token: u5
      properties:
        description:
          description: Description of the pipeline
          example: MySQL SaaS promotion pipeline
          type: string
        name:
          description: Name of the pipeline
          example: my-pipeline
          type: string
        serviceEnvironmentSequence:
          description: Sequence of service environments to be deployed in the pipeline
          example:
          - se-12345678
          - se-23456789
          items:
            description: ID of a Service Environment
            example: se-123456
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "9"
          minLength: 1
          type: string
      required:
      - description
      - name
      - serviceEnvironmentSequence
      - serviceId
      - token
      type: object
    CreateProductTierRequest:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        billingProductID: abc123
        description: A premium product tier
        documentation: Any documentation
        exportUsageMetering: true
        exportUsageMeteringConfig:
          GCS:
            GCSBucketName: my_billing_bucket_name
          S3:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
        gcpRegions:
        - us-central1
        isDisabled: false
        maxNumberOfInstances: 5
        name: Premium
        planDescription: A premium plan
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        pricing:
          price1: value1
        serviceId: s-12345678
        serviceModelId: sm-12345678
        support: Any support
        tierType: OMNISTRATE_DEDICATED_TENANCY
        token: zy3
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Quia omnis cupiditate odio quam dolorem sed.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this product tier is available on
          example:
          - northcentralus
          items:
            example: Quisquam non similique.
            type: string
          type: array
        billingProductID:
          description: Optional billing product ID for tax purposes
          example: abc123
          type: string
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        exportUsageMetering:
          description: Export usage metering data
          example: true
          type: boolean
        exportUsageMeteringConfig:
          additionalProperties: true
          description: Export usage metering data configuration
          example:
            GCS:
              GCSBucketName: my_billing_bucket_name
            S3:
              S3BucketArn: arn:aws:s3:::my_billing_bucket_name
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Ullam iste voluptas.
            type: string
          type: array
        isDisabled:
          description: Create the product tier in a disabled state. Enabling the product
            tier will let end-customers subscribe and use the service plan.
          example: false
          type: boolean
        maxNumberOfInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricePerUnit:
          additionalProperties: true
          description: Price per unit.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        pricing:
          description: Pricing
          example:
            price1: value1
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Dicta rerum dicta et.
          type: string
        support:
          description: Support
          example: Any support
          type: string
        tierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        token:
          description: JWT token used to perform authorization
          example: "9"
          minLength: 1
          type: string
      required:
      - description
      - name
      - planDescription
      - serviceId
      - serviceModelId
      - tierType
      - token
      type: object
    CreateProductTierRequest2:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        billingProductID: abc123
        description: A premium product tier
        documentation: Any documentation
        exportUsageMetering: true
        exportUsageMeteringConfig:
          GCS:
            GCSBucketName: my_billing_bucket_name
          S3:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
        gcpRegions:
        - us-central1
        isDisabled: false
        maxNumberOfInstances: 5
        name: Premium
        planDescription: A premium plan
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        pricing:
          price1: value1
        serviceModelId: sm-12345678
        support: Any support
        tierType: OMNISTRATE_DEDICATED_TENANCY
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Occaecati aspernatur aliquid et.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this product tier is available on
          example:
          - northcentralus
          items:
            example: Ullam aut.
            type: string
          type: array
        billingProductID:
          description: Optional billing product ID for tax purposes
          example: abc123
          type: string
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        exportUsageMetering:
          description: Export usage metering data
          example: true
          type: boolean
        exportUsageMeteringConfig:
          additionalProperties: true
          description: Export usage metering data configuration
          example:
            GCS:
              GCSBucketName: my_billing_bucket_name
            S3:
              S3BucketArn: arn:aws:s3:::my_billing_bucket_name
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Vero a provident nisi rerum cumque.
            type: string
          type: array
        isDisabled:
          description: Create the product tier in a disabled state. Enabling the product
            tier will let end-customers subscribe and use the service plan.
          example: false
          type: boolean
        maxNumberOfInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricePerUnit:
          additionalProperties: true
          description: Price per unit.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        pricing:
          description: Pricing
          example:
            price1: value1
        serviceModelId:
          description: Service model ID
          example: sm-12345678
          type: string
        support:
          description: Support
          example: Any support
          type: string
        tierType:
          description: Tier type
          example: OMNISTRATE_DEDICATED_TENANCY
          type: string
      required:
      - description
      - name
      - planDescription
      - serviceModelId
      - tierType
      type: object
    CreateResourceInstanceRequest:
      example:
        cloud_provider: aws
        custom_network_id: n-1234567890
        externalBillingId: external-billing-id-1234
        network_type: PUBLIC
        productTierKey: premium
        region: us-east-1
        requestParams:
          param1: value1
          param2: value2
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: 9rk
      properties:
        cloud_provider:
          description: The cloud provider name
          example: aws
          type: string
        custom_network_id:
          description: Custom network for resource
          example: n-1234567890
          type: string
        externalBillingId:
          description: The external billing id to record which customer should pay
            for this resource instance
          example: external-billing-id-1234
          type: string
        network_type:
          description: The network type
          example: PUBLIC
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        region:
          description: The region code
          example: us-east-1
          type: string
        requestParams:
          description: The request parameters
          example:
            param1: value1
            param2: value2
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Minima eaque harum quia itaque qui sed.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: ej
          minLength: 1
          type: string
      required:
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    CreateResourceInstanceRequest2:
      example:
        cloud_provider: aws
        custom_network_id: n-1234567890
        externalBillingId: external-billing-id-1234
        network_type: PUBLIC
        region: us-east-1
        requestParams:
          param1: value1
          param2: value2
      properties:
        cloud_provider:
          description: The cloud provider name
          example: aws
          type: string
        custom_network_id:
          description: Custom network for resource
          example: n-1234567890
          type: string
        externalBillingId:
          description: The external billing id to record which customer should pay
            for this resource instance
          example: external-billing-id-1234
          type: string
        network_type:
          description: The network type
          example: PUBLIC
          type: string
        region:
          description: The region code
          example: us-east-1
          type: string
        requestParams:
          description: The request parameters
          example:
            param1: value1
            param2: value2
      type: object
    CreateResourceRequest:
      example:
        additionalSecurityContext:
          AddCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          DropCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          SupplementalGroupIDs:
          - 1001
          - 999
        backupConfiguration:
          backupPeriodInHours: 24
          backupRetentionInDays: 7
        blobStorageConfiguration:
          GCSConfiguration: {}
          S3Configuration: {}
        customLabels:
          key: value
        customSysCTLs:
          net.ipv4.tcp_syncookies: "1"
        customULimits:
        - ULimitsName: NoProc
          ULimitsType: Soft
          ULimitsValue: 1000
        - ULimitsName: NoFile
          ULimitsType: Hard
          ULimitsValue: 2048
        description: A resource to manage a hosted public SaaS offering of a multi-writer
          MySQL service
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        fileSystemConfiguration:
          EFSFileSystemConfiguration:
            PerformanceMode: generalPurpose|maxIO
            ProvisionedThroughputInMibps: 125
            ThroughputMode: provisioned|bursting|elastic
        helmChartConfiguration:
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          password: my-password
          runtimeConfiguration:
            disableHooks: true
            recreate: true
            resetThenReuseValues: true
            resetValues: true
            reuseValues: true
            skipCRDs: true
            timeoutNanos: 1000000000
            upgradeCRDs: true
            wait: true
            waitForJobs: true
          username: my-user
        imageConfigId: imgc-12345678
        infraConfigId: ic-12345678
        internal: true
        isProxy: true
        jobConfig:
          activeDeadlineSeconds: 300
          backoffLimit: 5
        key: galera
        kustomizeConfiguration:
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          gitConfiguration:
            accessToken: my-token
            commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
            referenceName: tags/v1.0.0
            repositoryUrl: https://github.com/username/myrepo
            userName: my-user
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          kustomizePath: /kustomize
        l4LoadBalancerConfiguration:
          ingressPortConfiguration:
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8080
            ingressPort: 1234
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8081
            ingressPort: 5678
          - associatedResourceIDs:
            - r-vwxybz12
            - r-poij122v
            backendPort: 8082
            ingressPort: 9012
        l7LoadBalancerConfiguration:
          paths:
          - associatedResourceID: r-12345678
            path: /path
            port: 8080
        name: Galera
        operatorCRDConfiguration:
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          outputParameters:
            expiresAt: $out.status.notAfter
            issuerName: letsencrypt-prod
          readinessConditions:
            $out.status.conditions[?(@.type=='Ready')].status: true
          supplementalFiles:
          - |
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
          - |-
            apiVersion: ingress.nginx.io/v1
            kind: IngressClass
            metadata:
              name: nginx
            spec:
              controller: nginx.org/ingress-controller
          template: |-
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
                email: test@example.com
                privateKeySecretRef:
                  name: letsencrypt-prod
                solvers:
                - http01:
                    ingress:
                      class: nginx
        productTierId: pt-12345678
        proxyType: PortsBasedProxy
        resourceDependencies:
        - parameterMap:
            userDatabase: clusterOrg
            writerId: clusterWriterId
          resourceId: r-12345678
        - parameterMap:
            readerId: clusterReaderId
            userDatabase: clusterOrg
          resourceId: r-abcdef12
        resourceType: Generic
        serviceId: s-12345678
        terraformConfigurations:
          aws:
            gitConfiguration:
              referenceName: ref
              repositoryUrl: gitUrl
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
        token: 93o
      properties:
        additionalSecurityContext:
          $ref: '#/components/schemas/AdditionalSecurityContext'
        backupConfiguration:
          $ref: '#/components/schemas/BackupConfiguration'
        blobStorageConfiguration:
          $ref: '#/components/schemas/BlobStorageConfiguration'
        customLabels:
          additionalProperties:
            example: Ipsam excepturi voluptas maiores repellat.
            type: string
          description: Custom labels for the resource
          example:
            key: value
          type: object
        customSysCTLs:
          additionalProperties:
            example: Suscipit voluptas ea veniam.
            type: string
          description: Custom sysctl settings for the resource
          example:
            net.ipv4.tcp_syncookies: "1"
          type: object
        customULimits:
          description: Custom ulimits for the resource
          example:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          items:
            $ref: '#/components/schemas/CustomULimits'
          type: array
        description:
          description: A brief description of the resource
          example: A resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          type: string
        environmentVariables:
          description: The environment variables that this resource requires
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        fileSystemConfiguration:
          $ref: '#/components/schemas/FileSystemConfiguration'
        helmChartConfiguration:
          $ref: '#/components/schemas/HelmChartConfiguration'
        imageConfigId:
          description: ID of an Image Config
          example: Molestiae necessitatibus aspernatur.
          type: string
        infraConfigId:
          description: ID of an Infra Config
          example: Autem soluta.
          type: string
        internal:
          default: false
          description: Whether this resource is internal or not
          example: true
          type: boolean
        isProxy:
          default: false
          description: Whether this resource is a proxy or not
          example: true
          type: boolean
        jobConfig:
          $ref: '#/components/schemas/JobConfig'
        key:
          description: The key of the resource
          example: galera
          type: string
        kustomizeConfiguration:
          $ref: '#/components/schemas/KustomizeConfiguration'
        l4LoadBalancerConfiguration:
          $ref: '#/components/schemas/L4LoadBalancerConfiguration'
        l7LoadBalancerConfiguration:
          $ref: '#/components/schemas/L7LoadBalancerConfiguration'
        name:
          description: Name of the resource
          example: Galera
          type: string
        operatorCRDConfiguration:
          $ref: '#/components/schemas/OperatorCRDConfiguration'
        productTierId:
          description: ID of a Product Tier
          example: Provident rerum unde et quidem.
          type: string
        proxyType:
          default: PortsBasedProxy
          description: A proxy type of resource
          example: PortsBasedProxy
          type: string
        resourceDependencies:
          example:
          - parameterMap:
              userDatabase: clusterOrg
              writerId: clusterWriterId
            resourceId: r-12345678
          - parameterMap:
              readerId: clusterReaderId
              userDatabase: clusterOrg
            resourceId: r-abcdef12
          items:
            $ref: '#/components/schemas/ResourceDependency'
          type: array
        resourceType:
          description: The type of the resource
          example: '|Generic|PortsBasedProxy|L4LoadBalancer|L7LoadBalancer|FileSystem|OperatorCRD|HelmChart|Kustomize'
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        terraformConfigurations:
          additionalProperties: true
          description: The Terraform configurations for cloud providers
          example:
            aws:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          type: object
        token:
          description: JWT token used to perform authorization
          example: "73"
          minLength: 1
          type: string
      required:
      - description
      - name
      - productTierId
      - serviceId
      - token
      type: object
    CreateResourceRequest2:
      example:
        additionalSecurityContext:
          AddCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          DropCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          SupplementalGroupIDs:
          - 1001
          - 999
        backupConfiguration:
          backupPeriodInHours: 24
          backupRetentionInDays: 7
        blobStorageConfiguration:
          GCSConfiguration: {}
          S3Configuration: {}
        customLabels:
          key: value
        customSysCTLs:
          net.ipv4.tcp_syncookies: "1"
        customULimits:
        - ULimitsName: NoProc
          ULimitsType: Soft
          ULimitsValue: 1000
        - ULimitsName: NoFile
          ULimitsType: Hard
          ULimitsValue: 2048
        description: A resource to manage a hosted public SaaS offering of a multi-writer
          MySQL service
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        fileSystemConfiguration:
          EFSFileSystemConfiguration:
            PerformanceMode: generalPurpose|maxIO
            ProvisionedThroughputInMibps: 125
            ThroughputMode: provisioned|bursting|elastic
        helmChartConfiguration:
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          password: my-password
          runtimeConfiguration:
            disableHooks: true
            recreate: true
            resetThenReuseValues: true
            resetValues: true
            reuseValues: true
            skipCRDs: true
            timeoutNanos: 1000000000
            upgradeCRDs: true
            wait: true
            waitForJobs: true
          username: my-user
        imageConfigId: imgc-12345678
        infraConfigId: ic-12345678
        internal: true
        isProxy: false
        jobConfig:
          activeDeadlineSeconds: 300
          backoffLimit: 5
        key: galera
        kustomizeConfiguration:
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          gitConfiguration:
            accessToken: my-token
            commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
            referenceName: tags/v1.0.0
            repositoryUrl: https://github.com/username/myrepo
            userName: my-user
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          kustomizePath: /kustomize
        l4LoadBalancerConfiguration:
          ingressPortConfiguration:
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8080
            ingressPort: 1234
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8081
            ingressPort: 5678
          - associatedResourceIDs:
            - r-vwxybz12
            - r-poij122v
            backendPort: 8082
            ingressPort: 9012
        l7LoadBalancerConfiguration:
          paths:
          - associatedResourceID: r-12345678
            path: /path
            port: 8080
        name: Galera
        operatorCRDConfiguration:
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          outputParameters:
            expiresAt: $out.status.notAfter
            issuerName: letsencrypt-prod
          readinessConditions:
            $out.status.conditions[?(@.type=='Ready')].status: true
          supplementalFiles:
          - |
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
          - |-
            apiVersion: ingress.nginx.io/v1
            kind: IngressClass
            metadata:
              name: nginx
            spec:
              controller: nginx.org/ingress-controller
          template: |-
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
                email: test@example.com
                privateKeySecretRef:
                  name: letsencrypt-prod
                solvers:
                - http01:
                    ingress:
                      class: nginx
        productTierId: pt-12345678
        proxyType: PortsBasedProxy
        resourceDependencies:
        - parameterMap:
            userDatabase: clusterOrg
            writerId: clusterWriterId
          resourceId: r-12345678
        - parameterMap:
            readerId: clusterReaderId
            userDatabase: clusterOrg
          resourceId: r-abcdef12
        resourceType: Generic
        terraformConfigurations:
          Illo hic suscipit asperiores sit enim.:
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            privateModuleGitAccessTokens:
              tokenName: accessToken
            requiredOutputKeys:
            - output1
            requiredOutputs:
            - exported: true
              key: output1
            terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
            terraformPath: /project1/tf
          Maiores et inventore laudantium fugit.:
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            privateModuleGitAccessTokens:
              tokenName: accessToken
            requiredOutputKeys:
            - output1
            requiredOutputs:
            - exported: true
              key: output1
            terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
            terraformPath: /project1/tf
          Quas minima non voluptas.:
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            privateModuleGitAccessTokens:
              tokenName: accessToken
            requiredOutputKeys:
            - output1
            requiredOutputs:
            - exported: true
              key: output1
            terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
            terraformPath: /project1/tf
      properties:
        additionalSecurityContext:
          $ref: '#/components/schemas/AdditionalSecurityContext'
        backupConfiguration:
          $ref: '#/components/schemas/BackupConfiguration'
        blobStorageConfiguration:
          $ref: '#/components/schemas/BlobStorageConfiguration'
        customLabels:
          additionalProperties:
            example: Assumenda nisi sed eos.
            type: string
          description: Custom labels for the resource
          example:
            key: value
          type: object
        customSysCTLs:
          additionalProperties:
            example: Iste repellendus.
            type: string
          description: Custom sysctl settings for the resource
          example:
            net.ipv4.tcp_syncookies: "1"
          type: object
        customULimits:
          description: Custom ulimits for the resource
          example:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          items:
            $ref: '#/components/schemas/CustomULimits'
          type: array
        description:
          description: A brief description of the resource
          example: A resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          type: string
        environmentVariables:
          description: The environment variables that this resource requires
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        fileSystemConfiguration:
          $ref: '#/components/schemas/FileSystemConfiguration'
        helmChartConfiguration:
          $ref: '#/components/schemas/HelmChartConfiguration'
        imageConfigId:
          description: The ID of the image configuration that this resource refers
            to
          example: imgc-12345678
          type: string
        infraConfigId:
          description: The ID of the infrastructure configuration that this resource
            refers to
          example: ic-12345678
          type: string
        internal:
          default: false
          description: Whether this resource is internal or not
          example: false
          type: boolean
        isProxy:
          default: false
          description: Whether this resource is a proxy or not
          example: true
          type: boolean
        jobConfig:
          $ref: '#/components/schemas/JobConfig'
        key:
          description: The key of the resource
          example: galera
          type: string
        kustomizeConfiguration:
          $ref: '#/components/schemas/KustomizeConfiguration'
        l4LoadBalancerConfiguration:
          $ref: '#/components/schemas/L4LoadBalancerConfiguration'
        l7LoadBalancerConfiguration:
          $ref: '#/components/schemas/L7LoadBalancerConfiguration'
        name:
          description: Name of the resource
          example: Galera
          type: string
        operatorCRDConfiguration:
          $ref: '#/components/schemas/OperatorCRDConfiguration'
        productTierId:
          description: The product tier ID
          example: pt-12345678
          type: string
        proxyType:
          default: PortsBasedProxy
          description: A proxy type of resource
          example: PortsBasedProxy
          type: string
        resourceDependencies:
          example:
          - parameterMap:
              userDatabase: clusterOrg
              writerId: clusterWriterId
            resourceId: r-12345678
          - parameterMap:
              readerId: clusterReaderId
              userDatabase: clusterOrg
            resourceId: r-abcdef12
          items:
            $ref: '#/components/schemas/ResourceDependency'
          type: array
        resourceType:
          description: The type of the resource
          example: Generic
          type: string
        terraformConfigurations:
          additionalProperties:
            $ref: '#/components/schemas/TerraformConfiguration'
          description: The Terraform configurations for various cloud providers
          example:
            Et tempore voluptates fuga qui quam ullam.:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              privateModuleGitAccessTokens:
                tokenName: accessToken
              requiredOutputKeys:
              - output1
              requiredOutputs:
              - exported: true
                key: output1
              terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
              terraformPath: /project1/tf
            Suscipit enim.:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              privateModuleGitAccessTokens:
                tokenName: accessToken
              requiredOutputKeys:
              - output1
              requiredOutputs:
              - exported: true
                key: output1
              terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
              terraformPath: /project1/tf
            Ullam facilis officia architecto natus harum.:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              privateModuleGitAccessTokens:
                tokenName: accessToken
              requiredOutputKeys:
              - output1
              requiredOutputs:
              - exported: true
                key: output1
              terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
              terraformPath: /project1/tf
          type: object
      required:
      - description
      - name
      - productTierId
      type: object
    CreateSaaSPortalCustomDomainRequest:
      example:
        customDomain: mycustomdomain.com
        description: My custom domain description
        environmentType: DEV
        name: MyCustomDomain
        token: q
      properties:
        customDomain:
          description: The custom domain
          example: mycustomdomain.com
          type: string
        description:
          description: The custom domain description
          example: My custom domain description
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        name:
          description: The custom domain name
          example: MyCustomDomain
          type: string
        token:
          description: JWT token used to perform authorization
          example: i3o
          minLength: 1
          type: string
      required:
      - customDomain
      - description
      - environmentType
      - name
      - token
      type: object
    CreateSaaSPortalCustomDomainRequest2:
      example:
        customDomain: mycustomdomain.com
        description: My custom domain description
        environmentType: DEV
        name: MyCustomDomain
      properties:
        customDomain:
          description: The custom domain
          example: mycustomdomain.com
          type: string
        description:
          description: The custom domain description
          example: My custom domain description
          type: string
        environmentType:
          description: The environment type for the custom domain
          example: DEV
          type: string
        name:
          description: The custom domain name
          example: MyCustomDomain
          type: string
      required:
      - customDomain
      - description
      - environmentType
      - name
      type: object
    CreateServiceAPIRequest:
      example:
        description: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
          for high availability
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        token: "9"
      properties:
        description:
          description: A brief description of the service API bundle
          example: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
            for high availability
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: r
          minLength: 1
          type: string
      required:
      - description
      - serviceEnvironmentId
      - serviceId
      - token
      type: object
    CreateServiceAPIRequest2:
      example:
        description: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
          for high availability
        serviceEnvironmentId: se-12345678
      properties:
        description:
          description: A brief description of the service API bundle
          example: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
            for high availability
          type: string
        serviceEnvironmentId:
          description: The service environment ID
          example: se-12345678
          type: string
      required:
      - description
      - serviceEnvironmentId
      type: object
    CreateServiceEnvironmentRequest:
      example:
        autoApproveSubscription: false
        deploymentConfigId: dc-12345678
        description: The production environment for the MySQL multi-writer service
        name: Production
        serviceAuthPublicKey: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        serviceId: s-12345678
        sourceEnvironmentId: se-12345678
        token: "3"
        type: DEV
        visibility: PUBLIC
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        deploymentConfigId:
          description: ID of a Deployment Config
          example: Amet fugit aut rerum.
          type: string
        description:
          description: A brief description of the service environment
          example: The production environment for the MySQL multi-writer service
          type: string
        name:
          description: Name of the Service Environment
          example: Production
          type: string
        serviceAuthPublicKey:
          description: PEM-encoded Public key part of the key used to sign the JWT
            tokens for the service control plane APIs
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: nu
          minLength: 1
          type: string
        type:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - deploymentConfigId
      - description
      - name
      - serviceId
      - token
      type: object
    CreateServiceEnvironmentRequest2:
      example:
        autoApproveSubscription: false
        deploymentConfigId: dc-12345678
        description: The production environment for the MySQL multi-writer service
        name: Production
        serviceAuthPublicKey: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        sourceEnvironmentId: se-12345678
        type: DEV
        visibility: Dolorem soluta rerum omnis.
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        deploymentConfigId:
          description: The deployment configuration ID
          example: dc-12345678
          type: string
        description:
          description: A brief description of the service environment
          example: The production environment for the MySQL multi-writer service
          type: string
        name:
          description: Name of the Service Environment
          example: Production
          type: string
        serviceAuthPublicKey:
          description: PEM-encoded Public key part of the key used to sign the JWT
            tokens for the service control plane APIs
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        sourceEnvironmentId:
          description: The ID of the service environment to use for promoting changes
            to this environment
          example: se-12345678
          type: string
        type:
          example: DEV
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: Cupiditate tempora quisquam voluptatem officia est.
          type: string
      required:
      - deploymentConfigId
      - description
      - name
      type: object
    CreateServiceFromComposeSpecRequest:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        fileContent: Dolor quae officia repellendus dolores expedita.
        fileFormat: text/plain
        fileName: mysql.yaml
        name: MySQL multi-writer service
        serviceLogoURL: http://daniel.name/clair
        token: "0"
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        fileContent:
          description: Base64 encoded Compose Spec YAML in docker compose format
          example: Ducimus quia.
          type: string
        fileFormat:
          description: MIME type of file format
          example: text/plain
          type: string
        fileName:
          description: Name of compose spec YAML file that is uploaded
          example: mysql.yaml
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: http://batz.org/blaze
          format: uri
          type: string
        token:
          description: JWT token used to perform authorization
          example: q
          minLength: 1
          type: string
      required:
      - description
      - fileContent
      - fileFormat
      - fileName
      - name
      - token
      type: object
    CreateServiceFromComposeSpecRequest2:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        fileContent: Omnis ab quae.
        fileFormat: text/plain
        fileName: mysql.yaml
        name: MySQL multi-writer service
        serviceLogoURL: http://jacobsonryan.org/elise
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        fileContent:
          description: Base64 encoded Compose Spec YAML in docker compose format
          example: Dolorum voluptates eius ex et neque est.
          type: string
        fileFormat:
          description: MIME type of file format
          example: text/plain
          type: string
        fileName:
          description: Name of compose spec YAML file that is uploaded
          example: mysql.yaml
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: http://hegmann.com/serena.jenkins
          format: uri
          type: string
      required:
      - description
      - fileContent
      - fileFormat
      - fileName
      - name
      type: object
    CreateServiceModelRequest:
      example:
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        features:
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        modelType: CUSTOMER_HOSTED
        name: MySQL multi-writer service hosted model
        serviceApiId: sa-12345678
        serviceId: s-12345678
        token: uz
      properties:
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            description: ID of an Account Config
            example: Inventore temporibus perferendis occaecati expedita.
            type: string
          type: array
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        features:
          description: Enabled service model features
          example:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          items:
            $ref: '#/components/schemas/ServiceModelFeatureDetail'
          type: array
        modelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        serviceApiId:
          description: ID of a Service API
          example: Ipsam praesentium ab repellat.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: gzb
          minLength: 1
          type: string
      required:
      - description
      - modelType
      - name
      - serviceApiId
      - serviceId
      - token
      type: object
    CreateServiceModelRequest2:
      example:
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        features:
        - configuration:
            Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum eum
              ab.
            Nulla consequatur facilis magnam.: Quisquam voluptas.
            Sed aliquam ut eos ullam.: Fuga aut optio.
          feature: Voluptatum est suscipit.
        - configuration:
            Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum eum
              ab.
            Nulla consequatur facilis magnam.: Quisquam voluptas.
            Sed aliquam ut eos ullam.: Fuga aut optio.
          feature: Voluptatum est suscipit.
        - configuration:
            Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum eum
              ab.
            Nulla consequatur facilis magnam.: Quisquam voluptas.
            Sed aliquam ut eos ullam.: Fuga aut optio.
          feature: Voluptatum est suscipit.
        modelType: CUSTOMER_HOSTED
        name: MySQL multi-writer service hosted model
        serviceApiId: sa-12345678
      properties:
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            example: Qui amet.
            type: string
          type: array
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        features:
          description: Enabled service model features
          example:
          - configuration:
              Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum eum
                ab.
              Nulla consequatur facilis magnam.: Quisquam voluptas.
              Sed aliquam ut eos ullam.: Fuga aut optio.
            feature: Voluptatum est suscipit.
          - configuration:
              Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum eum
                ab.
              Nulla consequatur facilis magnam.: Quisquam voluptas.
              Sed aliquam ut eos ullam.: Fuga aut optio.
            feature: Voluptatum est suscipit.
          - configuration:
              Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum eum
                ab.
              Nulla consequatur facilis magnam.: Quisquam voluptas.
              Sed aliquam ut eos ullam.: Fuga aut optio.
            feature: Voluptatum est suscipit.
          - configuration:
              Aperiam a et alias nihil eaque.: Consequatur iure aut iusto earum eum
                ab.
              Nulla consequatur facilis magnam.: Quisquam voluptas.
              Sed aliquam ut eos ullam.: Fuga aut optio.
            feature: Voluptatum est suscipit.
          items:
            $ref: '#/components/schemas/ServiceModelFeatureDetail'
          type: array
        modelType:
          description: The model type encapsulating this service
          example: CUSTOMER_HOSTED
          type: string
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        serviceApiId:
          description: The service API this model is for
          example: sa-12345678
          type: string
      required:
      - description
      - modelType
      - name
      - serviceApiId
      type: object
    CreateServiceRequest:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        name: MySQL multi-writer service
        serviceLogoURL: http://zulauf.name/laverne
        token: j8
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: http://mayert.org/verda
          format: uri
          type: string
        token:
          description: JWT token used to perform authorization
          example: srd
          minLength: 1
          type: string
      required:
      - description
      - name
      - token
      type: object
    CreateServiceRequest2:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        name: MySQL multi-writer service
        serviceLogoURL: http://ziememayert.org/lina_heathcote
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: http://crooks.name/leta_jerde
          format: uri
          type: string
      required:
      - description
      - name
      type: object
    CreateServicesOrchestrationRequest:
      example:
        orchestrationCreateDSL: Suscipit eos quasi culpa dolore est.
        token: "08"
      properties:
        orchestrationCreateDSL:
          description: base64 encoded content of service orchestration create DSL
          example: Exercitationem consectetur soluta rem ea nulla qui.
          type: string
        token:
          description: JWT token used to perform authorization
          example: cf
          minLength: 1
          type: string
      required:
      - orchestrationCreateDSL
      - token
      type: object
    CreateServicesOrchestrationRequest2:
      example:
        orchestrationCreateDSL: Culpa alias doloribus voluptatem.
      properties:
        orchestrationCreateDSL:
          description: base64 encoded content of service orchestration create DSL
          example: Omnis laborum ratione cupiditate quod voluptate.
          type: string
      required:
      - orchestrationCreateDSL
      type: object
    CreateServicesOrchestrationResponseBody:
      example:
        id: Optio asperiores voluptas soluta et voluptas quae.
      properties:
        id:
          description: Services Orchestration Id
          example: Et voluptatem necessitatibus culpa maiores.
          type: string
      type: object
    CreateStorageConfigRequest:
      example:
        description: my-storage-config-description
        name: my-storage-config
        serviceId: s-12345678
        token: ul
      properties:
        description:
          description: Description of the storage config
          example: my-storage-config-description
          minLength: 1
          type: string
        name:
          description: Name of the storage config
          example: my-storage-config
          minLength: 1
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: c
          minLength: 1
          type: string
      required:
      - description
      - name
      - serviceId
      - token
      type: object
    CreateStorageConfigRequest2:
      example:
        description: my-storage-config-description
        name: my-storage-config
      properties:
        description:
          description: Description of the storage config
          example: my-storage-config-description
          minLength: 1
          type: string
        name:
          description: Name of the storage config
          example: my-storage-config
          minLength: 1
          type: string
      required:
      - description
      - name
      type: object
    CreateStorageVolumeConfigRequest:
      example:
        clusterStorageType: S3|$var.storageType|AWS::EFS
        description: A storage volume set to store the MySQL data directory
        disableBackup: false
        instanceStorageIops: $var.storageIops
        instanceStorageSizeGi: $var.storage_size
        instanceStorageThroughputMiBps: "128"
        instanceStorageType: $var.storageType
        name: MySQL Data Volume
        serviceId: s-12345678
        storageResourceID: r-12345678
        token: 2c
      properties:
        clusterStorageType:
          description: The type of the fixed storage for the cluster
          example: S3|$var.storageType|AWS::EFS
          type: string
        description:
          description: A brief description of the context for the storage volume pool
          example: A storage volume set to store the MySQL data directory
          type: string
        disableBackup:
          description: Disable backup for the storage volume
          example: false
          type: boolean
        instanceStorageIops:
          description: The IOPS provisioned for the configured instance storage type
          example: $var.storageIops
          type: string
        instanceStorageSizeGi:
          description: The storage size (in Gi) provisioned for the configured instance
            storage type
          example: $var.storage_size
          type: string
        instanceStorageThroughputMiBps:
          description: The throughput (in MiBps) provisioned for the configured instance
            storage type
          example: "128"
          type: string
        instanceStorageType:
          description: The type of the storage for a compute instance
          example: $var.storageType
          type: string
        name:
          description: Name of the storage volume pool
          example: MySQL Data Volume
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        storageResourceID:
          description: The storage resource ID
          example: r-12345678
          type: string
        token:
          description: JWT token used to perform authorization
          example: kyn
          minLength: 1
          type: string
      required:
      - description
      - name
      - serviceId
      - token
      type: object
    CreateStorageVolumeConfigRequest2:
      example:
        clusterStorageType: S3|$var.storageType|AWS::EFS
        description: A storage volume set to store the MySQL data directory
        disableBackup: false
        instanceStorageIops: $var.storageIops
        instanceStorageSizeGi: $var.storage_size
        instanceStorageThroughputMiBps: "128"
        instanceStorageType: $var.storageType
        name: MySQL Data Volume
        storageResourceID: r-12345678
      properties:
        clusterStorageType:
          description: The type of the fixed storage for the cluster
          example: S3|$var.storageType|AWS::EFS
          type: string
        description:
          description: A brief description of the context for the storage volume pool
          example: A storage volume set to store the MySQL data directory
          type: string
        disableBackup:
          description: Disable backup for the storage volume
          example: false
          type: boolean
        instanceStorageIops:
          description: The IOPS provisioned for the configured instance storage type
          example: $var.storageIops
          type: string
        instanceStorageSizeGi:
          description: The storage size (in Gi) provisioned for the configured instance
            storage type
          example: $var.storage_size
          type: string
        instanceStorageThroughputMiBps:
          description: The throughput (in MiBps) provisioned for the configured instance
            storage type
          example: "128"
          type: string
        instanceStorageType:
          description: The type of the storage for a compute instance
          example: $var.storageType
          type: string
        name:
          description: Name of the storage volume pool
          example: MySQL Data Volume
          type: string
        storageResourceID:
          description: The storage resource ID
          example: r-12345678
          type: string
      required:
      - description
      - name
      type: object
    CreateSubscriptionRequest:
      example:
        productTierId: pt-12345678
        serviceId: s-12345678
        token: o
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Voluptatum aut aut perspiciatis fugiat necessitatibus.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 83p
          minLength: 1
          type: string
      required:
      - productTierId
      - serviceId
      - token
      type: object
    CreateSubscriptionRequest2:
      example:
        productTierId: pt-12345678
        serviceId: s-12345678
      properties:
        productTierId:
          description: The product tier ID
          example: pt-12345678
          type: string
        serviceId:
          description: The service ID
          example: s-12345678
          type: string
      required:
      - productTierId
      - serviceId
      type: object
    CreateSubscriptionRequestRequest:
      example:
        productTierId: pt-12345678
        serviceId: s-12345678
        token: "0"
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Provident id voluptatem veniam eligendi hic ut.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: c
          minLength: 1
          type: string
      required:
      - productTierId
      - serviceId
      - token
      type: object
    CreateSubscriptionRequestRequest2:
      example:
        productTierId: pt-12345678
        serviceId: s-12345678
      properties:
        productTierId:
          description: The product tier ID
          example: pt-12345678
          type: string
        serviceId:
          description: The service ID
          example: s-12345678
          type: string
      required:
      - productTierId
      - serviceId
      type: object
    CreateTierVersionSetRequest:
      example:
        description: Dolorem voluptatem quia dolorem et laboriosam ducimus.
        name: Major version set
        parentVersion: "2.0"
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: lq0
        type: Major|Incremental|UserDefined
      properties:
        description:
          description: A brief description of the product-tier version set.
          example: Corporis sint perferendis est omnis eaque.
          type: string
        name:
          description: The name of the product-tier version set.
          example: Major version set
          type: string
        parentVersion:
          description: The parent version of this version set.
          example: "2.0"
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Rem laboriosam veritatis harum.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: dpg
          minLength: 1
          type: string
        type:
          description: The version-set type of the product-tier.
          example: Major|Incremental|UserDefined
          type: string
      required:
      - productTierId
      - serviceId
      - token
      - type
      type: object
    CreateTierVersionSetRequest2:
      example:
        description: Iure quae aut sit nostrum.
        name: Major version set
        parentVersion: "2.0"
        type: Major|Incremental|UserDefined
      properties:
        description:
          description: A brief description of the product-tier version set.
          example: Et ea recusandae ut voluptas architecto qui.
          type: string
        name:
          description: The name of the product-tier version set.
          example: Major version set
          type: string
        parentVersion:
          description: The parent version of this version set.
          example: "2.0"
          type: string
        type:
          description: The version-set type of the product-tier.
          example: Major|Incremental|UserDefined
          type: string
      required:
      - type
      type: object
    CreateTierVersionSetResult:
      example:
        version: "3.0"
      properties:
        version:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
      required:
      - version
      type: object
    CreateUpgradePathRequest:
      example:
        description: An upgrade path migrating clusters from one LTS version to another
        name: LTS upgrade path
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        sourceVersion: "567.0"
        targetVersion: "589.0"
        token: 67t
      properties:
        description:
          description: A brief description of the upgrade path
          example: An upgrade path migrating clusters from one LTS version to another
          type: string
        name:
          description: Name of the upgrade path
          example: LTS upgrade path
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceVersion:
          description: Version of the Entity to operate on
          example: "1.0"
          minLength: 1
          type: string
        targetVersion:
          description: Version of the Entity to operate on
          example: "1.0"
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: zr
          minLength: 1
          type: string
      required:
      - description
      - name
      - serviceEnvironmentId
      - sourceVersion
      - targetVersion
      - token
      type: object
    CustomDNSEndpoint:
      example:
        aRecordTarget: 1.1.1.1
        cnameTarget: cname-target.com
        dnsHost: https://my-custom-endpoint.com
        dnsName: https://my-custom-endpoint.com
        enabled: true
        name: DNS to access the dashboard
        status: READY
      properties:
        aRecordTarget:
          example: 1.1.1.1
          type: string
        cnameTarget:
          example: cname-target.com
          type: string
        dnsHost:
          example: https://my-custom-endpoint.com
          type: string
        dnsName:
          description: "DEPRECATED: Use dnsHost instead"
          example: https://my-custom-endpoint.com
          type: string
        enabled:
          example: true
          type: boolean
        name:
          example: DNS to access the dashboard
          type: string
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
      required:
      - enabled
      type: object
    CustomDomain:
      example:
        clusterEndpoint: example.com
        customDomain: mycustomdomain.com
        description: My custom domain description
        environmentType: DEV
        name: MyCustomDomain
        status: READY
      properties:
        clusterEndpoint:
          description: The cluster endpoint for the saas portal instance
          example: example.com
          type: string
        customDomain:
          description: The custom domain
          example: mycustomdomain.com
          type: string
        description:
          description: The custom domain description
          example: My custom domain description
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        name:
          description: The custom domain name
          example: MyCustomDomain
          type: string
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
      required:
      - clusterEndpoint
      - customDomain
      - description
      - environmentType
      - name
      - status
      type: object
    CustomDomainIdentityIDRequest:
      example:
        token: fmb
      properties:
        token:
          description: JWT token used to perform authorization
          example: 7f
          minLength: 1
          type: string
      required:
      - token
      type: object
    CustomDomainIdentityIDResult:
      example:
        id: org-12345678
      properties:
        id:
          description: ID of an Org
          example: Ut beatae atque.
          type: string
      required:
      - id
      type: object
    CustomImageCommandsAndArgs:
      description: Commands and arguments to run in the container
      example:
        args:
        - -d
        - mysql
        commands:
        - echo
        - "Hello, World!"
      properties:
        args:
          description: Arguments to pass to the container
          example:
          - -d
          - mysql
          items:
            example: Deleniti ipsa laudantium tempore.
            type: string
          type: array
        commands:
          description: Commands to run in the container
          example:
          - echo
          - "Hello, World!"
          items:
            example: Reprehenderit incidunt sequi voluptatem temporibus nam est.
            type: string
          type: array
      type: object
    CustomNetwork:
      example:
        cidr: 10.0.0.0/16
        cloudProviderName: aws
        cloudProviderRegion: us-east-1
        id: n-12345678
        name: Prod us-east-1
        networkDefinitionType: Custom
        networkFeaturesConfiguration:
          isPrivateLinkEnabled: false
        networkInstances:
        - awsAccountID: "123456789012"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          cloudProviderNativeNetworkId: vpc-12345678
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          hostClusterID: hc-12345678
        - awsAccountID: "123456789012"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          cloudProviderNativeNetworkId: vpc-12345678
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          hostClusterID: hc-12345678
        - awsAccountID: "123456789012"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          cloudProviderNativeNetworkId: vpc-12345678
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          hostClusterID: hc-12345678
        owningUserId: user-12345678
        owningUserName: John Doe
      properties:
        cidr:
          default: 10.0.0.0/16
          description: CIDR block for the network
          example: 10.0.0.0/16
          type: string
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        cloudProviderRegion:
          description: The region of the cloud provider that the instance is running
            in.
          example: us-east-1
          type: string
        id:
          description: ID of a custom network
          example: Ut delectus qui.
          type: string
        name:
          description: User friendly network name to help distinguish networks with
            same CIDRs
          example: Prod us-east-1
          type: string
        networkDefinitionType:
          description: Type of the network definition
          example: Default|Custom|Imported
          type: string
        networkFeaturesConfiguration:
          $ref: '#/components/schemas/NetworkFeaturesConfiguration'
        networkInstances:
          description: List of network instances created within this custom network
          example:
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          items:
            $ref: '#/components/schemas/CustomNetworkInstance'
          type: array
        owningUserId:
          description: ID of a User
          example: Et dolorum odit eum et earum pariatur.
          type: string
        owningUserName:
          description: The name of the user that created and owns the custom network
          example: John Doe
          type: string
      required:
      - cloudProviderName
      - cloudProviderRegion
      - id
      type: object
    CustomNetworkInstance:
      example:
        awsAccountID: "123456789012"
        azureSubscriptionID: 12345678-1234-1234-1234-123456789012
        azureTenantID: 12345678-1234-1234-1234-123456789012
        cloudProviderNativeNetworkId: vpc-12345678
        gcpProjectID: my-project
        gcpProjectNumber: "123456789012"
        hostClusterID: hc-12345678
      properties:
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        azureTenantID:
          description: The Azure tenant ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        cloudProviderNativeNetworkId:
          description: The ID of the network within cloud provider account
          example: vpc-12345678
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        gcpProjectNumber:
          description: The GCP project number
          example: "123456789012"
          type: string
        hostClusterID:
          description: ID of a Host Cluster
          example: Quis deleniti consequuntur numquam.
          type: string
      type: object
    CustomNetworkResourceDetail:
      description: Details of custom network used for instance
      example:
        cidr: 10.177.0.0/16
        id: n-12345678
        name: Prod us-east-1
      properties:
        cidr:
          description: CIDR block of the network
          example: 10.177.0.0/16
          type: string
        id:
          description: ID of a custom network
          example: Minima doloribus reprehenderit velit dolores sunt ut.
          type: string
        name:
          description: User friendly network name
          example: Prod us-east-1
          type: string
      type: object
    CustomTag:
      description: Custom tag
      example:
        key: customKey
        value: customValue
      properties:
        key:
          description: Key of the custom tag
          example: customKey
          type: string
        value:
          description: Value of the custom tag
          example: customValue
          type: string
      required:
      - key
      - value
      type: object
    CustomULimits:
      example:
        ULimitsName: nofile
        ULimitsType: Soft
        ULimitsValue: 1000
      properties:
        ULimitsName:
          description: The name of the ulimit
          example: core|nofile|rss|stack|nproc|msgqueue
          type: string
        ULimitsType:
          example: Soft|Hard
          type: string
        ULimitsValue:
          description: The value of the ulimit
          example: 1000
          format: int64
          type: integer
      required:
      - ULimitsName
      - ULimitsType
      - ULimitsValue
      type: object
    CustomerDeleteUserRequest:
      example:
        token: 6s4
      properties:
        token:
          description: JWT token used to perform authorization
          example: i
          minLength: 1
          type: string
      required:
      - token
      type: object
    CustomerInviteUserRequest:
      example:
        email: abc@example.com
        token: jj
      properties:
        email:
          example: abc@example.com
          format: email
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: bx
          minLength: 1
          type: string
      required:
      - email
      - token
      type: object
    CustomerInviteUserRequest2:
      example:
        email: abc@example.com
      properties:
        email:
          example: abc@example.com
          format: email
          minLength: 1
          type: string
      required:
      - email
      type: object
    CustomerLoginWithIdentityProviderRequest:
      example:
        authorizationCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        environmentType: DEV
        identityProviderName: Google
        invitedEmail: abc@gmail.com
        legalCompanyName: mywebsite
        redirectUri: https://www.example/redirect
        token: axu
      properties:
        authorizationCode:
          description: The authorization code from the Identity Provider
          example: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
          type: string
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        invitedEmail:
          description: Email address that the user was invited with
          example: abc@gmail.com
          format: email
          type: string
        legalCompanyName:
          example: mywebsite
          minLength: 1
          type: string
        redirectUri:
          description: The redirect URI used to get the authorization code
          example: https://www.example/redirect
          type: string
        token:
          description: JWT token used to perform authorization
          example: 5s7
          minLength: 1
          type: string
      required:
      - authorizationCode
      - identityProviderName
      - token
      type: object
    CustomerLoginWithIdentityProviderRequest2:
      example:
        authorizationCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        environmentType: DEV
        identityProviderName: Google
        invitedEmail: abc@gmail.com
        legalCompanyName: mywebsite
        redirectUri: https://www.example/redirect
      properties:
        authorizationCode:
          description: The authorization code from the Identity Provider
          example: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
          type: string
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        environmentType:
          description: The environment type of the portal that the customer is signing
            in to
          example: DEV
          type: string
        identityProviderName:
          description: The name of the Identity Provider
          example: Google
          type: string
        invitedEmail:
          description: Email address that the user was invited with
          example: abc@gmail.com
          format: email
          type: string
        legalCompanyName:
          example: mywebsite
          minLength: 1
          type: string
        redirectUri:
          description: The redirect URI used to get the authorization code
          example: https://www.example/redirect
          type: string
      required:
      - authorizationCode
      - identityProviderName
      type: object
    CustomerLoginWithIdentityProviderResult:
      example:
        jwtToken: ""
      properties:
        jwtToken:
          description: The jwt token
          example: ""
          type: string
      required:
      - jwtToken
      type: object
    CustomerResetPasswordRequest:
      example:
        email: abc@example.com
        token: go
      properties:
        email:
          example: abc@example.com
          format: email
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: g
          minLength: 1
          type: string
      required:
      - email
      - token
      type: object
    CustomerResetPasswordRequest2:
      example:
        email: abc@example.com
      properties:
        email:
          example: abc@example.com
          format: email
          minLength: 1
          type: string
      required:
      - email
      type: object
    CustomerSigninRequest:
      example:
        email: abc@gmail.com
        environmentType: DEV
        hashedPassword: deprecated
        password: password
        token: ib
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        hashedPassword:
          example: deprecated
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: p
          minLength: 1
          type: string
      required:
      - email
      - token
      type: object
    CustomerSigninRequest2:
      example:
        email: abc@gmail.com
        environmentType: DEV
        hashedPassword: deprecated
        password: password
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        environmentType:
          description: The environment type of the portal that the customer is signing
            in to
          example: DEV
          type: string
        hashedPassword:
          example: deprecated
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
      required:
      - email
      type: object
    CustomerSigninResult:
      example:
        jwtToken: ""
      properties:
        jwtToken:
          description: The jwt token
          example: ""
          type: string
      required:
      - jwtToken
      type: object
    CustomerSignupRequest:
      example:
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        email: abc@gmail.com
        legalCompanyName: mywebsite
        name: John Doe
        password: password
        token: acr
      properties:
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        email:
          description: Email address of the end-user
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        legalCompanyName:
          default: ""
          example: mywebsite
          type: string
        name:
          description: Name of the end-user
          example: John Doe
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: "9"
          minLength: 1
          type: string
      required:
      - email
      - name
      - password
      - token
      type: object
    CustomerSignupRequest2:
      example:
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        email: abc@gmail.com
        legalCompanyName: mywebsite
        name: John Doe
        password: password
      properties:
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        email:
          description: Email address of the end-user
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        legalCompanyName:
          default: ""
          example: mywebsite
          type: string
        name:
          description: Name of the end-user
          example: John Doe
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
      required:
      - email
      - name
      - password
      type: object
    DeRegisterResourceMetricsConfigRequest:
      example:
        id: r-12345678
        serviceId: s-12345678
        token: l
      properties:
        id:
          description: ID of a resource
          example: Omnis et sit quia modi deleniti.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: r7b
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteAccountConfigRequest:
      example:
        id: ac-12345678
        token: usz
      properties:
        id:
          description: ID of an Account Config
          example: Occaecati tempore maxime dolor esse.
          type: string
        token:
          description: JWT token used to perform authorization
          example: "8"
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteComputeConfigRequest:
      example:
        id: cc-12345678
        serviceId: s-12345678
        token: hs
      properties:
        id:
          description: ID of a Compute Config
          example: Dolore occaecati est voluptas voluptas.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: i
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteCustomDomainRequest:
      example:
        id: cd-12345678
        token: ep9
      properties:
        id:
          description: ID of an Custom Domain
          example: Eum id qui.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 17x
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteCustomNetworkRequest:
      example:
        id: n-12345678
        token: vf
      properties:
        id:
          description: ID of a custom network
          example: Blanditiis rerum voluptas assumenda facere.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 9x
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteDeploymentConfigRequest:
      example:
        id: dc-12345678
        token: jbp
      properties:
        id:
          description: ID of a Deployment Config
          example: Ex consequatur quia maiores quis.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 7z
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteHelmPackageRequest:
      example:
        chartName: my-chart
        chartVersion: 1.0.0
        token: k
      properties:
        chartName:
          description: The chart name of the Helm package to delete
          example: my-chart
          type: string
        chartVersion:
          description: The chart version of the Helm package to delete
          example: 1.0.0
          type: string
        token:
          description: JWT token used to perform authorization
          example: "57"
          minLength: 1
          type: string
      required:
      - chartName
      - chartVersion
      - token
      type: object
    DeleteIdentityProviderRequest:
      example:
        id: idp-12345678
        token: it
      properties:
        id:
          description: ID of an Identity Provider
          example: Id mollitia aut facilis non quia quaerat.
          type: string
        token:
          description: JWT token used to perform authorization
          example: ic
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteImageConfigRequest:
      description: Delete an image configuration
      example:
        id: imgc-12345678
        serviceId: s-12345678
        token: q6w
      properties:
        id:
          description: ID of an Image Config
          example: Itaque quo ut.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: o
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteImageRegistryRequest:
      description: Delete an HTTP API v2 Docker Image Registry
      example:
        id: ir-12345678
        token: "5"
      properties:
        id:
          description: ID of an Image Registry
          example: Voluptatem vero doloremque omnis quo.
          type: string
        token:
          description: JWT token used to perform authorization
          example: z
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteInfraConfigRequest:
      example:
        id: ic-12345678
        serviceId: s-12345678
        token: "3"
      properties:
        id:
          description: ID of an Infra Config
          example: Minima porro rem dicta ea.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 2g
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteInputParameterRequest:
      example:
        id: var-12345678
        serviceId: s-12345678
        token: x
      properties:
        id:
          description: ID of an Input Parameter
          example: Eos voluptas necessitatibus.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: i
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteLimitRequest:
      example:
        family: COMPUTE_INFRA
        key: MAX_VIRTUAL_CORES_PER_RESOURCE
        token: "6"
      properties:
        family:
          description: The limit family
          example: SERVICE
          type: string
        key:
          description: Unique key to identify the limit
          example: MAX_VIRTUAL_CORES_PER_RESOURCE
          type: string
        token:
          description: JWT token used to perform authorization
          example: "21"
          minLength: 1
          type: string
      required:
      - family
      - key
      - token
      type: object
    DeleteNetworkConfigRequest:
      example:
        id: nc-12345678
        serviceId: s-12345678
        token: mq6
      properties:
        id:
          description: ID of a Network Config
          example: Voluptates quis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "y"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteOutputParameterRequest:
      example:
        id: op-12345678
        serviceId: s-12345678
        token: q
      properties:
        id:
          description: ID of an Output Parameter
          example: Quaerat aut voluptates nulla iste.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: j
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeletePipelineRequest:
      example:
        id: p-12345678
        serviceId: s-12345678
        token: 12v
      properties:
        id:
          description: ID of a Pipeline
          example: Quasi impedit nihil quam autem.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ti
          minLength: 1
          type: string
      required:
      - token
      type: object
    DeleteProductTierRequest:
      example:
        id: pt-12345678
        serviceId: s-12345678
        token: v
      properties:
        id:
          description: ID of a Product Tier
          example: Vel ut quam ullam fuga sit magni.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: a1u
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: "0"
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Quaerat sed impedit.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: "1"
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    DeleteResourceRequest:
      example:
        id: r-12345678
        serviceId: s-12345678
        token: u8m
      properties:
        id:
          description: ID of a resource
          example: Quae illum excepturi repellat dolorem vel nobis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: vla
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteSaaSPortalCustomDomainRequest:
      example:
        environmentType: DEV
        token: u
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        token:
          description: JWT token used to perform authorization
          example: "5"
          minLength: 1
          type: string
      required:
      - environmentType
      - token
      type: object
    DeleteServiceAPIRequest:
      example:
        id: sa-12345678
        serviceId: s-12345678
        token: "5"
      properties:
        id:
          description: ID of a Service API
          example: Quis temporibus quod.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: p6x
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteServiceEnvironmentRequest:
      example:
        id: se-12345678
        serviceId: s-12345678
        token: f
      properties:
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "4"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteServiceModelRequest:
      example:
        id: sm-12345678
        serviceId: s-12345678
        token: 96m
      properties:
        id:
          description: ID of a Service Model
          example: Et magnam atque asperiores asperiores nam.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 0f
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteServiceRequest:
      example:
        id: s-12345678
        token: 2u
      properties:
        id:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "n"
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteServicesOrchestrationRequest:
      example:
        id: so-12345678
        token: q
      properties:
        id:
          description: ID of a Services Orchestration
          example: Molestiae aut.
          type: string
        token:
          description: JWT token used to perform authorization
          example: owv
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteStorageConfigRequest:
      example:
        id: sc-12345678
        serviceId: s-12345678
        token: vw
      properties:
        id:
          description: ID of a Storage Config
          example: Voluptatem doloremque saepe rerum voluptatem unde.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: e
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteStorageVolumeConfigRequest:
      example:
        id: svc-12345678
        serviceId: s-12345678
        token: 81l
      properties:
        id:
          description: ID of a Storage Volume Config
          example: Odit id.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "2"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteSubscriptionRequest:
      example:
        id: sub-12345678
        token: g3
      properties:
        id:
          description: ID of a Subscription
          example: Tempore delectus voluptatem velit facilis libero eveniet.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 2q
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteUpgradePathRequest:
      example:
        id: up-12345678
        serviceId: s-12345678
        token: 1xj
      properties:
        id:
          description: ID of an Upgrade Path
          example: Dolorum sint.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: uk
          minLength: 1
          type: string
      required:
      - token
      type: object
    DeleteUserRequest:
      example:
        token: fy
      properties:
        token:
          description: JWT token used to perform authorization
          example: a
          minLength: 1
          type: string
      required:
      - token
      type: object
    DemoRequest:
      example:
        company: ABC
        email: abc@gmail.com
        name: John Doe
        phone: +1-234567890
      properties:
        company:
          example: ABC
          minLength: 1
          type: string
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        name:
          example: John Doe
          minLength: 1
          type: string
        phone:
          example: +1-234567890
          type: string
      required:
      - company
      - email
      - name
      type: object
    DeploymentCellHealthDetail:
      example:
        cloudProvider: aws
        hostClusterID: hc-12345678
        instanceHealth:
          Veritatis quas quo aliquam.:
            instanceID: instance-12345678
            lifeCycleStatus: RUNNING
            resourcesHealth:
              Sequi hic quibusdam.:
                nodesHealth:
                  Exercitationem nihil numquam neque quia dolorem.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    events:
                    - event-1
                    - event-2
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    recentLogs: Log message
                    status: HEALTHY
                  Ratione ut.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    events:
                    - event-1
                    - event-2
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    recentLogs: Log message
                    status: HEALTHY
                resourceID: resource-12345678
                resourceKey: primary
                resourceType: Kustomize
                status: HEALTHY
            status: HEALTHY
        regionCode: us-west-1
        serviceEnvironmentName: prod
        serviceName: mysql
      properties:
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        hostClusterID:
          description: ID of a Host Cluster
          example: Eius fugiat nostrum tempora quibusdam ad qui.
          type: string
        instanceHealth:
          additionalProperties:
            $ref: '#/components/schemas/InstanceHealthSummary'
          description: The health summary of the instances by instance ID
          example:
            Modi aperiam adipisci minus est temporibus.:
              instanceID: instance-12345678
              lifeCycleStatus: RUNNING
              resourcesHealth:
                Sequi hic quibusdam.:
                  nodesHealth:
                    Exercitationem nihil numquam neque quia dolorem.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      events:
                      - event-1
                      - event-2
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      recentLogs: Log message
                      status: HEALTHY
                    Ratione ut.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      events:
                      - event-1
                      - event-2
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      recentLogs: Log message
                      status: HEALTHY
                  resourceID: resource-12345678
                  resourceKey: primary
                  resourceType: Kustomize
                  status: HEALTHY
              status: HEALTHY
            Porro quia.:
              instanceID: instance-12345678
              lifeCycleStatus: RUNNING
              resourcesHealth:
                Sequi hic quibusdam.:
                  nodesHealth:
                    Exercitationem nihil numquam neque quia dolorem.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      events:
                      - event-1
                      - event-2
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      recentLogs: Log message
                      status: HEALTHY
                    Ratione ut.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      events:
                      - event-1
                      - event-2
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      recentLogs: Log message
                      status: HEALTHY
                  resourceID: resource-12345678
                  resourceKey: primary
                  resourceType: Kustomize
                  status: HEALTHY
              status: HEALTHY
            Velit non.:
              instanceID: instance-12345678
              lifeCycleStatus: RUNNING
              resourcesHealth:
                Sequi hic quibusdam.:
                  nodesHealth:
                    Exercitationem nihil numquam neque quia dolorem.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      events:
                      - event-1
                      - event-2
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      recentLogs: Log message
                      status: HEALTHY
                    Ratione ut.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      events:
                      - event-1
                      - event-2
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      recentLogs: Log message
                      status: HEALTHY
                  resourceID: resource-12345678
                  resourceKey: primary
                  resourceType: Kustomize
                  status: HEALTHY
              status: HEALTHY
          type: object
        regionCode:
          description: The region code of the host cluster
          example: us-west-1
          type: string
        serviceEnvironmentName:
          description: The name of the service environment
          example: prod
          type: string
        serviceName:
          description: The name of the service
          example: mysql
          type: string
      type: object
    DeploymentCellHealthRequest:
      example:
        hostClusterID: hc-12345678
        serviceEnvironmentID: se-12345678
        serviceID: s-12345678
        token: at0
      properties:
        hostClusterID:
          description: ID of a Host Cluster
          example: Et voluptates quae nemo saepe optio.
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 3qk
          minLength: 1
          type: string
      required:
      - token
      type: object
    DeploymentCellHealthSummary:
      example:
        deployingInstances: 4849595116639671998
        healthyInstances: 5192306233745127610
        hostClusterID: hc-12345678
        message: Cell is healthy
        status: Healthy
        totalInstances: 3583267716384966680
        unhealthyInstances: 2723994217715363451
        unknownInstances: 5283768360688440900
      properties:
        deployingInstances:
          description: The number of instances currently deploying
          example: 3352115892869449370
          format: int64
          type: integer
        healthyInstances:
          description: The number of healthy instances in the cell
          example: 4308505660894791520
          format: int64
          type: integer
        hostClusterID:
          description: ID of a Host Cluster
          example: Veniam et neque at.
          type: string
        message:
          description: The status message
          example: Cell is healthy
          type: string
        status:
          description: The status of the cell
          example: Healthy
          type: string
        totalInstances:
          description: The total number of instances in the cell
          example: 4147492573629667571
          format: int64
          type: integer
        unhealthyInstances:
          description: The number of unhealthy instances in the cell
          example: 128760503637688907
          format: int64
          type: integer
        unknownInstances:
          description: The number of instances with unknown status
          example: 4686012151482745913
          format: int64
          type: integer
      required:
      - deployingInstances
      - healthyInstances
      - hostClusterID
      - message
      - status
      - totalInstances
      - unhealthyInstances
      type: object
    DeprecateResourceRequest:
      example:
        id: r-12345678
        serviceId: s-12345678
        token: e2
      properties:
        id:
          description: ID of a resource
          example: Enim nesciunt.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: hji
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeprecateServiceAPIRequest:
      example:
        id: sa-12345678
        serviceId: s-12345678
        token: 4bb
      properties:
        id:
          description: ID of a Service API
          example: Et tenetur excepturi.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 0f
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeprecateTierVersionSetRequest:
      example:
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: yo2
        version: "3.0"
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Numquam unde.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ig
          minLength: 1
          type: string
        version:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
      required:
      - productTierId
      - serviceId
      - token
      - version
      type: object
    DeregisterActionHookRequest:
      example:
        id: r-12345678
        scope: CLUSTER
        serviceId: s-12345678
        token: x
        type: ADD
      properties:
        id:
          description: ID of a resource
          example: Saepe officiis eaque esse.
          type: string
        scope:
          description: The scope of the hook
          example: CLUSTER|NODE
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: c
          minLength: 1
          type: string
        type:
          description: The type of hook to execute
          example: INIT|ADD|REMOVE|PROMOTE|DEMOTE|HEALTH_CHECK|READINESS_CHECK|STARTUP_CHECK|PRE_START|POST_START|PRE_UPGRADE|POST_UPGRADE|PRE_STOP|POST_STOP
          type: string
      required:
      - id
      - scope
      - serviceId
      - token
      - type
      type: object
    DeregisterActionHookRequest2:
      example:
        scope: CLUSTER
        type: ADD
      properties:
        scope:
          description: The scope of the hook
          example: CLUSTER
          type: string
        type:
          description: The type of hook to execute
          example: ADD
          type: string
      required:
      - scope
      - type
      type: object
    DescribeAccountConfigByAWSAccountIDRequest:
      example:
        awsAccountID: "123456789012"
        token: "2"
      properties:
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        token:
          description: JWT token used to perform authorization
          example: 12x
          minLength: 1
          type: string
      required:
      - awsAccountID
      - token
      type: object
    DescribeAccountConfigByAWSAccountIDResult:
      description: Account configuration including the role required to access
      example:
        awsAccountID: "123456789012"
        awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
        awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml&param_CreateLoadBalancerPolicy=false
        awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
        byoaInstanceIDs:
        - instance-12345678
        - instance-abcdefgh
        cloudProviderId: infra-12345678
        description: An AWS account hosting multiple dev environments
        id: ac-12345678
        name: Dev AWS account
        status: READY
        statusMessage: Account is ready
      properties:
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        awsBootstrapRoleARN:
          description: The security role ARN or service account ARN that grants access
            to operate the infra
          example: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          type: string
        awsCloudFormationNoLBTemplateURL:
          description: The URL to the CloudFormation template (no LoadBalancer policy
            version)
          example: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml&param_CreateLoadBalancerPolicy=false
          type: string
        awsCloudFormationTemplateURL:
          description: The URL to the CloudFormation template
          example: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          type: string
        byoaInstanceIDs:
          description: The BYOA instance IDs that this account config is tied to
          example:
          - instance-12345678
          - instance-abcdefgh
          items:
            example: Illo est provident dignissimos fugit nihil quia.
            type: string
          type: array
        cloudProviderId:
          description: ID of an CloudProvider
          example: Dolorem doloribus et quo.
          type: string
        description:
          description: The description for the account
          example: An AWS account hosting multiple dev environments
          type: string
        id:
          description: ID of an Account Config
          example: Maiores molestias praesentium voluptas fuga omnis consequatur.
          type: string
        name:
          description: The name of the account
          example: Dev AWS account
          type: string
        status:
          description: The status of the account configuration
          example: PENDING|VERIFYING|READY|FAILED|DELETING
          type: string
        statusMessage:
          description: The status message of the account
          example: Account is ready
          type: string
      required:
      - awsAccountID
      - awsBootstrapRoleARN
      - cloudProviderId
      - description
      - id
      - name
      - status
      - statusMessage
      type: object
    DescribeAccountConfigByAzureSubscriptionIDRequest:
      example:
        azureSubscriptionID: 12345678-1234-1234-1234-123456789012
        token: ul
      properties:
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        token:
          description: JWT token used to perform authorization
          example: f5
          minLength: 1
          type: string
      required:
      - azureSubscriptionID
      - token
      type: object
    DescribeAccountConfigByAzureSubscriptionIDResult:
      description: Account configuration for Azure
      example:
        azureSubscriptionID: 12345678-1234-1234-1234-123456789012
        azureTenantID: 12345678-1234-1234-1234-123456789012
        byoaInstanceIDs:
        - instance-12345678
        - instance-abcdefgh
        cloudProviderId: infra-12345678
        description: An AWS account hosting multiple dev environments
        id: ac-12345678
        name: Dev AWS account
        status: READY
        statusMessage: Account is ready
      properties:
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        azureTenantID:
          description: The Azure tenant ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        byoaInstanceIDs:
          description: The BYOA instance IDs that this account config is tied to
          example:
          - instance-12345678
          - instance-abcdefgh
          items:
            example: Sint eos voluptatibus tempora voluptatum.
            type: string
          type: array
        cloudProviderId:
          description: ID of an CloudProvider
          example: Exercitationem ad doloremque officia.
          type: string
        description:
          description: The description for the account
          example: An AWS account hosting multiple dev environments
          type: string
        id:
          description: ID of an Account Config
          example: Vel laudantium enim sit ea dignissimos unde.
          type: string
        name:
          description: The name of the account
          example: Dev AWS account
          type: string
        status:
          description: The status of the account configuration
          example: PENDING|VERIFYING|READY|FAILED|DELETING
          type: string
        statusMessage:
          description: The status message of the account
          example: Account is ready
          type: string
      required:
      - azureSubscriptionID
      - azureTenantID
      - cloudProviderId
      - description
      - id
      - name
      - status
      - statusMessage
      type: object
    DescribeAccountConfigByGCPProjectIDRequest:
      example:
        gcpProjectID: my-project
        token: m
      properties:
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        token:
          description: JWT token used to perform authorization
          example: 2ak
          minLength: 1
          type: string
      required:
      - gcpProjectID
      - token
      type: object
    DescribeAccountConfigByGCPProjectIDResult:
      description: Account configuration including the role required to access
      example:
        byoaInstanceIDs:
        - instance-12345678
        - instance-abcdefgh
        cloudProviderId: infra-12345678
        description: An AWS account hosting multiple dev environments
        gcpProjectID: my-project
        gcpProjectNumber: "123456789012"
        gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
        id: ac-12345678
        name: Dev AWS account
        status: READY
        statusMessage: Account is ready
      properties:
        byoaInstanceIDs:
          description: The BYOA instance IDs that this account config is tied to
          example:
          - instance-12345678
          - instance-abcdefgh
          items:
            example: Maxime adipisci quae deleniti et.
            type: string
          type: array
        cloudProviderId:
          description: ID of an CloudProvider
          example: Consequatur ipsam ut quo officiis molestiae corrupti.
          type: string
        description:
          description: The description for the account
          example: An AWS account hosting multiple dev environments
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        gcpProjectNumber:
          description: The GCP project number
          example: "123456789012"
          type: string
        gcpServiceAccountEmail:
          description: The GCP service account email
          example: bootstrap@my-project.iam.gserviceaccount.com
          type: string
        id:
          description: ID of an Account Config
          example: Vitae fuga perspiciatis.
          type: string
        name:
          description: The name of the account
          example: Dev AWS account
          type: string
        status:
          description: The status of the account configuration
          example: PENDING|VERIFYING|READY|FAILED|DELETING
          type: string
        statusMessage:
          description: The status message of the account
          example: Account is ready
          type: string
      required:
      - cloudProviderId
      - description
      - gcpProjectID
      - gcpProjectNumber
      - gcpServiceAccountEmail
      - id
      - name
      - status
      - statusMessage
      type: object
    DescribeAccountConfigRequest:
      example:
        id: ac-12345678
        token: "5"
      properties:
        id:
          description: ID of an Account Config
          example: Quia eveniet officia exercitationem ut nemo.
          type: string
        token:
          description: JWT token used to perform authorization
          example: "2"
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeAccountConfigResult:
      description: Account configuration including the role required to access
      example:
        awsAccountID: "123456789012"
        awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
        awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
        awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
        azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
        azureSubscriptionID: 12345678-1234-1234-1234-123456789012
        azureTenantID: 12345678-1234-1234-1234-123456789012
        byoaInstanceIDs:
        - instance-12345678
        - instance-abcdefgh
        cloudProviderId: infra-12345678
        description: An AWS account hosting multiple dev environments
        gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
        gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
        gcpProjectID: my-project
        gcpProjectNumber: "123456789012"
        gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
        id: ac-12345678
        name: Dev AWS account
        status: READY
        statusMessage: Account is ready
      properties:
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        awsBootstrapRoleARN:
          description: The security role ARN or service account ARN that grants access
            to operate the infra
          example: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          type: string
        awsCloudFormationNoLBTemplateURL:
          description: The URL to the CloudFormation template (no LoadBalancer policy
            version)
          example: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          type: string
        awsCloudFormationTemplateURL:
          description: The URL to the CloudFormation template
          example: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          type: string
        azureBootstrapShellCommand:
          description: The Azure bootstrap shell command
          example: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          type: string
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        azureTenantID:
          description: The Azure tenant ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        byoaInstanceIDs:
          description: The BYOA instance IDs that this account config is tied to
          example:
          - instance-12345678
          - instance-abcdefgh
          items:
            example: Voluptas explicabo sint.
            type: string
          type: array
        cloudProviderId:
          description: ID of an CloudProvider
          example: Est rerum.
          type: string
        description:
          description: The description for the account
          example: An AWS account hosting multiple dev environments
          type: string
        gcpBootstrapShellCommand:
          description: The GCP bootstrap shell command
          example: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          type: string
        gcpDisconnectShellCommand:
          description: The GCP disconnect shell command
          example: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        gcpProjectNumber:
          description: The GCP project number
          example: "123456789012"
          type: string
        gcpServiceAccountEmail:
          description: The GCP service account email
          example: bootstrap@my-project.iam.gserviceaccount.com
          type: string
        id:
          description: ID of an Account Config
          example: Placeat quaerat.
          type: string
        name:
          description: The name of the account
          example: Dev AWS account
          type: string
        status:
          description: The status of the account configuration
          example: PENDING|VERIFYING|READY|FAILED|DELETING
          type: string
        statusMessage:
          description: The status message of the account
          example: Account is ready
          type: string
      required:
      - cloudProviderId
      - description
      - id
      - name
      - status
      - statusMessage
      type: object
    DescribeAuditEventRequest:
      example:
        id: event-12345678
        subscriptionId: sub-abcd1234
        token: s2
      properties:
        id:
          description: ID of a Event
          example: Ducimus exercitationem.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: "3"
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeAuditEventResult:
      example:
        eventSource: "Customer, Infra or Maintenance"
        id: event-12345678
        message: instance-abcd1234 created
        orgId: org-12345678
        orgName: Acme Corporation
        resourceInstanceId: instance-abcd1234
        resourceName: Galera
        subscriptionId: sub-abcd1234
        time: 2023-01-10T00:00:00Z
        userId: user-12345678
        userName: John Doe
        workflowFailures:
        - eventTime: 2020-01-01T00:00:00Z
          message: Bootstrap failed for reason X
        - eventTime: 2020-01-01T00:01:00Z
          message: Compute failed for reason Y
      properties:
        eventSource:
          description: The event source
          example: "Customer, Infra or Maintenance"
          type: string
        id:
          description: ID of a Event
          example: Autem quidem.
          type: string
        message:
          description: Resource Instance of message
          example: instance-abcd1234 created
          type: string
        orgId:
          description: ID of an Org
          example: Ut illum in voluptas autem quia.
          type: string
        orgName:
          description: The organization name of the user that caused the event
          example: Acme Corporation
          type: string
        resourceInstanceId:
          description: Instance Id of the resource instance
          example: instance-abcd1234
          type: string
        resourceName:
          description: Name of the resource
          example: Galera
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        time:
          description: The event time
          example: 2023-01-10T00:00:00Z
          type: string
        userId:
          description: ID of a User
          example: Et nobis.
          type: string
        userName:
          description: The user name of the user that caused the event
          example: John Doe
          type: string
        workflowFailures:
          description: The list of workflow events that indicate failures
          example:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
          items:
            $ref: '#/components/schemas/WorkflowFailure'
          type: array
      required:
      - id
      - message
      - resourceInstanceId
      - resourceName
      - subscriptionId
      - time
      type: object
    DescribeAvailabilityZoneRequest:
      example:
        id: az-12345678
        token: u
      properties:
        id:
          description: ID of an AZ
          example: In beatae.
          type: string
        token:
          description: JWT token used to perform authorization
          example: f
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeAvailabilityZoneResult:
      example:
        cloudProviderName: aws
        code: us-east-1a
        description: US East (N. Virginia) Availability Zone A
        id: az-12345678
        regionCode: us-east-1
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        code:
          description: Cloud-provider native availability zone code
          example: us-east-1a
          type: string
        description:
          description: Description of the AvailabilityZone
          example: US East (N. Virginia) Availability Zone A
          type: string
        id:
          description: ID of an AZ
          example: Quod eveniet dignissimos minima est illo et.
          type: string
        regionCode:
          description: Cloud-provider native region code
          example: us-east-1
          type: string
      required:
      - cloudProviderName
      - code
      - description
      - id
      - regionCode
      type: object
    DescribeCloudProviderRequest:
      example:
        id: infra-12345678
        token: v1f
      properties:
        id:
          description: ID of an CloudProvider
          example: Reprehenderit voluptatibus et voluptas dolorum iure iure.
          type: string
        token:
          description: JWT token used to perform authorization
          example: sdk
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeCloudProviderResult:
      example:
        description: Amazon Web Services
        id: infra-12345678
        name: aws
      properties:
        description:
          description: Description of the CloudProvider
          example: Amazon Web Services
          type: string
        id:
          description: ID of an CloudProvider
          example: Culpa libero dolor.
          type: string
        name:
          description: Name of the CloudProvider
          example: aws
          type: string
      required:
      - description
      - id
      - name
      type: object
    DescribeComputeConfigRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Sed dolor rerum voluptatibus sapiente omnis aliquam.
        id: cc-12345678
        serviceId: s-12345678
        token: z00
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Quia qui pariatur.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: A laborum dolor qui earum sed.
          type: string
        id:
          description: ID of a Compute Config
          example: Nulla magnam excepturi repellendus.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "9"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeComputeConfigResult:
      example:
        autoscalingPolicy:
          maxReplicas: 4
          minReplicas: 1
        computeInstanceTypeConfigOverrides:
          aws:
            t3.micro:
              instanceLifeCycleType: Spot
              rootVolumeSizeGi: 10
              warmPoolConfiguration:
                minimumNodesInPool: 1
            t3.small:
              instanceLifeCycleType: OnDemand
              warmPoolConfiguration:
                minimumNodesInPool: 2
          azure:
            Standard_B1ls:
              rootVolumeSizeGi: 10
              warmPoolConfiguration:
                minimumNodesInPool: 1
        cpuArchitecture: X86_64|ARM64
        description: my compute config description
        id: cc-12345678
        infraConfigIDs:
        - ic-12345678
        - ic-abcdefgh
        instanceTypes:
          aws:
          - t3.micro
          - t3.small
          azure:
          - Standard_B1ls
          - Standard_B1ms
          gcp:
          - $var.instance_type
        name: my compute config
        replicaCount: "3"
        resources:
          limits:
            cpu: "1"
            memory: 500Mi
          requests:
            cpu: "0.5"
            memory: 200Mi
        rootVolumeSizeGi: 10
        serviceId: s-12345678
        warmPoolConfiguration:
          minimumNodesInPool: 1
      properties:
        autoscalingPolicy:
          $ref: '#/components/schemas/AutoscalingPolicy'
        computeInstanceTypeConfigOverrides:
          additionalProperties: true
          description: The compute instance type config overrides for this compute
            config
          example:
            aws:
              t3.micro:
                instanceLifeCycleType: Spot
                rootVolumeSizeGi: 10
                warmPoolConfiguration:
                  minimumNodesInPool: 1
              t3.small:
                instanceLifeCycleType: OnDemand
                warmPoolConfiguration:
                  minimumNodesInPool: 2
            azure:
              Standard_B1ls:
                rootVolumeSizeGi: 10
                warmPoolConfiguration:
                  minimumNodesInPool: 1
          type: object
        cpuArchitecture:
          description: Processor architecture
          example: X86_64|ARM64
          type: string
        description:
          description: Description of the compute config
          example: my compute config description
          type: string
        id:
          description: ID of a Compute Config
          example: Porro tempora et architecto minima.
          type: string
        infraConfigIDs:
          description: The list of infra config IDs associated with the compute config.
          example:
          - ic-12345678
          - ic-abcdefgh
          items:
            description: ID of an Infra Config
            example: Accusamus sed fugiat est asperiores.
            type: string
          type: array
        instanceTypes:
          additionalProperties: true
          description: The instance types for this compute config
          example:
            aws:
            - t3.micro
            - t3.small
            azure:
            - Standard_B1ls
            - Standard_B1ms
            gcp:
            - $var.instance_type
          type: object
        name:
          description: Name of the compute config
          example: my compute config
          type: string
        replicaCount:
          description: Number of replicas to provision for this logical pool of nodes
            per instance of the resource
          example: "3"
          type: string
        resources:
          $ref: '#/components/schemas/ResourceSpec'
        rootVolumeSizeGi:
          description: Size of the root volume in Gi
          example: 10
          format: int64
          type: integer
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        warmPoolConfiguration:
          $ref: '#/components/schemas/WarmPoolConfiguration'
      required:
      - description
      - id
      - name
      - replicaCount
      - serviceId
      type: object
    DescribeConsumptionBillingDetailsRequest:
      example:
        returnUrl: https://mysaasportal.com
        token: f
      properties:
        returnUrl:
          description: Return Url used to configure payment methods links
          example: https://mysaasportal.com
          type: string
        token:
          description: JWT token used to perform authorization
          example: at
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribeConsumptionBillingDetailsResult:
      example:
        paymentConfigured: true
        paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
      properties:
        paymentConfigured:
          description: Whether the customer has configured their payment information.
          example: true
          type: boolean
        paymentInfoPortalURL:
          description: The URL from the billing provide to redirect users to so they
            can enter their payment information.  Only present when first adding payment
            information
          example: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
          type: string
      required:
      - paymentConfigured
      type: object
    DescribeConsumptionBillingStatusRequest:
      example:
        token: v
      properties:
        token:
          description: JWT token used to perform authorization
          example: kr
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribeConsumptionBillingStatusResult:
      example:
        enabled: true
      properties:
        enabled:
          description: Whether billing is enabled
          example: true
          type: boolean
      type: object
    DescribeConsumptionUserBillingDetailsRequest:
      example:
        id: user-abcd1234
        token: i
      properties:
        id:
          description: ID of a User
          example: Consequatur odio inventore reiciendis mollitia.
          type: string
        token:
          description: JWT token used to perform authorization
          example: d2
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeConsumptionUserBillingDetailsResult:
      example:
        billingEmbedURL: DEPRECATED
        name: John Dae
        paymentConfigured: true
        paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
        userId: user-abcd1234
      properties:
        billingEmbedURL:
          description: DEPRECATED
          example: DEPRECATED
          type: string
        name:
          description: "DEPRECATED: The name of the user"
          example: John Dae
          type: string
        paymentConfigured:
          description: Whether the customer has configured their payment information.
          example: true
          type: boolean
        paymentInfoPortalURL:
          description: The URL from the billing provide to redirect users to so they
            can enter their payment information.  Only present when first adding payment
            information
          example: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
          type: string
        userId:
          description: ID of a User
          example: Sed dolorum possimus.
          type: string
      required:
      - paymentConfigured
      type: object
    DescribeCustomDomainRequest:
      example:
        id: cd-12345678
        token: h6
      properties:
        id:
          description: ID of an Custom Domain
          example: Quis doloribus excepturi.
          type: string
        token:
          description: JWT token used to perform authorization
          example: dic
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeCustomDomainResult:
      description: Custom domain including the role required to access
      example:
        customDomain: mydomain.dev
        description: Description of the domain
        id: cd-12345678
        name: Dev domain
        route53Configuration:
          awsAccountID: "123456789012"
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
        status: READY
        statusMessage: Account is ready
      properties:
        customDomain:
          description: The root domain of the domain to use as suffix
          example: mydomain.dev
          type: string
        description:
          description: The description for the domain
          example: Description of the domain
          type: string
        id:
          description: ID of an Custom Domain
          example: Laborum alias et nostrum inventore in saepe.
          type: string
        name:
          description: The name of the custom domain
          example: Dev domain
          type: string
        route53Configuration:
          $ref: '#/components/schemas/Route53ConfigurationDescription'
        status:
          example: PENDING|VERIFYING|READY|FAILED
          type: string
        statusMessage:
          description: The status message of the custom domain
          example: Account is ready
          type: string
      required:
      - customDomain
      - description
      - id
      - name
      - route53Configuration
      type: object
    DescribeCustomNetworkRequest:
      example:
        id: n-12345678
        token: jew
      properties:
        id:
          description: ID of a custom network
          example: Enim dolorum itaque perspiciatis iusto distinctio.
          type: string
        token:
          description: JWT token used to perform authorization
          example: o
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeDeploymentConfigRequest:
      example:
        id: default
        token: a
      properties:
        id:
          description: The deployment configuration ID
          example: default
          type: string
        token:
          description: JWT token used to perform authorization
          example: a
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeDeploymentConfigResult:
      example:
        description: A production deployment config
        id: dc-12345678
        infraRollConfiguration:
          infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
          maximumNumberOfResourceInstancesPerBatch: 1
          maximumUnavailableReplicas: 1
        name: Production
        rolloutPriorityList:
        - region-12345678
        - region-abcd1234
        - region-3c3c3c3c
      properties:
        description:
          description: A brief description of the deployment config
          example: A production deployment config
          type: string
        id:
          description: ID of a Deployment Config
          example: Quo asperiores nobis quia qui.
          type: string
        infraRollConfiguration:
          $ref: '#/components/schemas/InfraRollConfiguration'
        name:
          description: Name of the deployment config
          example: Production
          type: string
        rolloutPriorityList:
          example:
          - region-12345678
          - region-abcd1234
          - region-3c3c3c3c
          items:
            description: ID of a Region
            example: Neque et cum facere qui.
            type: string
          type: array
      required:
      - description
      - id
      - infraRollConfiguration
      - name
      - rolloutPriorityList
      type: object
    DescribeHelmPackageRequest:
      example:
        chartName: my-chart
        chartVersion: 1.0.0
        token: hq
      properties:
        chartName:
          description: The chart name of the Helm package to describe
          example: my-chart
          type: string
        chartVersion:
          description: The chart version of the Helm package to describe
          example: 1.0.0
          type: string
        token:
          description: JWT token used to perform authorization
          example: oz
          minLength: 1
          type: string
      required:
      - chartName
      - chartVersion
      - token
      type: object
    DescribeIdentityProviderRequest:
      example:
        id: idp-12345678
        token: vpq
      properties:
        id:
          description: ID of an Identity Provider
          example: Voluptatem non.
          type: string
        token:
          description: JWT token used to perform authorization
          example: zc
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeIdentityProviderResult:
      example:
        authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
        disabled: false
        emailIdentifiers: company.com
        environmentType: Sunt maxime suscipit illo illum architecto.
        id: idp-12345678
        identityProviderName: Google
        loginButtonIconUrl: https://example.com/icon.png
        loginButtonText: Login with Google
        name: Google for my company
        scopes:
        - openid
        - email
        - profile
        status: Ready
        tokenEndpoint: https://oauth2.googleapis.com/token
        userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
      properties:
        authorizationEndpoint:
          description: The authorization endpoint of the Identity Provider
          example: https://accounts.google.com/o/oauth2/auth
          type: string
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
        disabled:
          description: Whether the Identity Provider is disabled
          example: false
          type: boolean
        emailIdentifiers:
          description: The email identifiers to use for the Identity Provider
          example: company.com
          type: string
        environmentType:
          description: The type of environment to filter costs by
          example: Quaerat porro laudantium.
          type: string
        id:
          description: ID of an Identity Provider
          example: Qui perspiciatis amet molestiae mollitia recusandae qui.
          type: string
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        loginButtonIconUrl:
          description: The URL of the icon to use for the login button
          example: https://example.com/icon.png
          type: string
        loginButtonText:
          description: The text to use for the login button
          example: Login with Google
          type: string
        name:
          description: The name of the Identity Provider
          example: Google for my company
          type: string
        scopes:
          description: The scopes to request from the Identity Provider
          example:
          - openid
          - email
          - profile
          items:
            example: Illo quos eligendi.
            type: string
          type: array
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        tokenEndpoint:
          description: The token endpoint of the Identity Provider
          example: https://oauth2.googleapis.com/token
          type: string
        userInfoEndpoint:
          description: The user info endpoint of the Identity Provider
          example: https://www.googleapis.com/oauth2/v3/userinfo
          type: string
      required:
      - clientId
      - id
      - identityProviderName
      - status
      type: object
    DescribeImageConfigRequest:
      description: Describe an image configuration
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Hic illum quo ut.
        id: imgc-12345678
        serviceId: s-12345678
        token: 6ia
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Nobis optio voluptates quasi.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Fugiat enim hic.
          type: string
        id:
          description: ID of an Image Config
          example: Ut eos.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: epx
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeImageConfigResult:
      example:
        customImageCommandsAndArgs:
          args:
          - -d
          - mysql
          commands:
          - echo
          - "Hello, World!"
        description: An image configuration for my new entity
        id: imgc-12345678
        imageName: mysql
        imageRegistryId: ir-12345678
        imageSignaturePublicKeyPEM: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        imageTag: v1
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
      properties:
        customImageCommandsAndArgs:
          $ref: '#/components/schemas/CustomImageCommandsAndArgs'
        description:
          description: A brief description of the image configuration
          example: An image configuration for my new entity
          type: string
        id:
          description: ID of an Image Config
          example: Beatae est quae autem ducimus.
          type: string
        imageName:
          description: Name of the container image
          example: mysql
          minLength: 1
          type: string
        imageRegistryId:
          description: ID of an Image Registry
          example: Voluptas sint labore distinctio.
          type: string
        imageSignaturePublicKeyPEM:
          description: PEM-encoded Public key part of the key used to sign the container
            image
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        imageTag:
          default: latest
          description: Tag representing the software image version that is currently
            preferred
          example: v1
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - description
      - id
      - imageName
      - imageRegistryId
      - imageTag
      - serviceEnvironmentId
      - serviceId
      type: object
    DescribeImageRegistryRequest:
      description: Describe an HTTP API v2 Docker Image Registry
      example:
        id: ir-12345678
        token: "0"
      properties:
        id:
          description: ID of an Image Registry
          example: Dolores vel aut et vero.
          type: string
        token:
          description: JWT token used to perform authorization
          example: wbw
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeImageRegistryResult:
      example:
        description: DockerHub is a public Docker Image Registry
        host: docker.io
        id: ir-12345678
        name: DockerHub
        password: mypassword
        username: myusername
      properties:
        description:
          description: A brief description of the Image Registry
          example: DockerHub is a public Docker Image Registry
          type: string
        host:
          description: The Image Registry host
          example: docker.io
          type: string
        id:
          description: ID of an Image Registry
          example: Veritatis possimus et minima.
          type: string
        name:
          description: Name of the Image Registry
          example: DockerHub
          type: string
        password:
          description: The password to use when authenticating to the Image Registry
          example: mypassword
          type: string
        username:
          description: The username to use when authenticating to the Image Registry
          example: myusername
          type: string
      required:
      - description
      - host
      - id
      - name
      type: object
    DescribeInfraConfigRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Numquam sit iusto molestiae voluptatum iste.
        id: ic-12345678
        serviceId: s-12345678
        token: "498"
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Non aspernatur sed vero excepturi omnis.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Consequatur consequatur.
          type: string
        id:
          description: ID of an Infra Config
          example: Ratione veniam ullam ullam ut quia.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: q
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeInfraConfigResult:
      example:
        computeConfigId: cc-12345678
        customTag:
          key: customKey
          value: customValue
        description: Infra config used for the base tier MySQL service
        id: ic-12345678
        name: MySQL Writer Infra Config
        networkConfigId: nc-12345678
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        storageConfigId: sc-12345678
      properties:
        computeConfigId:
          description: ID of a Compute Config
          example: Autem dolor omnis et ut.
          type: string
        customTag:
          $ref: '#/components/schemas/CustomTag'
        description:
          description: The description for the infra config
          example: Infra config used for the base tier MySQL service
          type: string
        id:
          description: ID of an Infra Config
          example: Non ut omnis.
          type: string
        name:
          description: The name of the infra config
          example: MySQL Writer Infra Config
          type: string
        networkConfigId:
          description: ID of a Network Config
          example: Dolorem molestiae quia.
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        storageConfigId:
          description: ID of a Storage Config
          example: Qui ut consequuntur quasi tempore officia.
          type: string
      required:
      - description
      - id
      - name
      - serviceEnvironmentId
      - serviceId
      type: object
    DescribeInputParameterRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Nisi quas suscipit.
        id: var-12345678
        serviceId: s-12345678
        token: 7r
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Iure illo rerum quia.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Illum beatae.
          type: string
        id:
          description: ID of an Input Parameter
          example: Quaerat eveniet.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "42"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeInputParameterResult:
      example:
        defaultValue: "true"
        dependentResourceId: r-12345678
        description: Tempora esse voluptas dolores et et dolores.
        hasOptions: true
        id: var-12345678
        isList: true
        key: 3l5
        labeledOptions:
          large: t3.xlarge
          medium: t3.large
          small: t3.medium
        limits:
          max: Hic sit.
          maxLength: Incidunt quibusdam et atque quia sed.
          min: A unde eveniet voluptatem omnis qui eveniet.
          minLength: Iure distinctio rerum provident iure eligendi facilis.
        modifiable: false
        name: ivj
        options:
        - "true"
        - "false"
        required: false
        resourceId: r-12345678
        serviceId: s-12345678
        type: Boolean|Float64|String|Resource|Secret|Password
      properties:
        defaultValue:
          description: Default value to use for an optional input parameter represented
            as a string
          example: "true"
          type: string
        dependentResourceId:
          description: ID of a resource
          example: Voluptas iure ut.
          type: string
        description:
          description: A brief description of the input parameter
          example: Dolor ab eos qui vel.
          type: string
        hasOptions:
          default: false
          description: Marks the input parameter to be selectable from a list of values
          example: true
          type: boolean
        id:
          description: ID of an Input Parameter
          example: Dolor culpa.
          type: string
        isList:
          default: false
          description: Marks the input parameter as a list of values
          example: false
          type: boolean
        key:
          description: Key of the input parameter
          example: b
          minLength: 1
          type: string
        labeledOptions:
          additionalProperties:
            example: Id aspernatur quibusdam enim.
            type: string
          description: "A map for labeled options. The key is the label and the value\
            \ is the option. When the option is selected, the label will be displayed\
            \ to the end customer."
          example:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          type: object
        limits:
          $ref: '#/components/schemas/Limits'
        modifiable:
          description: Marks the input parameter as immutable
          example: false
          type: boolean
        name:
          description: External name for the input parameter
          example: ij
          minLength: 1
          type: string
        options:
          description: A list of options to restrict the value of the input parameter
            to (represented as a string)
          example:
          - "true"
          - "false"
          items:
            example: Asperiores neque fuga doloribus.
            type: string
          type: array
        required:
          description: Enforces the input parameter as a required parameter
          example: false
          type: boolean
        resourceId:
          description: ID of a resource
          example: Minima quo dignissimos tempora.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        type:
          description: Type of the variable encoding the value
          example: Boolean|Float64|String|Resource|Secret|Password
          type: string
      required:
      - description
      - id
      - isList
      - key
      - modifiable
      - name
      - required
      - resourceId
      - serviceId
      - type
      type: object
    DescribeLimitRequest:
      example:
        family: COMPUTE_INFRA
        key: MAX_VIRTUAL_CORES_PER_RESOURCE
        token: i
      properties:
        family:
          description: The limit family
          example: SERVICE
          type: string
        key:
          description: Unique key to identify the limit
          example: MAX_VIRTUAL_CORES_PER_RESOURCE
          type: string
        token:
          description: JWT token used to perform authorization
          example: ipx
          minLength: 1
          type: string
      required:
      - family
      - key
      - token
      type: object
    DescribeLimitResult:
      example:
        description: A premium limit
        family: COMPUTE_INFRA
        key: MAX_VIRTUAL_CORES_PER_RESOURCE
        modifiable: true
        name: Premium Tier
        value: 4
      properties:
        description:
          description: A brief description of the limit
          example: A premium limit
          type: string
        family:
          description: The limit family
          example: SERVICE
          type: string
        key:
          description: Unique key to identify the limit
          example: MAX_VIRTUAL_CORES_PER_RESOURCE
          type: string
        modifiable:
          description: Whether the limit can be modified
          example: true
          type: boolean
        name:
          description: Name of the limit
          example: Premium Tier
          type: string
        value:
          description: Value of the limit being enforced
          example: 4
          format: int64
          type: integer
      required:
      - description
      - family
      - key
      - modifiable
      - name
      - value
      type: object
    DescribeNetworkConfigRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Debitis ut.
        id: nc-12345678
        serviceId: s-12345678
        token: "1"
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Sunt qui ad vero rerum magni non.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Sed ut impedit error qui laudantium consectetur.
          type: string
        id:
          description: ID of a Network Config
          example: Quos et minima pariatur dolores officia aut.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: fkv
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeNetworkConfigResult:
      example:
        description: A multi-zone HA network config
        endpointPerReplica: true
        id: nc-12345678
        infraConfigIDs:
        - ic-12345678
        - ic-abcdefgh
        internal: true
        name: Multi-zone
        openPorts:
        - 1299
        - 3306
        privateNetworkingConfiguration:
          privateLinkConfiguration:
            awsPrivateLinkConfigurations:
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
        publicNetworkingConfiguration:
          enableClusterLoadBalancer: true
          enableNodeLoadBalancer: true
        serviceId: s-12345678
        stableEgressIP: true
        tlsTerminationPort: 443
        zoneConfiguration: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
      properties:
        description:
          description: A brief description of the network config
          example: A multi-zone HA network config
          type: string
        endpointPerReplica:
          description: Generates a DNS endpoint per-replica for this network config
          example: true
          type: boolean
        id:
          description: ID of a Network Config
          example: Nesciunt sunt eligendi aliquam.
          type: string
        infraConfigIDs:
          description: The list of infra config IDs associated with the compute config.
          example:
          - ic-12345678
          - ic-abcdefgh
          items:
            description: ID of an Infra Config
            example: Placeat deserunt.
            type: string
          type: array
        internal:
          description: Restrict access to this network config to the internal network
          example: true
          type: boolean
        name:
          description: Name of the network config
          example: Multi-zone
          type: string
        openPorts:
          description: Ports to map to the generated DNS endpoint
          example:
          - 1299
          - 3306
          items:
            example: 2558522008617781697
            format: int64
            type: integer
          type: array
        privateNetworkingConfiguration:
          $ref: '#/components/schemas/PrivateNetworkingConfiguration'
        publicNetworkingConfiguration:
          $ref: '#/components/schemas/PublicNetworkingConfiguration'
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        stableEgressIP:
          description: Create an external node load balancer per node rather than
            expose the node ip directly
          example: true
          type: boolean
        tlsTerminationPort:
          description: The port that hosts the reverse proxy for TLS termination
          example: 443
          format: int64
          type: integer
        zoneConfiguration:
          description: The preferred type of zonal availability for this resource
            and the specific zone(s) to deploy in
          example: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
          type: string
      required:
      - description
      - endpointPerReplica
      - id
      - internal
      - name
      - openPorts
      - serviceId
      - stableEgressIP
      - zoneConfiguration
      type: object
    DescribeNetworkRequest:
      example:
        id: n-12345678
        serviceId: s-12345678
        token: s0
      properties:
        id:
          description: ID of a Network
          example: Sit iusto.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "5"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeNetworkResult:
      example:
        cidr: 10.0.0.0/16
        id: n-12345678
        networkConfigId: nc-12345678
        serviceId: s-12345678
        type: PUBLIC
        vunitId: vu-12345678
      properties:
        cidr:
          description: CIDR block for the network
          example: 10.0.0.0/16
          type: string
        id:
          description: ID of a Network
          example: Aut provident est necessitatibus.
          type: string
        networkConfigId:
          description: ID of a Network Config
          example: Quas placeat ut esse similique.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        type:
          description: The type of network
          example: PUBLIC
          type: string
        vunitId:
          description: ID of a VUnit
          example: Aut optio sint.
          type: string
      type: object
    DescribeOutputParameterRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Eum commodi est corporis.
        id: op-12345678
        serviceId: s-12345678
        token: s
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Recusandae sit et.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Qui doloremque.
          type: string
        id:
          description: ID of an Output Parameter
          example: Recusandae temporibus est sit repudiandae nemo.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: e
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeOutputParameterResult:
      example:
        description: Username of the user created in the target system
        id: op-12345678
        key: username
        name: Username
        resourceId: r-12345678
        serviceId: s-12345678
        value: johndoe
        valueRef: $var.username
        valueType: Boolean|Float64|String|Secret|Password
      properties:
        description:
          description: Description of the output variable being exported
          example: Username of the user created in the target system
          minLength: 1
          type: string
        id:
          description: ID of an Output Parameter
          example: Aperiam ut.
          type: string
        key:
          description: Key of the output variable being exported
          example: username
          minLength: 1
          type: string
        name:
          description: External name of the output variable being exported
          example: Username
          minLength: 1
          type: string
        resourceId:
          description: ID of a resource
          example: Est ut quisquam voluptatem a corrupti.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        value:
          description: Value of the output variable being exported
          example: johndoe
          minLength: 1
          type: string
        valueRef:
          description: Reference to an input variable that will be used to set the
            value of the output variable being exported
          example: $var.username
          type: string
        valueType:
          description: Type of the variable encoding the value
          example: Boolean|Float64|String|Secret|Password
          type: string
      required:
      - description
      - id
      - key
      - name
      - resourceId
      - serviceId
      type: object
    DescribePendingChangesRequest:
      example:
        id: sa-12345678
        productTierId: pt-12345678
        serviceId: s-12345678
        token: x
      properties:
        id:
          description: ID of a Service API
          example: Veritatis qui placeat.
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Ea aliquid magni quaerat omnis rem.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: r7r
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribePendingChangesResult:
      example:
        id: sa-12345678
        resourceChangeSets:
          Dolores sit aut repellendus eveniet recusandae fugit.:
            categorizedResourceChanges:
              Deserunt et sed.:
                changes:
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                status: PENDING_UPDATE
            imageConfigChanges:
              changeState: PENDING_NEW
              imageConfigId: imgc-12345678
              imageName: mysql
            infraConfigChanges:
              changeState: PENDING_NEW
              infraConfigId: ic-12345678
              name: MySQL Writer Infra Config
            overallResourceStatus: PENDING_UPDATE
            productTierFeatureChanges: PENDING_UPDATE
            resourceChanges: PENDING_DELETE
            resourceName: Voluptas est dolorem.
        serviceId: s-12345678
      properties:
        id:
          description: ID of a Service API
          example: Ad mollitia laudantium et voluptate alias.
          type: string
        resourceChangeSets:
          additionalProperties: true
          description: The difference for the service API configuration per resource
          example:
            Dolores sit aut repellendus eveniet recusandae fugit.:
              categorizedResourceChanges:
                Deserunt et sed.:
                  changes:
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  status: PENDING_UPDATE
              imageConfigChanges:
                changeState: PENDING_NEW
                imageConfigId: imgc-12345678
                imageName: mysql
              infraConfigChanges:
                changeState: PENDING_NEW
                infraConfigId: ic-12345678
                name: MySQL Writer Infra Config
              overallResourceStatus: PENDING_UPDATE
              productTierFeatureChanges: PENDING_UPDATE
              resourceChanges: PENDING_DELETE
              resourceName: Voluptas est dolorem.
          type: object
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - id
      - resourceChangeSets
      - serviceId
      type: object
    DescribePipelineRequest:
      example:
        id: p-12345678
        serviceId: s-12345678
        token: bcy
      properties:
        id:
          description: ID of a Pipeline
          example: Veniam nihil aspernatur.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: kxk
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribePipelineResult:
      example:
        description: MySQL SaaS promotion pipeline
        id: p-12345678
        name: my-pipeline
        serviceEnvironmentSequence:
        - se-12345678
        - se-23456789
        serviceId: s-12345678
      properties:
        description:
          description: Description of the pipeline
          example: MySQL SaaS promotion pipeline
          type: string
        id:
          description: ID of a Pipeline
          example: Placeat maxime asperiores molestias error.
          type: string
        name:
          description: Name of the pipeline
          example: my-pipeline
          type: string
        serviceEnvironmentSequence:
          description: Sequence of service environments to be deployed in the pipeline
          example:
          - se-12345678
          - se-23456789
          items:
            description: ID of a Service Environment
            example: se-123456
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      type: object
    DescribePlanRequest:
      example:
        token: g2
      properties:
        token:
          description: JWT token used to perform authorization
          example: "5"
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribePlanResult:
      example:
        modifiedAt: 2023-01-01T00:00:00Z
        paymentConfigured: true
        paymentInfoPortalURL: https://billing.stripe.com/p/session/abc123
        planCoreHourCost: 0.05
        planDescription: The starter plan is priced at 'X' units
        planFrequency: MONTHLY
        planMonthlyCost: 49
        planName: STARTER
        startDate: 2023-01-01
      properties:
        modifiedAt:
          description: The time the plan was last modified
          example: 2023-01-01T00:00:00Z
          type: string
        paymentConfigured:
          description: Whether the customer has configured their payment information.
          example: true
          type: boolean
        paymentInfoPortalURL:
          description: The URL from Stripe to configure payment information
          example: https://billing.stripe.com/p/session/abc123
          type: string
        planCoreHourCost:
          description: The cost per core hour of this plan
          example: 0.05
          format: double
          type: number
        planDescription:
          description: The description of the plan
          example: The starter plan is priced at 'X' units
          type: string
        planFrequency:
          description: This parameter tells you if the plan is charged monthly or
            yearly
          example: MONTHLY
          type: string
        planMonthlyCost:
          description: The minimum monthly cost of this plan
          example: 49
          format: double
          type: number
        planName:
          description: This parameter is used to select the appropriate Product Plan
          example: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
          type: string
        startDate:
          description: The date that the plan starts
          example: 2023-01-01
          type: string
      required:
      - planName
      type: object
    DescribeProductTierRequest:
      example:
        id: pt-12345678
        serviceId: s-12345678
        token: ig
        version: "3.0"
      properties:
        id:
          description: ID of a Product Tier
          example: Quod libero impedit aspernatur possimus mollitia.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: jp
          minLength: 1
          type: string
        version:
          description: The version number for the specific version set
          example: "3.0"
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeProductTierResult:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        apiGroups:
          r-12345678: v1
          r-23456789: v2
          r-34567890: v3
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        billingProductID: abc123
        cloudProvidersConfigReadiness:
          aws:
            resourceA: missing terraform configuration
            resourceB: missing cloudformation configuration
        description: A premium product tier
        documentation: Any documentation
        enabledFeatures:
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        exportUsageMetering: true
        exportUsageMeteringConfig:
          GCS:
            GCSBucketName: my_billing_bucket_name
          S3:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
        features:
          LOGS: true
          METRICS: false
        gcpRegions:
        - us-central1
        id: pt-12345678
        isDisabled: false
        key: premium
        maxNumberOfInstances: 5
        name: Premium
        planDescription: A premium plan
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        pricing:
          price1: value1
        serviceId: s-12345678
        serviceModelId: sm-12345678
        support: Any support
        tierType: OMNISTRATE_DEDICATED_TENANCY
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        apiGroups:
          additionalProperties: true
          description: The resources that belong to this service API bundle and their
            active versions
          example:
            r-12345678: v1
            r-23456789: v2
            r-34567890: v3
          type: object
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Quam facere quia eaque sunt sed.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this product tier is available on
          example:
          - northcentralus
          items:
            example: Error ut et quas.
            type: string
          type: array
        billingProductID:
          description: Optional billing product ID for tax purposes
          example: abc123
          type: string
        cloudProvidersConfigReadiness:
          additionalProperties: true
          description: The readiness of the cloud providers configurations
          example:
            aws:
              resourceA: missing terraform configuration
              resourceB: missing cloudformation configuration
          type: object
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        enabledFeatures:
          description: "The features that are enabled for this product tier, including\
            \ scope details and configuration"
          example:
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          items:
            $ref: '#/components/schemas/ProductTierFeatureDetail'
          type: array
        exportUsageMetering:
          description: Export usage metering data
          example: true
          type: boolean
        exportUsageMeteringConfig:
          additionalProperties: true
          description: Export usage metering data configuration
          example:
            GCS:
              GCSBucketName: my_billing_bucket_name
            S3:
              S3BucketArn: arn:aws:s3:::my_billing_bucket_name
          type: object
        features:
          additionalProperties: true
          description: The features that are enabled / disabled for this product tier
          example:
            LOGS: true
            METRICS: false
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Praesentium sint veritatis corporis impedit.
            type: string
          type: array
        id:
          description: ID of a Product Tier
          example: Minima dolorem rerum quos.
          type: string
        isDisabled:
          description: Flag to indicate if the product tier is disabled.
          example: false
          type: boolean
        key:
          description: Unique Key of the product tier
          example: premium
          type: string
        maxNumberOfInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricePerUnit:
          additionalProperties: true
          description: Price per unit.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        pricing:
          description: Pricing
          example:
            price1: value1
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Omnis praesentium sunt qui voluptate nihil.
          type: string
        support:
          description: Support
          example: Any support
          type: string
        tierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
      required:
      - description
      - documentation
      - id
      - isDisabled
      - key
      - name
      - planDescription
      - pricing
      - serviceId
      - serviceModelId
      - support
      - tierType
      type: object
    DescribeRegionRequest:
      example:
        id: region-12345678
        token: 0lb
      properties:
        id:
          description: ID of a Region
          example: Qui dicta ut autem provident corporis.
          type: string
        token:
          description: JWT token used to perform authorization
          example: i6j
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeRegionResult:
      example:
        cloudProviderId: infra-12345678
        cloudProviderName: aws
        code: us-east-1
        description: US East (N. Virginia)
        id: region-12345678
      properties:
        cloudProviderId:
          description: ID of an CloudProvider
          example: Est aliquam beatae.
          type: string
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        code:
          description: Cloud-provider native region code
          example: us-east-1
          minLength: 1
          type: string
        description:
          description: Description of the Region
          example: US East (N. Virginia)
          minLength: 1
          type: string
        id:
          description: ID of a Region
          example: Quibusdam perspiciatis ea.
          type: string
      required:
      - cloudProviderId
      - cloudProviderName
      - code
      - description
      - id
      type: object
    DescribeResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: "4"
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Eos eaque et.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: "y"
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    DescribeResourceInstanceResult:
      example:
        active: true
        autoscalingEnabled: true
        awsAccountID: "123456789012"
        azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
        backupStatus:
          backupPeriodInHours: 2
          backupRetentionInDays: 7
          earliestRestoreTime: 2021-09-01T00:00:00Z
          lastBackupTime: 2021-09-01T00:00:00Z
        cloud_provider: aws
        created_at: 2023-01-10T00:00:00Z
        createdByUserId: user-12345678
        createdByUserName: John Doe
        currentReplicas: "2"
        customNetworkDetail:
          cidr: 10.177.0.0/16
          id: n-12345678
          name: Prod us-east-1
        detailedNetworkTopology:
          r-abcd1234:
            allowedIPRanges:
            - 0.0.0.0/0
            clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            clusterPorts:
            - 3306
            isJob: false
            jobMetrics:
            - additionalData:
                exitCode: 0
                status: Succeeded
              endTime: 2023-01-01T10:05:00Z
              metricType: cpu_core_seconds
              startTime: 2023-01-01T10:00:00Z
              value: 120.5
            - additionalData:
                peakMemoryUsage: 512MB
              endTime: 2023-01-01T10:05:00Z
              metricType: memory_mb_seconds
              startTime: 2023-01-01T10:00:00Z
              value: 2560
            main: true
            networkingType: PUBLIC
            nodes:
            - availabilityZone: us-east-2a
              endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              healthStatus: healthy
              id: primary-0
              ports:
              - 3306
              status: RUNNING
            privateNetworkCIDR: 10.0.0.2/24
            privateNetworkID: n-1234abcd
            publiclyAccessible: true
            resourceKey: primary
            resourceName: Primary MySQL Instance
        externalPayerId: external-payer-id-1234
        gcpProjectID: my-project
        highAvailability: true
        id: instance-abcd1234
        instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
        kubernetesDashboardEndpoint:
          dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
          deploymentCellID: hc-12345678
        last_modified_at: 2023-01-20T00:00:00Z
        maintenanceTasks:
          backups:
          - backup_id: bk-12345678
          upgrade_paths:
          - upgrade_path_id: up-9876543
            upgrade_path_instance_status: PENDING
            upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
            upgrade_path_status: IN_PROGRESS
          - upgrade_path_id: up-12345548
            upgrade_path_instance_status: PENDING
            upgrade_path_released_at: 2023-01-01T09:00:00Z
            upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
            upgrade_path_status: SCHEDULED
        maxReplicas: "1"
        minReplicas: "1"
        network_type: PUBLIC
        productTierFeatures:
          LOGS:
            auth:
              password: px3c4d5f6g7h8i
              username: abcd1234
            enabled: true
            websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
          METRICS:
            enabled: false
        region: us-east-1
        resourceID: r-abcd1234
        result_params:
          param1: value1
          param2: value2
        serverlessEnabled: true
        status: RUNNING
        subscriptionId: sub-abcd1234
        subscriptionLicense:
          certificateBase64: public-cert
          expirationDate: 2024-01-01T10:00:00Z
          licenseBase64: license-file
        subscriptionStatus: ACTIVE
      properties:
        active:
          description: True if this resource instance has associated infrastructure
            deployed
          example: true
          type: boolean
        autoscalingEnabled:
          description: Whether the instance has autoscaling enabled
          example: true
          type: boolean
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 0fa05079-dd73-4b88-babc-05537817604a
          type: string
        backupStatus:
          $ref: '#/components/schemas/BackupStatus'
        cloud_provider:
          description: The cloud provider name
          example: aws
          type: string
        created_at:
          description: The instance creation time
          example: 2023-01-10T00:00:00Z
          type: string
        createdByUserId:
          description: ID of a User
          example: Quis fugit ducimus.
          type: string
        createdByUserName:
          description: The name of the user that created the resource instance
          example: John Doe
          type: string
        currentReplicas:
          description: The current number of replicas
          example: "2"
          type: string
        customNetworkDetail:
          $ref: '#/components/schemas/CustomNetworkResourceDetail'
        detailedNetworkTopology:
          additionalProperties: true
          description: The detailed network topology
          example:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              isJob: false
              jobMetrics:
              - additionalData:
                  exitCode: 0
                  status: Succeeded
                endTime: 2023-01-01T10:05:00Z
                metricType: cpu_core_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 120.5
              - additionalData:
                  peakMemoryUsage: 512MB
                endTime: 2023-01-01T10:05:00Z
                metricType: memory_mb_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 2560
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: primary
              resourceName: Primary MySQL Instance
          type: object
        externalPayerId:
          description: The external payer id to record which customer should pay for
            this resource instance
          example: external-payer-id-1234
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        highAvailability:
          description: Whether the instance is High Availability
          example: true
          type: boolean
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        instanceLoadStatus:
          description: The load status of a pod
          example: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          type: string
        kubernetesDashboardEndpoint:
          $ref: '#/components/schemas/KubernetesDashboardEndpoint'
        last_modified_at:
          description: The instance update time
          example: 2023-01-20T00:00:00Z
          type: string
        maintenanceTasks:
          additionalProperties: true
          description: "Pending actions or maintenance tasks for the resource instance,\
            \ with action type as key and reference key as value."
          example:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          type: object
        maxReplicas:
          description: The maximum number of replicas
          example: "1"
          type: string
        minReplicas:
          description: The minimum number of replicas
          example: "1"
          type: string
        network_type:
          description: The network type
          example: PUBLIC
          type: string
        productTierFeatures:
          additionalProperties: true
          description: The product tier features
          example:
            LOGS:
              auth:
                password: px3c4d5f6g7h8i
                username: abcd1234
              enabled: true
              websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
            METRICS:
              enabled: false
          type: object
        region:
          description: The region code
          example: us-east-1
          type: string
        resourceID:
          description: ID of a resource
          example: Ipsa ut.
          type: string
        result_params:
          description: Custom result parameters
          example:
            param1: value1
            param2: value2
        serverlessEnabled:
          description: Whether the instance has serverless enabled
          example: true
          type: boolean
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        subscriptionId:
          description: Subscription ID
          example: sub-abcd1234
          type: string
        subscriptionLicense:
          $ref: '#/components/schemas/SubscriptionLicense'
        subscriptionStatus:
          description: Subscription Status
          example: ACTIVE|SUSPENDED|TERMINATED|CANCELLED
          type: string
      type: object
    DescribeResourceMetricsConfigRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Eos corporis vel voluptatem aut molestiae ut.
        id: r-12345678
        serviceId: s-12345678
        token: f6k
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Ut sed expedita consequatur consequatur odio placeat.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Occaecati quis.
          type: string
        id:
          description: ID of a resource
          example: Ea animi modi.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: t
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeResourceRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Voluptates voluptas illo.
        id: r-12345678
        serviceId: s-12345678
        token: bs
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Minus saepe placeat consequatur.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Culpa nam sunt aliquam nemo.
          type: string
        id:
          description: ID of a resource
          example: Enim sed quisquam voluptatum et quia quod.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "2"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeResourceResult:
      example:
        actionHooks:
        - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
          scope: CLUSTER
          type: INIT
        additionalSecurityContext:
          AddCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          DropCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          SupplementalGroupIDs:
          - 1001
          - 999
        backupConfiguration:
          backupPeriodInHours: 24
          backupRetentionInDays: 7
        blobStorageConfiguration:
          GCSConfiguration: {}
          S3Configuration: {}
        capabilities:
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        customLabels:
          key: value
        customSysCTLs:
          net.ipv4.tcp_syncookies: "1"
        customULimits:
        - ULimitsName: NoProc
          ULimitsType: Soft
          ULimitsValue: 1000
        - ULimitsName: NoFile
          ULimitsType: Hard
          ULimitsValue: 2048
        dependencies:
        - parameterMap:
            clusterId: writerId
            clusterOrg: userDatabase
          resourceId: r-12345678
        - parameterMap:
            clusterId: readerId
            clusterOrg: userDatabase
          resourceId: r-abcdef12
        description: An resource to manage a hosted public SaaS offering of a multi-writer
          MySQL service
        environmentVariables:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        fileSystemConfiguration:
          EFSFileSystemConfiguration:
            PerformanceMode: generalPurpose|maxIO
            ProvisionedThroughputInMibps: 125
            ThroughputMode: provisioned|bursting|elastic
        helmChartConfiguration:
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          password: my-password
          runtimeConfiguration:
            disableHooks: true
            recreate: true
            resetThenReuseValues: true
            resetValues: true
            reuseValues: true
            skipCRDs: true
            timeoutNanos: 1000000000
            upgradeCRDs: true
            wait: true
            waitForJobs: true
          username: my-user
        id: r-12345678
        imageConfigId: imgc-12345678
        infraConfigId: ic-12345678
        internal: false
        isDeprecated: true
        jobConfig:
          activeDeadlineSeconds: 300
          backoffLimit: 5
        key: galera
        kustomizeConfiguration:
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          gitConfiguration:
            accessToken: my-token
            commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
            referenceName: tags/v1.0.0
            repositoryUrl: https://github.com/username/myrepo
            userName: my-user
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          kustomizePath: /kustomize
        l4LoadBalancerConfiguration:
          ingressPortConfiguration:
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8080
            ingressPort: 1234
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8081
            ingressPort: 5678
          - associatedResourceIDs:
            - r-vwxybz12
            - r-poij122v
            backendPort: 8082
            ingressPort: 9012
        l7LoadBalancerConfiguration:
          paths:
          - associatedResourceID: r-12345678
            path: /path
            port: 8080
        name: Galera
        operatorCRDConfiguration:
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          outputParameters:
            expiresAt: $out.status.notAfter
            issuerName: letsencrypt-prod
          readinessConditions:
            $out.status.conditions[?(@.type=='Ready')].status: true
          supplementalFiles:
          - |
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
          - |-
            apiVersion: ingress.nginx.io/v1
            kind: IngressClass
            metadata:
              name: nginx
            spec:
              controller: nginx.org/ingress-controller
          template: |-
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
                email: test@example.com
                privateKeySecretRef:
                  name: letsencrypt-prod
                solvers:
                - http01:
                    ingress:
                      class: nginx
        productTierId: pt-12345678
        proxyType: PortsBasedProxy
        resourceType: Generic
        serviceId: s-12345678
        terraformConfigurations:
          aws:
            gitConfiguration:
              referenceName: ref
              repositoryUrl: gitUrl
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
      properties:
        actionHooks:
          description: The action hooks that this resource supports
          example:
          - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
            scope: CLUSTER
            type: INIT
          items:
            $ref: '#/components/schemas/ActionHook'
          type: array
        additionalSecurityContext:
          $ref: '#/components/schemas/AdditionalSecurityContext'
        backupConfiguration:
          $ref: '#/components/schemas/BackupConfiguration'
        blobStorageConfiguration:
          $ref: '#/components/schemas/BlobStorageConfiguration'
        capabilities:
          description: The capabilities enabled for the resource
          example:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          items:
            $ref: '#/components/schemas/ResourceCapability'
          type: array
        customLabels:
          additionalProperties:
            example: Dicta veritatis facere rerum.
            type: string
          description: Custom labels for the resource
          example:
            key: value
          type: object
        customSysCTLs:
          additionalProperties:
            example: Nam eos quod quia.
            type: string
          description: Custom sysctl settings for the resource
          example:
            net.ipv4.tcp_syncookies: "1"
          type: object
        customULimits:
          description: Custom ulimits for the resource
          example:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          items:
            $ref: '#/components/schemas/CustomULimits'
          type: array
        dependencies:
          example:
          - parameterMap:
              clusterId: writerId
              clusterOrg: userDatabase
            resourceId: r-12345678
          - parameterMap:
              clusterId: readerId
              clusterOrg: userDatabase
            resourceId: r-abcdef12
          items:
            $ref: '#/components/schemas/ResourceDependency'
          type: array
        description:
          description: A brief description of the resource
          example: An resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          type: string
        environmentVariables:
          description: The environment variables that this resource requires
          example:
          - name: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        fileSystemConfiguration:
          $ref: '#/components/schemas/FileSystemConfiguration'
        helmChartConfiguration:
          $ref: '#/components/schemas/HelmChartConfiguration'
        id:
          description: ID of a resource
          example: Pariatur pariatur.
          type: string
        imageConfigId:
          description: ID of an Image Config
          example: Consectetur molestias fugiat.
          type: string
        infraConfigId:
          description: ID of an Infra Config
          example: Reiciendis consequatur voluptas aspernatur quam itaque sapiente.
          type: string
        internal:
          default: false
          description: Whether this resource is internal or not
          example: false
          type: boolean
        isDeprecated:
          default: false
          description: Whether this resource is deprecated or not
          example: false
          type: boolean
        jobConfig:
          $ref: '#/components/schemas/JobConfig'
        key:
          description: The key of the resource
          example: galera
          type: string
        kustomizeConfiguration:
          $ref: '#/components/schemas/KustomizeConfiguration'
        l4LoadBalancerConfiguration:
          $ref: '#/components/schemas/L4LoadBalancerConfiguration'
        l7LoadBalancerConfiguration:
          $ref: '#/components/schemas/L7LoadBalancerConfiguration'
        name:
          description: Name of the resource
          example: Galera
          type: string
        operatorCRDConfiguration:
          $ref: '#/components/schemas/OperatorCRDConfiguration'
        productTierId:
          description: ID of a Product Tier
          example: Hic aut.
          type: string
        proxyType:
          description: The proxy type of instance
          example: PortsBasedProxy
          type: string
        resourceType:
          description: The type of the resource
          example: '|Generic|PortsBasedProxy|L4LoadBalancer|L7LoadBalancer|FileSystem|OperatorCRD|HelmChart|Kustomize'
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        terraformConfigurations:
          additionalProperties: true
          description: The Terraform configurations for cloud providers
          example:
            aws:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          type: object
      required:
      - description
      - id
      - internal
      - isDeprecated
      - key
      - name
      - productTierId
      - resourceType
      - serviceId
      type: object
    DescribeServiceAPIRequest:
      example:
        id: sa-12345678
        serviceId: s-12345678
        token: wrh
      properties:
        id:
          description: ID of a Service API
          example: Sit voluptas tempora reprehenderit et veritatis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: i
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeServiceAPIResult:
      example:
        apiVersion: v1
        deploymentConfigId: dc-12345678
        description: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
          for high availability
        id: sa-12345678
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        serviceName: mysql
      properties:
        apiVersion:
          description: The external version of the API
          example: v1
          type: string
        deploymentConfigId:
          description: ID of a Deployment Config
          example: Sit id sit ullam ullam et sint.
          type: string
        description:
          description: A brief description of the service API bundle
          example: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
            for high availability
          type: string
        id:
          description: ID of a Service API
          example: Rerum velit molestiae et.
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceName:
          description: The name of the service
          example: mysql
          type: string
      required:
      - apiVersion
      - deploymentConfigId
      - description
      - id
      - serviceEnvironmentId
      - serviceId
      - serviceName
      type: object
    DescribeServiceEnvironmentRequest:
      example:
        id: se-12345678
        serviceId: s-12345678
        token: cn
      properties:
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: q
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeServiceEnvironmentResult:
      example:
        autoApproveSubscription: false
        deploymentConfigId: dc-12345678
        description: The production environment for the MySQL multi-writer service
        id: se-12345678
        key: production
        name: Production
        roleType: admin
        saasPortalStatus: READY
        saasPortalUrl: https://saas-portal.example.com
        serviceAuthPublicKey: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        serviceId: s-12345678
        sourceEnvironmentId: se-12345678
        type: DEV
        visibility: PUBLIC
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        deploymentConfigId:
          description: ID of a Deployment Config
          example: Nisi molestiae molestiae sunt quam ipsam.
          type: string
        description:
          description: A brief description of the service environment
          example: The production environment for the MySQL multi-writer service
          type: string
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        key:
          description: Unique Key of the Service Environment
          example: production
          type: string
        name:
          description: Name of the Service Environment
          example: Production
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        saasPortalStatus:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        saasPortalUrl:
          description: The URL of the SaaS portal for this environment type
          example: https://saas-portal.example.com
          type: string
        serviceAuthPublicKey:
          description: PEM-encoded Public key part of the key used to sign the JWT
            tokens for the service control plane APIs
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        type:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - deploymentConfigId
      - description
      - id
      - key
      - name
      - serviceId
      - type
      - visibility
      type: object
    DescribeServiceModelRequest:
      example:
        id: sm-12345678
        serviceId: s-12345678
        token: s0
      properties:
        id:
          description: ID of a Service Model
          example: Voluptatem id et enim delectus dignissimos.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: z
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeServiceModelResult:
      example:
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        activeAccountConfigIds:
          aws: ac-12345678
          gcp: ac-23456789
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        features:
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        id: sm-12345678
        key: mysql-multi-writer-service-hosted-model
        modelType: CUSTOMER_HOSTED
        name: MySQL multi-writer service hosted model
        productTiers:
        - pt-12345678
        - pt-87654321
        serviceApiId: sa-12345678
        serviceId: s-12345678
      properties:
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            description: ID of an Account Config
            example: Et perspiciatis nostrum adipisci exercitationem.
            type: string
          type: array
        activeAccountConfigIds:
          additionalProperties: true
          description: The active infrastructure account configuration IDs per cloud
            provider
          example:
            aws: ac-12345678
            gcp: ac-23456789
          type: object
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        features:
          description: Enabled service model features
          example:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          items:
            $ref: '#/components/schemas/ServiceModelFeatureDetail'
          type: array
        id:
          description: ID of a Service Model
          example: Qui sed ut architecto beatae eos.
          type: string
        key:
          description: The unique key for this service model
          example: mysql-multi-writer-service-hosted-model
          type: string
        modelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        productTiers:
          description: The product tiers associated with this service model
          example:
          - pt-12345678
          - pt-87654321
          items:
            description: ID of a Product Tier
            example: Dolores quae.
            type: string
          type: array
        serviceApiId:
          description: ID of a Service API
          example: Esse est et quis excepturi.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - description
      - id
      - key
      - modelType
      - name
      - serviceApiId
      - serviceId
      type: object
    DescribeServiceOfferingRequest:
      example:
        environmentType: DEV
        serviceId: s-12345678
        token: l5y
        visibility: PRIVATE
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: q5h
          minLength: 1
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - serviceId
      - token
      type: object
    DescribeServiceOfferingResourceRequest:
      example:
        instanceId: instance-12345678
        resourceId: r-12345678
        serviceId: s-12345678
        token: u
      properties:
        instanceId:
          default: none
          description: The instance ID
          example: instance-12345678
          type: string
        resourceId:
          description: ID of a resource
          example: Qui exercitationem omnis fugit eos.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "5"
          minLength: 1
          type: string
      required:
      - resourceId
      - serviceId
      - token
      type: object
    DescribeServiceOfferingResourceResult:
      example:
        apis:
        - inputParameters:
          - defaultValue: null
            description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            modifiable: true
            options: null
            required: true
            type: string
          - defaultValue: option1
            description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            modifiable: true
            options:
            - option1
            - option2
            required: true
            type: string
          outputParameters:
          - description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            type: string
          - description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            type: string
          verb: create
        - inputParameters:
          - defaultValue: null
            description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            modifiable: true
            options: null
            required: true
            type: string
          outputParameters:
          - description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            type: string
          - description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            type: string
          verb: describe
      properties:
        apis:
          description: The APIs
          example:
          - inputParameters:
            - defaultValue: null
              description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              modifiable: true
              options: null
              required: true
              type: string
            - defaultValue: option1
              description: The type of the server
              displayName: Server Type
              isList: false
              key: serverType
              modifiable: true
              options:
              - option1
              - option2
              required: true
              type: string
            outputParameters:
            - description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              type: string
            - description: The type of the server
              displayName: Server Type
              isList: false
              key: serverType
              type: string
            verb: create
          - inputParameters:
            - defaultValue: null
              description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              modifiable: true
              options: null
              required: true
              type: string
            outputParameters:
            - description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              type: string
            - description: The type of the server
              displayName: Server Type
              isList: false
              key: serverType
              type: string
            verb: describe
          items:
            $ref: '#/components/schemas/APIEntity'
          type: array
      type: object
    DescribeServiceOfferingResult:
      example:
        createdAt: 2019-01-01T00:00:00Z
        isDeprecated: false
        offerings:
        - allowCreatesWhenPaymentNotConfigured: true
          assets:
            cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
            cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
          maxNumberOfInstances: 4
          productTierName: Premium
          productTierURLKey: premium
          resourceParameters:
          - name: MySQL
            urlKey: mysql
          - name: Redis
            urlKey: redis
          serviceAPIID: sa-12345678
          serviceAPIVersion: v1
          serviceEnvironmentName: Production
          serviceEnvironmentURLKey: prod
          serviceEnvironmentVisibility: PRIVATE
          serviceModelName: Bring Your Own Account
          serviceModelURLKey: byoa
        - productTierName: Basic
          productTierURLKey: basic
          resourceParameters:
          - name: MySQL
            urlKey: mysql
          - name: Redis
            urlKey: redis
          serviceAPIID: sa-abcdefgh
          serviceAPIVersion: v1
          serviceEnvironmentName: Production
          serviceEnvironmentURLKey: prod
          serviceEnvironmentVisibility: PUBLIC
          serviceModelName: Hosted
          serviceModelURLKey: hosted
        serviceDescription: MySQL is a relational database
        serviceId: s-12345678
        serviceName: MySQL
        serviceOrgId: org-12345678
        serviceProviderId: sp-9zrg9W8Are
        serviceProviderName: "Omnistrate, Inc."
        serviceURLKey: mysql
      properties:
        createdAt:
          description: The time the service was created
          example: 2019-01-01T00:00:00Z
          type: string
        isDeprecated:
          default: false
          description: Whether the service offering is deprecated
          example: false
          type: boolean
        offerings:
          description: The service offerings
          example:
          - allowCreatesWhenPaymentNotConfigured: true
            assets:
              cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
              cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
            maxNumberOfInstances: 4
            productTierName: Premium
            productTierURLKey: premium
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-12345678
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PRIVATE
            serviceModelName: Bring Your Own Account
            serviceModelURLKey: byoa
          - productTierName: Basic
            productTierURLKey: basic
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-abcdefgh
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PUBLIC
            serviceModelName: Hosted
            serviceModelURLKey: hosted
          items:
            $ref: '#/components/schemas/ServiceOffering'
          type: array
        serviceDescription:
          description: The service description
          example: MySQL is a relational database
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceName:
          description: The service name
          example: MySQL
          type: string
        serviceOrgId:
          description: ID of an Org
          example: Quia autem ut sed ipsum.
          type: string
        serviceProviderId:
          description: The id of the service provider
          example: sp-9zrg9W8Are
          type: string
        serviceProviderName:
          description: The name of the service provider
          example: "Omnistrate, Inc."
          type: string
        serviceURLKey:
          description: The service URL key
          example: mysql
          type: string
      required:
      - createdAt
      - isDeprecated
      - offerings
      - serviceDescription
      - serviceId
      - serviceName
      - serviceOrgId
      - serviceProviderId
      - serviceProviderName
      - serviceURLKey
      type: object
    DescribeServiceRequest:
      example:
        id: s-12345678
        token: 9of
      properties:
        id:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ln
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeServiceResult:
      example:
        createdAt: 2019-01-01T00:00:00Z
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        id: s-12345678
        key: mysql
        name: MySQL multi-writer service
        roleType: admin
        serviceEnvironments:
        - id: se-12345678
          name: dev
          promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          saasPortalStatus: READY
          saasPortalUrl: https://saas-portal.example.com
          servicePlans:
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          sourceEnvironmentID: se-12345678
          sourceEnvironmentName: dev
          type: DEV
          visibility: private
        - id: se-12345678
          name: dev
          promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          saasPortalStatus: READY
          saasPortalUrl: https://saas-portal.example.com
          servicePlans:
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          sourceEnvironmentID: se-12345678
          sourceEnvironmentName: dev
          type: DEV
          visibility: private
        - id: se-12345678
          name: dev
          promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          saasPortalStatus: READY
          saasPortalUrl: https://saas-portal.example.com
          servicePlans:
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          sourceEnvironmentID: se-12345678
          sourceEnvironmentName: dev
          type: DEV
          visibility: private
        serviceLogoURL: Corrupti omnis.
        serviceProviderID: sp-12345678
        serviceProviderName: "Omnistrate, Inc."
      properties:
        createdAt:
          description: The time the service was created
          example: 2019-01-01T00:00:00Z
          type: string
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        id:
          description: ID of a Service
          example: s-123456
          type: string
        key:
          description: Unique key of the service
          example: mysql
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        serviceEnvironments:
          description: List of service environments
          example:
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          items:
            $ref: '#/components/schemas/ServiceEnvironment'
          type: array
        serviceLogoURL:
          description: The logo for the service
          example: Sit pariatur accusantium odit.
          type: string
        serviceProviderID:
          description: ID of a Service Provider
          example: Nobis eos.
          type: string
        serviceProviderName:
          description: The name of the service provider
          example: "Omnistrate, Inc."
          type: string
      required:
      - createdAt
      - description
      - id
      - key
      - name
      - serviceEnvironments
      - serviceProviderID
      - serviceProviderName
      type: object
    DescribeServicesOrchestrationRequest:
      example:
        id: so-12345678
        token: 76r
      properties:
        id:
          description: ID of a Services Orchestration
          example: Dignissimos qui sunt vitae non ea quod.
          type: string
        token:
          description: JWT token used to perform authorization
          example: "6"
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeServicesOrchestrationResult:
      example:
        ServicesTopology:
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Est in eum ut commodi harum.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Est in eum ut commodi harum.
        createdAt: 2021-01-01T00:00:00Z
        id: so-12345678
        orchestrationFailedReason: Invalid DSL
        resultParams:
          param1: value1
          param2: value2
        status: PENDING
        updatedAt: 2021-01-01T00:00:00Z
      properties:
        ServicesTopology:
          description: The services deployment details
          example:
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Est in eum ut commodi harum.
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Est in eum ut commodi harum.
          items:
            $ref: '#/components/schemas/ServiceDeploymentDetails'
          type: array
        createdAt:
          description: The time the services orchestration was created
          example: 2021-01-01T00:00:00Z
          type: string
        id:
          description: ID of a Services Orchestration
          example: Sapiente pariatur eos iste sed neque.
          type: string
        orchestrationFailedReason:
          description: The reason why the orchestration failed
          example: Invalid DSL
          type: string
        resultParams:
          description: Custom result parameters of the services orchestration
          example:
            param1: value1
            param2: value2
        status:
          description: The status of the services orchestration
          example: PENDING
          type: string
        updatedAt:
          description: The time the services orchestration was last updated
          example: 2021-01-01T00:00:00Z
          type: string
      required:
      - createdAt
      - id
      - status
      - updatedAt
      type: object
    DescribeStorageConfigRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Ut et.
        id: sc-12345678
        serviceId: s-12345678
        token: em3
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Eum ratione hic similique repellendus atque.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Suscipit et consequatur et id.
          type: string
        id:
          description: ID of a Storage Config
          example: Recusandae laborum.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 54i
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeStorageConfigResult:
      example:
        description: my-storage-config-description
        id: sc-12345678
        infraConfigIDs:
        - ic-12345678
        - ic-abcdefgh
        name: my-storage-config
        serviceId: s-12345678
        volumes:
          svc-12345678:
          - /data
          - /mnt/logs
          svc-23456789:
          - /config
      properties:
        description:
          description: Description of the storage config
          example: my-storage-config-description
          type: string
        id:
          description: ID of a Storage Config
          example: Odio aliquam qui.
          type: string
        infraConfigIDs:
          description: The list of infra config IDs associated with the compute config.
          example:
          - ic-12345678
          - ic-abcdefgh
          items:
            description: ID of an Infra Config
            example: Dolor debitis.
            type: string
          type: array
        name:
          description: Name of the storage config
          example: my-storage-config
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        volumes:
          additionalProperties: true
          description: The storage volume config IDs and the corresponding mount path
          example:
            svc-12345678:
            - /data
            - /mnt/logs
            svc-23456789:
            - /config
          type: object
      required:
      - description
      - id
      - name
      - serviceId
      - volumes
      type: object
    DescribeStorageVolumeConfigRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Voluptatem et similique quas.
        id: svc-12345678
        serviceId: s-12345678
        token: 6e2
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Earum illum recusandae mollitia tenetur id ut.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Et dolorum.
          type: string
        id:
          description: ID of a Storage Volume Config
          example: Omnis deserunt ut et ut illum.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: f
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeStorageVolumeConfigResult:
      example:
        cloudProviderName: aws
        clusterStorageType: S3|$var.storageType|AWS::EFS
        description: A storage volume set to store the MySQL data directory
        disableBackup: false
        id: svc-12345678
        instanceStorageIops: "7500"
        instanceStorageSizeGi: "128"
        instanceStorageThroughputMiBps: "128"
        instanceStorageType: $var.storageType
        name: MySQL Data Volume
        serviceId: s-12345678
        storageResourceID: r-12345678
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        clusterStorageType:
          description: The type of the fixed storage for the cluster
          example: S3|$var.storageType|AWS::EFS
          type: string
        description:
          description: A brief description of the context for the storage volume pool
          example: A storage volume set to store the MySQL data directory
          type: string
        disableBackup:
          description: Disable backup for the storage volume
          example: false
          type: boolean
        id:
          description: ID of a Storage Volume Config
          example: Dignissimos cumque tempore numquam.
          type: string
        instanceStorageIops:
          description: The IOPS provisioned for the configured instance storage type
          example: "7500"
          type: string
        instanceStorageSizeGi:
          description: The fixed storage size (in Gi) provisioned for the configured
            instance storage type
          example: "128"
          type: string
        instanceStorageThroughputMiBps:
          description: The throughput (in MiBps) provisioned for the configured instance
            storage type
          example: "128"
          type: string
        instanceStorageType:
          description: The type of the fixed storage for a compute instance
          example: $var.storageType
          type: string
        name:
          description: Name of the storage volume pool
          example: MySQL Data Volume
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        storageResourceID:
          description: The storage resource ID
          example: r-12345678
          type: string
      required:
      - description
      - id
      - name
      - serviceId
      type: object
    DescribeSubscriptionRequest:
      example:
        id: sub-12345678
        token: hqr
      properties:
        id:
          description: ID of a Subscription
          example: Quos id repellat.
          type: string
        token:
          description: JWT token used to perform authorization
          example: k79
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeSubscriptionRequestRequest:
      example:
        id: subr-12345678
        token: l7
      properties:
        id:
          description: ID of a Subscription Request
          example: Rerum ipsa.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 4mt
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeSubscriptionRequestResult:
      example:
        createdAt: 2019-01-01T00:00:00Z
        id: subr-12345678
        productTierId: pt-12345678
        productTierName: Omnistrate Multi Tenancy
        rootUserEmail: abc@gmail.com
        rootUserId: org-12345678
        rootUserName: John Doe
        serviceId: s-12345678
        serviceLogoURL: Sint doloribus rerum harum voluptates molestiae quidem.
        serviceName: MySQL multi-writer service
        status: PENDING
        updatedAt: 2019-01-01T00:00:00Z
        updatedByUserId: user-12345678
        updatedByUserName: John Doe
      properties:
        createdAt:
          description: The time that this subscription request was issued
          example: 2019-01-01T00:00:00Z
          type: string
        id:
          description: ID of a Subscription Request
          example: Est aliquam tenetur dolores animi consectetur praesentium.
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Ab dolor ipsa maiores.
          type: string
        productTierName:
          description: The name of the product tier
          example: Omnistrate Multi Tenancy
          type: string
        rootUserEmail:
          description: The email of the user that issued the subscription request
          example: abc@gmail.com
          type: string
        rootUserId:
          description: ID of a User
          example: Voluptatem dolorem debitis unde.
          type: string
        rootUserName:
          description: The name of the user that issued the subscription request
          example: John Doe
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Qui fuga neque.
          type: string
        serviceName:
          description: The name of the service
          example: MySQL multi-writer service
          type: string
        status:
          description: The status of the subscription request
          example: PENDING|APPROVED|DENIED|CANCELLED
          type: string
        updatedAt:
          description: The time that this subscription request was issued
          example: 2019-01-01T00:00:00Z
          type: string
        updatedByUserId:
          description: ID of a User
          example: Enim dolorem consequatur consectetur non quos.
          type: string
        updatedByUserName:
          description: The user that last updated the subscription request
          example: John Doe
          type: string
      required:
      - createdAt
      - id
      - productTierId
      - productTierName
      - rootUserEmail
      - rootUserId
      - rootUserName
      - serviceId
      - serviceName
      - status
      - updatedAt
      - updatedByUserId
      - updatedByUserName
      type: object
    DescribeSubscriptionResult:
      example:
        accountConfigIdentityId: org-12345678
        cloudProviderNames:
        - aws
        - gcp
        createdAt: 2019-01-01T00:00:00Z
        defaultSubscription: true
        id: sub-12345678
        productTierId: pt-12345678
        productTierName: Omnistrate Multi Tenancy
        roleType: root
        rootUserId: user-12345678
        serviceId: s-12345678
        serviceLogoURL: Possimus vel voluptas consequuntur officia aliquam.
        serviceName: MySQL multi-writer service
        serviceOrgId: org-12345678
        serviceOrgName: Omnistrate
        status: ACTIVE
        subscriptionOwnerName: John Doe
      properties:
        accountConfigIdentityId:
          description: ID of an Org
          example: Magnam cum quos.
          type: string
        cloudProviderNames:
          description: List of cloud provider names
          example:
          - aws
          - gcp
          items:
            example: Dolor veniam molestiae non labore fuga.
            type: string
          type: array
        createdAt:
          description: The time that this subscription was created
          example: 2019-01-01T00:00:00Z
          type: string
        defaultSubscription:
          description: Whether this is the default subscription for the user
          example: true
          type: boolean
        id:
          description: ID of a Subscription
          example: Ut fugit.
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Aliquam quam.
          type: string
        productTierName:
          description: The name of the product tier
          example: Omnistrate Multi Tenancy
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        rootUserId:
          description: ID of a User
          example: Nulla at voluptas harum blanditiis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Architecto qui fuga hic.
          type: string
        serviceName:
          description: The name of the service
          example: MySQL multi-writer service
          type: string
        serviceOrgId:
          description: ID of an Org
          example: Velit eveniet modi excepturi.
          type: string
        serviceOrgName:
          description: The name of the org that owns the service
          example: Omnistrate
          type: string
        status:
          description: Subscription Status
          example: ACTIVE|SUSPENDED|TERMINATED|CANCELLED
          type: string
        subscriptionOwnerName:
          description: The name of the subscription owner user
          example: John Doe
          type: string
      required:
      - accountConfigIdentityId
      - cloudProviderNames
      - createdAt
      - defaultSubscription
      - id
      - productTierId
      - productTierName
      - roleType
      - rootUserId
      - serviceId
      - serviceLogoURL
      - serviceName
      - serviceOrgId
      - serviceOrgName
      - status
      - subscriptionOwnerName
      type: object
    DescribeTierVersionSetRequest:
      example:
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: g
        version: "3.0"
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Consequatur quibusdam sapiente.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 7h
          minLength: 1
          type: string
        version:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
      required:
      - productTierId
      - serviceId
      - token
      - version
      type: object
    DescribeUpgradePathRequest:
      example:
        id: up-12345678
        serviceId: s-12345678
        token: "91"
      properties:
        id:
          description: ID of an Upgrade Path
          example: Expedita voluptas voluptas.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: lkl
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribeUpgradePathResult:
      example:
        description: An upgrade path migrating clusters from one LTS version to another
        id: up-12345678
        name: LTS upgrade path
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        sourceVersion: "567.0"
        targetVersion: "589.0"
      properties:
        description:
          description: A brief description of the upgrade path
          example: An upgrade path migrating clusters from one LTS version to another
          type: string
        id:
          description: ID of an Upgrade Path
          example: Eos est.
          type: string
        name:
          description: Name of the upgrade path
          example: LTS upgrade path
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceVersion:
          description: Version of the Entity to operate on
          example: "1.0"
          minLength: 1
          type: string
        targetVersion:
          description: Version of the Entity to operate on
          example: "1.0"
          minLength: 1
          type: string
      type: object
    DescribeUserRequest:
      example:
        token: 2b
      properties:
        token:
          description: JWT token used to perform authorization
          example: i4
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribeUserResult:
      example:
        address:
          addressLine1: 1234 Main St
          addressLine2: Apt 123
          addressLine3: Building 123
          city: San Francisco
          country: US
          state: CA
          zip: "94123"
        createdAt: 2023-01-10T00:00:00Z
        email: abc@gmail.com
        enabled: true
        id: user-abcd1234
        lastModifiedAt: 2023-01-20T00:00:00Z
        name: John Dae
        orgCookiePolicy: Temporibus natus delectus dolorem repellendus.
        orgDescription: ACME Inc.
        orgFavIconURL: Vel magnam.
        orgId: org-aKQ8G13QeR
        orgLogoURL: Corrupti veniam voluptatem iste enim.
        orgName: ACME
        orgPrivacyPolicy: Excepturi reiciendis ab.
        orgSupportEmail: support@example.com
        orgTermsOfUse: Corrupti incidunt.
        orgURL: something.acme
        planName: STARTER
        roleType: reader
        status: ACTIVE
      properties:
        address:
          $ref: '#/components/schemas/Address'
        createdAt:
          description: The user creation time
          example: 2023-01-10T00:00:00Z
          type: string
        email:
          description: The email of the user
          example: abc@gmail.com
          type: string
        enabled:
          description: Is the user enabled.
          example: true
          type: boolean
        id:
          description: The User ID
          example: user-abcd1234
          type: string
        lastModifiedAt:
          description: The user update time
          example: 2023-01-20T00:00:00Z
          type: string
        name:
          description: The name of the user
          example: John Dae
          type: string
        orgCookiePolicy:
          description: The cookie policy for the org that this user owns
          example: Dolore dolorem sapiente natus provident facilis.
          type: string
        orgDescription:
          description: The description of the org that this user owns
          example: ACME Inc.
          type: string
        orgFavIconURL:
          description: The favicon of the org that this user owns
          example: At nisi ad sed maxime nulla perspiciatis.
          type: string
        orgId:
          description: The ID of the org that this user owns
          example: org-aKQ8G13QeR
          type: string
        orgLogoURL:
          description: The logo of the org that this user owns
          example: Quaerat nobis.
          type: string
        orgName:
          description: The org name that this user owns
          example: ACME
          type: string
        orgPrivacyPolicy:
          description: The privacy policy for the org that this user owns
          example: Saepe rem sit.
          type: string
        orgSupportEmail:
          description: The support email of the org that this user owns
          example: support@example.com
          type: string
        orgTermsOfUse:
          description: The terms of use for the org that this user owns
          example: Quidem sapiente.
          type: string
        orgURL:
          description: The url of the org that this user owns
          example: something.acme
          type: string
        planName:
          description: This parameter is used to select the appropriate Product Plan
          example: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        status:
          description: The status of the user.
          example: ACTIVE|NOT_ENABLED
          type: string
      required:
      - id
      type: object
    DescribeUsersByOrgRequest:
      example:
        token: z
      properties:
        token:
          description: JWT token used to perform authorization
          example: k
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribeUsersByOrgResult:
      example:
        Id: org-aKQ8G13QeR
        orgUsers:
        - email: abc@gmail.com
          invitedAt: 2023-01-10T00:00:00Z
          name: John Doe
          roleType: reader
          userId: user-abcd1234
      properties:
        Id:
          description: The ID of the org
          example: org-aKQ8G13QeR
          type: string
        orgUsers:
          description: The users associated with the corresponding org
          example:
          - email: abc@gmail.com
            invitedAt: 2023-01-10T00:00:00Z
            name: John Doe
            roleType: reader
            userId: user-abcd1234
          items:
            $ref: '#/components/schemas/OrgUsers'
          type: array
      required:
      - Id
      - orgUsers
      type: object
    DescribeUsersBySubscriptionRequest:
      example:
        subscriptionId: sub-abcd1234
        token: tn
      properties:
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: y7
          minLength: 1
          type: string
      required:
      - subscriptionId
      - token
      type: object
    DescribeUsersBySubscriptionResult:
      example:
        Id: sub-abcd1234
        subscriptionUsers:
        - email: abc@gmail.com
          name: John Doe
          roleType: reader
          subscriptionId: sub-abcd1234
          userId: user-abcd1234
      properties:
        Id:
          description: The ID of the subscription
          example: sub-abcd1234
          type: string
        subscriptionUsers:
          description: The users associated with the corresponding subscription
          example:
          - email: abc@gmail.com
            name: John Doe
            roleType: reader
            subscriptionId: sub-abcd1234
            userId: user-abcd1234
          items:
            $ref: '#/components/schemas/SubscriptionUsers'
          type: array
      required:
      - Id
      - subscriptionUsers
      type: object
    DescribeVUnitRequest:
      example:
        id: vu-12345678
        serviceId: s-12345678
        token: 99w
      properties:
        id:
          description: ID of a VUnit
          example: Ea quae.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 67b
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeVUnitResult:
      example:
        cloudProvider: aws
        id: vu-12345678
        networkIds:
        - n-12345678
        - n-abcdefgh
        - n-1234efgh
        region: us-west-2
        serviceId: s-12345678
        serviceModelId: sm-12345678
      properties:
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        id:
          description: ID of a VUnit
          example: Hic quia non ad est.
          type: string
        networkIds:
          description: List of network IDs in the given context
          example:
          - n-12345678
          - n-abcdefgh
          - n-1234efgh
          items:
            description: ID of a Network
            example: Quia inventore non quis est.
            type: string
          type: array
        region:
          description: Region code specific to the cloud-provider
          example: us-west-2
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Aliquam adipisci voluptatem vero molestiae doloribus omnis.
          type: string
      required:
      - cloudProvider
      - networkIds
      - region
      - serviceModelId
      type: object
    Describeresourcemetricsconfigresult:
      example:
        id: r-12345678
        metricEndpoint: http://localhost:9187/metrics
        serviceId: s-12345678
      properties:
        id:
          description: ID of a resource
          example: Ea aut.
          type: string
        metricEndpoint:
          description: The local host endpoint to supply prometheus metric
          example: http://localhost:9187/metrics
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - id
      - metricEndpoint
      - serviceId
      type: object
    DetachComputeConfigRequest:
      example:
        id: ic-12345678
        serviceId: s-12345678
        token: tv
      properties:
        id:
          description: ID of an Infra Config
          example: Voluptatibus consequatur vel doloribus omnis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: o72
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DetachNetworkConfigRequest:
      example:
        id: ic-12345678
        serviceId: s-12345678
        token: q
      properties:
        id:
          description: ID of an Infra Config
          example: Dolorem est et commodi et et.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "27"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DetachStorageConfigRequest:
      example:
        id: ic-12345678
        serviceId: s-12345678
        token: 3y6
      properties:
        id:
          description: ID of an Infra Config
          example: Et nobis ut asperiores laudantium dolore.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "9"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DetailedNodeHealthResult:
      example:
        ConnectivityStatus: HEALTHY
        DiskHealth: HEALTHY
        IntegrationsHealth:
          CustomerObservabilityHealth: HEALTHY
          InternalObservabilityHealth: HEALTHY
        LoadStatus: LOAD_NORMAL
        NodeHealth: HEALTHY
        ProcessHealth: HEALTHY
        ProcessLiveness: HEALTHY
      properties:
        ConnectivityStatus:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|N/A
          type: string
        DiskHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|N/A
          type: string
        IntegrationsHealth:
          $ref: '#/components/schemas/IntegrationsHealth'
        LoadStatus:
          description: The load status of a pod
          example: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          type: string
        NodeHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|N/A
          type: string
        ProcessHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|N/A
          type: string
        ProcessLiveness:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|N/A
          type: string
      type: object
    DiffTierVersionSetsRequest:
      example:
        anotherVersion: "3.1"
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: g
        version: "3.0"
      properties:
        anotherVersion:
          description: The target version to compare against.
          example: "3.1"
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Exercitationem magnam et.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 4u
          minLength: 1
          type: string
        version:
          description: The version number for the version set.
          example: "3.0"
          type: string
      required:
      - anotherVersion
      - productTierId
      - serviceId
      - token
      - version
      type: object
    DiffTierVersionSetsResult:
      example:
        anotherVersion: "3.1"
        productTierId: Beatae beatae.
        resourceChangeSets:
          Dolores sit aut repellendus eveniet recusandae fugit.:
            categorizedResourceChanges:
              Deserunt et sed.:
                changes:
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                - attributes:
                    resourceId: r-12345678
                  changeType: PENDING_NEW
                  name: Customer metrics
                status: PENDING_UPDATE
            imageConfigChanges:
              changeState: PENDING_NEW
              imageConfigId: imgc-12345678
              imageName: mysql
            infraConfigChanges:
              changeState: PENDING_NEW
              infraConfigId: ic-12345678
              name: MySQL Writer Infra Config
            overallResourceStatus: PENDING_UPDATE
            productTierFeatureChanges: PENDING_UPDATE
            resourceChanges: PENDING_DELETE
            resourceName: Voluptas est dolorem.
        serviceId: s-12345678
        version: "3.0"
      properties:
        anotherVersion:
          description: The target version to compare against.
          example: "3.1"
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Necessitatibus voluptate sint repellendus.
          type: string
        resourceChangeSets:
          additionalProperties: true
          description: The difference for the service API configuration per resource
          example:
            Dolores sit aut repellendus eveniet recusandae fugit.:
              categorizedResourceChanges:
                Deserunt et sed.:
                  changes:
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  - attributes:
                      resourceId: r-12345678
                    changeType: PENDING_NEW
                    name: Customer metrics
                  status: PENDING_UPDATE
              imageConfigChanges:
                changeState: PENDING_NEW
                imageConfigId: imgc-12345678
                imageName: mysql
              infraConfigChanges:
                changeState: PENDING_NEW
                infraConfigId: ic-12345678
                name: MySQL Writer Infra Config
              overallResourceStatus: PENDING_UPDATE
              productTierFeatureChanges: PENDING_UPDATE
              resourceChanges: PENDING_DELETE
              resourceName: Voluptas est dolorem.
          type: object
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        version:
          description: The version number for the version set.
          example: "3.0"
          type: string
      required:
      - anotherVersion
      - productTierId
      - resourceChangeSets
      - serviceId
      - version
      type: object
    DisableProductTierFeatureRequest:
      example:
        feature: BILLING
        id: pt-12345678
        scope: INTERNAL
        serviceId: s-12345678
        token: zyb
      properties:
        feature:
          description: ProductTierFeatureType is to enable / disable features per
            product tier
          example: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS
          type: string
        id:
          description: ID of a Product Tier
          example: Incidunt molestiae suscipit.
          type: string
        scope:
          description: ProductTierFeatureScope defines scope of the feature within
            product tier
          example: INTERNAL|CUSTOMER
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: t
          minLength: 1
          type: string
      required:
      - feature
      - id
      - serviceId
      - token
      type: object
    DisableProductTierFeatureRequest2:
      example:
        feature: BILLING
        scope: INTERNAL
      properties:
        feature:
          description: Feature to disable
          example: BILLING
          type: string
        scope:
          description: Feature scope
          example: INTERNAL
          type: string
      required:
      - feature
      type: object
    DisableResourceCapabilityRequest:
      example:
        capability: SERVERLESS
        id: r-12345678
        serviceId: s-12345678
        token: k
      properties:
        capability:
          description: The type of capability of a resource
          example: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
          type: string
        id:
          description: ID of a resource
          example: Inventore est rerum ipsa voluptatibus ea nihil.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: tg
          minLength: 1
          type: string
      required:
      - capability
      - id
      - serviceId
      - token
      type: object
    DisableResourceCapabilityRequest2:
      example:
        capability: SERVERLESS
      properties:
        capability:
          description: The capability to disable
          example: SERVERLESS
          type: string
      required:
      - capability
      type: object
    DisableServiceModelFeatureRequest:
      example:
        feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        id: sm-12345678
        serviceId: s-12345678
        token: pi
      properties:
        feature:
          description: Name of the service model feature
          example: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          type: string
        id:
          description: ID of a Service Model
          example: Dolorem optio esse explicabo ullam voluptas.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: j
          minLength: 1
          type: string
      required:
      - feature
      - id
      - serviceId
      - token
      type: object
    DisableServiceModelFeatureRequest2:
      example:
        feature: Delectus eos in.
      properties:
        feature:
          example: Et aut ducimus nulla est.
          type: string
      required:
      - feature
      type: object
    DiscardPendingChangesRequest:
      example:
        id: sa-12345678
        productTierId: pt-12345678
        serviceId: s-12345678
        token: j9
      properties:
        id:
          description: ID of a Service API
          example: Pariatur reprehenderit consequatur quas maxime quo doloremque.
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Dolore eius cupiditate cumque dolor.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 22i
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    EFSFileSystemConfiguration:
      example:
        PerformanceMode: generalPurpose|maxIO
        ProvisionedThroughputInMibps: 125
        ThroughputMode: provisioned|bursting|elastic
      properties:
        PerformanceMode:
          description: The performance mode of the EFS file system
          example: generalPurpose|maxIO
          type: string
        ProvisionedThroughputInMibps:
          description: "The throughput, measured in MiBps, that you want to provision\
            \ for the EFS file system, if throughput mode if provisioned"
          example: 125
          format: double
          type: number
        ThroughputMode:
          description: The throughput mode of the EFS file system
          example: provisioned|bursting|elastic
          type: string
      required:
      - PerformanceMode
      - ThroughputMode
      type: object
    EnableProductTierFeatureRequest:
      example:
        configuration:
          S3BucketArn: arn:aws:s3:::my_billing_bucket_name
        feature: BILLING
        id: pt-12345678
        scope: INTERNAL
        serviceId: s-12345678
        token: c8j
      properties:
        configuration:
          additionalProperties: true
          description: The configuration parameters of the product tier feature
          example:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
          type: object
        feature:
          description: ProductTierFeatureType is to enable / disable features per
            product tier
          example: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS
          type: string
        id:
          description: ID of a Product Tier
          example: Deleniti eum totam quam a cum.
          type: string
        scope:
          description: ProductTierFeatureScope defines scope of the feature within
            product tier
          example: INTERNAL|CUSTOMER
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: l
          minLength: 1
          type: string
      required:
      - feature
      - id
      - serviceId
      - token
      type: object
    EnableProductTierFeatureRequest2:
      example:
        configuration:
          S3BucketArn: arn:aws:s3:::my_billing_bucket_name
        feature: BILLING
        scope: INTERNAL
      properties:
        configuration:
          additionalProperties: true
          description: The configuration parameters of the product tier feature
          example:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
          type: object
        feature:
          description: Feature to enable
          example: BILLING
          type: string
        scope:
          description: Feature scope
          example: INTERNAL
          type: string
      required:
      - feature
      type: object
    EnableResourceCapabilityRequest:
      example:
        capability: SERVERLESS
        configuration:
          EnableAutoStop: true
          MinimumNodesInPool: 5
          PortsMappingProxyConfig:
            MaxNumberOfClustersPerProxyInstance: 50
            NumberOfPortsPerCluster: 4
          ReferenceProxyKey: resource-proxy
          TargetPort: 5432
        id: r-12345678
        serviceId: s-12345678
        token: 44d
      properties:
        capability:
          description: The type of capability of a resource
          example: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
          type: string
        configuration:
          additionalProperties: true
          description: The configuration parameters of a capability of a resource
          example:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
          type: object
        id:
          description: ID of a resource
          example: Eum et porro pariatur voluptatibus.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "377"
          minLength: 1
          type: string
      required:
      - capability
      - id
      - serviceId
      - token
      type: object
    EnableResourceCapabilityRequest2:
      example:
        capability: SERVERLESS
        configuration:
          EnableAutoStop: true
          MinimumNodesInPool: 5
          PortsMappingProxyConfig:
            MaxNumberOfClustersPerProxyInstance: 50
            NumberOfPortsPerCluster: 4
          ReferenceProxyKey: resource-proxy
          TargetPort: 5432
      properties:
        capability:
          description: The type of capability of a resource
          example: SERVERLESS
          type: string
        configuration:
          additionalProperties: true
          description: The configuration parameters of a capability of a resource
          example:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
          type: object
      required:
      - capability
      type: object
    EnableServiceModelFeatureRequest:
      example:
        configuration:
          status: "ON"
        feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        id: sm-12345678
        serviceId: s-12345678
        token: w
      properties:
        configuration:
          additionalProperties: true
          description: The configuration parameters of the service model feature
          example:
            status: "ON"
          type: object
        feature:
          description: Name of the service model feature
          example: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          type: string
        id:
          description: ID of a Service Model
          example: Sint ad ut totam.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ck
          minLength: 1
          type: string
      required:
      - configuration
      - feature
      - id
      - serviceId
      - token
      type: object
    EnableServiceModelFeatureRequest2:
      example:
        configuration:
          Assumenda aut.: Quaerat eos dicta nulla optio.
          Et nihil ad libero aut nisi.: Deleniti aliquam aliquid esse odit quo cumque.
          Quisquam aspernatur animi accusantium quis sit cumque.: Quia nostrum inventore.
        feature: Ab aut nihil quos qui.
      properties:
        configuration:
          additionalProperties: true
          example:
            Repudiandae et qui deleniti.: Accusantium aut blanditiis molestias temporibus
              tempora.
          type: object
        feature:
          example: Quidem error iste explicabo amet deleniti et.
          type: string
      required:
      - configuration
      - feature
      type: object
    EndCustomerEvent:
      example:
        eventID: e-123456
        eventPayload:
          eventType: CustomerSignUp
          token: "123456"
        eventType: InviteUser
        orgID: o-123456
        orgName: Acme Corp
        orgURL: https://acme.com
        priority: Critical
        time: 2023-01-10T00:00:00Z
        userEmail: user@example.com
        userID: user-123456
        userName: user
      properties:
        eventID:
          description: ID of a Event
          example: Rerum est.
          type: string
        eventPayload:
          additionalProperties: true
          description: The event payload for a service provider.
          example:
            eventType: CustomerSignUp
            token: "123456"
          type: object
        eventType:
          description: The type of the end customer specific event
          example: InviteUser|RevokeUserRole|InstanceMaintenanceScheduled|CustomerSignUp|DisconnectAccountComplete|ConnectAccountComplete|PendingRevokePermissions|PendingRestorePermissions
          type: string
        orgID:
          description: ID of an Org
          example: Dolorem expedita voluptatibus quaerat molestiae temporibus.
          type: string
        orgName:
          description: Associated organization name.
          example: Acme Corp
          type: string
        orgURL:
          description: Associated organization URL.
          example: https://acme.com
          type: string
        priority:
          description: The priority of the event
          example: Critical|High|Medium|Low
          type: string
        time:
          description: The event time
          example: 2023-01-10T00:00:00Z
          type: string
        userEmail:
          description: User email associated with the event.
          example: user@example.com
          type: string
        userID:
          description: ID of a User
          example: Eaque incidunt odio cumque eaque sed.
          type: string
        userName:
          description: Name of the user associated with the event.
          example: user
          type: string
      required:
      - eventID
      - eventPayload
      - eventType
      - orgID
      - orgName
      - orgURL
      - priority
      - time
      type: object
    Endpoint:
      example:
        disableMonitoring: true
        host: https://my-endpoint.com
        networkingType: PUBLIC|PRIVATE
        ports:
        - 8080
        - 8081
        primary: true
      properties:
        disableMonitoring:
          default: false
          description: Whether to disable monitoring for this endpoint
          example: true
          type: boolean
        host:
          default: ""
          description: The host of the endpoint
          example: https://my-endpoint.com
          type: string
        networkingType:
          default: PUBLIC
          description: The networking type of the endpoint
          example: PUBLIC|PRIVATE
          type: string
        ports:
          description: The ports of the endpoint
          example:
          - 8080
          - 8081
          items:
            example: 2052978670307926383
            format: int64
            type: integer
          type: array
        primary:
          default: false
          description: Whether this is the primary endpoint to highlight
          example: true
          type: boolean
      type: object
    EnvironmentHealthReport:
      example:
        models:
          sm-12345678:
            vu-11111111: UNKNOWN
            vu-12345678: UP
            vu-87654321: DOWN
      properties:
        models:
          additionalProperties: true
          description: Health report for each model in the environment
          example:
            sm-12345678:
              vu-11111111: UNKNOWN
              vu-12345678: UP
              vu-87654321: DOWN
          type: object
      type: object
    EnvironmentPromotionStatus:
      example:
        status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
        targetEnvironmentID: se-12345678
      properties:
        status:
          description: The status of the promotion
          example: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          type: string
        targetEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
      required:
      - status
      - targetEnvironmentID
      type: object
    EnvironmentVariable:
      description: A service environment variable
      example:
        key: MYSQL_ROOT_PASSWORD
        value: password
      properties:
        key:
          description: The key of the environment variable
          example: MYSQL_ROOT_PASSWORD
          type: string
        value:
          description: The value of the environment variable
          example: password
          type: string
      required:
      - key
      - value
      type: object
    Error:
      example:
        fault: true
        id: 123abc
        message: parameter 'p' must be an integer
        name: bad_request
        temporary: false
        timeout: true
      properties:
        fault:
          description: Is the error a server-side fault?
          example: true
          type: boolean
        id:
          description: ID is a unique identifier for this particular occurrence of
            the problem.
          example: 123abc
          type: string
        message:
          description: Message is a human-readable explanation specific to this occurrence
            of the problem.
          example: parameter 'p' must be an integer
          type: string
        name:
          description: Name is the name of this class of errors.
          example: bad_request
          type: string
        temporary:
          description: Is the error temporary?
          example: true
          type: boolean
        timeout:
          description: Is the error a timeout?
          example: true
          type: boolean
      required:
      - fault
      - id
      - message
      - name
      - temporary
      - timeout
      type: object
    FailoverResourceInstanceRequest:
      example:
        failedReplicaAction: FAILOVER_AND_RESTART
        failedReplicaID: db-0
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: obh
      properties:
        failedReplicaAction:
          description: The action to take for the replica that has failed
          example: FAILOVER_ONLY|FAILOVER_AND_RESTART|FAILOVER_AND_RECREATE
          type: string
        failedReplicaID:
          description: The failed replica ID
          example: db-0
          type: string
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Odit impedit.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: m
          minLength: 1
          type: string
      required:
      - failedReplicaID
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    FailoverResourceInstanceRequest2:
      example:
        failedReplicaAction: FAILOVER_AND_RESTART
        failedReplicaID: db-0
      properties:
        failedReplicaAction:
          description: The failed replica action
          example: FAILOVER_AND_RESTART
          type: string
        failedReplicaID:
          description: The failed replica ID
          example: db-0
          type: string
      required:
      - failedReplicaID
      type: object
    FileMetadata:
      example:
        description: A file to store the configuration for the resource
        fileId: f-12345678
        mountPath: /etc/config
        name: file.txt
        size: 1234
        type: Config
        uploadTime: 2023-01-10T00:00:00Z
        uploadedBy: user
      properties:
        description:
          description: The description of the file
          example: A file to store the configuration for the resource
          type: string
        fileId:
          description: ID of a File
          example: Pariatur sunt suscipit voluptatem assumenda.
          type: string
        mountPath:
          description: The mount path of the file
          example: /etc/config
          type: string
        name:
          description: The name of the file
          example: file.txt
          type: string
        size:
          description: The size of the file
          example: 1234
          format: int64
          type: integer
        type:
          description: The type of the file
          example: Config|Secret
          type: string
        uploadTime:
          description: The time the file was uploaded
          example: 2023-01-10T00:00:00Z
          type: string
        uploadedBy:
          description: The user who uploaded the file
          example: user
          type: string
      required:
      - description
      - fileId
      - mountPath
      - name
      - size
      - type
      - uploadTime
      - uploadedBy
      type: object
    FileSystemConfiguration:
      example:
        EFSFileSystemConfiguration:
          PerformanceMode: generalPurpose|maxIO
          ProvisionedThroughputInMibps: 125
          ThroughputMode: provisioned|bursting|elastic
      properties:
        EFSFileSystemConfiguration:
          $ref: '#/components/schemas/EFSFileSystemConfiguration'
      type: object
    GCSConfiguration:
      example: {}
      type: object
    GenerateComposeSpecFromContainerImageRequest:
      example:
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        image: library/mysql:5.7
        imageRegistry: docker.io
        password: password
        token: x
        username: username
      properties:
        environmentVariables:
          description: Runtime environment variables needed to run the image
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        image:
          description: Name of the image along with the tag. Include the repository
            name if the image is not from the official repository
          example: library/mysql:5.7
          type: string
        imageRegistry:
          description: Registry where the image is stored
          example: docker.io
          type: string
        password:
          description: Password to access the image registry
          example: password
          type: string
        token:
          description: JWT token used to perform authorization
          example: "0"
          minLength: 1
          type: string
        username:
          description: Username to access the image registry
          example: username
          type: string
      required:
      - image
      - imageRegistry
      - token
      type: object
    GenerateComposeSpecFromContainerImageRequest2:
      example:
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        image: library/mysql:5.7
        imageRegistry: docker.io
        password: password
        username: username
      properties:
        environmentVariables:
          description: Runtime environment variables needed to run the image
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        image:
          description: Name of the image along with the tag. Include the repository
            name if the image is not from the official repository
          example: library/mysql:5.7
          type: string
        imageRegistry:
          description: Registry where the image is stored
          example: docker.io
          type: string
        password:
          description: Password to access the image registry
          example: password
          type: string
        username:
          description: Username to access the image registry
          example: username
          type: string
      required:
      - image
      - imageRegistry
      type: object
    GenerateComposeSpecFromContainerImageResult:
      example:
        fileContent: Incidunt hic doloremque voluptatem.
      properties:
        fileContent:
          description: Base64 encoded Compose Spec YAML in docker compose format
          example: Fuga ipsum non.
          type: string
      required:
      - fileContent
      type: object
    GenerateTokenForDeploymentCellDashboardRequest:
      example:
        id: instance-abcd1234
        subscriptionId: sub-abcd1234
        token: h
      properties:
        id:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: "8"
          minLength: 1
          type: string
      required:
      - id
      - subscriptionId
      - token
      type: object
    GenerateTokenForDeploymentCellDashboardResult:
      example:
        deploymentCellID: hc-12345678
        expirationTimestamp: 2021-01-01T00:00:00Z
        token: token
      properties:
        deploymentCellID:
          description: The deployment cell ID
          example: hc-12345678
          type: string
        expirationTimestamp:
          description: The timestamp when the token expires
          example: 2021-01-01T00:00:00Z
          type: string
        token:
          description: The token to access the dashboard
          example: token
          type: string
      required:
      - deploymentCellID
      - expirationTimestamp
      - token
      type: object
    GetAvailabilityZoneByCodeRequest:
      example:
        cloudProviderName: aws
        code: us-east-1a
        token: x
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        code:
          description: Cloud-provider native availability zone code
          example: us-east-1a
          type: string
        token:
          description: JWT token used to perform authorization
          example: bif
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - code
      - token
      type: object
    GetCloudProviderByNameRequest:
      example:
        name: aws
        token: yd
      properties:
        name:
          description: Name of the CloudProvider
          example: aws
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: j8h
          minLength: 1
          type: string
      required:
      - name
      - token
      type: object
    GetConsumptionUsageRequest:
      example:
        endDate: 2024-01-01T10:00:00Z
        startDate: 2023-01-01T10:00:00Z
        subscriptionID: sub-12345678
        token: vh6
      properties:
        endDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        startDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        subscriptionID:
          description: ID of a Subscription
          example: Amet nihil pariatur culpa.
          type: string
        token:
          description: JWT token used to perform authorization
          example: a2c
          minLength: 1
          type: string
      required:
      - token
      type: object
    GetConsumptionUsageResult:
      example:
        endTime: 2021-01-01T00:00:00.000Z
        startTime: 2021-01-01T00:00:00.000Z
        usage:
        - dimension: core/hours
          endTime: 2021-01-01T00:00:00.000Z
          startTime: 2021-01-01T00:00:00.000Z
          total: 0.67
      properties:
        endTime:
          description: End timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        startTime:
          description: Start timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        usage:
          description: Usage for the current plan
          example:
          - dimension: core/hours
            endTime: 2021-01-01T00:00:00.000Z
            startTime: 2021-01-01T00:00:00.000Z
            total: 0.67
          items:
            $ref: '#/components/schemas/UsagePerDimension'
          type: array
      type: object
    GetCurrentConsumptionUsageRequest:
      example:
        subscriptionID: sub-12345678
        token: zb3
      properties:
        subscriptionID:
          description: ID of a Subscription
          example: Placeat consequatur.
          type: string
        token:
          description: JWT token used to perform authorization
          example: "2"
          minLength: 1
          type: string
      required:
      - token
      type: object
    GetCurrentUsageRequest:
      example:
        token: "2"
      properties:
        token:
          description: JWT token used to perform authorization
          example: ju
          minLength: 1
          type: string
      required:
      - token
      type: object
    GetFileRequest:
      example:
        fileId: f-12345678
        id: r-12345678
        productTierId: pt-12345678
        productTierVersion: "1.0"
        serviceId: s-12345678
        token: b
      properties:
        fileId:
          description: ID of a File
          example: Cum culpa nisi aut dignissimos quo.
          type: string
        id:
          description: ID of a resource
          example: Rerum hic ullam nam ut.
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Magnam quisquam mollitia distinctio consequatur sed consequatur.
          type: string
        productTierVersion:
          description: Version of the product tier
          example: "1.0"
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 9w7
          minLength: 1
          type: string
      required:
      - fileId
      - id
      - serviceId
      - token
      type: object
    GetRegionByCodeRequest:
      example:
        cloudProviderName: aws
        code: us-east-1
        token: bqn
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        code:
          description: Cloud-provider native region code
          example: us-east-1
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: h
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - code
      - token
      type: object
    GetServicePlanRequest:
      example:
        productTierId: pt-12345678
        serviceId: s-12345678
        token: b6
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Vero assumenda expedita voluptas recusandae laudantium.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: oop
          minLength: 1
          type: string
      required:
      - productTierId
      - serviceId
      - token
      type: object
    GetServicePlanResult:
      example:
        AutoApproveSubscription: false
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        activeAccountConfigIds:
          aws: ac-12345678
          gcp: ac-23456789
        apiVersion: v1
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        deploymentConfigId: dc-12345678
        gcpRegions:
        - us-central1
        hasPendingChanges: true
        isProductTierDisabled: true
        latestMajorVersion: "3.0"
        modelType: CUSTOMER_HOSTED
        productTierDescription: A premium product tier
        productTierDocumentation: Any documentation
        productTierFeatures:
          LOGS: true
          METRICS: false
        productTierId: pt-12345678
        productTierKey: premium
        productTierName: Premium
        productTierPlanDescription: A premium plan
        productTierPricing:
          price1: value1
        productTierSupport: Any support
        serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
          clusters for high availability
        serviceApiId: sa-12345678
        serviceEnvironmentId: se-12345678
        serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
          clusters for high availability
        serviceModelFeatures:
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        serviceModelId: sm-12345678
        serviceModelName: MySQL multi-writer service hosted model
        tierType: OMNISTRATE_DEDICATED_TENANCY
        versionSetStatus: Preferred|Active|Deprecated|Pending
      properties:
        AutoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            description: ID of an Account Config
            example: Sunt incidunt minus.
            type: string
          type: array
        activeAccountConfigIds:
          additionalProperties: true
          description: The active infrastructure account configuration IDs per cloud
            provider
          example:
            aws: ac-12345678
            gcp: ac-23456789
          type: object
        apiVersion:
          description: The external version of the API
          example: v1
          type: string
        awsRegions:
          description: The AWS regions that this service plan is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Est similique distinctio voluptatum beatae iste.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this service plan is available on
          example:
          - northcentralus
          items:
            example: Voluptas inventore eos ut molestiae.
            type: string
          type: array
        deploymentConfigId:
          description: ID of a Deployment Config
          example: Deleniti officiis.
          type: string
        gcpRegions:
          description: The GCP regions that this service plan is available on
          example:
          - us-central1
          items:
            example: Et aliquam.
            type: string
          type: array
        hasPendingChanges:
          description: Whether there are any pending changes for the product tier
            configuration
          example: true
          type: boolean
        isProductTierDisabled:
          description: Whether the product tier is disabled
          example: true
          type: boolean
        latestMajorVersion:
          description: The version number for the latest major version set.
          example: "3.0"
          type: string
        modelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        productTierDescription:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        productTierDocumentation:
          description: Documentation
          example: Any documentation
          type: string
        productTierFeatures:
          additionalProperties: true
          description: The features that are enabled / disabled for this product tier
          example:
            LOGS: true
            METRICS: false
          type: object
        productTierId:
          description: ID of a Product Tier
          example: Voluptas qui ut velit beatae totam.
          type: string
        productTierKey:
          description: Unique Key of the product tier
          example: premium
          type: string
        productTierName:
          description: Name of the product tier
          example: Premium
          type: string
        productTierPlanDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        productTierPricing:
          description: Pricing
          example:
            price1: value1
        productTierSupport:
          description: Support
          example: Any support
          type: string
        serviceApiDescription:
          description: A brief description of the service API bundle
          example: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
            for high availability
          type: string
        serviceApiId:
          description: ID of a Service API
          example: Totam dolorem vero minus qui ut placeat.
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceModelDescription:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        serviceModelFeatures:
          description: Enabled service model features
          example:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          items:
            $ref: '#/components/schemas/ServiceModelFeatureDetail'
          type: array
        serviceModelId:
          description: ID of a Service Model
          example: Et ullam aut qui asperiores impedit accusamus.
          type: string
        serviceModelName:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        tierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        versionSetStatus:
          description: The tier version set status.
          example: Preferred|Active|Deprecated|Pending
          type: string
      required:
      - AutoApproveSubscription
      - apiVersion
      - deploymentConfigId
      - hasPendingChanges
      - isProductTierDisabled
      - latestMajorVersion
      - modelType
      - productTierDescription
      - productTierDocumentation
      - productTierId
      - productTierKey
      - productTierName
      - productTierPlanDescription
      - productTierPricing
      - productTierSupport
      - serviceApiDescription
      - serviceApiId
      - serviceEnvironmentId
      - serviceModelDescription
      - serviceModelId
      - serviceModelName
      - tierType
      - versionSetStatus
      type: object
    GetUsageRequest:
      example:
        endDate: 2024-01-01T10:00:00Z
        startDate: 2023-01-01T10:00:00Z
        token: ij
      properties:
        endDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        startDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        token:
          description: JWT token used to perform authorization
          example: uw
          minLength: 1
          type: string
      required:
      - token
      type: object
    GetUsageResult:
      example:
        endTime: 2021-01-01T00:00:00.000Z
        planName: STARTER
        startTime: 2021-01-01T00:00:00.000Z
        usage:
        - dimension: core/hours
          endTime: 2021-01-01T00:00:00.000Z
          startTime: 2021-01-01T00:00:00.000Z
          total: 0.67
      properties:
        endTime:
          description: End timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        planName:
          description: This parameter is used to select the appropriate Product Plan
          example: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
          type: string
        startTime:
          description: Start timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        usage:
          description: Usage for the current plan
          example:
          - dimension: core/hours
            endTime: 2021-01-01T00:00:00.000Z
            startTime: 2021-01-01T00:00:00.000Z
            total: 0.67
          items:
            $ref: '#/components/schemas/UsagePerDimension'
          type: array
      type: object
    GitConfiguration:
      example:
        accessToken: my-token
        commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
        referenceName: tags/v1.0.0
        repositoryUrl: https://github.com/username/myrepo
        userName: my-user
      properties:
        accessToken:
          description: The access token
          example: my-token
          type: string
        commitSHA:
          description: The commit SHA to checkout
          example: 1e386b5f54de9150d336ccfe2e14782b94faf67c
          type: string
        referenceName:
          description: The reference name of the repository
          example: tags/v1.0.0
          type: string
        repositoryUrl:
          description: The URL of the repository
          example: https://github.com/username/myrepo
          type: string
        userName:
          description: The name of github user
          example: my-user
          type: string
      required:
      - referenceName
      - repositoryUrl
      type: object
    HelmChartConfiguration:
      example:
        chartName: my-chart
        chartRepoName: my-repo
        chartRepoUrl: https://my-repo.com
        chartValues:
          key1: value1
          key2: 3
          key3:
            key4: value4
        chartVersion: 1.0.0
        endpointConfiguration:
          admin:
            host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
            networkingType: PRIVATE
            ports:
            - 8080
            - 8081
            primary: false
          cluster:
            host: https://my-endpoint.com
            networkingType: PUBLIC
            ports:
            - 8080
            - 8081
            primary: true
        password: my-password
        runtimeConfiguration:
          disableHooks: true
          recreate: true
          resetThenReuseValues: true
          resetValues: true
          reuseValues: true
          skipCRDs: true
          timeoutNanos: 1000000000
          upgradeCRDs: true
          wait: true
          waitForJobs: true
        username: my-user
      properties:
        chartName:
          description: The chart name of the Helm package
          example: my-chart
          type: string
        chartRepoName:
          description: The chart repository name of the Helm package
          example: my-repo
          type: string
        chartRepoUrl:
          description: The chart repository URL of the Helm package
          example: https://my-repo.com
          type: string
        chartValues:
          additionalProperties: true
          description: The values of the Helm package
          example:
            key1: value1
            key2: 3
            key3:
              key4: value4
          type: object
        chartVersion:
          description: The chart version of the Helm package
          example: 1.0.0
          type: string
        endpointConfiguration:
          additionalProperties:
            $ref: '#/components/schemas/Endpoint'
          description: The endpoints from the Helm Deployment to expose to the customer
          example:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          type: object
        password:
          description: The password to authenticate with the registry
          example: my-password
          type: string
        runtimeConfiguration:
          $ref: '#/components/schemas/HelmRuntimeConfiguration'
        username:
          description: The username to authenticate with the registry
          example: my-user
          type: string
      required:
      - chartName
      - chartRepoName
      - chartRepoUrl
      - chartVersion
      type: object
    HelmPackage:
      example:
        chartName: my-chart
        chartRepoName: my-repo
        chartRepoUrl: https://my-repo.com
        chartValues:
          key1: value1
          key2: 3
          key3:
            key4: value4
        chartVersion: 1.0.0
        namespace: default
        password: my-password
        username: my-user
      properties:
        chartName:
          description: The chart name of the Helm package
          example: my-chart
          type: string
        chartRepoName:
          description: The chart repository name of the Helm package
          example: my-repo
          type: string
        chartRepoUrl:
          description: The chart repository URL of the Helm package
          example: https://my-repo.com
          type: string
        chartValues:
          additionalProperties: true
          description: The values of the Helm package
          example:
            key1: value1
            key2: 3
            key3:
              key4: value4
          type: object
        chartVersion:
          description: The chart version of the Helm package
          example: 1.0.0
          type: string
        namespace:
          description: The namespace where the Helm package should be installed
          example: default
          type: string
        password:
          description: The password to authenticate with the registry
          example: my-password
          type: string
        username:
          description: The username to authenticate with the registry
          example: my-user
          type: string
      required:
      - chartName
      - chartRepoName
      - chartRepoUrl
      - chartVersion
      - namespace
      type: object
    HelmRuntimeConfiguration:
      example:
        disableHooks: true
        recreate: true
        resetThenReuseValues: true
        resetValues: true
        reuseValues: true
        skipCRDs: true
        timeoutNanos: 1000000000
        upgradeCRDs: true
        wait: true
        waitForJobs: true
      properties:
        disableHooks:
          description: Disable Helm hooks
          example: true
          type: boolean
        recreate:
          description: Recreate the Helm package if it already exists
          example: true
          type: boolean
        resetThenReuseValues:
          description: Reset then reuse values for the Helm package before applying
          example: true
          type: boolean
        resetValues:
          description: Reset values for the Helm package before applying
          example: true
          type: boolean
        reuseValues:
          description: Reuse values for the Helm package before applying
          example: true
          type: boolean
        skipCRDs:
          description: Skip CRDs for the Helm package
          example: true
          type: boolean
        timeoutNanos:
          description: Timeout (nanos) for the Helm package to be deployed
          example: 1000000000
          format: int64
          type: integer
        upgradeCRDs:
          description: Upgrade CRDs for the Helm package
          example: true
          type: boolean
        wait:
          description: Wait for the Helm package to be deployed
          example: true
          type: boolean
        waitForJobs:
          description: Wait for all jobs to be completed
          example: true
          type: boolean
      required:
      - disableHooks
      - recreate
      - resetThenReuseValues
      - resetValues
      - reuseValues
      - skipCRDs
      - timeoutNanos
      - upgradeCRDs
      - wait
      - waitForJobs
      type: object
    ImageConfigChangeSummary:
      example:
        changeState: PENDING_NEW
        imageConfigId: imgc-12345678
        imageName: mysql
      properties:
        changeState:
          description: State of the configuration change
          example: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
          type: string
        imageConfigId:
          description: ID of an Image Config
          example: Non qui molestiae libero.
          type: string
        imageName:
          description: Name of the container image
          example: mysql
          minLength: 1
          type: string
      type: object
    InfraConfigChangeSummary:
      example:
        changeState: PENDING_NEW
        infraConfigId: ic-12345678
        name: MySQL Writer Infra Config
      properties:
        changeState:
          description: State of the configuration change
          example: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
          type: string
        infraConfigId:
          description: ID of an Infra Config
          example: Cupiditate consequatur.
          type: string
        name:
          description: The name of the infra config
          example: MySQL Writer Infra Config
          type: string
      type: object
    InfraRollConfiguration:
      description: The rollout configuration to use for making changes to the resources
        backed by this infra
      example:
        infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
        maximumNumberOfResourceInstancesPerBatch: 1
        maximumUnavailableReplicas: 1
      properties:
        infraRolloutStrategy:
          description: Rollout strategy to use for infra config updates
          example: APPLY_IMMEDIATELY
          type: string
        maximumNumberOfResourceInstancesPerBatch:
          default: 1
          description: Maximum number of resource instances to update in a single
            batch
          example: 1
          format: int64
          minimum: 1
          type: integer
        maximumUnavailableReplicas:
          default: 1
          description: Maximum number of replicas of this resource that can be unavailable
            before halting the rollout
          example: 1
          format: int64
          minimum: 1
          type: integer
      type: object
    InputParameterEntity:
      example:
        custom: false
        defaultValue: option1
        dependentResourceID: r-12345678
        description: The name of the server
        displayName: Server Name
        isList: false
        key: serverName
        modifiable: true
        options:
        - option1
        - option2
        required: true
        type: Boolean|Float64|String|JSON|Resource
      properties:
        custom:
          description: Whether the parameter is custom
          example: false
          type: boolean
        defaultValue:
          description: The parameter default value
          example: option1
          type: string
        dependentResourceID:
          description: The parameter dependent resource ID
          example: r-12345678
          type: string
        description:
          description: The parameter description
          example: The name of the server
          type: string
        displayName:
          description: The parameter display name
          example: Server Name
          type: string
        isList:
          description: Whether the parameter is a list
          example: false
          type: boolean
        key:
          description: The parameter key
          example: serverName
          type: string
        modifiable:
          description: Whether the parameter is modifiable
          example: true
          type: boolean
        options:
          description: The parameter options
          example:
          - option1
          - option2
          items:
            example: Sapiente nemo in accusantium ratione et et.
            type: string
          type: array
        required:
          description: Whether the parameter is required
          example: true
          type: boolean
        type:
          description: The parameter type
          example: Boolean|Float64|String|JSON|Resource
          type: string
      required:
      - custom
      - description
      - displayName
      - isList
      - key
      - modifiable
      - required
      - type
      type: object
    InstanceHealthSummary:
      example:
        instanceID: instance-12345678
        lifeCycleStatus: RUNNING
        resourcesHealth:
          In omnis autem iste consequuntur aperiam molestiae.:
            nodesHealth:
              Exercitationem nihil numquam neque quia dolorem.:
                availabilityZone: us-east-2a
                connectivityStatus: HEALTHY
                diskHealth: HEALTHY
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                events:
                - event-1
                - event-2
                integrationsHealth:
                  CustomerObservabilityHealth: HEALTHY
                  InternalObservabilityHealth: HEALTHY
                loadStatus: LOAD_NORMAL
                nodeHealth: HEALTHY
                nodeName: postgres-0
                ports:
                - 80
                - 443
                processHealth: HEALTHY
                processLiveness: HEALTHY
                recentLogs: Log message
                status: HEALTHY
              Ratione ut.:
                availabilityZone: us-east-2a
                connectivityStatus: HEALTHY
                diskHealth: HEALTHY
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                events:
                - event-1
                - event-2
                integrationsHealth:
                  CustomerObservabilityHealth: HEALTHY
                  InternalObservabilityHealth: HEALTHY
                loadStatus: LOAD_NORMAL
                nodeHealth: HEALTHY
                nodeName: postgres-0
                ports:
                - 80
                - 443
                processHealth: HEALTHY
                processLiveness: HEALTHY
                recentLogs: Log message
                status: HEALTHY
            resourceID: resource-12345678
            resourceKey: primary
            resourceType: Kustomize
            status: HEALTHY
          Odit vero deleniti tempore.:
            nodesHealth:
              Exercitationem nihil numquam neque quia dolorem.:
                availabilityZone: us-east-2a
                connectivityStatus: HEALTHY
                diskHealth: HEALTHY
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                events:
                - event-1
                - event-2
                integrationsHealth:
                  CustomerObservabilityHealth: HEALTHY
                  InternalObservabilityHealth: HEALTHY
                loadStatus: LOAD_NORMAL
                nodeHealth: HEALTHY
                nodeName: postgres-0
                ports:
                - 80
                - 443
                processHealth: HEALTHY
                processLiveness: HEALTHY
                recentLogs: Log message
                status: HEALTHY
              Ratione ut.:
                availabilityZone: us-east-2a
                connectivityStatus: HEALTHY
                diskHealth: HEALTHY
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                events:
                - event-1
                - event-2
                integrationsHealth:
                  CustomerObservabilityHealth: HEALTHY
                  InternalObservabilityHealth: HEALTHY
                loadStatus: LOAD_NORMAL
                nodeHealth: HEALTHY
                nodeName: postgres-0
                ports:
                - 80
                - 443
                processHealth: HEALTHY
                processLiveness: HEALTHY
                recentLogs: Log message
                status: HEALTHY
            resourceID: resource-12345678
            resourceKey: primary
            resourceType: Kustomize
            status: HEALTHY
          Quia velit harum quia quo reprehenderit.:
            nodesHealth:
              Exercitationem nihil numquam neque quia dolorem.:
                availabilityZone: us-east-2a
                connectivityStatus: HEALTHY
                diskHealth: HEALTHY
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                events:
                - event-1
                - event-2
                integrationsHealth:
                  CustomerObservabilityHealth: HEALTHY
                  InternalObservabilityHealth: HEALTHY
                loadStatus: LOAD_NORMAL
                nodeHealth: HEALTHY
                nodeName: postgres-0
                ports:
                - 80
                - 443
                processHealth: HEALTHY
                processLiveness: HEALTHY
                recentLogs: Log message
                status: HEALTHY
              Ratione ut.:
                availabilityZone: us-east-2a
                connectivityStatus: HEALTHY
                diskHealth: HEALTHY
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                events:
                - event-1
                - event-2
                integrationsHealth:
                  CustomerObservabilityHealth: HEALTHY
                  InternalObservabilityHealth: HEALTHY
                loadStatus: LOAD_NORMAL
                nodeHealth: HEALTHY
                nodeName: postgres-0
                ports:
                - 80
                - 443
                processHealth: HEALTHY
                processLiveness: HEALTHY
                recentLogs: Log message
                status: HEALTHY
            resourceID: resource-12345678
            resourceKey: primary
            resourceType: Kustomize
            status: HEALTHY
        status: HEALTHY
      properties:
        instanceID:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        lifeCycleStatus:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        resourcesHealth:
          additionalProperties:
            $ref: '#/components/schemas/ResourceHealthSummary'
          description: The health summary of the resources by resource ID
          example:
            Dolores eaque.:
              nodesHealth:
                Exercitationem nihil numquam neque quia dolorem.:
                  availabilityZone: us-east-2a
                  connectivityStatus: HEALTHY
                  diskHealth: HEALTHY
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  events:
                  - event-1
                  - event-2
                  integrationsHealth:
                    CustomerObservabilityHealth: HEALTHY
                    InternalObservabilityHealth: HEALTHY
                  loadStatus: LOAD_NORMAL
                  nodeHealth: HEALTHY
                  nodeName: postgres-0
                  ports:
                  - 80
                  - 443
                  processHealth: HEALTHY
                  processLiveness: HEALTHY
                  recentLogs: Log message
                  status: HEALTHY
                Ratione ut.:
                  availabilityZone: us-east-2a
                  connectivityStatus: HEALTHY
                  diskHealth: HEALTHY
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  events:
                  - event-1
                  - event-2
                  integrationsHealth:
                    CustomerObservabilityHealth: HEALTHY
                    InternalObservabilityHealth: HEALTHY
                  loadStatus: LOAD_NORMAL
                  nodeHealth: HEALTHY
                  nodeName: postgres-0
                  ports:
                  - 80
                  - 443
                  processHealth: HEALTHY
                  processLiveness: HEALTHY
                  recentLogs: Log message
                  status: HEALTHY
              resourceID: resource-12345678
              resourceKey: primary
              resourceType: Kustomize
              status: HEALTHY
          type: object
        status:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|N/A
          type: string
      type: object
    InstanceSnapshot:
      example:
        completeTime: 2021-09-01T00:00:00Z
        createdTime: 2021-09-01T00:00:00Z
        encrypted: true
        progress: 99
        snapshotId: instance-ss-12345678
        status: completed
      properties:
        completeTime:
          description: The snapshot time
          example: 2021-09-01T00:00:00Z
          type: string
        createdTime:
          description: The snapshot creation time
          example: 2021-09-01T00:00:00Z
          type: string
        encrypted:
          description: Whether the snapshot is encrypted
          example: true
          type: boolean
        progress:
          description: The backup progress. 0-100
          example: 99
          format: int64
          type: integer
        snapshotId:
          description: ID of a Resource Instance Snapshot
          example: Et nesciunt explicabo eum quia enim magni.
          type: string
        status:
          description: The snapshot status
          example: completed
          type: string
      required:
      - completeTime
      - createdTime
      - encrypted
      - progress
      - snapshotId
      - status
      type: object
    IntegrationsHealth:
      example:
        CustomerObservabilityHealth: HEALTHY
        InternalObservabilityHealth: HEALTHY
      properties:
        CustomerObservabilityHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|N/A
          type: string
        InternalObservabilityHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|N/A
          type: string
      type: object
    InviteConsumptionUserRequest:
      example:
        email: abc@gmail.com
        roleType: reader
        subscriptionId: sub-abcd1234
        token: keh
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: 5v
          minLength: 1
          type: string
      required:
      - email
      - roleType
      - subscriptionId
      - token
      type: object
    InviteConsumptionUserRequest2:
      example:
        email: abc@gmail.com
        roleType: reader
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          example: reader
          type: string
      required:
      - email
      - roleType
      type: object
    InviteUserRequest:
      example:
        email: abc@gmail.com
        roleType: reader
        token: 2rf
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        token:
          description: JWT token used to perform authorization
          example: z
          minLength: 1
          type: string
      required:
      - email
      - roleType
      - token
      type: object
    InviteUserRequest2:
      example:
        email: abc@gmail.com
        roleType: reader
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          example: reader
          type: string
      required:
      - email
      - roleType
      type: object
    Invoice:
      example:
        currency: USD
        dueDate: 2023-10-01T00:00:00Z
        invoiceDate: 2021-01-01T00:00:00.000Z
        invoiceId: in_1234568
        invoiceNumber: 2021-01-01-1234567890
        invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
        invoiceStatus: Open
        invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
        paymentTerms: Net 30
        taxAmount: 10
        totalAmount: 110
        totalAmountWithoutTax: 100
      properties:
        currency:
          description: The currency of the charge
          example: USD
          type: string
        dueDate:
          description: Due date in ISO 8601 format
          example: 2023-10-01T00:00:00Z
          type: string
        invoiceDate:
          description: Date of the invoice
          example: 2021-01-01T00:00:00.000Z
          type: string
        invoiceId:
          description: ID of the invoice
          example: in_1234568
          type: string
        invoiceNumber:
          description: The invoice number
          example: 2021-01-01-1234567890
          type: string
        invoicePdf:
          description: URL for the PDF of the invoice
          example: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
          type: string
        invoiceStatus:
          description: This describes the status of the invoice and is set by the
            payment provider
          example: draft|open|paid|uncollectible|void
          type: string
        invoiceUrl:
          description: URL for this invoice
          example: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
          type: string
        paymentTerms:
          description: Payment terms of the invoice
          example: Net 30
          type: string
        taxAmount:
          description: "Amount of tax, if any"
          example: 10
          format: double
          type: number
        totalAmount:
          description: Amount of Invoice
          example: 110
          format: double
          type: number
        totalAmountWithoutTax:
          description: Amount of Invoice without tax
          example: 100
          format: double
          type: number
      type: object
    JobConfig:
      example:
        activeDeadlineSeconds: 3600
        backoffLimit: 5
      properties:
        activeDeadlineSeconds:
          default: 3600
          description: The duration in seconds relative to the startTime that the
            job may be active before the system tries to terminate it
          example: 3600
          format: int64
          type: integer
        backoffLimit:
          default: 5
          description: The number of retries before marking the job as failed
          example: 5
          format: int32
          type: integer
      type: object
    JobMetric:
      example:
        additionalData:
          completionStatus: Succeeded
          retries: 2
        endTime: 2021-09-01T01:00:00Z
        metricType: cpu_core_seconds
        startTime: 2021-09-01T00:00:00Z
        value: 120.5
      properties:
        additionalData:
          additionalProperties: true
          description: Additional metadata about the job
          example:
            completionStatus: Succeeded
            retries: 2
          type: object
        endTime:
          description: When the job completed
          example: 2021-09-01T01:00:00Z
          type: string
        metricType:
          description: Type of job metric being tracked
          example: cpu_core_seconds|memory_mb_seconds
          type: string
        startTime:
          description: When the job started running
          example: 2021-09-01T00:00:00Z
          type: string
        value:
          description: Value of the metric
          example: 120.5
          format: double
          type: number
      required:
      - metricType
      - startTime
      - value
      type: object
    KubernetesDashboardEndpoint:
      example:
        dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
        deploymentCellID: hc-12345678
      properties:
        dashboardEndpoint:
          default: ""
          description: The dashboard endpoint
          example: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
          type: string
        deploymentCellID:
          default: ""
          description: The deployment cell ID
          example: hc-12345678
          type: string
      type: object
    KustomizeConfiguration:
      example:
        endpointConfiguration:
          admin:
            host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
            networkingType: PRIVATE
            ports:
            - 8080
            - 8081
            primary: false
          cluster:
            host: https://my-endpoint.com
            networkingType: PUBLIC
            ports:
            - 8080
            - 8081
            primary: true
        gitConfiguration:
          accessToken: my-token
          commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
          referenceName: tags/v1.0.0
          repositoryUrl: https://github.com/username/myrepo
          userName: my-user
        helmChartDependencies:
        - chartName: cert-manager
          chartVersion: v1.5.3
        - chartName: nginx-ingress
          chartVersion: v0.48.1
        - chartName: external-dns
          chartVersion: v0.7.0
        - chartName: cnpg-operator
          chartVersion: v0.23.1
        kustomizePath: /kustomize
      properties:
        endpointConfiguration:
          additionalProperties:
            $ref: '#/components/schemas/Endpoint'
          description: The endpoints from the Kustomize Deployment to expose to the
            customer
          example:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          type: object
        gitConfiguration:
          $ref: '#/components/schemas/GitConfiguration'
        helmChartDependencies:
          description: The helm chart dependencies for the CRD - Optional
          example:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          items:
            $ref: '#/components/schemas/OperatorHelmChartDependency'
          type: array
        kustomizePath:
          description: The path to the kustomize directory
          example: /kustomize
          type: string
      required:
      - kustomizePath
      type: object
    L4LoadBalancerConfiguration:
      example:
        ingressPortConfiguration:
        - associatedResourceIDs:
          - r-12345678
          - r-abcdef12
          backendPort: 8080
          ingressPort: 1234
        - associatedResourceIDs:
          - r-12345678
          - r-abcdef12
          backendPort: 8081
          ingressPort: 5678
        - associatedResourceIDs:
          - r-vwxybz12
          - r-poij122v
          backendPort: 8082
          ingressPort: 9012
      properties:
        ingressPortConfiguration:
          description: The ingress port configuration to configure on the load balancer
          example:
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8080
            ingressPort: 1234
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8081
            ingressPort: 5678
          - associatedResourceIDs:
            - r-vwxybz12
            - r-poij122v
            backendPort: 8082
            ingressPort: 9012
          items:
            $ref: '#/components/schemas/BackendPortConfiguration'
          type: array
      type: object
    L7LoadBalancerConfiguration:
      example:
        paths:
        - associatedResourceID: r-12345678
          path: /path
          port: 8080
      properties:
        paths:
          description: The paths to configure on the load balancer
          example:
          - associatedResourceID: r-12345678
            path: /path
            port: 8080
          items:
            $ref: '#/components/schemas/LoadBalancerPathConfiguration'
          type: array
      type: object
    Limits:
      description: Limit of a parameter
      example:
        max: Voluptatum asperiores itaque aperiam.
        maxLength: Consequuntur consequatur.
        min: Nesciunt laborum tenetur ipsa.
        minLength: Provident omnis et iste.
      properties:
        max:
          description: Maximum value for an integer or floating-point parameter
          example: Eos quibusdam.
          type: string
        maxLength:
          description: Maximum length of a string parameter
          example: Non harum autem earum doloremque.
          type: string
        min:
          description: Minimum value for an integer or floating-point parameter
          example: Deserunt et non.
          type: string
        minLength:
          description: Minimum length of a string parameter
          example: Sed molestias modi error fugiat.
          type: string
      type: object
    List:
      example:
        token: wfk
      properties:
        token:
          description: JWT token used to perform authorization
          example: b9
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListAccountConfigRequest:
      example:
        cloudProviderName: aws
        token: adb
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        token:
          description: JWT token used to perform authorization
          example: 6t
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - token
      type: object
    ListAccountConfigResult:
      description: List of Account Config IDs
      example:
        accountConfigs:
        - awsAccountID: "123456789012"
          awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          byoaInstanceIDs:
          - instance-12345678
          - instance-abcdefgh
          cloudProviderId: infra-12345678
          description: An AWS account hosting multiple dev environments
          gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
          id: ac-12345678
          name: Dev AWS account
          status: READY
          statusMessage: Account is ready
        - awsAccountID: "123456789012"
          awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          byoaInstanceIDs:
          - instance-12345678
          - instance-abcdefgh
          cloudProviderId: infra-12345678
          description: An AWS account hosting multiple dev environments
          gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
          id: ac-12345678
          name: Dev AWS account
          status: READY
          statusMessage: Account is ready
        - awsAccountID: "123456789012"
          awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          byoaInstanceIDs:
          - instance-12345678
          - instance-abcdefgh
          cloudProviderId: infra-12345678
          description: An AWS account hosting multiple dev environments
          gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
          id: ac-12345678
          name: Dev AWS account
          status: READY
          statusMessage: Account is ready
        ids:
        - ac-12345678
        - ac-abcdefgh
        - ac-1234efgh
        nextPageToken: next-token
      properties:
        accountConfigs:
          description: The list of account configs
          example:
          - awsAccountID: "123456789012"
            awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
            awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
            azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            byoaInstanceIDs:
            - instance-12345678
            - instance-abcdefgh
            cloudProviderId: infra-12345678
            description: An AWS account hosting multiple dev environments
            gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
            id: ac-12345678
            name: Dev AWS account
            status: READY
            statusMessage: Account is ready
          - awsAccountID: "123456789012"
            awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
            awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
            azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            byoaInstanceIDs:
            - instance-12345678
            - instance-abcdefgh
            cloudProviderId: infra-12345678
            description: An AWS account hosting multiple dev environments
            gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
            id: ac-12345678
            name: Dev AWS account
            status: READY
            statusMessage: Account is ready
          items:
            $ref: '#/components/schemas/DescribeAccountConfigResult'
          type: array
        ids:
          example:
          - ac-12345678
          - ac-abcdefgh
          - ac-1234efgh
          items:
            description: ID of an Account Config
            example: Maiores eum aperiam sunt.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      type: object
    ListActionHooksRequest:
      example:
        id: r-12345678
        serviceId: s-12345678
        token: c9w
      properties:
        id:
          description: ID of a resource
          example: Aperiam dolorum veritatis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "6"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ListActionHooksResult:
      example:
        hooks:
        - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
          customCommand:
          - /bin/sh
          - -c
          customImage: my-custom-image:latest
          scope: CLUSTER
          type: ADD
        - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
          customCommand:
          - /bin/sh
          - -c
          customImage: my-custom-image:latest
          scope: CLUSTER
          type: ADD
        - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
          customCommand:
          - /bin/sh
          - -c
          customImage: my-custom-image:latest
          scope: CLUSTER
          type: ADD
      properties:
        hooks:
          description: The list of action hooks
          example:
          - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
            customCommand:
            - /bin/sh
            - -c
            customImage: my-custom-image:latest
            scope: CLUSTER
            type: ADD
          - commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
            customCommand:
            - /bin/sh
            - -c
            customImage: my-custom-image:latest
            scope: CLUSTER
            type: ADD
          items:
            $ref: '#/components/schemas/ActionHook'
          type: array
      required:
      - hooks
      type: object
    ListAllAuditEventsRequest:
      example:
        endDate: 2024-01-01T10:00:00Z
        environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV
        eventSourceTypes:
        - Nihil qui ad id molestiae.
        - Assumenda saepe incidunt voluptatem ut omnis illum.
        - Facere nihil cumque.
        instanceID: instance-12345678
        nextPageToken: token
        pageSize: 10
        serviceID: s-123456
        startDate: 2023-01-01T10:00:00Z
        token: "1"
      properties:
        endDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        eventSourceTypes:
          description: The event types to filter by
          example:
          - Maiores fugit et aut facilis ipsum.
          - Tempora est optio pariatur qui.
          items:
            example: Dolores sint excepturi at deleniti.
            type: string
          type: array
        instanceID:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        startDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        token:
          description: JWT token used to perform authorization
          example: t8
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListAllResourceInstancesRequest:
      example:
        environmentType: DEV
        token: e
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        token:
          description: JWT token used to perform authorization
          example: u9l
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListAllResourceInstancesResult:
      example:
        nextPageToken: next-token
        resourceInstances:
        - active: true
          autoscalingEnabled: true
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          backupStatus:
            backupPeriodInHours: 2
            backupRetentionInDays: 7
            earliestRestoreTime: 2021-09-01T00:00:00Z
            lastBackupTime: 2021-09-01T00:00:00Z
          cloud_provider: aws
          created_at: 2023-01-10T00:00:00Z
          createdByUserId: user-12345678
          createdByUserName: John Doe
          currentReplicas: "2"
          customNetworkDetail:
            cidr: 10.177.0.0/16
            id: n-12345678
            name: Prod us-east-1
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              isJob: false
              jobMetrics:
              - additionalData:
                  exitCode: 0
                  status: Succeeded
                endTime: 2023-01-01T10:05:00Z
                metricType: cpu_core_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 120.5
              - additionalData:
                  peakMemoryUsage: 512MB
                endTime: 2023-01-01T10:05:00Z
                metricType: memory_mb_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 2560
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: primary
              resourceName: Primary MySQL Instance
          externalPayerId: external-payer-id-1234
          gcpProjectID: my-project
          highAvailability: true
          id: instance-abcd1234
          instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          last_modified_at: 2023-01-20T00:00:00Z
          maintenanceTasks:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          maxReplicas: "1"
          minReplicas: "1"
          network_type: PUBLIC
          productTierFeatures:
            LOGS:
              auth:
                password: px3c4d5f6g7h8i
                username: abcd1234
              enabled: true
              websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
            METRICS:
              enabled: false
          region: us-east-1
          resourceID: r-abcd1234
          result_params:
            param1: value1
            param2: value2
          serverlessEnabled: true
          status: RUNNING
          subscriptionId: sub-abcd1234
          subscriptionLicense:
            certificateBase64: public-cert
            expirationDate: 2024-01-01T10:00:00Z
            licenseBase64: license-file
          subscriptionStatus: ACTIVE
        - active: true
          autoscalingEnabled: true
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          backupStatus:
            backupPeriodInHours: 2
            backupRetentionInDays: 7
            earliestRestoreTime: 2021-09-01T00:00:00Z
            lastBackupTime: 2021-09-01T00:00:00Z
          cloud_provider: aws
          created_at: 2023-01-10T00:00:00Z
          createdByUserId: user-12345678
          createdByUserName: John Doe
          currentReplicas: "2"
          customNetworkDetail:
            cidr: 10.177.0.0/16
            id: n-12345678
            name: Prod us-east-1
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              isJob: false
              jobMetrics:
              - additionalData:
                  exitCode: 0
                  status: Succeeded
                endTime: 2023-01-01T10:05:00Z
                metricType: cpu_core_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 120.5
              - additionalData:
                  peakMemoryUsage: 512MB
                endTime: 2023-01-01T10:05:00Z
                metricType: memory_mb_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 2560
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: primary
              resourceName: Primary MySQL Instance
          externalPayerId: external-payer-id-1234
          gcpProjectID: my-project
          highAvailability: true
          id: instance-abcd1234
          instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          last_modified_at: 2023-01-20T00:00:00Z
          maintenanceTasks:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          maxReplicas: "1"
          minReplicas: "1"
          network_type: PUBLIC
          productTierFeatures:
            LOGS:
              auth:
                password: px3c4d5f6g7h8i
                username: abcd1234
              enabled: true
              websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
            METRICS:
              enabled: false
          region: us-east-1
          resourceID: r-abcd1234
          result_params:
            param1: value1
            param2: value2
          serverlessEnabled: true
          status: RUNNING
          subscriptionId: sub-abcd1234
          subscriptionLicense:
            certificateBase64: public-cert
            expirationDate: 2024-01-01T10:00:00Z
            licenseBase64: license-file
          subscriptionStatus: ACTIVE
        - active: true
          autoscalingEnabled: true
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          backupStatus:
            backupPeriodInHours: 2
            backupRetentionInDays: 7
            earliestRestoreTime: 2021-09-01T00:00:00Z
            lastBackupTime: 2021-09-01T00:00:00Z
          cloud_provider: aws
          created_at: 2023-01-10T00:00:00Z
          createdByUserId: user-12345678
          createdByUserName: John Doe
          currentReplicas: "2"
          customNetworkDetail:
            cidr: 10.177.0.0/16
            id: n-12345678
            name: Prod us-east-1
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              isJob: false
              jobMetrics:
              - additionalData:
                  exitCode: 0
                  status: Succeeded
                endTime: 2023-01-01T10:05:00Z
                metricType: cpu_core_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 120.5
              - additionalData:
                  peakMemoryUsage: 512MB
                endTime: 2023-01-01T10:05:00Z
                metricType: memory_mb_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 2560
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: primary
              resourceName: Primary MySQL Instance
          externalPayerId: external-payer-id-1234
          gcpProjectID: my-project
          highAvailability: true
          id: instance-abcd1234
          instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          last_modified_at: 2023-01-20T00:00:00Z
          maintenanceTasks:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          maxReplicas: "1"
          minReplicas: "1"
          network_type: PUBLIC
          productTierFeatures:
            LOGS:
              auth:
                password: px3c4d5f6g7h8i
                username: abcd1234
              enabled: true
              websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
            METRICS:
              enabled: false
          region: us-east-1
          resourceID: r-abcd1234
          result_params:
            param1: value1
            param2: value2
          serverlessEnabled: true
          status: RUNNING
          subscriptionId: sub-abcd1234
          subscriptionLicense:
            certificateBase64: public-cert
            expirationDate: 2024-01-01T10:00:00Z
            licenseBase64: license-file
          subscriptionStatus: ACTIVE
        - active: true
          autoscalingEnabled: true
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          backupStatus:
            backupPeriodInHours: 2
            backupRetentionInDays: 7
            earliestRestoreTime: 2021-09-01T00:00:00Z
            lastBackupTime: 2021-09-01T00:00:00Z
          cloud_provider: aws
          created_at: 2023-01-10T00:00:00Z
          createdByUserId: user-12345678
          createdByUserName: John Doe
          currentReplicas: "2"
          customNetworkDetail:
            cidr: 10.177.0.0/16
            id: n-12345678
            name: Prod us-east-1
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              isJob: false
              jobMetrics:
              - additionalData:
                  exitCode: 0
                  status: Succeeded
                endTime: 2023-01-01T10:05:00Z
                metricType: cpu_core_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 120.5
              - additionalData:
                  peakMemoryUsage: 512MB
                endTime: 2023-01-01T10:05:00Z
                metricType: memory_mb_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 2560
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: primary
              resourceName: Primary MySQL Instance
          externalPayerId: external-payer-id-1234
          gcpProjectID: my-project
          highAvailability: true
          id: instance-abcd1234
          instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          last_modified_at: 2023-01-20T00:00:00Z
          maintenanceTasks:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          maxReplicas: "1"
          minReplicas: "1"
          network_type: PUBLIC
          productTierFeatures:
            LOGS:
              auth:
                password: px3c4d5f6g7h8i
                username: abcd1234
              enabled: true
              websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
            METRICS:
              enabled: false
          region: us-east-1
          resourceID: r-abcd1234
          result_params:
            param1: value1
            param2: value2
          serverlessEnabled: true
          status: RUNNING
          subscriptionId: sub-abcd1234
          subscriptionLicense:
            certificateBase64: public-cert
            expirationDate: 2024-01-01T10:00:00Z
            licenseBase64: license-file
          subscriptionStatus: ACTIVE
      properties:
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        resourceInstances:
          description: The list of resource instances
          example:
          - active: true
            autoscalingEnabled: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            backupStatus:
              backupPeriodInHours: 2
              backupRetentionInDays: 7
              earliestRestoreTime: 2021-09-01T00:00:00Z
              lastBackupTime: 2021-09-01T00:00:00Z
            cloud_provider: aws
            created_at: 2023-01-10T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            currentReplicas: "2"
            customNetworkDetail:
              cidr: 10.177.0.0/16
              id: n-12345678
              name: Prod us-east-1
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                isJob: false
                jobMetrics:
                - additionalData:
                    exitCode: 0
                    status: Succeeded
                  endTime: 2023-01-01T10:05:00Z
                  metricType: cpu_core_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 120.5
                - additionalData:
                    peakMemoryUsage: 512MB
                  endTime: 2023-01-01T10:05:00Z
                  metricType: memory_mb_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 2560
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: primary
                resourceName: Primary MySQL Instance
            externalPayerId: external-payer-id-1234
            gcpProjectID: my-project
            highAvailability: true
            id: instance-abcd1234
            instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            last_modified_at: 2023-01-20T00:00:00Z
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            maxReplicas: "1"
            minReplicas: "1"
            network_type: PUBLIC
            productTierFeatures:
              LOGS:
                auth:
                  password: px3c4d5f6g7h8i
                  username: abcd1234
                enabled: true
                websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
              METRICS:
                enabled: false
            region: us-east-1
            resourceID: r-abcd1234
            result_params:
              param1: value1
              param2: value2
            serverlessEnabled: true
            status: RUNNING
            subscriptionId: sub-abcd1234
            subscriptionLicense:
              certificateBase64: public-cert
              expirationDate: 2024-01-01T10:00:00Z
              licenseBase64: license-file
            subscriptionStatus: ACTIVE
          - active: true
            autoscalingEnabled: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            backupStatus:
              backupPeriodInHours: 2
              backupRetentionInDays: 7
              earliestRestoreTime: 2021-09-01T00:00:00Z
              lastBackupTime: 2021-09-01T00:00:00Z
            cloud_provider: aws
            created_at: 2023-01-10T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            currentReplicas: "2"
            customNetworkDetail:
              cidr: 10.177.0.0/16
              id: n-12345678
              name: Prod us-east-1
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                isJob: false
                jobMetrics:
                - additionalData:
                    exitCode: 0
                    status: Succeeded
                  endTime: 2023-01-01T10:05:00Z
                  metricType: cpu_core_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 120.5
                - additionalData:
                    peakMemoryUsage: 512MB
                  endTime: 2023-01-01T10:05:00Z
                  metricType: memory_mb_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 2560
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: primary
                resourceName: Primary MySQL Instance
            externalPayerId: external-payer-id-1234
            gcpProjectID: my-project
            highAvailability: true
            id: instance-abcd1234
            instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            last_modified_at: 2023-01-20T00:00:00Z
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            maxReplicas: "1"
            minReplicas: "1"
            network_type: PUBLIC
            productTierFeatures:
              LOGS:
                auth:
                  password: px3c4d5f6g7h8i
                  username: abcd1234
                enabled: true
                websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
              METRICS:
                enabled: false
            region: us-east-1
            resourceID: r-abcd1234
            result_params:
              param1: value1
              param2: value2
            serverlessEnabled: true
            status: RUNNING
            subscriptionId: sub-abcd1234
            subscriptionLicense:
              certificateBase64: public-cert
              expirationDate: 2024-01-01T10:00:00Z
              licenseBase64: license-file
            subscriptionStatus: ACTIVE
          - active: true
            autoscalingEnabled: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            backupStatus:
              backupPeriodInHours: 2
              backupRetentionInDays: 7
              earliestRestoreTime: 2021-09-01T00:00:00Z
              lastBackupTime: 2021-09-01T00:00:00Z
            cloud_provider: aws
            created_at: 2023-01-10T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            currentReplicas: "2"
            customNetworkDetail:
              cidr: 10.177.0.0/16
              id: n-12345678
              name: Prod us-east-1
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                isJob: false
                jobMetrics:
                - additionalData:
                    exitCode: 0
                    status: Succeeded
                  endTime: 2023-01-01T10:05:00Z
                  metricType: cpu_core_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 120.5
                - additionalData:
                    peakMemoryUsage: 512MB
                  endTime: 2023-01-01T10:05:00Z
                  metricType: memory_mb_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 2560
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: primary
                resourceName: Primary MySQL Instance
            externalPayerId: external-payer-id-1234
            gcpProjectID: my-project
            highAvailability: true
            id: instance-abcd1234
            instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            last_modified_at: 2023-01-20T00:00:00Z
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            maxReplicas: "1"
            minReplicas: "1"
            network_type: PUBLIC
            productTierFeatures:
              LOGS:
                auth:
                  password: px3c4d5f6g7h8i
                  username: abcd1234
                enabled: true
                websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
              METRICS:
                enabled: false
            region: us-east-1
            resourceID: r-abcd1234
            result_params:
              param1: value1
              param2: value2
            serverlessEnabled: true
            status: RUNNING
            subscriptionId: sub-abcd1234
            subscriptionLicense:
              certificateBase64: public-cert
              expirationDate: 2024-01-01T10:00:00Z
              licenseBase64: license-file
            subscriptionStatus: ACTIVE
          items:
            $ref: '#/components/schemas/DescribeResourceInstanceResult'
          type: array
      required:
      - resourceInstances
      type: object
    ListAllSubscriptionUsersRequest:
      example:
        environmentType: DEV
        token: qc
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        token:
          description: JWT token used to perform authorization
          example: "09"
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListAllSubscriptionUsersResult:
      example:
        subscriptionUsers:
        - email: abc@gmail.com
          name: John Doe
          roleType: reader
          userId: user-abcd1234
      properties:
        subscriptionUsers:
          description: The users associated with the corresponding subscription
          example:
          - email: abc@gmail.com
            name: John Doe
            roleType: reader
            userId: user-abcd1234
          items:
            $ref: '#/components/schemas/SubscriptionUsers'
          type: array
      required:
      - subscriptionUsers
      type: object
    ListAssociatedResourcesRequest:
      example:
        id: ic-12345678
        serviceId: s-12345678
        token: z
      properties:
        id:
          description: ID of an Infra Config
          example: Aut aut aperiam.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: xdx
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ListAssociatedResourcesResult:
      example:
        id: ic-12345678
        resourceIds:
        - r-12345678
        - r-abcdefgh
        serviceId: s-12345678
      properties:
        id:
          description: ID of an Infra Config
          example: Accusantium vel et temporibus quibusdam possimus.
          type: string
        resourceIds:
          description: The resources associated with the infra config
          example:
          - r-12345678
          - r-abcdefgh
          items:
            description: ID of a resource
            example: Omnis rerum magnam minima.
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - id
      - resourceIds
      - serviceId
      type: object
    ListAuditEventsForInstanceRequest:
      example:
        instanceId: instance-12345678
        subscriptionId: sub-abcd1234
        token: o
      properties:
        instanceId:
          description: The ID of the resource instance
          example: instance-12345678
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: c6
          minLength: 1
          type: string
      required:
      - instanceId
      - token
      type: object
    ListAuditEventsForServicePlanRequest:
      example:
        productTierKey: premium
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: nv
      properties:
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Omnis excepturi.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: 4ib
          minLength: 1
          type: string
      required:
      - productTierKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    ListAuditEventsResult:
      example:
        events:
        - eventSource: "Customer, Infra or Maintenance"
          id: event-12345678
          message: instance-abcd1234 created
          orgId: org-12345678
          orgName: Acme Corporation
          resourceInstanceId: instance-abcd1234
          resourceName: Galera
          subscriptionId: sub-abcd1234
          time: 2023-01-10T00:00:00Z
          userId: user-12345678
          userName: John Doe
          workflowFailures:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
        - eventSource: "Customer, Infra or Maintenance"
          id: event-12345678
          message: instance-abcd1234 created
          orgId: org-12345678
          orgName: Acme Corporation
          resourceInstanceId: instance-abcd1234
          resourceName: Galera
          subscriptionId: sub-abcd1234
          time: 2023-01-10T00:00:00Z
          userId: user-12345678
          userName: John Doe
          workflowFailures:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
        - eventSource: "Customer, Infra or Maintenance"
          id: event-12345678
          message: instance-abcd1234 created
          orgId: org-12345678
          orgName: Acme Corporation
          resourceInstanceId: instance-abcd1234
          resourceName: Galera
          subscriptionId: sub-abcd1234
          time: 2023-01-10T00:00:00Z
          userId: user-12345678
          userName: John Doe
          workflowFailures:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
        - eventSource: "Customer, Infra or Maintenance"
          id: event-12345678
          message: instance-abcd1234 created
          orgId: org-12345678
          orgName: Acme Corporation
          resourceInstanceId: instance-abcd1234
          resourceName: Galera
          subscriptionId: sub-abcd1234
          time: 2023-01-10T00:00:00Z
          userId: user-12345678
          userName: John Doe
          workflowFailures:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
        ids:
        - event-12345678
        nextPageToken: token
      properties:
        events:
          description: The list of events
          example:
          - eventSource: "Customer, Infra or Maintenance"
            id: event-12345678
            message: instance-abcd1234 created
            orgId: org-12345678
            orgName: Acme Corporation
            resourceInstanceId: instance-abcd1234
            resourceName: Galera
            subscriptionId: sub-abcd1234
            time: 2023-01-10T00:00:00Z
            userId: user-12345678
            userName: John Doe
            workflowFailures:
            - eventTime: 2020-01-01T00:00:00Z
              message: Bootstrap failed for reason X
            - eventTime: 2020-01-01T00:01:00Z
              message: Compute failed for reason Y
          - eventSource: "Customer, Infra or Maintenance"
            id: event-12345678
            message: instance-abcd1234 created
            orgId: org-12345678
            orgName: Acme Corporation
            resourceInstanceId: instance-abcd1234
            resourceName: Galera
            subscriptionId: sub-abcd1234
            time: 2023-01-10T00:00:00Z
            userId: user-12345678
            userName: John Doe
            workflowFailures:
            - eventTime: 2020-01-01T00:00:00Z
              message: Bootstrap failed for reason X
            - eventTime: 2020-01-01T00:01:00Z
              message: Compute failed for reason Y
          - eventSource: "Customer, Infra or Maintenance"
            id: event-12345678
            message: instance-abcd1234 created
            orgId: org-12345678
            orgName: Acme Corporation
            resourceInstanceId: instance-abcd1234
            resourceName: Galera
            subscriptionId: sub-abcd1234
            time: 2023-01-10T00:00:00Z
            userId: user-12345678
            userName: John Doe
            workflowFailures:
            - eventTime: 2020-01-01T00:00:00Z
              message: Bootstrap failed for reason X
            - eventTime: 2020-01-01T00:01:00Z
              message: Compute failed for reason Y
          - eventSource: "Customer, Infra or Maintenance"
            id: event-12345678
            message: instance-abcd1234 created
            orgId: org-12345678
            orgName: Acme Corporation
            resourceInstanceId: instance-abcd1234
            resourceName: Galera
            subscriptionId: sub-abcd1234
            time: 2023-01-10T00:00:00Z
            userId: user-12345678
            userName: John Doe
            workflowFailures:
            - eventTime: 2020-01-01T00:00:00Z
              message: Bootstrap failed for reason X
            - eventTime: 2020-01-01T00:01:00Z
              message: Compute failed for reason Y
          items:
            $ref: '#/components/schemas/DescribeAuditEventResult'
          type: array
        ids:
          description: The list of event IDs
          example:
          - event-12345678
          items:
            description: ID of a Event
            example: Dolor id ut.
            type: string
          type: array
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
      required:
      - events
      - ids
      type: object
    ListAvailabilityZonesByRegionCodeRequest:
      example:
        cloudProviderName: aws
        regionCode: us-east-1
        token: wnb
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        regionCode:
          example: us-east-1
          type: string
        token:
          description: JWT token used to perform authorization
          example: l
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - regionCode
      - token
      type: object
    ListAvailabilityZonesByRegionCodeResult:
      example:
        ids:
        - az-12345678
        - az-87654321
        nextPageToken: next-token
      properties:
        ids:
          example:
          - az-12345678
          - az-87654321
          items:
            description: ID of an AZ
            example: Nemo qui qui alias odit laudantium reiciendis.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListAvailabilityZonesRequest:
      example:
        cloudProviderName: aws
        token: "8"
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        token:
          description: JWT token used to perform authorization
          example: vws
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - token
      type: object
    ListAvailabilityZonesResult:
      example:
        ids:
        - az-12345678
        - az-87654321
        nextPageToken: next-token
      properties:
        ids:
          example:
          - az-12345678
          - az-87654321
          items:
            description: ID of an AZ
            example: Voluptas qui et laborum suscipit.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListBYOAConfigRequest:
      example:
        cloudProviderName: aws
        token: 17m
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        token:
          description: JWT token used to perform authorization
          example: "97"
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - token
      type: object
    ListBYOAConfigRequest2:
      example:
        cloudProviderName: aws
      properties:
        cloudProviderName:
          description: Cloud Provider name to filter on
          example: aws
          type: string
      required:
      - cloudProviderName
      type: object
    ListBYOAConfigResult:
      description: List of BYOA Config IDs
      example:
        accountConfigs:
        - awsAccountID: "123456789012"
          awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          byoaInstanceIDs:
          - instance-12345678
          - instance-abcdefgh
          cloudProviderId: infra-12345678
          description: An AWS account hosting multiple dev environments
          gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
          id: ac-12345678
          name: Dev AWS account
          status: READY
          statusMessage: Account is ready
        - awsAccountID: "123456789012"
          awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          byoaInstanceIDs:
          - instance-12345678
          - instance-abcdefgh
          cloudProviderId: infra-12345678
          description: An AWS account hosting multiple dev environments
          gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
          id: ac-12345678
          name: Dev AWS account
          status: READY
          statusMessage: Account is ready
        ids:
        - ac-12345678
        - ac-abcdefgh
        - ac-1234efgh
        nextPageToken: next-token
      properties:
        accountConfigs:
          description: The list of account configs
          example:
          - awsAccountID: "123456789012"
            awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
            awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
            azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            byoaInstanceIDs:
            - instance-12345678
            - instance-abcdefgh
            cloudProviderId: infra-12345678
            description: An AWS account hosting multiple dev environments
            gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
            id: ac-12345678
            name: Dev AWS account
            status: READY
            statusMessage: Account is ready
          - awsAccountID: "123456789012"
            awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
            awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
            azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            byoaInstanceIDs:
            - instance-12345678
            - instance-abcdefgh
            cloudProviderId: infra-12345678
            description: An AWS account hosting multiple dev environments
            gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
            id: ac-12345678
            name: Dev AWS account
            status: READY
            statusMessage: Account is ready
          - awsAccountID: "123456789012"
            awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
            awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
            azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            byoaInstanceIDs:
            - instance-12345678
            - instance-abcdefgh
            cloudProviderId: infra-12345678
            description: An AWS account hosting multiple dev environments
            gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
            id: ac-12345678
            name: Dev AWS account
            status: READY
            statusMessage: Account is ready
          - awsAccountID: "123456789012"
            awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
            awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
            azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            byoaInstanceIDs:
            - instance-12345678
            - instance-abcdefgh
            cloudProviderId: infra-12345678
            description: An AWS account hosting multiple dev environments
            gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
            id: ac-12345678
            name: Dev AWS account
            status: READY
            statusMessage: Account is ready
          items:
            $ref: '#/components/schemas/DescribeAccountConfigResult'
          type: array
        ids:
          example:
          - ac-12345678
          - ac-abcdefgh
          - ac-1234efgh
          items:
            description: ID of an Account Config
            example: Perspiciatis quae nihil nam non dolores sequi.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      type: object
    ListCloudProvidersRequest:
      example:
        productTierId: pt-12345678
        serviceId: s-12345678
        serviceModelId: sm-12345678
        token: 5g
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Tenetur praesentium.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Dolorum deleniti necessitatibus optio consequatur tenetur sit.
          type: string
        token:
          description: JWT token used to perform authorization
          example: l
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListCloudProvidersResult:
      example:
        ids:
        - infra-12345678
        - infra-87654321
        nextPageToken: next-token
      properties:
        ids:
          example:
          - infra-12345678
          - infra-87654321
          items:
            description: ID of an CloudProvider
            example: Dicta maiores id eius eum.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListComputeConfigsRequest:
      example:
        managed: false
        serviceId: s-12345678
        token: g
      properties:
        managed:
          description: Is compute config managed by omnistrate
          example: false
          type: boolean
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: we
          minLength: 1
          type: string
      required:
      - serviceId
      - token
      type: object
    ListComputeConfigsResult:
      example:
        ids:
        - cc-12345678
        - cc-abcdefgh
        - cc-1234efgh
        nextPageToken: next-token
      properties:
        ids:
          description: The list of compute config IDs
          example:
          - cc-12345678
          - cc-abcdefgh
          - cc-1234efgh
          items:
            description: ID of a Compute Config
            example: Eaque aut id rerum aut.
            type: string
          type: array
        nextPageToken:
          description: The next page token
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListComputeInstanceTypesRequest:
      example:
        cloudProviderName: aws
        serviceId: s-12345678
        token: d
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: bkr
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - serviceId
      - token
      type: object
    ListComputeInstanceTypesResult:
      example:
        nextPageToken: next-token
        types:
        - m5.xlarge
        - c5.xlarge
        - r5.xlarge
      properties:
        nextPageToken:
          description: The next page token
          example: next-token
          type: string
        types:
          description: The list of compute instance type IDs
          example:
          - m5.xlarge
          - c5.xlarge
          - r5.xlarge
          items:
            example: Voluptatem pariatur nam.
            type: string
          type: array
      required:
      - types
      type: object
    ListCustomDomainRequest:
      example:
        token: d
      properties:
        token:
          description: JWT token used to perform authorization
          example: 9p0
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListCustomDomainResult:
      description: List of custom domain IDs
      example:
        CustomDomains:
        - customDomain: mydomain.dev
          description: Description of the domain
          id: cd-12345678
          name: Dev domain
          route53Configuration:
            awsAccountID: "123456789012"
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
          status: READY
          statusMessage: Account is ready
        - customDomain: mydomain.dev
          description: Description of the domain
          id: cd-12345678
          name: Dev domain
          route53Configuration:
            awsAccountID: "123456789012"
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
          status: READY
          statusMessage: Account is ready
        - customDomain: mydomain.dev
          description: Description of the domain
          id: cd-12345678
          name: Dev domain
          route53Configuration:
            awsAccountID: "123456789012"
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
          status: READY
          statusMessage: Account is ready
        - customDomain: mydomain.dev
          description: Description of the domain
          id: cd-12345678
          name: Dev domain
          route53Configuration:
            awsAccountID: "123456789012"
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
          status: READY
          statusMessage: Account is ready
        ids:
        - cd-12345678
        - cd-abcdefgh
        - cd-1234efgh
        nextPageToken: next-token
      properties:
        CustomDomains:
          description: The list of custom domains
          example:
          - customDomain: mydomain.dev
            description: Description of the domain
            id: cd-12345678
            name: Dev domain
            route53Configuration:
              awsAccountID: "123456789012"
              awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
            status: READY
            statusMessage: Account is ready
          - customDomain: mydomain.dev
            description: Description of the domain
            id: cd-12345678
            name: Dev domain
            route53Configuration:
              awsAccountID: "123456789012"
              awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
            status: READY
            statusMessage: Account is ready
          - customDomain: mydomain.dev
            description: Description of the domain
            id: cd-12345678
            name: Dev domain
            route53Configuration:
              awsAccountID: "123456789012"
              awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
            status: READY
            statusMessage: Account is ready
          - customDomain: mydomain.dev
            description: Description of the domain
            id: cd-12345678
            name: Dev domain
            route53Configuration:
              awsAccountID: "123456789012"
              awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
            status: READY
            statusMessage: Account is ready
          items:
            $ref: '#/components/schemas/DescribeCustomDomainResult'
          type: array
        ids:
          example:
          - cd-12345678
          - cd-abcdefgh
          - cd-1234efgh
          items:
            description: ID of an Custom Domain
            example: Molestiae autem.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      type: object
    ListCustomNetworksRequest:
      example:
        cloudProviderName: aws
        cloudProviderRegion: us-east-1
        customNetworksOnly: false
        token: "n"
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        cloudProviderRegion:
          description: The region of the cloud provider that the instance is running
            in.
          example: us-east-1
          type: string
        customNetworksOnly:
          description: "Flag indicating whether to return only custom networks, or\
            \ to include default and imported networks as well"
          example: false
          type: boolean
        token:
          description: JWT token used to perform authorization
          example: "7"
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListCustomNetworksResult:
      example:
        customNetworks:
        - cidr: 10.0.0.0/16
          cloudProviderName: aws
          cloudProviderRegion: us-east-1
          id: n-12345678
          name: Prod us-east-1
          networkDefinitionType: Custom
          networkFeaturesConfiguration:
            isPrivateLinkEnabled: false
          networkInstances:
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          owningUserId: user-12345678
          owningUserName: John Doe
        - cidr: 10.0.0.0/16
          cloudProviderName: aws
          cloudProviderRegion: us-east-1
          id: n-12345678
          name: Prod us-east-1
          networkDefinitionType: Custom
          networkFeaturesConfiguration:
            isPrivateLinkEnabled: false
          networkInstances:
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          owningUserId: user-12345678
          owningUserName: John Doe
        - cidr: 10.0.0.0/16
          cloudProviderName: aws
          cloudProviderRegion: us-east-1
          id: n-12345678
          name: Prod us-east-1
          networkDefinitionType: Custom
          networkFeaturesConfiguration:
            isPrivateLinkEnabled: false
          networkInstances:
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          owningUserId: user-12345678
          owningUserName: John Doe
        - cidr: 10.0.0.0/16
          cloudProviderName: aws
          cloudProviderRegion: us-east-1
          id: n-12345678
          name: Prod us-east-1
          networkDefinitionType: Custom
          networkFeaturesConfiguration:
            isPrivateLinkEnabled: false
          networkInstances:
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          owningUserId: user-12345678
          owningUserName: John Doe
      properties:
        customNetworks:
          description: List of custom networks
          example:
          - cidr: 10.0.0.0/16
            cloudProviderName: aws
            cloudProviderRegion: us-east-1
            id: n-12345678
            name: Prod us-east-1
            networkDefinitionType: Custom
            networkFeaturesConfiguration:
              isPrivateLinkEnabled: false
            networkInstances:
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            owningUserId: user-12345678
            owningUserName: John Doe
          - cidr: 10.0.0.0/16
            cloudProviderName: aws
            cloudProviderRegion: us-east-1
            id: n-12345678
            name: Prod us-east-1
            networkDefinitionType: Custom
            networkFeaturesConfiguration:
              isPrivateLinkEnabled: false
            networkInstances:
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            owningUserId: user-12345678
            owningUserName: John Doe
          - cidr: 10.0.0.0/16
            cloudProviderName: aws
            cloudProviderRegion: us-east-1
            id: n-12345678
            name: Prod us-east-1
            networkDefinitionType: Custom
            networkFeaturesConfiguration:
              isPrivateLinkEnabled: false
            networkInstances:
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            owningUserId: user-12345678
            owningUserName: John Doe
          items:
            $ref: '#/components/schemas/CustomNetwork'
          type: array
      required:
      - customNetworks
      type: object
    ListDependentResourcesRequest:
      example:
        id: r-12345678
        serviceId: s-12345678
        token: x03
      properties:
        id:
          description: ID of a resource
          example: Maxime aliquam perspiciatis et et doloremque.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: lni
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ListDependentResourcesResult:
      example:
        id: r-12345678
        ids:
        - r-12345678
        - r-abcdefgh
        - r-1234abcd
        nextPageToken: next-token
        serviceId: s-12345678
      properties:
        id:
          description: ID of a resource
          example: Magnam aut porro nostrum in.
          type: string
        ids:
          description: List of dependent resource IDs
          example:
          - r-12345678
          - r-abcdefgh
          - r-1234abcd
          items:
            description: ID of a resource
            example: Consequuntur adipisci pariatur vero exercitationem tempore esse.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - ids
      type: object
    ListDeploymentConfigsRequest:
      example:
        token: 7d
      properties:
        token:
          description: JWT token used to perform authorization
          example: "8"
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListDeploymentConfigsResult:
      example:
        ids:
        - dc-12345678
        nextPageToken: next-token
      properties:
        ids:
          description: The deployment config IDs
          example:
          - dc-12345678
          items:
            description: ID of a Deployment Config
            example: Omnis autem magnam sit sapiente dignissimos debitis.
            type: string
          type: array
        nextPageToken:
          description: The next token to use for pagination
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListEndCustomerEvents:
      example:
        environmentType: DEV
        token: ty
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        token:
          description: JWT token used to perform authorization
          example: e43
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListEndCustomerEventsResult:
      example:
        events:
        - eventID: e-123456
          eventPayload:
            eventType: CustomerSignUp
            token: "123456"
          eventType: InviteUser
          orgID: o-123456
          orgName: Acme Corp
          orgURL: https://acme.com
          priority: Critical
          time: 2023-01-10T00:00:00Z
          userEmail: user@example.com
          userID: user-123456
          userName: user
        - eventID: e-123456
          eventPayload:
            eventType: CustomerSignUp
            token: "123456"
          eventType: InviteUser
          orgID: o-123456
          orgName: Acme Corp
          orgURL: https://acme.com
          priority: Critical
          time: 2023-01-10T00:00:00Z
          userEmail: user@example.com
          userID: user-123456
          userName: user
        - eventID: e-123456
          eventPayload:
            eventType: CustomerSignUp
            token: "123456"
          eventType: InviteUser
          orgID: o-123456
          orgName: Acme Corp
          orgURL: https://acme.com
          priority: Critical
          time: 2023-01-10T00:00:00Z
          userEmail: user@example.com
          userID: user-123456
          userName: user
      properties:
        events:
          description: List of events
          example:
          - eventID: e-123456
            eventPayload:
              eventType: CustomerSignUp
              token: "123456"
            eventType: InviteUser
            orgID: o-123456
            orgName: Acme Corp
            orgURL: https://acme.com
            priority: Critical
            time: 2023-01-10T00:00:00Z
            userEmail: user@example.com
            userID: user-123456
            userName: user
          - eventID: e-123456
            eventPayload:
              eventType: CustomerSignUp
              token: "123456"
            eventType: InviteUser
            orgID: o-123456
            orgName: Acme Corp
            orgURL: https://acme.com
            priority: Critical
            time: 2023-01-10T00:00:00Z
            userEmail: user@example.com
            userID: user-123456
            userName: user
          items:
            $ref: '#/components/schemas/EndCustomerEvent'
          type: array
      required:
      - events
      type: object
    ListFilesRequest:
      example:
        id: r-12345678
        productTierId: pt-12345678
        productTierVersion: "1.0"
        serviceId: s-12345678
        token: va
      properties:
        id:
          description: ID of a resource
          example: Vel et.
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Et est quisquam sapiente molestiae debitis est.
          type: string
        productTierVersion:
          description: Version of the product tier
          example: "1.0"
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "3"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ListFilesResult:
      example:
        files:
        - description: A file to store the configuration for the resource
          fileId: f-12345678
          mountPath: /etc/config
          name: file.txt
          size: 1234
          type: Config
          uploadTime: 2023-01-10T00:00:00Z
          uploadedBy: user
        - description: A file to store the configuration for the resource
          fileId: f-12345678
          mountPath: /etc/config
          name: file.txt
          size: 1234
          type: Config
          uploadTime: 2023-01-10T00:00:00Z
          uploadedBy: user
        - description: A file to store the configuration for the resource
          fileId: f-12345678
          mountPath: /etc/config
          name: file.txt
          size: 1234
          type: Config
          uploadTime: 2023-01-10T00:00:00Z
          uploadedBy: user
      properties:
        files:
          description: List of files
          example:
          - description: A file to store the configuration for the resource
            fileId: f-12345678
            mountPath: /etc/config
            name: file.txt
            size: 1234
            type: Config
            uploadTime: 2023-01-10T00:00:00Z
            uploadedBy: user
          - description: A file to store the configuration for the resource
            fileId: f-12345678
            mountPath: /etc/config
            name: file.txt
            size: 1234
            type: Config
            uploadTime: 2023-01-10T00:00:00Z
            uploadedBy: user
          - description: A file to store the configuration for the resource
            fileId: f-12345678
            mountPath: /etc/config
            name: file.txt
            size: 1234
            type: Config
            uploadTime: 2023-01-10T00:00:00Z
            uploadedBy: user
          items:
            $ref: '#/components/schemas/FileMetadata'
          type: array
      required:
      - files
      type: object
    ListHelmPackagesRequest:
      example:
        chartName: my-chart
        token: n9
      properties:
        chartName:
          description: The chart name of the Helm package to filter by
          example: my-chart
          type: string
        token:
          description: JWT token used to perform authorization
          example: nw
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListHelmPackagesResult:
      example:
        helmPackages:
        - chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          namespace: default
          password: my-password
          username: my-user
        - chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          namespace: default
          password: my-password
          username: my-user
      properties:
        helmPackages:
          description: List of Helm packages
          example:
          - chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            namespace: default
            password: my-password
            username: my-user
          - chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            namespace: default
            password: my-password
            username: my-user
          items:
            $ref: '#/components/schemas/HelmPackage'
          type: array
      type: object
    ListIdentityProvidersRequest:
      example:
        token: 6pl
      properties:
        token:
          description: JWT token used to perform authorization
          example: mx
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListIdentityProvidersResult:
      example:
        identityProviders:
        - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
          clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          clientSecret: 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
          disabled: false
          emailIdentifiers: company.com
          environmentType: Consequuntur et sunt itaque.
          id: idp-12345678
          identityProviderName: Google
          loginButtonIconUrl: https://example.com/icon.png
          loginButtonText: Login with Google
          name: Google for my company
          scopes:
          - openid
          - email
          - profile
          status: Ready
          tokenEndpoint: https://oauth2.googleapis.com/token
          userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
        - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
          clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          clientSecret: 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
          disabled: false
          emailIdentifiers: company.com
          environmentType: Consequuntur et sunt itaque.
          id: idp-12345678
          identityProviderName: Google
          loginButtonIconUrl: https://example.com/icon.png
          loginButtonText: Login with Google
          name: Google for my company
          scopes:
          - openid
          - email
          - profile
          status: Ready
          tokenEndpoint: https://oauth2.googleapis.com/token
          userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
        - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
          clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          clientSecret: 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
          disabled: false
          emailIdentifiers: company.com
          environmentType: Consequuntur et sunt itaque.
          id: idp-12345678
          identityProviderName: Google
          loginButtonIconUrl: https://example.com/icon.png
          loginButtonText: Login with Google
          name: Google for my company
          scopes:
          - openid
          - email
          - profile
          status: Ready
          tokenEndpoint: https://oauth2.googleapis.com/token
          userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
      properties:
        identityProviders:
          description: The list of Identity Providers
          example:
          - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
            clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
            clientSecret: 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
            disabled: false
            emailIdentifiers: company.com
            environmentType: Consequuntur et sunt itaque.
            id: idp-12345678
            identityProviderName: Google
            loginButtonIconUrl: https://example.com/icon.png
            loginButtonText: Login with Google
            name: Google for my company
            scopes:
            - openid
            - email
            - profile
            status: Ready
            tokenEndpoint: https://oauth2.googleapis.com/token
            userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
          - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
            clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
            clientSecret: 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
            disabled: false
            emailIdentifiers: company.com
            environmentType: Consequuntur et sunt itaque.
            id: idp-12345678
            identityProviderName: Google
            loginButtonIconUrl: https://example.com/icon.png
            loginButtonText: Login with Google
            name: Google for my company
            scopes:
            - openid
            - email
            - profile
            status: Ready
            tokenEndpoint: https://oauth2.googleapis.com/token
            userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
          items:
            $ref: '#/components/schemas/DescribeIdentityProviderResult'
          type: array
      required:
      - identityProviders
      type: object
    ListImageConfigsRequest:
      example:
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        token: a9a
      properties:
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: nc1
          minLength: 1
          type: string
      required:
      - serviceEnvironmentId
      - serviceId
      - token
      type: object
    ListImageConfigsResult:
      example:
        ids:
        - imgc-12345678
        - imgc-87654321
        nextPageToken: next-token
      properties:
        ids:
          description: List of image configuration IDs
          example:
          - imgc-12345678
          - imgc-87654321
          items:
            description: ID of an Image Config
            example: Iusto vel.
            type: string
          type: array
        nextPageToken:
          description: Token to use to get the next page of results
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListImageRegistryRequest:
      example:
        token: 0f
      properties:
        token:
          description: JWT token used to perform authorization
          example: s
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListImageRegistryResult:
      description: List of HTTP API v2 Docker Image Registries
      example:
        ids:
        - ir-12345678
        - ir-abcdefgh
        - ir-abcd5678
        nextPageToken: next-token
      properties:
        ids:
          description: List of Image Registry IDs
          example:
          - ir-12345678
          - ir-abcdefgh
          - ir-abcd5678
          items:
            description: ID of an Image Registry
            example: Inventore qui non voluptas.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListInfraConfigRequest:
      example:
        managed: false
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        token: 4vb
      properties:
        managed:
          description: Is infra config managed by omnistrate
          example: false
          type: boolean
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: x
          minLength: 1
          type: string
      required:
      - serviceEnvironmentId
      - serviceId
      - token
      type: object
    ListInfraConfigResult:
      description: List of Infra Config IDs
      example:
        ids:
        - ic-12345678
        - ic-abcdefgh
        - ic-1234efgh
        nextPageToken: next-token
      properties:
        ids:
          example:
          - ic-12345678
          - ic-abcdefgh
          - ic-1234efgh
          items:
            description: ID of an Infra Config
            example: Ipsam repellendus quasi minima.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListInputParametersRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Itaque ducimus voluptatem quis impedit hic.
        resourceId: r-12345678
        serviceId: s-12345678
        token: mv
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Sit veniam necessitatibus quia.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Autem numquam laboriosam fugiat.
          type: string
        resourceId:
          description: ID of a resource
          example: Exercitationem earum vel.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: fnt
          minLength: 1
          type: string
      required:
      - resourceId
      - serviceId
      - token
      type: object
    ListInputParametersResult:
      example:
        ids:
        - ip-12345678
        - ip-12345679
        inputParameters:
        - defaultValue: "true"
          dependentResourceId: r-12345678
          description: Sed in dolor.
          hasOptions: false
          id: var-12345678
          isList: true
          key: rgn
          labeledOptions:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          limits:
            max: Hic sit.
            maxLength: Incidunt quibusdam et atque quia sed.
            min: A unde eveniet voluptatem omnis qui eveniet.
            minLength: Iure distinctio rerum provident iure eligendi facilis.
          modifiable: false
          name: m0q
          options:
          - "true"
          - "false"
          required: true
          resourceId: r-12345678
          serviceId: s-12345678
          type: Boolean|Float64|String|Resource|Secret|Password
        - defaultValue: "true"
          dependentResourceId: r-12345678
          description: Sed in dolor.
          hasOptions: false
          id: var-12345678
          isList: true
          key: rgn
          labeledOptions:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          limits:
            max: Hic sit.
            maxLength: Incidunt quibusdam et atque quia sed.
            min: A unde eveniet voluptatem omnis qui eveniet.
            minLength: Iure distinctio rerum provident iure eligendi facilis.
          modifiable: false
          name: m0q
          options:
          - "true"
          - "false"
          required: true
          resourceId: r-12345678
          serviceId: s-12345678
          type: Boolean|Float64|String|Resource|Secret|Password
        - defaultValue: "true"
          dependentResourceId: r-12345678
          description: Sed in dolor.
          hasOptions: false
          id: var-12345678
          isList: true
          key: rgn
          labeledOptions:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          limits:
            max: Hic sit.
            maxLength: Incidunt quibusdam et atque quia sed.
            min: A unde eveniet voluptatem omnis qui eveniet.
            minLength: Iure distinctio rerum provident iure eligendi facilis.
          modifiable: false
          name: m0q
          options:
          - "true"
          - "false"
          required: true
          resourceId: r-12345678
          serviceId: s-12345678
          type: Boolean|Float64|String|Resource|Secret|Password
        - defaultValue: "true"
          dependentResourceId: r-12345678
          description: Sed in dolor.
          hasOptions: false
          id: var-12345678
          isList: true
          key: rgn
          labeledOptions:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          limits:
            max: Hic sit.
            maxLength: Incidunt quibusdam et atque quia sed.
            min: A unde eveniet voluptatem omnis qui eveniet.
            minLength: Iure distinctio rerum provident iure eligendi facilis.
          modifiable: false
          name: m0q
          options:
          - "true"
          - "false"
          required: true
          resourceId: r-12345678
          serviceId: s-12345678
          type: Boolean|Float64|String|Resource|Secret|Password
        nextPageToken: next-token
      properties:
        ids:
          description: List of input parameter IDs
          example:
          - ip-12345678
          - ip-12345679
          items:
            description: ID of an Input Parameter
            example: Eum quia quia dolor esse dolores est.
            type: string
          type: array
        inputParameters:
          description: The input parameters
          example:
          - defaultValue: "true"
            dependentResourceId: r-12345678
            description: Sed in dolor.
            hasOptions: false
            id: var-12345678
            isList: true
            key: rgn
            labeledOptions:
              large: t3.xlarge
              medium: t3.large
              small: t3.medium
            limits:
              max: Hic sit.
              maxLength: Incidunt quibusdam et atque quia sed.
              min: A unde eveniet voluptatem omnis qui eveniet.
              minLength: Iure distinctio rerum provident iure eligendi facilis.
            modifiable: false
            name: m0q
            options:
            - "true"
            - "false"
            required: true
            resourceId: r-12345678
            serviceId: s-12345678
            type: Boolean|Float64|String|Resource|Secret|Password
          - defaultValue: "true"
            dependentResourceId: r-12345678
            description: Sed in dolor.
            hasOptions: false
            id: var-12345678
            isList: true
            key: rgn
            labeledOptions:
              large: t3.xlarge
              medium: t3.large
              small: t3.medium
            limits:
              max: Hic sit.
              maxLength: Incidunt quibusdam et atque quia sed.
              min: A unde eveniet voluptatem omnis qui eveniet.
              minLength: Iure distinctio rerum provident iure eligendi facilis.
            modifiable: false
            name: m0q
            options:
            - "true"
            - "false"
            required: true
            resourceId: r-12345678
            serviceId: s-12345678
            type: Boolean|Float64|String|Resource|Secret|Password
          - defaultValue: "true"
            dependentResourceId: r-12345678
            description: Sed in dolor.
            hasOptions: false
            id: var-12345678
            isList: true
            key: rgn
            labeledOptions:
              large: t3.xlarge
              medium: t3.large
              small: t3.medium
            limits:
              max: Hic sit.
              maxLength: Incidunt quibusdam et atque quia sed.
              min: A unde eveniet voluptatem omnis qui eveniet.
              minLength: Iure distinctio rerum provident iure eligendi facilis.
            modifiable: false
            name: m0q
            options:
            - "true"
            - "false"
            required: true
            resourceId: r-12345678
            serviceId: s-12345678
            type: Boolean|Float64|String|Resource|Secret|Password
          items:
            $ref: '#/components/schemas/DescribeInputParameterResult'
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListInvoicesRequest:
      example:
        token: wsy
      properties:
        token:
          description: JWT token used to perform authorization
          example: "1"
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListInvoicesResult:
      example:
        invoices:
        - currency: USD
          dueDate: 2023-10-01T00:00:00Z
          invoiceDate: 2021-01-01T00:00:00.000Z
          invoiceId: in_1234568
          invoiceNumber: 2021-01-01-1234567890
          invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
          invoiceStatus: Open
          invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
          paymentTerms: Net 30
          taxAmount: 10
          totalAmount: 110
          totalAmountWithoutTax: 100
        - currency: USD
          dueDate: 2023-10-01T00:00:00Z
          invoiceDate: 2021-01-01T00:00:00.000Z
          invoiceId: in_1234568
          invoiceNumber: 2021-01-01-1234567890
          invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
          invoiceStatus: Open
          invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
          paymentTerms: Net 30
          taxAmount: 10
          totalAmount: 110
          totalAmountWithoutTax: 100
      properties:
        invoices:
          description: List of Invoices
          example:
          - currency: USD
            dueDate: 2023-10-01T00:00:00Z
            invoiceDate: 2021-01-01T00:00:00.000Z
            invoiceId: in_1234568
            invoiceNumber: 2021-01-01-1234567890
            invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
            invoiceStatus: Open
            invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
            paymentTerms: Net 30
            taxAmount: 10
            totalAmount: 110
            totalAmountWithoutTax: 100
          - currency: USD
            dueDate: 2023-10-01T00:00:00Z
            invoiceDate: 2021-01-01T00:00:00.000Z
            invoiceId: in_1234568
            invoiceNumber: 2021-01-01-1234567890
            invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
            invoiceStatus: Open
            invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
            paymentTerms: Net 30
            taxAmount: 10
            totalAmount: 110
            totalAmountWithoutTax: 100
          items:
            $ref: '#/components/schemas/Invoice'
          type: array
      type: object
    ListLimitRequest:
      example:
        family: COMPUTE_INFRA
        token: h
      properties:
        family:
          description: The limit family
          example: SERVICE
          type: string
        token:
          description: JWT token used to perform authorization
          example: pd
          minLength: 1
          type: string
      required:
      - family
      - token
      type: object
    ListLimitRequest2:
      example:
        family: COMPUTE_INFRA
      properties:
        family:
          description: Limit family
          example: COMPUTE_INFRA
          type: string
      required:
      - family
      type: object
    ListLimitResult:
      example:
        keys:
        - MAX_VIRTUAL_CORES_PER_RESOURCE
        nextPageToken: next-token
      properties:
        keys:
          description: List of limit keys
          example:
          - MAX_VIRTUAL_CORES_PER_RESOURCE
          items:
            example: Libero molestiae laborum et quas porro.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      required:
      - keys
      type: object
    ListNetworkConfigsRequest:
      example:
        managed: false
        serviceId: s-12345678
        token: bp
      properties:
        managed:
          description: Is network config managed by omnistrate
          example: false
          type: boolean
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: r3
          minLength: 1
          type: string
      required:
      - serviceId
      - token
      type: object
    ListNetworkConfigsResult:
      example:
        ids:
        - Deserunt dignissimos.
        - Deserunt dignissimos.
        - Deserunt dignissimos.
        nextPageToken: token
      properties:
        ids:
          description: The list of network config IDs
          example:
          - Deserunt dignissimos.
          - Deserunt dignissimos.
          items:
            description: ID of a Network Config
            example: Quas eveniet porro et pariatur praesentium ex.
            type: string
          type: array
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
      required:
      - ids
      type: object
    ListOutputParametersRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Amet qui sit ipsa iure.
        resourceId: r-12345678
        serviceId: s-12345678
        token: 9o
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Optio fugit possimus dolores voluptatem labore et.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Assumenda magni autem itaque velit.
          type: string
        resourceId:
          description: ID of a resource
          example: Repellat explicabo.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: s
          minLength: 1
          type: string
      required:
      - resourceId
      - serviceId
      - token
      type: object
    ListOutputParametersResult:
      example:
        ids:
        - op-12345678
        nextPageToken: next-token
        outputParameters:
        - description: Username of the user created in the target system
          id: op-12345678
          key: username
          name: Username
          resourceId: r-12345678
          serviceId: s-12345678
          value: johndoe
          valueRef: $var.username
          valueType: Boolean|Float64|String|Secret|Password
        - description: Username of the user created in the target system
          id: op-12345678
          key: username
          name: Username
          resourceId: r-12345678
          serviceId: s-12345678
          value: johndoe
          valueRef: $var.username
          valueType: Boolean|Float64|String|Secret|Password
        - description: Username of the user created in the target system
          id: op-12345678
          key: username
          name: Username
          resourceId: r-12345678
          serviceId: s-12345678
          value: johndoe
          valueRef: $var.username
          valueType: Boolean|Float64|String|Secret|Password
      properties:
        ids:
          description: The IDs of the output parameters
          example:
          - op-12345678
          items:
            description: ID of an Output Parameter
            example: Labore cupiditate.
            type: string
          type: array
        nextPageToken:
          description: The token to use for the next page of results
          example: next-token
          type: string
        outputParameters:
          description: The output parameters
          example:
          - description: Username of the user created in the target system
            id: op-12345678
            key: username
            name: Username
            resourceId: r-12345678
            serviceId: s-12345678
            value: johndoe
            valueRef: $var.username
            valueType: Boolean|Float64|String|Secret|Password
          - description: Username of the user created in the target system
            id: op-12345678
            key: username
            name: Username
            resourceId: r-12345678
            serviceId: s-12345678
            value: johndoe
            valueRef: $var.username
            valueType: Boolean|Float64|String|Secret|Password
          - description: Username of the user created in the target system
            id: op-12345678
            key: username
            name: Username
            resourceId: r-12345678
            serviceId: s-12345678
            value: johndoe
            valueRef: $var.username
            valueType: Boolean|Float64|String|Secret|Password
          - description: Username of the user created in the target system
            id: op-12345678
            key: username
            name: Username
            resourceId: r-12345678
            serviceId: s-12345678
            value: johndoe
            valueRef: $var.username
            valueType: Boolean|Float64|String|Secret|Password
          items:
            $ref: '#/components/schemas/DescribeOutputParameterResult'
          type: array
      required:
      - ids
      type: object
    ListPipelinesRequest:
      example:
        serviceId: s-12345678
        token: 8uv
      properties:
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 6od
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListPipelinesResult:
      example:
        ids:
        - p-12345678
        - p-23456789
        nextPageToken: next-token
      properties:
        ids:
          description: List of pipeline IDs
          example:
          - p-12345678
          - p-23456789
          items:
            description: ID of a Pipeline
            example: Omnis hic fuga amet.
            type: string
          type: array
        nextPageToken:
          description: Next page token
          example: next-token
          type: string
      type: object
    ListProductTiersRequest:
      example:
        serviceId: s-12345678
        serviceModelId: sm-12345678
        token: oh
      properties:
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Numquam nulla cumque qui quaerat quia itaque.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 6y
          minLength: 1
          type: string
      required:
      - serviceId
      - serviceModelId
      - token
      type: object
    ListProductTiersResult:
      example:
        ids:
        - Beatae beatae.
        - Beatae beatae.
        - Beatae beatae.
        - Beatae beatae.
        nextPageToken: next-token
      properties:
        ids:
          description: List of product tier IDs
          example:
          - Beatae beatae.
          - Beatae beatae.
          - Beatae beatae.
          - Beatae beatae.
          items:
            description: ID of a Product Tier
            example: Maxime qui dignissimos dolore in excepturi ipsa.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListRegionsRequest:
      example:
        cloudProviderName: aws
        modelType: CUSTOMER_HOSTED
        productTierId: pt-12345678
        serviceId: s-12345678
        serviceModelId: sm-12345678
        token: xrd
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        modelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Voluptatem officiis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Quae explicabo amet harum sed.
          type: string
        token:
          description: JWT token used to perform authorization
          example: ts
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - token
      type: object
    ListRegionsResult:
      example:
        ids:
        - region-12345678
        - region-87654321
        nextPageToken: next-token
      properties:
        ids:
          example:
          - region-12345678
          - region-87654321
          items:
            description: ID of a Region
            example: Possimus nostrum quis qui reprehenderit.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListResourceCapabilitiesRequest:
      example:
        ProductTierId: Beatae beatae.
        ProductTierVersion: Ea excepturi fugiat occaecati veniam est iure.
        id: r-12345678
        serviceId: s-12345678
        token: mqk
      properties:
        ProductTierId:
          description: ID of a Product Tier
          example: Asperiores praesentium delectus beatae fugiat unde voluptatem.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Quibusdam aut architecto in laborum velit.
          type: string
        id:
          description: ID of a resource
          example: Vitae molestiae et laudantium accusantium ipsum esse.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 9h
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ListResourceCapabilitiesResponse:
      example:
        capabilities:
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
      properties:
        capabilities:
          description: The configurationParameters to enable capabilities for the
            resource
          example:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          items:
            $ref: '#/components/schemas/ResourceCapability'
          type: array
      type: object
    ListResourceInstanceSnapshotsRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: o9
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service key
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Non at at doloremque.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: ea0
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    ListResourceInstanceSnapshotsResult:
      example:
        snapshots:
        - completeTime: 2021-09-01T00:00:00Z
          createdTime: 2021-09-01T00:00:00Z
          encrypted: true
          progress: 100
          snapshotId: instance-ss-12345678
          status: completed
      properties:
        snapshots:
          description: The instance snapshots
          example:
          - completeTime: 2021-09-01T00:00:00Z
            createdTime: 2021-09-01T00:00:00Z
            encrypted: true
            progress: 100
            snapshotId: instance-ss-12345678
            status: completed
          items:
            $ref: '#/components/schemas/InstanceSnapshot'
          type: array
      type: object
    ListResourceInstancesRequest:
      example:
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: t
      properties:
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service key
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Illo voluptatibus rem soluta a aut fugiat.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: "9"
          minLength: 1
          type: string
      required:
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    ListResourceInstancesResult:
      example:
        ids:
        - instance-abcd1234
        - instance-abcd1235
        nextPageToken: next-token
      properties:
        ids:
          description: The instance IDs
          example:
          - instance-abcd1234
          - instance-abcd1235
          items:
            example: Ex voluptatem est iure et.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListResourcesRequest:
      example:
        ProductTierVersion: Reprehenderit porro nostrum aut doloremque ipsum et.
        managed: false
        productTierId: pt-12345678
        serviceId: si-12345678
        token: n5q
      properties:
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Omnis quis optio illo.
          type: string
        managed:
          description: Is resource managed by omnistrate
          example: false
          type: boolean
        productTierId:
          description: ID of a Product Tier
          example: Vel modi non voluptas reprehenderit aperiam.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: f
          minLength: 1
          type: string
      required:
      - productTierId
      - serviceId
      - token
      type: object
    ListResourcesResult:
      example:
        ids:
        - r-12345678
        - r-abcdefgh
        - r-1234abcd
        nextPageToken: next-token
        resources:
        - actionHooks:
          - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
            scope: CLUSTER
            type: INIT
          additionalSecurityContext:
            AddCapabilities:
            - CAP_NET_ADMIN
            - CAP_NET_RAW
            DropCapabilities:
            - CAP_NET_ADMIN
            - CAP_NET_RAW
            SupplementalGroupIDs:
            - 1001
            - 999
          backupConfiguration:
            backupPeriodInHours: 24
            backupRetentionInDays: 7
          blobStorageConfiguration:
            GCSConfiguration: {}
            S3Configuration: {}
          capabilities:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          customLabels:
            key: value
          customSysCTLs:
            net.ipv4.tcp_syncookies: "1"
          customULimits:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          dependencies:
          - parameterMap:
              clusterId: writerId
              clusterOrg: userDatabase
            resourceId: r-12345678
          - parameterMap:
              clusterId: readerId
              clusterOrg: userDatabase
            resourceId: r-abcdef12
          description: An resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          environmentVariables:
          - name: MYSQL_ROOT_PASSWORD
            value: password
          fileSystemConfiguration:
            EFSFileSystemConfiguration:
              PerformanceMode: generalPurpose|maxIO
              ProvisionedThroughputInMibps: 125
              ThroughputMode: provisioned|bursting|elastic
          helmChartConfiguration:
            chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            endpointConfiguration:
              admin:
                host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                networkingType: PRIVATE
                ports:
                - 8080
                - 8081
                primary: false
              cluster:
                host: https://my-endpoint.com
                networkingType: PUBLIC
                ports:
                - 8080
                - 8081
                primary: true
            password: my-password
            runtimeConfiguration:
              disableHooks: true
              recreate: true
              resetThenReuseValues: true
              resetValues: true
              reuseValues: true
              skipCRDs: true
              timeoutNanos: 1000000000
              upgradeCRDs: true
              wait: true
              waitForJobs: true
            username: my-user
          id: r-12345678
          imageConfigId: imgc-12345678
          infraConfigId: ic-12345678
          internal: true
          isDeprecated: false
          jobConfig:
            activeDeadlineSeconds: 300
            backoffLimit: 5
          key: galera
          kustomizeConfiguration:
            endpointConfiguration:
              admin:
                host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                networkingType: PRIVATE
                ports:
                - 8080
                - 8081
                primary: false
              cluster:
                host: https://my-endpoint.com
                networkingType: PUBLIC
                ports:
                - 8080
                - 8081
                primary: true
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            helmChartDependencies:
            - chartName: cert-manager
              chartVersion: v1.5.3
            - chartName: nginx-ingress
              chartVersion: v0.48.1
            - chartName: external-dns
              chartVersion: v0.7.0
            - chartName: cnpg-operator
              chartVersion: v0.23.1
            kustomizePath: /kustomize
          l4LoadBalancerConfiguration:
            ingressPortConfiguration:
            - associatedResourceIDs:
              - r-12345678
              - r-abcdef12
              backendPort: 8080
              ingressPort: 1234
            - associatedResourceIDs:
              - r-12345678
              - r-abcdef12
              backendPort: 8081
              ingressPort: 5678
            - associatedResourceIDs:
              - r-vwxybz12
              - r-poij122v
              backendPort: 8082
              ingressPort: 9012
          l7LoadBalancerConfiguration:
            paths:
            - associatedResourceID: r-12345678
              path: /path
              port: 8080
          name: Galera
          operatorCRDConfiguration:
            endpointConfiguration:
              admin:
                host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                networkingType: PRIVATE
                ports:
                - 8080
                - 8081
                primary: false
              cluster:
                host: https://my-endpoint.com
                networkingType: PUBLIC
                ports:
                - 8080
                - 8081
                primary: true
            helmChartDependencies:
            - chartName: cert-manager
              chartVersion: v1.5.3
            - chartName: nginx-ingress
              chartVersion: v0.48.1
            - chartName: external-dns
              chartVersion: v0.7.0
            - chartName: cnpg-operator
              chartVersion: v0.23.1
            outputParameters:
              expiresAt: $out.status.notAfter
              issuerName: letsencrypt-prod
            readinessConditions:
              $out.status.conditions[?(@.type=='Ready')].status: true
            supplementalFiles:
            - |
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: letsencrypt-prod
              spec:
                acme:
                  server: https://acme-v02.api.letsencrypt.org/directory
            - |-
              apiVersion: ingress.nginx.io/v1
              kind: IngressClass
              metadata:
                name: nginx
              spec:
                controller: nginx.org/ingress-controller
            template: |-
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: letsencrypt-prod
              spec:
                acme:
                  server: https://acme-v02.api.letsencrypt.org/directory
                  email: test@example.com
                  privateKeySecretRef:
                    name: letsencrypt-prod
                  solvers:
                  - http01:
                      ingress:
                        class: nginx
          productTierId: pt-12345678
          proxyType: PortsBasedProxy
          resourceType: Generic
          serviceId: s-12345678
          terraformConfigurations:
            aws:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
        - actionHooks:
          - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
            scope: CLUSTER
            type: INIT
          additionalSecurityContext:
            AddCapabilities:
            - CAP_NET_ADMIN
            - CAP_NET_RAW
            DropCapabilities:
            - CAP_NET_ADMIN
            - CAP_NET_RAW
            SupplementalGroupIDs:
            - 1001
            - 999
          backupConfiguration:
            backupPeriodInHours: 24
            backupRetentionInDays: 7
          blobStorageConfiguration:
            GCSConfiguration: {}
            S3Configuration: {}
          capabilities:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          customLabels:
            key: value
          customSysCTLs:
            net.ipv4.tcp_syncookies: "1"
          customULimits:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          dependencies:
          - parameterMap:
              clusterId: writerId
              clusterOrg: userDatabase
            resourceId: r-12345678
          - parameterMap:
              clusterId: readerId
              clusterOrg: userDatabase
            resourceId: r-abcdef12
          description: An resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          environmentVariables:
          - name: MYSQL_ROOT_PASSWORD
            value: password
          fileSystemConfiguration:
            EFSFileSystemConfiguration:
              PerformanceMode: generalPurpose|maxIO
              ProvisionedThroughputInMibps: 125
              ThroughputMode: provisioned|bursting|elastic
          helmChartConfiguration:
            chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            endpointConfiguration:
              admin:
                host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                networkingType: PRIVATE
                ports:
                - 8080
                - 8081
                primary: false
              cluster:
                host: https://my-endpoint.com
                networkingType: PUBLIC
                ports:
                - 8080
                - 8081
                primary: true
            password: my-password
            runtimeConfiguration:
              disableHooks: true
              recreate: true
              resetThenReuseValues: true
              resetValues: true
              reuseValues: true
              skipCRDs: true
              timeoutNanos: 1000000000
              upgradeCRDs: true
              wait: true
              waitForJobs: true
            username: my-user
          id: r-12345678
          imageConfigId: imgc-12345678
          infraConfigId: ic-12345678
          internal: true
          isDeprecated: false
          jobConfig:
            activeDeadlineSeconds: 300
            backoffLimit: 5
          key: galera
          kustomizeConfiguration:
            endpointConfiguration:
              admin:
                host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                networkingType: PRIVATE
                ports:
                - 8080
                - 8081
                primary: false
              cluster:
                host: https://my-endpoint.com
                networkingType: PUBLIC
                ports:
                - 8080
                - 8081
                primary: true
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            helmChartDependencies:
            - chartName: cert-manager
              chartVersion: v1.5.3
            - chartName: nginx-ingress
              chartVersion: v0.48.1
            - chartName: external-dns
              chartVersion: v0.7.0
            - chartName: cnpg-operator
              chartVersion: v0.23.1
            kustomizePath: /kustomize
          l4LoadBalancerConfiguration:
            ingressPortConfiguration:
            - associatedResourceIDs:
              - r-12345678
              - r-abcdef12
              backendPort: 8080
              ingressPort: 1234
            - associatedResourceIDs:
              - r-12345678
              - r-abcdef12
              backendPort: 8081
              ingressPort: 5678
            - associatedResourceIDs:
              - r-vwxybz12
              - r-poij122v
              backendPort: 8082
              ingressPort: 9012
          l7LoadBalancerConfiguration:
            paths:
            - associatedResourceID: r-12345678
              path: /path
              port: 8080
          name: Galera
          operatorCRDConfiguration:
            endpointConfiguration:
              admin:
                host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                networkingType: PRIVATE
                ports:
                - 8080
                - 8081
                primary: false
              cluster:
                host: https://my-endpoint.com
                networkingType: PUBLIC
                ports:
                - 8080
                - 8081
                primary: true
            helmChartDependencies:
            - chartName: cert-manager
              chartVersion: v1.5.3
            - chartName: nginx-ingress
              chartVersion: v0.48.1
            - chartName: external-dns
              chartVersion: v0.7.0
            - chartName: cnpg-operator
              chartVersion: v0.23.1
            outputParameters:
              expiresAt: $out.status.notAfter
              issuerName: letsencrypt-prod
            readinessConditions:
              $out.status.conditions[?(@.type=='Ready')].status: true
            supplementalFiles:
            - |
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: letsencrypt-prod
              spec:
                acme:
                  server: https://acme-v02.api.letsencrypt.org/directory
            - |-
              apiVersion: ingress.nginx.io/v1
              kind: IngressClass
              metadata:
                name: nginx
              spec:
                controller: nginx.org/ingress-controller
            template: |-
              apiVersion: cert-manager.io/v1
              kind: ClusterIssuer
              metadata:
                name: letsencrypt-prod
              spec:
                acme:
                  server: https://acme-v02.api.letsencrypt.org/directory
                  email: test@example.com
                  privateKeySecretRef:
                    name: letsencrypt-prod
                  solvers:
                  - http01:
                      ingress:
                        class: nginx
          productTierId: pt-12345678
          proxyType: PortsBasedProxy
          resourceType: Generic
          serviceId: s-12345678
          terraformConfigurations:
            aws:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
      properties:
        ids:
          description: List of resource IDs
          example:
          - r-12345678
          - r-abcdefgh
          - r-1234abcd
          items:
            description: ID of a resource
            example: Id culpa exercitationem consequatur et nam voluptate.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
        resources:
          description: List of resources
          example:
          - actionHooks:
            - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
              scope: CLUSTER
              type: INIT
            additionalSecurityContext:
              AddCapabilities:
              - CAP_NET_ADMIN
              - CAP_NET_RAW
              DropCapabilities:
              - CAP_NET_ADMIN
              - CAP_NET_RAW
              SupplementalGroupIDs:
              - 1001
              - 999
            backupConfiguration:
              backupPeriodInHours: 24
              backupRetentionInDays: 7
            blobStorageConfiguration:
              GCSConfiguration: {}
              S3Configuration: {}
            capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            customLabels:
              key: value
            customSysCTLs:
              net.ipv4.tcp_syncookies: "1"
            customULimits:
            - ULimitsName: NoProc
              ULimitsType: Soft
              ULimitsValue: 1000
            - ULimitsName: NoFile
              ULimitsType: Hard
              ULimitsValue: 2048
            dependencies:
            - parameterMap:
                clusterId: writerId
                clusterOrg: userDatabase
              resourceId: r-12345678
            - parameterMap:
                clusterId: readerId
                clusterOrg: userDatabase
              resourceId: r-abcdef12
            description: An resource to manage a hosted public SaaS offering of a
              multi-writer MySQL service
            environmentVariables:
            - name: MYSQL_ROOT_PASSWORD
              value: password
            fileSystemConfiguration:
              EFSFileSystemConfiguration:
                PerformanceMode: generalPurpose|maxIO
                ProvisionedThroughputInMibps: 125
                ThroughputMode: provisioned|bursting|elastic
            helmChartConfiguration:
              chartName: my-chart
              chartRepoName: my-repo
              chartRepoUrl: https://my-repo.com
              chartValues:
                key1: value1
                key2: 3
                key3:
                  key4: value4
              chartVersion: 1.0.0
              endpointConfiguration:
                admin:
                  host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                  networkingType: PRIVATE
                  ports:
                  - 8080
                  - 8081
                  primary: false
                cluster:
                  host: https://my-endpoint.com
                  networkingType: PUBLIC
                  ports:
                  - 8080
                  - 8081
                  primary: true
              password: my-password
              runtimeConfiguration:
                disableHooks: true
                recreate: true
                resetThenReuseValues: true
                resetValues: true
                reuseValues: true
                skipCRDs: true
                timeoutNanos: 1000000000
                upgradeCRDs: true
                wait: true
                waitForJobs: true
              username: my-user
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            internal: true
            isDeprecated: false
            jobConfig:
              activeDeadlineSeconds: 300
              backoffLimit: 5
            key: galera
            kustomizeConfiguration:
              endpointConfiguration:
                admin:
                  host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                  networkingType: PRIVATE
                  ports:
                  - 8080
                  - 8081
                  primary: false
                cluster:
                  host: https://my-endpoint.com
                  networkingType: PUBLIC
                  ports:
                  - 8080
                  - 8081
                  primary: true
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              helmChartDependencies:
              - chartName: cert-manager
                chartVersion: v1.5.3
              - chartName: nginx-ingress
                chartVersion: v0.48.1
              - chartName: external-dns
                chartVersion: v0.7.0
              - chartName: cnpg-operator
                chartVersion: v0.23.1
              kustomizePath: /kustomize
            l4LoadBalancerConfiguration:
              ingressPortConfiguration:
              - associatedResourceIDs:
                - r-12345678
                - r-abcdef12
                backendPort: 8080
                ingressPort: 1234
              - associatedResourceIDs:
                - r-12345678
                - r-abcdef12
                backendPort: 8081
                ingressPort: 5678
              - associatedResourceIDs:
                - r-vwxybz12
                - r-poij122v
                backendPort: 8082
                ingressPort: 9012
            l7LoadBalancerConfiguration:
              paths:
              - associatedResourceID: r-12345678
                path: /path
                port: 8080
            name: Galera
            operatorCRDConfiguration:
              endpointConfiguration:
                admin:
                  host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                  networkingType: PRIVATE
                  ports:
                  - 8080
                  - 8081
                  primary: false
                cluster:
                  host: https://my-endpoint.com
                  networkingType: PUBLIC
                  ports:
                  - 8080
                  - 8081
                  primary: true
              helmChartDependencies:
              - chartName: cert-manager
                chartVersion: v1.5.3
              - chartName: nginx-ingress
                chartVersion: v0.48.1
              - chartName: external-dns
                chartVersion: v0.7.0
              - chartName: cnpg-operator
                chartVersion: v0.23.1
              outputParameters:
                expiresAt: $out.status.notAfter
                issuerName: letsencrypt-prod
              readinessConditions:
                $out.status.conditions[?(@.type=='Ready')].status: true
              supplementalFiles:
              - |
                apiVersion: cert-manager.io/v1
                kind: ClusterIssuer
                metadata:
                  name: letsencrypt-prod
                spec:
                  acme:
                    server: https://acme-v02.api.letsencrypt.org/directory
              - |-
                apiVersion: ingress.nginx.io/v1
                kind: IngressClass
                metadata:
                  name: nginx
                spec:
                  controller: nginx.org/ingress-controller
              template: |-
                apiVersion: cert-manager.io/v1
                kind: ClusterIssuer
                metadata:
                  name: letsencrypt-prod
                spec:
                  acme:
                    server: https://acme-v02.api.letsencrypt.org/directory
                    email: test@example.com
                    privateKeySecretRef:
                      name: letsencrypt-prod
                    solvers:
                    - http01:
                        ingress:
                          class: nginx
            productTierId: pt-12345678
            proxyType: PortsBasedProxy
            resourceType: Generic
            serviceId: s-12345678
            terraformConfigurations:
              aws:
                gitConfiguration:
                  referenceName: ref
                  repositoryUrl: gitUrl
                privateModuleGitAccessTokens:
                  tokenName: accessToken
                terraformPath: /project1/tf
          - actionHooks:
            - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
              scope: CLUSTER
              type: INIT
            additionalSecurityContext:
              AddCapabilities:
              - CAP_NET_ADMIN
              - CAP_NET_RAW
              DropCapabilities:
              - CAP_NET_ADMIN
              - CAP_NET_RAW
              SupplementalGroupIDs:
              - 1001
              - 999
            backupConfiguration:
              backupPeriodInHours: 24
              backupRetentionInDays: 7
            blobStorageConfiguration:
              GCSConfiguration: {}
              S3Configuration: {}
            capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            customLabels:
              key: value
            customSysCTLs:
              net.ipv4.tcp_syncookies: "1"
            customULimits:
            - ULimitsName: NoProc
              ULimitsType: Soft
              ULimitsValue: 1000
            - ULimitsName: NoFile
              ULimitsType: Hard
              ULimitsValue: 2048
            dependencies:
            - parameterMap:
                clusterId: writerId
                clusterOrg: userDatabase
              resourceId: r-12345678
            - parameterMap:
                clusterId: readerId
                clusterOrg: userDatabase
              resourceId: r-abcdef12
            description: An resource to manage a hosted public SaaS offering of a
              multi-writer MySQL service
            environmentVariables:
            - name: MYSQL_ROOT_PASSWORD
              value: password
            fileSystemConfiguration:
              EFSFileSystemConfiguration:
                PerformanceMode: generalPurpose|maxIO
                ProvisionedThroughputInMibps: 125
                ThroughputMode: provisioned|bursting|elastic
            helmChartConfiguration:
              chartName: my-chart
              chartRepoName: my-repo
              chartRepoUrl: https://my-repo.com
              chartValues:
                key1: value1
                key2: 3
                key3:
                  key4: value4
              chartVersion: 1.0.0
              endpointConfiguration:
                admin:
                  host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                  networkingType: PRIVATE
                  ports:
                  - 8080
                  - 8081
                  primary: false
                cluster:
                  host: https://my-endpoint.com
                  networkingType: PUBLIC
                  ports:
                  - 8080
                  - 8081
                  primary: true
              password: my-password
              runtimeConfiguration:
                disableHooks: true
                recreate: true
                resetThenReuseValues: true
                resetValues: true
                reuseValues: true
                skipCRDs: true
                timeoutNanos: 1000000000
                upgradeCRDs: true
                wait: true
                waitForJobs: true
              username: my-user
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            internal: true
            isDeprecated: false
            jobConfig:
              activeDeadlineSeconds: 300
              backoffLimit: 5
            key: galera
            kustomizeConfiguration:
              endpointConfiguration:
                admin:
                  host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                  networkingType: PRIVATE
                  ports:
                  - 8080
                  - 8081
                  primary: false
                cluster:
                  host: https://my-endpoint.com
                  networkingType: PUBLIC
                  ports:
                  - 8080
                  - 8081
                  primary: true
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              helmChartDependencies:
              - chartName: cert-manager
                chartVersion: v1.5.3
              - chartName: nginx-ingress
                chartVersion: v0.48.1
              - chartName: external-dns
                chartVersion: v0.7.0
              - chartName: cnpg-operator
                chartVersion: v0.23.1
              kustomizePath: /kustomize
            l4LoadBalancerConfiguration:
              ingressPortConfiguration:
              - associatedResourceIDs:
                - r-12345678
                - r-abcdef12
                backendPort: 8080
                ingressPort: 1234
              - associatedResourceIDs:
                - r-12345678
                - r-abcdef12
                backendPort: 8081
                ingressPort: 5678
              - associatedResourceIDs:
                - r-vwxybz12
                - r-poij122v
                backendPort: 8082
                ingressPort: 9012
            l7LoadBalancerConfiguration:
              paths:
              - associatedResourceID: r-12345678
                path: /path
                port: 8080
            name: Galera
            operatorCRDConfiguration:
              endpointConfiguration:
                admin:
                  host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                  networkingType: PRIVATE
                  ports:
                  - 8080
                  - 8081
                  primary: false
                cluster:
                  host: https://my-endpoint.com
                  networkingType: PUBLIC
                  ports:
                  - 8080
                  - 8081
                  primary: true
              helmChartDependencies:
              - chartName: cert-manager
                chartVersion: v1.5.3
              - chartName: nginx-ingress
                chartVersion: v0.48.1
              - chartName: external-dns
                chartVersion: v0.7.0
              - chartName: cnpg-operator
                chartVersion: v0.23.1
              outputParameters:
                expiresAt: $out.status.notAfter
                issuerName: letsencrypt-prod
              readinessConditions:
                $out.status.conditions[?(@.type=='Ready')].status: true
              supplementalFiles:
              - |
                apiVersion: cert-manager.io/v1
                kind: ClusterIssuer
                metadata:
                  name: letsencrypt-prod
                spec:
                  acme:
                    server: https://acme-v02.api.letsencrypt.org/directory
              - |-
                apiVersion: ingress.nginx.io/v1
                kind: IngressClass
                metadata:
                  name: nginx
                spec:
                  controller: nginx.org/ingress-controller
              template: |-
                apiVersion: cert-manager.io/v1
                kind: ClusterIssuer
                metadata:
                  name: letsencrypt-prod
                spec:
                  acme:
                    server: https://acme-v02.api.letsencrypt.org/directory
                    email: test@example.com
                    privateKeySecretRef:
                      name: letsencrypt-prod
                    solvers:
                    - http01:
                        ingress:
                          class: nginx
            productTierId: pt-12345678
            proxyType: PortsBasedProxy
            resourceType: Generic
            serviceId: s-12345678
            terraformConfigurations:
              aws:
                gitConfiguration:
                  referenceName: ref
                  repositoryUrl: gitUrl
                privateModuleGitAccessTokens:
                  tokenName: accessToken
                terraformPath: /project1/tf
          - actionHooks:
            - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
              scope: CLUSTER
              type: INIT
            additionalSecurityContext:
              AddCapabilities:
              - CAP_NET_ADMIN
              - CAP_NET_RAW
              DropCapabilities:
              - CAP_NET_ADMIN
              - CAP_NET_RAW
              SupplementalGroupIDs:
              - 1001
              - 999
            backupConfiguration:
              backupPeriodInHours: 24
              backupRetentionInDays: 7
            blobStorageConfiguration:
              GCSConfiguration: {}
              S3Configuration: {}
            capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            customLabels:
              key: value
            customSysCTLs:
              net.ipv4.tcp_syncookies: "1"
            customULimits:
            - ULimitsName: NoProc
              ULimitsType: Soft
              ULimitsValue: 1000
            - ULimitsName: NoFile
              ULimitsType: Hard
              ULimitsValue: 2048
            dependencies:
            - parameterMap:
                clusterId: writerId
                clusterOrg: userDatabase
              resourceId: r-12345678
            - parameterMap:
                clusterId: readerId
                clusterOrg: userDatabase
              resourceId: r-abcdef12
            description: An resource to manage a hosted public SaaS offering of a
              multi-writer MySQL service
            environmentVariables:
            - name: MYSQL_ROOT_PASSWORD
              value: password
            fileSystemConfiguration:
              EFSFileSystemConfiguration:
                PerformanceMode: generalPurpose|maxIO
                ProvisionedThroughputInMibps: 125
                ThroughputMode: provisioned|bursting|elastic
            helmChartConfiguration:
              chartName: my-chart
              chartRepoName: my-repo
              chartRepoUrl: https://my-repo.com
              chartValues:
                key1: value1
                key2: 3
                key3:
                  key4: value4
              chartVersion: 1.0.0
              endpointConfiguration:
                admin:
                  host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                  networkingType: PRIVATE
                  ports:
                  - 8080
                  - 8081
                  primary: false
                cluster:
                  host: https://my-endpoint.com
                  networkingType: PUBLIC
                  ports:
                  - 8080
                  - 8081
                  primary: true
              password: my-password
              runtimeConfiguration:
                disableHooks: true
                recreate: true
                resetThenReuseValues: true
                resetValues: true
                reuseValues: true
                skipCRDs: true
                timeoutNanos: 1000000000
                upgradeCRDs: true
                wait: true
                waitForJobs: true
              username: my-user
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            internal: true
            isDeprecated: false
            jobConfig:
              activeDeadlineSeconds: 300
              backoffLimit: 5
            key: galera
            kustomizeConfiguration:
              endpointConfiguration:
                admin:
                  host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                  networkingType: PRIVATE
                  ports:
                  - 8080
                  - 8081
                  primary: false
                cluster:
                  host: https://my-endpoint.com
                  networkingType: PUBLIC
                  ports:
                  - 8080
                  - 8081
                  primary: true
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              helmChartDependencies:
              - chartName: cert-manager
                chartVersion: v1.5.3
              - chartName: nginx-ingress
                chartVersion: v0.48.1
              - chartName: external-dns
                chartVersion: v0.7.0
              - chartName: cnpg-operator
                chartVersion: v0.23.1
              kustomizePath: /kustomize
            l4LoadBalancerConfiguration:
              ingressPortConfiguration:
              - associatedResourceIDs:
                - r-12345678
                - r-abcdef12
                backendPort: 8080
                ingressPort: 1234
              - associatedResourceIDs:
                - r-12345678
                - r-abcdef12
                backendPort: 8081
                ingressPort: 5678
              - associatedResourceIDs:
                - r-vwxybz12
                - r-poij122v
                backendPort: 8082
                ingressPort: 9012
            l7LoadBalancerConfiguration:
              paths:
              - associatedResourceID: r-12345678
                path: /path
                port: 8080
            name: Galera
            operatorCRDConfiguration:
              endpointConfiguration:
                admin:
                  host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                  networkingType: PRIVATE
                  ports:
                  - 8080
                  - 8081
                  primary: false
                cluster:
                  host: https://my-endpoint.com
                  networkingType: PUBLIC
                  ports:
                  - 8080
                  - 8081
                  primary: true
              helmChartDependencies:
              - chartName: cert-manager
                chartVersion: v1.5.3
              - chartName: nginx-ingress
                chartVersion: v0.48.1
              - chartName: external-dns
                chartVersion: v0.7.0
              - chartName: cnpg-operator
                chartVersion: v0.23.1
              outputParameters:
                expiresAt: $out.status.notAfter
                issuerName: letsencrypt-prod
              readinessConditions:
                $out.status.conditions[?(@.type=='Ready')].status: true
              supplementalFiles:
              - |
                apiVersion: cert-manager.io/v1
                kind: ClusterIssuer
                metadata:
                  name: letsencrypt-prod
                spec:
                  acme:
                    server: https://acme-v02.api.letsencrypt.org/directory
              - |-
                apiVersion: ingress.nginx.io/v1
                kind: IngressClass
                metadata:
                  name: nginx
                spec:
                  controller: nginx.org/ingress-controller
              template: |-
                apiVersion: cert-manager.io/v1
                kind: ClusterIssuer
                metadata:
                  name: letsencrypt-prod
                spec:
                  acme:
                    server: https://acme-v02.api.letsencrypt.org/directory
                    email: test@example.com
                    privateKeySecretRef:
                      name: letsencrypt-prod
                    solvers:
                    - http01:
                        ingress:
                          class: nginx
            productTierId: pt-12345678
            proxyType: PortsBasedProxy
            resourceType: Generic
            serviceId: s-12345678
            terraformConfigurations:
              aws:
                gitConfiguration:
                  referenceName: ref
                  repositoryUrl: gitUrl
                privateModuleGitAccessTokens:
                  tokenName: accessToken
                terraformPath: /project1/tf
          - actionHooks:
            - command: curl -v -X POST https://$HOSTNAME:8080/cluster/init
              scope: CLUSTER
              type: INIT
            additionalSecurityContext:
              AddCapabilities:
              - CAP_NET_ADMIN
              - CAP_NET_RAW
              DropCapabilities:
              - CAP_NET_ADMIN
              - CAP_NET_RAW
              SupplementalGroupIDs:
              - 1001
              - 999
            backupConfiguration:
              backupPeriodInHours: 24
              backupRetentionInDays: 7
            blobStorageConfiguration:
              GCSConfiguration: {}
              S3Configuration: {}
            capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            customLabels:
              key: value
            customSysCTLs:
              net.ipv4.tcp_syncookies: "1"
            customULimits:
            - ULimitsName: NoProc
              ULimitsType: Soft
              ULimitsValue: 1000
            - ULimitsName: NoFile
              ULimitsType: Hard
              ULimitsValue: 2048
            dependencies:
            - parameterMap:
                clusterId: writerId
                clusterOrg: userDatabase
              resourceId: r-12345678
            - parameterMap:
                clusterId: readerId
                clusterOrg: userDatabase
              resourceId: r-abcdef12
            description: An resource to manage a hosted public SaaS offering of a
              multi-writer MySQL service
            environmentVariables:
            - name: MYSQL_ROOT_PASSWORD
              value: password
            fileSystemConfiguration:
              EFSFileSystemConfiguration:
                PerformanceMode: generalPurpose|maxIO
                ProvisionedThroughputInMibps: 125
                ThroughputMode: provisioned|bursting|elastic
            helmChartConfiguration:
              chartName: my-chart
              chartRepoName: my-repo
              chartRepoUrl: https://my-repo.com
              chartValues:
                key1: value1
                key2: 3
                key3:
                  key4: value4
              chartVersion: 1.0.0
              endpointConfiguration:
                admin:
                  host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                  networkingType: PRIVATE
                  ports:
                  - 8080
                  - 8081
                  primary: false
                cluster:
                  host: https://my-endpoint.com
                  networkingType: PUBLIC
                  ports:
                  - 8080
                  - 8081
                  primary: true
              password: my-password
              runtimeConfiguration:
                disableHooks: true
                recreate: true
                resetThenReuseValues: true
                resetValues: true
                reuseValues: true
                skipCRDs: true
                timeoutNanos: 1000000000
                upgradeCRDs: true
                wait: true
                waitForJobs: true
              username: my-user
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            internal: true
            isDeprecated: false
            jobConfig:
              activeDeadlineSeconds: 300
              backoffLimit: 5
            key: galera
            kustomizeConfiguration:
              endpointConfiguration:
                admin:
                  host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                  networkingType: PRIVATE
                  ports:
                  - 8080
                  - 8081
                  primary: false
                cluster:
                  host: https://my-endpoint.com
                  networkingType: PUBLIC
                  ports:
                  - 8080
                  - 8081
                  primary: true
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              helmChartDependencies:
              - chartName: cert-manager
                chartVersion: v1.5.3
              - chartName: nginx-ingress
                chartVersion: v0.48.1
              - chartName: external-dns
                chartVersion: v0.7.0
              - chartName: cnpg-operator
                chartVersion: v0.23.1
              kustomizePath: /kustomize
            l4LoadBalancerConfiguration:
              ingressPortConfiguration:
              - associatedResourceIDs:
                - r-12345678
                - r-abcdef12
                backendPort: 8080
                ingressPort: 1234
              - associatedResourceIDs:
                - r-12345678
                - r-abcdef12
                backendPort: 8081
                ingressPort: 5678
              - associatedResourceIDs:
                - r-vwxybz12
                - r-poij122v
                backendPort: 8082
                ingressPort: 9012
            l7LoadBalancerConfiguration:
              paths:
              - associatedResourceID: r-12345678
                path: /path
                port: 8080
            name: Galera
            operatorCRDConfiguration:
              endpointConfiguration:
                admin:
                  host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
                  networkingType: PRIVATE
                  ports:
                  - 8080
                  - 8081
                  primary: false
                cluster:
                  host: https://my-endpoint.com
                  networkingType: PUBLIC
                  ports:
                  - 8080
                  - 8081
                  primary: true
              helmChartDependencies:
              - chartName: cert-manager
                chartVersion: v1.5.3
              - chartName: nginx-ingress
                chartVersion: v0.48.1
              - chartName: external-dns
                chartVersion: v0.7.0
              - chartName: cnpg-operator
                chartVersion: v0.23.1
              outputParameters:
                expiresAt: $out.status.notAfter
                issuerName: letsencrypt-prod
              readinessConditions:
                $out.status.conditions[?(@.type=='Ready')].status: true
              supplementalFiles:
              - |
                apiVersion: cert-manager.io/v1
                kind: ClusterIssuer
                metadata:
                  name: letsencrypt-prod
                spec:
                  acme:
                    server: https://acme-v02.api.letsencrypt.org/directory
              - |-
                apiVersion: ingress.nginx.io/v1
                kind: IngressClass
                metadata:
                  name: nginx
                spec:
                  controller: nginx.org/ingress-controller
              template: |-
                apiVersion: cert-manager.io/v1
                kind: ClusterIssuer
                metadata:
                  name: letsencrypt-prod
                spec:
                  acme:
                    server: https://acme-v02.api.letsencrypt.org/directory
                    email: test@example.com
                    privateKeySecretRef:
                      name: letsencrypt-prod
                    solvers:
                    - http01:
                        ingress:
                          class: nginx
            productTierId: pt-12345678
            proxyType: PortsBasedProxy
            resourceType: Generic
            serviceId: s-12345678
            terraformConfigurations:
              aws:
                gitConfiguration:
                  referenceName: ref
                  repositoryUrl: gitUrl
                privateModuleGitAccessTokens:
                  tokenName: accessToken
                terraformPath: /project1/tf
          items:
            $ref: '#/components/schemas/DescribeResourceResult'
          type: array
      required:
      - ids
      type: object
    ListSaaSPortalCustomDomainsRequest:
      example:
        token: o
      properties:
        token:
          description: JWT token used to perform authorization
          example: 2x
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListSaaSPortalCustomDomainsResult:
      example:
        customDomains:
        - clusterEndpoint: example.com
          customDomain: mycustomdomain.com
          description: My custom domain description
          environmentType: DEV
          name: MyCustomDomain
          status: READY
        - clusterEndpoint: example.com
          customDomain: mycustomdomain.com
          description: My custom domain description
          environmentType: DEV
          name: MyCustomDomain
          status: READY
        - clusterEndpoint: example.com
          customDomain: mycustomdomain.com
          description: My custom domain description
          environmentType: DEV
          name: MyCustomDomain
          status: READY
        - clusterEndpoint: example.com
          customDomain: mycustomdomain.com
          description: My custom domain description
          environmentType: DEV
          name: MyCustomDomain
          status: READY
      properties:
        customDomains:
          description: The list of custom domains
          example:
          - clusterEndpoint: example.com
            customDomain: mycustomdomain.com
            description: My custom domain description
            environmentType: DEV
            name: MyCustomDomain
            status: READY
          - clusterEndpoint: example.com
            customDomain: mycustomdomain.com
            description: My custom domain description
            environmentType: DEV
            name: MyCustomDomain
            status: READY
          - clusterEndpoint: example.com
            customDomain: mycustomdomain.com
            description: My custom domain description
            environmentType: DEV
            name: MyCustomDomain
            status: READY
          - clusterEndpoint: example.com
            customDomain: mycustomdomain.com
            description: My custom domain description
            environmentType: DEV
            name: MyCustomDomain
            status: READY
          items:
            $ref: '#/components/schemas/CustomDomain'
          type: array
      required:
      - customDomains
      type: object
    ListSaaSPortalsRequest:
      example:
        token: k
      properties:
        token:
          description: JWT token used to perform authorization
          example: m8
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListSaaSPortalsResult:
      example:
        saasPortals:
        - customDomain: mycustomdomain.com
          customDomainStatus: READY
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: saasportal
              resourceName: SaaS Portal
          disablePasswordLogin: false
          emailConfig:
            smtpFromEmail: example@gmail.com
            smtpHost: smtp.gmail.com
            smtpPassword: password
            smtpPort: 587
            smtpUsername: username
          endpoint: https://saas-portal.example.com
          environmentType: DEV
          googleAnalyticsTagID: G-123456789
          imageConfig:
            imageName: myimage
            imageRegistry: ghcr.io
            imageTag: latest
          status: READY
        - customDomain: mycustomdomain.com
          customDomainStatus: READY
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: saasportal
              resourceName: SaaS Portal
          disablePasswordLogin: false
          emailConfig:
            smtpFromEmail: example@gmail.com
            smtpHost: smtp.gmail.com
            smtpPassword: password
            smtpPort: 587
            smtpUsername: username
          endpoint: https://saas-portal.example.com
          environmentType: DEV
          googleAnalyticsTagID: G-123456789
          imageConfig:
            imageName: myimage
            imageRegistry: ghcr.io
            imageTag: latest
          status: READY
      properties:
        saasPortals:
          description: The list of saas portals
          example:
          - customDomain: mycustomdomain.com
            customDomainStatus: READY
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: saasportal
                resourceName: SaaS Portal
            disablePasswordLogin: false
            emailConfig:
              smtpFromEmail: example@gmail.com
              smtpHost: smtp.gmail.com
              smtpPassword: password
              smtpPort: 587
              smtpUsername: username
            endpoint: https://saas-portal.example.com
            environmentType: DEV
            googleAnalyticsTagID: G-123456789
            imageConfig:
              imageName: myimage
              imageRegistry: ghcr.io
              imageTag: latest
            status: READY
          - customDomain: mycustomdomain.com
            customDomainStatus: READY
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: saasportal
                resourceName: SaaS Portal
            disablePasswordLogin: false
            emailConfig:
              smtpFromEmail: example@gmail.com
              smtpHost: smtp.gmail.com
              smtpPassword: password
              smtpPort: 587
              smtpUsername: username
            endpoint: https://saas-portal.example.com
            environmentType: DEV
            googleAnalyticsTagID: G-123456789
            imageConfig:
              imageName: myimage
              imageRegistry: ghcr.io
              imageTag: latest
            status: READY
          items:
            $ref: '#/components/schemas/SaaSPortal'
          type: array
      required:
      - saasPortals
      type: object
    ListServiceAPIsRequest:
      example:
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        token: x
      properties:
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: j
          minLength: 1
          type: string
      required:
      - serviceEnvironmentId
      - serviceId
      - token
      type: object
    ListServiceAPIsResult:
      example:
        ids:
        - sa-12345678
        nextPageToken: next-token
      properties:
        ids:
          description: The list of service API IDs
          example:
          - sa-12345678
          items:
            description: ID of a Service API
            example: Ipsam vel veniam a porro.
            type: string
          type: array
        nextPageToken:
          description: The next token to use for pagination
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListServiceEnvironmentsRequest:
      example:
        serviceId: s-12345678
        token: pj
      properties:
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "7"
          minLength: 1
          type: string
      required:
      - serviceId
      - token
      type: object
    ListServiceEnvironmentsResult:
      example:
        ids:
        - se-12345678
        - se-23456789
        nextPageToken: next-token
      properties:
        ids:
          description: The list of service environment IDs
          example:
          - se-12345678
          - se-23456789
          items:
            description: ID of a Service Environment
            example: se-123456
            type: string
          type: array
        nextPageToken:
          description: The next token to use to retrieve the next page of results
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListServiceModelsRequest:
      example:
        serviceApiId: sa-12345678
        serviceId: s-12345678
        token: "n"
      properties:
        serviceApiId:
          description: ID of a Service API
          example: Sed dolore id officia animi ut.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "116"
          minLength: 1
          type: string
      required:
      - serviceApiId
      - serviceId
      - token
      type: object
    ListServiceModelsResult:
      example:
        ids:
        - sm-12345678
        - sm-87654321
        nextPageToken: next-token
      properties:
        ids:
          description: The service model IDs
          example:
          - sm-12345678
          - sm-87654321
          items:
            description: ID of a Service Model
            example: Molestiae pariatur tenetur eaque omnis rerum.
            type: string
          type: array
        nextPageToken:
          description: The next token to use when listing service models
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListServiceOfferingsRequest:
      example:
        environmentType: DEV
        orgId: org-12345678
        token: c7i
        visibility: PRIVATE
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        orgId:
          description: ID of an Org
          example: Nam ex non quisquam ipsum asperiores qui.
          type: string
        token:
          description: JWT token used to perform authorization
          example: dn
          minLength: 1
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - token
      type: object
    ListServiceOfferingsResult:
      example:
        nextPageToken: next-token
        serviceIds:
        - s-12345678
        - s-abcdefgh
        services:
        - createdAt: 2019-01-01T00:00:00Z
          isDeprecated: false
          offerings:
          - allowCreatesWhenPaymentNotConfigured: true
            assets:
              cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
              cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
            maxNumberOfInstances: 4
            productTierName: Premium
            productTierURLKey: premium
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-12345678
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PRIVATE
            serviceModelName: Bring Your Own Account
            serviceModelURLKey: byoa
          - productTierName: Basic
            productTierURLKey: basic
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-abcdefgh
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PUBLIC
            serviceModelName: Hosted
            serviceModelURLKey: hosted
          serviceDescription: MySQL is a relational database
          serviceId: s-12345678
          serviceName: MySQL
          serviceOrgId: org-12345678
          serviceProviderId: sp-9zrg9W8Are
          serviceProviderName: "Omnistrate, Inc."
          serviceURLKey: mysql
        - createdAt: 2019-01-01T00:00:00Z
          isDeprecated: false
          offerings:
          - allowCreatesWhenPaymentNotConfigured: true
            assets:
              cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
              cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
            maxNumberOfInstances: 4
            productTierName: Premium
            productTierURLKey: premium
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-12345678
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PRIVATE
            serviceModelName: Bring Your Own Account
            serviceModelURLKey: byoa
          - productTierName: Basic
            productTierURLKey: basic
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-abcdefgh
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PUBLIC
            serviceModelName: Hosted
            serviceModelURLKey: hosted
          serviceDescription: MySQL is a relational database
          serviceId: s-12345678
          serviceName: MySQL
          serviceOrgId: org-12345678
          serviceProviderId: sp-9zrg9W8Are
          serviceProviderName: "Omnistrate, Inc."
          serviceURLKey: mysql
        - createdAt: 2019-01-01T00:00:00Z
          isDeprecated: false
          offerings:
          - allowCreatesWhenPaymentNotConfigured: true
            assets:
              cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
              cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
            maxNumberOfInstances: 4
            productTierName: Premium
            productTierURLKey: premium
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-12345678
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PRIVATE
            serviceModelName: Bring Your Own Account
            serviceModelURLKey: byoa
          - productTierName: Basic
            productTierURLKey: basic
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-abcdefgh
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PUBLIC
            serviceModelName: Hosted
            serviceModelURLKey: hosted
          serviceDescription: MySQL is a relational database
          serviceId: s-12345678
          serviceName: MySQL
          serviceOrgId: org-12345678
          serviceProviderId: sp-9zrg9W8Are
          serviceProviderName: "Omnistrate, Inc."
          serviceURLKey: mysql
      properties:
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        serviceIds:
          description: The service IDs
          example:
          - s-12345678
          - s-abcdefgh
          items:
            description: ID of a Service
            example: s-123456
            type: string
          type: array
        services:
          description: List of services
          example:
          - createdAt: 2019-01-01T00:00:00Z
            isDeprecated: false
            offerings:
            - allowCreatesWhenPaymentNotConfigured: true
              assets:
                cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
              maxNumberOfInstances: 4
              productTierName: Premium
              productTierURLKey: premium
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-12345678
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PRIVATE
              serviceModelName: Bring Your Own Account
              serviceModelURLKey: byoa
            - productTierName: Basic
              productTierURLKey: basic
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-abcdefgh
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PUBLIC
              serviceModelName: Hosted
              serviceModelURLKey: hosted
            serviceDescription: MySQL is a relational database
            serviceId: s-12345678
            serviceName: MySQL
            serviceOrgId: org-12345678
            serviceProviderId: sp-9zrg9W8Are
            serviceProviderName: "Omnistrate, Inc."
            serviceURLKey: mysql
          - createdAt: 2019-01-01T00:00:00Z
            isDeprecated: false
            offerings:
            - allowCreatesWhenPaymentNotConfigured: true
              assets:
                cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
              maxNumberOfInstances: 4
              productTierName: Premium
              productTierURLKey: premium
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-12345678
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PRIVATE
              serviceModelName: Bring Your Own Account
              serviceModelURLKey: byoa
            - productTierName: Basic
              productTierURLKey: basic
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-abcdefgh
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PUBLIC
              serviceModelName: Hosted
              serviceModelURLKey: hosted
            serviceDescription: MySQL is a relational database
            serviceId: s-12345678
            serviceName: MySQL
            serviceOrgId: org-12345678
            serviceProviderId: sp-9zrg9W8Are
            serviceProviderName: "Omnistrate, Inc."
            serviceURLKey: mysql
          - createdAt: 2019-01-01T00:00:00Z
            isDeprecated: false
            offerings:
            - allowCreatesWhenPaymentNotConfigured: true
              assets:
                cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
              maxNumberOfInstances: 4
              productTierName: Premium
              productTierURLKey: premium
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-12345678
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PRIVATE
              serviceModelName: Bring Your Own Account
              serviceModelURLKey: byoa
            - productTierName: Basic
              productTierURLKey: basic
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-abcdefgh
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PUBLIC
              serviceModelName: Hosted
              serviceModelURLKey: hosted
            serviceDescription: MySQL is a relational database
            serviceId: s-12345678
            serviceName: MySQL
            serviceOrgId: org-12345678
            serviceProviderId: sp-9zrg9W8Are
            serviceProviderName: "Omnistrate, Inc."
            serviceURLKey: mysql
          items:
            $ref: '#/components/schemas/DescribeServiceOfferingResult'
          type: array
      required:
      - serviceIds
      type: object
    ListServicePlansRequest:
      example:
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        token: u
      properties:
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "54"
          minLength: 1
          type: string
      required:
      - serviceEnvironmentId
      - serviceId
      - token
      type: object
    ListServicePlansResult:
      example:
        nextPageToken: next-token
        servicePlans:
        - AutoApproveSubscription: false
          accountConfigIds:
          - ac-12345678
          - ac-23456789
          activeAccountConfigIds:
            aws: ac-12345678
            gcp: ac-23456789
          apiVersion: v1
          awsRegions:
          - us-east-2
          - ca-central-1
          azureRegions:
          - northcentralus
          deploymentConfigId: dc-12345678
          gcpRegions:
          - us-central1
          hasPendingChanges: true
          isProductTierDisabled: true
          latestMajorVersion: "3.0"
          modelType: CUSTOMER_HOSTED
          productTierDescription: A premium product tier
          productTierDocumentation: Any documentation
          productTierFeatures:
            LOGS: true
            METRICS: false
          productTierId: pt-12345678
          productTierKey: premium
          productTierName: Premium
          productTierPlanDescription: A premium plan
          productTierPricing:
            price1: value1
          productTierSupport: Any support
          serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
            clusters for high availability
          serviceApiId: sa-12345678
          serviceEnvironmentId: se-12345678
          serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
            clusters for high availability
          serviceModelFeatures:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          serviceModelId: sm-12345678
          serviceModelName: MySQL multi-writer service hosted model
          tierType: OMNISTRATE_DEDICATED_TENANCY
          versionSetStatus: Preferred|Active|Deprecated|Pending
        - AutoApproveSubscription: false
          accountConfigIds:
          - ac-12345678
          - ac-23456789
          activeAccountConfigIds:
            aws: ac-12345678
            gcp: ac-23456789
          apiVersion: v1
          awsRegions:
          - us-east-2
          - ca-central-1
          azureRegions:
          - northcentralus
          deploymentConfigId: dc-12345678
          gcpRegions:
          - us-central1
          hasPendingChanges: true
          isProductTierDisabled: true
          latestMajorVersion: "3.0"
          modelType: CUSTOMER_HOSTED
          productTierDescription: A premium product tier
          productTierDocumentation: Any documentation
          productTierFeatures:
            LOGS: true
            METRICS: false
          productTierId: pt-12345678
          productTierKey: premium
          productTierName: Premium
          productTierPlanDescription: A premium plan
          productTierPricing:
            price1: value1
          productTierSupport: Any support
          serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
            clusters for high availability
          serviceApiId: sa-12345678
          serviceEnvironmentId: se-12345678
          serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
            clusters for high availability
          serviceModelFeatures:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          serviceModelId: sm-12345678
          serviceModelName: MySQL multi-writer service hosted model
          tierType: OMNISTRATE_DEDICATED_TENANCY
          versionSetStatus: Preferred|Active|Deprecated|Pending
        - AutoApproveSubscription: false
          accountConfigIds:
          - ac-12345678
          - ac-23456789
          activeAccountConfigIds:
            aws: ac-12345678
            gcp: ac-23456789
          apiVersion: v1
          awsRegions:
          - us-east-2
          - ca-central-1
          azureRegions:
          - northcentralus
          deploymentConfigId: dc-12345678
          gcpRegions:
          - us-central1
          hasPendingChanges: true
          isProductTierDisabled: true
          latestMajorVersion: "3.0"
          modelType: CUSTOMER_HOSTED
          productTierDescription: A premium product tier
          productTierDocumentation: Any documentation
          productTierFeatures:
            LOGS: true
            METRICS: false
          productTierId: pt-12345678
          productTierKey: premium
          productTierName: Premium
          productTierPlanDescription: A premium plan
          productTierPricing:
            price1: value1
          productTierSupport: Any support
          serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
            clusters for high availability
          serviceApiId: sa-12345678
          serviceEnvironmentId: se-12345678
          serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
            clusters for high availability
          serviceModelFeatures:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          serviceModelId: sm-12345678
          serviceModelName: MySQL multi-writer service hosted model
          tierType: OMNISTRATE_DEDICATED_TENANCY
          versionSetStatus: Preferred|Active|Deprecated|Pending
      properties:
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
        servicePlans:
          description: List of service plans
          example:
          - AutoApproveSubscription: false
            accountConfigIds:
            - ac-12345678
            - ac-23456789
            activeAccountConfigIds:
              aws: ac-12345678
              gcp: ac-23456789
            apiVersion: v1
            awsRegions:
            - us-east-2
            - ca-central-1
            azureRegions:
            - northcentralus
            deploymentConfigId: dc-12345678
            gcpRegions:
            - us-central1
            hasPendingChanges: true
            isProductTierDisabled: true
            latestMajorVersion: "3.0"
            modelType: CUSTOMER_HOSTED
            productTierDescription: A premium product tier
            productTierDocumentation: Any documentation
            productTierFeatures:
              LOGS: true
              METRICS: false
            productTierId: pt-12345678
            productTierKey: premium
            productTierName: Premium
            productTierPlanDescription: A premium plan
            productTierPricing:
              price1: value1
            productTierSupport: Any support
            serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
              clusters for high availability
            serviceApiId: sa-12345678
            serviceEnvironmentId: se-12345678
            serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
              clusters for high availability
            serviceModelFeatures:
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            serviceModelId: sm-12345678
            serviceModelName: MySQL multi-writer service hosted model
            tierType: OMNISTRATE_DEDICATED_TENANCY
            versionSetStatus: Preferred|Active|Deprecated|Pending
          - AutoApproveSubscription: false
            accountConfigIds:
            - ac-12345678
            - ac-23456789
            activeAccountConfigIds:
              aws: ac-12345678
              gcp: ac-23456789
            apiVersion: v1
            awsRegions:
            - us-east-2
            - ca-central-1
            azureRegions:
            - northcentralus
            deploymentConfigId: dc-12345678
            gcpRegions:
            - us-central1
            hasPendingChanges: true
            isProductTierDisabled: true
            latestMajorVersion: "3.0"
            modelType: CUSTOMER_HOSTED
            productTierDescription: A premium product tier
            productTierDocumentation: Any documentation
            productTierFeatures:
              LOGS: true
              METRICS: false
            productTierId: pt-12345678
            productTierKey: premium
            productTierName: Premium
            productTierPlanDescription: A premium plan
            productTierPricing:
              price1: value1
            productTierSupport: Any support
            serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
              clusters for high availability
            serviceApiId: sa-12345678
            serviceEnvironmentId: se-12345678
            serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
              clusters for high availability
            serviceModelFeatures:
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            serviceModelId: sm-12345678
            serviceModelName: MySQL multi-writer service hosted model
            tierType: OMNISTRATE_DEDICATED_TENANCY
            versionSetStatus: Preferred|Active|Deprecated|Pending
          - AutoApproveSubscription: false
            accountConfigIds:
            - ac-12345678
            - ac-23456789
            activeAccountConfigIds:
              aws: ac-12345678
              gcp: ac-23456789
            apiVersion: v1
            awsRegions:
            - us-east-2
            - ca-central-1
            azureRegions:
            - northcentralus
            deploymentConfigId: dc-12345678
            gcpRegions:
            - us-central1
            hasPendingChanges: true
            isProductTierDisabled: true
            latestMajorVersion: "3.0"
            modelType: CUSTOMER_HOSTED
            productTierDescription: A premium product tier
            productTierDocumentation: Any documentation
            productTierFeatures:
              LOGS: true
              METRICS: false
            productTierId: pt-12345678
            productTierKey: premium
            productTierName: Premium
            productTierPlanDescription: A premium plan
            productTierPricing:
              price1: value1
            productTierSupport: Any support
            serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
              clusters for high availability
            serviceApiId: sa-12345678
            serviceEnvironmentId: se-12345678
            serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
              clusters for high availability
            serviceModelFeatures:
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            serviceModelId: sm-12345678
            serviceModelName: MySQL multi-writer service hosted model
            tierType: OMNISTRATE_DEDICATED_TENANCY
            versionSetStatus: Preferred|Active|Deprecated|Pending
          - AutoApproveSubscription: false
            accountConfigIds:
            - ac-12345678
            - ac-23456789
            activeAccountConfigIds:
              aws: ac-12345678
              gcp: ac-23456789
            apiVersion: v1
            awsRegions:
            - us-east-2
            - ca-central-1
            azureRegions:
            - northcentralus
            deploymentConfigId: dc-12345678
            gcpRegions:
            - us-central1
            hasPendingChanges: true
            isProductTierDisabled: true
            latestMajorVersion: "3.0"
            modelType: CUSTOMER_HOSTED
            productTierDescription: A premium product tier
            productTierDocumentation: Any documentation
            productTierFeatures:
              LOGS: true
              METRICS: false
            productTierId: pt-12345678
            productTierKey: premium
            productTierName: Premium
            productTierPlanDescription: A premium plan
            productTierPricing:
              price1: value1
            productTierSupport: Any support
            serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
              clusters for high availability
            serviceApiId: sa-12345678
            serviceEnvironmentId: se-12345678
            serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
              clusters for high availability
            serviceModelFeatures:
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            serviceModelId: sm-12345678
            serviceModelName: MySQL multi-writer service hosted model
            tierType: OMNISTRATE_DEDICATED_TENANCY
            versionSetStatus: Preferred|Active|Deprecated|Pending
          items:
            $ref: '#/components/schemas/GetServicePlanResult'
          type: array
      required:
      - servicePlans
      type: object
    ListServiceProviderEvents:
      example:
        endDate: 2024-01-01T10:00:00Z
        environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV
        eventTypes:
        - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
        - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
        instanceID: instance-12345678
        nextPageToken: token
        pageSize: 10
        productTierID: Beatae beatae.
        serviceEnvironmentID: se-123456
        serviceID: s-123456
        startDate: 2023-01-01T10:00:00Z
        token: x
      properties:
        endDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        eventTypes:
          description: The event types to filter by
          example:
          - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
          - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
          - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
          - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
          items:
            description: The type of the service provider specific event
            example: UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
            type: string
          type: array
        instanceID:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        productTierID:
          description: ID of a Product Tier
          example: Eaque sed numquam sint ratione.
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        startDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        token:
          description: JWT token used to perform authorization
          example: u
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListServiceProviderEventsResult:
      example:
        events:
        - alertType: Alarm
          eventCategory: InstanceEvent
          eventID: e-123456
          eventPayload:
            Aut odit itaque amet voluptatum.: Quia sit quaerat porro et.
            Dolore enim maiores dolorem.: Consequatur nihil nostrum rerum doloremque.
            Enim sunt.: Rerum ex.
          eventType: UnhealthyInstance
          expiryTime: 2023-01-10T00:00:00Z
          instanceID: instance-12345678
          planVersion: v1.0
          priority: Critical
          resourceName: Resource-123
          scope: ServiceProvider
          serviceEnvironmentID: se-123456
          serviceID: s-123456
          serviceName: Service-123
          servicePlanName: Basic Plan
          time: 2023-01-10T00:00:00Z
        - alertType: Alarm
          eventCategory: InstanceEvent
          eventID: e-123456
          eventPayload:
            Aut odit itaque amet voluptatum.: Quia sit quaerat porro et.
            Dolore enim maiores dolorem.: Consequatur nihil nostrum rerum doloremque.
            Enim sunt.: Rerum ex.
          eventType: UnhealthyInstance
          expiryTime: 2023-01-10T00:00:00Z
          instanceID: instance-12345678
          planVersion: v1.0
          priority: Critical
          resourceName: Resource-123
          scope: ServiceProvider
          serviceEnvironmentID: se-123456
          serviceID: s-123456
          serviceName: Service-123
          servicePlanName: Basic Plan
          time: 2023-01-10T00:00:00Z
        eventsSummary:
          eventsSummary:
            FailedDeployment: 1
            UnhealthyInstance: 2
        nextPageToken: token
      properties:
        events:
          description: List of events
          example:
          - alertType: Alarm
            eventCategory: InstanceEvent
            eventID: e-123456
            eventPayload:
              Aut odit itaque amet voluptatum.: Quia sit quaerat porro et.
              Dolore enim maiores dolorem.: Consequatur nihil nostrum rerum doloremque.
              Enim sunt.: Rerum ex.
            eventType: UnhealthyInstance
            expiryTime: 2023-01-10T00:00:00Z
            instanceID: instance-12345678
            planVersion: v1.0
            priority: Critical
            resourceName: Resource-123
            scope: ServiceProvider
            serviceEnvironmentID: se-123456
            serviceID: s-123456
            serviceName: Service-123
            servicePlanName: Basic Plan
            time: 2023-01-10T00:00:00Z
          - alertType: Alarm
            eventCategory: InstanceEvent
            eventID: e-123456
            eventPayload:
              Aut odit itaque amet voluptatum.: Quia sit quaerat porro et.
              Dolore enim maiores dolorem.: Consequatur nihil nostrum rerum doloremque.
              Enim sunt.: Rerum ex.
            eventType: UnhealthyInstance
            expiryTime: 2023-01-10T00:00:00Z
            instanceID: instance-12345678
            planVersion: v1.0
            priority: Critical
            resourceName: Resource-123
            scope: ServiceProvider
            serviceEnvironmentID: se-123456
            serviceID: s-123456
            serviceName: Service-123
            servicePlanName: Basic Plan
            time: 2023-01-10T00:00:00Z
          - alertType: Alarm
            eventCategory: InstanceEvent
            eventID: e-123456
            eventPayload:
              Aut odit itaque amet voluptatum.: Quia sit quaerat porro et.
              Dolore enim maiores dolorem.: Consequatur nihil nostrum rerum doloremque.
              Enim sunt.: Rerum ex.
            eventType: UnhealthyInstance
            expiryTime: 2023-01-10T00:00:00Z
            instanceID: instance-12345678
            planVersion: v1.0
            priority: Critical
            resourceName: Resource-123
            scope: ServiceProvider
            serviceEnvironmentID: se-123456
            serviceID: s-123456
            serviceName: Service-123
            servicePlanName: Basic Plan
            time: 2023-01-10T00:00:00Z
          items:
            $ref: '#/components/schemas/ServiceProviderEvent'
          type: array
        eventsSummary:
          $ref: '#/components/schemas/ServiceProviderEventSummary'
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
      required:
      - events
      - eventsSummary
      type: object
    ListServiceResult:
      example:
        ids:
        - s-12345678
        - s-abcdefgh
        - s-1234efgh
        nextPageToken: next-token
        services:
        - createdAt: 2019-01-01T00:00:00Z
          description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: s-12345678
          key: mysql
          name: MySQL multi-writer service
          roleType: admin
          serviceEnvironments:
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          serviceLogoURL: Deleniti et enim autem sunt.
          serviceProviderID: sp-12345678
          serviceProviderName: "Omnistrate, Inc."
        - createdAt: 2019-01-01T00:00:00Z
          description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: s-12345678
          key: mysql
          name: MySQL multi-writer service
          roleType: admin
          serviceEnvironments:
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          serviceLogoURL: Deleniti et enim autem sunt.
          serviceProviderID: sp-12345678
          serviceProviderName: "Omnistrate, Inc."
      properties:
        ids:
          description: List of service IDs
          example:
          - s-12345678
          - s-abcdefgh
          - s-1234efgh
          items:
            description: ID of a Service
            example: s-123456
            type: string
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results
          example: next-token
          type: string
        services:
          description: List of services
          example:
          - createdAt: 2019-01-01T00:00:00Z
            description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: s-12345678
            key: mysql
            name: MySQL multi-writer service
            roleType: admin
            serviceEnvironments:
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            serviceLogoURL: Deleniti et enim autem sunt.
            serviceProviderID: sp-12345678
            serviceProviderName: "Omnistrate, Inc."
          - createdAt: 2019-01-01T00:00:00Z
            description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: s-12345678
            key: mysql
            name: MySQL multi-writer service
            roleType: admin
            serviceEnvironments:
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            serviceLogoURL: Deleniti et enim autem sunt.
            serviceProviderID: sp-12345678
            serviceProviderName: "Omnistrate, Inc."
          - createdAt: 2019-01-01T00:00:00Z
            description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: s-12345678
            key: mysql
            name: MySQL multi-writer service
            roleType: admin
            serviceEnvironments:
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            serviceLogoURL: Deleniti et enim autem sunt.
            serviceProviderID: sp-12345678
            serviceProviderName: "Omnistrate, Inc."
          - createdAt: 2019-01-01T00:00:00Z
            description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: s-12345678
            key: mysql
            name: MySQL multi-writer service
            roleType: admin
            serviceEnvironments:
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            serviceLogoURL: Deleniti et enim autem sunt.
            serviceProviderID: sp-12345678
            serviceProviderName: "Omnistrate, Inc."
          items:
            $ref: '#/components/schemas/DescribeServiceResult'
          type: array
      required:
      - ids
      type: object
    ListServicesOrchestrationsRequest:
      example:
        token: sci
      properties:
        token:
          description: JWT token used to perform authorization
          example: ad9
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListServicesOrchestrationsResult:
      description: List of service orchestrations
      example:
      - ServicesTopology:
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Est in eum ut commodi harum.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Est in eum ut commodi harum.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Est in eum ut commodi harum.
        createdAt: 2021-01-01T00:00:00Z
        id: so-12345678
        orchestrationFailedReason: Invalid DSL
        resultParams:
          param1: value1
          param2: value2
        status: PENDING
        updatedAt: 2021-01-01T00:00:00Z
      - ServicesTopology:
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Est in eum ut commodi harum.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Est in eum ut commodi harum.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Est in eum ut commodi harum.
        createdAt: 2021-01-01T00:00:00Z
        id: so-12345678
        orchestrationFailedReason: Invalid DSL
        resultParams:
          param1: value1
          param2: value2
        status: PENDING
        updatedAt: 2021-01-01T00:00:00Z
      - ServicesTopology:
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Est in eum ut commodi harum.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Est in eum ut commodi harum.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Est in eum ut commodi harum.
        createdAt: 2021-01-01T00:00:00Z
        id: so-12345678
        orchestrationFailedReason: Invalid DSL
        resultParams:
          param1: value1
          param2: value2
        status: PENDING
        updatedAt: 2021-01-01T00:00:00Z
      - ServicesTopology:
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Est in eum ut commodi harum.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Est in eum ut commodi harum.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Est in eum ut commodi harum.
        createdAt: 2021-01-01T00:00:00Z
        id: so-12345678
        orchestrationFailedReason: Invalid DSL
        resultParams:
          param1: value1
          param2: value2
        status: PENDING
        updatedAt: 2021-01-01T00:00:00Z
      items:
        $ref: '#/components/schemas/DescribeServicesOrchestrationResult'
      type: array
    ListStorageConfigsRequest:
      example:
        managed: false
        serviceId: s-12345678
        token: "y"
      properties:
        managed:
          description: Is storage config managed by omnistrate
          example: false
          type: boolean
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: zlg
          minLength: 1
          type: string
      required:
      - serviceId
      - token
      type: object
    ListStorageConfigsResult:
      example:
        ids:
        - sc-12345678
        nextPageToken: next-token
      properties:
        ids:
          description: List of storage config IDs
          example:
          - sc-12345678
          items:
            description: ID of a Storage Config
            example: Tempore voluptas modi in qui iure tempora.
            type: string
          type: array
        nextPageToken:
          description: Token to use to get the next page of results
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListStorageVolumeConfigsRequest:
      example:
        managed: false
        serviceId: s-12345678
        token: "4"
      properties:
        managed:
          description: Is storage volume config managed by omnistrate
          example: false
          type: boolean
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: mqe
          minLength: 1
          type: string
      required:
      - serviceId
      - token
      type: object
    ListStorageVolumeConfigsResult:
      example:
        ids:
        - svc-12345678
        nextPageToken: next-token
      properties:
        ids:
          description: The storage volume config ids to list
          example:
          - svc-12345678
          items:
            description: ID of a Storage Volume Config
            example: Dolore ullam molestias quis cum.
            type: string
          type: array
        nextPageToken:
          description: The next token to use for pagination
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListSubscriptionRequestsRequest:
      example:
        status: PENDING
        token: 9mr
      properties:
        status:
          description: The status of the subscription request
          example: PENDING|APPROVED|DENIED|CANCELLED
          type: string
        token:
          description: JWT token used to perform authorization
          example: c
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListSubscriptionRequestsResult:
      example:
        ids:
        - subr-12345678
        - subr-abcdefgh
        - subr-1234efgh
        nextPageToken: next-token
        subscriptionRequests:
        - createdAt: 2019-01-01T00:00:00Z
          id: subr-12345678
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          rootUserEmail: abc@gmail.com
          rootUserId: org-12345678
          rootUserName: John Doe
          serviceId: s-12345678
          serviceLogoURL: Enim assumenda consequatur ad quia officia.
          serviceName: MySQL multi-writer service
          status: PENDING
          updatedAt: 2019-01-01T00:00:00Z
          updatedByUserId: user-12345678
          updatedByUserName: John Doe
        - createdAt: 2019-01-01T00:00:00Z
          id: subr-12345678
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          rootUserEmail: abc@gmail.com
          rootUserId: org-12345678
          rootUserName: John Doe
          serviceId: s-12345678
          serviceLogoURL: Enim assumenda consequatur ad quia officia.
          serviceName: MySQL multi-writer service
          status: PENDING
          updatedAt: 2019-01-01T00:00:00Z
          updatedByUserId: user-12345678
          updatedByUserName: John Doe
        - createdAt: 2019-01-01T00:00:00Z
          id: subr-12345678
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          rootUserEmail: abc@gmail.com
          rootUserId: org-12345678
          rootUserName: John Doe
          serviceId: s-12345678
          serviceLogoURL: Enim assumenda consequatur ad quia officia.
          serviceName: MySQL multi-writer service
          status: PENDING
          updatedAt: 2019-01-01T00:00:00Z
          updatedByUserId: user-12345678
          updatedByUserName: John Doe
      properties:
        ids:
          description: List of subscription request IDs
          example:
          - subr-12345678
          - subr-abcdefgh
          - subr-1234efgh
          items:
            description: ID of a Subscription Request
            example: Omnis labore recusandae quis qui qui.
            type: string
          type: array
        nextPageToken:
          description: The next token to use when listing subscription requests
          example: next-token
          type: string
        subscriptionRequests:
          description: List of subscription requests
          example:
          - createdAt: 2019-01-01T00:00:00Z
            id: subr-12345678
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            rootUserEmail: abc@gmail.com
            rootUserId: org-12345678
            rootUserName: John Doe
            serviceId: s-12345678
            serviceLogoURL: Enim assumenda consequatur ad quia officia.
            serviceName: MySQL multi-writer service
            status: PENDING
            updatedAt: 2019-01-01T00:00:00Z
            updatedByUserId: user-12345678
            updatedByUserName: John Doe
          - createdAt: 2019-01-01T00:00:00Z
            id: subr-12345678
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            rootUserEmail: abc@gmail.com
            rootUserId: org-12345678
            rootUserName: John Doe
            serviceId: s-12345678
            serviceLogoURL: Enim assumenda consequatur ad quia officia.
            serviceName: MySQL multi-writer service
            status: PENDING
            updatedAt: 2019-01-01T00:00:00Z
            updatedByUserId: user-12345678
            updatedByUserName: John Doe
          items:
            $ref: '#/components/schemas/DescribeSubscriptionRequestResult'
          type: array
      required:
      - ids
      type: object
    ListSubscriptionsRequest:
      example:
        environmentType: DEV
        serviceId: service-12345678
        token: 3a
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: x9
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListSubscriptionsResult:
      example:
        ids:
        - sub-12345678
        - sub-abcdefgh
        - sub-1234efgh
        nextPageToken: next-token
        subscriptions:
        - accountConfigIdentityId: org-12345678
          cloudProviderNames:
          - aws
          - gcp
          createdAt: 2019-01-01T00:00:00Z
          defaultSubscription: true
          id: sub-12345678
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          roleType: root
          rootUserId: user-12345678
          serviceId: s-12345678
          serviceLogoURL: Dolor accusamus fuga at.
          serviceName: MySQL multi-writer service
          serviceOrgId: org-12345678
          serviceOrgName: Omnistrate
          status: ACTIVE
          subscriptionOwnerName: John Doe
        - accountConfigIdentityId: org-12345678
          cloudProviderNames:
          - aws
          - gcp
          createdAt: 2019-01-01T00:00:00Z
          defaultSubscription: true
          id: sub-12345678
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          roleType: root
          rootUserId: user-12345678
          serviceId: s-12345678
          serviceLogoURL: Dolor accusamus fuga at.
          serviceName: MySQL multi-writer service
          serviceOrgId: org-12345678
          serviceOrgName: Omnistrate
          status: ACTIVE
          subscriptionOwnerName: John Doe
        - accountConfigIdentityId: org-12345678
          cloudProviderNames:
          - aws
          - gcp
          createdAt: 2019-01-01T00:00:00Z
          defaultSubscription: true
          id: sub-12345678
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          roleType: root
          rootUserId: user-12345678
          serviceId: s-12345678
          serviceLogoURL: Dolor accusamus fuga at.
          serviceName: MySQL multi-writer service
          serviceOrgId: org-12345678
          serviceOrgName: Omnistrate
          status: ACTIVE
          subscriptionOwnerName: John Doe
        - accountConfigIdentityId: org-12345678
          cloudProviderNames:
          - aws
          - gcp
          createdAt: 2019-01-01T00:00:00Z
          defaultSubscription: true
          id: sub-12345678
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          roleType: root
          rootUserId: user-12345678
          serviceId: s-12345678
          serviceLogoURL: Dolor accusamus fuga at.
          serviceName: MySQL multi-writer service
          serviceOrgId: org-12345678
          serviceOrgName: Omnistrate
          status: ACTIVE
          subscriptionOwnerName: John Doe
      properties:
        ids:
          description: List of subscription IDs
          example:
          - sub-12345678
          - sub-abcdefgh
          - sub-1234efgh
          items:
            description: ID of a Subscription
            example: Aut ut aut omnis consequuntur.
            type: string
          type: array
        nextPageToken:
          description: The next token to use when listing subscriptions
          example: next-token
          type: string
        subscriptions:
          description: List of subscriptions
          example:
          - accountConfigIdentityId: org-12345678
            cloudProviderNames:
            - aws
            - gcp
            createdAt: 2019-01-01T00:00:00Z
            defaultSubscription: true
            id: sub-12345678
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            roleType: root
            rootUserId: user-12345678
            serviceId: s-12345678
            serviceLogoURL: Dolor accusamus fuga at.
            serviceName: MySQL multi-writer service
            serviceOrgId: org-12345678
            serviceOrgName: Omnistrate
            status: ACTIVE
            subscriptionOwnerName: John Doe
          - accountConfigIdentityId: org-12345678
            cloudProviderNames:
            - aws
            - gcp
            createdAt: 2019-01-01T00:00:00Z
            defaultSubscription: true
            id: sub-12345678
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            roleType: root
            rootUserId: user-12345678
            serviceId: s-12345678
            serviceLogoURL: Dolor accusamus fuga at.
            serviceName: MySQL multi-writer service
            serviceOrgId: org-12345678
            serviceOrgName: Omnistrate
            status: ACTIVE
            subscriptionOwnerName: John Doe
          - accountConfigIdentityId: org-12345678
            cloudProviderNames:
            - aws
            - gcp
            createdAt: 2019-01-01T00:00:00Z
            defaultSubscription: true
            id: sub-12345678
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            roleType: root
            rootUserId: user-12345678
            serviceId: s-12345678
            serviceLogoURL: Dolor accusamus fuga at.
            serviceName: MySQL multi-writer service
            serviceOrgId: org-12345678
            serviceOrgName: Omnistrate
            status: ACTIVE
            subscriptionOwnerName: John Doe
          - accountConfigIdentityId: org-12345678
            cloudProviderNames:
            - aws
            - gcp
            createdAt: 2019-01-01T00:00:00Z
            defaultSubscription: true
            id: sub-12345678
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            roleType: root
            rootUserId: user-12345678
            serviceId: s-12345678
            serviceLogoURL: Dolor accusamus fuga at.
            serviceName: MySQL multi-writer service
            serviceOrgId: org-12345678
            serviceOrgName: Omnistrate
            status: ACTIVE
            subscriptionOwnerName: John Doe
          items:
            $ref: '#/components/schemas/DescribeSubscriptionResult'
          type: array
      required:
      - ids
      type: object
    ListTierVersionSetsRequest:
      example:
        latestIncrementalVersionForMajorVersion: "3.0"
        latestMajorVersionOnly: true
        nextPageToken: token
        pageSize: 10
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: wao
      properties:
        latestIncrementalVersionForMajorVersion:
          description: Returns the latest incremental version for the given major
            version. The parameter needs to be specified in isolation
          example: "3.0"
          type: string
        latestMajorVersionOnly:
          description: Indicates whether to return only the latest version set. The
            parameter needs to be specified in isolation.
          example: true
          type: boolean
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        productTierId:
          description: ID of a Product Tier
          example: Sed optio.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: huh
          minLength: 1
          type: string
      required:
      - productTierId
      - serviceId
      - token
      type: object
    ListTierVersionSetsResult:
      example:
        nextPageToken: next-token
        tierVersionSets:
        - autoApproveSubscription: false
          baseVersion: "3.0"
          createdAt: 2020-01-01T00:00:00Z
          createdBy: John Doe
          description: Labore facilis officia placeat autem optio porro.
          enabledFeatures:
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          features:
            LOGS: true
            METRICS: false
          instanceCount: 12
          latestUpgradePathId: upgrade-12345678
          name: Regular version set
          parentVersion: "2.0"
          productTierId: Beatae beatae.
          releasedAt: 2020-01-01T00:00:00Z
          releasedBy: John Doe
          resources:
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          serviceId: s-12345678
          serviceModelId: Deserunt ab est sequi rem ab in.
          status: Preferred|Active|Deprecated|Pending
          type: Major|Incremental|UserDefined
          updatedAt: 2020-01-01T00:00:00Z
          version: "3.0"
        - autoApproveSubscription: false
          baseVersion: "3.0"
          createdAt: 2020-01-01T00:00:00Z
          createdBy: John Doe
          description: Labore facilis officia placeat autem optio porro.
          enabledFeatures:
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          features:
            LOGS: true
            METRICS: false
          instanceCount: 12
          latestUpgradePathId: upgrade-12345678
          name: Regular version set
          parentVersion: "2.0"
          productTierId: Beatae beatae.
          releasedAt: 2020-01-01T00:00:00Z
          releasedBy: John Doe
          resources:
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          serviceId: s-12345678
          serviceModelId: Deserunt ab est sequi rem ab in.
          status: Preferred|Active|Deprecated|Pending
          type: Major|Incremental|UserDefined
          updatedAt: 2020-01-01T00:00:00Z
          version: "3.0"
        - autoApproveSubscription: false
          baseVersion: "3.0"
          createdAt: 2020-01-01T00:00:00Z
          createdBy: John Doe
          description: Labore facilis officia placeat autem optio porro.
          enabledFeatures:
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          features:
            LOGS: true
            METRICS: false
          instanceCount: 12
          latestUpgradePathId: upgrade-12345678
          name: Regular version set
          parentVersion: "2.0"
          productTierId: Beatae beatae.
          releasedAt: 2020-01-01T00:00:00Z
          releasedBy: John Doe
          resources:
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          serviceId: s-12345678
          serviceModelId: Deserunt ab est sequi rem ab in.
          status: Preferred|Active|Deprecated|Pending
          type: Major|Incremental|UserDefined
          updatedAt: 2020-01-01T00:00:00Z
          version: "3.0"
      properties:
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        tierVersionSets:
          description: List of product-tier version sets.
          example:
          - autoApproveSubscription: false
            baseVersion: "3.0"
            createdAt: 2020-01-01T00:00:00Z
            createdBy: John Doe
            description: Labore facilis officia placeat autem optio porro.
            enabledFeatures:
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            features:
              LOGS: true
              METRICS: false
            instanceCount: 12
            latestUpgradePathId: upgrade-12345678
            name: Regular version set
            parentVersion: "2.0"
            productTierId: Beatae beatae.
            releasedAt: 2020-01-01T00:00:00Z
            releasedBy: John Doe
            resources:
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            serviceId: s-12345678
            serviceModelId: Deserunt ab est sequi rem ab in.
            status: Preferred|Active|Deprecated|Pending
            type: Major|Incremental|UserDefined
            updatedAt: 2020-01-01T00:00:00Z
            version: "3.0"
          - autoApproveSubscription: false
            baseVersion: "3.0"
            createdAt: 2020-01-01T00:00:00Z
            createdBy: John Doe
            description: Labore facilis officia placeat autem optio porro.
            enabledFeatures:
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            features:
              LOGS: true
              METRICS: false
            instanceCount: 12
            latestUpgradePathId: upgrade-12345678
            name: Regular version set
            parentVersion: "2.0"
            productTierId: Beatae beatae.
            releasedAt: 2020-01-01T00:00:00Z
            releasedBy: John Doe
            resources:
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            serviceId: s-12345678
            serviceModelId: Deserunt ab est sequi rem ab in.
            status: Preferred|Active|Deprecated|Pending
            type: Major|Incremental|UserDefined
            updatedAt: 2020-01-01T00:00:00Z
            version: "3.0"
          - autoApproveSubscription: false
            baseVersion: "3.0"
            createdAt: 2020-01-01T00:00:00Z
            createdBy: John Doe
            description: Labore facilis officia placeat autem optio porro.
            enabledFeatures:
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            - configuration:
                provider: native
              feature: LOGS
              scope: INTERNAL
            features:
              LOGS: true
              METRICS: false
            instanceCount: 12
            latestUpgradePathId: upgrade-12345678
            name: Regular version set
            parentVersion: "2.0"
            productTierId: Beatae beatae.
            releasedAt: 2020-01-01T00:00:00Z
            releasedBy: John Doe
            resources:
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            - description: A MySQL SaaS specializing in multi-writer clusters for
                high availability
              id: r-12345678
              imageConfigId: imgc-12345678
              infraConfigId: ic-12345678
              isExternal: true
              managedResourceType: PortsBasedProxy
              name: MySQL multi-writer service
            serviceId: s-12345678
            serviceModelId: Deserunt ab est sequi rem ab in.
            status: Preferred|Active|Deprecated|Pending
            type: Major|Incremental|UserDefined
            updatedAt: 2020-01-01T00:00:00Z
            version: "3.0"
          items:
            $ref: '#/components/schemas/TierVersionSet'
          type: array
      required:
      - tierVersionSets
      type: object
    ListUpgradePathRequest:
      example:
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        token: "2"
      properties:
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: k7
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListUpgradePathResult:
      example:
        ids:
        - up-12345678
        - up-87654321
        nextPageToken: next-token
      properties:
        ids:
          description: List of upgrade path IDs
          example:
          - up-12345678
          - up-87654321
          items:
            description: ID of an Upgrade Path
            example: Nam quia sint quidem aut sed.
            type: string
          type: array
        nextPageToken:
          description: Token to use to get the next page of results
          example: next-token
          type: string
      type: object
    ListVUnitsRequest:
      example:
        cloudProvider: aws
        region: us-west-2
        serviceId: s-12345678
        serviceModelId: sm-12345678
        token: th
      properties:
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        region:
          description: Region code specific to the cloud-provider
          example: us-west-2
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Velit accusamus et harum.
          type: string
        token:
          description: JWT token used to perform authorization
          example: unq
          minLength: 1
          type: string
      required:
      - cloudProvider
      - region
      - serviceId
      - serviceModelId
      - token
      type: object
    ListVUnitsRequest2:
      example:
        cloudProvider: aws
        region: us-west-2
      properties:
        cloudProvider:
          description: The infra / cloud provider name
          example: aws
          type: string
        region:
          description: Region code specific to the cloud-provider
          example: us-west-2
          type: string
      required:
      - cloudProvider
      - region
      type: object
    ListVUnitsResult:
      example:
        ids:
          aws:
          - vu-12345678
          - vu-abcdefgh
          gcp:
          - vu-1234efgh
        nextPageToken: next-token
      properties:
        ids:
          additionalProperties: true
          description: List of VUnit IDs per Cloud provider
          example:
            aws:
            - vu-12345678
            - vu-abcdefgh
            gcp:
            - vu-1234efgh
          type: object
        nextPageToken:
          description: Next page token
          example: next-token
          type: string
      type: object
    LoadBalancerPathConfiguration:
      example:
        associatedKubernetesServiceName: my-service
        associatedResourceID: r-12345678
        path: /path
        port: 8080
      properties:
        associatedKubernetesServiceName:
          description: Override the default target Kubernetes service name with this
            value
          example: my-service
          type: string
        associatedResourceID:
          description: ID of a resource
          example: Incidunt explicabo ullam eum nihil architecto harum.
          type: string
        path:
          description: The REST API path backed by the load balancer
          example: /path
          type: string
        port:
          description: The port to forward traffic to
          example: 8080
          format: int64
          type: integer
      required:
      - associatedResourceID
      - path
      - port
      type: object
    LoginWithIdentityProviderRequest:
      example:
        authorizationCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        deviceCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
        identityProviderName: Google
        invitedEmail: abc@gmail.com
        legalCompanyName: mywebsite
        redirectUri: https://www.example/redirect
      properties:
        authorizationCode:
          description: The authorization code from the Identity Provider
          example: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
          type: string
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        deviceCode:
          description: The device code from the Identity Provider
          example: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
          type: string
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        invitedEmail:
          description: Email address that the user was invited with
          example: abc@gmail.com
          format: email
          type: string
        legalCompanyName:
          example: mywebsite
          minLength: 1
          type: string
        redirectUri:
          description: The redirect URI used to get the authorization code
          example: https://www.example/redirect
          type: string
      required:
      - identityProviderName
      type: object
    LoginWithIdentityProviderResult:
      example:
        jwtToken: ""
      properties:
        jwtToken:
          description: The jwt token
          example: ""
          type: string
      required:
      - jwtToken
      type: object
    LogoutRequest:
      example:
        token: "n"
      properties:
        token:
          description: JWT token used to perform authorization
          example: hdw
          minLength: 1
          type: string
      required:
      - token
      type: object
    ModifyServicesOrchestrationRequest:
      example:
        id: so-12345678
        orchestrationModifyDSL: Recusandae rerum qui.
        token: tmp
      properties:
        id:
          description: ID of a Services Orchestration
          example: Sequi fugit ipsum officia deleniti.
          type: string
        orchestrationModifyDSL:
          description: base64 encoded content of services orchestration modify DSL
          example: Omnis ab quisquam omnis distinctio ex maxime.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 6yn
          minLength: 1
          type: string
      required:
      - id
      - orchestrationModifyDSL
      - token
      type: object
    ModifyServicesOrchestrationRequest2:
      example:
        orchestrationModifyDSL: Iusto veritatis alias eos.
      properties:
        orchestrationModifyDSL:
          description: base64 encoded content of services orchestration modify DSL
          example: Officiis amet.
          type: string
      required:
      - orchestrationModifyDSL
      type: object
    NetworkFeaturesConfiguration:
      example:
        isPrivateLinkEnabled: true
      properties:
        isPrivateLinkEnabled:
          description: Indicates if PrivateLink is enabled for the network
          example: true
          type: boolean
      type: object
    NodeHealthSummary:
      example:
        availabilityZone: us-east-2a
        connectivityStatus: HEALTHY
        diskHealth: HEALTHY
        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
        events:
        - event-1
        - event-2
        integrationsHealth:
          CustomerObservabilityHealth: HEALTHY
          InternalObservabilityHealth: HEALTHY
        loadStatus: LOAD_NORMAL
        nodeHealth: HEALTHY
        nodeName: postgres-0
        ports:
        - 80
        - 443
        processHealth: HEALTHY
        processLiveness: HEALTHY
        recentLogs: Log message
        status: HEALTHY
      properties:
        availabilityZone:
          description: The availability zone of the node
          example: us-east-2a
          type: string
        connectivityStatus:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|N/A
          type: string
        diskHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|N/A
          type: string
        endpoint:
          description: The endpoint of the node
          example: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          type: string
        events:
          description: The list of process events
          example:
          - event-1
          - event-2
          items:
            example: Repellat cum saepe quia.
            type: string
          type: array
        integrationsHealth:
          $ref: '#/components/schemas/IntegrationsHealth'
        loadStatus:
          description: The load status of a pod
          example: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          type: string
        nodeHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|N/A
          type: string
        nodeName:
          description: The name of the node
          example: postgres-0
          type: string
        ports:
          description: The ports that this node exposes
          example:
          - 80
          - 443
          items:
            example: 8162881764245138549
            format: int64
            type: integer
          type: array
        processHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|N/A
          type: string
        processLiveness:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|N/A
          type: string
        recentLogs:
          description: The recent logs of the process
          example: Log message
          type: string
        status:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|N/A
          type: string
      type: object
    NodeNetworkTopologyResult:
      example:
        availabilityZone: us-east-2a
        detailedHealth:
          ConnectivityStatus: UNHEALTHY
          DiskHealth: UNKNOWN
          LoadStatus: LOAD_NORMAL
          NodeHealth: HEALTHY
          ProcessHealth: HEALTHY
          ProcessLiveness: HEALTHY
        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
        healthStatus: HEALTHY
        id: primary-0
        kubernetesDashboardEndpoint:
          dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
          deploymentCellID: hc-12345678
        ports:
        - 80
        - 443
        status: RUNNING
        storageSize: 10
        vmInfo:
          architecture: amd64
          azCode: us-east-1a
          azID: use1-az1
          externalIP: 3.44.113.6
          instanceType: t2.small
          internalIP: 192.168.1.4
          k8sNodeName: my-k8s-node
          kernelVersion: 5.10.228
          kubeletVersion: 1.31.3
          os: linux
          providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
      properties:
        availabilityZone:
          description: The availability zone of the node
          example: us-east-2a
          type: string
        detailedHealth:
          $ref: '#/components/schemas/DetailedNodeHealthResult'
        endpoint:
          description: The endpoint of the node
          example: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          type: string
        healthStatus:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|N/A
          type: string
        id:
          description: The ID of the node
          example: primary-0
          type: string
        kubernetesDashboardEndpoint:
          $ref: '#/components/schemas/KubernetesDashboardEndpoint'
        ports:
          description: The ports that this node exposes
          example:
          - 80
          - 443
          items:
            example: 5369206083707039580
            format: int64
            type: integer
          type: array
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        storageSize:
          description: The storage size of the node in GiB
          example: 10
          format: int64
          type: integer
        vmInfo:
          $ref: '#/components/schemas/NodeVMInfoResult'
      type: object
    NodeVMInfoResult:
      example:
        architecture: amd64
        azCode: us-east-1a
        azID: use1-az1
        externalIP: 3.44.53.111
        instanceType: t2.small
        internalIP: 192.168.1.4
        k8sNodeName: my-k8s-node
        kernelVersion: 5.10.228
        kubeletVersion: 1.31.3
        os: linux
        providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
      properties:
        architecture:
          description: The architecture of the VM
          example: amd64
          type: string
        azCode:
          description: The availability zone code of the VM
          example: us-east-1a
          type: string
        azID:
          description: The availability zone ID of the VM
          example: use1-az1
          type: string
        externalIP:
          description: The external IP of the VM
          example: 3.44.53.111
          type: string
        instanceType:
          description: The instance type of the VM
          example: t2.small
          type: string
        internalIP:
          description: The internal IP of the VM
          example: 192.168.1.4
          type: string
        k8sNodeName:
          description: The k8s node name of the VM
          example: my-k8s-node
          type: string
        kernelVersion:
          description: The kernel version of the VM
          example: 5.10.228
          type: string
        kubeletVersion:
          description: The kubelet version of the VM
          example: 1.31.3
          type: string
        os:
          description: The operating system of the VM
          example: linux
          type: string
        providerID:
          description: The provider ID of the VM
          example: aws:///ap-south-1b/i-06h696g4a643ahf01
          type: string
      required:
      - architecture
      - azCode
      - instanceType
      - internalIP
      - k8sNodeName
      - kubeletVersion
      - os
      - providerID
      type: object
    OmnistrateError:
      example:
        code: 12-999
        message: Required field `x` was not provided in the request
        name: missing_field
      properties:
        code:
          description: Application-specific error code
          example: 12-999
          type: string
        message:
          description: More context on the error that occurred
          example: Required field `x` was not provided in the request
          type: string
        name:
          description: Name of the error
          example: missing_field
          type: string
      required:
      - code
      - message
      - name
      type: object
    OmnistrateServiceHealthResult:
      example:
        status: RUNNING
      properties:
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
      required:
      - status
      type: object
    OmnistrateServiceVersionResult:
      example:
        apiVersion: "1.0"
        buildCommitSHA: 1234567890abcdef1234567890abcdef12345678
        buildTimestamp: 2020-01-01T00:00:00Z
      properties:
        apiVersion:
          description: Version of the Entity to operate on
          example: "1.0"
          minLength: 1
          type: string
        buildCommitSHA:
          description: The commit hash of the build
          example: 1234567890abcdef1234567890abcdef12345678
          type: string
        buildTimestamp:
          description: The timestamp of the build
          example: 2020-01-01T00:00:00Z
          type: string
      required:
      - apiVersion
      - buildCommitSHA
      - buildTimestamp
      type: object
    OperatorCRDConfiguration:
      example:
        endpointConfiguration:
          admin:
            host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
            networkingType: PRIVATE
            ports:
            - 8080
            - 8081
            primary: false
          cluster:
            host: https://my-endpoint.com
            networkingType: PUBLIC
            ports:
            - 8080
            - 8081
            primary: true
        helmChartDependencies:
        - chartName: cert-manager
          chartVersion: v1.5.3
        - chartName: nginx-ingress
          chartVersion: v0.48.1
        - chartName: external-dns
          chartVersion: v0.7.0
        - chartName: cnpg-operator
          chartVersion: v0.23.1
        outputParameters:
          expiresAt: $out.status.notAfter
          issuerName: letsencrypt-prod
        readinessConditions:
          $out.status.conditions[?(@.type=='Ready')].status: true
        supplementalFiles:
        - |
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: letsencrypt-prod
          spec:
            acme:
              server: https://acme-v02.api.letsencrypt.org/directory
        - |-
          apiVersion: ingress.nginx.io/v1
          kind: IngressClass
          metadata:
            name: nginx
          spec:
            controller: nginx.org/ingress-controller
        template: |-
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: letsencrypt-prod
          spec:
            acme:
              server: https://acme-v02.api.letsencrypt.org/directory
              email: test@example.com
              privateKeySecretRef:
                name: letsencrypt-prod
              solvers:
              - http01:
                  ingress:
                    class: nginx
      properties:
        endpointConfiguration:
          additionalProperties:
            $ref: '#/components/schemas/Endpoint'
          description: The endpoints from the Operator CRD Deployment to expose to
            the customer
          example:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          type: object
        helmChartDependencies:
          description: The helm chart dependencies for the CRD (including charts necessary
            to manage the operator) - Optional
          example:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          items:
            $ref: '#/components/schemas/OperatorHelmChartDependency'
          type: array
        outputParameters:
          additionalProperties:
            example: Nisi a praesentium aut.
            type: string
          description: The output parameters to export to the user from the CRD
          example:
            expiresAt: $out.status.notAfter
            issuerName: letsencrypt-prod
          type: object
        readinessConditions:
          additionalProperties: true
          description: The readiness conditions to check for the CRD
          example:
            $out.status.conditions[?(@.type=='Ready')].status: true
          type: object
        supplementalFiles:
          description: The supplemental files to apply with the CRD
          example:
          - |
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
          - |-
            apiVersion: ingress.nginx.io/v1
            kind: IngressClass
            metadata:
              name: nginx
            spec:
              controller: nginx.org/ingress-controller
          items:
            example: Omnis quod.
            type: string
          type: array
        template:
          description: The template of the CRD to apply on every deployment
          example: |-
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
                email: test@example.com
                privateKeySecretRef:
                  name: letsencrypt-prod
                solvers:
                - http01:
                    ingress:
                      class: nginx
          type: string
      required:
      - template
      type: object
    OperatorHelmChartDependency:
      example:
        chartName: cert-manager
        chartRepoName: my-repo
        chartRepoUrl: https://my-repo.com
        chartValues:
          key1: value1
          key2: 3
          key3:
            key4: value4
        chartVersion: v1.5.3
        password: my-password
        username: my-user
      properties:
        chartName:
          description: The name of the helm chart
          example: cert-manager
          type: string
        chartRepoName:
          description: The repository name of the Helm chart
          example: my-repo
          type: string
        chartRepoUrl:
          description: The repository URL of the Helm chart
          example: https://my-repo.com
          type: string
        chartValues:
          additionalProperties: true
          description: The values of the Helm chart
          example:
            key1: value1
            key2: 3
            key3:
              key4: value4
          type: object
        chartVersion:
          description: The version of the helm chart
          example: v1.5.3
          type: string
        password:
          description: The password to authenticate with the registry
          example: my-password
          type: string
        username:
          description: The username to authenticate with the registry
          example: my-user
          type: string
      required:
      - chartName
      - chartVersion
      type: object
    OrgUsers:
      example:
        email: abc@gmail.com
        invitedAt: 2023-01-10T00:00:00Z
        name: John Dae
        roleType: reader
        userId: user-abcd1234
      properties:
        email:
          description: The email of the user
          example: abc@gmail.com
          type: string
        invitedAt:
          description: The time when the user was invited
          example: 2023-01-10T00:00:00Z
          type: string
        name:
          description: The name of the user
          example: John Dae
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        userId:
          description: The User ID
          example: user-abcd1234
          type: string
      required:
      - email
      - invitedAt
      - name
      - roleType
      - userId
      type: object
    OutputParameterEntity:
      example:
        custom: false
        description: The name of the server
        displayName: Server Name
        isList: false
        key: serverName
        type: Boolean|Float64|String|JSON|Resource
      properties:
        custom:
          description: Whether the parameter is custom
          example: false
          type: boolean
        description:
          description: The parameter description
          example: The name of the server
          type: string
        displayName:
          description: The parameter display name
          example: Server Name
          type: string
        isList:
          description: Whether the parameter is a list
          example: false
          type: boolean
        key:
          description: The parameter key
          example: serverName
          type: string
        type:
          description: The parameter type
          example: Boolean|Float64|String|JSON|Resource
          type: string
      required:
      - custom
      - description
      - displayName
      - isList
      - key
      - type
      type: object
    PerCloudProviderConfigReadiness:
      additionalProperties:
        example: Non aut ut quisquam suscipit aut.
        type: string
      description: The readiness of the cloud provider configuration
      example:
        resourceA: missing terraform configuration
        resourceB: missing cloudformation configuration
      type: object
    PrivateLinkConfiguration:
      example:
        awsPrivateLinkConfigurations:
        - port: 80
          targetGroupName: my-target-group
        - port: 80
          targetGroupName: my-target-group
      properties:
        awsPrivateLinkConfigurations:
          description: The list of private link configurations
          example:
          - port: 80
            targetGroupName: my-target-group
          - port: 80
            targetGroupName: my-target-group
          - port: 80
            targetGroupName: my-target-group
          items:
            $ref: '#/components/schemas/AWSPrivateLinkConfiguration'
          type: array
      type: object
    PrivateNetworkingConfiguration:
      description: The private networking configuration for the network config
      example:
        privateLinkConfiguration:
          awsPrivateLinkConfigurations:
          - port: 80
            targetGroupName: my-target-group
          - port: 80
            targetGroupName: my-target-group
      properties:
        privateLinkConfiguration:
          $ref: '#/components/schemas/PrivateLinkConfiguration'
      type: object
    ProductTierFeatureDetail:
      example:
        configuration:
          provider: native
        feature: LOGS
        scope: INTERNAL
      properties:
        configuration:
          additionalProperties: true
          description: The configuration parameters of the product tier feature
          example:
            provider: native
          type: object
        feature:
          description: ProductTierFeatureType is to enable / disable features per
            product tier
          example: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS
          type: string
        scope:
          description: ProductTierFeatureScope defines scope of the feature within
            product tier
          example: INTERNAL|CUSTOMER
          type: string
      type: object
    PromoteServiceEnvironmentRequest:
      example:
        id: se-12345678
        serviceId: s-12345678
        token: c7
      properties:
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: lo
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    PromoteServiceEnvironmentStatusRequest:
      example:
        id: se-12345678
        serviceId: s-12345678
        token: b
      properties:
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: p
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    PromoteServiceEnvironmentStatusResult:
      example:
      - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
        targetEnvironmentID: se-12345678
      - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
        targetEnvironmentID: se-12345678
      - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
        targetEnvironmentID: se-12345678
      - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
        targetEnvironmentID: se-12345678
      items:
        $ref: '#/components/schemas/EnvironmentPromotionStatus'
      type: array
    PromoteTierVersionSetRequest:
      example:
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: d
        version: "3.0"
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Sunt eligendi.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: zv4
          minLength: 1
          type: string
        version:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
      required:
      - productTierId
      - serviceId
      - token
      - version
      type: object
    ProxyEndpoint:
      example:
        openPorts:
        - "30000"
        - "30001"
        proxyEndpoint: https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
      properties:
        openPorts:
          example:
          - "30000"
          - "30001"
          items:
            example: Vel cupiditate excepturi similique excepturi.
            type: string
          type: array
        proxyEndpoint:
          example: https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
          type: string
      type: object
    PublicNetworkingConfiguration:
      description: The public networking configuration for the network config
      example:
        enableClusterLoadBalancer: true
        enableNodeLoadBalancer: true
      properties:
        enableClusterLoadBalancer:
          description: Enable a single load balancer for all replicas
          example: true
          type: boolean
        enableNodeLoadBalancer:
          description: Create an external node load balancer per node rather than
            exposing the node ip directly
          example: true
          type: boolean
      type: object
    RecentDeploymentFailureStatus:
      description: The status of the recent deployment failure
      example:
        failedAt: 2021-09-01T00:00:00Z
        failureReason: Failed to connect to the database
      properties:
        failedAt:
          description: The time at which the deployment failed
          example: 2021-09-01T00:00:00Z
          type: string
        failureReason:
          description: The reason for the deployment failure
          example: Failed to connect to the database
          type: string
      type: object
    RegenerateTokenRequest:
      example:
        id: user-abcd1234
      properties:
        id:
          example: user-abcd1234
          minLength: 1
          type: string
      required:
      - id
      type: object
    RegionalHealthSummary:
      example:
        deployingInstances: 5985732997776235822
        deploymentCellHealthSummary:
          Asperiores animi voluptas illo quis.:
            deployingInstances: 9031036685391377989
            healthyInstances: 1455563721315335748
            hostClusterID: hc-12345678
            message: Cell is healthy
            status: Healthy
            totalInstances: 7556616230690939714
            unhealthyInstances: 928820487896459684
            unknownInstances: 689084757366581839
        healthyInstances: 6217134161755173819
        message: Region is healthy
        region: us-east-1
        status: Healthy
        totalInstances: 3944093035693013601
        unhealthyInstances: 6875673005959612091
        unknownInstances: 2464980829364974556
      properties:
        deployingInstances:
          description: The number of instances currently deploying
          example: 871052696536722014
          format: int64
          type: integer
        deploymentCellHealthSummary:
          additionalProperties: true
          description: The summary of health by deployment cell
          example:
            Asperiores animi voluptas illo quis.:
              deployingInstances: 9031036685391377989
              healthyInstances: 1455563721315335748
              hostClusterID: hc-12345678
              message: Cell is healthy
              status: Healthy
              totalInstances: 7556616230690939714
              unhealthyInstances: 928820487896459684
              unknownInstances: 689084757366581839
          type: object
        healthyInstances:
          description: The number of healthy instances in the region
          example: 9052212917252686210
          format: int64
          type: integer
        message:
          description: The status message
          example: Region is healthy
          type: string
        region:
          description: The region
          example: us-east-1
          type: string
        status:
          description: The status of the region
          example: Healthy
          type: string
        totalInstances:
          description: The total number of instances in the region
          example: 3807036751648127327
          format: int64
          type: integer
        unhealthyInstances:
          description: The number of unhealthy instances in the region
          example: 9178911540531096796
          format: int64
          type: integer
        unknownInstances:
          description: The number of instances with unknown status
          example: 4939330807193051813
          format: int64
          type: integer
      required:
      - cloudProvider
      - deployingInstances
      - deploymentCellHealthSummary
      - healthyInstances
      - message
      - region
      - status
      - totalInstances
      - unhealthyInstances
      type: object
    RegisterActionHookRequest:
      example:
        commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
        customCommand:
        - /bin/sh
        - -c
        customImage: my-custom-image:latest
        id: r-12345678
        scope: CLUSTER
        serviceId: s-12345678
        token: d
        type: ADD
      properties:
        commandTemplate:
          description: The Base64 encoded command template to execute
          example: ZWNobyAiaGVsbG8gd29ybGQi
          type: string
        customCommand:
          description: The custom command to execute the hook with
          example:
          - /bin/sh
          - -c
          items:
            example: Neque totam.
            type: string
          type: array
        customImage:
          description: The custom image to execute the hook
          example: my-custom-image:latest
          type: string
        id:
          description: ID of a resource
          example: Est ut doloribus tenetur.
          type: string
        scope:
          description: The scope of the hook
          example: CLUSTER|NODE
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 7b
          minLength: 1
          type: string
        type:
          description: The type of hook to execute
          example: INIT|ADD|REMOVE|PROMOTE|DEMOTE|HEALTH_CHECK|READINESS_CHECK|STARTUP_CHECK|PRE_START|POST_START|PRE_UPGRADE|POST_UPGRADE|PRE_STOP|POST_STOP
          type: string
      required:
      - commandTemplate
      - id
      - scope
      - serviceId
      - token
      - type
      type: object
    RegisterActionHookRequest2:
      example:
        commandTemplate: ZWNobyAiaGVsbG8gd29ybGQi
        customCommand:
        - /bin/sh
        - -c
        customImage: my-custom-image:latest
        scope: CLUSTER
        type: ADD
      properties:
        commandTemplate:
          description: The Base64 encoded command template to execute
          example: ZWNobyAiaGVsbG8gd29ybGQi
          type: string
        customCommand:
          description: The custom command to execute the hook with
          example:
          - /bin/sh
          - -c
          items:
            example: Eum molestiae quas sed quod corporis.
            type: string
          type: array
        customImage:
          description: The custom image to execute the hook
          example: my-custom-image:latest
          type: string
        scope:
          description: The scope of the hook
          example: CLUSTER
          type: string
        type:
          description: The type of hook to execute
          example: ADD
          type: string
      required:
      - commandTemplate
      - scope
      - type
      type: object
    RegisterResourceMetricsConfigRequest:
      example:
        id: r-12345678
        metricEndpoint: http://localhost:9187/metrics
        serviceId: s-12345678
        token: o1
      properties:
        id:
          description: ID of a resource
          example: Atque eius aspernatur laboriosam.
          type: string
        metricEndpoint:
          description: The local host endpoint to supply prometheus metric
          example: http://localhost:9187/metrics
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: k
          minLength: 1
          type: string
      required:
      - id
      - metricEndpoint
      - serviceId
      - token
      type: object
    RegisterResourceMetricsConfigRequest2:
      example:
        metricEndpoint: http://localhost:9187/metrics
      properties:
        metricEndpoint:
          description: The local host endpoint to supply prometheus metric
          example: http://localhost:9187/metrics
          type: string
      required:
      - metricEndpoint
      type: object
    ReleaseImageConfigRequest:
      description: Release a new image configuration
      example:
        id: imgc-12345678
        productTierId: pt-12345678
        serviceId: s-12345678
        token: "03"
      properties:
        id:
          description: ID of an Image Config
          example: Laborum dolorem et.
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Quia omnis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 1yv
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ReleaseImageConfigRequest2:
      example:
        productTierId: pt-12345678
      properties:
        productTierId:
          description: The product tier ID
          example: pt-12345678
          type: string
      type: object
    ReleaseInfraConfigRequest:
      example:
        id: ic-12345678
        productTierId: pt-12345678
        serviceId: s-12345678
        token: zdt
      properties:
        id:
          description: ID of an Infra Config
          example: Temporibus esse.
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Accusantium temporibus aut totam.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "5"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ReleaseInfraConfigRequest2:
      example:
        productTierId: pt-12345678
      properties:
        productTierId:
          description: The product tier ID
          example: pt-12345678
          type: string
      type: object
    ReleaseServiceAPIRequest:
      example:
        dryRun: false
        id: sa-12345678
        isPreferred: true
        productTierId: pt-12345678
        serviceId: s-12345678
        token: 5n
        versionSetName: v1
        versionSetType: Major|Incremental|UserDefined
      properties:
        dryRun:
          default: false
          description: "When true, performs a dry run of the release operation without\
            \ making any actual changes to the current pending changes and the service\
            \ API."
          example: false
          type: boolean
        id:
          description: ID of a Service API
          example: Qui adipisci blanditiis.
          type: string
        isPreferred:
          default: false
          description: Indicates whether this version set is preferred.
          example: true
          type: boolean
        productTierId:
          description: ID of a Product Tier
          example: Accusamus et tenetur explicabo itaque mollitia delectus.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: s8j
          minLength: 1
          type: string
        versionSetName:
          description: The name of the version set to release
          example: v1
          type: string
        versionSetType:
          description: The version-set type of the product-tier.
          example: Major|Incremental|UserDefined
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ReleaseServiceAPIRequest2:
      example:
        dryRun: false
        isPreferred: true
        productTierId: pt-12345678
        versionSetName: v1
        versionSetType: Major|Incremental|UserDefined
      properties:
        dryRun:
          default: false
          description: "When true, performs a dry run of the release operation without\
            \ making any actual changes to the current pending changes and the service\
            \ API."
          example: false
          type: boolean
        isPreferred:
          default: false
          description: Indicates whether this version set is preferred.
          example: true
          type: boolean
        productTierId:
          description: The product tier ID
          example: pt-12345678
          type: string
        versionSetName:
          description: The name of the version set to release
          example: v1
          type: string
        versionSetType:
          description: The version-set type of the product-tier.
          example: Major|Incremental|UserDefined
          type: string
      type: object
    ReleaseServiceModelRequest:
      example:
        id: sm-12345678
        serviceId: s-12345678
        token: thz
      properties:
        id:
          description: ID of a Service Model
          example: Dolore aut.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: v
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ReleaseServiceModelResult:
      example:
        status: READY
      properties:
        status:
          description: The release status of the service model
          example: DEPLOYING|READY|PENDING|FAILED|NOT_CONFIGURED
          type: string
      required:
      - status
      type: object
    ReleaseTierVersionSetRequest:
      example:
        isPreferred: true
        name: Major version set
        productTierId: Beatae beatae.
        serviceId: s-12345678
        token: f6s
        version: "3.0"
      properties:
        isPreferred:
          description: Indicates whether this version set is preferred.
          example: true
          type: boolean
        name:
          description: The name of the product-tier version set.
          example: Major version set
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Recusandae quia omnis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "1"
          minLength: 1
          type: string
        version:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
      required:
      - productTierId
      - serviceId
      - token
      - version
      type: object
    ReleaseTierVersionSetRequest2:
      example:
        isPreferred: true
        name: Major version set
      properties:
        isPreferred:
          description: Indicates whether this version set is preferred.
          example: true
          type: boolean
        name:
          description: The name of the product-tier version set.
          example: Major version set
          type: string
      type: object
    RemoveAccountConfigFromServiceModelRequest:
      example:
        accountConfigId: ac-12345678
        id: sm-12345678
        serviceId: s-12345678
        token: m7
      properties:
        accountConfigId:
          description: ID of an Account Config
          example: Quidem quos.
          type: string
        id:
          description: ID of a Service Model
          example: Nobis sint voluptatum.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: gv
          minLength: 1
          type: string
      required:
      - accountConfigId
      - id
      - serviceId
      - token
      type: object
    RemoveAccountConfigFromServiceModelRequest2:
      example:
        accountConfigId: ac-12345678
      properties:
        accountConfigId:
          description: The infrastructure account configuration ID
          example: ac-12345678
          type: string
      required:
      - accountConfigId
      type: object
    RemoveCapacityFromResourceInstanceRequest:
      example:
        capacityToBeRemoved: 3
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: 74m
      properties:
        capacityToBeRemoved:
          description: Number of replicas to be removed
          example: 3
          format: int64
          type: integer
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Veniam tempore ea.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: cqx
          minLength: 1
          type: string
      required:
      - capacityToBeRemoved
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    RemoveCapacityFromResourceInstanceRequest2:
      example:
        capacityToBeRemoved: 3
      properties:
        capacityToBeRemoved:
          description: Number of replicas to be removed
          example: 3
          format: int64
          type: integer
      required:
      - capacityToBeRemoved
      type: object
    RemoveComputeInstanceTypeRequest:
      example:
        cloudProviderName: aws
        id: cc-12345678
        instanceType: t3.micro
        serviceId: s-12345678
        token: aj
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        id:
          description: ID of a Compute Config
          example: Dolores temporibus cumque odit est sit.
          type: string
        instanceType:
          description: The instance type for this compute instance type config
          example: t3.micro
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 4ma
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - id
      - instanceType
      - serviceId
      - token
      type: object
    RemoveComputeInstanceTypeRequest2:
      example:
        cloudProviderName: aws
        instanceType: t3.micro
      properties:
        cloudProviderName:
          description: The cloud provider for this compute instance type config
          example: aws
          type: string
        instanceType:
          description: The instance type for this compute instance type config
          example: t3.micro
          type: string
      required:
      - cloudProviderName
      - instanceType
      type: object
    RemoveCustomDNSToResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: http-service
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: r8a
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: http-service
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Ad commodi.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: f
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    RemoveFileRequest:
      example:
        fileId: file-12345678
        id: r-12345678
        serviceId: s-12345678
        token: j
      properties:
        fileId:
          description: ID of a File
          example: Eos impedit.
          type: string
        id:
          description: ID of a resource
          example: Itaque dolores corrupti.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: du
          minLength: 1
          type: string
      required:
      - fileId
      - id
      - serviceId
      - token
      type: object
    RemoveResourceDependencyRequest:
      example:
        id: r-12345678
        resourceDependencyId: r-12345678
        serviceId: s-12345678
        token: o
      properties:
        id:
          description: ID of a resource
          example: Et delectus sit quas et non et.
          type: string
        resourceDependencyId:
          description: ID of a resource
          example: Omnis pariatur natus aperiam ipsam aut pariatur.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "1"
          minLength: 1
          type: string
      required:
      - id
      - resourceDependencyId
      - serviceId
      - token
      type: object
    RemoveStorageVolumeConfigRequest:
      example:
        id: sc-12345678
        mountPath: /data
        serviceId: s-12345678
        storageVolumeConfigId: svc-12345678
        token: h
      properties:
        id:
          description: ID of a Storage Config
          example: Explicabo nostrum autem.
          type: string
        mountPath:
          description: "The specific mount path to remove. If not specified, all mount\
            \ paths for the storage volume config will be removed"
          example: /data
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        storageVolumeConfigId:
          description: ID of a Storage Volume Config
          example: Odit non laudantium facere eos.
          type: string
        token:
          description: JWT token used to perform authorization
          example: "2"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - storageVolumeConfigId
      - token
      type: object
    RemoveStorageVolumeConfigRequest2:
      example:
        mountPath: /data
      properties:
        mountPath:
          description: "The specific mount path to remove. If not specified, all mount\
            \ paths for the storage volume config will be removed"
          example: /data
          type: string
      type: object
    ReportHealthRequest:
      example:
        id: s-12345678
        token: nuq
      properties:
        id:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: gls
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    ReportHealthResult:
      example:
        health: UP
        id: s-12345678
        report:
          se-12345678:
            sm-12345678:
              vu-11111111: UNKNOWN
              vu-12345678: UP
              vu-87654321: DOWN
      properties:
        health:
          description: Service Health Status
          example: UP|DOWN|UNKNOWN
          type: string
        id:
          description: ID of a Service
          example: s-123456
          type: string
        report:
          additionalProperties: true
          description: The health of each environment under this service
          example:
            se-12345678:
              sm-12345678:
                vu-11111111: UNKNOWN
                vu-12345678: UP
                vu-87654321: DOWN
          type: object
      type: object
    ResetPasswordRequest:
      example:
        email: abc@gmail.com
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
      required:
      - email
      type: object
    ResourceCapability:
      description: The capability of a resource
      example:
        capability: SERVERLESS
        configuration:
          EnableAutoStop: true
          MinimumNodesInPool: 5
          PortsMappingProxyConfig:
            MaxNumberOfClustersPerProxyInstance: 50
            NumberOfPortsPerCluster: 4
          ProxyId: r-123456
          ReferenceProxyKey: resource-proxy
          TargetPort: 5432
      properties:
        capability:
          description: The type of capability of a resource
          example: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
          type: string
        configuration:
          additionalProperties: true
          description: The configuration parameters of a capability of a resource
          example:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
          type: object
      required:
      - capability
      - configuration
      type: object
    ResourceDependency:
      description: Resource dependency relation specification
      example:
        parameterMap:
          Est in aperiam.: Qui earum sunt quos temporibus.
          Occaecati ut officiis omnis ducimus fugit sed.: Aut itaque asperiores pariatur.
          Placeat perspiciatis quae et deserunt est.: Delectus laborum voluptatem
            maiores.
        resourceId: Dolores sit aut repellendus eveniet recusandae fugit.
      properties:
        parameterMap:
          additionalProperties:
            example: Quisquam autem qui.
            type: string
          description: A map of the source parameter to the resource dependency parameter
          example:
            Tenetur est vel nobis nesciunt voluptatum.: Sunt aliquid expedita ex perferendis
              reprehenderit rerum.
            Voluptatem aperiam quia cumque occaecati inventore.: Voluptas occaecati.
            Voluptatem quam.: Similique odit voluptas non magnam.
          type: object
        resourceId:
          description: ID of a resource
          example: Dicta tempore quia perspiciatis voluptatem est.
          type: string
      required:
      - resourceId
      type: object
    ResourceEntity:
      example:
        isAutoscalingEnabled: true
        isBackupEnabled: true
        isDeprecated: false
        name: My Resource
        resourceId: r-12345678
        resourceType: Kustomize
        urlKey: myResource
      properties:
        isAutoscalingEnabled:
          description: Whether the resource has autoscaling enabled
          example: true
          type: boolean
        isBackupEnabled:
          description: Whether the resource has backup enabled
          example: true
          type: boolean
        isDeprecated:
          default: false
          description: Whether the service offering is deprecated
          example: false
          type: boolean
        name:
          description: The resource name
          example: My Resource
          type: string
        resourceId:
          description: ID of a resource
          example: Sunt est.
          type: string
        resourceType:
          description: The resource type
          example: Kustomize
          type: string
        urlKey:
          description: The resource URL key
          example: myResource
          type: string
      required:
      - isBackupEnabled
      - isDeprecated
      - name
      - resourceId
      - urlKey
      type: object
    ResourceHealthSummary:
      example:
        nodesHealth:
          Accusamus quo nihil ad aut.:
            availabilityZone: us-east-2a
            connectivityStatus: HEALTHY
            diskHealth: HEALTHY
            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            events:
            - event-1
            - event-2
            integrationsHealth:
              CustomerObservabilityHealth: HEALTHY
              InternalObservabilityHealth: HEALTHY
            loadStatus: LOAD_NORMAL
            nodeHealth: HEALTHY
            nodeName: postgres-0
            ports:
            - 80
            - 443
            processHealth: HEALTHY
            processLiveness: HEALTHY
            recentLogs: Log message
            status: HEALTHY
        resourceID: resource-12345678
        resourceKey: primary
        resourceType: Kustomize
        status: HEALTHY
      properties:
        nodesHealth:
          additionalProperties:
            $ref: '#/components/schemas/NodeHealthSummary'
          description: The health summary of the nodes by node name
          example:
            Atque doloremque.:
              availabilityZone: us-east-2a
              connectivityStatus: HEALTHY
              diskHealth: HEALTHY
              endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              events:
              - event-1
              - event-2
              integrationsHealth:
                CustomerObservabilityHealth: HEALTHY
                InternalObservabilityHealth: HEALTHY
              loadStatus: LOAD_NORMAL
              nodeHealth: HEALTHY
              nodeName: postgres-0
              ports:
              - 80
              - 443
              processHealth: HEALTHY
              processLiveness: HEALTHY
              recentLogs: Log message
              status: HEALTHY
          type: object
        resourceID:
          description: ID of a resource
          example: Maxime recusandae nihil occaecati assumenda.
          type: string
        resourceKey:
          description: The key of the resource
          example: primary
          type: string
        resourceType:
          description: The type of the resource
          example: Kustomize
          type: string
        status:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|N/A
          type: string
      type: object
    ResourceInstanceProvisionerSetupKitRequest:
      example:
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: 8o
      properties:
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Nihil modi voluptate rerum earum quasi.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: c5
          minLength: 1
          type: string
      required:
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    ResourceMaintenanceTasks:
      additionalProperties: true
      description: "Pending actions or maintenance tasks for the resource instance,\
        \ with action type as key and reference key as value."
      example:
        backups:
        - backup_id: bk-12345678
        upgrade_paths:
        - upgrade_path_id: up-9876543
          upgrade_path_instance_status: PENDING
          upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
          upgrade_path_status: IN_PROGRESS
        - upgrade_path_id: up-12345548
          upgrade_path_instance_status: PENDING
          upgrade_path_released_at: 2023-01-01T09:00:00Z
          upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
          upgrade_path_status: SCHEDULED
      type: object
    ResourceNetworkTopologyResult:
      example:
        additionalEndpoints:
          admin:
            endpoint: https://admin.instance-abcdefgh.region.aws.omnistrate.cloud
            healthStatus: HEALTHY
            networkingType: PRIVATE
            openPorts:
            - 30000
            primary: false
          cluster:
            endpoint: https://cluster.instance-abcdefgh.region.aws.omnistrate.cloud
            healthStatus: HEALTHY
            networkingType: PUBLIC
            openPorts:
            - 443
            primary: true
        allowedIPRanges:
        - 0.0.0.0/0
        clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
        clusterPorts:
        - 443
        customDNSEndpoint:
          dnsHost: my-custom-dns.com
          name: DNS to access the dashboard
          status: READY
        hasCompute: true
        isJob: false
        jobMetrics:
        - additionalData:
            exitCode: 0
            status: Succeeded
          endTime: 2023-01-01T10:05:00Z
          metricType: cpu_core_seconds
          startTime: 2023-01-01T10:00:00Z
          value: 120.5
        - additionalData:
            peakMemoryUsage: 512MB
          endTime: 2023-01-01T10:05:00Z
          metricType: memory_mb_seconds
          startTime: 2023-01-01T10:00:00Z
          value: 2560
        main: true
        networkingType: PUBLIC
        nodes:
        - availabilityZone: us-east-2a
          detailedHealth:
            ConnectivityStatus: UNHEALTHY
            DiskHealth: UNKNOWN
            LoadStatus: LOAD_NORMAL
            NodeHealth: HEALTHY
            ProcessHealth: HEALTHY
            ProcessLiveness: HEALTHY
          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          healthStatus: HEALTHY
          id: primary-0
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          ports:
          - 80
          - 443
          status: RUNNING
          storageSize: 10
          vmInfo:
            architecture: amd64
            azCode: us-east-1a
            azID: use1-az1
            externalIP: 3.44.113.6
            instanceType: t2.small
            internalIP: 192.168.1.4
            k8sNodeName: my-k8s-node
            kernelVersion: 5.10.228
            kubeletVersion: 1.31.3
            os: linux
            providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
        - availabilityZone: us-east-2a
          detailedHealth:
            ConnectivityStatus: UNHEALTHY
            DiskHealth: UNKNOWN
            LoadStatus: LOAD_NORMAL
            NodeHealth: HEALTHY
            ProcessHealth: HEALTHY
            ProcessLiveness: HEALTHY
          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          healthStatus: HEALTHY
          id: primary-0
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          ports:
          - 80
          - 443
          status: RUNNING
          storageSize: 10
          vmInfo:
            architecture: amd64
            azCode: us-east-1a
            azID: use1-az1
            externalIP: 3.44.113.6
            instanceType: t2.small
            internalIP: 192.168.1.4
            k8sNodeName: my-k8s-node
            kernelVersion: 5.10.228
            kubeletVersion: 1.31.3
            os: linux
            providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
        - availabilityZone: us-east-2a
          detailedHealth:
            ConnectivityStatus: UNHEALTHY
            DiskHealth: UNKNOWN
            LoadStatus: LOAD_NORMAL
            NodeHealth: HEALTHY
            ProcessHealth: HEALTHY
            ProcessLiveness: HEALTHY
          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          healthStatus: HEALTHY
          id: primary-0
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          ports:
          - 80
          - 443
          status: RUNNING
          storageSize: 10
          vmInfo:
            architecture: amd64
            azCode: us-east-1a
            azID: use1-az1
            externalIP: 3.44.113.6
            instanceType: t2.small
            internalIP: 192.168.1.4
            k8sNodeName: my-k8s-node
            kernelVersion: 5.10.228
            kubeletVersion: 1.31.3
            os: linux
            providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
        privateNetworkCIDR: 10.0.0.2/24
        privateNetworkID: n-1234abcd
        proxyEndpoint:
          openPorts:
          - "30000"
          - "30001"
          proxyEndpoint: https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
        publiclyAccessible: true
        recentDeploymentFailure:
          failedAt: 2021-09-01T00:00:00Z
          failureReason: Failed to connect to the database
        resourceInstanceMetadata:
          KustomizeGeneratedTemplates: template
        resourceKey: primary
        resourceName: Primary MySQL DB Node
        resourceType: Kustomize
      properties:
        additionalEndpoints:
          additionalProperties:
            $ref: '#/components/schemas/ClusterEndpoint'
          description: The additional endpoints for this resource
          example:
            admin:
              endpoint: https://admin.instance-abcdefgh.region.aws.omnistrate.cloud
              healthStatus: HEALTHY
              networkingType: PRIVATE
              openPorts:
              - 30000
              primary: false
            cluster:
              endpoint: https://cluster.instance-abcdefgh.region.aws.omnistrate.cloud
              healthStatus: HEALTHY
              networkingType: PUBLIC
              openPorts:
              - 443
              primary: true
          type: object
        allowedIPRanges:
          description: The allowed IP ranges for this resource
          example:
          - 0.0.0.0/0
          items:
            example: Aut eum sunt qui ut.
            type: string
          type: array
        clusterEndpoint:
          description: The primary cluster endpoint that load-balances across replicas
            of this resource
          example: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          type: string
        clusterPorts:
          description: The ports that the whole cluster exposes
          example:
          - 443
          items:
            example: 6460656528847344541
            format: int64
            type: integer
          type: array
        customDNSEndpoint:
          $ref: '#/components/schemas/CustomDNSEndpoint'
        hasCompute:
          description: Whether this resource has associated compute
          example: true
          type: boolean
        isJob:
          default: false
          description: Whether this resource is a job
          example: false
          type: boolean
        jobMetrics:
          description: The job metrics for this resource (if it's a job)
          example:
          - additionalData:
              exitCode: 0
              status: Succeeded
            endTime: 2023-01-01T10:05:00Z
            metricType: cpu_core_seconds
            startTime: 2023-01-01T10:00:00Z
            value: 120.5
          - additionalData:
              peakMemoryUsage: 512MB
            endTime: 2023-01-01T10:05:00Z
            metricType: memory_mb_seconds
            startTime: 2023-01-01T10:00:00Z
            value: 2560
          items:
            $ref: '#/components/schemas/JobMetric'
          type: array
        main:
          description: Whether this is the main resource
          example: true
          type: boolean
        networkingType:
          description: The networking type for this resource
          example: PUBLIC
          type: string
        nodes:
          description: The nodes that this resource is deployed on
          example:
          - availabilityZone: us-east-2a
            detailedHealth:
              ConnectivityStatus: UNHEALTHY
              DiskHealth: UNKNOWN
              LoadStatus: LOAD_NORMAL
              NodeHealth: HEALTHY
              ProcessHealth: HEALTHY
              ProcessLiveness: HEALTHY
            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            healthStatus: HEALTHY
            id: primary-0
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            ports:
            - 80
            - 443
            status: RUNNING
            storageSize: 10
            vmInfo:
              architecture: amd64
              azCode: us-east-1a
              azID: use1-az1
              externalIP: 3.44.113.6
              instanceType: t2.small
              internalIP: 192.168.1.4
              k8sNodeName: my-k8s-node
              kernelVersion: 5.10.228
              kubeletVersion: 1.31.3
              os: linux
              providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
          - availabilityZone: us-east-2a
            detailedHealth:
              ConnectivityStatus: UNHEALTHY
              DiskHealth: UNKNOWN
              LoadStatus: LOAD_NORMAL
              NodeHealth: HEALTHY
              ProcessHealth: HEALTHY
              ProcessLiveness: HEALTHY
            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            healthStatus: HEALTHY
            id: primary-0
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            ports:
            - 80
            - 443
            status: RUNNING
            storageSize: 10
            vmInfo:
              architecture: amd64
              azCode: us-east-1a
              azID: use1-az1
              externalIP: 3.44.113.6
              instanceType: t2.small
              internalIP: 192.168.1.4
              k8sNodeName: my-k8s-node
              kernelVersion: 5.10.228
              kubeletVersion: 1.31.3
              os: linux
              providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
          - availabilityZone: us-east-2a
            detailedHealth:
              ConnectivityStatus: UNHEALTHY
              DiskHealth: UNKNOWN
              LoadStatus: LOAD_NORMAL
              NodeHealth: HEALTHY
              ProcessHealth: HEALTHY
              ProcessLiveness: HEALTHY
            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            healthStatus: HEALTHY
            id: primary-0
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            ports:
            - 80
            - 443
            status: RUNNING
            storageSize: 10
            vmInfo:
              architecture: amd64
              azCode: us-east-1a
              azID: use1-az1
              externalIP: 3.44.113.6
              instanceType: t2.small
              internalIP: 192.168.1.4
              k8sNodeName: my-k8s-node
              kernelVersion: 5.10.228
              kubeletVersion: 1.31.3
              os: linux
              providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
          - availabilityZone: us-east-2a
            detailedHealth:
              ConnectivityStatus: UNHEALTHY
              DiskHealth: UNKNOWN
              LoadStatus: LOAD_NORMAL
              NodeHealth: HEALTHY
              ProcessHealth: HEALTHY
              ProcessLiveness: HEALTHY
            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            healthStatus: HEALTHY
            id: primary-0
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            ports:
            - 80
            - 443
            status: RUNNING
            storageSize: 10
            vmInfo:
              architecture: amd64
              azCode: us-east-1a
              azID: use1-az1
              externalIP: 3.44.113.6
              instanceType: t2.small
              internalIP: 192.168.1.4
              k8sNodeName: my-k8s-node
              kernelVersion: 5.10.228
              kubeletVersion: 1.31.3
              os: linux
              providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
          items:
            $ref: '#/components/schemas/NodeNetworkTopologyResult'
          type: array
        privateNetworkCIDR:
          description: The private network CIDR for this resource
          example: 10.0.0.2/24
          type: string
        privateNetworkID:
          description: ID of a Network
          example: Sunt provident nam recusandae.
          type: string
        proxyEndpoint:
          $ref: '#/components/schemas/ProxyEndpoint'
        publiclyAccessible:
          description: Whether this resource is publicly accessible
          example: true
          type: boolean
        recentDeploymentFailure:
          $ref: '#/components/schemas/RecentDeploymentFailureStatus'
        resourceInstanceMetadata:
          description: The resource instance metadata
          example:
            KustomizeGeneratedTemplates: template
        resourceKey:
          description: The key of the resource
          example: primary
          type: string
        resourceName:
          description: The name of the resource
          example: Primary MySQL DB Node
          type: string
        resourceType:
          description: The type of the resource
          example: Kustomize
          type: string
      required:
      - allowedIPRanges
      - clusterEndpoint
      - hasCompute
      - main
      - networkingType
      - nodeEndpoints
      - ports
      - publiclyAccessible
      - resourceKey
      - resourceName
      type: object
    ResourceSpec:
      description: Resource requirements
      example:
        limits:
          cpu: "1"
          memory: 500Mi
        requests:
          cpu: "0.5"
          memory: 200Mi
      properties:
        limits:
          $ref: '#/components/schemas/ResourceSpec_limits'
        requests:
          $ref: '#/components/schemas/ResourceSpec_requests'
      type: object
    ResourceSummary:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        id: r-12345678
        imageConfigId: imgc-12345678
        infraConfigId: ic-12345678
        isExternal: true
        managedResourceType: PortsBasedProxy
        name: MySQL multi-writer service
      properties:
        description:
          description: A brief description of the resource
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        id:
          description: ID of a resource
          example: Delectus ipsa quo fuga.
          type: string
        imageConfigId:
          description: ID of an Image Config
          example: In ea et ut.
          type: string
        infraConfigId:
          description: ID of an Infra Config
          example: Consequatur quas et.
          type: string
        isExternal:
          description: Whether the resource is external
          example: true
          type: boolean
        managedResourceType:
          description: The managed resource type of instance
          example: PortsBasedProxy
          type: string
        name:
          description: The name of the resource
          example: MySQL multi-writer service
          type: string
      required:
      - description
      - id
      - isExternal
      - name
      type: object
    RestartResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: t
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Magni deserunt natus.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: 6k
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    RestoreResourceInstanceFromSnapshotRequest:
      example:
        network_type: PUBLIC
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        snapshotId: instance-ss-abcd1234
        subscriptionId: sub-abcd1234
        token: fr
      properties:
        network_type:
          description: The network type
          example: PUBLIC
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Rerum non minima minima.
          type: string
        snapshotId:
          description: ID of a Resource Instance Snapshot
          example: Neque sequi qui labore autem placeat voluptas.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: 1ns
          minLength: 1
          type: string
      required:
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - snapshotId
      - token
      type: object
    RestoreResourceInstanceFromSnapshotRequest2:
      example:
        network_type: PUBLIC
      properties:
        network_type:
          description: The network type
          example: PUBLIC
          type: string
      type: object
    RestoreResourceInstanceRequest:
      example:
        id: instance-abcd1234
        network_type: PUBLIC
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        targetRestoreTime: 2021-09-01T00:00:00Z
        token: 0d
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        network_type:
          description: The network type
          example: PUBLIC
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Repellendus reiciendis possimus earum modi expedita porro.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        targetRestoreTime:
          description: The target restore time
          example: 2021-09-01T00:00:00Z
          type: string
        token:
          description: JWT token used to perform authorization
          example: o2x
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - targetRestoreTime
      - token
      type: object
    RestoreResourceInstanceRequest2:
      example:
        network_type: PUBLIC
        targetRestoreTime: 2021-09-01T00:00:00Z
      properties:
        network_type:
          description: The network type
          example: PUBLIC
          type: string
        targetRestoreTime:
          description: The target restore time
          example: 2021-09-01T00:00:00Z
          type: string
      required:
      - targetRestoreTime
      type: object
    RevokeConsumptionUserRoleRequest:
      example:
        email: abc@gmail.com
        roleType: reader
        subscriptionId: sub-abcd1234
        token: z3
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: "05"
          minLength: 1
          type: string
      required:
      - email
      - roleType
      - subscriptionId
      - token
      type: object
    RevokeConsumptionUserRoleRequest2:
      example:
        email: abc@gmail.com
        roleType: reader
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          example: reader
          type: string
      required:
      - email
      - roleType
      type: object
    RevokeOAuthAccessRequest:
      example:
        token: "927"
      properties:
        token:
          description: JWT token used to perform authorization
          example: 2x
          minLength: 1
          type: string
      required:
      - token
      type: object
    RevokeOAuthAccessResult:
      example: {}
      type: object
    RevokeUserRoleRequest:
      example:
        email: abc@gmail.com
        roleType: reader
        token: key
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        token:
          description: JWT token used to perform authorization
          example: wo2
          minLength: 1
          type: string
      required:
      - email
      - roleType
      - token
      type: object
    RevokeUserRoleRequest2:
      example:
        email: abc@gmail.com
        roleType: reader
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          example: reader
          type: string
      required:
      - email
      - roleType
      type: object
    RolloutFleetImageConfigRequest:
      description: Rollout the image configuration to all existing entities using
        this image configuration
      example:
        id: imgc-12345678
        serviceId: s-12345678
        token: xp
      properties:
        id:
          description: ID of an Image Config
          example: Sit tempora voluptatem non nostrum laborum maxime.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: j
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    RolloutFleetImageStatusRequest:
      example:
        id: imgc-12345678
        serviceId: s-12345678
        token: 8k
      properties:
        id:
          description: ID of an Image Config
          example: Nam rerum velit ad dicta repellat maiores.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ly
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    RolloutFleetImageStatusResult:
      example:
        status: IN_PROGRESS
      properties:
        status:
          description: UpgradeStatus is the status of an upgrade path
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING
          type: string
      required:
      - status
      type: object
    RolloutFleetInfraRequest:
      example:
        id: ic-12345678
        serviceId: s-12345678
        token: l
      properties:
        id:
          description: ID of an Infra Config
          example: Dicta quibusdam nihil fugiat laborum optio.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: y2
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    RolloutFleetInfraStatusRequest:
      example:
        id: ic-12345678
        serviceId: s-12345678
        token: xg
      properties:
        id:
          description: ID of an Infra Config
          example: Minus magni placeat cumque voluptatum.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: g6p
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    RolloutFleetInfraStatusResult:
      example:
        status: IN_PROGRESS
      properties:
        status:
          description: UpgradeStatus is the status of an upgrade path
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING
          type: string
      required:
      - status
      type: object
    Route53Configuration:
      example:
        awsAccountID: "123456789012"
      properties:
        awsAccountID:
          description: The AWS account hosting the the hosted zone for the domain
          example: "123456789012"
          type: string
      required:
      - awsAccountID
      type: object
    Route53ConfigurationDescription:
      example:
        awsAccountID: "123456789012"
        awsCloudFormationTemplateURL: https://s3.amazonaws.com/my-bucket/my-template.json
      properties:
        awsAccountID:
          description: The AWS account hosting the the hosted zone for the domain
          example: "123456789012"
          type: string
        awsCloudFormationTemplateURL:
          description: The URL to the CloudFormation template
          example: https://s3.amazonaws.com/my-bucket/my-template.json
          type: string
      required:
      - awsAccountID
      - awsCloudFormationTemplateURL
      type: object
    S3Configuration:
      example: {}
      type: object
    SaaSPortal:
      example:
        customDomain: mycustomdomain.com
        customDomainStatus: READY
        detailedNetworkTopology:
          r-abcd1234:
            allowedIPRanges:
            - 0.0.0.0/0
            clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            clusterPorts:
            - 3306
            main: true
            networkingType: PUBLIC
            nodes:
            - availabilityZone: us-east-2a
              endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              healthStatus: healthy
              id: primary-0
              ports:
              - 3306
              status: RUNNING
            privateNetworkCIDR: 10.0.0.2/24
            privateNetworkID: n-1234abcd
            publiclyAccessible: true
            resourceKey: saasportal
            resourceName: SaaS Portal
        disablePasswordLogin: false
        emailConfig:
          smtpFromEmail: example@gmail.com
          smtpHost: smtp.gmail.com
          smtpPassword: password
          smtpPort: 587
          smtpUsername: username
        endpoint: https://saas-portal.example.com
        environmentType: DEV
        googleAnalyticsTagID: G-123456789
        imageConfig:
          imageName: myimage
          imageRegistry: ghcr.io
          imageTag: latest
        status: READY
      properties:
        customDomain:
          description: The custom domain of the SaaS portal
          example: mycustomdomain.com
          type: string
        customDomainStatus:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        detailedNetworkTopology:
          additionalProperties: true
          description: The detailed network topology of the SaaS portal
          example:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: saasportal
              resourceName: SaaS Portal
          type: object
        disablePasswordLogin:
          description: Whether to disable password login for the SaaS portal
          example: false
          type: boolean
        emailConfig:
          $ref: '#/components/schemas/SaaSPortalEmailConfig'
        endpoint:
          description: The endpoint of the SaaS portal for this environment type
          example: https://saas-portal.example.com
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        googleAnalyticsTagID:
          description: The Google Analytics tag ID for the SaaS portal
          example: G-123456789
          type: string
        imageConfig:
          $ref: '#/components/schemas/SaaSPortalImageConfig'
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
      required:
      - environmentType
      - status
      type: object
    SaaSPortalEmailConfig:
      example:
        smtpFromEmail: example@gmail.com
        smtpHost: smtp.gmail.com
        smtpPassword: password
        smtpPort: 587
        smtpUsername: username
      properties:
        smtpFromEmail:
          description: The SMTP from email
          example: example@gmail.com
          type: string
        smtpHost:
          description: The SMTP host
          example: smtp.gmail.com
          type: string
        smtpPassword:
          description: The SMTP password
          example: password
          type: string
        smtpPort:
          description: The SMTP port
          example: 587
          format: int64
          type: integer
        smtpUsername:
          description: The SMTP username
          example: username
          type: string
      required:
      - smtpFromEmail
      - smtpHost
      - smtpPassword
      - smtpUsername
      type: object
    SaaSPortalImageConfig:
      example:
        imageName: myimage
        imageRegistry: ghcr.io
        imageTag: latest
      properties:
        imageName:
          description: The image name for the SaaS portal
          example: myimage
          type: string
        imageRegistry:
          description: The image registry for the SaaS portal
          example: ghcr.io
          type: string
        imageTag:
          description: The image tag for the SaaS portal
          example: latest
          type: string
      required:
      - imageName
      - imageRegistry
      - imageTag
      type: object
    SaveHelmPackageRequest:
      example:
        helmPackage:
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          namespace: default
          password: my-password
          username: my-user
        token: "57"
      properties:
        helmPackage:
          $ref: '#/components/schemas/HelmPackage'
        token:
          description: JWT token used to perform authorization
          example: na
          minLength: 1
          type: string
      required:
      - helmPackage
      - token
      type: object
    SaveHelmPackageRequest2:
      example:
        helmPackage:
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          namespace: default
          password: my-password
          username: my-user
      properties:
        helmPackage:
          $ref: '#/components/schemas/HelmPackage'
      required:
      - helmPackage
      type: object
    ServiceAssets:
      example:
        cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
        cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
      properties:
        cloudFormationURL:
          description: The URL for CloudFormation onboarding
          example: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
          type: string
        cloudFormationURLNoLB:
          description: The URL for CloudFormation onboarding without LoadBalancer
            policy
          example: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
          type: string
      type: object
    ServiceDeploymentDetails:
      example:
        dependsOnDeployment:
        - instanceDeploymentAlias1
        - instanceDeploymentAlias2
        failedReason: Invalid inputs
        instanceDeploymentAlias: instanceDeploymentAlias
        instanceId: i-12345678
        serviceId: s-12345678
        status: PENDING
        statusMessage: Creating deployment
        subscriptionId: Est in eum ut commodi harum.
      properties:
        dependsOnDeployment:
          description: The deployment keys that this deployment depends on
          example:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          items:
            example: Rem vel harum.
            type: string
          type: array
        failedReason:
          description: The reason why the deployment failed
          example: Invalid inputs
          type: string
        instanceDeploymentAlias:
          description: The instance deployment alias
          example: instanceDeploymentAlias
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        status:
          description: The status of the service deployment
          example: PENDING
          type: string
        statusMessage:
          description: The status message of the service deployment
          example: Creating deployment
          type: string
        subscriptionId:
          description: ID of a Subscription
          example: Dolorem occaecati tempore nihil dolore.
          type: string
      required:
      - instanceDeploymentAlias
      - serviceId
      - subscriptionId
      type: object
    ServiceEnvironment:
      example:
        id: se-12345678
        name: dev
        promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
        saasPortalStatus: READY
        saasPortalUrl: https://saas-portal.example.com
        servicePlans:
        - description: A Basic product tier
          modelType: CUSTOMER_HOSTED
          name: Basic
          productTierID: pt-12345678
          tierType: OMNISTRATE_DEDICATED_TENANCY
        - description: A Basic product tier
          modelType: CUSTOMER_HOSTED
          name: Basic
          productTierID: pt-12345678
          tierType: OMNISTRATE_DEDICATED_TENANCY
        sourceEnvironmentID: se-12345678
        sourceEnvironmentName: dev
        type: DEV
        visibility: private
      properties:
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        name:
          description: Name of the Service Environment
          example: dev
          type: string
        promoteStatus:
          description: The status of the promotion
          example: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          type: string
        saasPortalStatus:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        saasPortalUrl:
          description: The URL of the SaaS portal for this environment type
          example: https://saas-portal.example.com
          type: string
        servicePlans:
          description: List of service plans
          example:
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          items:
            $ref: '#/components/schemas/ServicePlan'
          type: array
        sourceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        sourceEnvironmentName:
          description: The source environment name
          example: dev
          type: string
        type:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - id
      - name
      - servicePlans
      - visibility
      type: object
    ServiceHealthRequest:
      example:
        serviceEnvironmentID: se-123456
        serviceID: s-123456
        token: "9"
      properties:
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: i
          minLength: 1
          type: string
      required:
      - serviceEnvironmentID
      - serviceID
      - token
      type: object
    ServiceHealthSummary:
      example:
        cloudProviderHealthSummary:
          aws|azure|gcp|all:
            cloudProvider: aws
            deployingInstances: 8020098633213408043
            healthyInstances: 7764817258468509364
            message: Cloud provider is healthy
            regionalHealthSummary:
              Est earum vel voluptatem voluptatem quos corporis.:
                deployingInstances: 1276218605858303989
                deploymentCellHealthSummary:
                  Asperiores animi voluptas illo quis.:
                    deployingInstances: 9031036685391377989
                    healthyInstances: 1455563721315335748
                    hostClusterID: hc-12345678
                    message: Cell is healthy
                    status: Healthy
                    totalInstances: 7556616230690939714
                    unhealthyInstances: 928820487896459684
                    unknownInstances: 689084757366581839
                healthyInstances: 8558377965344457119
                message: Region is healthy
                region: us-east-1
                status: Healthy
                totalInstances: 9129149433207078769
                unhealthyInstances: 7156615963917017313
                unknownInstances: 8805267149196218880
              Qui ipsa.:
                deployingInstances: 1276218605858303989
                deploymentCellHealthSummary:
                  Asperiores animi voluptas illo quis.:
                    deployingInstances: 9031036685391377989
                    healthyInstances: 1455563721315335748
                    hostClusterID: hc-12345678
                    message: Cell is healthy
                    status: Healthy
                    totalInstances: 7556616230690939714
                    unhealthyInstances: 928820487896459684
                    unknownInstances: 689084757366581839
                healthyInstances: 8558377965344457119
                message: Region is healthy
                region: us-east-1
                status: Healthy
                totalInstances: 9129149433207078769
                unhealthyInstances: 7156615963917017313
                unknownInstances: 8805267149196218880
            status: Healthy
            totalInstances: 8869520346571872374
            unhealthyInstances: 4876272947914614942
            unknownInstances: 2955170119913801357
        deployingInstances: 7347955135484717325
        healthyInstances: 3705579722326306131
        message: Service is healthy
        serviceEnvironmentID: se-123456
        serviceID: s-123456
        status: Healthy
        totalInstances: 8283293967183867702
        unhealthyInstances: 8193077798103641718
        unknownInstances: 6955363496832006676
      properties:
        cloudProviderHealthSummary:
          additionalProperties: true
          description: The summary of health by cloud provider
          example:
            aws|azure|gcp|all:
              cloudProvider: aws
              deployingInstances: 8020098633213408043
              healthyInstances: 7764817258468509364
              message: Cloud provider is healthy
              regionalHealthSummary:
                Est earum vel voluptatem voluptatem quos corporis.:
                  deployingInstances: 1276218605858303989
                  deploymentCellHealthSummary:
                    Asperiores animi voluptas illo quis.:
                      deployingInstances: 9031036685391377989
                      healthyInstances: 1455563721315335748
                      hostClusterID: hc-12345678
                      message: Cell is healthy
                      status: Healthy
                      totalInstances: 7556616230690939714
                      unhealthyInstances: 928820487896459684
                      unknownInstances: 689084757366581839
                  healthyInstances: 8558377965344457119
                  message: Region is healthy
                  region: us-east-1
                  status: Healthy
                  totalInstances: 9129149433207078769
                  unhealthyInstances: 7156615963917017313
                  unknownInstances: 8805267149196218880
                Qui ipsa.:
                  deployingInstances: 1276218605858303989
                  deploymentCellHealthSummary:
                    Asperiores animi voluptas illo quis.:
                      deployingInstances: 9031036685391377989
                      healthyInstances: 1455563721315335748
                      hostClusterID: hc-12345678
                      message: Cell is healthy
                      status: Healthy
                      totalInstances: 7556616230690939714
                      unhealthyInstances: 928820487896459684
                      unknownInstances: 689084757366581839
                  healthyInstances: 8558377965344457119
                  message: Region is healthy
                  region: us-east-1
                  status: Healthy
                  totalInstances: 9129149433207078769
                  unhealthyInstances: 7156615963917017313
                  unknownInstances: 8805267149196218880
              status: Healthy
              totalInstances: 8869520346571872374
              unhealthyInstances: 4876272947914614942
              unknownInstances: 2955170119913801357
          type: object
        deployingInstances:
          description: The number of instances currently deploying
          example: 27785903441205535
          format: int64
          type: integer
        healthyInstances:
          description: The number of healthy instances in the region
          example: 8346778549000779914
          format: int64
          type: integer
        message:
          description: The status message
          example: Service is healthy
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        status:
          description: The status of the service
          example: Healthy
          type: string
        totalInstances:
          description: The total number of instances in the region
          example: 884322030917988343
          format: int64
          type: integer
        unhealthyInstances:
          description: The number of unhealthy instances in the region
          example: 8394721560190579032
          format: int64
          type: integer
        unknownInstances:
          description: The number of instances with unknown status
          example: 2207331102844980152
          format: int64
          type: integer
      required:
      - cloudProviderHealthSummary
      - deployingInstances
      - healthyInstances
      - message
      - serviceEnvironmentID
      - serviceID
      - status
      - totalInstances
      - unhealthyInstances
      type: object
    ServiceModelFeatureConfiguration:
      additionalProperties: true
      description: The configuration parameters of the service model feature
      example:
        status: "ON"
      type: object
    ServiceModelFeatureDetail:
      example:
        configuration:
          status: "ON"
        feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
      properties:
        configuration:
          additionalProperties: true
          description: The configuration parameters of the service model feature
          example:
            status: "ON"
          type: object
        feature:
          description: Name of the service model feature
          example: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          type: string
      required:
      - configuration
      - feature
      type: object
    ServiceOffering:
      example:
        AutoApproveSubscription: false
        allowCreatesWhenPaymentNotConfigured: true
        assets:
          cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
          cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        cloudProviders:
        - AWS
        - GCP
        - Azure
        gcpRegions:
        - us-central1
        maxNumberOfInstances: 5
        productTierDescription: A premium product tier
        productTierDocumentation: Any documentation
        productTierID: pt-12345678
        productTierName: Premium
        productTierPlanDescription: A premium plan
        productTierPricing:
          price1: value1
        productTierSupport: Any support
        productTierType: OMNISTRATE_DEDICATED_TENANCY
        productTierURLKey: premium
        productTierVersion: 1.0.0
        resourceParameters:
        - name: MySQL
          resourceId: r-12345678
          urlKey: mysql
        - name: Redis
          resourceId: r-abcdefgh
          urlKey: redis
        serviceAPIID: sa-12345678
        serviceAPIVersion: v1
        serviceEnvironmentID: se-12345678
        serviceEnvironmentName: Development
        serviceEnvironmentType: DEV
        serviceEnvironmentURLKey: dev
        serviceEnvironmentVisibility: PRIVATE
        serviceLogoURL: Delectus id est consectetur tenetur aperiam.
        serviceModelFeatures:
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        serviceModelID: sm-12345678
        serviceModelName: Hosted
        serviceModelStatus: Ready
        serviceModelType: "CUSTOMER_HOSTED, OMNISTRATE_HOSTED, BYOA"
        serviceModelURLKey: hosted
        supportsPublicNetwork: false
      properties:
        AutoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        assets:
          $ref: '#/components/schemas/ServiceAssets'
        awsRegions:
          description: The AWS regions that this service offering is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Exercitationem blanditiis quia.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this service offering is available on
          example:
          - northcentralus
          items:
            example: Pariatur culpa vel corrupti reprehenderit.
            type: string
          type: array
        cloudProviders:
          description: List of supported cloud providers for this product tier.
          example:
          - AWS
          - GCP
          - Azure
          items:
            example: Et molestiae molestias blanditiis.
            type: string
          type: array
        gcpRegions:
          description: The GCP regions that this service offering is available on
          example:
          - us-central1
          items:
            example: Placeat saepe iste doloremque blanditiis aut.
            type: string
          type: array
        maxNumberOfInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        productTierDescription:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        productTierDocumentation:
          description: Documentation
          example: Any documentation
          type: string
        productTierID:
          description: ID of a Product Tier
          example: Quaerat sunt nihil eum fugit.
          type: string
        productTierName:
          description: The product tier name
          example: Premium
          type: string
        productTierPlanDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        productTierPricing:
          description: Pricing
          example:
            price1: value1
        productTierSupport:
          description: Support
          example: Any support
          type: string
        productTierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        productTierURLKey:
          description: The product tier URL key
          example: premium
          type: string
        productTierVersion:
          description: The product tier version
          example: 1.0.0
          type: string
        resourceParameters:
          description: The resource parameters
          example:
          - name: MySQL
            resourceId: r-12345678
            urlKey: mysql
          - name: Redis
            resourceId: r-abcdefgh
            urlKey: redis
          items:
            $ref: '#/components/schemas/ResourceEntity'
          type: array
        serviceAPIID:
          description: ID of a Service API
          example: Aut et voluptatibus suscipit accusamus ad vitae.
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceEnvironmentName:
          description: The service environment name
          example: Development
          type: string
        serviceEnvironmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        serviceEnvironmentURLKey:
          description: The service environment URL key
          example: dev
          type: string
        serviceEnvironmentVisibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Est dolorem voluptatem exercitationem optio.
          type: string
        serviceModelFeatures:
          description: Enabled service model features
          example:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          items:
            $ref: '#/components/schemas/ServiceModelFeatureDetail'
          type: array
        serviceModelID:
          description: ID of a Service Model
          example: Voluptatem tempora qui voluptas illo itaque.
          type: string
        serviceModelName:
          description: The service model name
          example: Hosted
          type: string
        serviceModelStatus:
          description: The service model status
          example: Ready
          type: string
        serviceModelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        serviceModelURLKey:
          description: The service model URL key
          example: hosted
          type: string
        supportsPublicNetwork:
          description: Indicates whether any of the resources in the product tier
            support public network
          example: false
          type: boolean
      required:
      - AutoApproveSubscription
      - productTierDocumentation
      - productTierID
      - productTierName
      - productTierPricing
      - productTierSupport
      - productTierType
      - productTierURLKey
      - productTierVersion
      - resourceParameters
      - serviceAPIID
      - serviceAPIVersion
      - serviceEnvironmentID
      - serviceEnvironmentName
      - serviceEnvironmentType
      - serviceEnvironmentURLKey
      - serviceEnvironmentVisibility
      - serviceLogoURL
      - serviceModelID
      - serviceModelName
      - serviceModelStatus
      - serviceModelType
      - serviceModelURLKey
      type: object
    ServicePlan:
      example:
        description: A Basic product tier
        modelType: CUSTOMER_HOSTED
        name: Basic
        productTierID: pt-12345678
        tierType: OMNISTRATE_DEDICATED_TENANCY
      properties:
        description:
          description: Description of the Product Tier
          example: A Basic product tier
          type: string
        modelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        name:
          description: Name of the Product Tier
          example: Basic
          type: string
        productTierID:
          description: ID of a Product Tier
          example: Dolore minima qui vel voluptas vitae.
          type: string
        tierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
      required:
      - description
      - modelType
      - name
      - productTierID
      - tierType
      type: object
    ServiceProviderEvent:
      example:
        alertType: Alarm
        eventCategory: InstanceEvent
        eventID: e-123456
        eventPayload:
          Dolorem itaque nemo.: Non magnam maxime delectus quia.
          Ipsum non delectus eum deleniti.: Omnis delectus.
        eventType: UnhealthyInstance
        expiryTime: 2023-01-10T00:00:00Z
        instanceID: instance-12345678
        planVersion: v1.0
        priority: Critical
        resourceName: Resource-123
        scope: ServiceProvider
        serviceEnvironmentID: se-123456
        serviceID: s-123456
        serviceName: Service-123
        servicePlanName: Basic Plan
        time: 2023-01-10T00:00:00Z
      properties:
        alertType:
          description: The type of the alert
          example: Alarm|Notification
          type: string
        eventCategory:
          description: The category of the service provider specific event
          example: InstanceEvent|ServiceEvent|UserEvent|IdentityProviderEvent
          type: string
        eventID:
          description: ID of a Event
          example: Laudantium et alias nihil hic blanditiis est.
          type: string
        eventPayload:
          additionalProperties: true
          description: The event payload for a service provider
          example:
            Voluptas repudiandae commodi nam.: Doloribus doloremque quia molestias.
          type: object
        eventType:
          description: The type of the service provider specific event
          example: UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
          type: string
        expiryTime:
          description: The expiry time of the event
          example: 2023-01-10T00:00:00Z
          type: string
        instanceID:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        planVersion:
          description: The version of the plan
          example: v1.0
          type: string
        priority:
          description: The priority of the event
          example: Critical|High|Medium|Low
          type: string
        resourceName:
          description: The name of the resource
          example: Resource-123
          type: string
        scope:
          description: The scope of the event
          example: ServiceProvider|EndCustomer
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        serviceName:
          description: The name of the service
          example: Service-123
          type: string
        servicePlanName:
          description: The name of the service plan
          example: Basic Plan
          type: string
        time:
          description: The event time
          example: 2023-01-10T00:00:00Z
          type: string
      required:
      - alertType
      - eventCategory
      - eventID
      - eventPayload
      - eventType
      - expiryTime
      - priority
      - scope
      - time
      type: object
    ServiceProviderEventSummary:
      example:
        eventsSummary:
          FailedDeployment: 1
          UnhealthyInstance: 2
      properties:
        eventsSummary:
          additionalProperties: true
          description: The number of outstanding events by type
          example:
            FailedDeployment: 1
            UnhealthyInstance: 2
          type: object
      type: object
    SetActiveAccountConfigRequest:
      example:
        accountConfigId: ac-12345678
        id: sm-12345678
        serviceId: s-12345678
        token: ln
      properties:
        accountConfigId:
          description: ID of an Account Config
          example: Repudiandae est sed exercitationem natus.
          type: string
        id:
          description: ID of a Service Model
          example: Necessitatibus ratione amet.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "3"
          minLength: 1
          type: string
      required:
      - accountConfigId
      - id
      - serviceId
      - token
      type: object
    SetEnvironmentVariablesRequest:
      example:
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        id: r-12345678
        serviceId: s-12345678
        token: o
      properties:
        environmentVariables:
          description: The environment variables that this resource requires
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        id:
          description: ID of a resource
          example: Odit ad consequatur et error.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: c8
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    SetEnvironmentVariablesRequest2:
      example:
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
      properties:
        environmentVariables:
          description: The environment variables that this resource requires
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
      type: object
    SigninRequest:
      example:
        email: abc@gmail.com
        hashedPassword: deprecated
        password: password
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        hashedPassword:
          example: deprecated
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
      required:
      - email
      type: object
    SigninResult:
      example:
        jwtToken: ""
      properties:
        jwtToken:
          description: The jwt token
          example: ""
          type: string
      required:
      - jwtToken
      type: object
    SignupRequest:
      example:
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        email: abc@gmail.com
        legalCompanyName: mywebsite
        name: John Doe
        password: password
      properties:
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        legalCompanyName:
          default: ""
          example: mywebsite
          type: string
        name:
          example: John Doe
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
      required:
      - email
      - name
      - password
      type: object
    StartResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: 1im
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Harum atque vel minima sunt.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: ie
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    StopResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: zl6
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Et et soluta placeat.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: kf
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    StripeAuthorizeURLRequest:
      example:
        token: f
      properties:
        token:
          description: JWT token used to perform authorization
          example: "1"
          minLength: 1
          type: string
      required:
      - token
      type: object
    StripeAuthorizeURLResult:
      example:
        authorizeURL: https://connect.stripe.com/oauth/authorize?response_type=code&client_id=ca_12345678&scope=read_write&state=12345678
      properties:
        authorizeURL:
          description: URL to authorize Stripe Connect
          example: https://connect.stripe.com/oauth/authorize?response_type=code&client_id=ca_12345678&scope=read_write&state=12345678
          type: string
      type: object
    SubscriptionLicense:
      example:
        certificateBase64: Enim unde expedita doloremque minus dolore.
        expirationDate: 2024-01-01T10:00:00Z
        licenseBase64: Quos possimus voluptatem veniam praesentium quod.
      properties:
        certificateBase64:
          default: ""
          description: Public certificate used to sign the license in Base 64 format
          example: Aperiam iure et quibusdam vitae.
          type: string
        expirationDate:
          description: Current expiration of the license in RFC 3339 format. The license
            will be renewed periodically before this date while the subscription is
            active.
          example: 2024-01-01T10:00:00Z
          type: string
        licenseBase64:
          default: ""
          description: License file in Base 64 format
          example: Doloremque eum repellat aliquid labore rerum.
          type: string
      type: object
    SubscriptionUsers:
      example:
        email: abc@gmail.com
        name: John Dae
        roleType: reader
        subscriptionId: sub-abcd1234
        userId: user-abcd1234
      properties:
        email:
          description: The email of the user
          example: abc@gmail.com
          type: string
        name:
          description: The name of the user
          example: John Dae
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        userId:
          description: The User ID
          example: user-abcd1234
          type: string
      required:
      - email
      - name
      - roleType
      - subscriptionId
      - userId
      type: object
    TerraformConfiguration:
      example:
        gitConfiguration:
          accessToken: my-token
          commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
          referenceName: tags/v1.0.0
          repositoryUrl: https://github.com/username/myrepo
          userName: my-user
        privateModuleGitAccessTokens:
          tokenName: accessToken
        requiredOutputKeys:
        - output1
        requiredOutputs:
        - exported: true
          key: output1
        terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
        terraformPath: /project1/tf
      properties:
        gitConfiguration:
          $ref: '#/components/schemas/GitConfiguration'
        privateModuleGitAccessTokens:
          additionalProperties:
            example: Veniam culpa.
            type: string
          description: The git access tokens for private modules
          example:
            tokenName: accessToken
          type: object
        requiredOutputKeys:
          description: The required output keys to export
          example:
          - output1
          items:
            example: Rerum amet accusantium est ipsam commodi alias.
            type: string
          type: array
        requiredOutputs:
          description: The required output keys to export
          example:
          - exported: true
            key: output1
          items:
            $ref: '#/components/schemas/TerraformOutput'
          type: array
        terraformExecutionIdentity:
          description: The identity to use for terraform execution
          example: arn:aws:iam::123456789012:role/role-name
          type: string
        terraformPath:
          description: The path to the terraform files directory
          example: /project1/tf
          type: string
      required:
      - terraformPath
      type: object
    TerraformConfigurations:
      additionalProperties: true
      description: The Terraform configurations for cloud providers
      example:
        aws:
          gitConfiguration:
            referenceName: ref
            repositoryUrl: gitUrl
          privateModuleGitAccessTokens:
            tokenName: accessToken
          terraformPath: /project1/tf
      type: object
    TerraformOutput:
      example:
        exported: true
        key: output1
      properties:
        exported:
          description: Whether the output is exported
          example: true
          type: boolean
        key:
          description: The key of the output
          example: output1
          type: string
      required:
      - exported
      - key
      type: object
    TierVersionSet:
      example:
        autoApproveSubscription: false
        baseVersion: "3.0"
        createdAt: 2020-01-01T00:00:00Z
        createdBy: John Doe
        description: Et dolore quae eos sint nam.
        enabledFeatures:
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        features:
          LOGS: true
          METRICS: false
        instanceCount: 12
        latestUpgradePathId: upgrade-12345678
        name: Regular version set
        parentVersion: "2.0"
        productTierId: Beatae beatae.
        releasedAt: 2020-01-01T00:00:00Z
        releasedBy: John Doe
        resources:
        - description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: r-12345678
          imageConfigId: imgc-12345678
          infraConfigId: ic-12345678
          isExternal: true
          managedResourceType: PortsBasedProxy
          name: MySQL multi-writer service
        - description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: r-12345678
          imageConfigId: imgc-12345678
          infraConfigId: ic-12345678
          isExternal: true
          managedResourceType: PortsBasedProxy
          name: MySQL multi-writer service
        - description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: r-12345678
          imageConfigId: imgc-12345678
          infraConfigId: ic-12345678
          isExternal: true
          managedResourceType: PortsBasedProxy
          name: MySQL multi-writer service
        - description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: r-12345678
          imageConfigId: imgc-12345678
          infraConfigId: ic-12345678
          isExternal: true
          managedResourceType: PortsBasedProxy
          name: MySQL multi-writer service
        serviceId: s-12345678
        serviceModelId: Deserunt ab est sequi rem ab in.
        status: Preferred|Active|Deprecated|Pending
        type: Major|Incremental|UserDefined
        updatedAt: 2020-01-01T00:00:00Z
        version: "3.0"
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        baseVersion:
          description: The base version of the version set.
          example: "3.0"
          type: string
        createdAt:
          description: The timestamp when the version set was created.
          example: 2020-01-01T00:00:00Z
          type: string
        createdBy:
          description: The name of the user who created the version set.
          example: John Doe
          type: string
        description:
          description: A brief description of the product-tier version set.
          example: Ut harum odit sit aut quasi.
          type: string
        enabledFeatures:
          description: "The features that are enabled for this product tier, including\
            \ scope details and configuration"
          example:
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          items:
            $ref: '#/components/schemas/ProductTierFeatureDetail'
          type: array
        features:
          additionalProperties: true
          description: The features that are enabled / disabled for this product tier
          example:
            LOGS: true
            METRICS: false
          type: object
        instanceCount:
          description: The number of instances that are currently running this version
            set.
          example: 12
          format: int64
          type: integer
        latestUpgradePathId:
          description: ID of an Upgrade Path
          example: Sunt et sint in expedita omnis.
          type: string
        name:
          description: The name of the product-tier version set.
          example: Regular version set
          type: string
        parentVersion:
          description: The parent version of this release.
          example: "2.0"
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Quis itaque dolorem qui in aut repellat.
          type: string
        releasedAt:
          description: The timestamp when the version set was released.
          example: 2020-01-01T00:00:00Z
          type: string
        releasedBy:
          description: The name of the user who released the version set.
          example: John Doe
          type: string
        resources:
          description: List of resources that are part of this version set.
          example:
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          - description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: r-12345678
            imageConfigId: imgc-12345678
            infraConfigId: ic-12345678
            isExternal: true
            managedResourceType: PortsBasedProxy
            name: MySQL multi-writer service
          items:
            $ref: '#/components/schemas/ResourceSummary'
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Quaerat sunt magni.
          type: string
        status:
          description: The tier version set status.
          example: Preferred|Active|Deprecated|Pending
          type: string
        type:
          description: The version-set type of the product-tier.
          example: Major|Incremental|UserDefined
          type: string
        updatedAt:
          description: The timestamp when the version set was updated.
          example: 2020-01-01T00:00:00Z
          type: string
        version:
          description: The version number for the specific version set.
          example: "3.0"
          type: string
      required:
      - baseVersion
      - createdAt
      - enabledFeatures
      - features
      - productTierId
      - releasedAt
      - serviceId
      - serviceModelId
      - status
      - type
      - updatedAt
      - version
      type: object
    UnsetEnvironmentVariablesRequest:
      example:
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        id: r-12345678
        serviceId: s-12345678
        token: sp7
      properties:
        environmentVariables:
          description: The environment variables that this resource is no longer dependent
            on
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        id:
          description: ID of a resource
          example: Minima odit impedit.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: l0
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UnsetEnvironmentVariablesRequest2:
      example:
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
      properties:
        environmentVariables:
          description: The environment variables that this resource is no longer dependent
            on
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
      type: object
    UpdateAccountConfigResourceInstanceRequest:
      example:
        id: instance-abcd1234
        serviceId: service-1234
        setConnection: true
        subscriptionId: sub-abcd1234
        token: q
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        serviceId:
          description: The service ID
          example: service-1234
          type: string
        setConnection:
          description: set account config instance connection
          example: true
          type: boolean
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: k
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - subscriptionId
      - token
      type: object
    UpdateAccountConfigResourceInstanceRequest2:
      example:
        serviceId: service-1234
        setConnection: true
        subscriptionId: sub-abcd1234
      properties:
        serviceId:
          description: The service ID
          example: service-1234
          type: string
        setConnection:
          description: set account config instance connection
          example: true
          type: boolean
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
      required:
      - serviceId
      - subscriptionId
      type: object
    UpdateComputeConfigRequest:
      example:
        autoscalingPolicy:
          maxReplicas: 4
          minReplicas: 1
        cpuArchitecture: X86_64|ARM64
        description: my compute config description
        id: cc-12345678
        name: my compute config
        replicaCount: "3"
        resources:
          limits:
            cpu: "1"
            memory: 500Mi
          requests:
            cpu: "0.5"
            memory: 200Mi
        rootVolumeSizeGi: 10
        serviceId: s-12345678
        token: 0d
        warmPoolConfiguration:
          minimumNodesInPool: 1
      properties:
        autoscalingPolicy:
          $ref: '#/components/schemas/AutoscalingPolicy'
        cpuArchitecture:
          description: Processor architecture
          example: X86_64|ARM64
          type: string
        description:
          description: Description of the compute config
          example: my compute config description
          minLength: 1
          type: string
        id:
          description: ID of a Compute Config
          example: Sit est perspiciatis facilis.
          type: string
        name:
          description: Name of the compute config
          example: my compute config
          minLength: 1
          type: string
        replicaCount:
          description: Number of replicas to provision for this logical pool of nodes
            per instance of the resource
          example: "3"
          type: string
        resources:
          $ref: '#/components/schemas/ResourceSpec'
        rootVolumeSizeGi:
          description: Size of the root volume in Gi
          example: 10
          format: int64
          type: integer
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 1m
          minLength: 1
          type: string
        warmPoolConfiguration:
          $ref: '#/components/schemas/WarmPoolConfiguration'
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateComputeConfigRequest2:
      example:
        autoscalingPolicy:
          maxReplicas: 4
          minReplicas: 1
        cpuArchitecture: X86_64|ARM64
        description: my compute config description
        name: my compute config
        replicaCount: "3"
        resources:
          limits:
            cpu: "1"
            memory: 500Mi
          requests:
            cpu: "0.5"
            memory: 200Mi
        rootVolumeSizeGi: 10
        warmPoolConfiguration:
          minimumNodesInPool: 1
      properties:
        autoscalingPolicy:
          $ref: '#/components/schemas/AutoscalingPolicy'
        cpuArchitecture:
          description: Processor architecture
          example: X86_64|ARM64
          type: string
        description:
          description: Description of the compute config
          example: my compute config description
          minLength: 1
          type: string
        name:
          description: Name of the compute config
          example: my compute config
          minLength: 1
          type: string
        replicaCount:
          description: Number of replicas to provision for this logical pool of nodes
            per instance of the resource
          example: "3"
          type: string
        resources:
          $ref: '#/components/schemas/ResourceSpec'
        rootVolumeSizeGi:
          description: Size of the root volume in Gi
          example: 10
          format: int64
          type: integer
        warmPoolConfiguration:
          $ref: '#/components/schemas/WarmPoolConfiguration'
      type: object
    UpdateCustomNetworkRequest:
      example:
        id: n-12345678
        name: Dev us-east-1
        token: l
      properties:
        id:
          description: ID of a custom network
          example: Aspernatur incidunt perferendis consequatur laborum velit.
          type: string
        name:
          description: User friendly network name to help distinguish networks with
            same CIDRs
          example: Dev us-east-1
          type: string
        token:
          description: JWT token used to perform authorization
          example: 9u
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    UpdateCustomNetworkRequest2:
      example:
        name: Dev us-east-1
      properties:
        name:
          description: User friendly network name to help distinguish networks with
            same CIDRs
          example: Dev us-east-1
          type: string
      type: object
    UpdateDeploymentConfigRequest:
      example:
        description: A production deployment config
        id: dc-12345678
        infraRollConfiguration:
          infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
          maximumNumberOfResourceInstancesPerBatch: 1
          maximumUnavailableReplicas: 1
        name: Production
        rolloutPriorityList:
        - region-12345678
        - region-abcd1234
        - region-3c3c3c3c
        token: "29"
      properties:
        description:
          description: A brief description of the deployment config
          example: A production deployment config
          type: string
        id:
          description: ID of a Deployment Config
          example: Et aut sequi ipsum.
          type: string
        infraRollConfiguration:
          $ref: '#/components/schemas/InfraRollConfiguration'
        name:
          description: Name of the deployment config
          example: Production
          type: string
        rolloutPriorityList:
          example:
          - region-12345678
          - region-abcd1234
          - region-3c3c3c3c
          items:
            description: ID of a Region
            example: Aspernatur veniam dolores sed consequatur illum corrupti.
            type: string
          type: array
        token:
          description: JWT token used to perform authorization
          example: "541"
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    UpdateDeploymentConfigRequest2:
      example:
        description: A production deployment config
        infraRollConfiguration:
          infraRolloutStrategy: NEW_DEPLOYMENT_ONLY
          maximumNumberOfResourceInstancesPerBatch: 1
          maximumUnavailableReplicas: 1
        name: Production
        rolloutPriorityList:
        - region-12345678
        - region-abcd1234
        - region-3c3c3c3c
      properties:
        description:
          description: A brief description of the deployment config
          example: A production deployment config
          type: string
        infraRollConfiguration:
          $ref: '#/components/schemas/InfraRollConfiguration'
        name:
          description: Name of the deployment config
          example: Production
          type: string
        rolloutPriorityList:
          example:
          - region-12345678
          - region-abcd1234
          - region-3c3c3c3c
          items:
            example: Et aut.
            type: string
          type: array
      type: object
    UpdateFileContentRequest:
      example:
        content_type: multipart/form-data; boundary=boundary
        fileId: f-12345678
        id: r-12345678
        serviceId: s-12345678
        token: f
      properties:
        content_type:
          default: multipart/form-data; boundary=boundary
          description: "Content-Type header, must define value for multipart boundary."
          example: multipart/form-data; boundary=boundary
          pattern: "multipart/[^;]+; boundary=.+"
          type: string
        fileId:
          description: ID of a File
          example: Ex pariatur veniam quaerat laborum omnis rem.
          type: string
        id:
          description: ID of a resource
          example: Atque ea tempore quisquam eum.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ad
          minLength: 1
          type: string
      required:
      - content_type
      - fileId
      - id
      - serviceId
      - token
      type: object
    UpdateFileMetadataRequest:
      example:
        description: A file to store the configuration for the resource
        fileId: f-12345678
        id: r-12345678
        mountPath: /etc/config
        name: file.txt
        serviceId: s-12345678
        token: wl3
      properties:
        description:
          description: The description of the file
          example: A file to store the configuration for the resource
          type: string
        fileId:
          description: ID of a File
          example: Quia qui repellendus.
          type: string
        id:
          description: ID of a resource
          example: Placeat incidunt temporibus qui nemo aliquid corporis.
          type: string
        mountPath:
          description: The mount path of the file
          example: /etc/config
          type: string
        name:
          description: The name of the file
          example: file.txt
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: u
          minLength: 1
          type: string
      required:
      - fileId
      - id
      - serviceId
      - token
      type: object
    UpdateFileMetadataRequest2:
      example:
        description: A file to store the configuration for the resource
        mountPath: /etc/config
        name: file.txt
      properties:
        description:
          description: The description of the file
          example: A file to store the configuration for the resource
          type: string
        mountPath:
          description: The mount path of the file
          example: /etc/config
          type: string
        name:
          description: The name of the file
          example: file.txt
          type: string
      type: object
    UpdateIdentityProviderRequest:
      example:
        authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
        disabled: false
        emailIdentifiers: company.com
        environmentType: Sit et aut quam.
        id: idp-12345678
        loginButtonIconUrl: https://example.com/icon.png
        loginButtonText: Login with Google
        name: Google for my company
        scopes:
        - openid
        - email
        - profile
        token: c
        tokenEndpoint: https://oauth2.googleapis.com/token
        userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
      properties:
        authorizationEndpoint:
          description: The authorization endpoint of the Identity Provider
          example: https://accounts.google.com/o/oauth2/auth
          type: string
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
        disabled:
          description: Whether the Identity Provider is disabled
          example: false
          type: boolean
        emailIdentifiers:
          description: The email identifiers to use for the Identity Provider
          example: company.com
          type: string
        environmentType:
          description: The type of environment to filter costs by
          example: Atque ipsa dolorum ut sapiente pariatur minima.
          type: string
        id:
          description: ID of an Identity Provider
          example: Soluta repudiandae.
          type: string
        loginButtonIconUrl:
          description: The URL of the icon to use for the login button
          example: https://example.com/icon.png
          type: string
        loginButtonText:
          description: The text to use for the login button
          example: Login with Google
          type: string
        name:
          description: The name of the Identity Provider
          example: Google for my company
          type: string
        scopes:
          description: The scopes to request from the Identity Provider
          example:
          - openid
          - email
          - profile
          items:
            example: Ea sunt nesciunt ipsa et.
            type: string
          type: array
        token:
          description: JWT token used to perform authorization
          example: i
          minLength: 1
          type: string
        tokenEndpoint:
          description: The token endpoint of the Identity Provider
          example: https://oauth2.googleapis.com/token
          type: string
        userInfoEndpoint:
          description: The user info endpoint of the Identity Provider
          example: https://www.googleapis.com/oauth2/v3/userinfo
          type: string
      required:
      - id
      - token
      type: object
    UpdateIdentityProviderRequest2:
      example:
        authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
        disabled: false
        emailIdentifiers: company.com
        environmentType: Praesentium nobis accusantium perferendis.
        loginButtonIconUrl: https://example.com/icon.png
        loginButtonText: Login with Google
        name: Google for my company
        scopes:
        - openid
        - email
        - profile
        tokenEndpoint: https://oauth2.googleapis.com/token
        userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
      properties:
        authorizationEndpoint:
          description: The authorization endpoint of the Identity Provider
          example: https://accounts.google.com/o/oauth2/auth
          type: string
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
        disabled:
          description: Whether the Identity Provider is disabled
          example: false
          type: boolean
        emailIdentifiers:
          description: The email identifiers to use for the Identity Provider
          example: company.com
          type: string
        environmentType:
          description: The type of environment to filter costs by
          example: Rerum quaerat.
          type: string
        loginButtonIconUrl:
          description: The URL of the icon to use for the login button
          example: https://example.com/icon.png
          type: string
        loginButtonText:
          description: The text to use for the login button
          example: Login with Google
          type: string
        name:
          description: The name of the Identity Provider
          example: Google for my company
          type: string
        scopes:
          description: The scopes to request from the Identity Provider
          example:
          - openid
          - email
          - profile
          items:
            example: Eius distinctio qui.
            type: string
          type: array
        tokenEndpoint:
          description: The token endpoint of the Identity Provider
          example: https://oauth2.googleapis.com/token
          type: string
        userInfoEndpoint:
          description: The user info endpoint of the Identity Provider
          example: https://www.googleapis.com/oauth2/v3/userinfo
          type: string
      type: object
    UpdateImageConfigRequest:
      description: Update the image configuration for an existing entity
      example:
        customImageCommandsAndArgs:
          args:
          - -d
          - mysql
          commands:
          - echo
          - "Hello, World!"
        description: An image configuration for my new entity
        id: imgc-12345678
        imageName: mysql
        imageRegistryId: ir-12345678
        imageSignaturePublicKeyPEM: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        imageTag: v1
        serviceId: s-12345678
        token: aq
      properties:
        customImageCommandsAndArgs:
          $ref: '#/components/schemas/CustomImageCommandsAndArgs'
        description:
          description: A brief description of the image configuration
          example: An image configuration for my new entity
          type: string
        id:
          description: ID of an Image Config
          example: Soluta corporis ea vitae.
          type: string
        imageName:
          description: Name of the container image
          example: mysql
          minLength: 1
          type: string
        imageRegistryId:
          description: ID of an Image Registry
          example: Exercitationem quis.
          type: string
        imageSignaturePublicKeyPEM:
          description: PEM-encoded Public key part of the key used to sign the container
            image
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        imageTag:
          description: Tag representing the software image version that is currently
            preferred
          example: v1
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "8"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateImageConfigRequest2:
      example:
        customImageCommandsAndArgs:
          args:
          - -d
          - mysql
          commands:
          - echo
          - "Hello, World!"
        description: An image configuration for my new entity
        imageName: mysql
        imageRegistryId: ir-12345678
        imageSignaturePublicKeyPEM: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        imageTag: v1
      properties:
        customImageCommandsAndArgs:
          $ref: '#/components/schemas/CustomImageCommandsAndArgs'
        description:
          description: A brief description of the image configuration
          example: An image configuration for my new entity
          type: string
        imageName:
          description: Name of the container image
          example: mysql
          minLength: 1
          type: string
        imageRegistryId:
          description: The image registry ID to use for the infra
          example: ir-12345678
          type: string
        imageSignaturePublicKeyPEM:
          description: PEM-encoded Public key part of the key used to sign the container
            image
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        imageTag:
          description: Tag representing the software image version that is currently
            preferred
          example: v1
          type: string
      type: object
    UpdateImageRegistryRequest:
      description: Update an HTTP API v2 Docker Image Registry
      example:
        description: DockerHub is a public Docker Image Registry
        host: docker.io
        id: ir-12345678
        name: DockerHub
        password: mypassword
        token: 6pk
        username: myusername
      properties:
        description:
          description: A brief description of the Image Registry
          example: DockerHub is a public Docker Image Registry
          type: string
        host:
          description: The Image Registry host
          example: docker.io
          type: string
        id:
          description: ID of an Image Registry
          example: Quo repellendus consequatur necessitatibus odio perferendis.
          type: string
        name:
          description: Name of the Image Registry
          example: DockerHub
          type: string
        password:
          description: The password to use when authenticating to the Image Registry
          example: mypassword
          type: string
        token:
          description: JWT token used to perform authorization
          example: xpn
          minLength: 1
          type: string
        username:
          description: The username to use when authenticating to the Image Registry
          example: myusername
          type: string
      required:
      - id
      - token
      type: object
    UpdateImageRegistryRequest2:
      example:
        description: DockerHub is a public Docker Image Registry
        host: docker.io
        name: DockerHub
        password: mypassword
        username: myusername
      properties:
        description:
          description: A brief description of the Image Registry
          example: DockerHub is a public Docker Image Registry
          type: string
        host:
          description: The Image Registry host
          example: docker.io
          type: string
        name:
          description: Name of the Image Registry
          example: DockerHub
          type: string
        password:
          description: The password to use when authenticating to the Image Registry
          example: mypassword
          type: string
        username:
          description: The username to use when authenticating to the Image Registry
          example: myusername
          type: string
      type: object
    UpdateInfraConfigRequest:
      description: Update the infra required to host a resource
      example:
        computeConfigId: cc-12345678
        customTag:
          key: customKey
          value: customValue
        description: Infra config used for the base tier MySQL service
        id: ic-12345678
        name: MySQL Writer Infra Config
        networkConfigId: nc-12345678
        serviceId: s-12345678
        storageConfigId: sc-12345678
        token: c3
      properties:
        computeConfigId:
          description: ID of a Compute Config
          example: At ipsum maiores laboriosam.
          type: string
        customTag:
          $ref: '#/components/schemas/CustomTag'
        description:
          description: The description for the infra config
          example: Infra config used for the base tier MySQL service
          type: string
        id:
          description: ID of an Infra Config
          example: Accusamus voluptatem consectetur iure labore possimus sit.
          type: string
        name:
          description: The name of the infra config
          example: MySQL Writer Infra Config
          type: string
        networkConfigId:
          description: ID of a Network Config
          example: Pariatur accusantium iste qui vitae.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        storageConfigId:
          description: ID of a Storage Config
          example: A veritatis.
          type: string
        token:
          description: JWT token used to perform authorization
          example: a
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateInfraConfigRequest2:
      example:
        computeConfigId: cc-12345678
        customTag:
          key: customKey
          value: customValue
        description: Infra config used for the base tier MySQL service
        name: MySQL Writer Infra Config
        networkConfigId: nc-12345678
        storageConfigId: sc-12345678
      properties:
        computeConfigId:
          description: The compute config ID
          example: cc-12345678
          type: string
        customTag:
          $ref: '#/components/schemas/CustomTag'
        description:
          description: The description for the infra config
          example: Infra config used for the base tier MySQL service
          type: string
        name:
          description: The name of the infra config
          example: MySQL Writer Infra Config
          type: string
        networkConfigId:
          description: The network config ID
          example: nc-12345678
          type: string
        storageConfigId:
          description: The storage config ID per compute node
          example: sc-12345678
          type: string
      type: object
    UpdateInputParameterRequest:
      example:
        defaultValue: "[\"1\", \"2.8\", \"3\"]"
        description: Maxime est quod quae corporis.
        hasOptions: false
        id: var-12345678
        labeledOptions:
          large: t3.xlarge
          medium: t3.large
          small: t3.medium
        limits:
          max: Hic sit.
          maxLength: Incidunt quibusdam et atque quia sed.
          min: A unde eveniet voluptatem omnis qui eveniet.
          minLength: Iure distinctio rerum provident iure eligendi facilis.
        modifiable: false
        name: px
        options:
        - "[\"1\", \"2.8\", \"3\"]"
        - "[\"3.4\", \"4.5\"]"
        required: true
        serviceId: s-12345678
        token: pb
      properties:
        defaultValue:
          description: Default value to use for an optional input parameter represented
            as a string
          example: "[\"1\", \"2.8\", \"3\"]"
          type: string
        description:
          description: A brief description of the input parameter
          example: Natus porro quis iste nulla facere.
          type: string
        hasOptions:
          description: Marks the input parameter to be selectable from a list of values
          example: false
          type: boolean
        id:
          description: ID of an Input Parameter
          example: Veritatis consequatur pariatur sit.
          type: string
        labeledOptions:
          additionalProperties:
            example: Rerum facilis quisquam impedit qui.
            type: string
          description: "A map for labeled options. The key is the label and the value\
            \ is the option. When the option is selected, the label will be displayed\
            \ to the end customer. Specify either options or labeledOptions when defining\
            \ the input parameter."
          example:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          type: object
        limits:
          $ref: '#/components/schemas/Limits'
        modifiable:
          description: Marks the input parameter as immutable
          example: false
          type: boolean
        name:
          description: External name for the input parameter
          example: l
          minLength: 1
          type: string
        options:
          description: A list of options to restrict the value of the input parameter
            to (represented as a string)
          example:
          - "[\"1\", \"2.8\", \"3\"]"
          - "[\"3.4\", \"4.5\"]"
          items:
            example: Vel et earum possimus necessitatibus ratione.
            type: string
          type: array
        required:
          description: Enforces the input parameter as a required parameter
          example: true
          type: boolean
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: d3
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateInputParameterRequest2:
      example:
        defaultValue: "[\"1\", \"2.8\", \"3\"]"
        description: Temporibus sapiente sit possimus doloremque suscipit itaque.
        hasOptions: false
        labeledOptions:
          large: t3.xlarge
          medium: t3.large
          small: t3.medium
        limits:
          max: Aperiam saepe pariatur sed et sapiente.
          maxLength: Qui numquam cumque temporibus.
          min: Sit eos illo iusto omnis.
          minLength: Quis sunt.
        modifiable: false
        name: fyv
        options:
        - "[\"1\", \"2.8\", \"3\"]"
        - "[\"3.4\", \"4.5\"]"
        required: false
      properties:
        defaultValue:
          description: Default value to use for an optional input parameter represented
            as a string
          example: "[\"1\", \"2.8\", \"3\"]"
          type: string
        description:
          description: A brief description of the input parameter
          example: Nihil atque quos totam quidem.
          type: string
        hasOptions:
          description: Marks the input parameter to be selectable from a list of values
          example: false
          type: boolean
        labeledOptions:
          additionalProperties:
            example: Voluptatem dignissimos laboriosam.
            type: string
          description: "A map for labeled options. The key is the label and the value\
            \ is the option. When the option is selected, the label will be displayed\
            \ to the end customer. Specify either options or labeledOptions when defining\
            \ the input parameter."
          example:
            large: t3.xlarge
            medium: t3.large
            small: t3.medium
          type: object
        limits:
          $ref: '#/components/schemas/Limits'
        modifiable:
          description: Marks the input parameter as immutable
          example: false
          type: boolean
        name:
          description: External name for the input parameter
          example: w
          minLength: 1
          type: string
        options:
          description: A list of options to restrict the value of the input parameter
            to (represented as a string)
          example:
          - "[\"1\", \"2.8\", \"3\"]"
          - "[\"3.4\", \"4.5\"]"
          items:
            example: Eos repellat temporibus cumque repellendus.
            type: string
          type: array
        required:
          description: Enforces the input parameter as a required parameter
          example: false
          type: boolean
      type: object
    UpdateInstanceStorageVolumeConfigRequest:
      example:
        id: svc-12345678
        instanceStorageIops: "7500"
        instanceStorageThroughputMiBps: "128"
        instanceStorageType: AWS::EBS_GP2
        serviceId: s-12345678
        token: 2br
      properties:
        id:
          description: ID of a Storage Volume Config
          example: Asperiores veritatis in maxime autem sed.
          type: string
        instanceStorageIops:
          description: The IOPS provisioned for the configured instance storage type
          example: "7500"
          type: string
        instanceStorageThroughputMiBps:
          description: The throughput (in MiBps) provisioned for the configured instance
            storage type
          example: "128"
          type: string
        instanceStorageType:
          description: The type of the storage for a compute instance
          example: AWS::EBS_GP2
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: v
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateInstanceStorageVolumeConfigRequest2:
      example:
        instanceStorageIops: "7500"
        instanceStorageThroughputMiBps: "128"
        instanceStorageType: AWS::EBS_GP2
      properties:
        instanceStorageIops:
          description: The IOPS provisioned for the configured instance storage type
          example: "7500"
          type: string
        instanceStorageThroughputMiBps:
          description: The throughput (in MiBps) provisioned for the configured instance
            storage type
          example: "128"
          type: string
        instanceStorageType:
          description: The type of the storage for a compute instance
          example: AWS::EBS_GP2
          type: string
      type: object
    UpdateLimitRequest:
      example:
        description: A premium limit
        family: COMPUTE_INFRA
        key: MAX_VIRTUAL_CORES_PER_RESOURCE
        name: Premium Tier
        token: 1n
        value: 4
      properties:
        description:
          description: A brief description of the limit
          example: A premium limit
          type: string
        family:
          description: The limit family
          example: SERVICE
          type: string
        key:
          description: Unique key to identify the limit
          example: MAX_VIRTUAL_CORES_PER_RESOURCE
          type: string
        name:
          description: Name of the limit
          example: Premium Tier
          type: string
        token:
          description: JWT token used to perform authorization
          example: zil
          minLength: 1
          type: string
        value:
          description: Value of the limit being enforced
          example: 4
          format: int64
          type: integer
      required:
      - family
      - key
      - token
      - value
      type: object
    UpdateLimitRequest2:
      example:
        description: A premium limit
        name: Premium Tier
        value: 4
      properties:
        description:
          description: A brief description of the limit
          example: A premium limit
          type: string
        name:
          description: Name of the limit
          example: Premium Tier
          type: string
        value:
          description: Value of the limit being enforced
          example: 4
          format: int64
          type: integer
      required:
      - value
      type: object
    UpdateNetworkConfigRequest:
      example:
        description: A multi-zone HA network config
        endpointPerReplica: true
        id: nc-12345678
        internal: true
        name: Multi-zone
        openPorts:
        - 1299
        - 3306
        privateNetworkingConfiguration:
          privateLinkConfiguration:
            awsPrivateLinkConfigurations:
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
        publicNetworkingConfiguration:
          enableClusterLoadBalancer: true
          enableNodeLoadBalancer: true
        serviceId: s-12345678
        stableEgressIP: true
        tlsTerminationPort: 443
        token: h
        zoneConfiguration: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
      properties:
        description:
          description: A brief description of the network config
          example: A multi-zone HA network config
          type: string
        endpointPerReplica:
          description: Generates a DNS endpoint per-replica for this network config
          example: true
          type: boolean
        id:
          description: ID of a Network Config
          example: Non sunt ipsa dolores sint.
          type: string
        internal:
          description: Restrict access to this network config to the internal network
          example: true
          type: boolean
        name:
          description: Name of the network config
          example: Multi-zone
          type: string
        openPorts:
          description: Ports to map to the generated DNS endpoint
          example:
          - 1299
          - 3306
          items:
            example: 1940730323767355054
            format: int64
            type: integer
          type: array
        privateNetworkingConfiguration:
          $ref: '#/components/schemas/PrivateNetworkingConfiguration'
        publicNetworkingConfiguration:
          $ref: '#/components/schemas/PublicNetworkingConfiguration'
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        stableEgressIP:
          description: Create an external node load balancer per node rather than
            expose the node ip directly
          example: true
          type: boolean
        tlsTerminationPort:
          description: The port that hosts the reverse proxy for TLS termination
          example: 443
          format: int64
          type: integer
        token:
          description: JWT token used to perform authorization
          example: ru2
          minLength: 1
          type: string
        zoneConfiguration:
          description: The preferred type of zonal availability for this resource
            and the specific zone(s) to deploy in
          example: SINGLE_ZONE_OMNISTRATE_RECOMMENDED|SINGLE_ZONE_CUSTOMER_PROVIDED|MULTI_ZONE
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateNetworkConfigRequest2:
      example:
        description: A multi-zone HA network config
        endpointPerReplica: true
        internal: true
        name: Multi-zone
        openPorts:
        - 1299
        - 3306
        privateNetworkingConfiguration:
          privateLinkConfiguration:
            awsPrivateLinkConfigurations:
            - port: 80
              targetGroupName: my-target-group
            - port: 80
              targetGroupName: my-target-group
        publicNetworkingConfiguration:
          enableClusterLoadBalancer: true
          enableNodeLoadBalancer: true
        stableEgressIP: true
        tlsTerminationPort: 443
        zoneConfiguration: Delectus cumque natus illum ipsam inventore.
      properties:
        description:
          description: A brief description of the network config
          example: A multi-zone HA network config
          type: string
        endpointPerReplica:
          description: Generates a DNS endpoint per-replica for this network config
          example: true
          type: boolean
        internal:
          description: Restrict access to this network config to the internal network
          example: true
          type: boolean
        name:
          description: Name of the network config
          example: Multi-zone
          type: string
        openPorts:
          description: Ports to map to the generated DNS endpoint
          example:
          - 1299
          - 3306
          items:
            example: 1577839698958874114
            format: int64
            type: integer
          type: array
        privateNetworkingConfiguration:
          $ref: '#/components/schemas/PrivateNetworkingConfiguration'
        publicNetworkingConfiguration:
          $ref: '#/components/schemas/PublicNetworkingConfiguration'
        stableEgressIP:
          description: Create an external node load balancer per node rather than
            expose the node ip directly
          example: true
          type: boolean
        tlsTerminationPort:
          description: The port that hosts the reverse proxy for TLS termination
          example: 443
          format: int64
          type: integer
        zoneConfiguration:
          description: The preferred type of zonal availability for this resource
            and the specific zone(s) to deploy in
          example: Fuga illum omnis modi rerum.
          type: string
      type: object
    UpdateOutputParameterRequest:
      example:
        description: Username of the user created in the target system
        id: op-12345678
        name: Username
        serviceId: s-12345678
        token: fh
        value: johndoe
        valueRef: $var.username
        valueType: Boolean|Float64|String|Secret|Password
      properties:
        description:
          description: Description of the output variable being exported
          example: Username of the user created in the target system
          minLength: 1
          type: string
        id:
          description: ID of an Output Parameter
          example: Dignissimos placeat nihil.
          type: string
        name:
          description: External name of the output variable being exported
          example: Username
          minLength: 1
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: y5z
          minLength: 1
          type: string
        value:
          description: Value of the output variable being exported
          example: johndoe
          minLength: 1
          type: string
        valueRef:
          description: Reference to an input variable that will be used to set the
            value of the output variable being exported
          example: $var.username
          type: string
        valueType:
          description: Type of the variable encoding the value
          example: Boolean|Float64|String|Secret|Password
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateOutputParameterRequest2:
      example:
        description: Username of the user created in the target system
        name: Username
        value: johndoe
        valueRef: $var.username
        valueType: Recusandae delectus distinctio rerum impedit.
      properties:
        description:
          description: Description of the output variable being exported
          example: Username of the user created in the target system
          minLength: 1
          type: string
        name:
          description: External name of the output variable being exported
          example: Username
          minLength: 1
          type: string
        value:
          description: Value of the output variable being exported
          example: johndoe
          minLength: 1
          type: string
        valueRef:
          description: Reference to an input variable that will be used to set the
            value of the output variable being exported
          example: $var.username
          type: string
        valueType:
          example: Aliquid soluta.
          type: string
      type: object
    UpdatePasswordRequest:
      example:
        currentPassword: currentPassword
        currentPasswordHash: currentPasswordHash
        password: password
        token: o
      properties:
        currentPassword:
          example: currentPassword
          minLength: 1
          type: string
        currentPasswordHash:
          example: currentPasswordHash
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: "04"
          minLength: 1
          type: string
      required:
      - password
      - token
      type: object
    UpdatePasswordRequest2:
      example:
        currentPassword: currentPassword
        currentPasswordHash: currentPasswordHash
        password: password
      properties:
        currentPassword:
          example: currentPassword
          minLength: 1
          type: string
        currentPasswordHash:
          example: currentPasswordHash
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
      required:
      - password
      type: object
    UpdatePipelineRequest:
      example:
        description: MySQL SaaS promotion pipeline
        id: p-12345678
        name: my-pipeline
        serviceEnvironmentSequence:
        - se-12345678
        - se-23456789
        serviceId: s-12345678
        token: szm
      properties:
        description:
          description: Description of the pipeline
          example: MySQL SaaS promotion pipeline
          type: string
        id:
          description: ID of a Pipeline
          example: Explicabo architecto.
          type: string
        name:
          description: Name of the pipeline
          example: my-pipeline
          type: string
        serviceEnvironmentSequence:
          description: Sequence of service environments to be deployed in the pipeline
          example:
          - se-12345678
          - se-23456789
          items:
            description: ID of a Service Environment
            example: se-123456
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: aq
          minLength: 1
          type: string
      required:
      - token
      type: object
    UpdateProductTierRequest:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        billingProductID: abc123
        description: A premium product tier
        documentation: Any documentation
        exportUsageMetering: true
        exportUsageMeteringConfig:
          GCS:
            GCSBucketName: my_billing_bucket_name
          S3:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
        gcpRegions:
        - us-central1
        id: pt-12345678
        isDisabled: false
        maxNumberOfInstances: 5
        name: Premium
        planDescription: A premium plan
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        pricing:
          price1: value1
        serviceId: s-12345678
        support: Any support
        tierType: OMNISTRATE_DEDICATED_TENANCY
        token: crn
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Perferendis soluta qui alias ipsa quia.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this product tier is available on
          example:
          - northcentralus
          items:
            example: In ut id ut soluta.
            type: string
          type: array
        billingProductID:
          description: Optional billing product ID for tax purposes
          example: abc123
          type: string
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        exportUsageMetering:
          description: Export usage metering data
          example: true
          type: boolean
        exportUsageMeteringConfig:
          additionalProperties: true
          description: Export usage metering data configuration
          example:
            GCS:
              GCSBucketName: my_billing_bucket_name
            S3:
              S3BucketArn: arn:aws:s3:::my_billing_bucket_name
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Non non beatae eos omnis.
            type: string
          type: array
        id:
          description: ID of a Product Tier
          example: Dignissimos non consectetur odit repellat rerum.
          type: string
        isDisabled:
          description: Update the product tier's state as enabled/disabled. Enabling
            the product tier will let end-customers subscribe and use the service
            plan.
          example: false
          type: boolean
        maxNumberOfInstances:
          description: Maximum number of instances. Set to -1 for unlimited.
          example: 5
          format: int64
          type: integer
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricePerUnit:
          additionalProperties: true
          description: Price per unit.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        pricing:
          description: Pricing
          example:
            price1: value1
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        support:
          description: Support
          example: Any support
          type: string
        tierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        token:
          description: JWT token used to perform authorization
          example: kme
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateProductTierRequest2:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        billingProductID: abc123
        description: A premium product tier
        documentation: Any documentation
        exportUsageMetering: true
        exportUsageMeteringConfig:
          GCS:
            GCSBucketName: my_billing_bucket_name
          S3:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
        gcpRegions:
        - us-central1
        isDisabled: false
        maxNumberOfInstances: 5
        name: Premium
        planDescription: A premium plan
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        pricing:
          price1: value1
        support: Any support
        tierType: OMNISTRATE_DEDICATED_TENANCY
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Iste sint vel.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this product tier is available on
          example:
          - northcentralus
          items:
            example: Soluta culpa voluptas exercitationem dignissimos non sunt.
            type: string
          type: array
        billingProductID:
          description: Optional billing product ID for tax purposes
          example: abc123
          type: string
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        exportUsageMetering:
          description: Export usage metering data
          example: true
          type: boolean
        exportUsageMeteringConfig:
          additionalProperties: true
          description: Export usage metering data configuration
          example:
            GCS:
              GCSBucketName: my_billing_bucket_name
            S3:
              S3BucketArn: arn:aws:s3:::my_billing_bucket_name
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Facilis qui totam et eaque.
            type: string
          type: array
        isDisabled:
          description: Update the product tier's state as enabled/disabled. Enabling
            the product tier will let end-customers subscribe and use the service
            plan.
          example: false
          type: boolean
        maxNumberOfInstances:
          description: Maximum number of instances. Set to -1 for unlimited.
          example: 5
          format: int64
          type: integer
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricePerUnit:
          additionalProperties: true
          description: Price per unit.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        pricing:
          description: Pricing
          example:
            price1: value1
        support:
          description: Support
          example: Any support
          type: string
        tierType:
          description: Tier type
          example: OMNISTRATE_DEDICATED_TENANCY
          type: string
      type: object
    UpdateResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        requestParams:
          param1: value1
          param2: value2
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: x6l
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        requestParams:
          description: The request parameters
          example:
            param1: value1
            param2: value2
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Id sit dicta aperiam.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: 9g
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    UpdateResourceInstanceRequest2:
      example:
        requestParams:
          param1: value1
          param2: value2
      properties:
        requestParams:
          description: The request parameters
          example:
            param1: value1
            param2: value2
      type: object
    UpdateResourceRequest:
      example:
        additionalSecurityContext:
          AddCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          DropCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          SupplementalGroupIDs:
          - 1001
          - 999
        backupConfiguration:
          backupPeriodInHours: 24
          backupRetentionInDays: 7
        customLabels:
          key: value
        customSysCTLs:
          net.ipv4.tcp_syncookies: "1"
        customULimits:
        - ULimitsName: NoProc
          ULimitsType: Soft
          ULimitsValue: 1000
        - ULimitsName: NoFile
          ULimitsType: Hard
          ULimitsValue: 2048
        dependencies:
        - parameterMap:
            clusterId: writerId
            clusterOrg: userDatabase
          resourceId: r-12345678
        - parameterMap:
            clusterId: readerId
            clusterOrg: userDatabase
          resourceId: r-abcdef12
        description: A resource to manage a hosted public SaaS offering of a multi-writer
          MySQL service
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        helmChartConfiguration:
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          password: my-password
          runtimeConfiguration:
            disableHooks: true
            recreate: true
            resetThenReuseValues: true
            resetValues: true
            reuseValues: true
            skipCRDs: true
            timeoutNanos: 1000000000
            upgradeCRDs: true
            wait: true
            waitForJobs: true
          username: my-user
        id: r-12345678
        imageConfigId: imgc-12345678
        infraConfigId: ic-12345678
        jobConfig:
          activeDeadlineSeconds: 300
          backoffLimit: 5
        kustomizeConfiguration:
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          gitConfiguration:
            accessToken: my-token
            commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
            referenceName: tags/v1.0.0
            repositoryUrl: https://github.com/username/myrepo
            userName: my-user
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          kustomizePath: /kustomize
        l4LoadBalancerConfiguration:
          ingressPortConfiguration:
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8080
            ingressPort: 1234
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8081
            ingressPort: 5678
          - associatedResourceIDs:
            - r-vwxybz12
            - r-poij122v
            backendPort: 8082
            ingressPort: 9012
        l7LoadBalancerConfiguration:
          paths:
          - associatedResourceID: r-12345678
            path: /path
            port: 8080
        name: Galera
        operatorCRDConfiguration:
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          outputParameters:
            expiresAt: $out.status.notAfter
            issuerName: letsencrypt-prod
          readinessConditions:
            $out.status.conditions[?(@.type=='Ready')].status: true
          supplementalFiles:
          - |
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
          - |-
            apiVersion: ingress.nginx.io/v1
            kind: IngressClass
            metadata:
              name: nginx
            spec:
              controller: nginx.org/ingress-controller
          template: |-
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
                email: test@example.com
                privateKeySecretRef:
                  name: letsencrypt-prod
                solvers:
                - http01:
                    ingress:
                      class: nginx
        serviceId: s-12345678
        terraformConfigurations:
          aws:
            gitConfiguration:
              referenceName: ref
              repositoryUrl: gitUrl
            privateModuleGitAccessTokens:
              tokenName: accessToken
            terraformPath: /project1/tf
        token: x
      properties:
        additionalSecurityContext:
          $ref: '#/components/schemas/AdditionalSecurityContext'
        backupConfiguration:
          $ref: '#/components/schemas/BackupConfiguration'
        customLabels:
          additionalProperties:
            example: Sit eum et vel sunt alias.
            type: string
          description: Custom labels for the resource
          example:
            key: value
          type: object
        customSysCTLs:
          additionalProperties:
            example: Reprehenderit ut rerum esse voluptatem.
            type: string
          description: Custom sysctl settings for the resource
          example:
            net.ipv4.tcp_syncookies: "1"
          type: object
        customULimits:
          description: Custom ulimits for the resource
          example:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          items:
            $ref: '#/components/schemas/CustomULimits'
          type: array
        dependencies:
          example:
          - parameterMap:
              clusterId: writerId
              clusterOrg: userDatabase
            resourceId: r-12345678
          - parameterMap:
              clusterId: readerId
              clusterOrg: userDatabase
            resourceId: r-abcdef12
          items:
            $ref: '#/components/schemas/ResourceDependency'
          type: array
        description:
          description: A brief description of the resource
          example: A resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          type: string
        environmentVariables:
          description: The environment variables that this resource requires
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        helmChartConfiguration:
          $ref: '#/components/schemas/HelmChartConfiguration'
        id:
          description: ID of a resource
          example: Perferendis voluptate possimus veritatis commodi quas.
          type: string
        imageConfigId:
          description: ID of an Image Config
          example: Natus rerum cumque qui et.
          type: string
        infraConfigId:
          description: ID of an Infra Config
          example: Qui autem.
          type: string
        jobConfig:
          $ref: '#/components/schemas/JobConfig'
        kustomizeConfiguration:
          $ref: '#/components/schemas/KustomizeConfiguration'
        l4LoadBalancerConfiguration:
          $ref: '#/components/schemas/L4LoadBalancerConfiguration'
        l7LoadBalancerConfiguration:
          $ref: '#/components/schemas/L7LoadBalancerConfiguration'
        name:
          description: Name of the resource
          example: Galera
          type: string
        operatorCRDConfiguration:
          $ref: '#/components/schemas/OperatorCRDConfiguration'
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        terraformConfigurations:
          additionalProperties: true
          description: The Terraform configurations for cloud providers
          example:
            aws:
              gitConfiguration:
                referenceName: ref
                repositoryUrl: gitUrl
              privateModuleGitAccessTokens:
                tokenName: accessToken
              terraformPath: /project1/tf
          type: object
        token:
          description: JWT token used to perform authorization
          example: pn
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateResourceRequest2:
      example:
        additionalSecurityContext:
          AddCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          DropCapabilities:
          - CAP_NET_ADMIN
          - CAP_NET_RAW
          SupplementalGroupIDs:
          - 1001
          - 999
        backupConfiguration:
          backupPeriodInHours: 24
          backupRetentionInDays: 7
        customLabels:
          key: value
        customSysCTLs:
          net.ipv4.tcp_syncookies: "1"
        customULimits:
        - ULimitsName: NoProc
          ULimitsType: Soft
          ULimitsValue: 1000
        - ULimitsName: NoFile
          ULimitsType: Hard
          ULimitsValue: 2048
        dependencies:
        - parameterMap:
            clusterId: writerId
            clusterOrg: userDatabase
          resourceId: r-12345678
        - parameterMap:
            clusterId: readerId
            clusterOrg: userDatabase
          resourceId: r-abcdef12
        description: A resource to manage a hosted public SaaS offering of a multi-writer
          MySQL service
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        helmChartConfiguration:
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          password: my-password
          runtimeConfiguration:
            disableHooks: true
            recreate: true
            resetThenReuseValues: true
            resetValues: true
            reuseValues: true
            skipCRDs: true
            timeoutNanos: 1000000000
            upgradeCRDs: true
            wait: true
            waitForJobs: true
          username: my-user
        imageConfigId: imgc-12345678
        infraConfigId: ic-12345678
        jobConfig:
          activeDeadlineSeconds: 300
          backoffLimit: 5
        kustomizeConfiguration:
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          gitConfiguration:
            accessToken: my-token
            commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
            referenceName: tags/v1.0.0
            repositoryUrl: https://github.com/username/myrepo
            userName: my-user
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          kustomizePath: /kustomize
        l4LoadBalancerConfiguration:
          ingressPortConfiguration:
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8080
            ingressPort: 1234
          - associatedResourceIDs:
            - r-12345678
            - r-abcdef12
            backendPort: 8081
            ingressPort: 5678
          - associatedResourceIDs:
            - r-vwxybz12
            - r-poij122v
            backendPort: 8082
            ingressPort: 9012
        l7LoadBalancerConfiguration:
          paths:
          - associatedResourceID: r-12345678
            path: /path
            port: 8080
        name: Galera
        operatorCRDConfiguration:
          endpointConfiguration:
            admin:
              host: "https://{{ $sys.network.externalClusterEndpoint }}/admin"
              networkingType: PRIVATE
              ports:
              - 8080
              - 8081
              primary: false
            cluster:
              host: https://my-endpoint.com
              networkingType: PUBLIC
              ports:
              - 8080
              - 8081
              primary: true
          helmChartDependencies:
          - chartName: cert-manager
            chartVersion: v1.5.3
          - chartName: nginx-ingress
            chartVersion: v0.48.1
          - chartName: external-dns
            chartVersion: v0.7.0
          - chartName: cnpg-operator
            chartVersion: v0.23.1
          outputParameters:
            expiresAt: $out.status.notAfter
            issuerName: letsencrypt-prod
          readinessConditions:
            $out.status.conditions[?(@.type=='Ready')].status: true
          supplementalFiles:
          - |
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
          - |-
            apiVersion: ingress.nginx.io/v1
            kind: IngressClass
            metadata:
              name: nginx
            spec:
              controller: nginx.org/ingress-controller
          template: |-
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-prod
            spec:
              acme:
                server: https://acme-v02.api.letsencrypt.org/directory
                email: test@example.com
                privateKeySecretRef:
                  name: letsencrypt-prod
                solvers:
                - http01:
                    ingress:
                      class: nginx
        terraformConfigurations:
          Delectus sunt voluptatem.:
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            privateModuleGitAccessTokens:
              tokenName: accessToken
            requiredOutputKeys:
            - output1
            requiredOutputs:
            - exported: true
              key: output1
            terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
            terraformPath: /project1/tf
          Ducimus et consequatur quod possimus provident quis.:
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            privateModuleGitAccessTokens:
              tokenName: accessToken
            requiredOutputKeys:
            - output1
            requiredOutputs:
            - exported: true
              key: output1
            terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
            terraformPath: /project1/tf
      properties:
        additionalSecurityContext:
          $ref: '#/components/schemas/AdditionalSecurityContext'
        backupConfiguration:
          $ref: '#/components/schemas/BackupConfiguration'
        customLabels:
          additionalProperties:
            example: Voluptas dolorem vero est occaecati magni.
            type: string
          description: Custom labels for the resource
          example:
            key: value
          type: object
        customSysCTLs:
          additionalProperties:
            example: Consequuntur provident et non voluptatem voluptatem.
            type: string
          description: Custom sysctl settings for the resource
          example:
            net.ipv4.tcp_syncookies: "1"
          type: object
        customULimits:
          description: Custom ulimits for the resource
          example:
          - ULimitsName: NoProc
            ULimitsType: Soft
            ULimitsValue: 1000
          - ULimitsName: NoFile
            ULimitsType: Hard
            ULimitsValue: 2048
          items:
            $ref: '#/components/schemas/CustomULimits'
          type: array
        dependencies:
          example:
          - parameterMap:
              clusterId: writerId
              clusterOrg: userDatabase
            resourceId: r-12345678
          - parameterMap:
              clusterId: readerId
              clusterOrg: userDatabase
            resourceId: r-abcdef12
          items:
            $ref: '#/components/schemas/ResourceDependency'
          type: array
        description:
          description: A brief description of the resource
          example: A resource to manage a hosted public SaaS offering of a multi-writer
            MySQL service
          type: string
        environmentVariables:
          description: The environment variables that this resource requires
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        helmChartConfiguration:
          $ref: '#/components/schemas/HelmChartConfiguration'
        imageConfigId:
          description: The ID of the image configuration that this resource refers
            to
          example: imgc-12345678
          type: string
        infraConfigId:
          description: The ID of the infrastructure configuration that this resource
            refers to
          example: ic-12345678
          type: string
        jobConfig:
          $ref: '#/components/schemas/JobConfig'
        kustomizeConfiguration:
          $ref: '#/components/schemas/KustomizeConfiguration'
        l4LoadBalancerConfiguration:
          $ref: '#/components/schemas/L4LoadBalancerConfiguration'
        l7LoadBalancerConfiguration:
          $ref: '#/components/schemas/L7LoadBalancerConfiguration'
        name:
          description: Name of the resource
          example: Galera
          type: string
        operatorCRDConfiguration:
          $ref: '#/components/schemas/OperatorCRDConfiguration'
        terraformConfigurations:
          additionalProperties:
            $ref: '#/components/schemas/TerraformConfiguration'
          description: The Terraform configurations for various cloud providers
          example:
            Sint quibusdam ducimus doloremque.:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              privateModuleGitAccessTokens:
                tokenName: accessToken
              requiredOutputKeys:
              - output1
              requiredOutputs:
              - exported: true
                key: output1
              terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
              terraformPath: /project1/tf
            Sit dolorem.:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              privateModuleGitAccessTokens:
                tokenName: accessToken
              requiredOutputKeys:
              - output1
              requiredOutputs:
              - exported: true
                key: output1
              terraformExecutionIdentity: arn:aws:iam::123456789012:role/role-name
              terraformPath: /project1/tf
          type: object
      type: object
    UpdateSaaSPortalCustomDomainRequest:
      example:
        customDomain: mycustomdomain.com
        description: My custom domain description
        environmentType: DEV
        name: MyCustomDomain
        token: vf
      properties:
        customDomain:
          description: The custom domain
          example: mycustomdomain.com
          type: string
        description:
          description: The custom domain description
          example: My custom domain description
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        name:
          description: The custom domain name
          example: MyCustomDomain
          type: string
        token:
          description: JWT token used to perform authorization
          example: 0x
          minLength: 1
          type: string
      required:
      - environmentType
      - token
      type: object
    UpdateSaaSPortalCustomDomainRequest2:
      example:
        customDomain: mycustomdomain.com
        description: My custom domain description
        name: MyCustomDomain
      properties:
        customDomain:
          description: The custom domain
          example: mycustomdomain.com
          type: string
        description:
          description: The custom domain description
          example: My custom domain description
          type: string
        name:
          description: The custom domain name
          example: MyCustomDomain
          type: string
      type: object
    UpdateSaaSPortalRequest:
      example:
        customDomain: mycustomdomain.com
        disablePasswordLogin: false
        emailConfig:
          smtpFromEmail: example@gmail.com
          smtpHost: smtp.gmail.com
          smtpPassword: password
          smtpPort: 587
          smtpUsername: username
        environmentType: DEV
        googleAnalyticsTagID: G-123456789
        imageConfig:
          imageName: myimage
          imageRegistry: ghcr.io
          imageTag: latest
        token: np
      properties:
        customDomain:
          description: The custom domain for the SaaS portal
          example: mycustomdomain.com
          type: string
        disablePasswordLogin:
          description: Whether to disable password login for the SaaS portal
          example: false
          type: boolean
        emailConfig:
          $ref: '#/components/schemas/SaaSPortalEmailConfig'
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV
          type: string
        googleAnalyticsTagID:
          description: The Google Analytics tag ID for the SaaS portal
          example: G-123456789
          type: string
        imageConfig:
          $ref: '#/components/schemas/SaaSPortalImageConfig'
        token:
          description: JWT token used to perform authorization
          example: z6
          minLength: 1
          type: string
      required:
      - environmentType
      - token
      type: object
    UpdateSaaSPortalRequest2:
      example:
        customDomain: mycustomdomain.com
        disablePasswordLogin: false
        emailConfig:
          smtpFromEmail: example@gmail.com
          smtpHost: smtp.gmail.com
          smtpPassword: password
          smtpPort: 587
          smtpUsername: username
        googleAnalyticsTagID: G-123456789
        imageConfig:
          imageName: myimage
          imageRegistry: ghcr.io
          imageTag: latest
      properties:
        customDomain:
          description: The custom domain for the SaaS portal
          example: mycustomdomain.com
          type: string
        disablePasswordLogin:
          description: Whether to disable password login for the SaaS portal
          example: false
          type: boolean
        emailConfig:
          $ref: '#/components/schemas/SaaSPortalEmailConfig'
        googleAnalyticsTagID:
          description: The Google Analytics tag ID for the SaaS portal
          example: G-123456789
          type: string
        imageConfig:
          $ref: '#/components/schemas/SaaSPortalImageConfig'
      type: object
    UpdateServiceAPIRequest:
      example:
        description: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
          for high availability
        id: sa-12345678
        serviceId: s-12345678
        token: itp
      properties:
        description:
          description: A brief description of the service API bundle
          example: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
            for high availability
          type: string
        id:
          description: ID of a Service API
          example: Itaque in ea ut deleniti eligendi.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: s
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateServiceAPIRequest2:
      example:
        description: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
          for high availability
      properties:
        description:
          description: A brief description of the service API bundle
          example: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
            for high availability
          type: string
      type: object
    UpdateServiceEnvironmentRequest:
      example:
        autoApproveSubscription: false
        deploymentConfigId: dc-12345678
        description: The production environment for the MySQL multi-writer service
        id: se-12345678
        name: Production
        serviceAuthPublicKey: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        serviceId: s-12345678
        sourceEnvironmentId: se-12345678
        token: d
        visibility: PUBLIC
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        deploymentConfigId:
          description: ID of a Deployment Config
          example: Est ex.
          type: string
        description:
          description: A brief description of the service environment
          example: The production environment for the MySQL multi-writer service
          type: string
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        name:
          description: Name of the Service Environment
          example: Production
          type: string
        serviceAuthPublicKey:
          description: PEM-encoded Public key part of the key used to sign the JWT
            tokens for the service control plane APIs
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceEnvironmentId:
          description: The ID of the service environment to use for promoting changes
            to this environment
          example: se-12345678
          type: string
        token:
          description: JWT token used to perform authorization
          example: 1ed
          minLength: 1
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateServiceEnvironmentRequest2:
      example:
        autoApproveSubscription: false
        deploymentConfigId: dc-12345678
        description: The production environment for the MySQL multi-writer service
        name: Production
        serviceAuthPublicKey: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        sourceEnvironmentId: se-12345678
        visibility: Voluptatum labore aspernatur sed.
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        deploymentConfigId:
          description: The deployment configuration ID
          example: dc-12345678
          type: string
        description:
          description: A brief description of the service environment
          example: The production environment for the MySQL multi-writer service
          type: string
        name:
          description: Name of the Service Environment
          example: Production
          type: string
        serviceAuthPublicKey:
          description: PEM-encoded Public key part of the key used to sign the JWT
            tokens for the service control plane APIs
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        sourceEnvironmentId:
          description: The ID of the service environment to use for promoting changes
            to this environment
          example: se-12345678
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: Rerum totam veritatis iste aspernatur praesentium.
          type: string
      type: object
    UpdateServiceModelRequest:
      example:
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        id: sm-12345678
        name: MySQL multi-writer service hosted model
        serviceId: s-12345678
        token: "0"
      properties:
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        id:
          description: ID of a Service Model
          example: Voluptatem ut ea dolores a minus odio.
          type: string
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: zkc
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateServiceModelRequest2:
      example:
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        name: MySQL multi-writer service hosted model
      properties:
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
      type: object
    UpdateServiceRequest:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        id: s-12345678
        name: MySQL multi-writer service
        serviceLogoURL: Et pariatur.
        token: zg
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        id:
          description: ID of a Service
          example: s-123456
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Et sed.
          type: string
        token:
          description: JWT token used to perform authorization
          example: ejt
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    UpdateServiceRequest2:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        name: MySQL multi-writer service
        serviceLogoURL: Et temporibus ratione explicabo dolores sit itaque.
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Et et unde nobis consequatur.
          type: string
      type: object
    UpdateStorageConfigRequest:
      example:
        description: my-storage-config-description
        id: sc-12345678
        name: my-storage-config
        serviceId: s-12345678
        token: 6ep
      properties:
        description:
          description: Description of the storage config
          example: my-storage-config-description
          minLength: 1
          type: string
        id:
          description: ID of a Storage Config
          example: Nemo placeat.
          type: string
        name:
          description: Name of the storage config
          example: my-storage-config
          minLength: 1
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: i8h
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateStorageConfigRequest2:
      example:
        description: my-storage-config-description
        name: my-storage-config
      properties:
        description:
          description: Description of the storage config
          example: my-storage-config-description
          minLength: 1
          type: string
        name:
          description: Name of the storage config
          example: my-storage-config
          minLength: 1
          type: string
      type: object
    UpdateStorageVolumeConfigRequest:
      example:
        description: A storage volume set to store the MySQL data directory
        disableBackup: false
        id: svc-12345678
        name: MySQL Data Volume
        serviceId: s-12345678
        token: 7sh
      properties:
        description:
          description: A brief description of the context for the storage volume pool
          example: A storage volume set to store the MySQL data directory
          type: string
        disableBackup:
          description: Disable backup for the storage volume
          example: false
          type: boolean
        id:
          description: ID of a Storage Volume Config
          example: Temporibus officia.
          type: string
        name:
          description: Name of the storage volume pool
          example: MySQL Data Volume
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: k
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateStorageVolumeConfigRequest2:
      example:
        description: A storage volume set to store the MySQL data directory
        disableBackup: false
        name: MySQL Data Volume
      properties:
        description:
          description: A brief description of the context for the storage volume pool
          example: A storage volume set to store the MySQL data directory
          type: string
        disableBackup:
          description: Disable backup for the storage volume
          example: false
          type: boolean
        name:
          description: Name of the storage volume pool
          example: MySQL Data Volume
          type: string
      type: object
    UpdateStorageVolumeSizeConfigRequest:
      example:
        id: svc-12345678
        instanceStorageSizeGi: $var.storage_size
        serviceId: s-12345678
        token: zb
      properties:
        id:
          description: ID of a Storage Volume Config
          example: Cupiditate laborum nisi sed perspiciatis est.
          type: string
        instanceStorageSizeGi:
          description: The storage size (in Gi) provisioned for the configured instance
            storage type
          example: $var.storage_size
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "61"
          minLength: 1
          type: string
      required:
      - id
      - instanceStorageSizeGi
      - serviceId
      - token
      type: object
    UpdateStorageVolumeSizeConfigRequest2:
      example:
        instanceStorageSizeGi: $var.storage_size
      properties:
        instanceStorageSizeGi:
          description: The storage size (in Gi) provisioned for the configured instance
            storage type
          example: $var.storage_size
          type: string
      required:
      - instanceStorageSizeGi
      type: object
    UpdateUpgradePathRequest:
      example:
        description: An upgrade path migrating clusters from one LTS version to another
        id: up-12345678
        name: LTS upgrade path
        serviceId: s-12345678
        sourceVersion: "567.0"
        targetVersion: "589.0"
        token: my6
      properties:
        description:
          description: A brief description of the upgrade path
          example: An upgrade path migrating clusters from one LTS version to another
          type: string
        id:
          description: ID of an Upgrade Path
          example: Nulla doloremque in accusantium.
          type: string
        name:
          description: Name of the upgrade path
          example: LTS upgrade path
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceVersion:
          description: Version of the Entity to operate on
          example: "1.0"
          minLength: 1
          type: string
        targetVersion:
          description: Version of the Entity to operate on
          example: "1.0"
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: r
          minLength: 1
          type: string
      required:
      - token
      type: object
    UpdateUserRequest:
      example:
        address:
          addressLine1: 1234 Main St
          addressLine2: Apt 123
          addressLine3: Building 123
          city: San Francisco
          country: US
          state: CA
          zip: "94123"
        id: user-abcd1234
        name: John Dae
        orgCookiePolicy: Voluptas animi atque nam facere veritatis suscipit.
        orgDescription: ACME Inc.
        orgFavIconURL: http://gerholdmoen.com/allan
        orgLogoURL: http://parkerbeer.com/maynard
        orgName: ACME
        orgPrivacyPolicy: Reprehenderit omnis et deleniti ea explicabo.
        orgSupportEmail: support@example.com
        orgTermsOfUse: Repellat et ut.
        orgURL: something.acme
        token: b6
      properties:
        address:
          $ref: '#/components/schemas/Address'
        id:
          description: The User ID
          example: user-abcd1234
          type: string
        name:
          description: The name of the user
          example: John Dae
          type: string
        orgCookiePolicy:
          description: The cookie policy for the org that this user owns in an HTML
            format
          example: Beatae et aliquid.
          type: string
        orgDescription:
          description: The description of the org that this user owns
          example: ACME Inc.
          type: string
        orgFavIconURL:
          description: The favicon of the org that this user owns
          example: http://hammes.net/miller.kris
          format: uri
          type: string
        orgLogoURL:
          description: The logo of the org that this user owns
          example: http://barrows.biz/garland_homenick
          format: uri
          type: string
        orgName:
          description: The org name that this user owns
          example: ACME
          type: string
        orgPrivacyPolicy:
          description: The privacy policy for the org that this user owns in an HTML
            format
          example: Perferendis qui quia error tenetur aut enim.
          type: string
        orgSupportEmail:
          description: The support email of the org that this user owns
          example: support@example.com
          type: string
        orgTermsOfUse:
          description: The terms of use for the org that this user owns in an HTML
            format
          example: Ipsa quaerat sapiente.
          type: string
        orgURL:
          description: The url of the org that this user owns
          example: something.acme
          type: string
        token:
          description: JWT token used to perform authorization
          example: jnh
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    UpdateUserRequest2:
      example:
        address:
          addressLine1: 1234 Main St
          addressLine2: Apt 123
          addressLine3: Building 123
          city: San Francisco
          country: US
          state: CA
          zip: "94123"
        name: John Dae
        orgCookiePolicy: Quo autem quia.
        orgDescription: ACME Inc.
        orgFavIconURL: http://gaylord.biz/clare
        orgLogoURL: http://sauer.biz/hilda.jones
        orgName: ACME
        orgPrivacyPolicy: Odit aliquid sunt.
        orgSupportEmail: support@example.com
        orgTermsOfUse: Alias sed qui aut excepturi.
        orgURL: something.acme
      properties:
        address:
          $ref: '#/components/schemas/Address'
        name:
          description: The name of the user
          example: John Dae
          type: string
        orgCookiePolicy:
          description: The cookie policy for the org that this user owns in an HTML
            format
          example: Et ad error voluptatem optio ratione.
          type: string
        orgDescription:
          description: The description of the org that this user owns
          example: ACME Inc.
          type: string
        orgFavIconURL:
          description: The favicon of the org that this user owns
          example: http://satterfieldprice.com/ulices_graham
          format: uri
          type: string
        orgLogoURL:
          description: The logo of the org that this user owns
          example: http://cole.biz/kristoffer
          format: uri
          type: string
        orgName:
          description: The org name that this user owns
          example: ACME
          type: string
        orgPrivacyPolicy:
          description: The privacy policy for the org that this user owns in an HTML
            format
          example: Quam architecto error veritatis suscipit sapiente.
          type: string
        orgSupportEmail:
          description: The support email of the org that this user owns
          example: support@example.com
          type: string
        orgTermsOfUse:
          description: The terms of use for the org that this user owns in an HTML
            format
          example: Nemo soluta corrupti doloremque qui corrupti repellat.
          type: string
        orgURL:
          description: The url of the org that this user owns
          example: something.acme
          type: string
      type: object
    UsagePerDimension:
      example:
        dimension: core/hours
        endTime: 2021-01-01T00:00:00.000Z
        startTime: 2021-01-01T00:00:00.000Z
        total: 0.67
      properties:
        dimension:
          description: Dimension of usage
          example: core/hours
          type: string
        endTime:
          description: End timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        startTime:
          description: Start timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        total:
          description: Total amount of usage during the period
          example: 0.67
          format: double
          type: number
      type: object
    VUnitHealthReport:
      example:
        vunits:
          vu-11111111: UNKNOWN
          vu-12345678: UP
          vu-87654321: DOWN
      properties:
        vunits:
          additionalProperties: true
          description: The health of each vunit under this service environment
          example:
            vu-11111111: UNKNOWN
            vu-12345678: UP
            vu-87654321: DOWN
          type: object
      type: object
    ValidateTokenRequest:
      example:
        email: abc@gmail.com
        token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        token:
          example: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
          minLength: 1
          type: string
      required:
      - email
      - token
      type: object
    VerifyAccountConfigRequest:
      example:
        id: ac-12345678
        token: "0"
      properties:
        id:
          description: ID of an Account Config
          example: Doloribus nisi.
          type: string
        token:
          description: JWT token used to perform authorization
          example: z
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    VerifyCustomDomainRequest:
      example:
        id: cd-12345678
        token: "87"
      properties:
        id:
          description: ID of an Custom Domain
          example: Et ad commodi ducimus.
          type: string
        token:
          description: JWT token used to perform authorization
          example: "0"
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    VerifyIdentityProviderRequest:
      example:
        id: idp-12345678
        token: "1"
      properties:
        id:
          description: ID of an Identity Provider
          example: Doloribus qui.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 5h
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    VerifyIdentityProviderResult:
      example:
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
        id: idp-12345678
        identityProviderName: Google
        name: Google for my company
        status: Ready
      properties:
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
        id:
          description: ID of an Identity Provider
          example: Suscipit amet nostrum doloremque iste quia.
          type: string
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        name:
          description: The name of the Identity Provider
          example: Google for my company
          type: string
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
      required:
      - clientId
      - id
      - identityProviderName
      - status
      type: object
    WarmPoolConfiguration:
      description: Warm pool configuration for compute nodes
      example:
        minimumNodesInPool: 1
        minimumPercentageNodesInPool: 5
      properties:
        minimumNodesInPool:
          default: 1
          description: Minimum number of compute nodes in pool
          example: 1
          format: int64
          type: integer
        minimumPercentageNodesInPool:
          default: 0
          description: Minimum percentage of compute nodes in pool
          example: 5
          format: int64
          type: integer
      type: object
    WorkflowFailure:
      example:
        eventTime: 2020-01-01T00:00:00Z
        message: Bootstrap failed for reason X
      properties:
        eventTime:
          description: The time of the event
          example: 2020-01-01T00:00:00Z
          type: string
        message:
          description: Details of the event
          example: Bootstrap failed for reason X
          type: string
      required:
      - eventTime
      - message
      type: object
    ResourceSpec_limits:
      description: The maximum amount of CPU and memory that the container can use
      example:
        cpu: "1"
        memory: 500Mi
      properties:
        cpu:
          description: The maximum amount of CPU that the container can use
          example: "1"
          type: string
        memory:
          description: The maximum amount of memory that the container can use
          example: 500Mi
          type: string
      type: object
    ResourceSpec_requests:
      description: The amount of CPU and memory that Kubernetes will guarantee for
        the container
      example:
        cpu: "0.5"
        memory: 200Mi
      properties:
        cpu:
          description: The amount of CPU that Kubernetes will guarantee for the container
          example: "0.5"
          type: string
        memory:
          description: The amount of memory that Kubernetes will guarantee for the
            container
          example: 200Mi
          type: string
      type: object
  securitySchemes:
    api_key_header_Authorization:
      description: Secures endpoints by requiring a JWT token
      scheme: bearer
      type: http
    basic_header_Authorization:
      description: Basic authentication
      scheme: basic
      type: http
