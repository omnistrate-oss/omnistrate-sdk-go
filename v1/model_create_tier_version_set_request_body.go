/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTierVersionSetRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTierVersionSetRequestBody{}

// CreateTierVersionSetRequestBody struct for CreateTierVersionSetRequestBody
type CreateTierVersionSetRequestBody struct {
	// A brief description of the product-tier version set.
	Description *string `json:"description,omitempty"`
	// The name of the product-tier version set.
	Name *string `json:"name,omitempty"`
	// The parent version of this version set.
	ParentVersion *string `json:"parentVersion,omitempty"`
	// The version-set type of the product-tier.
	Type string `json:"type"`
}

type _CreateTierVersionSetRequestBody CreateTierVersionSetRequestBody

// NewCreateTierVersionSetRequestBody instantiates a new CreateTierVersionSetRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTierVersionSetRequestBody(type_ string) *CreateTierVersionSetRequestBody {
	this := CreateTierVersionSetRequestBody{}
	this.Type = type_
	return &this
}

// NewCreateTierVersionSetRequestBodyWithDefaults instantiates a new CreateTierVersionSetRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTierVersionSetRequestBodyWithDefaults() *CreateTierVersionSetRequestBody {
	this := CreateTierVersionSetRequestBody{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateTierVersionSetRequestBody) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTierVersionSetRequestBody) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateTierVersionSetRequestBody) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateTierVersionSetRequestBody) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTierVersionSetRequestBody) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateTierVersionSetRequestBody) SetName(v string) {
	o.Name = &v
}

// GetParentVersion returns the ParentVersion field value if set, zero value otherwise.
func (o *CreateTierVersionSetRequestBody) GetParentVersion() string {
	if o == nil || IsNil(o.ParentVersion) {
		var ret string
		return ret
	}
	return *o.ParentVersion
}

// GetParentVersionOk returns a tuple with the ParentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTierVersionSetRequestBody) GetParentVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ParentVersion) {
		return nil, false
	}
	return o.ParentVersion, true
}

// SetParentVersion gets a reference to the given string and assigns it to the ParentVersion field.
func (o *CreateTierVersionSetRequestBody) SetParentVersion(v string) {
	o.ParentVersion = &v
}

// GetType returns the Type field value
func (o *CreateTierVersionSetRequestBody) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateTierVersionSetRequestBody) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateTierVersionSetRequestBody) SetType(v string) {
	o.Type = v
}

func (o CreateTierVersionSetRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTierVersionSetRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ParentVersion) {
		toSerialize["parentVersion"] = o.ParentVersion
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *CreateTierVersionSetRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTierVersionSetRequestBody := _CreateTierVersionSetRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTierVersionSetRequestBody)

	if err != nil {
		return err
	}

	*o = CreateTierVersionSetRequestBody(varCreateTierVersionSetRequestBody)

	return err
}

type NullableCreateTierVersionSetRequestBody struct {
	value *CreateTierVersionSetRequestBody
	isSet bool
}

func (v NullableCreateTierVersionSetRequestBody) Get() *CreateTierVersionSetRequestBody {
	return v.value
}

func (v *NullableCreateTierVersionSetRequestBody) Set(val *CreateTierVersionSetRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTierVersionSetRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTierVersionSetRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTierVersionSetRequestBody(val *CreateTierVersionSetRequestBody) *NullableCreateTierVersionSetRequestBody {
	return &NullableCreateTierVersionSetRequestBody{value: val, isSet: true}
}

func (v NullableCreateTierVersionSetRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTierVersionSetRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


