/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SaaSPortal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SaaSPortal{}

// SaaSPortal struct for SaaSPortal
type SaaSPortal struct {
	// The custom domain of the SaaS portal
	CustomDomain *string `json:"customDomain,omitempty"`
	// The custom domain status of the SaaS portal
	CustomDomainStatus *string `json:"customDomainStatus,omitempty"`
	// The detailed network topology of the SaaS portal
	DetailedNetworkTopology *map[string]ResourceNetworkTopologyResult `json:"detailedNetworkTopology,omitempty"`
	EmailConfig *SaaSPortalEmailConfig `json:"emailConfig,omitempty"`
	// The endpoint of the SaaS portal for this environment type
	Endpoint *string `json:"endpoint,omitempty"`
	// The environment type for the SaaS portal
	EnvironmentType string `json:"environmentType"`
	// The Google Analytics tag ID for the SaaS portal
	GoogleAnalyticsTagID *string `json:"googleAnalyticsTagID,omitempty"`
	ImageConfig *SaaSPortalImageConfig `json:"imageConfig,omitempty"`
	// The status of the SaaS portal for this environment type
	Status string `json:"status"`
}

type _SaaSPortal SaaSPortal

// NewSaaSPortal instantiates a new SaaSPortal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSaaSPortal(environmentType string, status string) *SaaSPortal {
	this := SaaSPortal{}
	this.EnvironmentType = environmentType
	this.Status = status
	return &this
}

// NewSaaSPortalWithDefaults instantiates a new SaaSPortal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSaaSPortalWithDefaults() *SaaSPortal {
	this := SaaSPortal{}
	return &this
}

// GetCustomDomain returns the CustomDomain field value if set, zero value otherwise.
func (o *SaaSPortal) GetCustomDomain() string {
	if o == nil || IsNil(o.CustomDomain) {
		var ret string
		return ret
	}
	return *o.CustomDomain
}

// GetCustomDomainOk returns a tuple with the CustomDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaSPortal) GetCustomDomainOk() (*string, bool) {
	if o == nil || IsNil(o.CustomDomain) {
		return nil, false
	}
	return o.CustomDomain, true
}

// SetCustomDomain gets a reference to the given string and assigns it to the CustomDomain field.
func (o *SaaSPortal) SetCustomDomain(v string) {
	o.CustomDomain = &v
}

// GetCustomDomainStatus returns the CustomDomainStatus field value if set, zero value otherwise.
func (o *SaaSPortal) GetCustomDomainStatus() string {
	if o == nil || IsNil(o.CustomDomainStatus) {
		var ret string
		return ret
	}
	return *o.CustomDomainStatus
}

// GetCustomDomainStatusOk returns a tuple with the CustomDomainStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaSPortal) GetCustomDomainStatusOk() (*string, bool) {
	if o == nil || IsNil(o.CustomDomainStatus) {
		return nil, false
	}
	return o.CustomDomainStatus, true
}

// SetCustomDomainStatus gets a reference to the given string and assigns it to the CustomDomainStatus field.
func (o *SaaSPortal) SetCustomDomainStatus(v string) {
	o.CustomDomainStatus = &v
}

// GetDetailedNetworkTopology returns the DetailedNetworkTopology field value if set, zero value otherwise.
func (o *SaaSPortal) GetDetailedNetworkTopology() map[string]ResourceNetworkTopologyResult {
	if o == nil || IsNil(o.DetailedNetworkTopology) {
		var ret map[string]ResourceNetworkTopologyResult
		return ret
	}
	return *o.DetailedNetworkTopology
}

// GetDetailedNetworkTopologyOk returns a tuple with the DetailedNetworkTopology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaSPortal) GetDetailedNetworkTopologyOk() (*map[string]ResourceNetworkTopologyResult, bool) {
	if o == nil || IsNil(o.DetailedNetworkTopology) {
		return nil, false
	}
	return o.DetailedNetworkTopology, true
}

// SetDetailedNetworkTopology gets a reference to the given map[string]ResourceNetworkTopologyResult and assigns it to the DetailedNetworkTopology field.
func (o *SaaSPortal) SetDetailedNetworkTopology(v map[string]ResourceNetworkTopologyResult) {
	o.DetailedNetworkTopology = &v
}

// GetEmailConfig returns the EmailConfig field value if set, zero value otherwise.
func (o *SaaSPortal) GetEmailConfig() SaaSPortalEmailConfig {
	if o == nil || IsNil(o.EmailConfig) {
		var ret SaaSPortalEmailConfig
		return ret
	}
	return *o.EmailConfig
}

// GetEmailConfigOk returns a tuple with the EmailConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaSPortal) GetEmailConfigOk() (*SaaSPortalEmailConfig, bool) {
	if o == nil || IsNil(o.EmailConfig) {
		return nil, false
	}
	return o.EmailConfig, true
}

// SetEmailConfig gets a reference to the given SaaSPortalEmailConfig and assigns it to the EmailConfig field.
func (o *SaaSPortal) SetEmailConfig(v SaaSPortalEmailConfig) {
	o.EmailConfig = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *SaaSPortal) GetEndpoint() string {
	if o == nil || IsNil(o.Endpoint) {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaSPortal) GetEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *SaaSPortal) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetEnvironmentType returns the EnvironmentType field value
func (o *SaaSPortal) GetEnvironmentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentType
}

// GetEnvironmentTypeOk returns a tuple with the EnvironmentType field value
// and a boolean to check if the value has been set.
func (o *SaaSPortal) GetEnvironmentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentType, true
}

// SetEnvironmentType sets field value
func (o *SaaSPortal) SetEnvironmentType(v string) {
	o.EnvironmentType = v
}

// GetGoogleAnalyticsTagID returns the GoogleAnalyticsTagID field value if set, zero value otherwise.
func (o *SaaSPortal) GetGoogleAnalyticsTagID() string {
	if o == nil || IsNil(o.GoogleAnalyticsTagID) {
		var ret string
		return ret
	}
	return *o.GoogleAnalyticsTagID
}

// GetGoogleAnalyticsTagIDOk returns a tuple with the GoogleAnalyticsTagID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaSPortal) GetGoogleAnalyticsTagIDOk() (*string, bool) {
	if o == nil || IsNil(o.GoogleAnalyticsTagID) {
		return nil, false
	}
	return o.GoogleAnalyticsTagID, true
}

// SetGoogleAnalyticsTagID gets a reference to the given string and assigns it to the GoogleAnalyticsTagID field.
func (o *SaaSPortal) SetGoogleAnalyticsTagID(v string) {
	o.GoogleAnalyticsTagID = &v
}

// GetImageConfig returns the ImageConfig field value if set, zero value otherwise.
func (o *SaaSPortal) GetImageConfig() SaaSPortalImageConfig {
	if o == nil || IsNil(o.ImageConfig) {
		var ret SaaSPortalImageConfig
		return ret
	}
	return *o.ImageConfig
}

// GetImageConfigOk returns a tuple with the ImageConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaaSPortal) GetImageConfigOk() (*SaaSPortalImageConfig, bool) {
	if o == nil || IsNil(o.ImageConfig) {
		return nil, false
	}
	return o.ImageConfig, true
}

// SetImageConfig gets a reference to the given SaaSPortalImageConfig and assigns it to the ImageConfig field.
func (o *SaaSPortal) SetImageConfig(v SaaSPortalImageConfig) {
	o.ImageConfig = &v
}

// GetStatus returns the Status field value
func (o *SaaSPortal) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SaaSPortal) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SaaSPortal) SetStatus(v string) {
	o.Status = v
}

func (o SaaSPortal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SaaSPortal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomDomain) {
		toSerialize["customDomain"] = o.CustomDomain
	}
	if !IsNil(o.CustomDomainStatus) {
		toSerialize["customDomainStatus"] = o.CustomDomainStatus
	}
	if !IsNil(o.DetailedNetworkTopology) {
		toSerialize["detailedNetworkTopology"] = o.DetailedNetworkTopology
	}
	if !IsNil(o.EmailConfig) {
		toSerialize["emailConfig"] = o.EmailConfig
	}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	toSerialize["environmentType"] = o.EnvironmentType
	if !IsNil(o.GoogleAnalyticsTagID) {
		toSerialize["googleAnalyticsTagID"] = o.GoogleAnalyticsTagID
	}
	if !IsNil(o.ImageConfig) {
		toSerialize["imageConfig"] = o.ImageConfig
	}
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *SaaSPortal) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"environmentType",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSaaSPortal := _SaaSPortal{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSaaSPortal)

	if err != nil {
		return err
	}

	*o = SaaSPortal(varSaaSPortal)

	return err
}

type NullableSaaSPortal struct {
	value *SaaSPortal
	isSet bool
}

func (v NullableSaaSPortal) Get() *SaaSPortal {
	return v.value
}

func (v *NullableSaaSPortal) Set(val *SaaSPortal) {
	v.value = val
	v.isSet = true
}

func (v NullableSaaSPortal) IsSet() bool {
	return v.isSet
}

func (v *NullableSaaSPortal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSaaSPortal(val *SaaSPortal) *NullableSaaSPortal {
	return &NullableSaaSPortal{value: val, isSet: true}
}

func (v NullableSaaSPortal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSaaSPortal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


