/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the UpdateProductTierBillingPlanRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProductTierBillingPlanRequest2{}

// UpdateProductTierBillingPlanRequest2 struct for UpdateProductTierBillingPlanRequest2
type UpdateProductTierBillingPlanRequest2 struct {
	// Allow creates when payment not configured
	AllowCreatesWhenPaymentNotConfigured *bool `json:"allowCreatesWhenPaymentNotConfigured,omitempty"`
	// Maximum number of instances
	MaxNumberofInstances *int64 `json:"maxNumberofInstances,omitempty"`
	// Plan name
	PlanName *string `json:"planName,omitempty"`
	// Pricing in dollars.
	Pricing interface{} `json:"pricing,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateProductTierBillingPlanRequest2 UpdateProductTierBillingPlanRequest2

// NewUpdateProductTierBillingPlanRequest2 instantiates a new UpdateProductTierBillingPlanRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProductTierBillingPlanRequest2() *UpdateProductTierBillingPlanRequest2 {
	this := UpdateProductTierBillingPlanRequest2{}
	return &this
}

// NewUpdateProductTierBillingPlanRequest2WithDefaults instantiates a new UpdateProductTierBillingPlanRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProductTierBillingPlanRequest2WithDefaults() *UpdateProductTierBillingPlanRequest2 {
	this := UpdateProductTierBillingPlanRequest2{}
	return &this
}

// GetAllowCreatesWhenPaymentNotConfigured returns the AllowCreatesWhenPaymentNotConfigured field value if set, zero value otherwise.
func (o *UpdateProductTierBillingPlanRequest2) GetAllowCreatesWhenPaymentNotConfigured() bool {
	if o == nil || IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		var ret bool
		return ret
	}
	return *o.AllowCreatesWhenPaymentNotConfigured
}

// GetAllowCreatesWhenPaymentNotConfiguredOk returns a tuple with the AllowCreatesWhenPaymentNotConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProductTierBillingPlanRequest2) GetAllowCreatesWhenPaymentNotConfiguredOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		return nil, false
	}
	return o.AllowCreatesWhenPaymentNotConfigured, true
}

// SetAllowCreatesWhenPaymentNotConfigured gets a reference to the given bool and assigns it to the AllowCreatesWhenPaymentNotConfigured field.
func (o *UpdateProductTierBillingPlanRequest2) SetAllowCreatesWhenPaymentNotConfigured(v bool) {
	o.AllowCreatesWhenPaymentNotConfigured = &v
}

// GetMaxNumberofInstances returns the MaxNumberofInstances field value if set, zero value otherwise.
func (o *UpdateProductTierBillingPlanRequest2) GetMaxNumberofInstances() int64 {
	if o == nil || IsNil(o.MaxNumberofInstances) {
		var ret int64
		return ret
	}
	return *o.MaxNumberofInstances
}

// GetMaxNumberofInstancesOk returns a tuple with the MaxNumberofInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProductTierBillingPlanRequest2) GetMaxNumberofInstancesOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxNumberofInstances) {
		return nil, false
	}
	return o.MaxNumberofInstances, true
}

// SetMaxNumberofInstances gets a reference to the given int64 and assigns it to the MaxNumberofInstances field.
func (o *UpdateProductTierBillingPlanRequest2) SetMaxNumberofInstances(v int64) {
	o.MaxNumberofInstances = &v
}

// GetPlanName returns the PlanName field value if set, zero value otherwise.
func (o *UpdateProductTierBillingPlanRequest2) GetPlanName() string {
	if o == nil || IsNil(o.PlanName) {
		var ret string
		return ret
	}
	return *o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProductTierBillingPlanRequest2) GetPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.PlanName) {
		return nil, false
	}
	return o.PlanName, true
}

// SetPlanName gets a reference to the given string and assigns it to the PlanName field.
func (o *UpdateProductTierBillingPlanRequest2) SetPlanName(v string) {
	o.PlanName = &v
}

// GetPricing returns the Pricing field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProductTierBillingPlanRequest2) GetPricing() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Pricing
}

// GetPricingOk returns a tuple with the Pricing field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProductTierBillingPlanRequest2) GetPricingOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Pricing) {
		return nil, false
	}
	return &o.Pricing, true
}

// SetPricing gets a reference to the given interface{} and assigns it to the Pricing field.
func (o *UpdateProductTierBillingPlanRequest2) SetPricing(v interface{}) {
	o.Pricing = v
}

func (o UpdateProductTierBillingPlanRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProductTierBillingPlanRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		toSerialize["allowCreatesWhenPaymentNotConfigured"] = o.AllowCreatesWhenPaymentNotConfigured
	}
	if !IsNil(o.MaxNumberofInstances) {
		toSerialize["maxNumberofInstances"] = o.MaxNumberofInstances
	}
	if !IsNil(o.PlanName) {
		toSerialize["planName"] = o.PlanName
	}
	if o.Pricing != nil {
		toSerialize["pricing"] = o.Pricing
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateProductTierBillingPlanRequest2) UnmarshalJSON(data []byte) (err error) {
	varUpdateProductTierBillingPlanRequest2 := _UpdateProductTierBillingPlanRequest2{}

	err = json.Unmarshal(data, &varUpdateProductTierBillingPlanRequest2)

	if err != nil {
		return err
	}

	*o = UpdateProductTierBillingPlanRequest2(varUpdateProductTierBillingPlanRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "allowCreatesWhenPaymentNotConfigured")
		delete(additionalProperties, "maxNumberofInstances")
		delete(additionalProperties, "planName")
		delete(additionalProperties, "pricing")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateProductTierBillingPlanRequest2 struct {
	value *UpdateProductTierBillingPlanRequest2
	isSet bool
}

func (v NullableUpdateProductTierBillingPlanRequest2) Get() *UpdateProductTierBillingPlanRequest2 {
	return v.value
}

func (v *NullableUpdateProductTierBillingPlanRequest2) Set(val *UpdateProductTierBillingPlanRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProductTierBillingPlanRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProductTierBillingPlanRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProductTierBillingPlanRequest2(val *UpdateProductTierBillingPlanRequest2) *NullableUpdateProductTierBillingPlanRequest2 {
	return &NullableUpdateProductTierBillingPlanRequest2{value: val, isSet: true}
}

func (v NullableUpdateProductTierBillingPlanRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProductTierBillingPlanRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


