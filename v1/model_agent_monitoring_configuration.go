/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the AgentMonitoringConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentMonitoringConfiguration{}

// AgentMonitoringConfiguration struct for AgentMonitoringConfiguration
type AgentMonitoringConfiguration struct {
	// Enable monitoring for the agent
	Enabled *bool `json:"enabled,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AgentMonitoringConfiguration AgentMonitoringConfiguration

// NewAgentMonitoringConfiguration instantiates a new AgentMonitoringConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentMonitoringConfiguration() *AgentMonitoringConfiguration {
	this := AgentMonitoringConfiguration{}
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// NewAgentMonitoringConfigurationWithDefaults instantiates a new AgentMonitoringConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentMonitoringConfigurationWithDefaults() *AgentMonitoringConfiguration {
	this := AgentMonitoringConfiguration{}
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *AgentMonitoringConfiguration) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AgentMonitoringConfiguration) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *AgentMonitoringConfiguration) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o AgentMonitoringConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentMonitoringConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AgentMonitoringConfiguration) UnmarshalJSON(data []byte) (err error) {
	varAgentMonitoringConfiguration := _AgentMonitoringConfiguration{}

	err = json.Unmarshal(data, &varAgentMonitoringConfiguration)

	if err != nil {
		return err
	}

	*o = AgentMonitoringConfiguration(varAgentMonitoringConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enabled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAgentMonitoringConfiguration struct {
	value *AgentMonitoringConfiguration
	isSet bool
}

func (v NullableAgentMonitoringConfiguration) Get() *AgentMonitoringConfiguration {
	return v.value
}

func (v *NullableAgentMonitoringConfiguration) Set(val *AgentMonitoringConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentMonitoringConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentMonitoringConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentMonitoringConfiguration(val *AgentMonitoringConfiguration) *NullableAgentMonitoringConfiguration {
	return &NullableAgentMonitoringConfiguration{value: val, isSet: true}
}

func (v NullableAgentMonitoringConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentMonitoringConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


