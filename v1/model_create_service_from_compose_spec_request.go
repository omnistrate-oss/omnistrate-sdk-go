/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateServiceFromComposeSpecRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateServiceFromComposeSpecRequest{}

// CreateServiceFromComposeSpecRequest struct for CreateServiceFromComposeSpecRequest
type CreateServiceFromComposeSpecRequest struct {
	// A brief description of the service
	Description string `json:"description"`
	// Base64 encoded Compose Spec YAML in docker compose format
	FileContent string `json:"fileContent"`
	// MIME type of file format
	FileFormat string `json:"fileFormat"`
	// Name of compose spec YAML file that is uploaded
	FileName string `json:"fileName"`
	// Name of the Service
	Name string `json:"name"`
	// The logo for the service
	ServiceLogoURL *string `json:"serviceLogoURL,omitempty"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _CreateServiceFromComposeSpecRequest CreateServiceFromComposeSpecRequest

// NewCreateServiceFromComposeSpecRequest instantiates a new CreateServiceFromComposeSpecRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateServiceFromComposeSpecRequest(description string, fileContent string, fileFormat string, fileName string, name string, token string) *CreateServiceFromComposeSpecRequest {
	this := CreateServiceFromComposeSpecRequest{}
	this.Description = description
	this.FileContent = fileContent
	this.FileFormat = fileFormat
	this.FileName = fileName
	this.Name = name
	this.Token = token
	return &this
}

// NewCreateServiceFromComposeSpecRequestWithDefaults instantiates a new CreateServiceFromComposeSpecRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateServiceFromComposeSpecRequestWithDefaults() *CreateServiceFromComposeSpecRequest {
	this := CreateServiceFromComposeSpecRequest{}
	return &this
}

// GetDescription returns the Description field value
func (o *CreateServiceFromComposeSpecRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateServiceFromComposeSpecRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateServiceFromComposeSpecRequest) SetDescription(v string) {
	o.Description = v
}

// GetFileContent returns the FileContent field value
func (o *CreateServiceFromComposeSpecRequest) GetFileContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileContent
}

// GetFileContentOk returns a tuple with the FileContent field value
// and a boolean to check if the value has been set.
func (o *CreateServiceFromComposeSpecRequest) GetFileContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileContent, true
}

// SetFileContent sets field value
func (o *CreateServiceFromComposeSpecRequest) SetFileContent(v string) {
	o.FileContent = v
}

// GetFileFormat returns the FileFormat field value
func (o *CreateServiceFromComposeSpecRequest) GetFileFormat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileFormat
}

// GetFileFormatOk returns a tuple with the FileFormat field value
// and a boolean to check if the value has been set.
func (o *CreateServiceFromComposeSpecRequest) GetFileFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileFormat, true
}

// SetFileFormat sets field value
func (o *CreateServiceFromComposeSpecRequest) SetFileFormat(v string) {
	o.FileFormat = v
}

// GetFileName returns the FileName field value
func (o *CreateServiceFromComposeSpecRequest) GetFileName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value
// and a boolean to check if the value has been set.
func (o *CreateServiceFromComposeSpecRequest) GetFileNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileName, true
}

// SetFileName sets field value
func (o *CreateServiceFromComposeSpecRequest) SetFileName(v string) {
	o.FileName = v
}

// GetName returns the Name field value
func (o *CreateServiceFromComposeSpecRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateServiceFromComposeSpecRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateServiceFromComposeSpecRequest) SetName(v string) {
	o.Name = v
}

// GetServiceLogoURL returns the ServiceLogoURL field value if set, zero value otherwise.
func (o *CreateServiceFromComposeSpecRequest) GetServiceLogoURL() string {
	if o == nil || IsNil(o.ServiceLogoURL) {
		var ret string
		return ret
	}
	return *o.ServiceLogoURL
}

// GetServiceLogoURLOk returns a tuple with the ServiceLogoURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServiceFromComposeSpecRequest) GetServiceLogoURLOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceLogoURL) {
		return nil, false
	}
	return o.ServiceLogoURL, true
}

// SetServiceLogoURL gets a reference to the given string and assigns it to the ServiceLogoURL field.
func (o *CreateServiceFromComposeSpecRequest) SetServiceLogoURL(v string) {
	o.ServiceLogoURL = &v
}

// GetToken returns the Token field value
func (o *CreateServiceFromComposeSpecRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *CreateServiceFromComposeSpecRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *CreateServiceFromComposeSpecRequest) SetToken(v string) {
	o.Token = v
}

func (o CreateServiceFromComposeSpecRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateServiceFromComposeSpecRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["fileContent"] = o.FileContent
	toSerialize["fileFormat"] = o.FileFormat
	toSerialize["fileName"] = o.FileName
	toSerialize["name"] = o.Name
	if !IsNil(o.ServiceLogoURL) {
		toSerialize["serviceLogoURL"] = o.ServiceLogoURL
	}
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateServiceFromComposeSpecRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"fileContent",
		"fileFormat",
		"fileName",
		"name",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateServiceFromComposeSpecRequest := _CreateServiceFromComposeSpecRequest{}

	err = json.Unmarshal(data, &varCreateServiceFromComposeSpecRequest)

	if err != nil {
		return err
	}

	*o = CreateServiceFromComposeSpecRequest(varCreateServiceFromComposeSpecRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "fileContent")
		delete(additionalProperties, "fileFormat")
		delete(additionalProperties, "fileName")
		delete(additionalProperties, "name")
		delete(additionalProperties, "serviceLogoURL")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateServiceFromComposeSpecRequest struct {
	value *CreateServiceFromComposeSpecRequest
	isSet bool
}

func (v NullableCreateServiceFromComposeSpecRequest) Get() *CreateServiceFromComposeSpecRequest {
	return v.value
}

func (v *NullableCreateServiceFromComposeSpecRequest) Set(val *CreateServiceFromComposeSpecRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateServiceFromComposeSpecRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateServiceFromComposeSpecRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateServiceFromComposeSpecRequest(val *CreateServiceFromComposeSpecRequest) *NullableCreateServiceFromComposeSpecRequest {
	return &NullableCreateServiceFromComposeSpecRequest{value: val, isSet: true}
}

func (v NullableCreateServiceFromComposeSpecRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateServiceFromComposeSpecRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


