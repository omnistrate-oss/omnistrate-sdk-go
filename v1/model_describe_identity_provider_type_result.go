/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the DescribeIdentityProviderTypeResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribeIdentityProviderTypeResult{}

// DescribeIdentityProviderTypeResult struct for DescribeIdentityProviderTypeResult
type DescribeIdentityProviderTypeResult struct {
	// Whether the Identity Provider supports custom endpoints
	SupportCustomEndpoints bool `json:"SupportCustomEndpoints"`
	// Whether the Identity Provider supports custom scopes
	SupportCustomScopes bool `json:"SupportCustomScopes"`
	// The name of the identity provider
	IdentityProviderName string `json:"identityProviderName"`
	AdditionalProperties map[string]interface{}
}

type _DescribeIdentityProviderTypeResult DescribeIdentityProviderTypeResult

// NewDescribeIdentityProviderTypeResult instantiates a new DescribeIdentityProviderTypeResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeIdentityProviderTypeResult(supportCustomEndpoints bool, supportCustomScopes bool, identityProviderName string) *DescribeIdentityProviderTypeResult {
	this := DescribeIdentityProviderTypeResult{}
	this.SupportCustomEndpoints = supportCustomEndpoints
	this.SupportCustomScopes = supportCustomScopes
	this.IdentityProviderName = identityProviderName
	return &this
}

// NewDescribeIdentityProviderTypeResultWithDefaults instantiates a new DescribeIdentityProviderTypeResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeIdentityProviderTypeResultWithDefaults() *DescribeIdentityProviderTypeResult {
	this := DescribeIdentityProviderTypeResult{}
	return &this
}

// GetSupportCustomEndpoints returns the SupportCustomEndpoints field value
func (o *DescribeIdentityProviderTypeResult) GetSupportCustomEndpoints() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SupportCustomEndpoints
}

// GetSupportCustomEndpointsOk returns a tuple with the SupportCustomEndpoints field value
// and a boolean to check if the value has been set.
func (o *DescribeIdentityProviderTypeResult) GetSupportCustomEndpointsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SupportCustomEndpoints, true
}

// SetSupportCustomEndpoints sets field value
func (o *DescribeIdentityProviderTypeResult) SetSupportCustomEndpoints(v bool) {
	o.SupportCustomEndpoints = v
}

// GetSupportCustomScopes returns the SupportCustomScopes field value
func (o *DescribeIdentityProviderTypeResult) GetSupportCustomScopes() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SupportCustomScopes
}

// GetSupportCustomScopesOk returns a tuple with the SupportCustomScopes field value
// and a boolean to check if the value has been set.
func (o *DescribeIdentityProviderTypeResult) GetSupportCustomScopesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SupportCustomScopes, true
}

// SetSupportCustomScopes sets field value
func (o *DescribeIdentityProviderTypeResult) SetSupportCustomScopes(v bool) {
	o.SupportCustomScopes = v
}

// GetIdentityProviderName returns the IdentityProviderName field value
func (o *DescribeIdentityProviderTypeResult) GetIdentityProviderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentityProviderName
}

// GetIdentityProviderNameOk returns a tuple with the IdentityProviderName field value
// and a boolean to check if the value has been set.
func (o *DescribeIdentityProviderTypeResult) GetIdentityProviderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentityProviderName, true
}

// SetIdentityProviderName sets field value
func (o *DescribeIdentityProviderTypeResult) SetIdentityProviderName(v string) {
	o.IdentityProviderName = v
}

func (o DescribeIdentityProviderTypeResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeIdentityProviderTypeResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["SupportCustomEndpoints"] = o.SupportCustomEndpoints
	toSerialize["SupportCustomScopes"] = o.SupportCustomScopes
	toSerialize["identityProviderName"] = o.IdentityProviderName

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DescribeIdentityProviderTypeResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"SupportCustomEndpoints",
		"SupportCustomScopes",
		"identityProviderName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeIdentityProviderTypeResult := _DescribeIdentityProviderTypeResult{}

	err = json.Unmarshal(data, &varDescribeIdentityProviderTypeResult)

	if err != nil {
		return err
	}

	*o = DescribeIdentityProviderTypeResult(varDescribeIdentityProviderTypeResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "SupportCustomEndpoints")
		delete(additionalProperties, "SupportCustomScopes")
		delete(additionalProperties, "identityProviderName")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDescribeIdentityProviderTypeResult struct {
	value *DescribeIdentityProviderTypeResult
	isSet bool
}

func (v NullableDescribeIdentityProviderTypeResult) Get() *DescribeIdentityProviderTypeResult {
	return v.value
}

func (v *NullableDescribeIdentityProviderTypeResult) Set(val *DescribeIdentityProviderTypeResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeIdentityProviderTypeResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeIdentityProviderTypeResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeIdentityProviderTypeResult(val *DescribeIdentityProviderTypeResult) *NullableDescribeIdentityProviderTypeResult {
	return &NullableDescribeIdentityProviderTypeResult{value: val, isSet: true}
}

func (v NullableDescribeIdentityProviderTypeResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeIdentityProviderTypeResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

