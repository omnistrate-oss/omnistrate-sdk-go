/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the RenderIdentityProvidersResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RenderIdentityProvidersResult{}

// RenderIdentityProvidersResult struct for RenderIdentityProvidersResult
type RenderIdentityProvidersResult struct {
	// The list of Identity Providers
	IdentityProviders []RenderedIdentityProviderResult `json:"identityProviders,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RenderIdentityProvidersResult RenderIdentityProvidersResult

// NewRenderIdentityProvidersResult instantiates a new RenderIdentityProvidersResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenderIdentityProvidersResult() *RenderIdentityProvidersResult {
	this := RenderIdentityProvidersResult{}
	return &this
}

// NewRenderIdentityProvidersResultWithDefaults instantiates a new RenderIdentityProvidersResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenderIdentityProvidersResultWithDefaults() *RenderIdentityProvidersResult {
	this := RenderIdentityProvidersResult{}
	return &this
}

// GetIdentityProviders returns the IdentityProviders field value if set, zero value otherwise.
func (o *RenderIdentityProvidersResult) GetIdentityProviders() []RenderedIdentityProviderResult {
	if o == nil || IsNil(o.IdentityProviders) {
		var ret []RenderedIdentityProviderResult
		return ret
	}
	return o.IdentityProviders
}

// GetIdentityProvidersOk returns a tuple with the IdentityProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderIdentityProvidersResult) GetIdentityProvidersOk() ([]RenderedIdentityProviderResult, bool) {
	if o == nil || IsNil(o.IdentityProviders) {
		return nil, false
	}
	return o.IdentityProviders, true
}

// SetIdentityProviders gets a reference to the given []RenderedIdentityProviderResult and assigns it to the IdentityProviders field.
func (o *RenderIdentityProvidersResult) SetIdentityProviders(v []RenderedIdentityProviderResult) {
	o.IdentityProviders = v
}

func (o RenderIdentityProvidersResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RenderIdentityProvidersResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IdentityProviders) {
		toSerialize["identityProviders"] = o.IdentityProviders
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RenderIdentityProvidersResult) UnmarshalJSON(data []byte) (err error) {
	varRenderIdentityProvidersResult := _RenderIdentityProvidersResult{}

	err = json.Unmarshal(data, &varRenderIdentityProvidersResult)

	if err != nil {
		return err
	}

	*o = RenderIdentityProvidersResult(varRenderIdentityProvidersResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "identityProviders")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRenderIdentityProvidersResult struct {
	value *RenderIdentityProvidersResult
	isSet bool
}

func (v NullableRenderIdentityProvidersResult) Get() *RenderIdentityProvidersResult {
	return v.value
}

func (v *NullableRenderIdentityProvidersResult) Set(val *RenderIdentityProvidersResult) {
	v.value = val
	v.isSet = true
}

func (v NullableRenderIdentityProvidersResult) IsSet() bool {
	return v.isSet
}

func (v *NullableRenderIdentityProvidersResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenderIdentityProvidersResult(val *RenderIdentityProvidersResult) *NullableRenderIdentityProvidersResult {
	return &NullableRenderIdentityProvidersResult{value: val, isSet: true}
}

func (v NullableRenderIdentityProvidersResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenderIdentityProvidersResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


