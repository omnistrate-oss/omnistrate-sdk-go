/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the ContainerImagesRegistryCopyConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainerImagesRegistryCopyConfiguration{}

// ContainerImagesRegistryCopyConfiguration struct for ContainerImagesRegistryCopyConfiguration
type ContainerImagesRegistryCopyConfiguration struct {
	// The list of container images to copy from source to target
	Images []ContainerImage `json:"images"`
	PullSource ContainerImagesRegistry `json:"pullSource"`
	PushTarget ContainerImagesRegistry `json:"pushTarget"`
	AdditionalProperties map[string]interface{}
}

type _ContainerImagesRegistryCopyConfiguration ContainerImagesRegistryCopyConfiguration

// NewContainerImagesRegistryCopyConfiguration instantiates a new ContainerImagesRegistryCopyConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerImagesRegistryCopyConfiguration(images []ContainerImage, pullSource ContainerImagesRegistry, pushTarget ContainerImagesRegistry) *ContainerImagesRegistryCopyConfiguration {
	this := ContainerImagesRegistryCopyConfiguration{}
	this.Images = images
	this.PullSource = pullSource
	this.PushTarget = pushTarget
	return &this
}

// NewContainerImagesRegistryCopyConfigurationWithDefaults instantiates a new ContainerImagesRegistryCopyConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerImagesRegistryCopyConfigurationWithDefaults() *ContainerImagesRegistryCopyConfiguration {
	this := ContainerImagesRegistryCopyConfiguration{}
	return &this
}

// GetImages returns the Images field value
func (o *ContainerImagesRegistryCopyConfiguration) GetImages() []ContainerImage {
	if o == nil {
		var ret []ContainerImage
		return ret
	}

	return o.Images
}

// GetImagesOk returns a tuple with the Images field value
// and a boolean to check if the value has been set.
func (o *ContainerImagesRegistryCopyConfiguration) GetImagesOk() ([]ContainerImage, bool) {
	if o == nil {
		return nil, false
	}
	return o.Images, true
}

// SetImages sets field value
func (o *ContainerImagesRegistryCopyConfiguration) SetImages(v []ContainerImage) {
	o.Images = v
}

// GetPullSource returns the PullSource field value
func (o *ContainerImagesRegistryCopyConfiguration) GetPullSource() ContainerImagesRegistry {
	if o == nil {
		var ret ContainerImagesRegistry
		return ret
	}

	return o.PullSource
}

// GetPullSourceOk returns a tuple with the PullSource field value
// and a boolean to check if the value has been set.
func (o *ContainerImagesRegistryCopyConfiguration) GetPullSourceOk() (*ContainerImagesRegistry, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PullSource, true
}

// SetPullSource sets field value
func (o *ContainerImagesRegistryCopyConfiguration) SetPullSource(v ContainerImagesRegistry) {
	o.PullSource = v
}

// GetPushTarget returns the PushTarget field value
func (o *ContainerImagesRegistryCopyConfiguration) GetPushTarget() ContainerImagesRegistry {
	if o == nil {
		var ret ContainerImagesRegistry
		return ret
	}

	return o.PushTarget
}

// GetPushTargetOk returns a tuple with the PushTarget field value
// and a boolean to check if the value has been set.
func (o *ContainerImagesRegistryCopyConfiguration) GetPushTargetOk() (*ContainerImagesRegistry, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PushTarget, true
}

// SetPushTarget sets field value
func (o *ContainerImagesRegistryCopyConfiguration) SetPushTarget(v ContainerImagesRegistry) {
	o.PushTarget = v
}

func (o ContainerImagesRegistryCopyConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainerImagesRegistryCopyConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["images"] = o.Images
	toSerialize["pullSource"] = o.PullSource
	toSerialize["pushTarget"] = o.PushTarget

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ContainerImagesRegistryCopyConfiguration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"images",
		"pullSource",
		"pushTarget",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varContainerImagesRegistryCopyConfiguration := _ContainerImagesRegistryCopyConfiguration{}

	err = json.Unmarshal(data, &varContainerImagesRegistryCopyConfiguration)

	if err != nil {
		return err
	}

	*o = ContainerImagesRegistryCopyConfiguration(varContainerImagesRegistryCopyConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "images")
		delete(additionalProperties, "pullSource")
		delete(additionalProperties, "pushTarget")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableContainerImagesRegistryCopyConfiguration struct {
	value *ContainerImagesRegistryCopyConfiguration
	isSet bool
}

func (v NullableContainerImagesRegistryCopyConfiguration) Get() *ContainerImagesRegistryCopyConfiguration {
	return v.value
}

func (v *NullableContainerImagesRegistryCopyConfiguration) Set(val *ContainerImagesRegistryCopyConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerImagesRegistryCopyConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerImagesRegistryCopyConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerImagesRegistryCopyConfiguration(val *ContainerImagesRegistryCopyConfiguration) *NullableContainerImagesRegistryCopyConfiguration {
	return &NullableContainerImagesRegistryCopyConfiguration{value: val, isSet: true}
}

func (v NullableContainerImagesRegistryCopyConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerImagesRegistryCopyConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


