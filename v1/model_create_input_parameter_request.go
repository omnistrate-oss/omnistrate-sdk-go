/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateInputParameterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateInputParameterRequest{}

// CreateInputParameterRequest struct for CreateInputParameterRequest
type CreateInputParameterRequest struct {
	// Default value to use for an optional input parameter represented as a string
	DefaultValue *string `json:"defaultValue,omitempty"`
	// ID of a resource
	DependentResourceId *string `json:"dependentResourceId,omitempty"`
	// A brief description of the input parameter
	Description string `json:"description"`
	// Marks the input parameter to be selectable from a list of values
	HasOptions *bool `json:"hasOptions,omitempty"`
	// Marks the input parameter as a list of values
	IsList *bool `json:"isList,omitempty"`
	// Key of the input parameter
	Key string `json:"key" validate:"regexp=^[a-zA-Z][a-zA-Z0-9_]*$"`
	// A map for labeled options. The key is the label and the value is the option. When the option is selected, the label will be displayed to the end customer. Specify either options or labeledOptions when defining the input parameter.
	LabeledOptions *map[string]string `json:"labeledOptions,omitempty"`
	Limits *Limits `json:"limits,omitempty"`
	// Marks the input parameter as immutable
	Modifiable bool `json:"modifiable"`
	// External name for the input parameter
	Name string `json:"name"`
	// A list of options to restrict the value of the input parameter to (represented as a string)
	Options []string `json:"options,omitempty"`
	// Enforces the input parameter as a required parameter
	Required bool `json:"required"`
	// ID of a resource
	ResourceId string `json:"resourceId"`
	// ID of a Service
	ServiceId string `json:"serviceId"`
	// Index for parameter ordering in the SaaS portal
	TabIndex *int64 `json:"tabIndex,omitempty"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	// Type of the variable encoding the value
	Type string `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _CreateInputParameterRequest CreateInputParameterRequest

// NewCreateInputParameterRequest instantiates a new CreateInputParameterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInputParameterRequest(description string, key string, modifiable bool, name string, required bool, resourceId string, serviceId string, token string, type_ string) *CreateInputParameterRequest {
	this := CreateInputParameterRequest{}
	this.Description = description
	var hasOptions bool = false
	this.HasOptions = &hasOptions
	var isList bool = false
	this.IsList = &isList
	this.Key = key
	this.Modifiable = modifiable
	this.Name = name
	this.Required = required
	this.ResourceId = resourceId
	this.ServiceId = serviceId
	var tabIndex int64 = 0
	this.TabIndex = &tabIndex
	this.Token = token
	this.Type = type_
	return &this
}

// NewCreateInputParameterRequestWithDefaults instantiates a new CreateInputParameterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInputParameterRequestWithDefaults() *CreateInputParameterRequest {
	this := CreateInputParameterRequest{}
	var hasOptions bool = false
	this.HasOptions = &hasOptions
	var isList bool = false
	this.IsList = &isList
	var tabIndex int64 = 0
	this.TabIndex = &tabIndex
	return &this
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *CreateInputParameterRequest) GetDefaultValue() string {
	if o == nil || IsNil(o.DefaultValue) {
		var ret string
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInputParameterRequest) GetDefaultValueOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultValue) {
		return nil, false
	}
	return o.DefaultValue, true
}

// SetDefaultValue gets a reference to the given string and assigns it to the DefaultValue field.
func (o *CreateInputParameterRequest) SetDefaultValue(v string) {
	o.DefaultValue = &v
}

// GetDependentResourceId returns the DependentResourceId field value if set, zero value otherwise.
func (o *CreateInputParameterRequest) GetDependentResourceId() string {
	if o == nil || IsNil(o.DependentResourceId) {
		var ret string
		return ret
	}
	return *o.DependentResourceId
}

// GetDependentResourceIdOk returns a tuple with the DependentResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInputParameterRequest) GetDependentResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.DependentResourceId) {
		return nil, false
	}
	return o.DependentResourceId, true
}

// SetDependentResourceId gets a reference to the given string and assigns it to the DependentResourceId field.
func (o *CreateInputParameterRequest) SetDependentResourceId(v string) {
	o.DependentResourceId = &v
}

// GetDescription returns the Description field value
func (o *CreateInputParameterRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateInputParameterRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateInputParameterRequest) SetDescription(v string) {
	o.Description = v
}

// GetHasOptions returns the HasOptions field value if set, zero value otherwise.
func (o *CreateInputParameterRequest) GetHasOptions() bool {
	if o == nil || IsNil(o.HasOptions) {
		var ret bool
		return ret
	}
	return *o.HasOptions
}

// GetHasOptionsOk returns a tuple with the HasOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInputParameterRequest) GetHasOptionsOk() (*bool, bool) {
	if o == nil || IsNil(o.HasOptions) {
		return nil, false
	}
	return o.HasOptions, true
}

// SetHasOptions gets a reference to the given bool and assigns it to the HasOptions field.
func (o *CreateInputParameterRequest) SetHasOptions(v bool) {
	o.HasOptions = &v
}

// GetIsList returns the IsList field value if set, zero value otherwise.
func (o *CreateInputParameterRequest) GetIsList() bool {
	if o == nil || IsNil(o.IsList) {
		var ret bool
		return ret
	}
	return *o.IsList
}

// GetIsListOk returns a tuple with the IsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInputParameterRequest) GetIsListOk() (*bool, bool) {
	if o == nil || IsNil(o.IsList) {
		return nil, false
	}
	return o.IsList, true
}

// SetIsList gets a reference to the given bool and assigns it to the IsList field.
func (o *CreateInputParameterRequest) SetIsList(v bool) {
	o.IsList = &v
}

// GetKey returns the Key field value
func (o *CreateInputParameterRequest) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *CreateInputParameterRequest) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *CreateInputParameterRequest) SetKey(v string) {
	o.Key = v
}

// GetLabeledOptions returns the LabeledOptions field value if set, zero value otherwise.
func (o *CreateInputParameterRequest) GetLabeledOptions() map[string]string {
	if o == nil || IsNil(o.LabeledOptions) {
		var ret map[string]string
		return ret
	}
	return *o.LabeledOptions
}

// GetLabeledOptionsOk returns a tuple with the LabeledOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInputParameterRequest) GetLabeledOptionsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.LabeledOptions) {
		return nil, false
	}
	return o.LabeledOptions, true
}

// SetLabeledOptions gets a reference to the given map[string]string and assigns it to the LabeledOptions field.
func (o *CreateInputParameterRequest) SetLabeledOptions(v map[string]string) {
	o.LabeledOptions = &v
}

// GetLimits returns the Limits field value if set, zero value otherwise.
func (o *CreateInputParameterRequest) GetLimits() Limits {
	if o == nil || IsNil(o.Limits) {
		var ret Limits
		return ret
	}
	return *o.Limits
}

// GetLimitsOk returns a tuple with the Limits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInputParameterRequest) GetLimitsOk() (*Limits, bool) {
	if o == nil || IsNil(o.Limits) {
		return nil, false
	}
	return o.Limits, true
}

// SetLimits gets a reference to the given Limits and assigns it to the Limits field.
func (o *CreateInputParameterRequest) SetLimits(v Limits) {
	o.Limits = &v
}

// GetModifiable returns the Modifiable field value
func (o *CreateInputParameterRequest) GetModifiable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Modifiable
}

// GetModifiableOk returns a tuple with the Modifiable field value
// and a boolean to check if the value has been set.
func (o *CreateInputParameterRequest) GetModifiableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Modifiable, true
}

// SetModifiable sets field value
func (o *CreateInputParameterRequest) SetModifiable(v bool) {
	o.Modifiable = v
}

// GetName returns the Name field value
func (o *CreateInputParameterRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateInputParameterRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateInputParameterRequest) SetName(v string) {
	o.Name = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *CreateInputParameterRequest) GetOptions() []string {
	if o == nil || IsNil(o.Options) {
		var ret []string
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInputParameterRequest) GetOptionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// SetOptions gets a reference to the given []string and assigns it to the Options field.
func (o *CreateInputParameterRequest) SetOptions(v []string) {
	o.Options = v
}

// GetRequired returns the Required field value
func (o *CreateInputParameterRequest) GetRequired() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Required
}

// GetRequiredOk returns a tuple with the Required field value
// and a boolean to check if the value has been set.
func (o *CreateInputParameterRequest) GetRequiredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Required, true
}

// SetRequired sets field value
func (o *CreateInputParameterRequest) SetRequired(v bool) {
	o.Required = v
}

// GetResourceId returns the ResourceId field value
func (o *CreateInputParameterRequest) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *CreateInputParameterRequest) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *CreateInputParameterRequest) SetResourceId(v string) {
	o.ResourceId = v
}

// GetServiceId returns the ServiceId field value
func (o *CreateInputParameterRequest) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *CreateInputParameterRequest) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *CreateInputParameterRequest) SetServiceId(v string) {
	o.ServiceId = v
}

// GetTabIndex returns the TabIndex field value if set, zero value otherwise.
func (o *CreateInputParameterRequest) GetTabIndex() int64 {
	if o == nil || IsNil(o.TabIndex) {
		var ret int64
		return ret
	}
	return *o.TabIndex
}

// GetTabIndexOk returns a tuple with the TabIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInputParameterRequest) GetTabIndexOk() (*int64, bool) {
	if o == nil || IsNil(o.TabIndex) {
		return nil, false
	}
	return o.TabIndex, true
}

// SetTabIndex gets a reference to the given int64 and assigns it to the TabIndex field.
func (o *CreateInputParameterRequest) SetTabIndex(v int64) {
	o.TabIndex = &v
}

// GetToken returns the Token field value
func (o *CreateInputParameterRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *CreateInputParameterRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *CreateInputParameterRequest) SetToken(v string) {
	o.Token = v
}

// GetType returns the Type field value
func (o *CreateInputParameterRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateInputParameterRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateInputParameterRequest) SetType(v string) {
	o.Type = v
}

func (o CreateInputParameterRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateInputParameterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultValue) {
		toSerialize["defaultValue"] = o.DefaultValue
	}
	if !IsNil(o.DependentResourceId) {
		toSerialize["dependentResourceId"] = o.DependentResourceId
	}
	toSerialize["description"] = o.Description
	if !IsNil(o.HasOptions) {
		toSerialize["hasOptions"] = o.HasOptions
	}
	if !IsNil(o.IsList) {
		toSerialize["isList"] = o.IsList
	}
	toSerialize["key"] = o.Key
	if !IsNil(o.LabeledOptions) {
		toSerialize["labeledOptions"] = o.LabeledOptions
	}
	if !IsNil(o.Limits) {
		toSerialize["limits"] = o.Limits
	}
	toSerialize["modifiable"] = o.Modifiable
	toSerialize["name"] = o.Name
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	toSerialize["required"] = o.Required
	toSerialize["resourceId"] = o.ResourceId
	toSerialize["serviceId"] = o.ServiceId
	if !IsNil(o.TabIndex) {
		toSerialize["tabIndex"] = o.TabIndex
	}
	toSerialize["token"] = o.Token
	toSerialize["type"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateInputParameterRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"key",
		"modifiable",
		"name",
		"required",
		"resourceId",
		"serviceId",
		"token",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateInputParameterRequest := _CreateInputParameterRequest{}

	err = json.Unmarshal(data, &varCreateInputParameterRequest)

	if err != nil {
		return err
	}

	*o = CreateInputParameterRequest(varCreateInputParameterRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "defaultValue")
		delete(additionalProperties, "dependentResourceId")
		delete(additionalProperties, "description")
		delete(additionalProperties, "hasOptions")
		delete(additionalProperties, "isList")
		delete(additionalProperties, "key")
		delete(additionalProperties, "labeledOptions")
		delete(additionalProperties, "limits")
		delete(additionalProperties, "modifiable")
		delete(additionalProperties, "name")
		delete(additionalProperties, "options")
		delete(additionalProperties, "required")
		delete(additionalProperties, "resourceId")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "tabIndex")
		delete(additionalProperties, "token")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateInputParameterRequest struct {
	value *CreateInputParameterRequest
	isSet bool
}

func (v NullableCreateInputParameterRequest) Get() *CreateInputParameterRequest {
	return v.value
}

func (v *NullableCreateInputParameterRequest) Set(val *CreateInputParameterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInputParameterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInputParameterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInputParameterRequest(val *CreateInputParameterRequest) *NullableCreateInputParameterRequest {
	return &NullableCreateInputParameterRequest{value: val, isSet: true}
}

func (v NullableCreateInputParameterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInputParameterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


