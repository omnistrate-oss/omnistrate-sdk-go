/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the UpdateInputParameterRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInputParameterRequestBody{}

// UpdateInputParameterRequestBody struct for UpdateInputParameterRequestBody
type UpdateInputParameterRequestBody struct {
	// Default value to use for an optional input parameter represented as a string
	DefaultValue *string `json:"defaultValue,omitempty"`
	// A brief description of the input parameter
	Description *string `json:"description,omitempty"`
	// Marks the input parameter to be selectable from a list of values
	HasOptions *bool `json:"hasOptions,omitempty"`
	// A map for labeled options. The key is the label and the value is the option. When the option is selected, the label will be displayed to the end customer. Specify either options or labeledOptions when defining the input parameter.
	LabeledOptions *map[string]string `json:"labeledOptions,omitempty"`
	Limits *Limits `json:"limits,omitempty"`
	// Marks the input parameter as immutable
	Modifiable *bool `json:"modifiable,omitempty"`
	// External name for the input parameter
	Name *string `json:"name,omitempty"`
	// A list of options to restrict the value of the input parameter to (represented as a string)
	Options []string `json:"options,omitempty"`
	// Enforces the input parameter as a required parameter
	Required *bool `json:"required,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateInputParameterRequestBody UpdateInputParameterRequestBody

// NewUpdateInputParameterRequestBody instantiates a new UpdateInputParameterRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInputParameterRequestBody() *UpdateInputParameterRequestBody {
	this := UpdateInputParameterRequestBody{}
	return &this
}

// NewUpdateInputParameterRequestBodyWithDefaults instantiates a new UpdateInputParameterRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInputParameterRequestBodyWithDefaults() *UpdateInputParameterRequestBody {
	this := UpdateInputParameterRequestBody{}
	return &this
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *UpdateInputParameterRequestBody) GetDefaultValue() string {
	if o == nil || IsNil(o.DefaultValue) {
		var ret string
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInputParameterRequestBody) GetDefaultValueOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultValue) {
		return nil, false
	}
	return o.DefaultValue, true
}

// SetDefaultValue gets a reference to the given string and assigns it to the DefaultValue field.
func (o *UpdateInputParameterRequestBody) SetDefaultValue(v string) {
	o.DefaultValue = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateInputParameterRequestBody) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInputParameterRequestBody) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateInputParameterRequestBody) SetDescription(v string) {
	o.Description = &v
}

// GetHasOptions returns the HasOptions field value if set, zero value otherwise.
func (o *UpdateInputParameterRequestBody) GetHasOptions() bool {
	if o == nil || IsNil(o.HasOptions) {
		var ret bool
		return ret
	}
	return *o.HasOptions
}

// GetHasOptionsOk returns a tuple with the HasOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInputParameterRequestBody) GetHasOptionsOk() (*bool, bool) {
	if o == nil || IsNil(o.HasOptions) {
		return nil, false
	}
	return o.HasOptions, true
}

// SetHasOptions gets a reference to the given bool and assigns it to the HasOptions field.
func (o *UpdateInputParameterRequestBody) SetHasOptions(v bool) {
	o.HasOptions = &v
}

// GetLabeledOptions returns the LabeledOptions field value if set, zero value otherwise.
func (o *UpdateInputParameterRequestBody) GetLabeledOptions() map[string]string {
	if o == nil || IsNil(o.LabeledOptions) {
		var ret map[string]string
		return ret
	}
	return *o.LabeledOptions
}

// GetLabeledOptionsOk returns a tuple with the LabeledOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInputParameterRequestBody) GetLabeledOptionsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.LabeledOptions) {
		return nil, false
	}
	return o.LabeledOptions, true
}

// SetLabeledOptions gets a reference to the given map[string]string and assigns it to the LabeledOptions field.
func (o *UpdateInputParameterRequestBody) SetLabeledOptions(v map[string]string) {
	o.LabeledOptions = &v
}

// GetLimits returns the Limits field value if set, zero value otherwise.
func (o *UpdateInputParameterRequestBody) GetLimits() Limits {
	if o == nil || IsNil(o.Limits) {
		var ret Limits
		return ret
	}
	return *o.Limits
}

// GetLimitsOk returns a tuple with the Limits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInputParameterRequestBody) GetLimitsOk() (*Limits, bool) {
	if o == nil || IsNil(o.Limits) {
		return nil, false
	}
	return o.Limits, true
}

// SetLimits gets a reference to the given Limits and assigns it to the Limits field.
func (o *UpdateInputParameterRequestBody) SetLimits(v Limits) {
	o.Limits = &v
}

// GetModifiable returns the Modifiable field value if set, zero value otherwise.
func (o *UpdateInputParameterRequestBody) GetModifiable() bool {
	if o == nil || IsNil(o.Modifiable) {
		var ret bool
		return ret
	}
	return *o.Modifiable
}

// GetModifiableOk returns a tuple with the Modifiable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInputParameterRequestBody) GetModifiableOk() (*bool, bool) {
	if o == nil || IsNil(o.Modifiable) {
		return nil, false
	}
	return o.Modifiable, true
}

// SetModifiable gets a reference to the given bool and assigns it to the Modifiable field.
func (o *UpdateInputParameterRequestBody) SetModifiable(v bool) {
	o.Modifiable = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateInputParameterRequestBody) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInputParameterRequestBody) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateInputParameterRequestBody) SetName(v string) {
	o.Name = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *UpdateInputParameterRequestBody) GetOptions() []string {
	if o == nil || IsNil(o.Options) {
		var ret []string
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInputParameterRequestBody) GetOptionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// SetOptions gets a reference to the given []string and assigns it to the Options field.
func (o *UpdateInputParameterRequestBody) SetOptions(v []string) {
	o.Options = v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *UpdateInputParameterRequestBody) GetRequired() bool {
	if o == nil || IsNil(o.Required) {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInputParameterRequestBody) GetRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *UpdateInputParameterRequestBody) SetRequired(v bool) {
	o.Required = &v
}

func (o UpdateInputParameterRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateInputParameterRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultValue) {
		toSerialize["defaultValue"] = o.DefaultValue
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.HasOptions) {
		toSerialize["hasOptions"] = o.HasOptions
	}
	if !IsNil(o.LabeledOptions) {
		toSerialize["labeledOptions"] = o.LabeledOptions
	}
	if !IsNil(o.Limits) {
		toSerialize["limits"] = o.Limits
	}
	if !IsNil(o.Modifiable) {
		toSerialize["modifiable"] = o.Modifiable
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !IsNil(o.Required) {
		toSerialize["required"] = o.Required
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateInputParameterRequestBody) UnmarshalJSON(data []byte) (err error) {
	varUpdateInputParameterRequestBody := _UpdateInputParameterRequestBody{}

	err = json.Unmarshal(data, &varUpdateInputParameterRequestBody)

	if err != nil {
		return err
	}

	*o = UpdateInputParameterRequestBody(varUpdateInputParameterRequestBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "defaultValue")
		delete(additionalProperties, "description")
		delete(additionalProperties, "hasOptions")
		delete(additionalProperties, "labeledOptions")
		delete(additionalProperties, "limits")
		delete(additionalProperties, "modifiable")
		delete(additionalProperties, "name")
		delete(additionalProperties, "options")
		delete(additionalProperties, "required")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateInputParameterRequestBody struct {
	value *UpdateInputParameterRequestBody
	isSet bool
}

func (v NullableUpdateInputParameterRequestBody) Get() *UpdateInputParameterRequestBody {
	return v.value
}

func (v *NullableUpdateInputParameterRequestBody) Set(val *UpdateInputParameterRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInputParameterRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInputParameterRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInputParameterRequestBody(val *UpdateInputParameterRequestBody) *NullableUpdateInputParameterRequestBody {
	return &NullableUpdateInputParameterRequestBody{value: val, isSet: true}
}

func (v NullableUpdateInputParameterRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInputParameterRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


