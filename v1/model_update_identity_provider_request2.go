/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the UpdateIdentityProviderRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateIdentityProviderRequest2{}

// UpdateIdentityProviderRequest2 struct for UpdateIdentityProviderRequest2
type UpdateIdentityProviderRequest2 struct {
	// The Client ID of the Identity Provider
	ClientId *string `json:"clientId,omitempty"`
	// The Client Secret of the Identity Provider
	ClientSecret *string `json:"clientSecret,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateIdentityProviderRequest2 UpdateIdentityProviderRequest2

// NewUpdateIdentityProviderRequest2 instantiates a new UpdateIdentityProviderRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateIdentityProviderRequest2() *UpdateIdentityProviderRequest2 {
	this := UpdateIdentityProviderRequest2{}
	return &this
}

// NewUpdateIdentityProviderRequest2WithDefaults instantiates a new UpdateIdentityProviderRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateIdentityProviderRequest2WithDefaults() *UpdateIdentityProviderRequest2 {
	this := UpdateIdentityProviderRequest2{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *UpdateIdentityProviderRequest2) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIdentityProviderRequest2) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *UpdateIdentityProviderRequest2) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *UpdateIdentityProviderRequest2) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateIdentityProviderRequest2) GetClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *UpdateIdentityProviderRequest2) SetClientSecret(v string) {
	o.ClientSecret = &v
}

func (o UpdateIdentityProviderRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateIdentityProviderRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.ClientSecret) {
		toSerialize["clientSecret"] = o.ClientSecret
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateIdentityProviderRequest2) UnmarshalJSON(data []byte) (err error) {
	varUpdateIdentityProviderRequest2 := _UpdateIdentityProviderRequest2{}

	err = json.Unmarshal(data, &varUpdateIdentityProviderRequest2)

	if err != nil {
		return err
	}

	*o = UpdateIdentityProviderRequest2(varUpdateIdentityProviderRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "clientId")
		delete(additionalProperties, "clientSecret")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateIdentityProviderRequest2 struct {
	value *UpdateIdentityProviderRequest2
	isSet bool
}

func (v NullableUpdateIdentityProviderRequest2) Get() *UpdateIdentityProviderRequest2 {
	return v.value
}

func (v *NullableUpdateIdentityProviderRequest2) Set(val *UpdateIdentityProviderRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateIdentityProviderRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateIdentityProviderRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateIdentityProviderRequest2(val *UpdateIdentityProviderRequest2) *NullableUpdateIdentityProviderRequest2 {
	return &NullableUpdateIdentityProviderRequest2{value: val, isSet: true}
}

func (v NullableUpdateIdentityProviderRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateIdentityProviderRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


