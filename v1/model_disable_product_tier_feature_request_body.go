/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DisableProductTierFeatureRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DisableProductTierFeatureRequestBody{}

// DisableProductTierFeatureRequestBody struct for DisableProductTierFeatureRequestBody
type DisableProductTierFeatureRequestBody struct {
	// Feature to disable
	Feature string `json:"feature"`
	// Feature scope
	Scope *string `json:"scope,omitempty"`
}

type _DisableProductTierFeatureRequestBody DisableProductTierFeatureRequestBody

// NewDisableProductTierFeatureRequestBody instantiates a new DisableProductTierFeatureRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDisableProductTierFeatureRequestBody(feature string) *DisableProductTierFeatureRequestBody {
	this := DisableProductTierFeatureRequestBody{}
	this.Feature = feature
	return &this
}

// NewDisableProductTierFeatureRequestBodyWithDefaults instantiates a new DisableProductTierFeatureRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDisableProductTierFeatureRequestBodyWithDefaults() *DisableProductTierFeatureRequestBody {
	this := DisableProductTierFeatureRequestBody{}
	return &this
}

// GetFeature returns the Feature field value
func (o *DisableProductTierFeatureRequestBody) GetFeature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Feature
}

// GetFeatureOk returns a tuple with the Feature field value
// and a boolean to check if the value has been set.
func (o *DisableProductTierFeatureRequestBody) GetFeatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Feature, true
}

// SetFeature sets field value
func (o *DisableProductTierFeatureRequestBody) SetFeature(v string) {
	o.Feature = v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *DisableProductTierFeatureRequestBody) GetScope() string {
	if o == nil || IsNil(o.Scope) {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisableProductTierFeatureRequestBody) GetScopeOk() (*string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *DisableProductTierFeatureRequestBody) SetScope(v string) {
	o.Scope = &v
}

func (o DisableProductTierFeatureRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DisableProductTierFeatureRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["feature"] = o.Feature
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	return toSerialize, nil
}

func (o *DisableProductTierFeatureRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"feature",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDisableProductTierFeatureRequestBody := _DisableProductTierFeatureRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDisableProductTierFeatureRequestBody)

	if err != nil {
		return err
	}

	*o = DisableProductTierFeatureRequestBody(varDisableProductTierFeatureRequestBody)

	return err
}

type NullableDisableProductTierFeatureRequestBody struct {
	value *DisableProductTierFeatureRequestBody
	isSet bool
}

func (v NullableDisableProductTierFeatureRequestBody) Get() *DisableProductTierFeatureRequestBody {
	return v.value
}

func (v *NullableDisableProductTierFeatureRequestBody) Set(val *DisableProductTierFeatureRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableDisableProductTierFeatureRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableDisableProductTierFeatureRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDisableProductTierFeatureRequestBody(val *DisableProductTierFeatureRequestBody) *NullableDisableProductTierFeatureRequestBody {
	return &NullableDisableProductTierFeatureRequestBody{value: val, isSet: true}
}

func (v NullableDisableProductTierFeatureRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDisableProductTierFeatureRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


