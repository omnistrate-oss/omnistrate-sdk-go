/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the DescribeAccountConfigByOCITenancyIDRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribeAccountConfigByOCITenancyIDRequest{}

// DescribeAccountConfigByOCITenancyIDRequest struct for DescribeAccountConfigByOCITenancyIDRequest
type DescribeAccountConfigByOCITenancyIDRequest struct {
	// The Tenancy OCID for Oracle Cloud Infrastructure
	OciTenancyID string `json:"ociTenancyID"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _DescribeAccountConfigByOCITenancyIDRequest DescribeAccountConfigByOCITenancyIDRequest

// NewDescribeAccountConfigByOCITenancyIDRequest instantiates a new DescribeAccountConfigByOCITenancyIDRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeAccountConfigByOCITenancyIDRequest(ociTenancyID string, token string) *DescribeAccountConfigByOCITenancyIDRequest {
	this := DescribeAccountConfigByOCITenancyIDRequest{}
	this.OciTenancyID = ociTenancyID
	this.Token = token
	return &this
}

// NewDescribeAccountConfigByOCITenancyIDRequestWithDefaults instantiates a new DescribeAccountConfigByOCITenancyIDRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeAccountConfigByOCITenancyIDRequestWithDefaults() *DescribeAccountConfigByOCITenancyIDRequest {
	this := DescribeAccountConfigByOCITenancyIDRequest{}
	return &this
}

// GetOciTenancyID returns the OciTenancyID field value
func (o *DescribeAccountConfigByOCITenancyIDRequest) GetOciTenancyID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OciTenancyID
}

// GetOciTenancyIDOk returns a tuple with the OciTenancyID field value
// and a boolean to check if the value has been set.
func (o *DescribeAccountConfigByOCITenancyIDRequest) GetOciTenancyIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OciTenancyID, true
}

// SetOciTenancyID sets field value
func (o *DescribeAccountConfigByOCITenancyIDRequest) SetOciTenancyID(v string) {
	o.OciTenancyID = v
}

// GetToken returns the Token field value
func (o *DescribeAccountConfigByOCITenancyIDRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *DescribeAccountConfigByOCITenancyIDRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *DescribeAccountConfigByOCITenancyIDRequest) SetToken(v string) {
	o.Token = v
}

func (o DescribeAccountConfigByOCITenancyIDRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeAccountConfigByOCITenancyIDRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ociTenancyID"] = o.OciTenancyID
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DescribeAccountConfigByOCITenancyIDRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ociTenancyID",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeAccountConfigByOCITenancyIDRequest := _DescribeAccountConfigByOCITenancyIDRequest{}

	err = json.Unmarshal(data, &varDescribeAccountConfigByOCITenancyIDRequest)

	if err != nil {
		return err
	}

	*o = DescribeAccountConfigByOCITenancyIDRequest(varDescribeAccountConfigByOCITenancyIDRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ociTenancyID")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDescribeAccountConfigByOCITenancyIDRequest struct {
	value *DescribeAccountConfigByOCITenancyIDRequest
	isSet bool
}

func (v NullableDescribeAccountConfigByOCITenancyIDRequest) Get() *DescribeAccountConfigByOCITenancyIDRequest {
	return v.value
}

func (v *NullableDescribeAccountConfigByOCITenancyIDRequest) Set(val *DescribeAccountConfigByOCITenancyIDRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeAccountConfigByOCITenancyIDRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeAccountConfigByOCITenancyIDRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeAccountConfigByOCITenancyIDRequest(val *DescribeAccountConfigByOCITenancyIDRequest) *NullableDescribeAccountConfigByOCITenancyIDRequest {
	return &NullableDescribeAccountConfigByOCITenancyIDRequest{value: val, isSet: true}
}

func (v NullableDescribeAccountConfigByOCITenancyIDRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeAccountConfigByOCITenancyIDRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

