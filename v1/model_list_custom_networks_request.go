/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the ListCustomNetworksRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListCustomNetworksRequest{}

// ListCustomNetworksRequest struct for ListCustomNetworksRequest
type ListCustomNetworksRequest struct {
	// Name of the Infra Provider
	CloudProviderName *string `json:"cloudProviderName,omitempty"`
	// The region of the cloud provider that the instance is running in.
	CloudProviderRegion *string `json:"cloudProviderRegion,omitempty"`
	// Flag indicating whether to return only custom networks, or to include default and imported networks as well
	CustomNetworksOnly *bool `json:"customNetworksOnly,omitempty"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _ListCustomNetworksRequest ListCustomNetworksRequest

// NewListCustomNetworksRequest instantiates a new ListCustomNetworksRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListCustomNetworksRequest(token string) *ListCustomNetworksRequest {
	this := ListCustomNetworksRequest{}
	this.Token = token
	return &this
}

// NewListCustomNetworksRequestWithDefaults instantiates a new ListCustomNetworksRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListCustomNetworksRequestWithDefaults() *ListCustomNetworksRequest {
	this := ListCustomNetworksRequest{}
	return &this
}

// GetCloudProviderName returns the CloudProviderName field value if set, zero value otherwise.
func (o *ListCustomNetworksRequest) GetCloudProviderName() string {
	if o == nil || IsNil(o.CloudProviderName) {
		var ret string
		return ret
	}
	return *o.CloudProviderName
}

// GetCloudProviderNameOk returns a tuple with the CloudProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCustomNetworksRequest) GetCloudProviderNameOk() (*string, bool) {
	if o == nil || IsNil(o.CloudProviderName) {
		return nil, false
	}
	return o.CloudProviderName, true
}

// SetCloudProviderName gets a reference to the given string and assigns it to the CloudProviderName field.
func (o *ListCustomNetworksRequest) SetCloudProviderName(v string) {
	o.CloudProviderName = &v
}

// GetCloudProviderRegion returns the CloudProviderRegion field value if set, zero value otherwise.
func (o *ListCustomNetworksRequest) GetCloudProviderRegion() string {
	if o == nil || IsNil(o.CloudProviderRegion) {
		var ret string
		return ret
	}
	return *o.CloudProviderRegion
}

// GetCloudProviderRegionOk returns a tuple with the CloudProviderRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCustomNetworksRequest) GetCloudProviderRegionOk() (*string, bool) {
	if o == nil || IsNil(o.CloudProviderRegion) {
		return nil, false
	}
	return o.CloudProviderRegion, true
}

// SetCloudProviderRegion gets a reference to the given string and assigns it to the CloudProviderRegion field.
func (o *ListCustomNetworksRequest) SetCloudProviderRegion(v string) {
	o.CloudProviderRegion = &v
}

// GetCustomNetworksOnly returns the CustomNetworksOnly field value if set, zero value otherwise.
func (o *ListCustomNetworksRequest) GetCustomNetworksOnly() bool {
	if o == nil || IsNil(o.CustomNetworksOnly) {
		var ret bool
		return ret
	}
	return *o.CustomNetworksOnly
}

// GetCustomNetworksOnlyOk returns a tuple with the CustomNetworksOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCustomNetworksRequest) GetCustomNetworksOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomNetworksOnly) {
		return nil, false
	}
	return o.CustomNetworksOnly, true
}

// SetCustomNetworksOnly gets a reference to the given bool and assigns it to the CustomNetworksOnly field.
func (o *ListCustomNetworksRequest) SetCustomNetworksOnly(v bool) {
	o.CustomNetworksOnly = &v
}

// GetToken returns the Token field value
func (o *ListCustomNetworksRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *ListCustomNetworksRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *ListCustomNetworksRequest) SetToken(v string) {
	o.Token = v
}

func (o ListCustomNetworksRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListCustomNetworksRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudProviderName) {
		toSerialize["cloudProviderName"] = o.CloudProviderName
	}
	if !IsNil(o.CloudProviderRegion) {
		toSerialize["cloudProviderRegion"] = o.CloudProviderRegion
	}
	if !IsNil(o.CustomNetworksOnly) {
		toSerialize["customNetworksOnly"] = o.CustomNetworksOnly
	}
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListCustomNetworksRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListCustomNetworksRequest := _ListCustomNetworksRequest{}

	err = json.Unmarshal(data, &varListCustomNetworksRequest)

	if err != nil {
		return err
	}

	*o = ListCustomNetworksRequest(varListCustomNetworksRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cloudProviderName")
		delete(additionalProperties, "cloudProviderRegion")
		delete(additionalProperties, "customNetworksOnly")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListCustomNetworksRequest struct {
	value *ListCustomNetworksRequest
	isSet bool
}

func (v NullableListCustomNetworksRequest) Get() *ListCustomNetworksRequest {
	return v.value
}

func (v *NullableListCustomNetworksRequest) Set(val *ListCustomNetworksRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListCustomNetworksRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListCustomNetworksRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListCustomNetworksRequest(val *ListCustomNetworksRequest) *NullableListCustomNetworksRequest {
	return &NullableListCustomNetworksRequest{value: val, isSet: true}
}

func (v NullableListCustomNetworksRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListCustomNetworksRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

