/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the CustomerLoginWithIdentityProviderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerLoginWithIdentityProviderRequest{}

// CustomerLoginWithIdentityProviderRequest struct for CustomerLoginWithIdentityProviderRequest
type CustomerLoginWithIdentityProviderRequest struct {
	// The authorization code from the Identity Provider
	AuthorizationCode string `json:"authorizationCode"`
	CompanyDescription *string `json:"companyDescription,omitempty"`
	CompanyUrl *string `json:"companyUrl,omitempty"`
	// The type of service environment
	EnvironmentType *string `json:"environmentType,omitempty"`
	// The name of the identity provider
	IdentityProviderName string `json:"identityProviderName"`
	// Email address that the user was invited with
	InvitedEmail *string `json:"invitedEmail,omitempty"`
	LegalCompanyName *string `json:"legalCompanyName,omitempty"`
	// The redirect URI used to get the authorization code
	RedirectUri *string `json:"redirectUri,omitempty"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _CustomerLoginWithIdentityProviderRequest CustomerLoginWithIdentityProviderRequest

// NewCustomerLoginWithIdentityProviderRequest instantiates a new CustomerLoginWithIdentityProviderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerLoginWithIdentityProviderRequest(authorizationCode string, identityProviderName string, token string) *CustomerLoginWithIdentityProviderRequest {
	this := CustomerLoginWithIdentityProviderRequest{}
	this.AuthorizationCode = authorizationCode
	this.IdentityProviderName = identityProviderName
	this.Token = token
	return &this
}

// NewCustomerLoginWithIdentityProviderRequestWithDefaults instantiates a new CustomerLoginWithIdentityProviderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerLoginWithIdentityProviderRequestWithDefaults() *CustomerLoginWithIdentityProviderRequest {
	this := CustomerLoginWithIdentityProviderRequest{}
	return &this
}

// GetAuthorizationCode returns the AuthorizationCode field value
func (o *CustomerLoginWithIdentityProviderRequest) GetAuthorizationCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthorizationCode
}

// GetAuthorizationCodeOk returns a tuple with the AuthorizationCode field value
// and a boolean to check if the value has been set.
func (o *CustomerLoginWithIdentityProviderRequest) GetAuthorizationCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthorizationCode, true
}

// SetAuthorizationCode sets field value
func (o *CustomerLoginWithIdentityProviderRequest) SetAuthorizationCode(v string) {
	o.AuthorizationCode = v
}

// GetCompanyDescription returns the CompanyDescription field value if set, zero value otherwise.
func (o *CustomerLoginWithIdentityProviderRequest) GetCompanyDescription() string {
	if o == nil || IsNil(o.CompanyDescription) {
		var ret string
		return ret
	}
	return *o.CompanyDescription
}

// GetCompanyDescriptionOk returns a tuple with the CompanyDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerLoginWithIdentityProviderRequest) GetCompanyDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyDescription) {
		return nil, false
	}
	return o.CompanyDescription, true
}

// SetCompanyDescription gets a reference to the given string and assigns it to the CompanyDescription field.
func (o *CustomerLoginWithIdentityProviderRequest) SetCompanyDescription(v string) {
	o.CompanyDescription = &v
}

// GetCompanyUrl returns the CompanyUrl field value if set, zero value otherwise.
func (o *CustomerLoginWithIdentityProviderRequest) GetCompanyUrl() string {
	if o == nil || IsNil(o.CompanyUrl) {
		var ret string
		return ret
	}
	return *o.CompanyUrl
}

// GetCompanyUrlOk returns a tuple with the CompanyUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerLoginWithIdentityProviderRequest) GetCompanyUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyUrl) {
		return nil, false
	}
	return o.CompanyUrl, true
}

// SetCompanyUrl gets a reference to the given string and assigns it to the CompanyUrl field.
func (o *CustomerLoginWithIdentityProviderRequest) SetCompanyUrl(v string) {
	o.CompanyUrl = &v
}

// GetEnvironmentType returns the EnvironmentType field value if set, zero value otherwise.
func (o *CustomerLoginWithIdentityProviderRequest) GetEnvironmentType() string {
	if o == nil || IsNil(o.EnvironmentType) {
		var ret string
		return ret
	}
	return *o.EnvironmentType
}

// GetEnvironmentTypeOk returns a tuple with the EnvironmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerLoginWithIdentityProviderRequest) GetEnvironmentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentType) {
		return nil, false
	}
	return o.EnvironmentType, true
}

// SetEnvironmentType gets a reference to the given string and assigns it to the EnvironmentType field.
func (o *CustomerLoginWithIdentityProviderRequest) SetEnvironmentType(v string) {
	o.EnvironmentType = &v
}

// GetIdentityProviderName returns the IdentityProviderName field value
func (o *CustomerLoginWithIdentityProviderRequest) GetIdentityProviderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentityProviderName
}

// GetIdentityProviderNameOk returns a tuple with the IdentityProviderName field value
// and a boolean to check if the value has been set.
func (o *CustomerLoginWithIdentityProviderRequest) GetIdentityProviderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentityProviderName, true
}

// SetIdentityProviderName sets field value
func (o *CustomerLoginWithIdentityProviderRequest) SetIdentityProviderName(v string) {
	o.IdentityProviderName = v
}

// GetInvitedEmail returns the InvitedEmail field value if set, zero value otherwise.
func (o *CustomerLoginWithIdentityProviderRequest) GetInvitedEmail() string {
	if o == nil || IsNil(o.InvitedEmail) {
		var ret string
		return ret
	}
	return *o.InvitedEmail
}

// GetInvitedEmailOk returns a tuple with the InvitedEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerLoginWithIdentityProviderRequest) GetInvitedEmailOk() (*string, bool) {
	if o == nil || IsNil(o.InvitedEmail) {
		return nil, false
	}
	return o.InvitedEmail, true
}

// SetInvitedEmail gets a reference to the given string and assigns it to the InvitedEmail field.
func (o *CustomerLoginWithIdentityProviderRequest) SetInvitedEmail(v string) {
	o.InvitedEmail = &v
}

// GetLegalCompanyName returns the LegalCompanyName field value if set, zero value otherwise.
func (o *CustomerLoginWithIdentityProviderRequest) GetLegalCompanyName() string {
	if o == nil || IsNil(o.LegalCompanyName) {
		var ret string
		return ret
	}
	return *o.LegalCompanyName
}

// GetLegalCompanyNameOk returns a tuple with the LegalCompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerLoginWithIdentityProviderRequest) GetLegalCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.LegalCompanyName) {
		return nil, false
	}
	return o.LegalCompanyName, true
}

// SetLegalCompanyName gets a reference to the given string and assigns it to the LegalCompanyName field.
func (o *CustomerLoginWithIdentityProviderRequest) SetLegalCompanyName(v string) {
	o.LegalCompanyName = &v
}

// GetRedirectUri returns the RedirectUri field value if set, zero value otherwise.
func (o *CustomerLoginWithIdentityProviderRequest) GetRedirectUri() string {
	if o == nil || IsNil(o.RedirectUri) {
		var ret string
		return ret
	}
	return *o.RedirectUri
}

// GetRedirectUriOk returns a tuple with the RedirectUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerLoginWithIdentityProviderRequest) GetRedirectUriOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectUri) {
		return nil, false
	}
	return o.RedirectUri, true
}

// SetRedirectUri gets a reference to the given string and assigns it to the RedirectUri field.
func (o *CustomerLoginWithIdentityProviderRequest) SetRedirectUri(v string) {
	o.RedirectUri = &v
}

// GetToken returns the Token field value
func (o *CustomerLoginWithIdentityProviderRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *CustomerLoginWithIdentityProviderRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *CustomerLoginWithIdentityProviderRequest) SetToken(v string) {
	o.Token = v
}

func (o CustomerLoginWithIdentityProviderRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerLoginWithIdentityProviderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["authorizationCode"] = o.AuthorizationCode
	if !IsNil(o.CompanyDescription) {
		toSerialize["companyDescription"] = o.CompanyDescription
	}
	if !IsNil(o.CompanyUrl) {
		toSerialize["companyUrl"] = o.CompanyUrl
	}
	if !IsNil(o.EnvironmentType) {
		toSerialize["environmentType"] = o.EnvironmentType
	}
	toSerialize["identityProviderName"] = o.IdentityProviderName
	if !IsNil(o.InvitedEmail) {
		toSerialize["invitedEmail"] = o.InvitedEmail
	}
	if !IsNil(o.LegalCompanyName) {
		toSerialize["legalCompanyName"] = o.LegalCompanyName
	}
	if !IsNil(o.RedirectUri) {
		toSerialize["redirectUri"] = o.RedirectUri
	}
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomerLoginWithIdentityProviderRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"authorizationCode",
		"identityProviderName",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomerLoginWithIdentityProviderRequest := _CustomerLoginWithIdentityProviderRequest{}

	err = json.Unmarshal(data, &varCustomerLoginWithIdentityProviderRequest)

	if err != nil {
		return err
	}

	*o = CustomerLoginWithIdentityProviderRequest(varCustomerLoginWithIdentityProviderRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "authorizationCode")
		delete(additionalProperties, "companyDescription")
		delete(additionalProperties, "companyUrl")
		delete(additionalProperties, "environmentType")
		delete(additionalProperties, "identityProviderName")
		delete(additionalProperties, "invitedEmail")
		delete(additionalProperties, "legalCompanyName")
		delete(additionalProperties, "redirectUri")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCustomerLoginWithIdentityProviderRequest struct {
	value *CustomerLoginWithIdentityProviderRequest
	isSet bool
}

func (v NullableCustomerLoginWithIdentityProviderRequest) Get() *CustomerLoginWithIdentityProviderRequest {
	return v.value
}

func (v *NullableCustomerLoginWithIdentityProviderRequest) Set(val *CustomerLoginWithIdentityProviderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerLoginWithIdentityProviderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerLoginWithIdentityProviderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerLoginWithIdentityProviderRequest(val *CustomerLoginWithIdentityProviderRequest) *NullableCustomerLoginWithIdentityProviderRequest {
	return &NullableCustomerLoginWithIdentityProviderRequest{value: val, isSet: true}
}

func (v NullableCustomerLoginWithIdentityProviderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerLoginWithIdentityProviderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


