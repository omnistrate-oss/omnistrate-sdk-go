/*
Omnistrate Registration API

Testing ServicesOrchestrationApiAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package v1

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/omnistrate-oss/omnistrate-sdk-go/v1"
)

func Test_v1_ServicesOrchestrationApiAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ServicesOrchestrationApiAPIService ServicesOrchestrationApiCreateServicesOrchestration", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ServicesOrchestrationApiAPI.ServicesOrchestrationApiCreateServicesOrchestration(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ServicesOrchestrationApiAPIService ServicesOrchestrationApiDeleteServicesOrchestration", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id string

		httpRes, err := apiClient.ServicesOrchestrationApiAPI.ServicesOrchestrationApiDeleteServicesOrchestration(context.Background(), id).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ServicesOrchestrationApiAPIService ServicesOrchestrationApiDescribeServicesOrchestration", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id string

		resp, httpRes, err := apiClient.ServicesOrchestrationApiAPI.ServicesOrchestrationApiDescribeServicesOrchestration(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ServicesOrchestrationApiAPIService ServicesOrchestrationApiListServicesOrchestration", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ServicesOrchestrationApiAPI.ServicesOrchestrationApiListServicesOrchestration(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ServicesOrchestrationApiAPIService ServicesOrchestrationApiModifyServicesOrchestration", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id string

		resp, httpRes, err := apiClient.ServicesOrchestrationApiAPI.ServicesOrchestrationApiModifyServicesOrchestration(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
