/*
Omnistrate Registration API

Testing SecretsApiAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package v1

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/omnistrate-oss/omnistrate-sdk-go/v1"
)

func Test_v1_SecretsApiAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test SecretsApiAPIService SecretsApiDeleteSecret", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var environmentType string
		var name string

		httpRes, err := apiClient.SecretsApiAPI.SecretsApiDeleteSecret(context.Background(), environmentType, name).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecretsApiAPIService SecretsApiGetSecret", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var environmentType string
		var name string

		resp, httpRes, err := apiClient.SecretsApiAPI.SecretsApiGetSecret(context.Background(), environmentType, name).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecretsApiAPIService SecretsApiListSecrets", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var environmentType string

		resp, httpRes, err := apiClient.SecretsApiAPI.SecretsApiListSecrets(context.Background(), environmentType).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SecretsApiAPIService SecretsApiSetSecret", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var environmentType string
		var name string

		httpRes, err := apiClient.SecretsApiAPI.SecretsApiSetSecret(context.Background(), environmentType, name).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
