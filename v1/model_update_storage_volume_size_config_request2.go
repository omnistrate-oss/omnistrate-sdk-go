/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the UpdateStorageVolumeSizeConfigRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateStorageVolumeSizeConfigRequest2{}

// UpdateStorageVolumeSizeConfigRequest2 struct for UpdateStorageVolumeSizeConfigRequest2
type UpdateStorageVolumeSizeConfigRequest2 struct {
	// The storage size (in Gi) provisioned for the configured instance storage type
	InstanceStorageSizeGi string `json:"instanceStorageSizeGi"`
	AdditionalProperties map[string]interface{}
}

type _UpdateStorageVolumeSizeConfigRequest2 UpdateStorageVolumeSizeConfigRequest2

// NewUpdateStorageVolumeSizeConfigRequest2 instantiates a new UpdateStorageVolumeSizeConfigRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateStorageVolumeSizeConfigRequest2(instanceStorageSizeGi string) *UpdateStorageVolumeSizeConfigRequest2 {
	this := UpdateStorageVolumeSizeConfigRequest2{}
	this.InstanceStorageSizeGi = instanceStorageSizeGi
	return &this
}

// NewUpdateStorageVolumeSizeConfigRequest2WithDefaults instantiates a new UpdateStorageVolumeSizeConfigRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateStorageVolumeSizeConfigRequest2WithDefaults() *UpdateStorageVolumeSizeConfigRequest2 {
	this := UpdateStorageVolumeSizeConfigRequest2{}
	return &this
}

// GetInstanceStorageSizeGi returns the InstanceStorageSizeGi field value
func (o *UpdateStorageVolumeSizeConfigRequest2) GetInstanceStorageSizeGi() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceStorageSizeGi
}

// GetInstanceStorageSizeGiOk returns a tuple with the InstanceStorageSizeGi field value
// and a boolean to check if the value has been set.
func (o *UpdateStorageVolumeSizeConfigRequest2) GetInstanceStorageSizeGiOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceStorageSizeGi, true
}

// SetInstanceStorageSizeGi sets field value
func (o *UpdateStorageVolumeSizeConfigRequest2) SetInstanceStorageSizeGi(v string) {
	o.InstanceStorageSizeGi = v
}

func (o UpdateStorageVolumeSizeConfigRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateStorageVolumeSizeConfigRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["instanceStorageSizeGi"] = o.InstanceStorageSizeGi

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateStorageVolumeSizeConfigRequest2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"instanceStorageSizeGi",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateStorageVolumeSizeConfigRequest2 := _UpdateStorageVolumeSizeConfigRequest2{}

	err = json.Unmarshal(data, &varUpdateStorageVolumeSizeConfigRequest2)

	if err != nil {
		return err
	}

	*o = UpdateStorageVolumeSizeConfigRequest2(varUpdateStorageVolumeSizeConfigRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "instanceStorageSizeGi")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateStorageVolumeSizeConfigRequest2 struct {
	value *UpdateStorageVolumeSizeConfigRequest2
	isSet bool
}

func (v NullableUpdateStorageVolumeSizeConfigRequest2) Get() *UpdateStorageVolumeSizeConfigRequest2 {
	return v.value
}

func (v *NullableUpdateStorageVolumeSizeConfigRequest2) Set(val *UpdateStorageVolumeSizeConfigRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateStorageVolumeSizeConfigRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateStorageVolumeSizeConfigRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateStorageVolumeSizeConfigRequest2(val *UpdateStorageVolumeSizeConfigRequest2) *NullableUpdateStorageVolumeSizeConfigRequest2 {
	return &NullableUpdateStorageVolumeSizeConfigRequest2{value: val, isSet: true}
}

func (v NullableUpdateStorageVolumeSizeConfigRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateStorageVolumeSizeConfigRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

