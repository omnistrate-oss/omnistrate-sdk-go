/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the OutputParameterEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutputParameterEntity{}

// OutputParameterEntity struct for OutputParameterEntity
type OutputParameterEntity struct {
	// Whether the parameter is custom
	Custom bool `json:"custom"`
	// The parameter description
	Description string `json:"description"`
	// The parameter display name
	DisplayName string `json:"displayName"`
	// Whether the parameter is a list
	IsList bool `json:"isList"`
	// The parameter key
	Key string `json:"key"`
	// The parameter type
	Type string `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _OutputParameterEntity OutputParameterEntity

// NewOutputParameterEntity instantiates a new OutputParameterEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutputParameterEntity(custom bool, description string, displayName string, isList bool, key string, type_ string) *OutputParameterEntity {
	this := OutputParameterEntity{}
	this.Custom = custom
	this.Description = description
	this.DisplayName = displayName
	this.IsList = isList
	this.Key = key
	this.Type = type_
	return &this
}

// NewOutputParameterEntityWithDefaults instantiates a new OutputParameterEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutputParameterEntityWithDefaults() *OutputParameterEntity {
	this := OutputParameterEntity{}
	return &this
}

// GetCustom returns the Custom field value
func (o *OutputParameterEntity) GetCustom() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Custom
}

// GetCustomOk returns a tuple with the Custom field value
// and a boolean to check if the value has been set.
func (o *OutputParameterEntity) GetCustomOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Custom, true
}

// SetCustom sets field value
func (o *OutputParameterEntity) SetCustom(v bool) {
	o.Custom = v
}

// GetDescription returns the Description field value
func (o *OutputParameterEntity) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *OutputParameterEntity) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *OutputParameterEntity) SetDescription(v string) {
	o.Description = v
}

// GetDisplayName returns the DisplayName field value
func (o *OutputParameterEntity) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *OutputParameterEntity) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *OutputParameterEntity) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetIsList returns the IsList field value
func (o *OutputParameterEntity) GetIsList() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsList
}

// GetIsListOk returns a tuple with the IsList field value
// and a boolean to check if the value has been set.
func (o *OutputParameterEntity) GetIsListOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsList, true
}

// SetIsList sets field value
func (o *OutputParameterEntity) SetIsList(v bool) {
	o.IsList = v
}

// GetKey returns the Key field value
func (o *OutputParameterEntity) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *OutputParameterEntity) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *OutputParameterEntity) SetKey(v string) {
	o.Key = v
}

// GetType returns the Type field value
func (o *OutputParameterEntity) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *OutputParameterEntity) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *OutputParameterEntity) SetType(v string) {
	o.Type = v
}

func (o OutputParameterEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutputParameterEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["custom"] = o.Custom
	toSerialize["description"] = o.Description
	toSerialize["displayName"] = o.DisplayName
	toSerialize["isList"] = o.IsList
	toSerialize["key"] = o.Key
	toSerialize["type"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OutputParameterEntity) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"custom",
		"description",
		"displayName",
		"isList",
		"key",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOutputParameterEntity := _OutputParameterEntity{}

	err = json.Unmarshal(data, &varOutputParameterEntity)

	if err != nil {
		return err
	}

	*o = OutputParameterEntity(varOutputParameterEntity)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "custom")
		delete(additionalProperties, "description")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "isList")
		delete(additionalProperties, "key")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOutputParameterEntity struct {
	value *OutputParameterEntity
	isSet bool
}

func (v NullableOutputParameterEntity) Get() *OutputParameterEntity {
	return v.value
}

func (v *NullableOutputParameterEntity) Set(val *OutputParameterEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableOutputParameterEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableOutputParameterEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutputParameterEntity(val *OutputParameterEntity) *NullableOutputParameterEntity {
	return &NullableOutputParameterEntity{value: val, isSet: true}
}

func (v NullableOutputParameterEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutputParameterEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

