/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the ClusterEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterEndpoint{}

// ClusterEndpoint struct for ClusterEndpoint
type ClusterEndpoint struct {
	// The endpoint
	Endpoint *string `json:"endpoint,omitempty"`
	// The heath status of a resource
	HealthStatus *string `json:"healthStatus,omitempty"`
	// The networking type for this resource
	NetworkingType *string `json:"networkingType,omitempty"`
	// The open ports
	OpenPorts []int64 `json:"openPorts,omitempty"`
	// Whether this is the primary endpoint
	Primary *bool `json:"primary,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClusterEndpoint ClusterEndpoint

// NewClusterEndpoint instantiates a new ClusterEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterEndpoint() *ClusterEndpoint {
	this := ClusterEndpoint{}
	var endpoint string = ""
	this.Endpoint = &endpoint
	var primary bool = false
	this.Primary = &primary
	return &this
}

// NewClusterEndpointWithDefaults instantiates a new ClusterEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterEndpointWithDefaults() *ClusterEndpoint {
	this := ClusterEndpoint{}
	var endpoint string = ""
	this.Endpoint = &endpoint
	var primary bool = false
	this.Primary = &primary
	return &this
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *ClusterEndpoint) GetEndpoint() string {
	if o == nil || IsNil(o.Endpoint) {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterEndpoint) GetEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *ClusterEndpoint) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetHealthStatus returns the HealthStatus field value if set, zero value otherwise.
func (o *ClusterEndpoint) GetHealthStatus() string {
	if o == nil || IsNil(o.HealthStatus) {
		var ret string
		return ret
	}
	return *o.HealthStatus
}

// GetHealthStatusOk returns a tuple with the HealthStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterEndpoint) GetHealthStatusOk() (*string, bool) {
	if o == nil || IsNil(o.HealthStatus) {
		return nil, false
	}
	return o.HealthStatus, true
}

// SetHealthStatus gets a reference to the given string and assigns it to the HealthStatus field.
func (o *ClusterEndpoint) SetHealthStatus(v string) {
	o.HealthStatus = &v
}

// GetNetworkingType returns the NetworkingType field value if set, zero value otherwise.
func (o *ClusterEndpoint) GetNetworkingType() string {
	if o == nil || IsNil(o.NetworkingType) {
		var ret string
		return ret
	}
	return *o.NetworkingType
}

// GetNetworkingTypeOk returns a tuple with the NetworkingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterEndpoint) GetNetworkingTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkingType) {
		return nil, false
	}
	return o.NetworkingType, true
}

// SetNetworkingType gets a reference to the given string and assigns it to the NetworkingType field.
func (o *ClusterEndpoint) SetNetworkingType(v string) {
	o.NetworkingType = &v
}

// GetOpenPorts returns the OpenPorts field value if set, zero value otherwise.
func (o *ClusterEndpoint) GetOpenPorts() []int64 {
	if o == nil || IsNil(o.OpenPorts) {
		var ret []int64
		return ret
	}
	return o.OpenPorts
}

// GetOpenPortsOk returns a tuple with the OpenPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterEndpoint) GetOpenPortsOk() ([]int64, bool) {
	if o == nil || IsNil(o.OpenPorts) {
		return nil, false
	}
	return o.OpenPorts, true
}

// SetOpenPorts gets a reference to the given []int64 and assigns it to the OpenPorts field.
func (o *ClusterEndpoint) SetOpenPorts(v []int64) {
	o.OpenPorts = v
}

// GetPrimary returns the Primary field value if set, zero value otherwise.
func (o *ClusterEndpoint) GetPrimary() bool {
	if o == nil || IsNil(o.Primary) {
		var ret bool
		return ret
	}
	return *o.Primary
}

// GetPrimaryOk returns a tuple with the Primary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterEndpoint) GetPrimaryOk() (*bool, bool) {
	if o == nil || IsNil(o.Primary) {
		return nil, false
	}
	return o.Primary, true
}

// SetPrimary gets a reference to the given bool and assigns it to the Primary field.
func (o *ClusterEndpoint) SetPrimary(v bool) {
	o.Primary = &v
}

func (o ClusterEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	if !IsNil(o.HealthStatus) {
		toSerialize["healthStatus"] = o.HealthStatus
	}
	if !IsNil(o.NetworkingType) {
		toSerialize["networkingType"] = o.NetworkingType
	}
	if !IsNil(o.OpenPorts) {
		toSerialize["openPorts"] = o.OpenPorts
	}
	if !IsNil(o.Primary) {
		toSerialize["primary"] = o.Primary
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClusterEndpoint) UnmarshalJSON(data []byte) (err error) {
	varClusterEndpoint := _ClusterEndpoint{}

	err = json.Unmarshal(data, &varClusterEndpoint)

	if err != nil {
		return err
	}

	*o = ClusterEndpoint(varClusterEndpoint)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "endpoint")
		delete(additionalProperties, "healthStatus")
		delete(additionalProperties, "networkingType")
		delete(additionalProperties, "openPorts")
		delete(additionalProperties, "primary")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClusterEndpoint struct {
	value *ClusterEndpoint
	isSet bool
}

func (v NullableClusterEndpoint) Get() *ClusterEndpoint {
	return v.value
}

func (v *NullableClusterEndpoint) Set(val *ClusterEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterEndpoint(val *ClusterEndpoint) *NullableClusterEndpoint {
	return &NullableClusterEndpoint{value: val, isSet: true}
}

func (v NullableClusterEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

