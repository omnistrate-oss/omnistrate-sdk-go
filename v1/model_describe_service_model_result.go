/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the DescribeServiceModelResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribeServiceModelResult{}

// DescribeServiceModelResult struct for DescribeServiceModelResult
type DescribeServiceModelResult struct {
	// The infrastructure account configuration ID list
	AccountConfigIds []string `json:"accountConfigIds,omitempty"`
	// The active infrastructure account configuration IDs per cloud provider
	ActiveAccountConfigIds *map[string]string `json:"activeAccountConfigIds,omitempty"`
	// A brief description of the service model
	Description string `json:"description"`
	// Enabled service model features
	Features []ServiceModelFeatureDetail `json:"features,omitempty"`
	// The service model ID
	Id string `json:"id"`
	// The unique key for this service model
	Key string `json:"key"`
	// The model type encapsulating this service
	ModelType string `json:"modelType"`
	// Name of the Service Model
	Name string `json:"name"`
	// The product tiers associated with this service model
	ProductTiers []string `json:"productTiers,omitempty"`
	// The service API this model is for
	ServiceApiId string `json:"serviceApiId"`
	// The service ID this model belongs to
	ServiceId string `json:"serviceId"`
	AdditionalProperties map[string]interface{}
}

type _DescribeServiceModelResult DescribeServiceModelResult

// NewDescribeServiceModelResult instantiates a new DescribeServiceModelResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeServiceModelResult(description string, id string, key string, modelType string, name string, serviceApiId string, serviceId string) *DescribeServiceModelResult {
	this := DescribeServiceModelResult{}
	this.Description = description
	this.Id = id
	this.Key = key
	this.ModelType = modelType
	this.Name = name
	this.ServiceApiId = serviceApiId
	this.ServiceId = serviceId
	return &this
}

// NewDescribeServiceModelResultWithDefaults instantiates a new DescribeServiceModelResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeServiceModelResultWithDefaults() *DescribeServiceModelResult {
	this := DescribeServiceModelResult{}
	return &this
}

// GetAccountConfigIds returns the AccountConfigIds field value if set, zero value otherwise.
func (o *DescribeServiceModelResult) GetAccountConfigIds() []string {
	if o == nil || IsNil(o.AccountConfigIds) {
		var ret []string
		return ret
	}
	return o.AccountConfigIds
}

// GetAccountConfigIdsOk returns a tuple with the AccountConfigIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeServiceModelResult) GetAccountConfigIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AccountConfigIds) {
		return nil, false
	}
	return o.AccountConfigIds, true
}

// SetAccountConfigIds gets a reference to the given []string and assigns it to the AccountConfigIds field.
func (o *DescribeServiceModelResult) SetAccountConfigIds(v []string) {
	o.AccountConfigIds = v
}

// GetActiveAccountConfigIds returns the ActiveAccountConfigIds field value if set, zero value otherwise.
func (o *DescribeServiceModelResult) GetActiveAccountConfigIds() map[string]string {
	if o == nil || IsNil(o.ActiveAccountConfigIds) {
		var ret map[string]string
		return ret
	}
	return *o.ActiveAccountConfigIds
}

// GetActiveAccountConfigIdsOk returns a tuple with the ActiveAccountConfigIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeServiceModelResult) GetActiveAccountConfigIdsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ActiveAccountConfigIds) {
		return nil, false
	}
	return o.ActiveAccountConfigIds, true
}

// SetActiveAccountConfigIds gets a reference to the given map[string]string and assigns it to the ActiveAccountConfigIds field.
func (o *DescribeServiceModelResult) SetActiveAccountConfigIds(v map[string]string) {
	o.ActiveAccountConfigIds = &v
}

// GetDescription returns the Description field value
func (o *DescribeServiceModelResult) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *DescribeServiceModelResult) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *DescribeServiceModelResult) SetDescription(v string) {
	o.Description = v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *DescribeServiceModelResult) GetFeatures() []ServiceModelFeatureDetail {
	if o == nil || IsNil(o.Features) {
		var ret []ServiceModelFeatureDetail
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeServiceModelResult) GetFeaturesOk() ([]ServiceModelFeatureDetail, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// SetFeatures gets a reference to the given []ServiceModelFeatureDetail and assigns it to the Features field.
func (o *DescribeServiceModelResult) SetFeatures(v []ServiceModelFeatureDetail) {
	o.Features = v
}

// GetId returns the Id field value
func (o *DescribeServiceModelResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DescribeServiceModelResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DescribeServiceModelResult) SetId(v string) {
	o.Id = v
}

// GetKey returns the Key field value
func (o *DescribeServiceModelResult) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *DescribeServiceModelResult) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *DescribeServiceModelResult) SetKey(v string) {
	o.Key = v
}

// GetModelType returns the ModelType field value
func (o *DescribeServiceModelResult) GetModelType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModelType
}

// GetModelTypeOk returns a tuple with the ModelType field value
// and a boolean to check if the value has been set.
func (o *DescribeServiceModelResult) GetModelTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModelType, true
}

// SetModelType sets field value
func (o *DescribeServiceModelResult) SetModelType(v string) {
	o.ModelType = v
}

// GetName returns the Name field value
func (o *DescribeServiceModelResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DescribeServiceModelResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DescribeServiceModelResult) SetName(v string) {
	o.Name = v
}

// GetProductTiers returns the ProductTiers field value if set, zero value otherwise.
func (o *DescribeServiceModelResult) GetProductTiers() []string {
	if o == nil || IsNil(o.ProductTiers) {
		var ret []string
		return ret
	}
	return o.ProductTiers
}

// GetProductTiersOk returns a tuple with the ProductTiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeServiceModelResult) GetProductTiersOk() ([]string, bool) {
	if o == nil || IsNil(o.ProductTiers) {
		return nil, false
	}
	return o.ProductTiers, true
}

// SetProductTiers gets a reference to the given []string and assigns it to the ProductTiers field.
func (o *DescribeServiceModelResult) SetProductTiers(v []string) {
	o.ProductTiers = v
}

// GetServiceApiId returns the ServiceApiId field value
func (o *DescribeServiceModelResult) GetServiceApiId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceApiId
}

// GetServiceApiIdOk returns a tuple with the ServiceApiId field value
// and a boolean to check if the value has been set.
func (o *DescribeServiceModelResult) GetServiceApiIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceApiId, true
}

// SetServiceApiId sets field value
func (o *DescribeServiceModelResult) SetServiceApiId(v string) {
	o.ServiceApiId = v
}

// GetServiceId returns the ServiceId field value
func (o *DescribeServiceModelResult) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *DescribeServiceModelResult) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *DescribeServiceModelResult) SetServiceId(v string) {
	o.ServiceId = v
}

func (o DescribeServiceModelResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeServiceModelResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountConfigIds) {
		toSerialize["accountConfigIds"] = o.AccountConfigIds
	}
	if !IsNil(o.ActiveAccountConfigIds) {
		toSerialize["activeAccountConfigIds"] = o.ActiveAccountConfigIds
	}
	toSerialize["description"] = o.Description
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	toSerialize["id"] = o.Id
	toSerialize["key"] = o.Key
	toSerialize["modelType"] = o.ModelType
	toSerialize["name"] = o.Name
	if !IsNil(o.ProductTiers) {
		toSerialize["productTiers"] = o.ProductTiers
	}
	toSerialize["serviceApiId"] = o.ServiceApiId
	toSerialize["serviceId"] = o.ServiceId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DescribeServiceModelResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"id",
		"key",
		"modelType",
		"name",
		"serviceApiId",
		"serviceId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeServiceModelResult := _DescribeServiceModelResult{}

	err = json.Unmarshal(data, &varDescribeServiceModelResult)

	if err != nil {
		return err
	}

	*o = DescribeServiceModelResult(varDescribeServiceModelResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountConfigIds")
		delete(additionalProperties, "activeAccountConfigIds")
		delete(additionalProperties, "description")
		delete(additionalProperties, "features")
		delete(additionalProperties, "id")
		delete(additionalProperties, "key")
		delete(additionalProperties, "modelType")
		delete(additionalProperties, "name")
		delete(additionalProperties, "productTiers")
		delete(additionalProperties, "serviceApiId")
		delete(additionalProperties, "serviceId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDescribeServiceModelResult struct {
	value *DescribeServiceModelResult
	isSet bool
}

func (v NullableDescribeServiceModelResult) Get() *DescribeServiceModelResult {
	return v.value
}

func (v *NullableDescribeServiceModelResult) Set(val *DescribeServiceModelResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeServiceModelResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeServiceModelResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeServiceModelResult(val *DescribeServiceModelResult) *NullableDescribeServiceModelResult {
	return &NullableDescribeServiceModelResult{value: val, isSet: true}
}

func (v NullableDescribeServiceModelResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeServiceModelResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


