/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateInfraConfigRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateInfraConfigRequestBody{}

// CreateInfraConfigRequestBody struct for CreateInfraConfigRequestBody
type CreateInfraConfigRequestBody struct {
	// The compute config ID
	ComputeConfigId *string `json:"computeConfigId,omitempty"`
	CustomTag *EnvironmentVariable `json:"customTag,omitempty"`
	// The description for the infra config
	Description string `json:"description"`
	// The name of the infra config
	Name string `json:"name"`
	// The network config ID
	NetworkConfigId *string `json:"networkConfigId,omitempty"`
	// The service environment ID
	ServiceEnvironmentId string `json:"serviceEnvironmentId"`
	// The storage config ID
	StorageConfigId *string `json:"storageConfigId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateInfraConfigRequestBody CreateInfraConfigRequestBody

// NewCreateInfraConfigRequestBody instantiates a new CreateInfraConfigRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInfraConfigRequestBody(description string, name string, serviceEnvironmentId string) *CreateInfraConfigRequestBody {
	this := CreateInfraConfigRequestBody{}
	this.Description = description
	this.Name = name
	this.ServiceEnvironmentId = serviceEnvironmentId
	return &this
}

// NewCreateInfraConfigRequestBodyWithDefaults instantiates a new CreateInfraConfigRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInfraConfigRequestBodyWithDefaults() *CreateInfraConfigRequestBody {
	this := CreateInfraConfigRequestBody{}
	return &this
}

// GetComputeConfigId returns the ComputeConfigId field value if set, zero value otherwise.
func (o *CreateInfraConfigRequestBody) GetComputeConfigId() string {
	if o == nil || IsNil(o.ComputeConfigId) {
		var ret string
		return ret
	}
	return *o.ComputeConfigId
}

// GetComputeConfigIdOk returns a tuple with the ComputeConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInfraConfigRequestBody) GetComputeConfigIdOk() (*string, bool) {
	if o == nil || IsNil(o.ComputeConfigId) {
		return nil, false
	}
	return o.ComputeConfigId, true
}

// SetComputeConfigId gets a reference to the given string and assigns it to the ComputeConfigId field.
func (o *CreateInfraConfigRequestBody) SetComputeConfigId(v string) {
	o.ComputeConfigId = &v
}

// GetCustomTag returns the CustomTag field value if set, zero value otherwise.
func (o *CreateInfraConfigRequestBody) GetCustomTag() EnvironmentVariable {
	if o == nil || IsNil(o.CustomTag) {
		var ret EnvironmentVariable
		return ret
	}
	return *o.CustomTag
}

// GetCustomTagOk returns a tuple with the CustomTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInfraConfigRequestBody) GetCustomTagOk() (*EnvironmentVariable, bool) {
	if o == nil || IsNil(o.CustomTag) {
		return nil, false
	}
	return o.CustomTag, true
}

// SetCustomTag gets a reference to the given EnvironmentVariable and assigns it to the CustomTag field.
func (o *CreateInfraConfigRequestBody) SetCustomTag(v EnvironmentVariable) {
	o.CustomTag = &v
}

// GetDescription returns the Description field value
func (o *CreateInfraConfigRequestBody) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateInfraConfigRequestBody) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateInfraConfigRequestBody) SetDescription(v string) {
	o.Description = v
}

// GetName returns the Name field value
func (o *CreateInfraConfigRequestBody) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateInfraConfigRequestBody) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateInfraConfigRequestBody) SetName(v string) {
	o.Name = v
}

// GetNetworkConfigId returns the NetworkConfigId field value if set, zero value otherwise.
func (o *CreateInfraConfigRequestBody) GetNetworkConfigId() string {
	if o == nil || IsNil(o.NetworkConfigId) {
		var ret string
		return ret
	}
	return *o.NetworkConfigId
}

// GetNetworkConfigIdOk returns a tuple with the NetworkConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInfraConfigRequestBody) GetNetworkConfigIdOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkConfigId) {
		return nil, false
	}
	return o.NetworkConfigId, true
}

// SetNetworkConfigId gets a reference to the given string and assigns it to the NetworkConfigId field.
func (o *CreateInfraConfigRequestBody) SetNetworkConfigId(v string) {
	o.NetworkConfigId = &v
}

// GetServiceEnvironmentId returns the ServiceEnvironmentId field value
func (o *CreateInfraConfigRequestBody) GetServiceEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceEnvironmentId
}

// GetServiceEnvironmentIdOk returns a tuple with the ServiceEnvironmentId field value
// and a boolean to check if the value has been set.
func (o *CreateInfraConfigRequestBody) GetServiceEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceEnvironmentId, true
}

// SetServiceEnvironmentId sets field value
func (o *CreateInfraConfigRequestBody) SetServiceEnvironmentId(v string) {
	o.ServiceEnvironmentId = v
}

// GetStorageConfigId returns the StorageConfigId field value if set, zero value otherwise.
func (o *CreateInfraConfigRequestBody) GetStorageConfigId() string {
	if o == nil || IsNil(o.StorageConfigId) {
		var ret string
		return ret
	}
	return *o.StorageConfigId
}

// GetStorageConfigIdOk returns a tuple with the StorageConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInfraConfigRequestBody) GetStorageConfigIdOk() (*string, bool) {
	if o == nil || IsNil(o.StorageConfigId) {
		return nil, false
	}
	return o.StorageConfigId, true
}

// SetStorageConfigId gets a reference to the given string and assigns it to the StorageConfigId field.
func (o *CreateInfraConfigRequestBody) SetStorageConfigId(v string) {
	o.StorageConfigId = &v
}

func (o CreateInfraConfigRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateInfraConfigRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ComputeConfigId) {
		toSerialize["computeConfigId"] = o.ComputeConfigId
	}
	if !IsNil(o.CustomTag) {
		toSerialize["customTag"] = o.CustomTag
	}
	toSerialize["description"] = o.Description
	toSerialize["name"] = o.Name
	if !IsNil(o.NetworkConfigId) {
		toSerialize["networkConfigId"] = o.NetworkConfigId
	}
	toSerialize["serviceEnvironmentId"] = o.ServiceEnvironmentId
	if !IsNil(o.StorageConfigId) {
		toSerialize["storageConfigId"] = o.StorageConfigId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateInfraConfigRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"name",
		"serviceEnvironmentId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateInfraConfigRequestBody := _CreateInfraConfigRequestBody{}

	err = json.Unmarshal(data, &varCreateInfraConfigRequestBody)

	if err != nil {
		return err
	}

	*o = CreateInfraConfigRequestBody(varCreateInfraConfigRequestBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "computeConfigId")
		delete(additionalProperties, "customTag")
		delete(additionalProperties, "description")
		delete(additionalProperties, "name")
		delete(additionalProperties, "networkConfigId")
		delete(additionalProperties, "serviceEnvironmentId")
		delete(additionalProperties, "storageConfigId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateInfraConfigRequestBody struct {
	value *CreateInfraConfigRequestBody
	isSet bool
}

func (v NullableCreateInfraConfigRequestBody) Get() *CreateInfraConfigRequestBody {
	return v.value
}

func (v *NullableCreateInfraConfigRequestBody) Set(val *CreateInfraConfigRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInfraConfigRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInfraConfigRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInfraConfigRequestBody(val *CreateInfraConfigRequestBody) *NullableCreateInfraConfigRequestBody {
	return &NullableCreateInfraConfigRequestBody{value: val, isSet: true}
}

func (v NullableCreateInfraConfigRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInfraConfigRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


