/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the DescribeCustomDomainResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribeCustomDomainResult{}

// DescribeCustomDomainResult struct for DescribeCustomDomainResult
type DescribeCustomDomainResult struct {
	// The root domain of the domain to use as suffix
	CustomDomain string `json:"customDomain"`
	// The description for the domain
	Description string `json:"description"`
	// custom domain ID to operate on
	Id string `json:"id"`
	// The name of the custom domain
	Name string `json:"name"`
	Route53Configuration Route53ConfigurationDescription `json:"route53Configuration"`
	// The status of the custom domain
	Status *string `json:"status,omitempty"`
	// The status message of the custom domain
	StatusMessage *string `json:"statusMessage,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DescribeCustomDomainResult DescribeCustomDomainResult

// NewDescribeCustomDomainResult instantiates a new DescribeCustomDomainResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeCustomDomainResult(customDomain string, description string, id string, name string, route53Configuration Route53ConfigurationDescription) *DescribeCustomDomainResult {
	this := DescribeCustomDomainResult{}
	this.CustomDomain = customDomain
	this.Description = description
	this.Id = id
	this.Name = name
	this.Route53Configuration = route53Configuration
	return &this
}

// NewDescribeCustomDomainResultWithDefaults instantiates a new DescribeCustomDomainResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeCustomDomainResultWithDefaults() *DescribeCustomDomainResult {
	this := DescribeCustomDomainResult{}
	return &this
}

// GetCustomDomain returns the CustomDomain field value
func (o *DescribeCustomDomainResult) GetCustomDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomDomain
}

// GetCustomDomainOk returns a tuple with the CustomDomain field value
// and a boolean to check if the value has been set.
func (o *DescribeCustomDomainResult) GetCustomDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomDomain, true
}

// SetCustomDomain sets field value
func (o *DescribeCustomDomainResult) SetCustomDomain(v string) {
	o.CustomDomain = v
}

// GetDescription returns the Description field value
func (o *DescribeCustomDomainResult) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *DescribeCustomDomainResult) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *DescribeCustomDomainResult) SetDescription(v string) {
	o.Description = v
}

// GetId returns the Id field value
func (o *DescribeCustomDomainResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DescribeCustomDomainResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DescribeCustomDomainResult) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *DescribeCustomDomainResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DescribeCustomDomainResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DescribeCustomDomainResult) SetName(v string) {
	o.Name = v
}

// GetRoute53Configuration returns the Route53Configuration field value
func (o *DescribeCustomDomainResult) GetRoute53Configuration() Route53ConfigurationDescription {
	if o == nil {
		var ret Route53ConfigurationDescription
		return ret
	}

	return o.Route53Configuration
}

// GetRoute53ConfigurationOk returns a tuple with the Route53Configuration field value
// and a boolean to check if the value has been set.
func (o *DescribeCustomDomainResult) GetRoute53ConfigurationOk() (*Route53ConfigurationDescription, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Route53Configuration, true
}

// SetRoute53Configuration sets field value
func (o *DescribeCustomDomainResult) SetRoute53Configuration(v Route53ConfigurationDescription) {
	o.Route53Configuration = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DescribeCustomDomainResult) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCustomDomainResult) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DescribeCustomDomainResult) SetStatus(v string) {
	o.Status = &v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *DescribeCustomDomainResult) GetStatusMessage() string {
	if o == nil || IsNil(o.StatusMessage) {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeCustomDomainResult) GetStatusMessageOk() (*string, bool) {
	if o == nil || IsNil(o.StatusMessage) {
		return nil, false
	}
	return o.StatusMessage, true
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *DescribeCustomDomainResult) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

func (o DescribeCustomDomainResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeCustomDomainResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customDomain"] = o.CustomDomain
	toSerialize["description"] = o.Description
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["route53Configuration"] = o.Route53Configuration
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusMessage) {
		toSerialize["statusMessage"] = o.StatusMessage
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DescribeCustomDomainResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customDomain",
		"description",
		"id",
		"name",
		"route53Configuration",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeCustomDomainResult := _DescribeCustomDomainResult{}

	err = json.Unmarshal(data, &varDescribeCustomDomainResult)

	if err != nil {
		return err
	}

	*o = DescribeCustomDomainResult(varDescribeCustomDomainResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "customDomain")
		delete(additionalProperties, "description")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "route53Configuration")
		delete(additionalProperties, "status")
		delete(additionalProperties, "statusMessage")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDescribeCustomDomainResult struct {
	value *DescribeCustomDomainResult
	isSet bool
}

func (v NullableDescribeCustomDomainResult) Get() *DescribeCustomDomainResult {
	return v.value
}

func (v *NullableDescribeCustomDomainResult) Set(val *DescribeCustomDomainResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeCustomDomainResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeCustomDomainResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeCustomDomainResult(val *DescribeCustomDomainResult) *NullableDescribeCustomDomainResult {
	return &NullableDescribeCustomDomainResult{value: val, isSet: true}
}

func (v NullableDescribeCustomDomainResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeCustomDomainResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


