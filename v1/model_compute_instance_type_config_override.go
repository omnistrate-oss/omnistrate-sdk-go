/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the ComputeInstanceTypeConfigOverride type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComputeInstanceTypeConfigOverride{}

// ComputeInstanceTypeConfigOverride struct for ComputeInstanceTypeConfigOverride
type ComputeInstanceTypeConfigOverride struct {
	// The instance life cycle type for this compute instance type config
	InstanceLifeCycleType *string `json:"instanceLifeCycleType,omitempty"`
	// Size of the root volume in Gi
	RootVolumeSizeGi *int64 `json:"rootVolumeSizeGi,omitempty"`
	WarmPoolConfiguration *WarmPoolConfiguration `json:"warmPoolConfiguration,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ComputeInstanceTypeConfigOverride ComputeInstanceTypeConfigOverride

// NewComputeInstanceTypeConfigOverride instantiates a new ComputeInstanceTypeConfigOverride object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComputeInstanceTypeConfigOverride() *ComputeInstanceTypeConfigOverride {
	this := ComputeInstanceTypeConfigOverride{}
	return &this
}

// NewComputeInstanceTypeConfigOverrideWithDefaults instantiates a new ComputeInstanceTypeConfigOverride object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComputeInstanceTypeConfigOverrideWithDefaults() *ComputeInstanceTypeConfigOverride {
	this := ComputeInstanceTypeConfigOverride{}
	return &this
}

// GetInstanceLifeCycleType returns the InstanceLifeCycleType field value if set, zero value otherwise.
func (o *ComputeInstanceTypeConfigOverride) GetInstanceLifeCycleType() string {
	if o == nil || IsNil(o.InstanceLifeCycleType) {
		var ret string
		return ret
	}
	return *o.InstanceLifeCycleType
}

// GetInstanceLifeCycleTypeOk returns a tuple with the InstanceLifeCycleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputeInstanceTypeConfigOverride) GetInstanceLifeCycleTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceLifeCycleType) {
		return nil, false
	}
	return o.InstanceLifeCycleType, true
}

// SetInstanceLifeCycleType gets a reference to the given string and assigns it to the InstanceLifeCycleType field.
func (o *ComputeInstanceTypeConfigOverride) SetInstanceLifeCycleType(v string) {
	o.InstanceLifeCycleType = &v
}

// GetRootVolumeSizeGi returns the RootVolumeSizeGi field value if set, zero value otherwise.
func (o *ComputeInstanceTypeConfigOverride) GetRootVolumeSizeGi() int64 {
	if o == nil || IsNil(o.RootVolumeSizeGi) {
		var ret int64
		return ret
	}
	return *o.RootVolumeSizeGi
}

// GetRootVolumeSizeGiOk returns a tuple with the RootVolumeSizeGi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputeInstanceTypeConfigOverride) GetRootVolumeSizeGiOk() (*int64, bool) {
	if o == nil || IsNil(o.RootVolumeSizeGi) {
		return nil, false
	}
	return o.RootVolumeSizeGi, true
}

// SetRootVolumeSizeGi gets a reference to the given int64 and assigns it to the RootVolumeSizeGi field.
func (o *ComputeInstanceTypeConfigOverride) SetRootVolumeSizeGi(v int64) {
	o.RootVolumeSizeGi = &v
}

// GetWarmPoolConfiguration returns the WarmPoolConfiguration field value if set, zero value otherwise.
func (o *ComputeInstanceTypeConfigOverride) GetWarmPoolConfiguration() WarmPoolConfiguration {
	if o == nil || IsNil(o.WarmPoolConfiguration) {
		var ret WarmPoolConfiguration
		return ret
	}
	return *o.WarmPoolConfiguration
}

// GetWarmPoolConfigurationOk returns a tuple with the WarmPoolConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputeInstanceTypeConfigOverride) GetWarmPoolConfigurationOk() (*WarmPoolConfiguration, bool) {
	if o == nil || IsNil(o.WarmPoolConfiguration) {
		return nil, false
	}
	return o.WarmPoolConfiguration, true
}

// SetWarmPoolConfiguration gets a reference to the given WarmPoolConfiguration and assigns it to the WarmPoolConfiguration field.
func (o *ComputeInstanceTypeConfigOverride) SetWarmPoolConfiguration(v WarmPoolConfiguration) {
	o.WarmPoolConfiguration = &v
}

func (o ComputeInstanceTypeConfigOverride) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComputeInstanceTypeConfigOverride) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstanceLifeCycleType) {
		toSerialize["instanceLifeCycleType"] = o.InstanceLifeCycleType
	}
	if !IsNil(o.RootVolumeSizeGi) {
		toSerialize["rootVolumeSizeGi"] = o.RootVolumeSizeGi
	}
	if !IsNil(o.WarmPoolConfiguration) {
		toSerialize["warmPoolConfiguration"] = o.WarmPoolConfiguration
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ComputeInstanceTypeConfigOverride) UnmarshalJSON(data []byte) (err error) {
	varComputeInstanceTypeConfigOverride := _ComputeInstanceTypeConfigOverride{}

	err = json.Unmarshal(data, &varComputeInstanceTypeConfigOverride)

	if err != nil {
		return err
	}

	*o = ComputeInstanceTypeConfigOverride(varComputeInstanceTypeConfigOverride)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "instanceLifeCycleType")
		delete(additionalProperties, "rootVolumeSizeGi")
		delete(additionalProperties, "warmPoolConfiguration")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableComputeInstanceTypeConfigOverride struct {
	value *ComputeInstanceTypeConfigOverride
	isSet bool
}

func (v NullableComputeInstanceTypeConfigOverride) Get() *ComputeInstanceTypeConfigOverride {
	return v.value
}

func (v *NullableComputeInstanceTypeConfigOverride) Set(val *ComputeInstanceTypeConfigOverride) {
	v.value = val
	v.isSet = true
}

func (v NullableComputeInstanceTypeConfigOverride) IsSet() bool {
	return v.isSet
}

func (v *NullableComputeInstanceTypeConfigOverride) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComputeInstanceTypeConfigOverride(val *ComputeInstanceTypeConfigOverride) *NullableComputeInstanceTypeConfigOverride {
	return &NullableComputeInstanceTypeConfigOverride{value: val, isSet: true}
}

func (v NullableComputeInstanceTypeConfigOverride) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComputeInstanceTypeConfigOverride) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


