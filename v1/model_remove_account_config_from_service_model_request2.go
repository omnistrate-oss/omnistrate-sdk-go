/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the RemoveAccountConfigFromServiceModelRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoveAccountConfigFromServiceModelRequest2{}

// RemoveAccountConfigFromServiceModelRequest2 struct for RemoveAccountConfigFromServiceModelRequest2
type RemoveAccountConfigFromServiceModelRequest2 struct {
	// The infrastructure account configuration ID
	AccountConfigId string `json:"accountConfigId"`
	AdditionalProperties map[string]interface{}
}

type _RemoveAccountConfigFromServiceModelRequest2 RemoveAccountConfigFromServiceModelRequest2

// NewRemoveAccountConfigFromServiceModelRequest2 instantiates a new RemoveAccountConfigFromServiceModelRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoveAccountConfigFromServiceModelRequest2(accountConfigId string) *RemoveAccountConfigFromServiceModelRequest2 {
	this := RemoveAccountConfigFromServiceModelRequest2{}
	this.AccountConfigId = accountConfigId
	return &this
}

// NewRemoveAccountConfigFromServiceModelRequest2WithDefaults instantiates a new RemoveAccountConfigFromServiceModelRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoveAccountConfigFromServiceModelRequest2WithDefaults() *RemoveAccountConfigFromServiceModelRequest2 {
	this := RemoveAccountConfigFromServiceModelRequest2{}
	return &this
}

// GetAccountConfigId returns the AccountConfigId field value
func (o *RemoveAccountConfigFromServiceModelRequest2) GetAccountConfigId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountConfigId
}

// GetAccountConfigIdOk returns a tuple with the AccountConfigId field value
// and a boolean to check if the value has been set.
func (o *RemoveAccountConfigFromServiceModelRequest2) GetAccountConfigIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountConfigId, true
}

// SetAccountConfigId sets field value
func (o *RemoveAccountConfigFromServiceModelRequest2) SetAccountConfigId(v string) {
	o.AccountConfigId = v
}

func (o RemoveAccountConfigFromServiceModelRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoveAccountConfigFromServiceModelRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountConfigId"] = o.AccountConfigId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RemoveAccountConfigFromServiceModelRequest2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accountConfigId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRemoveAccountConfigFromServiceModelRequest2 := _RemoveAccountConfigFromServiceModelRequest2{}

	err = json.Unmarshal(data, &varRemoveAccountConfigFromServiceModelRequest2)

	if err != nil {
		return err
	}

	*o = RemoveAccountConfigFromServiceModelRequest2(varRemoveAccountConfigFromServiceModelRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountConfigId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRemoveAccountConfigFromServiceModelRequest2 struct {
	value *RemoveAccountConfigFromServiceModelRequest2
	isSet bool
}

func (v NullableRemoveAccountConfigFromServiceModelRequest2) Get() *RemoveAccountConfigFromServiceModelRequest2 {
	return v.value
}

func (v *NullableRemoveAccountConfigFromServiceModelRequest2) Set(val *RemoveAccountConfigFromServiceModelRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoveAccountConfigFromServiceModelRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoveAccountConfigFromServiceModelRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoveAccountConfigFromServiceModelRequest2(val *RemoveAccountConfigFromServiceModelRequest2) *NullableRemoveAccountConfigFromServiceModelRequest2 {
	return &NullableRemoveAccountConfigFromServiceModelRequest2{value: val, isSet: true}
}

func (v NullableRemoveAccountConfigFromServiceModelRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoveAccountConfigFromServiceModelRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


