/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the AgentConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentConfiguration{}

// AgentConfiguration struct for AgentConfiguration
type AgentConfiguration struct {
	CodeInterpreter AgentCodeInterpreterConfiguration `json:"codeInterpreter"`
	// The Dockerfile path for the agent container
	Dockerfile string `json:"dockerfile"`
	// Evaluation configurations for the agent
	Evaluations []AgentEvaluation `json:"evaluations"`
	Memory AgentMemoryConfiguration `json:"memory"`
	Monitoring AgentMonitoringConfiguration `json:"monitoring"`
	VectorStore AgentVectorStoreConfiguration `json:"vectorStore"`
	AdditionalProperties map[string]interface{}
}

type _AgentConfiguration AgentConfiguration

// NewAgentConfiguration instantiates a new AgentConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentConfiguration(codeInterpreter AgentCodeInterpreterConfiguration, dockerfile string, evaluations []AgentEvaluation, memory AgentMemoryConfiguration, monitoring AgentMonitoringConfiguration, vectorStore AgentVectorStoreConfiguration) *AgentConfiguration {
	this := AgentConfiguration{}
	this.CodeInterpreter = codeInterpreter
	this.Dockerfile = dockerfile
	this.Evaluations = evaluations
	this.Memory = memory
	this.Monitoring = monitoring
	this.VectorStore = vectorStore
	return &this
}

// NewAgentConfigurationWithDefaults instantiates a new AgentConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentConfigurationWithDefaults() *AgentConfiguration {
	this := AgentConfiguration{}
	return &this
}

// GetCodeInterpreter returns the CodeInterpreter field value
func (o *AgentConfiguration) GetCodeInterpreter() AgentCodeInterpreterConfiguration {
	if o == nil {
		var ret AgentCodeInterpreterConfiguration
		return ret
	}

	return o.CodeInterpreter
}

// GetCodeInterpreterOk returns a tuple with the CodeInterpreter field value
// and a boolean to check if the value has been set.
func (o *AgentConfiguration) GetCodeInterpreterOk() (*AgentCodeInterpreterConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CodeInterpreter, true
}

// SetCodeInterpreter sets field value
func (o *AgentConfiguration) SetCodeInterpreter(v AgentCodeInterpreterConfiguration) {
	o.CodeInterpreter = v
}

// GetDockerfile returns the Dockerfile field value
func (o *AgentConfiguration) GetDockerfile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Dockerfile
}

// GetDockerfileOk returns a tuple with the Dockerfile field value
// and a boolean to check if the value has been set.
func (o *AgentConfiguration) GetDockerfileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dockerfile, true
}

// SetDockerfile sets field value
func (o *AgentConfiguration) SetDockerfile(v string) {
	o.Dockerfile = v
}

// GetEvaluations returns the Evaluations field value
func (o *AgentConfiguration) GetEvaluations() []AgentEvaluation {
	if o == nil {
		var ret []AgentEvaluation
		return ret
	}

	return o.Evaluations
}

// GetEvaluationsOk returns a tuple with the Evaluations field value
// and a boolean to check if the value has been set.
func (o *AgentConfiguration) GetEvaluationsOk() ([]AgentEvaluation, bool) {
	if o == nil {
		return nil, false
	}
	return o.Evaluations, true
}

// SetEvaluations sets field value
func (o *AgentConfiguration) SetEvaluations(v []AgentEvaluation) {
	o.Evaluations = v
}

// GetMemory returns the Memory field value
func (o *AgentConfiguration) GetMemory() AgentMemoryConfiguration {
	if o == nil {
		var ret AgentMemoryConfiguration
		return ret
	}

	return o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value
// and a boolean to check if the value has been set.
func (o *AgentConfiguration) GetMemoryOk() (*AgentMemoryConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memory, true
}

// SetMemory sets field value
func (o *AgentConfiguration) SetMemory(v AgentMemoryConfiguration) {
	o.Memory = v
}

// GetMonitoring returns the Monitoring field value
func (o *AgentConfiguration) GetMonitoring() AgentMonitoringConfiguration {
	if o == nil {
		var ret AgentMonitoringConfiguration
		return ret
	}

	return o.Monitoring
}

// GetMonitoringOk returns a tuple with the Monitoring field value
// and a boolean to check if the value has been set.
func (o *AgentConfiguration) GetMonitoringOk() (*AgentMonitoringConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Monitoring, true
}

// SetMonitoring sets field value
func (o *AgentConfiguration) SetMonitoring(v AgentMonitoringConfiguration) {
	o.Monitoring = v
}

// GetVectorStore returns the VectorStore field value
func (o *AgentConfiguration) GetVectorStore() AgentVectorStoreConfiguration {
	if o == nil {
		var ret AgentVectorStoreConfiguration
		return ret
	}

	return o.VectorStore
}

// GetVectorStoreOk returns a tuple with the VectorStore field value
// and a boolean to check if the value has been set.
func (o *AgentConfiguration) GetVectorStoreOk() (*AgentVectorStoreConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VectorStore, true
}

// SetVectorStore sets field value
func (o *AgentConfiguration) SetVectorStore(v AgentVectorStoreConfiguration) {
	o.VectorStore = v
}

func (o AgentConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["codeInterpreter"] = o.CodeInterpreter
	toSerialize["dockerfile"] = o.Dockerfile
	toSerialize["evaluations"] = o.Evaluations
	toSerialize["memory"] = o.Memory
	toSerialize["monitoring"] = o.Monitoring
	toSerialize["vectorStore"] = o.VectorStore

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AgentConfiguration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"codeInterpreter",
		"dockerfile",
		"evaluations",
		"memory",
		"monitoring",
		"vectorStore",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAgentConfiguration := _AgentConfiguration{}

	err = json.Unmarshal(data, &varAgentConfiguration)

	if err != nil {
		return err
	}

	*o = AgentConfiguration(varAgentConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "codeInterpreter")
		delete(additionalProperties, "dockerfile")
		delete(additionalProperties, "evaluations")
		delete(additionalProperties, "memory")
		delete(additionalProperties, "monitoring")
		delete(additionalProperties, "vectorStore")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAgentConfiguration struct {
	value *AgentConfiguration
	isSet bool
}

func (v NullableAgentConfiguration) Get() *AgentConfiguration {
	return v.value
}

func (v *NullableAgentConfiguration) Set(val *AgentConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentConfiguration(val *AgentConfiguration) *NullableAgentConfiguration {
	return &NullableAgentConfiguration{value: val, isSet: true}
}

func (v NullableAgentConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


