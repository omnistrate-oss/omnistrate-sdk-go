/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DescribeInfraConfigResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribeInfraConfigResult{}

// DescribeInfraConfigResult struct for DescribeInfraConfigResult
type DescribeInfraConfigResult struct {
	// The compute config ID
	ComputeConfigId *string `json:"computeConfigId,omitempty"`
	CustomTag *EnvironmentVariable `json:"customTag,omitempty"`
	// The description for the infra config
	Description string `json:"description"`
	// Infra Config ID to operate on
	Id string `json:"id"`
	// The name of the infra config
	Name string `json:"name"`
	// The network config ID
	NetworkConfigId *string `json:"networkConfigId,omitempty"`
	// The service environment ID
	ServiceEnvironmentId string `json:"serviceEnvironmentId"`
	// The service ID
	ServiceId string `json:"serviceId"`
	// The storage config ID
	StorageConfigId *string `json:"storageConfigId,omitempty"`
}

type _DescribeInfraConfigResult DescribeInfraConfigResult

// NewDescribeInfraConfigResult instantiates a new DescribeInfraConfigResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeInfraConfigResult(description string, id string, name string, serviceEnvironmentId string, serviceId string) *DescribeInfraConfigResult {
	this := DescribeInfraConfigResult{}
	this.Description = description
	this.Id = id
	this.Name = name
	this.ServiceEnvironmentId = serviceEnvironmentId
	this.ServiceId = serviceId
	return &this
}

// NewDescribeInfraConfigResultWithDefaults instantiates a new DescribeInfraConfigResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeInfraConfigResultWithDefaults() *DescribeInfraConfigResult {
	this := DescribeInfraConfigResult{}
	return &this
}

// GetComputeConfigId returns the ComputeConfigId field value if set, zero value otherwise.
func (o *DescribeInfraConfigResult) GetComputeConfigId() string {
	if o == nil || IsNil(o.ComputeConfigId) {
		var ret string
		return ret
	}
	return *o.ComputeConfigId
}

// GetComputeConfigIdOk returns a tuple with the ComputeConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeInfraConfigResult) GetComputeConfigIdOk() (*string, bool) {
	if o == nil || IsNil(o.ComputeConfigId) {
		return nil, false
	}
	return o.ComputeConfigId, true
}

// SetComputeConfigId gets a reference to the given string and assigns it to the ComputeConfigId field.
func (o *DescribeInfraConfigResult) SetComputeConfigId(v string) {
	o.ComputeConfigId = &v
}

// GetCustomTag returns the CustomTag field value if set, zero value otherwise.
func (o *DescribeInfraConfigResult) GetCustomTag() EnvironmentVariable {
	if o == nil || IsNil(o.CustomTag) {
		var ret EnvironmentVariable
		return ret
	}
	return *o.CustomTag
}

// GetCustomTagOk returns a tuple with the CustomTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeInfraConfigResult) GetCustomTagOk() (*EnvironmentVariable, bool) {
	if o == nil || IsNil(o.CustomTag) {
		return nil, false
	}
	return o.CustomTag, true
}

// SetCustomTag gets a reference to the given EnvironmentVariable and assigns it to the CustomTag field.
func (o *DescribeInfraConfigResult) SetCustomTag(v EnvironmentVariable) {
	o.CustomTag = &v
}

// GetDescription returns the Description field value
func (o *DescribeInfraConfigResult) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *DescribeInfraConfigResult) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *DescribeInfraConfigResult) SetDescription(v string) {
	o.Description = v
}

// GetId returns the Id field value
func (o *DescribeInfraConfigResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DescribeInfraConfigResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DescribeInfraConfigResult) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *DescribeInfraConfigResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DescribeInfraConfigResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DescribeInfraConfigResult) SetName(v string) {
	o.Name = v
}

// GetNetworkConfigId returns the NetworkConfigId field value if set, zero value otherwise.
func (o *DescribeInfraConfigResult) GetNetworkConfigId() string {
	if o == nil || IsNil(o.NetworkConfigId) {
		var ret string
		return ret
	}
	return *o.NetworkConfigId
}

// GetNetworkConfigIdOk returns a tuple with the NetworkConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeInfraConfigResult) GetNetworkConfigIdOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkConfigId) {
		return nil, false
	}
	return o.NetworkConfigId, true
}

// SetNetworkConfigId gets a reference to the given string and assigns it to the NetworkConfigId field.
func (o *DescribeInfraConfigResult) SetNetworkConfigId(v string) {
	o.NetworkConfigId = &v
}

// GetServiceEnvironmentId returns the ServiceEnvironmentId field value
func (o *DescribeInfraConfigResult) GetServiceEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceEnvironmentId
}

// GetServiceEnvironmentIdOk returns a tuple with the ServiceEnvironmentId field value
// and a boolean to check if the value has been set.
func (o *DescribeInfraConfigResult) GetServiceEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceEnvironmentId, true
}

// SetServiceEnvironmentId sets field value
func (o *DescribeInfraConfigResult) SetServiceEnvironmentId(v string) {
	o.ServiceEnvironmentId = v
}

// GetServiceId returns the ServiceId field value
func (o *DescribeInfraConfigResult) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *DescribeInfraConfigResult) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *DescribeInfraConfigResult) SetServiceId(v string) {
	o.ServiceId = v
}

// GetStorageConfigId returns the StorageConfigId field value if set, zero value otherwise.
func (o *DescribeInfraConfigResult) GetStorageConfigId() string {
	if o == nil || IsNil(o.StorageConfigId) {
		var ret string
		return ret
	}
	return *o.StorageConfigId
}

// GetStorageConfigIdOk returns a tuple with the StorageConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeInfraConfigResult) GetStorageConfigIdOk() (*string, bool) {
	if o == nil || IsNil(o.StorageConfigId) {
		return nil, false
	}
	return o.StorageConfigId, true
}

// SetStorageConfigId gets a reference to the given string and assigns it to the StorageConfigId field.
func (o *DescribeInfraConfigResult) SetStorageConfigId(v string) {
	o.StorageConfigId = &v
}

func (o DescribeInfraConfigResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeInfraConfigResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ComputeConfigId) {
		toSerialize["computeConfigId"] = o.ComputeConfigId
	}
	if !IsNil(o.CustomTag) {
		toSerialize["customTag"] = o.CustomTag
	}
	toSerialize["description"] = o.Description
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !IsNil(o.NetworkConfigId) {
		toSerialize["networkConfigId"] = o.NetworkConfigId
	}
	toSerialize["serviceEnvironmentId"] = o.ServiceEnvironmentId
	toSerialize["serviceId"] = o.ServiceId
	if !IsNil(o.StorageConfigId) {
		toSerialize["storageConfigId"] = o.StorageConfigId
	}
	return toSerialize, nil
}

func (o *DescribeInfraConfigResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"id",
		"name",
		"serviceEnvironmentId",
		"serviceId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeInfraConfigResult := _DescribeInfraConfigResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDescribeInfraConfigResult)

	if err != nil {
		return err
	}

	*o = DescribeInfraConfigResult(varDescribeInfraConfigResult)

	return err
}

type NullableDescribeInfraConfigResult struct {
	value *DescribeInfraConfigResult
	isSet bool
}

func (v NullableDescribeInfraConfigResult) Get() *DescribeInfraConfigResult {
	return v.value
}

func (v *NullableDescribeInfraConfigResult) Set(val *DescribeInfraConfigResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeInfraConfigResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeInfraConfigResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeInfraConfigResult(val *DescribeInfraConfigResult) *NullableDescribeInfraConfigResult {
	return &NullableDescribeInfraConfigResult{value: val, isSet: true}
}

func (v NullableDescribeInfraConfigResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeInfraConfigResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


