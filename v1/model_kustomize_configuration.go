/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the KustomizeConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KustomizeConfiguration{}

// KustomizeConfiguration struct for KustomizeConfiguration
type KustomizeConfiguration struct {
	// Flag to disable drift reconciliation for the Kustomize deployment
	DisableReconciliation *bool `json:"disableReconciliation,omitempty"`
	// The endpoints from the Kustomize Deployment to expose to the customer
	EndpointConfiguration *map[string]Endpoint `json:"endpointConfiguration,omitempty"`
	GitConfiguration *GitConfiguration `json:"gitConfiguration,omitempty"`
	// The helm chart dependencies for the CRD - Optional
	HelmChartDependencies []OperatorHelmChartDependency `json:"helmChartDependencies,omitempty"`
	// The path to the kustomize directory
	KustomizePath string `json:"kustomizePath"`
	AdditionalProperties map[string]interface{}
}

type _KustomizeConfiguration KustomizeConfiguration

// NewKustomizeConfiguration instantiates a new KustomizeConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKustomizeConfiguration(kustomizePath string) *KustomizeConfiguration {
	this := KustomizeConfiguration{}
	this.KustomizePath = kustomizePath
	return &this
}

// NewKustomizeConfigurationWithDefaults instantiates a new KustomizeConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKustomizeConfigurationWithDefaults() *KustomizeConfiguration {
	this := KustomizeConfiguration{}
	return &this
}

// GetDisableReconciliation returns the DisableReconciliation field value if set, zero value otherwise.
func (o *KustomizeConfiguration) GetDisableReconciliation() bool {
	if o == nil || IsNil(o.DisableReconciliation) {
		var ret bool
		return ret
	}
	return *o.DisableReconciliation
}

// GetDisableReconciliationOk returns a tuple with the DisableReconciliation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KustomizeConfiguration) GetDisableReconciliationOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableReconciliation) {
		return nil, false
	}
	return o.DisableReconciliation, true
}

// SetDisableReconciliation gets a reference to the given bool and assigns it to the DisableReconciliation field.
func (o *KustomizeConfiguration) SetDisableReconciliation(v bool) {
	o.DisableReconciliation = &v
}

// GetEndpointConfiguration returns the EndpointConfiguration field value if set, zero value otherwise.
func (o *KustomizeConfiguration) GetEndpointConfiguration() map[string]Endpoint {
	if o == nil || IsNil(o.EndpointConfiguration) {
		var ret map[string]Endpoint
		return ret
	}
	return *o.EndpointConfiguration
}

// GetEndpointConfigurationOk returns a tuple with the EndpointConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KustomizeConfiguration) GetEndpointConfigurationOk() (*map[string]Endpoint, bool) {
	if o == nil || IsNil(o.EndpointConfiguration) {
		return nil, false
	}
	return o.EndpointConfiguration, true
}

// SetEndpointConfiguration gets a reference to the given map[string]Endpoint and assigns it to the EndpointConfiguration field.
func (o *KustomizeConfiguration) SetEndpointConfiguration(v map[string]Endpoint) {
	o.EndpointConfiguration = &v
}

// GetGitConfiguration returns the GitConfiguration field value if set, zero value otherwise.
func (o *KustomizeConfiguration) GetGitConfiguration() GitConfiguration {
	if o == nil || IsNil(o.GitConfiguration) {
		var ret GitConfiguration
		return ret
	}
	return *o.GitConfiguration
}

// GetGitConfigurationOk returns a tuple with the GitConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KustomizeConfiguration) GetGitConfigurationOk() (*GitConfiguration, bool) {
	if o == nil || IsNil(o.GitConfiguration) {
		return nil, false
	}
	return o.GitConfiguration, true
}

// SetGitConfiguration gets a reference to the given GitConfiguration and assigns it to the GitConfiguration field.
func (o *KustomizeConfiguration) SetGitConfiguration(v GitConfiguration) {
	o.GitConfiguration = &v
}

// GetHelmChartDependencies returns the HelmChartDependencies field value if set, zero value otherwise.
func (o *KustomizeConfiguration) GetHelmChartDependencies() []OperatorHelmChartDependency {
	if o == nil || IsNil(o.HelmChartDependencies) {
		var ret []OperatorHelmChartDependency
		return ret
	}
	return o.HelmChartDependencies
}

// GetHelmChartDependenciesOk returns a tuple with the HelmChartDependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KustomizeConfiguration) GetHelmChartDependenciesOk() ([]OperatorHelmChartDependency, bool) {
	if o == nil || IsNil(o.HelmChartDependencies) {
		return nil, false
	}
	return o.HelmChartDependencies, true
}

// SetHelmChartDependencies gets a reference to the given []OperatorHelmChartDependency and assigns it to the HelmChartDependencies field.
func (o *KustomizeConfiguration) SetHelmChartDependencies(v []OperatorHelmChartDependency) {
	o.HelmChartDependencies = v
}

// GetKustomizePath returns the KustomizePath field value
func (o *KustomizeConfiguration) GetKustomizePath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KustomizePath
}

// GetKustomizePathOk returns a tuple with the KustomizePath field value
// and a boolean to check if the value has been set.
func (o *KustomizeConfiguration) GetKustomizePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KustomizePath, true
}

// SetKustomizePath sets field value
func (o *KustomizeConfiguration) SetKustomizePath(v string) {
	o.KustomizePath = v
}

func (o KustomizeConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KustomizeConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisableReconciliation) {
		toSerialize["disableReconciliation"] = o.DisableReconciliation
	}
	if !IsNil(o.EndpointConfiguration) {
		toSerialize["endpointConfiguration"] = o.EndpointConfiguration
	}
	if !IsNil(o.GitConfiguration) {
		toSerialize["gitConfiguration"] = o.GitConfiguration
	}
	if !IsNil(o.HelmChartDependencies) {
		toSerialize["helmChartDependencies"] = o.HelmChartDependencies
	}
	toSerialize["kustomizePath"] = o.KustomizePath

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KustomizeConfiguration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"kustomizePath",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKustomizeConfiguration := _KustomizeConfiguration{}

	err = json.Unmarshal(data, &varKustomizeConfiguration)

	if err != nil {
		return err
	}

	*o = KustomizeConfiguration(varKustomizeConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "disableReconciliation")
		delete(additionalProperties, "endpointConfiguration")
		delete(additionalProperties, "gitConfiguration")
		delete(additionalProperties, "helmChartDependencies")
		delete(additionalProperties, "kustomizePath")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKustomizeConfiguration struct {
	value *KustomizeConfiguration
	isSet bool
}

func (v NullableKustomizeConfiguration) Get() *KustomizeConfiguration {
	return v.value
}

func (v *NullableKustomizeConfiguration) Set(val *KustomizeConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableKustomizeConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableKustomizeConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKustomizeConfiguration(val *KustomizeConfiguration) *NullableKustomizeConfiguration {
	return &NullableKustomizeConfiguration{value: val, isSet: true}
}

func (v NullableKustomizeConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKustomizeConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

