/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the RenderIdentityProvidersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RenderIdentityProvidersRequest{}

// RenderIdentityProvidersRequest struct for RenderIdentityProvidersRequest
type RenderIdentityProvidersRequest struct {
	// The type of environment to filter Identity Providers by
	EnvironmentType *string `json:"environmentType,omitempty"`
	// The login hint to use for the Identity Provider
	LoginHint *string `json:"loginHint,omitempty"`
	// The URL to redirect to after login
	RedirectUrl *string `json:"redirectUrl,omitempty"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _RenderIdentityProvidersRequest RenderIdentityProvidersRequest

// NewRenderIdentityProvidersRequest instantiates a new RenderIdentityProvidersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenderIdentityProvidersRequest(token string) *RenderIdentityProvidersRequest {
	this := RenderIdentityProvidersRequest{}
	this.Token = token
	return &this
}

// NewRenderIdentityProvidersRequestWithDefaults instantiates a new RenderIdentityProvidersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenderIdentityProvidersRequestWithDefaults() *RenderIdentityProvidersRequest {
	this := RenderIdentityProvidersRequest{}
	return &this
}

// GetEnvironmentType returns the EnvironmentType field value if set, zero value otherwise.
func (o *RenderIdentityProvidersRequest) GetEnvironmentType() string {
	if o == nil || IsNil(o.EnvironmentType) {
		var ret string
		return ret
	}
	return *o.EnvironmentType
}

// GetEnvironmentTypeOk returns a tuple with the EnvironmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderIdentityProvidersRequest) GetEnvironmentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentType) {
		return nil, false
	}
	return o.EnvironmentType, true
}

// SetEnvironmentType gets a reference to the given string and assigns it to the EnvironmentType field.
func (o *RenderIdentityProvidersRequest) SetEnvironmentType(v string) {
	o.EnvironmentType = &v
}

// GetLoginHint returns the LoginHint field value if set, zero value otherwise.
func (o *RenderIdentityProvidersRequest) GetLoginHint() string {
	if o == nil || IsNil(o.LoginHint) {
		var ret string
		return ret
	}
	return *o.LoginHint
}

// GetLoginHintOk returns a tuple with the LoginHint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderIdentityProvidersRequest) GetLoginHintOk() (*string, bool) {
	if o == nil || IsNil(o.LoginHint) {
		return nil, false
	}
	return o.LoginHint, true
}

// SetLoginHint gets a reference to the given string and assigns it to the LoginHint field.
func (o *RenderIdentityProvidersRequest) SetLoginHint(v string) {
	o.LoginHint = &v
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise.
func (o *RenderIdentityProvidersRequest) GetRedirectUrl() string {
	if o == nil || IsNil(o.RedirectUrl) {
		var ret string
		return ret
	}
	return *o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderIdentityProvidersRequest) GetRedirectUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectUrl) {
		return nil, false
	}
	return o.RedirectUrl, true
}

// SetRedirectUrl gets a reference to the given string and assigns it to the RedirectUrl field.
func (o *RenderIdentityProvidersRequest) SetRedirectUrl(v string) {
	o.RedirectUrl = &v
}

// GetToken returns the Token field value
func (o *RenderIdentityProvidersRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *RenderIdentityProvidersRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *RenderIdentityProvidersRequest) SetToken(v string) {
	o.Token = v
}

func (o RenderIdentityProvidersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RenderIdentityProvidersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnvironmentType) {
		toSerialize["environmentType"] = o.EnvironmentType
	}
	if !IsNil(o.LoginHint) {
		toSerialize["loginHint"] = o.LoginHint
	}
	if !IsNil(o.RedirectUrl) {
		toSerialize["redirectUrl"] = o.RedirectUrl
	}
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RenderIdentityProvidersRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRenderIdentityProvidersRequest := _RenderIdentityProvidersRequest{}

	err = json.Unmarshal(data, &varRenderIdentityProvidersRequest)

	if err != nil {
		return err
	}

	*o = RenderIdentityProvidersRequest(varRenderIdentityProvidersRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "environmentType")
		delete(additionalProperties, "loginHint")
		delete(additionalProperties, "redirectUrl")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRenderIdentityProvidersRequest struct {
	value *RenderIdentityProvidersRequest
	isSet bool
}

func (v NullableRenderIdentityProvidersRequest) Get() *RenderIdentityProvidersRequest {
	return v.value
}

func (v *NullableRenderIdentityProvidersRequest) Set(val *RenderIdentityProvidersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRenderIdentityProvidersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRenderIdentityProvidersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenderIdentityProvidersRequest(val *RenderIdentityProvidersRequest) *NullableRenderIdentityProvidersRequest {
	return &NullableRenderIdentityProvidersRequest{value: val, isSet: true}
}

func (v NullableRenderIdentityProvidersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenderIdentityProvidersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

