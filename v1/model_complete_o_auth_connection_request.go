/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the CompleteOAuthConnectionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompleteOAuthConnectionRequest{}

// CompleteOAuthConnectionRequest struct for CompleteOAuthConnectionRequest
type CompleteOAuthConnectionRequest struct {
	// Authorization code from Stripe
	Code *string `json:"code,omitempty"`
	// Random string used on the authorize URL
	State *string `json:"state,omitempty"`
	// JWT token used to perform authorization
	Token                string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _CompleteOAuthConnectionRequest CompleteOAuthConnectionRequest

// NewCompleteOAuthConnectionRequest instantiates a new CompleteOAuthConnectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompleteOAuthConnectionRequest(token string) *CompleteOAuthConnectionRequest {
	this := CompleteOAuthConnectionRequest{}
	this.Token = token
	return &this
}

// NewCompleteOAuthConnectionRequestWithDefaults instantiates a new CompleteOAuthConnectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompleteOAuthConnectionRequestWithDefaults() *CompleteOAuthConnectionRequest {
	this := CompleteOAuthConnectionRequest{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CompleteOAuthConnectionRequest) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompleteOAuthConnectionRequest) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *CompleteOAuthConnectionRequest) SetCode(v string) {
	o.Code = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *CompleteOAuthConnectionRequest) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompleteOAuthConnectionRequest) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *CompleteOAuthConnectionRequest) SetState(v string) {
	o.State = &v
}

// GetToken returns the Token field value
func (o *CompleteOAuthConnectionRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *CompleteOAuthConnectionRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *CompleteOAuthConnectionRequest) SetToken(v string) {
	o.Token = v
}

func (o CompleteOAuthConnectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompleteOAuthConnectionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CompleteOAuthConnectionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCompleteOAuthConnectionRequest := _CompleteOAuthConnectionRequest{}

	err = json.Unmarshal(data, &varCompleteOAuthConnectionRequest)

	if err != nil {
		return err
	}

	*o = CompleteOAuthConnectionRequest(varCompleteOAuthConnectionRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "code")
		delete(additionalProperties, "state")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCompleteOAuthConnectionRequest struct {
	value *CompleteOAuthConnectionRequest
	isSet bool
}

func (v NullableCompleteOAuthConnectionRequest) Get() *CompleteOAuthConnectionRequest {
	return v.value
}

func (v *NullableCompleteOAuthConnectionRequest) Set(val *CompleteOAuthConnectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCompleteOAuthConnectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCompleteOAuthConnectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompleteOAuthConnectionRequest(val *CompleteOAuthConnectionRequest) *NullableCompleteOAuthConnectionRequest {
	return &NullableCompleteOAuthConnectionRequest{value: val, isSet: true}
}

func (v NullableCompleteOAuthConnectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompleteOAuthConnectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
