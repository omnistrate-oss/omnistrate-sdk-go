/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the AddFileRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddFileRequest{}

// AddFileRequest struct for AddFileRequest
type AddFileRequest struct {
	// Content-Type header, must define value for multipart boundary.
	ContentType string `json:"content_type" validate:"regexp=multipart\\/[^;]+; boundary=.+"`
	// The description of the file
	Description string `json:"description"`
	// The type of the file
	FileType string `json:"fileType"`
	// ID of a resource
	Id string `json:"id"`
	// The mount path of the file
	MountPath string `json:"mountPath"`
	// The name of the file
	Name string `json:"name"`
	// ID of a Service
	ServiceId string `json:"serviceId"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _AddFileRequest AddFileRequest

// NewAddFileRequest instantiates a new AddFileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddFileRequest(contentType string, description string, fileType string, id string, mountPath string, name string, serviceId string, token string) *AddFileRequest {
	this := AddFileRequest{}
	this.ContentType = contentType
	this.Description = description
	this.FileType = fileType
	this.Id = id
	this.MountPath = mountPath
	this.Name = name
	this.ServiceId = serviceId
	this.Token = token
	return &this
}

// NewAddFileRequestWithDefaults instantiates a new AddFileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddFileRequestWithDefaults() *AddFileRequest {
	this := AddFileRequest{}
	var contentType string = "multipart/form-data; boundary=boundary"
	this.ContentType = contentType
	return &this
}

// GetContentType returns the ContentType field value
func (o *AddFileRequest) GetContentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value
// and a boolean to check if the value has been set.
func (o *AddFileRequest) GetContentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContentType, true
}

// SetContentType sets field value
func (o *AddFileRequest) SetContentType(v string) {
	o.ContentType = v
}

// GetDescription returns the Description field value
func (o *AddFileRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *AddFileRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *AddFileRequest) SetDescription(v string) {
	o.Description = v
}

// GetFileType returns the FileType field value
func (o *AddFileRequest) GetFileType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileType
}

// GetFileTypeOk returns a tuple with the FileType field value
// and a boolean to check if the value has been set.
func (o *AddFileRequest) GetFileTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileType, true
}

// SetFileType sets field value
func (o *AddFileRequest) SetFileType(v string) {
	o.FileType = v
}

// GetId returns the Id field value
func (o *AddFileRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AddFileRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AddFileRequest) SetId(v string) {
	o.Id = v
}

// GetMountPath returns the MountPath field value
func (o *AddFileRequest) GetMountPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MountPath
}

// GetMountPathOk returns a tuple with the MountPath field value
// and a boolean to check if the value has been set.
func (o *AddFileRequest) GetMountPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MountPath, true
}

// SetMountPath sets field value
func (o *AddFileRequest) SetMountPath(v string) {
	o.MountPath = v
}

// GetName returns the Name field value
func (o *AddFileRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddFileRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddFileRequest) SetName(v string) {
	o.Name = v
}

// GetServiceId returns the ServiceId field value
func (o *AddFileRequest) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *AddFileRequest) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *AddFileRequest) SetServiceId(v string) {
	o.ServiceId = v
}

// GetToken returns the Token field value
func (o *AddFileRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *AddFileRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *AddFileRequest) SetToken(v string) {
	o.Token = v
}

func (o AddFileRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddFileRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["content_type"] = o.ContentType
	toSerialize["description"] = o.Description
	toSerialize["fileType"] = o.FileType
	toSerialize["id"] = o.Id
	toSerialize["mountPath"] = o.MountPath
	toSerialize["name"] = o.Name
	toSerialize["serviceId"] = o.ServiceId
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AddFileRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"content_type",
		"description",
		"fileType",
		"id",
		"mountPath",
		"name",
		"serviceId",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddFileRequest := _AddFileRequest{}

	err = json.Unmarshal(data, &varAddFileRequest)

	if err != nil {
		return err
	}

	*o = AddFileRequest(varAddFileRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "content_type")
		delete(additionalProperties, "description")
		delete(additionalProperties, "fileType")
		delete(additionalProperties, "id")
		delete(additionalProperties, "mountPath")
		delete(additionalProperties, "name")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAddFileRequest struct {
	value *AddFileRequest
	isSet bool
}

func (v NullableAddFileRequest) Get() *AddFileRequest {
	return v.value
}

func (v *NullableAddFileRequest) Set(val *AddFileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddFileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddFileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddFileRequest(val *AddFileRequest) *NullableAddFileRequest {
	return &NullableAddFileRequest{value: val, isSet: true}
}

func (v NullableAddFileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddFileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


