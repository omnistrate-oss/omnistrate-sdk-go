/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the UpdateSaaSPortalRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSaaSPortalRequest{}

// UpdateSaaSPortalRequest struct for UpdateSaaSPortalRequest
type UpdateSaaSPortalRequest struct {
	// The custom domain for the SaaS portal
	CustomDomain *string `json:"customDomain,omitempty"`
	// Whether to disable password login for the SaaS portal
	DisablePasswordLogin *bool `json:"disablePasswordLogin,omitempty"`
	EmailConfig *SaaSPortalEmailConfig `json:"emailConfig,omitempty"`
	// The type of service environment
	EnvironmentType string `json:"environmentType"`
	// The Google Analytics tag ID for the SaaS portal
	GoogleAnalyticsTagID *string `json:"googleAnalyticsTagID,omitempty"`
	ImageConfig *SaaSPortalImageConfig `json:"imageConfig,omitempty"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _UpdateSaaSPortalRequest UpdateSaaSPortalRequest

// NewUpdateSaaSPortalRequest instantiates a new UpdateSaaSPortalRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSaaSPortalRequest(environmentType string, token string) *UpdateSaaSPortalRequest {
	this := UpdateSaaSPortalRequest{}
	this.EnvironmentType = environmentType
	this.Token = token
	return &this
}

// NewUpdateSaaSPortalRequestWithDefaults instantiates a new UpdateSaaSPortalRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSaaSPortalRequestWithDefaults() *UpdateSaaSPortalRequest {
	this := UpdateSaaSPortalRequest{}
	return &this
}

// GetCustomDomain returns the CustomDomain field value if set, zero value otherwise.
func (o *UpdateSaaSPortalRequest) GetCustomDomain() string {
	if o == nil || IsNil(o.CustomDomain) {
		var ret string
		return ret
	}
	return *o.CustomDomain
}

// GetCustomDomainOk returns a tuple with the CustomDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSaaSPortalRequest) GetCustomDomainOk() (*string, bool) {
	if o == nil || IsNil(o.CustomDomain) {
		return nil, false
	}
	return o.CustomDomain, true
}

// SetCustomDomain gets a reference to the given string and assigns it to the CustomDomain field.
func (o *UpdateSaaSPortalRequest) SetCustomDomain(v string) {
	o.CustomDomain = &v
}

// GetDisablePasswordLogin returns the DisablePasswordLogin field value if set, zero value otherwise.
func (o *UpdateSaaSPortalRequest) GetDisablePasswordLogin() bool {
	if o == nil || IsNil(o.DisablePasswordLogin) {
		var ret bool
		return ret
	}
	return *o.DisablePasswordLogin
}

// GetDisablePasswordLoginOk returns a tuple with the DisablePasswordLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSaaSPortalRequest) GetDisablePasswordLoginOk() (*bool, bool) {
	if o == nil || IsNil(o.DisablePasswordLogin) {
		return nil, false
	}
	return o.DisablePasswordLogin, true
}

// SetDisablePasswordLogin gets a reference to the given bool and assigns it to the DisablePasswordLogin field.
func (o *UpdateSaaSPortalRequest) SetDisablePasswordLogin(v bool) {
	o.DisablePasswordLogin = &v
}

// GetEmailConfig returns the EmailConfig field value if set, zero value otherwise.
func (o *UpdateSaaSPortalRequest) GetEmailConfig() SaaSPortalEmailConfig {
	if o == nil || IsNil(o.EmailConfig) {
		var ret SaaSPortalEmailConfig
		return ret
	}
	return *o.EmailConfig
}

// GetEmailConfigOk returns a tuple with the EmailConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSaaSPortalRequest) GetEmailConfigOk() (*SaaSPortalEmailConfig, bool) {
	if o == nil || IsNil(o.EmailConfig) {
		return nil, false
	}
	return o.EmailConfig, true
}

// SetEmailConfig gets a reference to the given SaaSPortalEmailConfig and assigns it to the EmailConfig field.
func (o *UpdateSaaSPortalRequest) SetEmailConfig(v SaaSPortalEmailConfig) {
	o.EmailConfig = &v
}

// GetEnvironmentType returns the EnvironmentType field value
func (o *UpdateSaaSPortalRequest) GetEnvironmentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentType
}

// GetEnvironmentTypeOk returns a tuple with the EnvironmentType field value
// and a boolean to check if the value has been set.
func (o *UpdateSaaSPortalRequest) GetEnvironmentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentType, true
}

// SetEnvironmentType sets field value
func (o *UpdateSaaSPortalRequest) SetEnvironmentType(v string) {
	o.EnvironmentType = v
}

// GetGoogleAnalyticsTagID returns the GoogleAnalyticsTagID field value if set, zero value otherwise.
func (o *UpdateSaaSPortalRequest) GetGoogleAnalyticsTagID() string {
	if o == nil || IsNil(o.GoogleAnalyticsTagID) {
		var ret string
		return ret
	}
	return *o.GoogleAnalyticsTagID
}

// GetGoogleAnalyticsTagIDOk returns a tuple with the GoogleAnalyticsTagID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSaaSPortalRequest) GetGoogleAnalyticsTagIDOk() (*string, bool) {
	if o == nil || IsNil(o.GoogleAnalyticsTagID) {
		return nil, false
	}
	return o.GoogleAnalyticsTagID, true
}

// SetGoogleAnalyticsTagID gets a reference to the given string and assigns it to the GoogleAnalyticsTagID field.
func (o *UpdateSaaSPortalRequest) SetGoogleAnalyticsTagID(v string) {
	o.GoogleAnalyticsTagID = &v
}

// GetImageConfig returns the ImageConfig field value if set, zero value otherwise.
func (o *UpdateSaaSPortalRequest) GetImageConfig() SaaSPortalImageConfig {
	if o == nil || IsNil(o.ImageConfig) {
		var ret SaaSPortalImageConfig
		return ret
	}
	return *o.ImageConfig
}

// GetImageConfigOk returns a tuple with the ImageConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSaaSPortalRequest) GetImageConfigOk() (*SaaSPortalImageConfig, bool) {
	if o == nil || IsNil(o.ImageConfig) {
		return nil, false
	}
	return o.ImageConfig, true
}

// SetImageConfig gets a reference to the given SaaSPortalImageConfig and assigns it to the ImageConfig field.
func (o *UpdateSaaSPortalRequest) SetImageConfig(v SaaSPortalImageConfig) {
	o.ImageConfig = &v
}

// GetToken returns the Token field value
func (o *UpdateSaaSPortalRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *UpdateSaaSPortalRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *UpdateSaaSPortalRequest) SetToken(v string) {
	o.Token = v
}

func (o UpdateSaaSPortalRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSaaSPortalRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomDomain) {
		toSerialize["customDomain"] = o.CustomDomain
	}
	if !IsNil(o.DisablePasswordLogin) {
		toSerialize["disablePasswordLogin"] = o.DisablePasswordLogin
	}
	if !IsNil(o.EmailConfig) {
		toSerialize["emailConfig"] = o.EmailConfig
	}
	toSerialize["environmentType"] = o.EnvironmentType
	if !IsNil(o.GoogleAnalyticsTagID) {
		toSerialize["googleAnalyticsTagID"] = o.GoogleAnalyticsTagID
	}
	if !IsNil(o.ImageConfig) {
		toSerialize["imageConfig"] = o.ImageConfig
	}
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateSaaSPortalRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"environmentType",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateSaaSPortalRequest := _UpdateSaaSPortalRequest{}

	err = json.Unmarshal(data, &varUpdateSaaSPortalRequest)

	if err != nil {
		return err
	}

	*o = UpdateSaaSPortalRequest(varUpdateSaaSPortalRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "customDomain")
		delete(additionalProperties, "disablePasswordLogin")
		delete(additionalProperties, "emailConfig")
		delete(additionalProperties, "environmentType")
		delete(additionalProperties, "googleAnalyticsTagID")
		delete(additionalProperties, "imageConfig")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateSaaSPortalRequest struct {
	value *UpdateSaaSPortalRequest
	isSet bool
}

func (v NullableUpdateSaaSPortalRequest) Get() *UpdateSaaSPortalRequest {
	return v.value
}

func (v *NullableUpdateSaaSPortalRequest) Set(val *UpdateSaaSPortalRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSaaSPortalRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSaaSPortalRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSaaSPortalRequest(val *UpdateSaaSPortalRequest) *NullableUpdateSaaSPortalRequest {
	return &NullableUpdateSaaSPortalRequest{value: val, isSet: true}
}

func (v NullableUpdateSaaSPortalRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSaaSPortalRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


