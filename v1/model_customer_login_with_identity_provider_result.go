/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the CustomerLoginWithIdentityProviderResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerLoginWithIdentityProviderResult{}

// CustomerLoginWithIdentityProviderResult struct for CustomerLoginWithIdentityProviderResult
type CustomerLoginWithIdentityProviderResult struct {
	// The jwt token
	JwtToken string `json:"jwtToken"`
	AdditionalProperties map[string]interface{}
}

type _CustomerLoginWithIdentityProviderResult CustomerLoginWithIdentityProviderResult

// NewCustomerLoginWithIdentityProviderResult instantiates a new CustomerLoginWithIdentityProviderResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerLoginWithIdentityProviderResult(jwtToken string) *CustomerLoginWithIdentityProviderResult {
	this := CustomerLoginWithIdentityProviderResult{}
	this.JwtToken = jwtToken
	return &this
}

// NewCustomerLoginWithIdentityProviderResultWithDefaults instantiates a new CustomerLoginWithIdentityProviderResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerLoginWithIdentityProviderResultWithDefaults() *CustomerLoginWithIdentityProviderResult {
	this := CustomerLoginWithIdentityProviderResult{}
	return &this
}

// GetJwtToken returns the JwtToken field value
func (o *CustomerLoginWithIdentityProviderResult) GetJwtToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JwtToken
}

// GetJwtTokenOk returns a tuple with the JwtToken field value
// and a boolean to check if the value has been set.
func (o *CustomerLoginWithIdentityProviderResult) GetJwtTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JwtToken, true
}

// SetJwtToken sets field value
func (o *CustomerLoginWithIdentityProviderResult) SetJwtToken(v string) {
	o.JwtToken = v
}

func (o CustomerLoginWithIdentityProviderResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerLoginWithIdentityProviderResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["jwtToken"] = o.JwtToken

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomerLoginWithIdentityProviderResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"jwtToken",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomerLoginWithIdentityProviderResult := _CustomerLoginWithIdentityProviderResult{}

	err = json.Unmarshal(data, &varCustomerLoginWithIdentityProviderResult)

	if err != nil {
		return err
	}

	*o = CustomerLoginWithIdentityProviderResult(varCustomerLoginWithIdentityProviderResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "jwtToken")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCustomerLoginWithIdentityProviderResult struct {
	value *CustomerLoginWithIdentityProviderResult
	isSet bool
}

func (v NullableCustomerLoginWithIdentityProviderResult) Get() *CustomerLoginWithIdentityProviderResult {
	return v.value
}

func (v *NullableCustomerLoginWithIdentityProviderResult) Set(val *CustomerLoginWithIdentityProviderResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerLoginWithIdentityProviderResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerLoginWithIdentityProviderResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerLoginWithIdentityProviderResult(val *CustomerLoginWithIdentityProviderResult) *NullableCustomerLoginWithIdentityProviderResult {
	return &NullableCustomerLoginWithIdentityProviderResult{value: val, isSet: true}
}

func (v NullableCustomerLoginWithIdentityProviderResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerLoginWithIdentityProviderResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


