/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the CustomerSigninRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerSigninRequest{}

// CustomerSigninRequest struct for CustomerSigninRequest
type CustomerSigninRequest struct {
	Email string `json:"email"`
	// The type of service environment
	EnvironmentType *string `json:"environmentType,omitempty"`
	HashedPassword *string `json:"hashedPassword,omitempty"`
	Password *string `json:"password,omitempty"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _CustomerSigninRequest CustomerSigninRequest

// NewCustomerSigninRequest instantiates a new CustomerSigninRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerSigninRequest(email string, token string) *CustomerSigninRequest {
	this := CustomerSigninRequest{}
	this.Email = email
	this.Token = token
	return &this
}

// NewCustomerSigninRequestWithDefaults instantiates a new CustomerSigninRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerSigninRequestWithDefaults() *CustomerSigninRequest {
	this := CustomerSigninRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *CustomerSigninRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CustomerSigninRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CustomerSigninRequest) SetEmail(v string) {
	o.Email = v
}

// GetEnvironmentType returns the EnvironmentType field value if set, zero value otherwise.
func (o *CustomerSigninRequest) GetEnvironmentType() string {
	if o == nil || IsNil(o.EnvironmentType) {
		var ret string
		return ret
	}
	return *o.EnvironmentType
}

// GetEnvironmentTypeOk returns a tuple with the EnvironmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerSigninRequest) GetEnvironmentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentType) {
		return nil, false
	}
	return o.EnvironmentType, true
}

// SetEnvironmentType gets a reference to the given string and assigns it to the EnvironmentType field.
func (o *CustomerSigninRequest) SetEnvironmentType(v string) {
	o.EnvironmentType = &v
}

// GetHashedPassword returns the HashedPassword field value if set, zero value otherwise.
func (o *CustomerSigninRequest) GetHashedPassword() string {
	if o == nil || IsNil(o.HashedPassword) {
		var ret string
		return ret
	}
	return *o.HashedPassword
}

// GetHashedPasswordOk returns a tuple with the HashedPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerSigninRequest) GetHashedPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.HashedPassword) {
		return nil, false
	}
	return o.HashedPassword, true
}

// SetHashedPassword gets a reference to the given string and assigns it to the HashedPassword field.
func (o *CustomerSigninRequest) SetHashedPassword(v string) {
	o.HashedPassword = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CustomerSigninRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerSigninRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CustomerSigninRequest) SetPassword(v string) {
	o.Password = &v
}

// GetToken returns the Token field value
func (o *CustomerSigninRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *CustomerSigninRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *CustomerSigninRequest) SetToken(v string) {
	o.Token = v
}

func (o CustomerSigninRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerSigninRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	if !IsNil(o.EnvironmentType) {
		toSerialize["environmentType"] = o.EnvironmentType
	}
	if !IsNil(o.HashedPassword) {
		toSerialize["hashedPassword"] = o.HashedPassword
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomerSigninRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomerSigninRequest := _CustomerSigninRequest{}

	err = json.Unmarshal(data, &varCustomerSigninRequest)

	if err != nil {
		return err
	}

	*o = CustomerSigninRequest(varCustomerSigninRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "email")
		delete(additionalProperties, "environmentType")
		delete(additionalProperties, "hashedPassword")
		delete(additionalProperties, "password")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCustomerSigninRequest struct {
	value *CustomerSigninRequest
	isSet bool
}

func (v NullableCustomerSigninRequest) Get() *CustomerSigninRequest {
	return v.value
}

func (v *NullableCustomerSigninRequest) Set(val *CustomerSigninRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerSigninRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerSigninRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerSigninRequest(val *CustomerSigninRequest) *NullableCustomerSigninRequest {
	return &NullableCustomerSigninRequest{value: val, isSet: true}
}

func (v NullableCustomerSigninRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerSigninRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

