/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the EnableBillingProviderRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnableBillingProviderRequest2{}

// EnableBillingProviderRequest2 struct for EnableBillingProviderRequest2
type EnableBillingProviderRequest2 struct {
	// The URL to the balance due page
	BalanceDueLink *string `json:"balanceDueLink,omitempty"`
	// The URL of the logo for the billing provider. Only present when the billing provider is BRING_YOUR_OWN
	LogoURL *string `json:"logoURL,omitempty"`
	// A custom name for the billing provider. Only present when the billing provider is BRING_YOUR_OWN
	Name *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EnableBillingProviderRequest2 EnableBillingProviderRequest2

// NewEnableBillingProviderRequest2 instantiates a new EnableBillingProviderRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnableBillingProviderRequest2() *EnableBillingProviderRequest2 {
	this := EnableBillingProviderRequest2{}
	return &this
}

// NewEnableBillingProviderRequest2WithDefaults instantiates a new EnableBillingProviderRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnableBillingProviderRequest2WithDefaults() *EnableBillingProviderRequest2 {
	this := EnableBillingProviderRequest2{}
	return &this
}

// GetBalanceDueLink returns the BalanceDueLink field value if set, zero value otherwise.
func (o *EnableBillingProviderRequest2) GetBalanceDueLink() string {
	if o == nil || IsNil(o.BalanceDueLink) {
		var ret string
		return ret
	}
	return *o.BalanceDueLink
}

// GetBalanceDueLinkOk returns a tuple with the BalanceDueLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnableBillingProviderRequest2) GetBalanceDueLinkOk() (*string, bool) {
	if o == nil || IsNil(o.BalanceDueLink) {
		return nil, false
	}
	return o.BalanceDueLink, true
}

// SetBalanceDueLink gets a reference to the given string and assigns it to the BalanceDueLink field.
func (o *EnableBillingProviderRequest2) SetBalanceDueLink(v string) {
	o.BalanceDueLink = &v
}

// GetLogoURL returns the LogoURL field value if set, zero value otherwise.
func (o *EnableBillingProviderRequest2) GetLogoURL() string {
	if o == nil || IsNil(o.LogoURL) {
		var ret string
		return ret
	}
	return *o.LogoURL
}

// GetLogoURLOk returns a tuple with the LogoURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnableBillingProviderRequest2) GetLogoURLOk() (*string, bool) {
	if o == nil || IsNil(o.LogoURL) {
		return nil, false
	}
	return o.LogoURL, true
}

// SetLogoURL gets a reference to the given string and assigns it to the LogoURL field.
func (o *EnableBillingProviderRequest2) SetLogoURL(v string) {
	o.LogoURL = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EnableBillingProviderRequest2) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnableBillingProviderRequest2) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EnableBillingProviderRequest2) SetName(v string) {
	o.Name = &v
}

func (o EnableBillingProviderRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnableBillingProviderRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BalanceDueLink) {
		toSerialize["balanceDueLink"] = o.BalanceDueLink
	}
	if !IsNil(o.LogoURL) {
		toSerialize["logoURL"] = o.LogoURL
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EnableBillingProviderRequest2) UnmarshalJSON(data []byte) (err error) {
	varEnableBillingProviderRequest2 := _EnableBillingProviderRequest2{}

	err = json.Unmarshal(data, &varEnableBillingProviderRequest2)

	if err != nil {
		return err
	}

	*o = EnableBillingProviderRequest2(varEnableBillingProviderRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "balanceDueLink")
		delete(additionalProperties, "logoURL")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEnableBillingProviderRequest2 struct {
	value *EnableBillingProviderRequest2
	isSet bool
}

func (v NullableEnableBillingProviderRequest2) Get() *EnableBillingProviderRequest2 {
	return v.value
}

func (v *NullableEnableBillingProviderRequest2) Set(val *EnableBillingProviderRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableEnableBillingProviderRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableEnableBillingProviderRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnableBillingProviderRequest2(val *EnableBillingProviderRequest2) *NullableEnableBillingProviderRequest2 {
	return &NullableEnableBillingProviderRequest2{value: val, isSet: true}
}

func (v NullableEnableBillingProviderRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnableBillingProviderRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

