/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the DescribePipelineResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribePipelineResult{}

// DescribePipelineResult struct for DescribePipelineResult
type DescribePipelineResult struct {
	// Description of the pipeline
	Description *string `json:"description,omitempty"`
	// ID of a Pipeline
	Id *string `json:"id,omitempty"`
	// Name of the pipeline
	Name *string `json:"name,omitempty"`
	// Sequence of service environments to be deployed in the pipeline
	ServiceEnvironmentSequence []string `json:"serviceEnvironmentSequence,omitempty"`
	// ID of a Service
	ServiceId *string `json:"serviceId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DescribePipelineResult DescribePipelineResult

// NewDescribePipelineResult instantiates a new DescribePipelineResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribePipelineResult() *DescribePipelineResult {
	this := DescribePipelineResult{}
	return &this
}

// NewDescribePipelineResultWithDefaults instantiates a new DescribePipelineResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribePipelineResultWithDefaults() *DescribePipelineResult {
	this := DescribePipelineResult{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DescribePipelineResult) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribePipelineResult) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DescribePipelineResult) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DescribePipelineResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribePipelineResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DescribePipelineResult) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DescribePipelineResult) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribePipelineResult) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DescribePipelineResult) SetName(v string) {
	o.Name = &v
}

// GetServiceEnvironmentSequence returns the ServiceEnvironmentSequence field value if set, zero value otherwise.
func (o *DescribePipelineResult) GetServiceEnvironmentSequence() []string {
	if o == nil || IsNil(o.ServiceEnvironmentSequence) {
		var ret []string
		return ret
	}
	return o.ServiceEnvironmentSequence
}

// GetServiceEnvironmentSequenceOk returns a tuple with the ServiceEnvironmentSequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribePipelineResult) GetServiceEnvironmentSequenceOk() ([]string, bool) {
	if o == nil || IsNil(o.ServiceEnvironmentSequence) {
		return nil, false
	}
	return o.ServiceEnvironmentSequence, true
}

// SetServiceEnvironmentSequence gets a reference to the given []string and assigns it to the ServiceEnvironmentSequence field.
func (o *DescribePipelineResult) SetServiceEnvironmentSequence(v []string) {
	o.ServiceEnvironmentSequence = v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *DescribePipelineResult) GetServiceId() string {
	if o == nil || IsNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribePipelineResult) GetServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *DescribePipelineResult) SetServiceId(v string) {
	o.ServiceId = &v
}

func (o DescribePipelineResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribePipelineResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ServiceEnvironmentSequence) {
		toSerialize["serviceEnvironmentSequence"] = o.ServiceEnvironmentSequence
	}
	if !IsNil(o.ServiceId) {
		toSerialize["serviceId"] = o.ServiceId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DescribePipelineResult) UnmarshalJSON(data []byte) (err error) {
	varDescribePipelineResult := _DescribePipelineResult{}

	err = json.Unmarshal(data, &varDescribePipelineResult)

	if err != nil {
		return err
	}

	*o = DescribePipelineResult(varDescribePipelineResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "serviceEnvironmentSequence")
		delete(additionalProperties, "serviceId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDescribePipelineResult struct {
	value *DescribePipelineResult
	isSet bool
}

func (v NullableDescribePipelineResult) Get() *DescribePipelineResult {
	return v.value
}

func (v *NullableDescribePipelineResult) Set(val *DescribePipelineResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribePipelineResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribePipelineResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribePipelineResult(val *DescribePipelineResult) *NullableDescribePipelineResult {
	return &NullableDescribePipelineResult{value: val, isSet: true}
}

func (v NullableDescribePipelineResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribePipelineResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

