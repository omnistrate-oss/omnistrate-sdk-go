/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the SetEnvironmentVariablesRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetEnvironmentVariablesRequest2{}

// SetEnvironmentVariablesRequest2 struct for SetEnvironmentVariablesRequest2
type SetEnvironmentVariablesRequest2 struct {
	// The environment variables that this resource requires
	EnvironmentVariables []EnvironmentVariable `json:"environmentVariables,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SetEnvironmentVariablesRequest2 SetEnvironmentVariablesRequest2

// NewSetEnvironmentVariablesRequest2 instantiates a new SetEnvironmentVariablesRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetEnvironmentVariablesRequest2() *SetEnvironmentVariablesRequest2 {
	this := SetEnvironmentVariablesRequest2{}
	return &this
}

// NewSetEnvironmentVariablesRequest2WithDefaults instantiates a new SetEnvironmentVariablesRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetEnvironmentVariablesRequest2WithDefaults() *SetEnvironmentVariablesRequest2 {
	this := SetEnvironmentVariablesRequest2{}
	return &this
}

// GetEnvironmentVariables returns the EnvironmentVariables field value if set, zero value otherwise.
func (o *SetEnvironmentVariablesRequest2) GetEnvironmentVariables() []EnvironmentVariable {
	if o == nil || IsNil(o.EnvironmentVariables) {
		var ret []EnvironmentVariable
		return ret
	}
	return o.EnvironmentVariables
}

// GetEnvironmentVariablesOk returns a tuple with the EnvironmentVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetEnvironmentVariablesRequest2) GetEnvironmentVariablesOk() ([]EnvironmentVariable, bool) {
	if o == nil || IsNil(o.EnvironmentVariables) {
		return nil, false
	}
	return o.EnvironmentVariables, true
}

// SetEnvironmentVariables gets a reference to the given []EnvironmentVariable and assigns it to the EnvironmentVariables field.
func (o *SetEnvironmentVariablesRequest2) SetEnvironmentVariables(v []EnvironmentVariable) {
	o.EnvironmentVariables = v
}

func (o SetEnvironmentVariablesRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetEnvironmentVariablesRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnvironmentVariables) {
		toSerialize["environmentVariables"] = o.EnvironmentVariables
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SetEnvironmentVariablesRequest2) UnmarshalJSON(data []byte) (err error) {
	varSetEnvironmentVariablesRequest2 := _SetEnvironmentVariablesRequest2{}

	err = json.Unmarshal(data, &varSetEnvironmentVariablesRequest2)

	if err != nil {
		return err
	}

	*o = SetEnvironmentVariablesRequest2(varSetEnvironmentVariablesRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "environmentVariables")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSetEnvironmentVariablesRequest2 struct {
	value *SetEnvironmentVariablesRequest2
	isSet bool
}

func (v NullableSetEnvironmentVariablesRequest2) Get() *SetEnvironmentVariablesRequest2 {
	return v.value
}

func (v *NullableSetEnvironmentVariablesRequest2) Set(val *SetEnvironmentVariablesRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableSetEnvironmentVariablesRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableSetEnvironmentVariablesRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetEnvironmentVariablesRequest2(val *SetEnvironmentVariablesRequest2) *NullableSetEnvironmentVariablesRequest2 {
	return &NullableSetEnvironmentVariablesRequest2{value: val, isSet: true}
}

func (v NullableSetEnvironmentVariablesRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetEnvironmentVariablesRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


