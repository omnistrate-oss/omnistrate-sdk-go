/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the UpdateInstanceStorageVolumeConfigRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInstanceStorageVolumeConfigRequest2{}

// UpdateInstanceStorageVolumeConfigRequest2 struct for UpdateInstanceStorageVolumeConfigRequest2
type UpdateInstanceStorageVolumeConfigRequest2 struct {
	// The IOPS provisioned for the configured instance storage type
	InstanceStorageIops *string `json:"instanceStorageIops,omitempty"`
	// The throughput (in MiBps) provisioned for the configured instance storage type
	InstanceStorageThroughputMiBps *string `json:"instanceStorageThroughputMiBps,omitempty"`
	// The type of the storage for a compute instance
	InstanceStorageType *string `json:"instanceStorageType,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateInstanceStorageVolumeConfigRequest2 UpdateInstanceStorageVolumeConfigRequest2

// NewUpdateInstanceStorageVolumeConfigRequest2 instantiates a new UpdateInstanceStorageVolumeConfigRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInstanceStorageVolumeConfigRequest2() *UpdateInstanceStorageVolumeConfigRequest2 {
	this := UpdateInstanceStorageVolumeConfigRequest2{}
	return &this
}

// NewUpdateInstanceStorageVolumeConfigRequest2WithDefaults instantiates a new UpdateInstanceStorageVolumeConfigRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInstanceStorageVolumeConfigRequest2WithDefaults() *UpdateInstanceStorageVolumeConfigRequest2 {
	this := UpdateInstanceStorageVolumeConfigRequest2{}
	return &this
}

// GetInstanceStorageIops returns the InstanceStorageIops field value if set, zero value otherwise.
func (o *UpdateInstanceStorageVolumeConfigRequest2) GetInstanceStorageIops() string {
	if o == nil || IsNil(o.InstanceStorageIops) {
		var ret string
		return ret
	}
	return *o.InstanceStorageIops
}

// GetInstanceStorageIopsOk returns a tuple with the InstanceStorageIops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceStorageVolumeConfigRequest2) GetInstanceStorageIopsOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceStorageIops) {
		return nil, false
	}
	return o.InstanceStorageIops, true
}

// SetInstanceStorageIops gets a reference to the given string and assigns it to the InstanceStorageIops field.
func (o *UpdateInstanceStorageVolumeConfigRequest2) SetInstanceStorageIops(v string) {
	o.InstanceStorageIops = &v
}

// GetInstanceStorageThroughputMiBps returns the InstanceStorageThroughputMiBps field value if set, zero value otherwise.
func (o *UpdateInstanceStorageVolumeConfigRequest2) GetInstanceStorageThroughputMiBps() string {
	if o == nil || IsNil(o.InstanceStorageThroughputMiBps) {
		var ret string
		return ret
	}
	return *o.InstanceStorageThroughputMiBps
}

// GetInstanceStorageThroughputMiBpsOk returns a tuple with the InstanceStorageThroughputMiBps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceStorageVolumeConfigRequest2) GetInstanceStorageThroughputMiBpsOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceStorageThroughputMiBps) {
		return nil, false
	}
	return o.InstanceStorageThroughputMiBps, true
}

// SetInstanceStorageThroughputMiBps gets a reference to the given string and assigns it to the InstanceStorageThroughputMiBps field.
func (o *UpdateInstanceStorageVolumeConfigRequest2) SetInstanceStorageThroughputMiBps(v string) {
	o.InstanceStorageThroughputMiBps = &v
}

// GetInstanceStorageType returns the InstanceStorageType field value if set, zero value otherwise.
func (o *UpdateInstanceStorageVolumeConfigRequest2) GetInstanceStorageType() string {
	if o == nil || IsNil(o.InstanceStorageType) {
		var ret string
		return ret
	}
	return *o.InstanceStorageType
}

// GetInstanceStorageTypeOk returns a tuple with the InstanceStorageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceStorageVolumeConfigRequest2) GetInstanceStorageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceStorageType) {
		return nil, false
	}
	return o.InstanceStorageType, true
}

// SetInstanceStorageType gets a reference to the given string and assigns it to the InstanceStorageType field.
func (o *UpdateInstanceStorageVolumeConfigRequest2) SetInstanceStorageType(v string) {
	o.InstanceStorageType = &v
}

func (o UpdateInstanceStorageVolumeConfigRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateInstanceStorageVolumeConfigRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstanceStorageIops) {
		toSerialize["instanceStorageIops"] = o.InstanceStorageIops
	}
	if !IsNil(o.InstanceStorageThroughputMiBps) {
		toSerialize["instanceStorageThroughputMiBps"] = o.InstanceStorageThroughputMiBps
	}
	if !IsNil(o.InstanceStorageType) {
		toSerialize["instanceStorageType"] = o.InstanceStorageType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateInstanceStorageVolumeConfigRequest2) UnmarshalJSON(data []byte) (err error) {
	varUpdateInstanceStorageVolumeConfigRequest2 := _UpdateInstanceStorageVolumeConfigRequest2{}

	err = json.Unmarshal(data, &varUpdateInstanceStorageVolumeConfigRequest2)

	if err != nil {
		return err
	}

	*o = UpdateInstanceStorageVolumeConfigRequest2(varUpdateInstanceStorageVolumeConfigRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "instanceStorageIops")
		delete(additionalProperties, "instanceStorageThroughputMiBps")
		delete(additionalProperties, "instanceStorageType")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateInstanceStorageVolumeConfigRequest2 struct {
	value *UpdateInstanceStorageVolumeConfigRequest2
	isSet bool
}

func (v NullableUpdateInstanceStorageVolumeConfigRequest2) Get() *UpdateInstanceStorageVolumeConfigRequest2 {
	return v.value
}

func (v *NullableUpdateInstanceStorageVolumeConfigRequest2) Set(val *UpdateInstanceStorageVolumeConfigRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInstanceStorageVolumeConfigRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInstanceStorageVolumeConfigRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInstanceStorageVolumeConfigRequest2(val *UpdateInstanceStorageVolumeConfigRequest2) *NullableUpdateInstanceStorageVolumeConfigRequest2 {
	return &NullableUpdateInstanceStorageVolumeConfigRequest2{value: val, isSet: true}
}

func (v NullableUpdateInstanceStorageVolumeConfigRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInstanceStorageVolumeConfigRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


