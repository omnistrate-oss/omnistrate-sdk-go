/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the ListVUnitsRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListVUnitsRequest2{}

// ListVUnitsRequest2 struct for ListVUnitsRequest2
type ListVUnitsRequest2 struct {
	// The infra / cloud provider name
	CloudProvider string `json:"cloudProvider"`
	// Region code specific to the cloud-provider
	Region string `json:"region"`
	AdditionalProperties map[string]interface{}
}

type _ListVUnitsRequest2 ListVUnitsRequest2

// NewListVUnitsRequest2 instantiates a new ListVUnitsRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListVUnitsRequest2(cloudProvider string, region string) *ListVUnitsRequest2 {
	this := ListVUnitsRequest2{}
	this.CloudProvider = cloudProvider
	this.Region = region
	return &this
}

// NewListVUnitsRequest2WithDefaults instantiates a new ListVUnitsRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListVUnitsRequest2WithDefaults() *ListVUnitsRequest2 {
	this := ListVUnitsRequest2{}
	return &this
}

// GetCloudProvider returns the CloudProvider field value
func (o *ListVUnitsRequest2) GetCloudProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *ListVUnitsRequest2) GetCloudProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *ListVUnitsRequest2) SetCloudProvider(v string) {
	o.CloudProvider = v
}

// GetRegion returns the Region field value
func (o *ListVUnitsRequest2) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *ListVUnitsRequest2) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *ListVUnitsRequest2) SetRegion(v string) {
	o.Region = v
}

func (o ListVUnitsRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListVUnitsRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cloudProvider"] = o.CloudProvider
	toSerialize["region"] = o.Region

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListVUnitsRequest2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloudProvider",
		"region",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListVUnitsRequest2 := _ListVUnitsRequest2{}

	err = json.Unmarshal(data, &varListVUnitsRequest2)

	if err != nil {
		return err
	}

	*o = ListVUnitsRequest2(varListVUnitsRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cloudProvider")
		delete(additionalProperties, "region")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListVUnitsRequest2 struct {
	value *ListVUnitsRequest2
	isSet bool
}

func (v NullableListVUnitsRequest2) Get() *ListVUnitsRequest2 {
	return v.value
}

func (v *NullableListVUnitsRequest2) Set(val *ListVUnitsRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableListVUnitsRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableListVUnitsRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListVUnitsRequest2(val *ListVUnitsRequest2) *NullableListVUnitsRequest2 {
	return &NullableListVUnitsRequest2{value: val, isSet: true}
}

func (v NullableListVUnitsRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListVUnitsRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

