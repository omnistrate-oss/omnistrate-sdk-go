/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateTierVersionSetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTierVersionSetRequest{}

// CreateTierVersionSetRequest struct for CreateTierVersionSetRequest
type CreateTierVersionSetRequest struct {
	// A brief description of the product-tier version set.
	Description *string `json:"description,omitempty"`
	// The name of the product-tier version set.
	Name *string `json:"name,omitempty"`
	// The parent version of this version set.
	ParentVersion *string `json:"parentVersion,omitempty"`
	// ID of a Product Tier
	ProductTierId string `json:"productTierId"`
	// ID of a Service
	ServiceId string `json:"serviceId"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	// The version-set type of the product-tier.
	Type string `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _CreateTierVersionSetRequest CreateTierVersionSetRequest

// NewCreateTierVersionSetRequest instantiates a new CreateTierVersionSetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTierVersionSetRequest(productTierId string, serviceId string, token string, type_ string) *CreateTierVersionSetRequest {
	this := CreateTierVersionSetRequest{}
	this.ProductTierId = productTierId
	this.ServiceId = serviceId
	this.Token = token
	this.Type = type_
	return &this
}

// NewCreateTierVersionSetRequestWithDefaults instantiates a new CreateTierVersionSetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTierVersionSetRequestWithDefaults() *CreateTierVersionSetRequest {
	this := CreateTierVersionSetRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateTierVersionSetRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTierVersionSetRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateTierVersionSetRequest) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateTierVersionSetRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTierVersionSetRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateTierVersionSetRequest) SetName(v string) {
	o.Name = &v
}

// GetParentVersion returns the ParentVersion field value if set, zero value otherwise.
func (o *CreateTierVersionSetRequest) GetParentVersion() string {
	if o == nil || IsNil(o.ParentVersion) {
		var ret string
		return ret
	}
	return *o.ParentVersion
}

// GetParentVersionOk returns a tuple with the ParentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTierVersionSetRequest) GetParentVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ParentVersion) {
		return nil, false
	}
	return o.ParentVersion, true
}

// SetParentVersion gets a reference to the given string and assigns it to the ParentVersion field.
func (o *CreateTierVersionSetRequest) SetParentVersion(v string) {
	o.ParentVersion = &v
}

// GetProductTierId returns the ProductTierId field value
func (o *CreateTierVersionSetRequest) GetProductTierId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductTierId
}

// GetProductTierIdOk returns a tuple with the ProductTierId field value
// and a boolean to check if the value has been set.
func (o *CreateTierVersionSetRequest) GetProductTierIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductTierId, true
}

// SetProductTierId sets field value
func (o *CreateTierVersionSetRequest) SetProductTierId(v string) {
	o.ProductTierId = v
}

// GetServiceId returns the ServiceId field value
func (o *CreateTierVersionSetRequest) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *CreateTierVersionSetRequest) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *CreateTierVersionSetRequest) SetServiceId(v string) {
	o.ServiceId = v
}

// GetToken returns the Token field value
func (o *CreateTierVersionSetRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *CreateTierVersionSetRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *CreateTierVersionSetRequest) SetToken(v string) {
	o.Token = v
}

// GetType returns the Type field value
func (o *CreateTierVersionSetRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateTierVersionSetRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateTierVersionSetRequest) SetType(v string) {
	o.Type = v
}

func (o CreateTierVersionSetRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTierVersionSetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ParentVersion) {
		toSerialize["parentVersion"] = o.ParentVersion
	}
	toSerialize["productTierId"] = o.ProductTierId
	toSerialize["serviceId"] = o.ServiceId
	toSerialize["token"] = o.Token
	toSerialize["type"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateTierVersionSetRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"productTierId",
		"serviceId",
		"token",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTierVersionSetRequest := _CreateTierVersionSetRequest{}

	err = json.Unmarshal(data, &varCreateTierVersionSetRequest)

	if err != nil {
		return err
	}

	*o = CreateTierVersionSetRequest(varCreateTierVersionSetRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "name")
		delete(additionalProperties, "parentVersion")
		delete(additionalProperties, "productTierId")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "token")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateTierVersionSetRequest struct {
	value *CreateTierVersionSetRequest
	isSet bool
}

func (v NullableCreateTierVersionSetRequest) Get() *CreateTierVersionSetRequest {
	return v.value
}

func (v *NullableCreateTierVersionSetRequest) Set(val *CreateTierVersionSetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTierVersionSetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTierVersionSetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTierVersionSetRequest(val *CreateTierVersionSetRequest) *NullableCreateTierVersionSetRequest {
	return &NullableCreateTierVersionSetRequest{value: val, isSet: true}
}

func (v NullableCreateTierVersionSetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTierVersionSetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

