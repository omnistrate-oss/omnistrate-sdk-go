/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the DescribeServiceProviderOrganizationResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribeServiceProviderOrganizationResult{}

// DescribeServiceProviderOrganizationResult struct for DescribeServiceProviderOrganizationResult
type DescribeServiceProviderOrganizationResult struct {
	DefaultDeploymentCellConfigurations *DeploymentCellConfigurations `json:"DefaultDeploymentCellConfigurations,omitempty"`
	// The default deployment cell configurations for the organization per environment.
	DeploymentCellConfigurationsPerEnv map[string]interface{} `json:"DeploymentCellConfigurationsPerEnv,omitempty"`
	// ID of an Org
	Id *string `json:"id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DescribeServiceProviderOrganizationResult DescribeServiceProviderOrganizationResult

// NewDescribeServiceProviderOrganizationResult instantiates a new DescribeServiceProviderOrganizationResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeServiceProviderOrganizationResult() *DescribeServiceProviderOrganizationResult {
	this := DescribeServiceProviderOrganizationResult{}
	return &this
}

// NewDescribeServiceProviderOrganizationResultWithDefaults instantiates a new DescribeServiceProviderOrganizationResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeServiceProviderOrganizationResultWithDefaults() *DescribeServiceProviderOrganizationResult {
	this := DescribeServiceProviderOrganizationResult{}
	return &this
}

// GetDefaultDeploymentCellConfigurations returns the DefaultDeploymentCellConfigurations field value if set, zero value otherwise.
func (o *DescribeServiceProviderOrganizationResult) GetDefaultDeploymentCellConfigurations() DeploymentCellConfigurations {
	if o == nil || IsNil(o.DefaultDeploymentCellConfigurations) {
		var ret DeploymentCellConfigurations
		return ret
	}
	return *o.DefaultDeploymentCellConfigurations
}

// GetDefaultDeploymentCellConfigurationsOk returns a tuple with the DefaultDeploymentCellConfigurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeServiceProviderOrganizationResult) GetDefaultDeploymentCellConfigurationsOk() (*DeploymentCellConfigurations, bool) {
	if o == nil || IsNil(o.DefaultDeploymentCellConfigurations) {
		return nil, false
	}
	return o.DefaultDeploymentCellConfigurations, true
}

// SetDefaultDeploymentCellConfigurations gets a reference to the given DeploymentCellConfigurations and assigns it to the DefaultDeploymentCellConfigurations field.
func (o *DescribeServiceProviderOrganizationResult) SetDefaultDeploymentCellConfigurations(v DeploymentCellConfigurations) {
	o.DefaultDeploymentCellConfigurations = &v
}

// GetDeploymentCellConfigurationsPerEnv returns the DeploymentCellConfigurationsPerEnv field value if set, zero value otherwise.
func (o *DescribeServiceProviderOrganizationResult) GetDeploymentCellConfigurationsPerEnv() map[string]interface{} {
	if o == nil || IsNil(o.DeploymentCellConfigurationsPerEnv) {
		var ret map[string]interface{}
		return ret
	}
	return o.DeploymentCellConfigurationsPerEnv
}

// GetDeploymentCellConfigurationsPerEnvOk returns a tuple with the DeploymentCellConfigurationsPerEnv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeServiceProviderOrganizationResult) GetDeploymentCellConfigurationsPerEnvOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DeploymentCellConfigurationsPerEnv) {
		return map[string]interface{}{}, false
	}
	return o.DeploymentCellConfigurationsPerEnv, true
}

// SetDeploymentCellConfigurationsPerEnv gets a reference to the given map[string]interface{} and assigns it to the DeploymentCellConfigurationsPerEnv field.
func (o *DescribeServiceProviderOrganizationResult) SetDeploymentCellConfigurationsPerEnv(v map[string]interface{}) {
	o.DeploymentCellConfigurationsPerEnv = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DescribeServiceProviderOrganizationResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeServiceProviderOrganizationResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DescribeServiceProviderOrganizationResult) SetId(v string) {
	o.Id = &v
}

func (o DescribeServiceProviderOrganizationResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeServiceProviderOrganizationResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultDeploymentCellConfigurations) {
		toSerialize["DefaultDeploymentCellConfigurations"] = o.DefaultDeploymentCellConfigurations
	}
	if !IsNil(o.DeploymentCellConfigurationsPerEnv) {
		toSerialize["DeploymentCellConfigurationsPerEnv"] = o.DeploymentCellConfigurationsPerEnv
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DescribeServiceProviderOrganizationResult) UnmarshalJSON(data []byte) (err error) {
	varDescribeServiceProviderOrganizationResult := _DescribeServiceProviderOrganizationResult{}

	err = json.Unmarshal(data, &varDescribeServiceProviderOrganizationResult)

	if err != nil {
		return err
	}

	*o = DescribeServiceProviderOrganizationResult(varDescribeServiceProviderOrganizationResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "DefaultDeploymentCellConfigurations")
		delete(additionalProperties, "DeploymentCellConfigurationsPerEnv")
		delete(additionalProperties, "id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDescribeServiceProviderOrganizationResult struct {
	value *DescribeServiceProviderOrganizationResult
	isSet bool
}

func (v NullableDescribeServiceProviderOrganizationResult) Get() *DescribeServiceProviderOrganizationResult {
	return v.value
}

func (v *NullableDescribeServiceProviderOrganizationResult) Set(val *DescribeServiceProviderOrganizationResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeServiceProviderOrganizationResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeServiceProviderOrganizationResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeServiceProviderOrganizationResult(val *DescribeServiceProviderOrganizationResult) *NullableDescribeServiceProviderOrganizationResult {
	return &NullableDescribeServiceProviderOrganizationResult{value: val, isSet: true}
}

func (v NullableDescribeServiceProviderOrganizationResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeServiceProviderOrganizationResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


