/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateUpgradePathRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUpgradePathRequest{}

// CreateUpgradePathRequest struct for CreateUpgradePathRequest
type CreateUpgradePathRequest struct {
	// A brief description of the upgrade path
	Description string `json:"description"`
	// Name of the upgrade path
	Name string `json:"name"`
	// ID of a Service Environment
	ServiceEnvironmentId string `json:"serviceEnvironmentId"`
	// ID of a Service
	ServiceId *string `json:"serviceId,omitempty"`
	// Version of the Entity to operate on
	SourceVersion string `json:"sourceVersion"`
	// Version of the Entity to operate on
	TargetVersion string `json:"targetVersion"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _CreateUpgradePathRequest CreateUpgradePathRequest

// NewCreateUpgradePathRequest instantiates a new CreateUpgradePathRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUpgradePathRequest(description string, name string, serviceEnvironmentId string, sourceVersion string, targetVersion string, token string) *CreateUpgradePathRequest {
	this := CreateUpgradePathRequest{}
	this.Description = description
	this.Name = name
	this.ServiceEnvironmentId = serviceEnvironmentId
	this.SourceVersion = sourceVersion
	this.TargetVersion = targetVersion
	this.Token = token
	return &this
}

// NewCreateUpgradePathRequestWithDefaults instantiates a new CreateUpgradePathRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUpgradePathRequestWithDefaults() *CreateUpgradePathRequest {
	this := CreateUpgradePathRequest{}
	return &this
}

// GetDescription returns the Description field value
func (o *CreateUpgradePathRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateUpgradePathRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateUpgradePathRequest) SetDescription(v string) {
	o.Description = v
}

// GetName returns the Name field value
func (o *CreateUpgradePathRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateUpgradePathRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateUpgradePathRequest) SetName(v string) {
	o.Name = v
}

// GetServiceEnvironmentId returns the ServiceEnvironmentId field value
func (o *CreateUpgradePathRequest) GetServiceEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceEnvironmentId
}

// GetServiceEnvironmentIdOk returns a tuple with the ServiceEnvironmentId field value
// and a boolean to check if the value has been set.
func (o *CreateUpgradePathRequest) GetServiceEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceEnvironmentId, true
}

// SetServiceEnvironmentId sets field value
func (o *CreateUpgradePathRequest) SetServiceEnvironmentId(v string) {
	o.ServiceEnvironmentId = v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *CreateUpgradePathRequest) GetServiceId() string {
	if o == nil || IsNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUpgradePathRequest) GetServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *CreateUpgradePathRequest) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetSourceVersion returns the SourceVersion field value
func (o *CreateUpgradePathRequest) GetSourceVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceVersion
}

// GetSourceVersionOk returns a tuple with the SourceVersion field value
// and a boolean to check if the value has been set.
func (o *CreateUpgradePathRequest) GetSourceVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceVersion, true
}

// SetSourceVersion sets field value
func (o *CreateUpgradePathRequest) SetSourceVersion(v string) {
	o.SourceVersion = v
}

// GetTargetVersion returns the TargetVersion field value
func (o *CreateUpgradePathRequest) GetTargetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetVersion
}

// GetTargetVersionOk returns a tuple with the TargetVersion field value
// and a boolean to check if the value has been set.
func (o *CreateUpgradePathRequest) GetTargetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetVersion, true
}

// SetTargetVersion sets field value
func (o *CreateUpgradePathRequest) SetTargetVersion(v string) {
	o.TargetVersion = v
}

// GetToken returns the Token field value
func (o *CreateUpgradePathRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *CreateUpgradePathRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *CreateUpgradePathRequest) SetToken(v string) {
	o.Token = v
}

func (o CreateUpgradePathRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUpgradePathRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["name"] = o.Name
	toSerialize["serviceEnvironmentId"] = o.ServiceEnvironmentId
	if !IsNil(o.ServiceId) {
		toSerialize["serviceId"] = o.ServiceId
	}
	toSerialize["sourceVersion"] = o.SourceVersion
	toSerialize["targetVersion"] = o.TargetVersion
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateUpgradePathRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"name",
		"serviceEnvironmentId",
		"sourceVersion",
		"targetVersion",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateUpgradePathRequest := _CreateUpgradePathRequest{}

	err = json.Unmarshal(data, &varCreateUpgradePathRequest)

	if err != nil {
		return err
	}

	*o = CreateUpgradePathRequest(varCreateUpgradePathRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "name")
		delete(additionalProperties, "serviceEnvironmentId")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "sourceVersion")
		delete(additionalProperties, "targetVersion")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateUpgradePathRequest struct {
	value *CreateUpgradePathRequest
	isSet bool
}

func (v NullableCreateUpgradePathRequest) Get() *CreateUpgradePathRequest {
	return v.value
}

func (v *NullableCreateUpgradePathRequest) Set(val *CreateUpgradePathRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUpgradePathRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUpgradePathRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUpgradePathRequest(val *CreateUpgradePathRequest) *NullableCreateUpgradePathRequest {
	return &NullableCreateUpgradePathRequest{value: val, isSet: true}
}

func (v NullableCreateUpgradePathRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUpgradePathRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

