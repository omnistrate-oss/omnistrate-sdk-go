/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the CustomerSignupRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerSignupRequest2{}

// CustomerSignupRequest2 struct for CustomerSignupRequest2
type CustomerSignupRequest2 struct {
	CompanyDescription *string `json:"companyDescription,omitempty"`
	CompanyUrl *string `json:"companyUrl,omitempty"`
	// Email address of the end-user
	Email string `json:"email"`
	LegalCompanyName *string `json:"legalCompanyName,omitempty"`
	// Name of the end-user
	Name string `json:"name"`
	Password string `json:"password"`
	AdditionalProperties map[string]interface{}
}

type _CustomerSignupRequest2 CustomerSignupRequest2

// NewCustomerSignupRequest2 instantiates a new CustomerSignupRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerSignupRequest2(email string, name string, password string) *CustomerSignupRequest2 {
	this := CustomerSignupRequest2{}
	this.Email = email
	var legalCompanyName string = ""
	this.LegalCompanyName = &legalCompanyName
	this.Name = name
	this.Password = password
	return &this
}

// NewCustomerSignupRequest2WithDefaults instantiates a new CustomerSignupRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerSignupRequest2WithDefaults() *CustomerSignupRequest2 {
	this := CustomerSignupRequest2{}
	var legalCompanyName string = ""
	this.LegalCompanyName = &legalCompanyName
	return &this
}

// GetCompanyDescription returns the CompanyDescription field value if set, zero value otherwise.
func (o *CustomerSignupRequest2) GetCompanyDescription() string {
	if o == nil || IsNil(o.CompanyDescription) {
		var ret string
		return ret
	}
	return *o.CompanyDescription
}

// GetCompanyDescriptionOk returns a tuple with the CompanyDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerSignupRequest2) GetCompanyDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyDescription) {
		return nil, false
	}
	return o.CompanyDescription, true
}

// SetCompanyDescription gets a reference to the given string and assigns it to the CompanyDescription field.
func (o *CustomerSignupRequest2) SetCompanyDescription(v string) {
	o.CompanyDescription = &v
}

// GetCompanyUrl returns the CompanyUrl field value if set, zero value otherwise.
func (o *CustomerSignupRequest2) GetCompanyUrl() string {
	if o == nil || IsNil(o.CompanyUrl) {
		var ret string
		return ret
	}
	return *o.CompanyUrl
}

// GetCompanyUrlOk returns a tuple with the CompanyUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerSignupRequest2) GetCompanyUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyUrl) {
		return nil, false
	}
	return o.CompanyUrl, true
}

// SetCompanyUrl gets a reference to the given string and assigns it to the CompanyUrl field.
func (o *CustomerSignupRequest2) SetCompanyUrl(v string) {
	o.CompanyUrl = &v
}

// GetEmail returns the Email field value
func (o *CustomerSignupRequest2) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CustomerSignupRequest2) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CustomerSignupRequest2) SetEmail(v string) {
	o.Email = v
}

// GetLegalCompanyName returns the LegalCompanyName field value if set, zero value otherwise.
func (o *CustomerSignupRequest2) GetLegalCompanyName() string {
	if o == nil || IsNil(o.LegalCompanyName) {
		var ret string
		return ret
	}
	return *o.LegalCompanyName
}

// GetLegalCompanyNameOk returns a tuple with the LegalCompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerSignupRequest2) GetLegalCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.LegalCompanyName) {
		return nil, false
	}
	return o.LegalCompanyName, true
}

// SetLegalCompanyName gets a reference to the given string and assigns it to the LegalCompanyName field.
func (o *CustomerSignupRequest2) SetLegalCompanyName(v string) {
	o.LegalCompanyName = &v
}

// GetName returns the Name field value
func (o *CustomerSignupRequest2) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CustomerSignupRequest2) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CustomerSignupRequest2) SetName(v string) {
	o.Name = v
}

// GetPassword returns the Password field value
func (o *CustomerSignupRequest2) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *CustomerSignupRequest2) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *CustomerSignupRequest2) SetPassword(v string) {
	o.Password = v
}

func (o CustomerSignupRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerSignupRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CompanyDescription) {
		toSerialize["companyDescription"] = o.CompanyDescription
	}
	if !IsNil(o.CompanyUrl) {
		toSerialize["companyUrl"] = o.CompanyUrl
	}
	toSerialize["email"] = o.Email
	if !IsNil(o.LegalCompanyName) {
		toSerialize["legalCompanyName"] = o.LegalCompanyName
	}
	toSerialize["name"] = o.Name
	toSerialize["password"] = o.Password

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomerSignupRequest2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
		"name",
		"password",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomerSignupRequest2 := _CustomerSignupRequest2{}

	err = json.Unmarshal(data, &varCustomerSignupRequest2)

	if err != nil {
		return err
	}

	*o = CustomerSignupRequest2(varCustomerSignupRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "companyDescription")
		delete(additionalProperties, "companyUrl")
		delete(additionalProperties, "email")
		delete(additionalProperties, "legalCompanyName")
		delete(additionalProperties, "name")
		delete(additionalProperties, "password")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCustomerSignupRequest2 struct {
	value *CustomerSignupRequest2
	isSet bool
}

func (v NullableCustomerSignupRequest2) Get() *CustomerSignupRequest2 {
	return v.value
}

func (v *NullableCustomerSignupRequest2) Set(val *CustomerSignupRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerSignupRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerSignupRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerSignupRequest2(val *CustomerSignupRequest2) *NullableCustomerSignupRequest2 {
	return &NullableCustomerSignupRequest2{value: val, isSet: true}
}

func (v NullableCustomerSignupRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerSignupRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


