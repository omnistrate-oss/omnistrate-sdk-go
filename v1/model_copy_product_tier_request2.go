/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the CopyProductTierRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyProductTierRequest2{}

// CopyProductTierRequest2 struct for CopyProductTierRequest2
type CopyProductTierRequest2 struct {
	// Auto approve subscription or not
	AutoApproveSubscription *bool `json:"autoApproveSubscription,omitempty"`
	// The AWS regions that this product tier is available on
	AwsRegions []string `json:"awsRegions,omitempty"`
	// The Azure regions that this product tier is available on
	AzureRegions []string `json:"azureRegions,omitempty"`
	// A brief description of the product tier
	Description string `json:"description"`
	// Documentation
	Documentation *string `json:"documentation,omitempty"`
	// The GCP regions that this product tier is available on
	GcpRegions []string `json:"gcpRegions,omitempty"`
	// Name of the product tier
	Name string `json:"name"`
	// A brief description for the end user of the product tier
	PlanDescription *string `json:"planDescription,omitempty"`
	// Pricing
	Pricing interface{} `json:"pricing,omitempty"`
	// Service model ID
	ServiceModelId string `json:"serviceModelId"`
	// Support
	Support *string `json:"support,omitempty"`
	// Tier type
	TargetTierType *string `json:"targetTierType,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CopyProductTierRequest2 CopyProductTierRequest2

// NewCopyProductTierRequest2 instantiates a new CopyProductTierRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyProductTierRequest2(description string, name string, serviceModelId string) *CopyProductTierRequest2 {
	this := CopyProductTierRequest2{}
	this.Description = description
	this.Name = name
	this.ServiceModelId = serviceModelId
	return &this
}

// NewCopyProductTierRequest2WithDefaults instantiates a new CopyProductTierRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyProductTierRequest2WithDefaults() *CopyProductTierRequest2 {
	this := CopyProductTierRequest2{}
	return &this
}

// GetAutoApproveSubscription returns the AutoApproveSubscription field value if set, zero value otherwise.
func (o *CopyProductTierRequest2) GetAutoApproveSubscription() bool {
	if o == nil || IsNil(o.AutoApproveSubscription) {
		var ret bool
		return ret
	}
	return *o.AutoApproveSubscription
}

// GetAutoApproveSubscriptionOk returns a tuple with the AutoApproveSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyProductTierRequest2) GetAutoApproveSubscriptionOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoApproveSubscription) {
		return nil, false
	}
	return o.AutoApproveSubscription, true
}

// SetAutoApproveSubscription gets a reference to the given bool and assigns it to the AutoApproveSubscription field.
func (o *CopyProductTierRequest2) SetAutoApproveSubscription(v bool) {
	o.AutoApproveSubscription = &v
}

// GetAwsRegions returns the AwsRegions field value if set, zero value otherwise.
func (o *CopyProductTierRequest2) GetAwsRegions() []string {
	if o == nil || IsNil(o.AwsRegions) {
		var ret []string
		return ret
	}
	return o.AwsRegions
}

// GetAwsRegionsOk returns a tuple with the AwsRegions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyProductTierRequest2) GetAwsRegionsOk() ([]string, bool) {
	if o == nil || IsNil(o.AwsRegions) {
		return nil, false
	}
	return o.AwsRegions, true
}

// SetAwsRegions gets a reference to the given []string and assigns it to the AwsRegions field.
func (o *CopyProductTierRequest2) SetAwsRegions(v []string) {
	o.AwsRegions = v
}

// GetAzureRegions returns the AzureRegions field value if set, zero value otherwise.
func (o *CopyProductTierRequest2) GetAzureRegions() []string {
	if o == nil || IsNil(o.AzureRegions) {
		var ret []string
		return ret
	}
	return o.AzureRegions
}

// GetAzureRegionsOk returns a tuple with the AzureRegions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyProductTierRequest2) GetAzureRegionsOk() ([]string, bool) {
	if o == nil || IsNil(o.AzureRegions) {
		return nil, false
	}
	return o.AzureRegions, true
}

// SetAzureRegions gets a reference to the given []string and assigns it to the AzureRegions field.
func (o *CopyProductTierRequest2) SetAzureRegions(v []string) {
	o.AzureRegions = v
}

// GetDescription returns the Description field value
func (o *CopyProductTierRequest2) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CopyProductTierRequest2) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CopyProductTierRequest2) SetDescription(v string) {
	o.Description = v
}

// GetDocumentation returns the Documentation field value if set, zero value otherwise.
func (o *CopyProductTierRequest2) GetDocumentation() string {
	if o == nil || IsNil(o.Documentation) {
		var ret string
		return ret
	}
	return *o.Documentation
}

// GetDocumentationOk returns a tuple with the Documentation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyProductTierRequest2) GetDocumentationOk() (*string, bool) {
	if o == nil || IsNil(o.Documentation) {
		return nil, false
	}
	return o.Documentation, true
}

// SetDocumentation gets a reference to the given string and assigns it to the Documentation field.
func (o *CopyProductTierRequest2) SetDocumentation(v string) {
	o.Documentation = &v
}

// GetGcpRegions returns the GcpRegions field value if set, zero value otherwise.
func (o *CopyProductTierRequest2) GetGcpRegions() []string {
	if o == nil || IsNil(o.GcpRegions) {
		var ret []string
		return ret
	}
	return o.GcpRegions
}

// GetGcpRegionsOk returns a tuple with the GcpRegions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyProductTierRequest2) GetGcpRegionsOk() ([]string, bool) {
	if o == nil || IsNil(o.GcpRegions) {
		return nil, false
	}
	return o.GcpRegions, true
}

// SetGcpRegions gets a reference to the given []string and assigns it to the GcpRegions field.
func (o *CopyProductTierRequest2) SetGcpRegions(v []string) {
	o.GcpRegions = v
}

// GetName returns the Name field value
func (o *CopyProductTierRequest2) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CopyProductTierRequest2) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CopyProductTierRequest2) SetName(v string) {
	o.Name = v
}

// GetPlanDescription returns the PlanDescription field value if set, zero value otherwise.
func (o *CopyProductTierRequest2) GetPlanDescription() string {
	if o == nil || IsNil(o.PlanDescription) {
		var ret string
		return ret
	}
	return *o.PlanDescription
}

// GetPlanDescriptionOk returns a tuple with the PlanDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyProductTierRequest2) GetPlanDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.PlanDescription) {
		return nil, false
	}
	return o.PlanDescription, true
}

// SetPlanDescription gets a reference to the given string and assigns it to the PlanDescription field.
func (o *CopyProductTierRequest2) SetPlanDescription(v string) {
	o.PlanDescription = &v
}

// GetPricing returns the Pricing field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CopyProductTierRequest2) GetPricing() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Pricing
}

// GetPricingOk returns a tuple with the Pricing field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CopyProductTierRequest2) GetPricingOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Pricing) {
		return nil, false
	}
	return &o.Pricing, true
}

// SetPricing gets a reference to the given interface{} and assigns it to the Pricing field.
func (o *CopyProductTierRequest2) SetPricing(v interface{}) {
	o.Pricing = v
}

// GetServiceModelId returns the ServiceModelId field value
func (o *CopyProductTierRequest2) GetServiceModelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceModelId
}

// GetServiceModelIdOk returns a tuple with the ServiceModelId field value
// and a boolean to check if the value has been set.
func (o *CopyProductTierRequest2) GetServiceModelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceModelId, true
}

// SetServiceModelId sets field value
func (o *CopyProductTierRequest2) SetServiceModelId(v string) {
	o.ServiceModelId = v
}

// GetSupport returns the Support field value if set, zero value otherwise.
func (o *CopyProductTierRequest2) GetSupport() string {
	if o == nil || IsNil(o.Support) {
		var ret string
		return ret
	}
	return *o.Support
}

// GetSupportOk returns a tuple with the Support field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyProductTierRequest2) GetSupportOk() (*string, bool) {
	if o == nil || IsNil(o.Support) {
		return nil, false
	}
	return o.Support, true
}

// SetSupport gets a reference to the given string and assigns it to the Support field.
func (o *CopyProductTierRequest2) SetSupport(v string) {
	o.Support = &v
}

// GetTargetTierType returns the TargetTierType field value if set, zero value otherwise.
func (o *CopyProductTierRequest2) GetTargetTierType() string {
	if o == nil || IsNil(o.TargetTierType) {
		var ret string
		return ret
	}
	return *o.TargetTierType
}

// GetTargetTierTypeOk returns a tuple with the TargetTierType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyProductTierRequest2) GetTargetTierTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TargetTierType) {
		return nil, false
	}
	return o.TargetTierType, true
}

// SetTargetTierType gets a reference to the given string and assigns it to the TargetTierType field.
func (o *CopyProductTierRequest2) SetTargetTierType(v string) {
	o.TargetTierType = &v
}

func (o CopyProductTierRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyProductTierRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AutoApproveSubscription) {
		toSerialize["autoApproveSubscription"] = o.AutoApproveSubscription
	}
	if !IsNil(o.AwsRegions) {
		toSerialize["awsRegions"] = o.AwsRegions
	}
	if !IsNil(o.AzureRegions) {
		toSerialize["azureRegions"] = o.AzureRegions
	}
	toSerialize["description"] = o.Description
	if !IsNil(o.Documentation) {
		toSerialize["documentation"] = o.Documentation
	}
	if !IsNil(o.GcpRegions) {
		toSerialize["gcpRegions"] = o.GcpRegions
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.PlanDescription) {
		toSerialize["planDescription"] = o.PlanDescription
	}
	if o.Pricing != nil {
		toSerialize["pricing"] = o.Pricing
	}
	toSerialize["serviceModelId"] = o.ServiceModelId
	if !IsNil(o.Support) {
		toSerialize["support"] = o.Support
	}
	if !IsNil(o.TargetTierType) {
		toSerialize["targetTierType"] = o.TargetTierType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CopyProductTierRequest2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"name",
		"serviceModelId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCopyProductTierRequest2 := _CopyProductTierRequest2{}

	err = json.Unmarshal(data, &varCopyProductTierRequest2)

	if err != nil {
		return err
	}

	*o = CopyProductTierRequest2(varCopyProductTierRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "autoApproveSubscription")
		delete(additionalProperties, "awsRegions")
		delete(additionalProperties, "azureRegions")
		delete(additionalProperties, "description")
		delete(additionalProperties, "documentation")
		delete(additionalProperties, "gcpRegions")
		delete(additionalProperties, "name")
		delete(additionalProperties, "planDescription")
		delete(additionalProperties, "pricing")
		delete(additionalProperties, "serviceModelId")
		delete(additionalProperties, "support")
		delete(additionalProperties, "targetTierType")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCopyProductTierRequest2 struct {
	value *CopyProductTierRequest2
	isSet bool
}

func (v NullableCopyProductTierRequest2) Get() *CopyProductTierRequest2 {
	return v.value
}

func (v *NullableCopyProductTierRequest2) Set(val *CopyProductTierRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyProductTierRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyProductTierRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyProductTierRequest2(val *CopyProductTierRequest2) *NullableCopyProductTierRequest2 {
	return &NullableCopyProductTierRequest2{value: val, isSet: true}
}

func (v NullableCopyProductTierRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyProductTierRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


