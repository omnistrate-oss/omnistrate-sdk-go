/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateStorageVolumeConfigRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateStorageVolumeConfigRequest{}

// CreateStorageVolumeConfigRequest struct for CreateStorageVolumeConfigRequest
type CreateStorageVolumeConfigRequest struct {
	// The type of the fixed storage for the cluster
	ClusterStorageType *string `json:"clusterStorageType,omitempty"`
	// A brief description of the context for the storage volume pool
	Description string `json:"description"`
	// Disable backup for the storage volume
	DisableBackup *bool `json:"disableBackup,omitempty"`
	// The IOPS provisioned for the configured instance storage type
	InstanceStorageIops *string `json:"instanceStorageIops,omitempty"`
	// The storage size (in Gi) provisioned for the configured instance storage type
	InstanceStorageSizeGi *string `json:"instanceStorageSizeGi,omitempty"`
	// The throughput (in MiBps) provisioned for the configured instance storage type
	InstanceStorageThroughputMiBps *string `json:"instanceStorageThroughputMiBps,omitempty"`
	// The type of the storage for a compute instance
	InstanceStorageType *string `json:"instanceStorageType,omitempty"`
	// Name of the storage volume pool
	Name string `json:"name"`
	// ID of a Service
	ServiceId string `json:"serviceId"`
	// The storage resource ID
	StorageResourceID *string `json:"storageResourceID,omitempty"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _CreateStorageVolumeConfigRequest CreateStorageVolumeConfigRequest

// NewCreateStorageVolumeConfigRequest instantiates a new CreateStorageVolumeConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateStorageVolumeConfigRequest(description string, name string, serviceId string, token string) *CreateStorageVolumeConfigRequest {
	this := CreateStorageVolumeConfigRequest{}
	this.Description = description
	this.Name = name
	this.ServiceId = serviceId
	this.Token = token
	return &this
}

// NewCreateStorageVolumeConfigRequestWithDefaults instantiates a new CreateStorageVolumeConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateStorageVolumeConfigRequestWithDefaults() *CreateStorageVolumeConfigRequest {
	this := CreateStorageVolumeConfigRequest{}
	return &this
}

// GetClusterStorageType returns the ClusterStorageType field value if set, zero value otherwise.
func (o *CreateStorageVolumeConfigRequest) GetClusterStorageType() string {
	if o == nil || IsNil(o.ClusterStorageType) {
		var ret string
		return ret
	}
	return *o.ClusterStorageType
}

// GetClusterStorageTypeOk returns a tuple with the ClusterStorageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest) GetClusterStorageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterStorageType) {
		return nil, false
	}
	return o.ClusterStorageType, true
}

// SetClusterStorageType gets a reference to the given string and assigns it to the ClusterStorageType field.
func (o *CreateStorageVolumeConfigRequest) SetClusterStorageType(v string) {
	o.ClusterStorageType = &v
}

// GetDescription returns the Description field value
func (o *CreateStorageVolumeConfigRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateStorageVolumeConfigRequest) SetDescription(v string) {
	o.Description = v
}

// GetDisableBackup returns the DisableBackup field value if set, zero value otherwise.
func (o *CreateStorageVolumeConfigRequest) GetDisableBackup() bool {
	if o == nil || IsNil(o.DisableBackup) {
		var ret bool
		return ret
	}
	return *o.DisableBackup
}

// GetDisableBackupOk returns a tuple with the DisableBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest) GetDisableBackupOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableBackup) {
		return nil, false
	}
	return o.DisableBackup, true
}

// SetDisableBackup gets a reference to the given bool and assigns it to the DisableBackup field.
func (o *CreateStorageVolumeConfigRequest) SetDisableBackup(v bool) {
	o.DisableBackup = &v
}

// GetInstanceStorageIops returns the InstanceStorageIops field value if set, zero value otherwise.
func (o *CreateStorageVolumeConfigRequest) GetInstanceStorageIops() string {
	if o == nil || IsNil(o.InstanceStorageIops) {
		var ret string
		return ret
	}
	return *o.InstanceStorageIops
}

// GetInstanceStorageIopsOk returns a tuple with the InstanceStorageIops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest) GetInstanceStorageIopsOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceStorageIops) {
		return nil, false
	}
	return o.InstanceStorageIops, true
}

// SetInstanceStorageIops gets a reference to the given string and assigns it to the InstanceStorageIops field.
func (o *CreateStorageVolumeConfigRequest) SetInstanceStorageIops(v string) {
	o.InstanceStorageIops = &v
}

// GetInstanceStorageSizeGi returns the InstanceStorageSizeGi field value if set, zero value otherwise.
func (o *CreateStorageVolumeConfigRequest) GetInstanceStorageSizeGi() string {
	if o == nil || IsNil(o.InstanceStorageSizeGi) {
		var ret string
		return ret
	}
	return *o.InstanceStorageSizeGi
}

// GetInstanceStorageSizeGiOk returns a tuple with the InstanceStorageSizeGi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest) GetInstanceStorageSizeGiOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceStorageSizeGi) {
		return nil, false
	}
	return o.InstanceStorageSizeGi, true
}

// SetInstanceStorageSizeGi gets a reference to the given string and assigns it to the InstanceStorageSizeGi field.
func (o *CreateStorageVolumeConfigRequest) SetInstanceStorageSizeGi(v string) {
	o.InstanceStorageSizeGi = &v
}

// GetInstanceStorageThroughputMiBps returns the InstanceStorageThroughputMiBps field value if set, zero value otherwise.
func (o *CreateStorageVolumeConfigRequest) GetInstanceStorageThroughputMiBps() string {
	if o == nil || IsNil(o.InstanceStorageThroughputMiBps) {
		var ret string
		return ret
	}
	return *o.InstanceStorageThroughputMiBps
}

// GetInstanceStorageThroughputMiBpsOk returns a tuple with the InstanceStorageThroughputMiBps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest) GetInstanceStorageThroughputMiBpsOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceStorageThroughputMiBps) {
		return nil, false
	}
	return o.InstanceStorageThroughputMiBps, true
}

// SetInstanceStorageThroughputMiBps gets a reference to the given string and assigns it to the InstanceStorageThroughputMiBps field.
func (o *CreateStorageVolumeConfigRequest) SetInstanceStorageThroughputMiBps(v string) {
	o.InstanceStorageThroughputMiBps = &v
}

// GetInstanceStorageType returns the InstanceStorageType field value if set, zero value otherwise.
func (o *CreateStorageVolumeConfigRequest) GetInstanceStorageType() string {
	if o == nil || IsNil(o.InstanceStorageType) {
		var ret string
		return ret
	}
	return *o.InstanceStorageType
}

// GetInstanceStorageTypeOk returns a tuple with the InstanceStorageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest) GetInstanceStorageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceStorageType) {
		return nil, false
	}
	return o.InstanceStorageType, true
}

// SetInstanceStorageType gets a reference to the given string and assigns it to the InstanceStorageType field.
func (o *CreateStorageVolumeConfigRequest) SetInstanceStorageType(v string) {
	o.InstanceStorageType = &v
}

// GetName returns the Name field value
func (o *CreateStorageVolumeConfigRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateStorageVolumeConfigRequest) SetName(v string) {
	o.Name = v
}

// GetServiceId returns the ServiceId field value
func (o *CreateStorageVolumeConfigRequest) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *CreateStorageVolumeConfigRequest) SetServiceId(v string) {
	o.ServiceId = v
}

// GetStorageResourceID returns the StorageResourceID field value if set, zero value otherwise.
func (o *CreateStorageVolumeConfigRequest) GetStorageResourceID() string {
	if o == nil || IsNil(o.StorageResourceID) {
		var ret string
		return ret
	}
	return *o.StorageResourceID
}

// GetStorageResourceIDOk returns a tuple with the StorageResourceID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest) GetStorageResourceIDOk() (*string, bool) {
	if o == nil || IsNil(o.StorageResourceID) {
		return nil, false
	}
	return o.StorageResourceID, true
}

// SetStorageResourceID gets a reference to the given string and assigns it to the StorageResourceID field.
func (o *CreateStorageVolumeConfigRequest) SetStorageResourceID(v string) {
	o.StorageResourceID = &v
}

// GetToken returns the Token field value
func (o *CreateStorageVolumeConfigRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *CreateStorageVolumeConfigRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *CreateStorageVolumeConfigRequest) SetToken(v string) {
	o.Token = v
}

func (o CreateStorageVolumeConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateStorageVolumeConfigRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClusterStorageType) {
		toSerialize["clusterStorageType"] = o.ClusterStorageType
	}
	toSerialize["description"] = o.Description
	if !IsNil(o.DisableBackup) {
		toSerialize["disableBackup"] = o.DisableBackup
	}
	if !IsNil(o.InstanceStorageIops) {
		toSerialize["instanceStorageIops"] = o.InstanceStorageIops
	}
	if !IsNil(o.InstanceStorageSizeGi) {
		toSerialize["instanceStorageSizeGi"] = o.InstanceStorageSizeGi
	}
	if !IsNil(o.InstanceStorageThroughputMiBps) {
		toSerialize["instanceStorageThroughputMiBps"] = o.InstanceStorageThroughputMiBps
	}
	if !IsNil(o.InstanceStorageType) {
		toSerialize["instanceStorageType"] = o.InstanceStorageType
	}
	toSerialize["name"] = o.Name
	toSerialize["serviceId"] = o.ServiceId
	if !IsNil(o.StorageResourceID) {
		toSerialize["storageResourceID"] = o.StorageResourceID
	}
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateStorageVolumeConfigRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"name",
		"serviceId",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateStorageVolumeConfigRequest := _CreateStorageVolumeConfigRequest{}

	err = json.Unmarshal(data, &varCreateStorageVolumeConfigRequest)

	if err != nil {
		return err
	}

	*o = CreateStorageVolumeConfigRequest(varCreateStorageVolumeConfigRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "clusterStorageType")
		delete(additionalProperties, "description")
		delete(additionalProperties, "disableBackup")
		delete(additionalProperties, "instanceStorageIops")
		delete(additionalProperties, "instanceStorageSizeGi")
		delete(additionalProperties, "instanceStorageThroughputMiBps")
		delete(additionalProperties, "instanceStorageType")
		delete(additionalProperties, "name")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "storageResourceID")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateStorageVolumeConfigRequest struct {
	value *CreateStorageVolumeConfigRequest
	isSet bool
}

func (v NullableCreateStorageVolumeConfigRequest) Get() *CreateStorageVolumeConfigRequest {
	return v.value
}

func (v *NullableCreateStorageVolumeConfigRequest) Set(val *CreateStorageVolumeConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateStorageVolumeConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateStorageVolumeConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateStorageVolumeConfigRequest(val *CreateStorageVolumeConfigRequest) *NullableCreateStorageVolumeConfigRequest {
	return &NullableCreateStorageVolumeConfigRequest{value: val, isSet: true}
}

func (v NullableCreateStorageVolumeConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateStorageVolumeConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


