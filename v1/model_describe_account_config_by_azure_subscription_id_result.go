/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the DescribeAccountConfigByAzureSubscriptionIDResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribeAccountConfigByAzureSubscriptionIDResult{}

// DescribeAccountConfigByAzureSubscriptionIDResult Account configuration for Azure
type DescribeAccountConfigByAzureSubscriptionIDResult struct {
	// The Azure subscription ID
	AzureSubscriptionID string `json:"azureSubscriptionID"`
	// The Azure tenant ID
	AzureTenantID string `json:"azureTenantID"`
	// The BYOA instance IDs that this account config is tied to
	ByoaInstanceIDs []string `json:"byoaInstanceIDs,omitempty"`
	// ID of an CloudProvider
	CloudProviderId string `json:"cloudProviderId"`
	// The description for the account
	Description string `json:"description"`
	// ID of an Account Config
	Id string `json:"id"`
	// The name of the account
	Name string `json:"name"`
	// The status of the account configuration
	Status string `json:"status"`
	// The status message of the account
	StatusMessage string `json:"statusMessage"`
	AdditionalProperties map[string]interface{}
}

type _DescribeAccountConfigByAzureSubscriptionIDResult DescribeAccountConfigByAzureSubscriptionIDResult

// NewDescribeAccountConfigByAzureSubscriptionIDResult instantiates a new DescribeAccountConfigByAzureSubscriptionIDResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeAccountConfigByAzureSubscriptionIDResult(azureSubscriptionID string, azureTenantID string, cloudProviderId string, description string, id string, name string, status string, statusMessage string) *DescribeAccountConfigByAzureSubscriptionIDResult {
	this := DescribeAccountConfigByAzureSubscriptionIDResult{}
	this.AzureSubscriptionID = azureSubscriptionID
	this.AzureTenantID = azureTenantID
	this.CloudProviderId = cloudProviderId
	this.Description = description
	this.Id = id
	this.Name = name
	this.Status = status
	this.StatusMessage = statusMessage
	return &this
}

// NewDescribeAccountConfigByAzureSubscriptionIDResultWithDefaults instantiates a new DescribeAccountConfigByAzureSubscriptionIDResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeAccountConfigByAzureSubscriptionIDResultWithDefaults() *DescribeAccountConfigByAzureSubscriptionIDResult {
	this := DescribeAccountConfigByAzureSubscriptionIDResult{}
	return &this
}

// GetAzureSubscriptionID returns the AzureSubscriptionID field value
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) GetAzureSubscriptionID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AzureSubscriptionID
}

// GetAzureSubscriptionIDOk returns a tuple with the AzureSubscriptionID field value
// and a boolean to check if the value has been set.
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) GetAzureSubscriptionIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AzureSubscriptionID, true
}

// SetAzureSubscriptionID sets field value
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) SetAzureSubscriptionID(v string) {
	o.AzureSubscriptionID = v
}

// GetAzureTenantID returns the AzureTenantID field value
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) GetAzureTenantID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AzureTenantID
}

// GetAzureTenantIDOk returns a tuple with the AzureTenantID field value
// and a boolean to check if the value has been set.
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) GetAzureTenantIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AzureTenantID, true
}

// SetAzureTenantID sets field value
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) SetAzureTenantID(v string) {
	o.AzureTenantID = v
}

// GetByoaInstanceIDs returns the ByoaInstanceIDs field value if set, zero value otherwise.
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) GetByoaInstanceIDs() []string {
	if o == nil || IsNil(o.ByoaInstanceIDs) {
		var ret []string
		return ret
	}
	return o.ByoaInstanceIDs
}

// GetByoaInstanceIDsOk returns a tuple with the ByoaInstanceIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) GetByoaInstanceIDsOk() ([]string, bool) {
	if o == nil || IsNil(o.ByoaInstanceIDs) {
		return nil, false
	}
	return o.ByoaInstanceIDs, true
}

// SetByoaInstanceIDs gets a reference to the given []string and assigns it to the ByoaInstanceIDs field.
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) SetByoaInstanceIDs(v []string) {
	o.ByoaInstanceIDs = v
}

// GetCloudProviderId returns the CloudProviderId field value
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) GetCloudProviderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProviderId
}

// GetCloudProviderIdOk returns a tuple with the CloudProviderId field value
// and a boolean to check if the value has been set.
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) GetCloudProviderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProviderId, true
}

// SetCloudProviderId sets field value
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) SetCloudProviderId(v string) {
	o.CloudProviderId = v
}

// GetDescription returns the Description field value
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) SetDescription(v string) {
	o.Description = v
}

// GetId returns the Id field value
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) SetName(v string) {
	o.Name = v
}

// GetStatus returns the Status field value
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) SetStatus(v string) {
	o.Status = v
}

// GetStatusMessage returns the StatusMessage field value
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) GetStatusMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value
// and a boolean to check if the value has been set.
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) GetStatusMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusMessage, true
}

// SetStatusMessage sets field value
func (o *DescribeAccountConfigByAzureSubscriptionIDResult) SetStatusMessage(v string) {
	o.StatusMessage = v
}

func (o DescribeAccountConfigByAzureSubscriptionIDResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeAccountConfigByAzureSubscriptionIDResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["azureSubscriptionID"] = o.AzureSubscriptionID
	toSerialize["azureTenantID"] = o.AzureTenantID
	if !IsNil(o.ByoaInstanceIDs) {
		toSerialize["byoaInstanceIDs"] = o.ByoaInstanceIDs
	}
	toSerialize["cloudProviderId"] = o.CloudProviderId
	toSerialize["description"] = o.Description
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["status"] = o.Status
	toSerialize["statusMessage"] = o.StatusMessage

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DescribeAccountConfigByAzureSubscriptionIDResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"azureSubscriptionID",
		"azureTenantID",
		"cloudProviderId",
		"description",
		"id",
		"name",
		"status",
		"statusMessage",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeAccountConfigByAzureSubscriptionIDResult := _DescribeAccountConfigByAzureSubscriptionIDResult{}

	err = json.Unmarshal(data, &varDescribeAccountConfigByAzureSubscriptionIDResult)

	if err != nil {
		return err
	}

	*o = DescribeAccountConfigByAzureSubscriptionIDResult(varDescribeAccountConfigByAzureSubscriptionIDResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "azureSubscriptionID")
		delete(additionalProperties, "azureTenantID")
		delete(additionalProperties, "byoaInstanceIDs")
		delete(additionalProperties, "cloudProviderId")
		delete(additionalProperties, "description")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "status")
		delete(additionalProperties, "statusMessage")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDescribeAccountConfigByAzureSubscriptionIDResult struct {
	value *DescribeAccountConfigByAzureSubscriptionIDResult
	isSet bool
}

func (v NullableDescribeAccountConfigByAzureSubscriptionIDResult) Get() *DescribeAccountConfigByAzureSubscriptionIDResult {
	return v.value
}

func (v *NullableDescribeAccountConfigByAzureSubscriptionIDResult) Set(val *DescribeAccountConfigByAzureSubscriptionIDResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeAccountConfigByAzureSubscriptionIDResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeAccountConfigByAzureSubscriptionIDResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeAccountConfigByAzureSubscriptionIDResult(val *DescribeAccountConfigByAzureSubscriptionIDResult) *NullableDescribeAccountConfigByAzureSubscriptionIDResult {
	return &NullableDescribeAccountConfigByAzureSubscriptionIDResult{value: val, isSet: true}
}

func (v NullableDescribeAccountConfigByAzureSubscriptionIDResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeAccountConfigByAzureSubscriptionIDResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


