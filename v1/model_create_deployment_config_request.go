/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateDeploymentConfigRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDeploymentConfigRequest{}

// CreateDeploymentConfigRequest struct for CreateDeploymentConfigRequest
type CreateDeploymentConfigRequest struct {
	// A brief description of the deployment config
	Description string `json:"description"`
	InfraRollConfiguration *InfraRollConfiguration `json:"infraRollConfiguration,omitempty"`
	// Name of the deployment config
	Name string `json:"name"`
	RolloutPriorityList []string `json:"rolloutPriorityList,omitempty"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _CreateDeploymentConfigRequest CreateDeploymentConfigRequest

// NewCreateDeploymentConfigRequest instantiates a new CreateDeploymentConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDeploymentConfigRequest(description string, name string, token string) *CreateDeploymentConfigRequest {
	this := CreateDeploymentConfigRequest{}
	this.Description = description
	this.Name = name
	this.Token = token
	return &this
}

// NewCreateDeploymentConfigRequestWithDefaults instantiates a new CreateDeploymentConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDeploymentConfigRequestWithDefaults() *CreateDeploymentConfigRequest {
	this := CreateDeploymentConfigRequest{}
	return &this
}

// GetDescription returns the Description field value
func (o *CreateDeploymentConfigRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateDeploymentConfigRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateDeploymentConfigRequest) SetDescription(v string) {
	o.Description = v
}

// GetInfraRollConfiguration returns the InfraRollConfiguration field value if set, zero value otherwise.
func (o *CreateDeploymentConfigRequest) GetInfraRollConfiguration() InfraRollConfiguration {
	if o == nil || IsNil(o.InfraRollConfiguration) {
		var ret InfraRollConfiguration
		return ret
	}
	return *o.InfraRollConfiguration
}

// GetInfraRollConfigurationOk returns a tuple with the InfraRollConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeploymentConfigRequest) GetInfraRollConfigurationOk() (*InfraRollConfiguration, bool) {
	if o == nil || IsNil(o.InfraRollConfiguration) {
		return nil, false
	}
	return o.InfraRollConfiguration, true
}

// SetInfraRollConfiguration gets a reference to the given InfraRollConfiguration and assigns it to the InfraRollConfiguration field.
func (o *CreateDeploymentConfigRequest) SetInfraRollConfiguration(v InfraRollConfiguration) {
	o.InfraRollConfiguration = &v
}

// GetName returns the Name field value
func (o *CreateDeploymentConfigRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateDeploymentConfigRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateDeploymentConfigRequest) SetName(v string) {
	o.Name = v
}

// GetRolloutPriorityList returns the RolloutPriorityList field value if set, zero value otherwise.
func (o *CreateDeploymentConfigRequest) GetRolloutPriorityList() []string {
	if o == nil || IsNil(o.RolloutPriorityList) {
		var ret []string
		return ret
	}
	return o.RolloutPriorityList
}

// GetRolloutPriorityListOk returns a tuple with the RolloutPriorityList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeploymentConfigRequest) GetRolloutPriorityListOk() ([]string, bool) {
	if o == nil || IsNil(o.RolloutPriorityList) {
		return nil, false
	}
	return o.RolloutPriorityList, true
}

// SetRolloutPriorityList gets a reference to the given []string and assigns it to the RolloutPriorityList field.
func (o *CreateDeploymentConfigRequest) SetRolloutPriorityList(v []string) {
	o.RolloutPriorityList = v
}

// GetToken returns the Token field value
func (o *CreateDeploymentConfigRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *CreateDeploymentConfigRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *CreateDeploymentConfigRequest) SetToken(v string) {
	o.Token = v
}

func (o CreateDeploymentConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDeploymentConfigRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	if !IsNil(o.InfraRollConfiguration) {
		toSerialize["infraRollConfiguration"] = o.InfraRollConfiguration
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.RolloutPriorityList) {
		toSerialize["rolloutPriorityList"] = o.RolloutPriorityList
	}
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateDeploymentConfigRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"name",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateDeploymentConfigRequest := _CreateDeploymentConfigRequest{}

	err = json.Unmarshal(data, &varCreateDeploymentConfigRequest)

	if err != nil {
		return err
	}

	*o = CreateDeploymentConfigRequest(varCreateDeploymentConfigRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "infraRollConfiguration")
		delete(additionalProperties, "name")
		delete(additionalProperties, "rolloutPriorityList")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateDeploymentConfigRequest struct {
	value *CreateDeploymentConfigRequest
	isSet bool
}

func (v NullableCreateDeploymentConfigRequest) Get() *CreateDeploymentConfigRequest {
	return v.value
}

func (v *NullableCreateDeploymentConfigRequest) Set(val *CreateDeploymentConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDeploymentConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDeploymentConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDeploymentConfigRequest(val *CreateDeploymentConfigRequest) *NullableCreateDeploymentConfigRequest {
	return &NullableCreateDeploymentConfigRequest{value: val, isSet: true}
}

func (v NullableCreateDeploymentConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDeploymentConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


