/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// checks if the ReleaseTierVersionSetRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReleaseTierVersionSetRequest2{}

// ReleaseTierVersionSetRequest2 struct for ReleaseTierVersionSetRequest2
type ReleaseTierVersionSetRequest2 struct {
	// Indicates whether this version set is preferred.
	IsPreferred *bool `json:"isPreferred,omitempty"`
	// The name of the product-tier version set.
	Name *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ReleaseTierVersionSetRequest2 ReleaseTierVersionSetRequest2

// NewReleaseTierVersionSetRequest2 instantiates a new ReleaseTierVersionSetRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReleaseTierVersionSetRequest2() *ReleaseTierVersionSetRequest2 {
	this := ReleaseTierVersionSetRequest2{}
	return &this
}

// NewReleaseTierVersionSetRequest2WithDefaults instantiates a new ReleaseTierVersionSetRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReleaseTierVersionSetRequest2WithDefaults() *ReleaseTierVersionSetRequest2 {
	this := ReleaseTierVersionSetRequest2{}
	return &this
}

// GetIsPreferred returns the IsPreferred field value if set, zero value otherwise.
func (o *ReleaseTierVersionSetRequest2) GetIsPreferred() bool {
	if o == nil || IsNil(o.IsPreferred) {
		var ret bool
		return ret
	}
	return *o.IsPreferred
}

// GetIsPreferredOk returns a tuple with the IsPreferred field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseTierVersionSetRequest2) GetIsPreferredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPreferred) {
		return nil, false
	}
	return o.IsPreferred, true
}

// SetIsPreferred gets a reference to the given bool and assigns it to the IsPreferred field.
func (o *ReleaseTierVersionSetRequest2) SetIsPreferred(v bool) {
	o.IsPreferred = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ReleaseTierVersionSetRequest2) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseTierVersionSetRequest2) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ReleaseTierVersionSetRequest2) SetName(v string) {
	o.Name = &v
}

func (o ReleaseTierVersionSetRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReleaseTierVersionSetRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsPreferred) {
		toSerialize["isPreferred"] = o.IsPreferred
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ReleaseTierVersionSetRequest2) UnmarshalJSON(data []byte) (err error) {
	varReleaseTierVersionSetRequest2 := _ReleaseTierVersionSetRequest2{}

	err = json.Unmarshal(data, &varReleaseTierVersionSetRequest2)

	if err != nil {
		return err
	}

	*o = ReleaseTierVersionSetRequest2(varReleaseTierVersionSetRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "isPreferred")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableReleaseTierVersionSetRequest2 struct {
	value *ReleaseTierVersionSetRequest2
	isSet bool
}

func (v NullableReleaseTierVersionSetRequest2) Get() *ReleaseTierVersionSetRequest2 {
	return v.value
}

func (v *NullableReleaseTierVersionSetRequest2) Set(val *ReleaseTierVersionSetRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableReleaseTierVersionSetRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableReleaseTierVersionSetRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReleaseTierVersionSetRequest2(val *ReleaseTierVersionSetRequest2) *NullableReleaseTierVersionSetRequest2 {
	return &NullableReleaseTierVersionSetRequest2{value: val, isSet: true}
}

func (v NullableReleaseTierVersionSetRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReleaseTierVersionSetRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


