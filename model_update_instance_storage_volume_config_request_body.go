/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package omnistrategosdk

import (
	"encoding/json"
)

// checks if the UpdateInstanceStorageVolumeConfigRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInstanceStorageVolumeConfigRequestBody{}

// UpdateInstanceStorageVolumeConfigRequestBody struct for UpdateInstanceStorageVolumeConfigRequestBody
type UpdateInstanceStorageVolumeConfigRequestBody struct {
	// The IOPS provisioned for the configured instance storage type
	InstanceStorageIops *string `json:"instanceStorageIops,omitempty"`
	// The throughput (in MiBps) provisioned for the configured instance storage type
	InstanceStorageThroughputMiBps *string `json:"instanceStorageThroughputMiBps,omitempty"`
	// The type of the storage for a compute instance
	InstanceStorageType *string `json:"instanceStorageType,omitempty"`
}

// NewUpdateInstanceStorageVolumeConfigRequestBody instantiates a new UpdateInstanceStorageVolumeConfigRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInstanceStorageVolumeConfigRequestBody() *UpdateInstanceStorageVolumeConfigRequestBody {
	this := UpdateInstanceStorageVolumeConfigRequestBody{}
	return &this
}

// NewUpdateInstanceStorageVolumeConfigRequestBodyWithDefaults instantiates a new UpdateInstanceStorageVolumeConfigRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInstanceStorageVolumeConfigRequestBodyWithDefaults() *UpdateInstanceStorageVolumeConfigRequestBody {
	this := UpdateInstanceStorageVolumeConfigRequestBody{}
	return &this
}

// GetInstanceStorageIops returns the InstanceStorageIops field value if set, zero value otherwise.
func (o *UpdateInstanceStorageVolumeConfigRequestBody) GetInstanceStorageIops() string {
	if o == nil || IsNil(o.InstanceStorageIops) {
		var ret string
		return ret
	}
	return *o.InstanceStorageIops
}

// GetInstanceStorageIopsOk returns a tuple with the InstanceStorageIops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceStorageVolumeConfigRequestBody) GetInstanceStorageIopsOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceStorageIops) {
		return nil, false
	}
	return o.InstanceStorageIops, true
}

// HasInstanceStorageIops returns a boolean if a field has been set.
func (o *UpdateInstanceStorageVolumeConfigRequestBody) HasInstanceStorageIops() bool {
	if o != nil && !IsNil(o.InstanceStorageIops) {
		return true
	}

	return false
}

// SetInstanceStorageIops gets a reference to the given string and assigns it to the InstanceStorageIops field.
func (o *UpdateInstanceStorageVolumeConfigRequestBody) SetInstanceStorageIops(v string) {
	o.InstanceStorageIops = &v
}

// GetInstanceStorageThroughputMiBps returns the InstanceStorageThroughputMiBps field value if set, zero value otherwise.
func (o *UpdateInstanceStorageVolumeConfigRequestBody) GetInstanceStorageThroughputMiBps() string {
	if o == nil || IsNil(o.InstanceStorageThroughputMiBps) {
		var ret string
		return ret
	}
	return *o.InstanceStorageThroughputMiBps
}

// GetInstanceStorageThroughputMiBpsOk returns a tuple with the InstanceStorageThroughputMiBps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceStorageVolumeConfigRequestBody) GetInstanceStorageThroughputMiBpsOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceStorageThroughputMiBps) {
		return nil, false
	}
	return o.InstanceStorageThroughputMiBps, true
}

// HasInstanceStorageThroughputMiBps returns a boolean if a field has been set.
func (o *UpdateInstanceStorageVolumeConfigRequestBody) HasInstanceStorageThroughputMiBps() bool {
	if o != nil && !IsNil(o.InstanceStorageThroughputMiBps) {
		return true
	}

	return false
}

// SetInstanceStorageThroughputMiBps gets a reference to the given string and assigns it to the InstanceStorageThroughputMiBps field.
func (o *UpdateInstanceStorageVolumeConfigRequestBody) SetInstanceStorageThroughputMiBps(v string) {
	o.InstanceStorageThroughputMiBps = &v
}

// GetInstanceStorageType returns the InstanceStorageType field value if set, zero value otherwise.
func (o *UpdateInstanceStorageVolumeConfigRequestBody) GetInstanceStorageType() string {
	if o == nil || IsNil(o.InstanceStorageType) {
		var ret string
		return ret
	}
	return *o.InstanceStorageType
}

// GetInstanceStorageTypeOk returns a tuple with the InstanceStorageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceStorageVolumeConfigRequestBody) GetInstanceStorageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceStorageType) {
		return nil, false
	}
	return o.InstanceStorageType, true
}

// HasInstanceStorageType returns a boolean if a field has been set.
func (o *UpdateInstanceStorageVolumeConfigRequestBody) HasInstanceStorageType() bool {
	if o != nil && !IsNil(o.InstanceStorageType) {
		return true
	}

	return false
}

// SetInstanceStorageType gets a reference to the given string and assigns it to the InstanceStorageType field.
func (o *UpdateInstanceStorageVolumeConfigRequestBody) SetInstanceStorageType(v string) {
	o.InstanceStorageType = &v
}

func (o UpdateInstanceStorageVolumeConfigRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateInstanceStorageVolumeConfigRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstanceStorageIops) {
		toSerialize["instanceStorageIops"] = o.InstanceStorageIops
	}
	if !IsNil(o.InstanceStorageThroughputMiBps) {
		toSerialize["instanceStorageThroughputMiBps"] = o.InstanceStorageThroughputMiBps
	}
	if !IsNil(o.InstanceStorageType) {
		toSerialize["instanceStorageType"] = o.InstanceStorageType
	}
	return toSerialize, nil
}

type NullableUpdateInstanceStorageVolumeConfigRequestBody struct {
	value *UpdateInstanceStorageVolumeConfigRequestBody
	isSet bool
}

func (v NullableUpdateInstanceStorageVolumeConfigRequestBody) Get() *UpdateInstanceStorageVolumeConfigRequestBody {
	return v.value
}

func (v *NullableUpdateInstanceStorageVolumeConfigRequestBody) Set(val *UpdateInstanceStorageVolumeConfigRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInstanceStorageVolumeConfigRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInstanceStorageVolumeConfigRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInstanceStorageVolumeConfigRequestBody(val *UpdateInstanceStorageVolumeConfigRequestBody) *NullableUpdateInstanceStorageVolumeConfigRequestBody {
	return &NullableUpdateInstanceStorageVolumeConfigRequestBody{value: val, isSet: true}
}

func (v NullableUpdateInstanceStorageVolumeConfigRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInstanceStorageVolumeConfigRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


