/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package omnistrategosdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AutoScalingMetricSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoScalingMetricSpec{}

// AutoScalingMetricSpec struct for AutoScalingMetricSpec
type AutoScalingMetricSpec struct {
	// The local host endpoint to supply prometheus metric
	MetricEndpoint string `json:"metricEndpoint"`
	// The prometheus metric label name for scaling
	MetricLabelName string `json:"metricLabelName"`
	// The prometheus metric label value for scaling
	MetricLabelValue string `json:"metricLabelValue"`
	// The prometheus metric name for scaling
	MetricName string `json:"metricName"`
}

type _AutoScalingMetricSpec AutoScalingMetricSpec

// NewAutoScalingMetricSpec instantiates a new AutoScalingMetricSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoScalingMetricSpec(metricEndpoint string, metricLabelName string, metricLabelValue string, metricName string) *AutoScalingMetricSpec {
	this := AutoScalingMetricSpec{}
	this.MetricEndpoint = metricEndpoint
	this.MetricLabelName = metricLabelName
	this.MetricLabelValue = metricLabelValue
	this.MetricName = metricName
	return &this
}

// NewAutoScalingMetricSpecWithDefaults instantiates a new AutoScalingMetricSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoScalingMetricSpecWithDefaults() *AutoScalingMetricSpec {
	this := AutoScalingMetricSpec{}
	return &this
}

// GetMetricEndpoint returns the MetricEndpoint field value
func (o *AutoScalingMetricSpec) GetMetricEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricEndpoint
}

// GetMetricEndpointOk returns a tuple with the MetricEndpoint field value
// and a boolean to check if the value has been set.
func (o *AutoScalingMetricSpec) GetMetricEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricEndpoint, true
}

// SetMetricEndpoint sets field value
func (o *AutoScalingMetricSpec) SetMetricEndpoint(v string) {
	o.MetricEndpoint = v
}

// GetMetricLabelName returns the MetricLabelName field value
func (o *AutoScalingMetricSpec) GetMetricLabelName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricLabelName
}

// GetMetricLabelNameOk returns a tuple with the MetricLabelName field value
// and a boolean to check if the value has been set.
func (o *AutoScalingMetricSpec) GetMetricLabelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricLabelName, true
}

// SetMetricLabelName sets field value
func (o *AutoScalingMetricSpec) SetMetricLabelName(v string) {
	o.MetricLabelName = v
}

// GetMetricLabelValue returns the MetricLabelValue field value
func (o *AutoScalingMetricSpec) GetMetricLabelValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricLabelValue
}

// GetMetricLabelValueOk returns a tuple with the MetricLabelValue field value
// and a boolean to check if the value has been set.
func (o *AutoScalingMetricSpec) GetMetricLabelValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricLabelValue, true
}

// SetMetricLabelValue sets field value
func (o *AutoScalingMetricSpec) SetMetricLabelValue(v string) {
	o.MetricLabelValue = v
}

// GetMetricName returns the MetricName field value
func (o *AutoScalingMetricSpec) GetMetricName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetricName
}

// GetMetricNameOk returns a tuple with the MetricName field value
// and a boolean to check if the value has been set.
func (o *AutoScalingMetricSpec) GetMetricNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetricName, true
}

// SetMetricName sets field value
func (o *AutoScalingMetricSpec) SetMetricName(v string) {
	o.MetricName = v
}

func (o AutoScalingMetricSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoScalingMetricSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["metricEndpoint"] = o.MetricEndpoint
	toSerialize["metricLabelName"] = o.MetricLabelName
	toSerialize["metricLabelValue"] = o.MetricLabelValue
	toSerialize["metricName"] = o.MetricName
	return toSerialize, nil
}

func (o *AutoScalingMetricSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"metricEndpoint",
		"metricLabelName",
		"metricLabelValue",
		"metricName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutoScalingMetricSpec := _AutoScalingMetricSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutoScalingMetricSpec)

	if err != nil {
		return err
	}

	*o = AutoScalingMetricSpec(varAutoScalingMetricSpec)

	return err
}

type NullableAutoScalingMetricSpec struct {
	value *AutoScalingMetricSpec
	isSet bool
}

func (v NullableAutoScalingMetricSpec) Get() *AutoScalingMetricSpec {
	return v.value
}

func (v *NullableAutoScalingMetricSpec) Set(val *AutoScalingMetricSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoScalingMetricSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoScalingMetricSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoScalingMetricSpec(val *AutoScalingMetricSpec) *NullableAutoScalingMetricSpec {
	return &NullableAutoScalingMetricSpec{value: val, isSet: true}
}

func (v NullableAutoScalingMetricSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoScalingMetricSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


