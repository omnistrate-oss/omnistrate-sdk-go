/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package omnistrategosdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ContactusRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContactusRequestBody{}

// ContactusRequestBody struct for ContactusRequestBody
type ContactusRequestBody struct {
	Company string `json:"company"`
	Email string `json:"email"`
	Message string `json:"message"`
	Name string `json:"name"`
}

type _ContactusRequestBody ContactusRequestBody

// NewContactusRequestBody instantiates a new ContactusRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactusRequestBody(company string, email string, message string, name string) *ContactusRequestBody {
	this := ContactusRequestBody{}
	this.Company = company
	this.Email = email
	this.Message = message
	this.Name = name
	return &this
}

// NewContactusRequestBodyWithDefaults instantiates a new ContactusRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactusRequestBodyWithDefaults() *ContactusRequestBody {
	this := ContactusRequestBody{}
	return &this
}

// GetCompany returns the Company field value
func (o *ContactusRequestBody) GetCompany() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Company
}

// GetCompanyOk returns a tuple with the Company field value
// and a boolean to check if the value has been set.
func (o *ContactusRequestBody) GetCompanyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Company, true
}

// SetCompany sets field value
func (o *ContactusRequestBody) SetCompany(v string) {
	o.Company = v
}

// GetEmail returns the Email field value
func (o *ContactusRequestBody) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ContactusRequestBody) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ContactusRequestBody) SetEmail(v string) {
	o.Email = v
}

// GetMessage returns the Message field value
func (o *ContactusRequestBody) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ContactusRequestBody) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ContactusRequestBody) SetMessage(v string) {
	o.Message = v
}

// GetName returns the Name field value
func (o *ContactusRequestBody) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ContactusRequestBody) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ContactusRequestBody) SetName(v string) {
	o.Name = v
}

func (o ContactusRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContactusRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["company"] = o.Company
	toSerialize["email"] = o.Email
	toSerialize["message"] = o.Message
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *ContactusRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"company",
		"email",
		"message",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varContactusRequestBody := _ContactusRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varContactusRequestBody)

	if err != nil {
		return err
	}

	*o = ContactusRequestBody(varContactusRequestBody)

	return err
}

type NullableContactusRequestBody struct {
	value *ContactusRequestBody
	isSet bool
}

func (v NullableContactusRequestBody) Get() *ContactusRequestBody {
	return v.value
}

func (v *NullableContactusRequestBody) Set(val *ContactusRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableContactusRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableContactusRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactusRequestBody(val *ContactusRequestBody) *NullableContactusRequestBody {
	return &NullableContactusRequestBody{value: val, isSet: true}
}

func (v NullableContactusRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactusRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


