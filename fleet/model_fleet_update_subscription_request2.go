/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the FleetUpdateSubscriptionRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FleetUpdateSubscriptionRequest2{}

// FleetUpdateSubscriptionRequest2 struct for FleetUpdateSubscriptionRequest2
type FleetUpdateSubscriptionRequest2 struct {
	// Whether to allow creating instances when payment is not configured.
	AllowCreatesWhenPaymentNotConfigured *bool `json:"allowCreatesWhenPaymentNotConfigured,omitempty"`
	// The billing provider for this subscription
	BillingProvider *string `json:"billingProvider,omitempty"`
	// Whether to use a custom price for this subscription
	CustomPrice *bool `json:"customPrice,omitempty"`
	// If custom price is true, provide the price per unit for the subscription here.
	CustomPricePerUnit map[string]interface{} `json:"customPricePerUnit,omitempty"`
	// The external payer ID to record which customer should pay for this subscription.
	ExternalPayerId *string `json:"externalPayerId,omitempty"`
	// The maximum number of instances that can be created for this subscription. Use -1 to unset this restriction.
	MaxNumberOfInstances *int64 `json:"maxNumberOfInstances,omitempty"`
	// The effective date of the price, truncated to the first day of the month. Only the current or future months may be specified.
	PriceEffectiveDate *string `json:"priceEffectiveDate,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FleetUpdateSubscriptionRequest2 FleetUpdateSubscriptionRequest2

// NewFleetUpdateSubscriptionRequest2 instantiates a new FleetUpdateSubscriptionRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetUpdateSubscriptionRequest2() *FleetUpdateSubscriptionRequest2 {
	this := FleetUpdateSubscriptionRequest2{}
	return &this
}

// NewFleetUpdateSubscriptionRequest2WithDefaults instantiates a new FleetUpdateSubscriptionRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetUpdateSubscriptionRequest2WithDefaults() *FleetUpdateSubscriptionRequest2 {
	this := FleetUpdateSubscriptionRequest2{}
	return &this
}

// GetAllowCreatesWhenPaymentNotConfigured returns the AllowCreatesWhenPaymentNotConfigured field value if set, zero value otherwise.
func (o *FleetUpdateSubscriptionRequest2) GetAllowCreatesWhenPaymentNotConfigured() bool {
	if o == nil || IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		var ret bool
		return ret
	}
	return *o.AllowCreatesWhenPaymentNotConfigured
}

// GetAllowCreatesWhenPaymentNotConfiguredOk returns a tuple with the AllowCreatesWhenPaymentNotConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest2) GetAllowCreatesWhenPaymentNotConfiguredOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		return nil, false
	}
	return o.AllowCreatesWhenPaymentNotConfigured, true
}

// HasAllowCreatesWhenPaymentNotConfigured returns a boolean if a field has been set.
func (o *FleetUpdateSubscriptionRequest2) HasAllowCreatesWhenPaymentNotConfigured() bool {
	if o != nil && !IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		return true
	}

	return false
}

// SetAllowCreatesWhenPaymentNotConfigured gets a reference to the given bool and assigns it to the AllowCreatesWhenPaymentNotConfigured field.
func (o *FleetUpdateSubscriptionRequest2) SetAllowCreatesWhenPaymentNotConfigured(v bool) {
	o.AllowCreatesWhenPaymentNotConfigured = &v
}

// GetBillingProvider returns the BillingProvider field value if set, zero value otherwise.
func (o *FleetUpdateSubscriptionRequest2) GetBillingProvider() string {
	if o == nil || IsNil(o.BillingProvider) {
		var ret string
		return ret
	}
	return *o.BillingProvider
}

// GetBillingProviderOk returns a tuple with the BillingProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest2) GetBillingProviderOk() (*string, bool) {
	if o == nil || IsNil(o.BillingProvider) {
		return nil, false
	}
	return o.BillingProvider, true
}

// HasBillingProvider returns a boolean if a field has been set.
func (o *FleetUpdateSubscriptionRequest2) HasBillingProvider() bool {
	if o != nil && !IsNil(o.BillingProvider) {
		return true
	}

	return false
}

// SetBillingProvider gets a reference to the given string and assigns it to the BillingProvider field.
func (o *FleetUpdateSubscriptionRequest2) SetBillingProvider(v string) {
	o.BillingProvider = &v
}

// GetCustomPrice returns the CustomPrice field value if set, zero value otherwise.
func (o *FleetUpdateSubscriptionRequest2) GetCustomPrice() bool {
	if o == nil || IsNil(o.CustomPrice) {
		var ret bool
		return ret
	}
	return *o.CustomPrice
}

// GetCustomPriceOk returns a tuple with the CustomPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest2) GetCustomPriceOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomPrice) {
		return nil, false
	}
	return o.CustomPrice, true
}

// HasCustomPrice returns a boolean if a field has been set.
func (o *FleetUpdateSubscriptionRequest2) HasCustomPrice() bool {
	if o != nil && !IsNil(o.CustomPrice) {
		return true
	}

	return false
}

// SetCustomPrice gets a reference to the given bool and assigns it to the CustomPrice field.
func (o *FleetUpdateSubscriptionRequest2) SetCustomPrice(v bool) {
	o.CustomPrice = &v
}

// GetCustomPricePerUnit returns the CustomPricePerUnit field value if set, zero value otherwise.
func (o *FleetUpdateSubscriptionRequest2) GetCustomPricePerUnit() map[string]interface{} {
	if o == nil || IsNil(o.CustomPricePerUnit) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomPricePerUnit
}

// GetCustomPricePerUnitOk returns a tuple with the CustomPricePerUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest2) GetCustomPricePerUnitOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomPricePerUnit) {
		return map[string]interface{}{}, false
	}
	return o.CustomPricePerUnit, true
}

// HasCustomPricePerUnit returns a boolean if a field has been set.
func (o *FleetUpdateSubscriptionRequest2) HasCustomPricePerUnit() bool {
	if o != nil && !IsNil(o.CustomPricePerUnit) {
		return true
	}

	return false
}

// SetCustomPricePerUnit gets a reference to the given map[string]interface{} and assigns it to the CustomPricePerUnit field.
func (o *FleetUpdateSubscriptionRequest2) SetCustomPricePerUnit(v map[string]interface{}) {
	o.CustomPricePerUnit = v
}

// GetExternalPayerId returns the ExternalPayerId field value if set, zero value otherwise.
func (o *FleetUpdateSubscriptionRequest2) GetExternalPayerId() string {
	if o == nil || IsNil(o.ExternalPayerId) {
		var ret string
		return ret
	}
	return *o.ExternalPayerId
}

// GetExternalPayerIdOk returns a tuple with the ExternalPayerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest2) GetExternalPayerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalPayerId) {
		return nil, false
	}
	return o.ExternalPayerId, true
}

// HasExternalPayerId returns a boolean if a field has been set.
func (o *FleetUpdateSubscriptionRequest2) HasExternalPayerId() bool {
	if o != nil && !IsNil(o.ExternalPayerId) {
		return true
	}

	return false
}

// SetExternalPayerId gets a reference to the given string and assigns it to the ExternalPayerId field.
func (o *FleetUpdateSubscriptionRequest2) SetExternalPayerId(v string) {
	o.ExternalPayerId = &v
}

// GetMaxNumberOfInstances returns the MaxNumberOfInstances field value if set, zero value otherwise.
func (o *FleetUpdateSubscriptionRequest2) GetMaxNumberOfInstances() int64 {
	if o == nil || IsNil(o.MaxNumberOfInstances) {
		var ret int64
		return ret
	}
	return *o.MaxNumberOfInstances
}

// GetMaxNumberOfInstancesOk returns a tuple with the MaxNumberOfInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest2) GetMaxNumberOfInstancesOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxNumberOfInstances) {
		return nil, false
	}
	return o.MaxNumberOfInstances, true
}

// HasMaxNumberOfInstances returns a boolean if a field has been set.
func (o *FleetUpdateSubscriptionRequest2) HasMaxNumberOfInstances() bool {
	if o != nil && !IsNil(o.MaxNumberOfInstances) {
		return true
	}

	return false
}

// SetMaxNumberOfInstances gets a reference to the given int64 and assigns it to the MaxNumberOfInstances field.
func (o *FleetUpdateSubscriptionRequest2) SetMaxNumberOfInstances(v int64) {
	o.MaxNumberOfInstances = &v
}

// GetPriceEffectiveDate returns the PriceEffectiveDate field value if set, zero value otherwise.
func (o *FleetUpdateSubscriptionRequest2) GetPriceEffectiveDate() string {
	if o == nil || IsNil(o.PriceEffectiveDate) {
		var ret string
		return ret
	}
	return *o.PriceEffectiveDate
}

// GetPriceEffectiveDateOk returns a tuple with the PriceEffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest2) GetPriceEffectiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.PriceEffectiveDate) {
		return nil, false
	}
	return o.PriceEffectiveDate, true
}

// HasPriceEffectiveDate returns a boolean if a field has been set.
func (o *FleetUpdateSubscriptionRequest2) HasPriceEffectiveDate() bool {
	if o != nil && !IsNil(o.PriceEffectiveDate) {
		return true
	}

	return false
}

// SetPriceEffectiveDate gets a reference to the given string and assigns it to the PriceEffectiveDate field.
func (o *FleetUpdateSubscriptionRequest2) SetPriceEffectiveDate(v string) {
	o.PriceEffectiveDate = &v
}

func (o FleetUpdateSubscriptionRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FleetUpdateSubscriptionRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		toSerialize["allowCreatesWhenPaymentNotConfigured"] = o.AllowCreatesWhenPaymentNotConfigured
	}
	if !IsNil(o.BillingProvider) {
		toSerialize["billingProvider"] = o.BillingProvider
	}
	if !IsNil(o.CustomPrice) {
		toSerialize["customPrice"] = o.CustomPrice
	}
	if !IsNil(o.CustomPricePerUnit) {
		toSerialize["customPricePerUnit"] = o.CustomPricePerUnit
	}
	if !IsNil(o.ExternalPayerId) {
		toSerialize["externalPayerId"] = o.ExternalPayerId
	}
	if !IsNil(o.MaxNumberOfInstances) {
		toSerialize["maxNumberOfInstances"] = o.MaxNumberOfInstances
	}
	if !IsNil(o.PriceEffectiveDate) {
		toSerialize["priceEffectiveDate"] = o.PriceEffectiveDate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FleetUpdateSubscriptionRequest2) UnmarshalJSON(data []byte) (err error) {
	varFleetUpdateSubscriptionRequest2 := _FleetUpdateSubscriptionRequest2{}

	err = json.Unmarshal(data, &varFleetUpdateSubscriptionRequest2)

	if err != nil {
		return err
	}

	*o = FleetUpdateSubscriptionRequest2(varFleetUpdateSubscriptionRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "allowCreatesWhenPaymentNotConfigured")
		delete(additionalProperties, "billingProvider")
		delete(additionalProperties, "customPrice")
		delete(additionalProperties, "customPricePerUnit")
		delete(additionalProperties, "externalPayerId")
		delete(additionalProperties, "maxNumberOfInstances")
		delete(additionalProperties, "priceEffectiveDate")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFleetUpdateSubscriptionRequest2 struct {
	value *FleetUpdateSubscriptionRequest2
	isSet bool
}

func (v NullableFleetUpdateSubscriptionRequest2) Get() *FleetUpdateSubscriptionRequest2 {
	return v.value
}

func (v *NullableFleetUpdateSubscriptionRequest2) Set(val *FleetUpdateSubscriptionRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetUpdateSubscriptionRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetUpdateSubscriptionRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetUpdateSubscriptionRequest2(val *FleetUpdateSubscriptionRequest2) *NullableFleetUpdateSubscriptionRequest2 {
	return &NullableFleetUpdateSubscriptionRequest2{value: val, isSet: true}
}

func (v NullableFleetUpdateSubscriptionRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetUpdateSubscriptionRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


