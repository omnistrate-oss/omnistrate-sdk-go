/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the FleetUpdateSubscriptionRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FleetUpdateSubscriptionRequest2{}

// FleetUpdateSubscriptionRequest2 struct for FleetUpdateSubscriptionRequest2
type FleetUpdateSubscriptionRequest2 struct {
	// Whether to inherit the service plan price
	InheritServicePlanPrice *bool `json:"inheritServicePlanPrice,omitempty"`
	// The effective date of the price, truncated to the first day of the month. Only the current or future months may be specified.
	PriceEffectiveDate *string `json:"priceEffectiveDate,omitempty"`
	// If inheritServicePlanPrice is false, provide the price per unit for the subscription here.
	PricePerUnit map[string]interface{} `json:"pricePerUnit,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FleetUpdateSubscriptionRequest2 FleetUpdateSubscriptionRequest2

// NewFleetUpdateSubscriptionRequest2 instantiates a new FleetUpdateSubscriptionRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetUpdateSubscriptionRequest2() *FleetUpdateSubscriptionRequest2 {
	this := FleetUpdateSubscriptionRequest2{}
	return &this
}

// NewFleetUpdateSubscriptionRequest2WithDefaults instantiates a new FleetUpdateSubscriptionRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetUpdateSubscriptionRequest2WithDefaults() *FleetUpdateSubscriptionRequest2 {
	this := FleetUpdateSubscriptionRequest2{}
	return &this
}

// GetInheritServicePlanPrice returns the InheritServicePlanPrice field value if set, zero value otherwise.
func (o *FleetUpdateSubscriptionRequest2) GetInheritServicePlanPrice() bool {
	if o == nil || IsNil(o.InheritServicePlanPrice) {
		var ret bool
		return ret
	}
	return *o.InheritServicePlanPrice
}

// GetInheritServicePlanPriceOk returns a tuple with the InheritServicePlanPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest2) GetInheritServicePlanPriceOk() (*bool, bool) {
	if o == nil || IsNil(o.InheritServicePlanPrice) {
		return nil, false
	}
	return o.InheritServicePlanPrice, true
}

// HasInheritServicePlanPrice returns a boolean if a field has been set.
func (o *FleetUpdateSubscriptionRequest2) HasInheritServicePlanPrice() bool {
	if o != nil && !IsNil(o.InheritServicePlanPrice) {
		return true
	}

	return false
}

// SetInheritServicePlanPrice gets a reference to the given bool and assigns it to the InheritServicePlanPrice field.
func (o *FleetUpdateSubscriptionRequest2) SetInheritServicePlanPrice(v bool) {
	o.InheritServicePlanPrice = &v
}

// GetPriceEffectiveDate returns the PriceEffectiveDate field value if set, zero value otherwise.
func (o *FleetUpdateSubscriptionRequest2) GetPriceEffectiveDate() string {
	if o == nil || IsNil(o.PriceEffectiveDate) {
		var ret string
		return ret
	}
	return *o.PriceEffectiveDate
}

// GetPriceEffectiveDateOk returns a tuple with the PriceEffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest2) GetPriceEffectiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.PriceEffectiveDate) {
		return nil, false
	}
	return o.PriceEffectiveDate, true
}

// HasPriceEffectiveDate returns a boolean if a field has been set.
func (o *FleetUpdateSubscriptionRequest2) HasPriceEffectiveDate() bool {
	if o != nil && !IsNil(o.PriceEffectiveDate) {
		return true
	}

	return false
}

// SetPriceEffectiveDate gets a reference to the given string and assigns it to the PriceEffectiveDate field.
func (o *FleetUpdateSubscriptionRequest2) SetPriceEffectiveDate(v string) {
	o.PriceEffectiveDate = &v
}

// GetPricePerUnit returns the PricePerUnit field value if set, zero value otherwise.
func (o *FleetUpdateSubscriptionRequest2) GetPricePerUnit() map[string]interface{} {
	if o == nil || IsNil(o.PricePerUnit) {
		var ret map[string]interface{}
		return ret
	}
	return o.PricePerUnit
}

// GetPricePerUnitOk returns a tuple with the PricePerUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest2) GetPricePerUnitOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.PricePerUnit) {
		return map[string]interface{}{}, false
	}
	return o.PricePerUnit, true
}

// HasPricePerUnit returns a boolean if a field has been set.
func (o *FleetUpdateSubscriptionRequest2) HasPricePerUnit() bool {
	if o != nil && !IsNil(o.PricePerUnit) {
		return true
	}

	return false
}

// SetPricePerUnit gets a reference to the given map[string]interface{} and assigns it to the PricePerUnit field.
func (o *FleetUpdateSubscriptionRequest2) SetPricePerUnit(v map[string]interface{}) {
	o.PricePerUnit = v
}

func (o FleetUpdateSubscriptionRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FleetUpdateSubscriptionRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InheritServicePlanPrice) {
		toSerialize["inheritServicePlanPrice"] = o.InheritServicePlanPrice
	}
	if !IsNil(o.PriceEffectiveDate) {
		toSerialize["priceEffectiveDate"] = o.PriceEffectiveDate
	}
	if !IsNil(o.PricePerUnit) {
		toSerialize["pricePerUnit"] = o.PricePerUnit
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FleetUpdateSubscriptionRequest2) UnmarshalJSON(data []byte) (err error) {
	varFleetUpdateSubscriptionRequest2 := _FleetUpdateSubscriptionRequest2{}

	err = json.Unmarshal(data, &varFleetUpdateSubscriptionRequest2)

	if err != nil {
		return err
	}

	*o = FleetUpdateSubscriptionRequest2(varFleetUpdateSubscriptionRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "inheritServicePlanPrice")
		delete(additionalProperties, "priceEffectiveDate")
		delete(additionalProperties, "pricePerUnit")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFleetUpdateSubscriptionRequest2 struct {
	value *FleetUpdateSubscriptionRequest2
	isSet bool
}

func (v NullableFleetUpdateSubscriptionRequest2) Get() *FleetUpdateSubscriptionRequest2 {
	return v.value
}

func (v *NullableFleetUpdateSubscriptionRequest2) Set(val *FleetUpdateSubscriptionRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetUpdateSubscriptionRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetUpdateSubscriptionRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetUpdateSubscriptionRequest2(val *FleetUpdateSubscriptionRequest2) *NullableFleetUpdateSubscriptionRequest2 {
	return &NullableFleetUpdateSubscriptionRequest2{value: val, isSet: true}
}

func (v NullableFleetUpdateSubscriptionRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetUpdateSubscriptionRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


