/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the FleetAddCustomDNSToResourceInstanceRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FleetAddCustomDNSToResourceInstanceRequest2{}

// FleetAddCustomDNSToResourceInstanceRequest2 struct for FleetAddCustomDNSToResourceInstanceRequest2
type FleetAddCustomDNSToResourceInstanceRequest2 struct {
	// The custom DNS to add
	CustomDNS string `json:"customDNS"`
	// The target port
	TargetPort *int64 `json:"targetPort,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FleetAddCustomDNSToResourceInstanceRequest2 FleetAddCustomDNSToResourceInstanceRequest2

// NewFleetAddCustomDNSToResourceInstanceRequest2 instantiates a new FleetAddCustomDNSToResourceInstanceRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetAddCustomDNSToResourceInstanceRequest2(customDNS string) *FleetAddCustomDNSToResourceInstanceRequest2 {
	this := FleetAddCustomDNSToResourceInstanceRequest2{}
	this.CustomDNS = customDNS
	return &this
}

// NewFleetAddCustomDNSToResourceInstanceRequest2WithDefaults instantiates a new FleetAddCustomDNSToResourceInstanceRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetAddCustomDNSToResourceInstanceRequest2WithDefaults() *FleetAddCustomDNSToResourceInstanceRequest2 {
	this := FleetAddCustomDNSToResourceInstanceRequest2{}
	return &this
}

// GetCustomDNS returns the CustomDNS field value
func (o *FleetAddCustomDNSToResourceInstanceRequest2) GetCustomDNS() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomDNS
}

// GetCustomDNSOk returns a tuple with the CustomDNS field value
// and a boolean to check if the value has been set.
func (o *FleetAddCustomDNSToResourceInstanceRequest2) GetCustomDNSOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomDNS, true
}

// SetCustomDNS sets field value
func (o *FleetAddCustomDNSToResourceInstanceRequest2) SetCustomDNS(v string) {
	o.CustomDNS = v
}

// GetTargetPort returns the TargetPort field value if set, zero value otherwise.
func (o *FleetAddCustomDNSToResourceInstanceRequest2) GetTargetPort() int64 {
	if o == nil || IsNil(o.TargetPort) {
		var ret int64
		return ret
	}
	return *o.TargetPort
}

// GetTargetPortOk returns a tuple with the TargetPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetAddCustomDNSToResourceInstanceRequest2) GetTargetPortOk() (*int64, bool) {
	if o == nil || IsNil(o.TargetPort) {
		return nil, false
	}
	return o.TargetPort, true
}

// HasTargetPort returns a boolean if a field has been set.
func (o *FleetAddCustomDNSToResourceInstanceRequest2) HasTargetPort() bool {
	if o != nil && !IsNil(o.TargetPort) {
		return true
	}

	return false
}

// SetTargetPort gets a reference to the given int64 and assigns it to the TargetPort field.
func (o *FleetAddCustomDNSToResourceInstanceRequest2) SetTargetPort(v int64) {
	o.TargetPort = &v
}

func (o FleetAddCustomDNSToResourceInstanceRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FleetAddCustomDNSToResourceInstanceRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customDNS"] = o.CustomDNS
	if !IsNil(o.TargetPort) {
		toSerialize["targetPort"] = o.TargetPort
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FleetAddCustomDNSToResourceInstanceRequest2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customDNS",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFleetAddCustomDNSToResourceInstanceRequest2 := _FleetAddCustomDNSToResourceInstanceRequest2{}

	err = json.Unmarshal(data, &varFleetAddCustomDNSToResourceInstanceRequest2)

	if err != nil {
		return err
	}

	*o = FleetAddCustomDNSToResourceInstanceRequest2(varFleetAddCustomDNSToResourceInstanceRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "customDNS")
		delete(additionalProperties, "targetPort")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFleetAddCustomDNSToResourceInstanceRequest2 struct {
	value *FleetAddCustomDNSToResourceInstanceRequest2
	isSet bool
}

func (v NullableFleetAddCustomDNSToResourceInstanceRequest2) Get() *FleetAddCustomDNSToResourceInstanceRequest2 {
	return v.value
}

func (v *NullableFleetAddCustomDNSToResourceInstanceRequest2) Set(val *FleetAddCustomDNSToResourceInstanceRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetAddCustomDNSToResourceInstanceRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetAddCustomDNSToResourceInstanceRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetAddCustomDNSToResourceInstanceRequest2(val *FleetAddCustomDNSToResourceInstanceRequest2) *NullableFleetAddCustomDNSToResourceInstanceRequest2 {
	return &NullableFleetAddCustomDNSToResourceInstanceRequest2{value: val, isSet: true}
}

func (v NullableFleetAddCustomDNSToResourceInstanceRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetAddCustomDNSToResourceInstanceRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


