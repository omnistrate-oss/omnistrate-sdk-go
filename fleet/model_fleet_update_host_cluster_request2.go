/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the FleetUpdateHostClusterRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FleetUpdateHostClusterRequest2{}

// FleetUpdateHostClusterRequest2 struct for FleetUpdateHostClusterRequest2
type FleetUpdateHostClusterRequest2 struct {
	// The pending amenities for the host cluster
	PendingAmenities []Amenity `json:"pendingAmenities,omitempty"`
	// Whether to sync the host cluster with the org template
	SyncWithOrgTemplate *bool `json:"syncWithOrgTemplate,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FleetUpdateHostClusterRequest2 FleetUpdateHostClusterRequest2

// NewFleetUpdateHostClusterRequest2 instantiates a new FleetUpdateHostClusterRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetUpdateHostClusterRequest2() *FleetUpdateHostClusterRequest2 {
	this := FleetUpdateHostClusterRequest2{}
	return &this
}

// NewFleetUpdateHostClusterRequest2WithDefaults instantiates a new FleetUpdateHostClusterRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetUpdateHostClusterRequest2WithDefaults() *FleetUpdateHostClusterRequest2 {
	this := FleetUpdateHostClusterRequest2{}
	return &this
}

// GetPendingAmenities returns the PendingAmenities field value if set, zero value otherwise.
func (o *FleetUpdateHostClusterRequest2) GetPendingAmenities() []Amenity {
	if o == nil || IsNil(o.PendingAmenities) {
		var ret []Amenity
		return ret
	}
	return o.PendingAmenities
}

// GetPendingAmenitiesOk returns a tuple with the PendingAmenities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateHostClusterRequest2) GetPendingAmenitiesOk() ([]Amenity, bool) {
	if o == nil || IsNil(o.PendingAmenities) {
		return nil, false
	}
	return o.PendingAmenities, true
}

// HasPendingAmenities returns a boolean if a field has been set.
func (o *FleetUpdateHostClusterRequest2) HasPendingAmenities() bool {
	if o != nil && !IsNil(o.PendingAmenities) {
		return true
	}

	return false
}

// SetPendingAmenities gets a reference to the given []Amenity and assigns it to the PendingAmenities field.
func (o *FleetUpdateHostClusterRequest2) SetPendingAmenities(v []Amenity) {
	o.PendingAmenities = v
}

// GetSyncWithOrgTemplate returns the SyncWithOrgTemplate field value if set, zero value otherwise.
func (o *FleetUpdateHostClusterRequest2) GetSyncWithOrgTemplate() bool {
	if o == nil || IsNil(o.SyncWithOrgTemplate) {
		var ret bool
		return ret
	}
	return *o.SyncWithOrgTemplate
}

// GetSyncWithOrgTemplateOk returns a tuple with the SyncWithOrgTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateHostClusterRequest2) GetSyncWithOrgTemplateOk() (*bool, bool) {
	if o == nil || IsNil(o.SyncWithOrgTemplate) {
		return nil, false
	}
	return o.SyncWithOrgTemplate, true
}

// HasSyncWithOrgTemplate returns a boolean if a field has been set.
func (o *FleetUpdateHostClusterRequest2) HasSyncWithOrgTemplate() bool {
	if o != nil && !IsNil(o.SyncWithOrgTemplate) {
		return true
	}

	return false
}

// SetSyncWithOrgTemplate gets a reference to the given bool and assigns it to the SyncWithOrgTemplate field.
func (o *FleetUpdateHostClusterRequest2) SetSyncWithOrgTemplate(v bool) {
	o.SyncWithOrgTemplate = &v
}

func (o FleetUpdateHostClusterRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FleetUpdateHostClusterRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PendingAmenities) {
		toSerialize["pendingAmenities"] = o.PendingAmenities
	}
	if !IsNil(o.SyncWithOrgTemplate) {
		toSerialize["syncWithOrgTemplate"] = o.SyncWithOrgTemplate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FleetUpdateHostClusterRequest2) UnmarshalJSON(data []byte) (err error) {
	varFleetUpdateHostClusterRequest2 := _FleetUpdateHostClusterRequest2{}

	err = json.Unmarshal(data, &varFleetUpdateHostClusterRequest2)

	if err != nil {
		return err
	}

	*o = FleetUpdateHostClusterRequest2(varFleetUpdateHostClusterRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "pendingAmenities")
		delete(additionalProperties, "syncWithOrgTemplate")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFleetUpdateHostClusterRequest2 struct {
	value *FleetUpdateHostClusterRequest2
	isSet bool
}

func (v NullableFleetUpdateHostClusterRequest2) Get() *FleetUpdateHostClusterRequest2 {
	return v.value
}

func (v *NullableFleetUpdateHostClusterRequest2) Set(val *FleetUpdateHostClusterRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetUpdateHostClusterRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetUpdateHostClusterRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetUpdateHostClusterRequest2(val *FleetUpdateHostClusterRequest2) *NullableFleetUpdateHostClusterRequest2 {
	return &NullableFleetUpdateHostClusterRequest2{value: val, isSet: true}
}

func (v NullableFleetUpdateHostClusterRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetUpdateHostClusterRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


