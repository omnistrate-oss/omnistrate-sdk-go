/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the RenderedIdentityProviderResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RenderedIdentityProviderResult{}

// RenderedIdentityProviderResult struct for RenderedIdentityProviderResult
type RenderedIdentityProviderResult struct {
	// The email identifiers to use to filter the Identity Provider available for login
	EmailIdentifiers string `json:"emailIdentifiers"`
	// ID of an Identity Provider
	Id string `json:"id"`
	// The name of the identity provider
	IdentityProviderName string `json:"identityProviderName"`
	// The URL of the icon to use for the login button
	LoginButtonIconUrl string `json:"loginButtonIconUrl"`
	// The text to use for the login button
	LoginButtonText string `json:"loginButtonText"`
	// The name of the Identity Provider
	Name string `json:"name"`
	// The rendered authorization endpoint of the Identity Provider
	RenderedAuthorizationEndpoint string `json:"renderedAuthorizationEndpoint"`
	// The state parameter used to prevent CSRF attacks
	State *string `json:"state,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RenderedIdentityProviderResult RenderedIdentityProviderResult

// NewRenderedIdentityProviderResult instantiates a new RenderedIdentityProviderResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenderedIdentityProviderResult(emailIdentifiers string, id string, identityProviderName string, loginButtonIconUrl string, loginButtonText string, name string, renderedAuthorizationEndpoint string) *RenderedIdentityProviderResult {
	this := RenderedIdentityProviderResult{}
	this.EmailIdentifiers = emailIdentifiers
	this.Id = id
	this.IdentityProviderName = identityProviderName
	this.LoginButtonIconUrl = loginButtonIconUrl
	this.LoginButtonText = loginButtonText
	this.Name = name
	this.RenderedAuthorizationEndpoint = renderedAuthorizationEndpoint
	return &this
}

// NewRenderedIdentityProviderResultWithDefaults instantiates a new RenderedIdentityProviderResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenderedIdentityProviderResultWithDefaults() *RenderedIdentityProviderResult {
	this := RenderedIdentityProviderResult{}
	return &this
}

// GetEmailIdentifiers returns the EmailIdentifiers field value
func (o *RenderedIdentityProviderResult) GetEmailIdentifiers() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EmailIdentifiers
}

// GetEmailIdentifiersOk returns a tuple with the EmailIdentifiers field value
// and a boolean to check if the value has been set.
func (o *RenderedIdentityProviderResult) GetEmailIdentifiersOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailIdentifiers, true
}

// SetEmailIdentifiers sets field value
func (o *RenderedIdentityProviderResult) SetEmailIdentifiers(v string) {
	o.EmailIdentifiers = v
}

// GetId returns the Id field value
func (o *RenderedIdentityProviderResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RenderedIdentityProviderResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RenderedIdentityProviderResult) SetId(v string) {
	o.Id = v
}

// GetIdentityProviderName returns the IdentityProviderName field value
func (o *RenderedIdentityProviderResult) GetIdentityProviderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentityProviderName
}

// GetIdentityProviderNameOk returns a tuple with the IdentityProviderName field value
// and a boolean to check if the value has been set.
func (o *RenderedIdentityProviderResult) GetIdentityProviderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentityProviderName, true
}

// SetIdentityProviderName sets field value
func (o *RenderedIdentityProviderResult) SetIdentityProviderName(v string) {
	o.IdentityProviderName = v
}

// GetLoginButtonIconUrl returns the LoginButtonIconUrl field value
func (o *RenderedIdentityProviderResult) GetLoginButtonIconUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoginButtonIconUrl
}

// GetLoginButtonIconUrlOk returns a tuple with the LoginButtonIconUrl field value
// and a boolean to check if the value has been set.
func (o *RenderedIdentityProviderResult) GetLoginButtonIconUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoginButtonIconUrl, true
}

// SetLoginButtonIconUrl sets field value
func (o *RenderedIdentityProviderResult) SetLoginButtonIconUrl(v string) {
	o.LoginButtonIconUrl = v
}

// GetLoginButtonText returns the LoginButtonText field value
func (o *RenderedIdentityProviderResult) GetLoginButtonText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoginButtonText
}

// GetLoginButtonTextOk returns a tuple with the LoginButtonText field value
// and a boolean to check if the value has been set.
func (o *RenderedIdentityProviderResult) GetLoginButtonTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoginButtonText, true
}

// SetLoginButtonText sets field value
func (o *RenderedIdentityProviderResult) SetLoginButtonText(v string) {
	o.LoginButtonText = v
}

// GetName returns the Name field value
func (o *RenderedIdentityProviderResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RenderedIdentityProviderResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RenderedIdentityProviderResult) SetName(v string) {
	o.Name = v
}

// GetRenderedAuthorizationEndpoint returns the RenderedAuthorizationEndpoint field value
func (o *RenderedIdentityProviderResult) GetRenderedAuthorizationEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RenderedAuthorizationEndpoint
}

// GetRenderedAuthorizationEndpointOk returns a tuple with the RenderedAuthorizationEndpoint field value
// and a boolean to check if the value has been set.
func (o *RenderedIdentityProviderResult) GetRenderedAuthorizationEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RenderedAuthorizationEndpoint, true
}

// SetRenderedAuthorizationEndpoint sets field value
func (o *RenderedIdentityProviderResult) SetRenderedAuthorizationEndpoint(v string) {
	o.RenderedAuthorizationEndpoint = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *RenderedIdentityProviderResult) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RenderedIdentityProviderResult) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *RenderedIdentityProviderResult) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *RenderedIdentityProviderResult) SetState(v string) {
	o.State = &v
}

func (o RenderedIdentityProviderResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RenderedIdentityProviderResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["emailIdentifiers"] = o.EmailIdentifiers
	toSerialize["id"] = o.Id
	toSerialize["identityProviderName"] = o.IdentityProviderName
	toSerialize["loginButtonIconUrl"] = o.LoginButtonIconUrl
	toSerialize["loginButtonText"] = o.LoginButtonText
	toSerialize["name"] = o.Name
	toSerialize["renderedAuthorizationEndpoint"] = o.RenderedAuthorizationEndpoint
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RenderedIdentityProviderResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"emailIdentifiers",
		"id",
		"identityProviderName",
		"loginButtonIconUrl",
		"loginButtonText",
		"name",
		"renderedAuthorizationEndpoint",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRenderedIdentityProviderResult := _RenderedIdentityProviderResult{}

	err = json.Unmarshal(data, &varRenderedIdentityProviderResult)

	if err != nil {
		return err
	}

	*o = RenderedIdentityProviderResult(varRenderedIdentityProviderResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "emailIdentifiers")
		delete(additionalProperties, "id")
		delete(additionalProperties, "identityProviderName")
		delete(additionalProperties, "loginButtonIconUrl")
		delete(additionalProperties, "loginButtonText")
		delete(additionalProperties, "name")
		delete(additionalProperties, "renderedAuthorizationEndpoint")
		delete(additionalProperties, "state")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRenderedIdentityProviderResult struct {
	value *RenderedIdentityProviderResult
	isSet bool
}

func (v NullableRenderedIdentityProviderResult) Get() *RenderedIdentityProviderResult {
	return v.value
}

func (v *NullableRenderedIdentityProviderResult) Set(val *RenderedIdentityProviderResult) {
	v.value = val
	v.isSet = true
}

func (v NullableRenderedIdentityProviderResult) IsSet() bool {
	return v.isSet
}

func (v *NullableRenderedIdentityProviderResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenderedIdentityProviderResult(val *RenderedIdentityProviderResult) *NullableRenderedIdentityProviderResult {
	return &NullableRenderedIdentityProviderResult{value: val, isSet: true}
}

func (v NullableRenderedIdentityProviderResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenderedIdentityProviderResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


