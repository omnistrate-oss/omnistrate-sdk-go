/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the FleetDescribeHostClusterResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FleetDescribeHostClusterResult{}

// FleetDescribeHostClusterResult struct for FleetDescribeHostClusterResult
type FleetDescribeHostClusterResult struct {
	// The amenities available in the host cluster
	Amenities []Amenity `json:"amenities,omitempty"`
	// The AWS account ID
	AwsAccountID *string `json:"awsAccountID,omitempty"`
	// The Azure subscription ID
	AzureSubscriptionID *string `json:"azureSubscriptionID,omitempty"`
	// Name of the Infra Provider
	CloudProvider string `json:"cloudProvider"`
	// The endpoint to access the dashboard
	DashboardEndpoint *string `json:"dashboardEndpoint,omitempty"`
	// The GCP project ID
	GcpProjectID *string `json:"gcpProjectID,omitempty"`
	// Whether the host cluster has pending changes
	HasPendingChanges *bool `json:"hasPendingChanges,omitempty"`
	// ID of a Host Cluster
	Id string `json:"id"`
	// Whether the host cluster is in sync with the org template
	IsInSyncWithOrgTemplate *bool `json:"isInSyncWithOrgTemplate,omitempty"`
	// The pending amenities for the host cluster
	PendingAmenities []Amenity `json:"pendingAmenities,omitempty"`
	// The region of the host cluster
	Region string `json:"region"`
	// The status of an operation
	Status string `json:"status"`
	Type string `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _FleetDescribeHostClusterResult FleetDescribeHostClusterResult

// NewFleetDescribeHostClusterResult instantiates a new FleetDescribeHostClusterResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetDescribeHostClusterResult(cloudProvider string, id string, region string, status string, type_ string) *FleetDescribeHostClusterResult {
	this := FleetDescribeHostClusterResult{}
	this.CloudProvider = cloudProvider
	this.Id = id
	this.Region = region
	this.Status = status
	this.Type = type_
	return &this
}

// NewFleetDescribeHostClusterResultWithDefaults instantiates a new FleetDescribeHostClusterResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetDescribeHostClusterResultWithDefaults() *FleetDescribeHostClusterResult {
	this := FleetDescribeHostClusterResult{}
	return &this
}

// GetAmenities returns the Amenities field value if set, zero value otherwise.
func (o *FleetDescribeHostClusterResult) GetAmenities() []Amenity {
	if o == nil || IsNil(o.Amenities) {
		var ret []Amenity
		return ret
	}
	return o.Amenities
}

// GetAmenitiesOk returns a tuple with the Amenities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeHostClusterResult) GetAmenitiesOk() ([]Amenity, bool) {
	if o == nil || IsNil(o.Amenities) {
		return nil, false
	}
	return o.Amenities, true
}

// HasAmenities returns a boolean if a field has been set.
func (o *FleetDescribeHostClusterResult) HasAmenities() bool {
	if o != nil && !IsNil(o.Amenities) {
		return true
	}

	return false
}

// SetAmenities gets a reference to the given []Amenity and assigns it to the Amenities field.
func (o *FleetDescribeHostClusterResult) SetAmenities(v []Amenity) {
	o.Amenities = v
}

// GetAwsAccountID returns the AwsAccountID field value if set, zero value otherwise.
func (o *FleetDescribeHostClusterResult) GetAwsAccountID() string {
	if o == nil || IsNil(o.AwsAccountID) {
		var ret string
		return ret
	}
	return *o.AwsAccountID
}

// GetAwsAccountIDOk returns a tuple with the AwsAccountID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeHostClusterResult) GetAwsAccountIDOk() (*string, bool) {
	if o == nil || IsNil(o.AwsAccountID) {
		return nil, false
	}
	return o.AwsAccountID, true
}

// HasAwsAccountID returns a boolean if a field has been set.
func (o *FleetDescribeHostClusterResult) HasAwsAccountID() bool {
	if o != nil && !IsNil(o.AwsAccountID) {
		return true
	}

	return false
}

// SetAwsAccountID gets a reference to the given string and assigns it to the AwsAccountID field.
func (o *FleetDescribeHostClusterResult) SetAwsAccountID(v string) {
	o.AwsAccountID = &v
}

// GetAzureSubscriptionID returns the AzureSubscriptionID field value if set, zero value otherwise.
func (o *FleetDescribeHostClusterResult) GetAzureSubscriptionID() string {
	if o == nil || IsNil(o.AzureSubscriptionID) {
		var ret string
		return ret
	}
	return *o.AzureSubscriptionID
}

// GetAzureSubscriptionIDOk returns a tuple with the AzureSubscriptionID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeHostClusterResult) GetAzureSubscriptionIDOk() (*string, bool) {
	if o == nil || IsNil(o.AzureSubscriptionID) {
		return nil, false
	}
	return o.AzureSubscriptionID, true
}

// HasAzureSubscriptionID returns a boolean if a field has been set.
func (o *FleetDescribeHostClusterResult) HasAzureSubscriptionID() bool {
	if o != nil && !IsNil(o.AzureSubscriptionID) {
		return true
	}

	return false
}

// SetAzureSubscriptionID gets a reference to the given string and assigns it to the AzureSubscriptionID field.
func (o *FleetDescribeHostClusterResult) SetAzureSubscriptionID(v string) {
	o.AzureSubscriptionID = &v
}

// GetCloudProvider returns the CloudProvider field value
func (o *FleetDescribeHostClusterResult) GetCloudProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeHostClusterResult) GetCloudProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *FleetDescribeHostClusterResult) SetCloudProvider(v string) {
	o.CloudProvider = v
}

// GetDashboardEndpoint returns the DashboardEndpoint field value if set, zero value otherwise.
func (o *FleetDescribeHostClusterResult) GetDashboardEndpoint() string {
	if o == nil || IsNil(o.DashboardEndpoint) {
		var ret string
		return ret
	}
	return *o.DashboardEndpoint
}

// GetDashboardEndpointOk returns a tuple with the DashboardEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeHostClusterResult) GetDashboardEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.DashboardEndpoint) {
		return nil, false
	}
	return o.DashboardEndpoint, true
}

// HasDashboardEndpoint returns a boolean if a field has been set.
func (o *FleetDescribeHostClusterResult) HasDashboardEndpoint() bool {
	if o != nil && !IsNil(o.DashboardEndpoint) {
		return true
	}

	return false
}

// SetDashboardEndpoint gets a reference to the given string and assigns it to the DashboardEndpoint field.
func (o *FleetDescribeHostClusterResult) SetDashboardEndpoint(v string) {
	o.DashboardEndpoint = &v
}

// GetGcpProjectID returns the GcpProjectID field value if set, zero value otherwise.
func (o *FleetDescribeHostClusterResult) GetGcpProjectID() string {
	if o == nil || IsNil(o.GcpProjectID) {
		var ret string
		return ret
	}
	return *o.GcpProjectID
}

// GetGcpProjectIDOk returns a tuple with the GcpProjectID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeHostClusterResult) GetGcpProjectIDOk() (*string, bool) {
	if o == nil || IsNil(o.GcpProjectID) {
		return nil, false
	}
	return o.GcpProjectID, true
}

// HasGcpProjectID returns a boolean if a field has been set.
func (o *FleetDescribeHostClusterResult) HasGcpProjectID() bool {
	if o != nil && !IsNil(o.GcpProjectID) {
		return true
	}

	return false
}

// SetGcpProjectID gets a reference to the given string and assigns it to the GcpProjectID field.
func (o *FleetDescribeHostClusterResult) SetGcpProjectID(v string) {
	o.GcpProjectID = &v
}

// GetHasPendingChanges returns the HasPendingChanges field value if set, zero value otherwise.
func (o *FleetDescribeHostClusterResult) GetHasPendingChanges() bool {
	if o == nil || IsNil(o.HasPendingChanges) {
		var ret bool
		return ret
	}
	return *o.HasPendingChanges
}

// GetHasPendingChangesOk returns a tuple with the HasPendingChanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeHostClusterResult) GetHasPendingChangesOk() (*bool, bool) {
	if o == nil || IsNil(o.HasPendingChanges) {
		return nil, false
	}
	return o.HasPendingChanges, true
}

// HasHasPendingChanges returns a boolean if a field has been set.
func (o *FleetDescribeHostClusterResult) HasHasPendingChanges() bool {
	if o != nil && !IsNil(o.HasPendingChanges) {
		return true
	}

	return false
}

// SetHasPendingChanges gets a reference to the given bool and assigns it to the HasPendingChanges field.
func (o *FleetDescribeHostClusterResult) SetHasPendingChanges(v bool) {
	o.HasPendingChanges = &v
}

// GetId returns the Id field value
func (o *FleetDescribeHostClusterResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeHostClusterResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FleetDescribeHostClusterResult) SetId(v string) {
	o.Id = v
}

// GetIsInSyncWithOrgTemplate returns the IsInSyncWithOrgTemplate field value if set, zero value otherwise.
func (o *FleetDescribeHostClusterResult) GetIsInSyncWithOrgTemplate() bool {
	if o == nil || IsNil(o.IsInSyncWithOrgTemplate) {
		var ret bool
		return ret
	}
	return *o.IsInSyncWithOrgTemplate
}

// GetIsInSyncWithOrgTemplateOk returns a tuple with the IsInSyncWithOrgTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeHostClusterResult) GetIsInSyncWithOrgTemplateOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInSyncWithOrgTemplate) {
		return nil, false
	}
	return o.IsInSyncWithOrgTemplate, true
}

// HasIsInSyncWithOrgTemplate returns a boolean if a field has been set.
func (o *FleetDescribeHostClusterResult) HasIsInSyncWithOrgTemplate() bool {
	if o != nil && !IsNil(o.IsInSyncWithOrgTemplate) {
		return true
	}

	return false
}

// SetIsInSyncWithOrgTemplate gets a reference to the given bool and assigns it to the IsInSyncWithOrgTemplate field.
func (o *FleetDescribeHostClusterResult) SetIsInSyncWithOrgTemplate(v bool) {
	o.IsInSyncWithOrgTemplate = &v
}

// GetPendingAmenities returns the PendingAmenities field value if set, zero value otherwise.
func (o *FleetDescribeHostClusterResult) GetPendingAmenities() []Amenity {
	if o == nil || IsNil(o.PendingAmenities) {
		var ret []Amenity
		return ret
	}
	return o.PendingAmenities
}

// GetPendingAmenitiesOk returns a tuple with the PendingAmenities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeHostClusterResult) GetPendingAmenitiesOk() ([]Amenity, bool) {
	if o == nil || IsNil(o.PendingAmenities) {
		return nil, false
	}
	return o.PendingAmenities, true
}

// HasPendingAmenities returns a boolean if a field has been set.
func (o *FleetDescribeHostClusterResult) HasPendingAmenities() bool {
	if o != nil && !IsNil(o.PendingAmenities) {
		return true
	}

	return false
}

// SetPendingAmenities gets a reference to the given []Amenity and assigns it to the PendingAmenities field.
func (o *FleetDescribeHostClusterResult) SetPendingAmenities(v []Amenity) {
	o.PendingAmenities = v
}

// GetRegion returns the Region field value
func (o *FleetDescribeHostClusterResult) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeHostClusterResult) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *FleetDescribeHostClusterResult) SetRegion(v string) {
	o.Region = v
}

// GetStatus returns the Status field value
func (o *FleetDescribeHostClusterResult) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeHostClusterResult) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *FleetDescribeHostClusterResult) SetStatus(v string) {
	o.Status = v
}

// GetType returns the Type field value
func (o *FleetDescribeHostClusterResult) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeHostClusterResult) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *FleetDescribeHostClusterResult) SetType(v string) {
	o.Type = v
}

func (o FleetDescribeHostClusterResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FleetDescribeHostClusterResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amenities) {
		toSerialize["amenities"] = o.Amenities
	}
	if !IsNil(o.AwsAccountID) {
		toSerialize["awsAccountID"] = o.AwsAccountID
	}
	if !IsNil(o.AzureSubscriptionID) {
		toSerialize["azureSubscriptionID"] = o.AzureSubscriptionID
	}
	toSerialize["cloudProvider"] = o.CloudProvider
	if !IsNil(o.DashboardEndpoint) {
		toSerialize["dashboardEndpoint"] = o.DashboardEndpoint
	}
	if !IsNil(o.GcpProjectID) {
		toSerialize["gcpProjectID"] = o.GcpProjectID
	}
	if !IsNil(o.HasPendingChanges) {
		toSerialize["hasPendingChanges"] = o.HasPendingChanges
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.IsInSyncWithOrgTemplate) {
		toSerialize["isInSyncWithOrgTemplate"] = o.IsInSyncWithOrgTemplate
	}
	if !IsNil(o.PendingAmenities) {
		toSerialize["pendingAmenities"] = o.PendingAmenities
	}
	toSerialize["region"] = o.Region
	toSerialize["status"] = o.Status
	toSerialize["type"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FleetDescribeHostClusterResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloudProvider",
		"id",
		"region",
		"status",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFleetDescribeHostClusterResult := _FleetDescribeHostClusterResult{}

	err = json.Unmarshal(data, &varFleetDescribeHostClusterResult)

	if err != nil {
		return err
	}

	*o = FleetDescribeHostClusterResult(varFleetDescribeHostClusterResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "amenities")
		delete(additionalProperties, "awsAccountID")
		delete(additionalProperties, "azureSubscriptionID")
		delete(additionalProperties, "cloudProvider")
		delete(additionalProperties, "dashboardEndpoint")
		delete(additionalProperties, "gcpProjectID")
		delete(additionalProperties, "hasPendingChanges")
		delete(additionalProperties, "id")
		delete(additionalProperties, "isInSyncWithOrgTemplate")
		delete(additionalProperties, "pendingAmenities")
		delete(additionalProperties, "region")
		delete(additionalProperties, "status")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFleetDescribeHostClusterResult struct {
	value *FleetDescribeHostClusterResult
	isSet bool
}

func (v NullableFleetDescribeHostClusterResult) Get() *FleetDescribeHostClusterResult {
	return v.value
}

func (v *NullableFleetDescribeHostClusterResult) Set(val *FleetDescribeHostClusterResult) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetDescribeHostClusterResult) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetDescribeHostClusterResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetDescribeHostClusterResult(val *FleetDescribeHostClusterResult) *NullableFleetDescribeHostClusterResult {
	return &NullableFleetDescribeHostClusterResult{value: val, isSet: true}
}

func (v NullableFleetDescribeHostClusterResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetDescribeHostClusterResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


