/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the SearchServiceInventoryRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchServiceInventoryRequest{}

// SearchServiceInventoryRequest struct for SearchServiceInventoryRequest
type SearchServiceInventoryRequest struct {
	// ID of a Service Environment
	EnvironmentId *string `json:"environmentId,omitempty"`
	// The search query.
	Query string `json:"query"`
	// ID of a Service
	ServiceId string `json:"serviceId"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _SearchServiceInventoryRequest SearchServiceInventoryRequest

// NewSearchServiceInventoryRequest instantiates a new SearchServiceInventoryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchServiceInventoryRequest(query string, serviceId string, token string) *SearchServiceInventoryRequest {
	this := SearchServiceInventoryRequest{}
	this.Query = query
	this.ServiceId = serviceId
	this.Token = token
	return &this
}

// NewSearchServiceInventoryRequestWithDefaults instantiates a new SearchServiceInventoryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchServiceInventoryRequestWithDefaults() *SearchServiceInventoryRequest {
	this := SearchServiceInventoryRequest{}
	return &this
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *SearchServiceInventoryRequest) GetEnvironmentId() string {
	if o == nil || IsNil(o.EnvironmentId) {
		var ret string
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchServiceInventoryRequest) GetEnvironmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentId) {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *SearchServiceInventoryRequest) HasEnvironmentId() bool {
	if o != nil && !IsNil(o.EnvironmentId) {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given string and assigns it to the EnvironmentId field.
func (o *SearchServiceInventoryRequest) SetEnvironmentId(v string) {
	o.EnvironmentId = &v
}

// GetQuery returns the Query field value
func (o *SearchServiceInventoryRequest) GetQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *SearchServiceInventoryRequest) GetQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *SearchServiceInventoryRequest) SetQuery(v string) {
	o.Query = v
}

// GetServiceId returns the ServiceId field value
func (o *SearchServiceInventoryRequest) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *SearchServiceInventoryRequest) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *SearchServiceInventoryRequest) SetServiceId(v string) {
	o.ServiceId = v
}

// GetToken returns the Token field value
func (o *SearchServiceInventoryRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *SearchServiceInventoryRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *SearchServiceInventoryRequest) SetToken(v string) {
	o.Token = v
}

func (o SearchServiceInventoryRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchServiceInventoryRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnvironmentId) {
		toSerialize["environmentId"] = o.EnvironmentId
	}
	toSerialize["query"] = o.Query
	toSerialize["serviceId"] = o.ServiceId
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SearchServiceInventoryRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"query",
		"serviceId",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSearchServiceInventoryRequest := _SearchServiceInventoryRequest{}

	err = json.Unmarshal(data, &varSearchServiceInventoryRequest)

	if err != nil {
		return err
	}

	*o = SearchServiceInventoryRequest(varSearchServiceInventoryRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "environmentId")
		delete(additionalProperties, "query")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSearchServiceInventoryRequest struct {
	value *SearchServiceInventoryRequest
	isSet bool
}

func (v NullableSearchServiceInventoryRequest) Get() *SearchServiceInventoryRequest {
	return v.value
}

func (v *NullableSearchServiceInventoryRequest) Set(val *SearchServiceInventoryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchServiceInventoryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchServiceInventoryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchServiceInventoryRequest(val *SearchServiceInventoryRequest) *NullableSearchServiceInventoryRequest {
	return &NullableSearchServiceInventoryRequest{value: val, isSet: true}
}

func (v NullableSearchServiceInventoryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchServiceInventoryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


