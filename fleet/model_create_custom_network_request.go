/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateCustomNetworkRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCustomNetworkRequest{}

// CreateCustomNetworkRequest struct for CreateCustomNetworkRequest
type CreateCustomNetworkRequest struct {
	// CIDR block for the network
	Cidr string `json:"cidr"`
	// Name of the Infra Provider
	CloudProviderName string `json:"cloudProviderName"`
	// The region of the cloud provider that the instance is running in.
	CloudProviderRegion string `json:"cloudProviderRegion"`
	// User friendly network name to help distinguish networks with same CIDRs
	Name *string `json:"name,omitempty"`
	NetworkFeaturesConfiguration *FleetNetworkFeaturesConfiguration `json:"networkFeaturesConfiguration,omitempty"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _CreateCustomNetworkRequest CreateCustomNetworkRequest

// NewCreateCustomNetworkRequest instantiates a new CreateCustomNetworkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCustomNetworkRequest(cidr string, cloudProviderName string, cloudProviderRegion string, token string) *CreateCustomNetworkRequest {
	this := CreateCustomNetworkRequest{}
	this.Cidr = cidr
	this.CloudProviderName = cloudProviderName
	this.CloudProviderRegion = cloudProviderRegion
	this.Token = token
	return &this
}

// NewCreateCustomNetworkRequestWithDefaults instantiates a new CreateCustomNetworkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCustomNetworkRequestWithDefaults() *CreateCustomNetworkRequest {
	this := CreateCustomNetworkRequest{}
	var cidr string = "10.0.0.0/16"
	this.Cidr = cidr
	return &this
}

// GetCidr returns the Cidr field value
func (o *CreateCustomNetworkRequest) GetCidr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value
// and a boolean to check if the value has been set.
func (o *CreateCustomNetworkRequest) GetCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cidr, true
}

// SetCidr sets field value
func (o *CreateCustomNetworkRequest) SetCidr(v string) {
	o.Cidr = v
}

// GetCloudProviderName returns the CloudProviderName field value
func (o *CreateCustomNetworkRequest) GetCloudProviderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProviderName
}

// GetCloudProviderNameOk returns a tuple with the CloudProviderName field value
// and a boolean to check if the value has been set.
func (o *CreateCustomNetworkRequest) GetCloudProviderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProviderName, true
}

// SetCloudProviderName sets field value
func (o *CreateCustomNetworkRequest) SetCloudProviderName(v string) {
	o.CloudProviderName = v
}

// GetCloudProviderRegion returns the CloudProviderRegion field value
func (o *CreateCustomNetworkRequest) GetCloudProviderRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProviderRegion
}

// GetCloudProviderRegionOk returns a tuple with the CloudProviderRegion field value
// and a boolean to check if the value has been set.
func (o *CreateCustomNetworkRequest) GetCloudProviderRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProviderRegion, true
}

// SetCloudProviderRegion sets field value
func (o *CreateCustomNetworkRequest) SetCloudProviderRegion(v string) {
	o.CloudProviderRegion = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateCustomNetworkRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCustomNetworkRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateCustomNetworkRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateCustomNetworkRequest) SetName(v string) {
	o.Name = &v
}

// GetNetworkFeaturesConfiguration returns the NetworkFeaturesConfiguration field value if set, zero value otherwise.
func (o *CreateCustomNetworkRequest) GetNetworkFeaturesConfiguration() FleetNetworkFeaturesConfiguration {
	if o == nil || IsNil(o.NetworkFeaturesConfiguration) {
		var ret FleetNetworkFeaturesConfiguration
		return ret
	}
	return *o.NetworkFeaturesConfiguration
}

// GetNetworkFeaturesConfigurationOk returns a tuple with the NetworkFeaturesConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCustomNetworkRequest) GetNetworkFeaturesConfigurationOk() (*FleetNetworkFeaturesConfiguration, bool) {
	if o == nil || IsNil(o.NetworkFeaturesConfiguration) {
		return nil, false
	}
	return o.NetworkFeaturesConfiguration, true
}

// HasNetworkFeaturesConfiguration returns a boolean if a field has been set.
func (o *CreateCustomNetworkRequest) HasNetworkFeaturesConfiguration() bool {
	if o != nil && !IsNil(o.NetworkFeaturesConfiguration) {
		return true
	}

	return false
}

// SetNetworkFeaturesConfiguration gets a reference to the given FleetNetworkFeaturesConfiguration and assigns it to the NetworkFeaturesConfiguration field.
func (o *CreateCustomNetworkRequest) SetNetworkFeaturesConfiguration(v FleetNetworkFeaturesConfiguration) {
	o.NetworkFeaturesConfiguration = &v
}

// GetToken returns the Token field value
func (o *CreateCustomNetworkRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *CreateCustomNetworkRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *CreateCustomNetworkRequest) SetToken(v string) {
	o.Token = v
}

func (o CreateCustomNetworkRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCustomNetworkRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cidr"] = o.Cidr
	toSerialize["cloudProviderName"] = o.CloudProviderName
	toSerialize["cloudProviderRegion"] = o.CloudProviderRegion
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NetworkFeaturesConfiguration) {
		toSerialize["networkFeaturesConfiguration"] = o.NetworkFeaturesConfiguration
	}
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateCustomNetworkRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cidr",
		"cloudProviderName",
		"cloudProviderRegion",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCustomNetworkRequest := _CreateCustomNetworkRequest{}

	err = json.Unmarshal(data, &varCreateCustomNetworkRequest)

	if err != nil {
		return err
	}

	*o = CreateCustomNetworkRequest(varCreateCustomNetworkRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cidr")
		delete(additionalProperties, "cloudProviderName")
		delete(additionalProperties, "cloudProviderRegion")
		delete(additionalProperties, "name")
		delete(additionalProperties, "networkFeaturesConfiguration")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateCustomNetworkRequest struct {
	value *CreateCustomNetworkRequest
	isSet bool
}

func (v NullableCreateCustomNetworkRequest) Get() *CreateCustomNetworkRequest {
	return v.value
}

func (v *NullableCreateCustomNetworkRequest) Set(val *CreateCustomNetworkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCustomNetworkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCustomNetworkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCustomNetworkRequest(val *CreateCustomNetworkRequest) *NullableCreateCustomNetworkRequest {
	return &NullableCreateCustomNetworkRequest{value: val, isSet: true}
}

func (v NullableCreateCustomNetworkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCustomNetworkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


