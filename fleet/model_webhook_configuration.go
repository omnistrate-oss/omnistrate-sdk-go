/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WebhookConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookConfiguration{}

// WebhookConfiguration struct for WebhookConfiguration
type WebhookConfiguration struct {
	// Additional parameters to include in the notification body
	AdditionalBodyParameters *map[string]string `json:"additionalBodyParameters,omitempty"`
	// HTTP headers to include in the notification
	Headers *map[string]string `json:"headers,omitempty"`
	// HTTP method to use for the notification
	Method string `json:"method"`
	// URL to send notifications to
	Url string `json:"url"`
}

type _WebhookConfiguration WebhookConfiguration

// NewWebhookConfiguration instantiates a new WebhookConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookConfiguration(method string, url string) *WebhookConfiguration {
	this := WebhookConfiguration{}
	this.Method = method
	this.Url = url
	return &this
}

// NewWebhookConfigurationWithDefaults instantiates a new WebhookConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookConfigurationWithDefaults() *WebhookConfiguration {
	this := WebhookConfiguration{}
	return &this
}

// GetAdditionalBodyParameters returns the AdditionalBodyParameters field value if set, zero value otherwise.
func (o *WebhookConfiguration) GetAdditionalBodyParameters() map[string]string {
	if o == nil || IsNil(o.AdditionalBodyParameters) {
		var ret map[string]string
		return ret
	}
	return *o.AdditionalBodyParameters
}

// GetAdditionalBodyParametersOk returns a tuple with the AdditionalBodyParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookConfiguration) GetAdditionalBodyParametersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.AdditionalBodyParameters) {
		return nil, false
	}
	return o.AdditionalBodyParameters, true
}

// HasAdditionalBodyParameters returns a boolean if a field has been set.
func (o *WebhookConfiguration) HasAdditionalBodyParameters() bool {
	if o != nil && !IsNil(o.AdditionalBodyParameters) {
		return true
	}

	return false
}

// SetAdditionalBodyParameters gets a reference to the given map[string]string and assigns it to the AdditionalBodyParameters field.
func (o *WebhookConfiguration) SetAdditionalBodyParameters(v map[string]string) {
	o.AdditionalBodyParameters = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *WebhookConfiguration) GetHeaders() map[string]string {
	if o == nil || IsNil(o.Headers) {
		var ret map[string]string
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookConfiguration) GetHeadersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Headers) {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *WebhookConfiguration) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]string and assigns it to the Headers field.
func (o *WebhookConfiguration) SetHeaders(v map[string]string) {
	o.Headers = &v
}

// GetMethod returns the Method field value
func (o *WebhookConfiguration) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *WebhookConfiguration) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *WebhookConfiguration) SetMethod(v string) {
	o.Method = v
}

// GetUrl returns the Url field value
func (o *WebhookConfiguration) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *WebhookConfiguration) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *WebhookConfiguration) SetUrl(v string) {
	o.Url = v
}

func (o WebhookConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalBodyParameters) {
		toSerialize["additionalBodyParameters"] = o.AdditionalBodyParameters
	}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	toSerialize["method"] = o.Method
	toSerialize["url"] = o.Url
	return toSerialize, nil
}

func (o *WebhookConfiguration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"method",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookConfiguration := _WebhookConfiguration{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookConfiguration)

	if err != nil {
		return err
	}

	*o = WebhookConfiguration(varWebhookConfiguration)

	return err
}

type NullableWebhookConfiguration struct {
	value *WebhookConfiguration
	isSet bool
}

func (v NullableWebhookConfiguration) Get() *WebhookConfiguration {
	return v.value
}

func (v *NullableWebhookConfiguration) Set(val *WebhookConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookConfiguration(val *WebhookConfiguration) *NullableWebhookConfiguration {
	return &NullableWebhookConfiguration{value: val, isSet: true}
}

func (v NullableWebhookConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


