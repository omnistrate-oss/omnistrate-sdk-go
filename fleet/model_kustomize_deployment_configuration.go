/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the KustomizeDeploymentConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KustomizeDeploymentConfiguration{}

// KustomizeDeploymentConfiguration struct for KustomizeDeploymentConfiguration
type KustomizeDeploymentConfiguration struct {
	// Base path for Kustomize configuration
	BasePath string `json:"BasePath"`
	// Errors encountered during the Kustomize deployment
	DeploymentErrors *string `json:"DeploymentErrors,omitempty"`
	// Overlays for Kustomize deployment
	Overlays map[string]string `json:"Overlays"`
	AdditionalProperties map[string]interface{}
}

type _KustomizeDeploymentConfiguration KustomizeDeploymentConfiguration

// NewKustomizeDeploymentConfiguration instantiates a new KustomizeDeploymentConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKustomizeDeploymentConfiguration(basePath string, overlays map[string]string) *KustomizeDeploymentConfiguration {
	this := KustomizeDeploymentConfiguration{}
	this.BasePath = basePath
	this.Overlays = overlays
	return &this
}

// NewKustomizeDeploymentConfigurationWithDefaults instantiates a new KustomizeDeploymentConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKustomizeDeploymentConfigurationWithDefaults() *KustomizeDeploymentConfiguration {
	this := KustomizeDeploymentConfiguration{}
	return &this
}

// GetBasePath returns the BasePath field value
func (o *KustomizeDeploymentConfiguration) GetBasePath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BasePath
}

// GetBasePathOk returns a tuple with the BasePath field value
// and a boolean to check if the value has been set.
func (o *KustomizeDeploymentConfiguration) GetBasePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BasePath, true
}

// SetBasePath sets field value
func (o *KustomizeDeploymentConfiguration) SetBasePath(v string) {
	o.BasePath = v
}

// GetDeploymentErrors returns the DeploymentErrors field value if set, zero value otherwise.
func (o *KustomizeDeploymentConfiguration) GetDeploymentErrors() string {
	if o == nil || IsNil(o.DeploymentErrors) {
		var ret string
		return ret
	}
	return *o.DeploymentErrors
}

// GetDeploymentErrorsOk returns a tuple with the DeploymentErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KustomizeDeploymentConfiguration) GetDeploymentErrorsOk() (*string, bool) {
	if o == nil || IsNil(o.DeploymentErrors) {
		return nil, false
	}
	return o.DeploymentErrors, true
}

// HasDeploymentErrors returns a boolean if a field has been set.
func (o *KustomizeDeploymentConfiguration) HasDeploymentErrors() bool {
	if o != nil && !IsNil(o.DeploymentErrors) {
		return true
	}

	return false
}

// SetDeploymentErrors gets a reference to the given string and assigns it to the DeploymentErrors field.
func (o *KustomizeDeploymentConfiguration) SetDeploymentErrors(v string) {
	o.DeploymentErrors = &v
}

// GetOverlays returns the Overlays field value
func (o *KustomizeDeploymentConfiguration) GetOverlays() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Overlays
}

// GetOverlaysOk returns a tuple with the Overlays field value
// and a boolean to check if the value has been set.
func (o *KustomizeDeploymentConfiguration) GetOverlaysOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Overlays, true
}

// SetOverlays sets field value
func (o *KustomizeDeploymentConfiguration) SetOverlays(v map[string]string) {
	o.Overlays = v
}

func (o KustomizeDeploymentConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KustomizeDeploymentConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["BasePath"] = o.BasePath
	if !IsNil(o.DeploymentErrors) {
		toSerialize["DeploymentErrors"] = o.DeploymentErrors
	}
	toSerialize["Overlays"] = o.Overlays

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KustomizeDeploymentConfiguration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"BasePath",
		"Overlays",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKustomizeDeploymentConfiguration := _KustomizeDeploymentConfiguration{}

	err = json.Unmarshal(data, &varKustomizeDeploymentConfiguration)

	if err != nil {
		return err
	}

	*o = KustomizeDeploymentConfiguration(varKustomizeDeploymentConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "BasePath")
		delete(additionalProperties, "DeploymentErrors")
		delete(additionalProperties, "Overlays")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKustomizeDeploymentConfiguration struct {
	value *KustomizeDeploymentConfiguration
	isSet bool
}

func (v NullableKustomizeDeploymentConfiguration) Get() *KustomizeDeploymentConfiguration {
	return v.value
}

func (v *NullableKustomizeDeploymentConfiguration) Set(val *KustomizeDeploymentConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableKustomizeDeploymentConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableKustomizeDeploymentConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKustomizeDeploymentConfiguration(val *KustomizeDeploymentConfiguration) *NullableKustomizeDeploymentConfiguration {
	return &NullableKustomizeDeploymentConfiguration{value: val, isSet: true}
}

func (v NullableKustomizeDeploymentConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKustomizeDeploymentConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


