/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the ResourceVersionSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceVersionSummary{}

// ResourceVersionSummary struct for ResourceVersionSummary
type ResourceVersionSummary struct {
	// The capabilities enabled for the resource
	Capabilities []ResourceCapability `json:"capabilities,omitempty"`
	// Whether the resource is external.
	ExternalResource *bool `json:"externalResource,omitempty"`
	// The latest version of the resource.
	LatestVersion *string `json:"latestVersion,omitempty"`
	// ID of a resource
	ResourceId *string `json:"resourceId,omitempty"`
	// The name of the resource.
	ResourceName *string `json:"resourceName,omitempty"`
	// The version of the resource deployed for the instance.
	Version *string `json:"version,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ResourceVersionSummary ResourceVersionSummary

// NewResourceVersionSummary instantiates a new ResourceVersionSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceVersionSummary() *ResourceVersionSummary {
	this := ResourceVersionSummary{}
	return &this
}

// NewResourceVersionSummaryWithDefaults instantiates a new ResourceVersionSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceVersionSummaryWithDefaults() *ResourceVersionSummary {
	this := ResourceVersionSummary{}
	return &this
}

// GetCapabilities returns the Capabilities field value if set, zero value otherwise.
func (o *ResourceVersionSummary) GetCapabilities() []ResourceCapability {
	if o == nil || IsNil(o.Capabilities) {
		var ret []ResourceCapability
		return ret
	}
	return o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceVersionSummary) GetCapabilitiesOk() ([]ResourceCapability, bool) {
	if o == nil || IsNil(o.Capabilities) {
		return nil, false
	}
	return o.Capabilities, true
}

// HasCapabilities returns a boolean if a field has been set.
func (o *ResourceVersionSummary) HasCapabilities() bool {
	if o != nil && !IsNil(o.Capabilities) {
		return true
	}

	return false
}

// SetCapabilities gets a reference to the given []ResourceCapability and assigns it to the Capabilities field.
func (o *ResourceVersionSummary) SetCapabilities(v []ResourceCapability) {
	o.Capabilities = v
}

// GetExternalResource returns the ExternalResource field value if set, zero value otherwise.
func (o *ResourceVersionSummary) GetExternalResource() bool {
	if o == nil || IsNil(o.ExternalResource) {
		var ret bool
		return ret
	}
	return *o.ExternalResource
}

// GetExternalResourceOk returns a tuple with the ExternalResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceVersionSummary) GetExternalResourceOk() (*bool, bool) {
	if o == nil || IsNil(o.ExternalResource) {
		return nil, false
	}
	return o.ExternalResource, true
}

// HasExternalResource returns a boolean if a field has been set.
func (o *ResourceVersionSummary) HasExternalResource() bool {
	if o != nil && !IsNil(o.ExternalResource) {
		return true
	}

	return false
}

// SetExternalResource gets a reference to the given bool and assigns it to the ExternalResource field.
func (o *ResourceVersionSummary) SetExternalResource(v bool) {
	o.ExternalResource = &v
}

// GetLatestVersion returns the LatestVersion field value if set, zero value otherwise.
func (o *ResourceVersionSummary) GetLatestVersion() string {
	if o == nil || IsNil(o.LatestVersion) {
		var ret string
		return ret
	}
	return *o.LatestVersion
}

// GetLatestVersionOk returns a tuple with the LatestVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceVersionSummary) GetLatestVersionOk() (*string, bool) {
	if o == nil || IsNil(o.LatestVersion) {
		return nil, false
	}
	return o.LatestVersion, true
}

// HasLatestVersion returns a boolean if a field has been set.
func (o *ResourceVersionSummary) HasLatestVersion() bool {
	if o != nil && !IsNil(o.LatestVersion) {
		return true
	}

	return false
}

// SetLatestVersion gets a reference to the given string and assigns it to the LatestVersion field.
func (o *ResourceVersionSummary) SetLatestVersion(v string) {
	o.LatestVersion = &v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *ResourceVersionSummary) GetResourceId() string {
	if o == nil || IsNil(o.ResourceId) {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceVersionSummary) GetResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceId) {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *ResourceVersionSummary) HasResourceId() bool {
	if o != nil && !IsNil(o.ResourceId) {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *ResourceVersionSummary) SetResourceId(v string) {
	o.ResourceId = &v
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise.
func (o *ResourceVersionSummary) GetResourceName() string {
	if o == nil || IsNil(o.ResourceName) {
		var ret string
		return ret
	}
	return *o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceVersionSummary) GetResourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceName) {
		return nil, false
	}
	return o.ResourceName, true
}

// HasResourceName returns a boolean if a field has been set.
func (o *ResourceVersionSummary) HasResourceName() bool {
	if o != nil && !IsNil(o.ResourceName) {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given string and assigns it to the ResourceName field.
func (o *ResourceVersionSummary) SetResourceName(v string) {
	o.ResourceName = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ResourceVersionSummary) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceVersionSummary) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ResourceVersionSummary) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ResourceVersionSummary) SetVersion(v string) {
	o.Version = &v
}

func (o ResourceVersionSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceVersionSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Capabilities) {
		toSerialize["capabilities"] = o.Capabilities
	}
	if !IsNil(o.ExternalResource) {
		toSerialize["externalResource"] = o.ExternalResource
	}
	if !IsNil(o.LatestVersion) {
		toSerialize["latestVersion"] = o.LatestVersion
	}
	if !IsNil(o.ResourceId) {
		toSerialize["resourceId"] = o.ResourceId
	}
	if !IsNil(o.ResourceName) {
		toSerialize["resourceName"] = o.ResourceName
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResourceVersionSummary) UnmarshalJSON(data []byte) (err error) {
	varResourceVersionSummary := _ResourceVersionSummary{}

	err = json.Unmarshal(data, &varResourceVersionSummary)

	if err != nil {
		return err
	}

	*o = ResourceVersionSummary(varResourceVersionSummary)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "capabilities")
		delete(additionalProperties, "externalResource")
		delete(additionalProperties, "latestVersion")
		delete(additionalProperties, "resourceId")
		delete(additionalProperties, "resourceName")
		delete(additionalProperties, "version")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResourceVersionSummary struct {
	value *ResourceVersionSummary
	isSet bool
}

func (v NullableResourceVersionSummary) Get() *ResourceVersionSummary {
	return v.value
}

func (v *NullableResourceVersionSummary) Set(val *ResourceVersionSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceVersionSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceVersionSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceVersionSummary(val *ResourceVersionSummary) *NullableResourceVersionSummary {
	return &NullableResourceVersionSummary{value: val, isSet: true}
}

func (v NullableResourceVersionSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceVersionSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


