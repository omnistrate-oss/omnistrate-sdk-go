/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the ListEntitiesResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListEntitiesResult{}

// ListEntitiesResult Result of listing entities in a host cluster
type ListEntitiesResult struct {
	// Array of entities matching the criteria
	Entities []Entity `json:"entities,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListEntitiesResult ListEntitiesResult

// NewListEntitiesResult instantiates a new ListEntitiesResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListEntitiesResult() *ListEntitiesResult {
	this := ListEntitiesResult{}
	return &this
}

// NewListEntitiesResultWithDefaults instantiates a new ListEntitiesResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListEntitiesResultWithDefaults() *ListEntitiesResult {
	this := ListEntitiesResult{}
	return &this
}

// GetEntities returns the Entities field value if set, zero value otherwise.
func (o *ListEntitiesResult) GetEntities() []Entity {
	if o == nil || IsNil(o.Entities) {
		var ret []Entity
		return ret
	}
	return o.Entities
}

// GetEntitiesOk returns a tuple with the Entities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListEntitiesResult) GetEntitiesOk() ([]Entity, bool) {
	if o == nil || IsNil(o.Entities) {
		return nil, false
	}
	return o.Entities, true
}

// HasEntities returns a boolean if a field has been set.
func (o *ListEntitiesResult) HasEntities() bool {
	if o != nil && !IsNil(o.Entities) {
		return true
	}

	return false
}

// SetEntities gets a reference to the given []Entity and assigns it to the Entities field.
func (o *ListEntitiesResult) SetEntities(v []Entity) {
	o.Entities = v
}

func (o ListEntitiesResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListEntitiesResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Entities) {
		toSerialize["entities"] = o.Entities
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListEntitiesResult) UnmarshalJSON(data []byte) (err error) {
	varListEntitiesResult := _ListEntitiesResult{}

	err = json.Unmarshal(data, &varListEntitiesResult)

	if err != nil {
		return err
	}

	*o = ListEntitiesResult(varListEntitiesResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "entities")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListEntitiesResult struct {
	value *ListEntitiesResult
	isSet bool
}

func (v NullableListEntitiesResult) Get() *ListEntitiesResult {
	return v.value
}

func (v *NullableListEntitiesResult) Set(val *ListEntitiesResult) {
	v.value = val
	v.isSet = true
}

func (v NullableListEntitiesResult) IsSet() bool {
	return v.isSet
}

func (v *NullableListEntitiesResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListEntitiesResult(val *ListEntitiesResult) *NullableListEntitiesResult {
	return &NullableListEntitiesResult{value: val, isSet: true}
}

func (v NullableListEntitiesResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListEntitiesResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


