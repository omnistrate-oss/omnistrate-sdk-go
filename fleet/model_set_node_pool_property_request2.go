/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the SetNodePoolPropertyRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetNodePoolPropertyRequest2{}

// SetNodePoolPropertyRequest2 struct for SetNodePoolPropertyRequest2
type SetNodePoolPropertyRequest2 struct {
	// New maximum size for the node pool
	MaxSize int64 `json:"maxSize"`
	AdditionalProperties map[string]interface{}
}

type _SetNodePoolPropertyRequest2 SetNodePoolPropertyRequest2

// NewSetNodePoolPropertyRequest2 instantiates a new SetNodePoolPropertyRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetNodePoolPropertyRequest2(maxSize int64) *SetNodePoolPropertyRequest2 {
	this := SetNodePoolPropertyRequest2{}
	this.MaxSize = maxSize
	return &this
}

// NewSetNodePoolPropertyRequest2WithDefaults instantiates a new SetNodePoolPropertyRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetNodePoolPropertyRequest2WithDefaults() *SetNodePoolPropertyRequest2 {
	this := SetNodePoolPropertyRequest2{}
	return &this
}

// GetMaxSize returns the MaxSize field value
func (o *SetNodePoolPropertyRequest2) GetMaxSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MaxSize
}

// GetMaxSizeOk returns a tuple with the MaxSize field value
// and a boolean to check if the value has been set.
func (o *SetNodePoolPropertyRequest2) GetMaxSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxSize, true
}

// SetMaxSize sets field value
func (o *SetNodePoolPropertyRequest2) SetMaxSize(v int64) {
	o.MaxSize = v
}

func (o SetNodePoolPropertyRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetNodePoolPropertyRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["maxSize"] = o.MaxSize

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SetNodePoolPropertyRequest2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"maxSize",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSetNodePoolPropertyRequest2 := _SetNodePoolPropertyRequest2{}

	err = json.Unmarshal(data, &varSetNodePoolPropertyRequest2)

	if err != nil {
		return err
	}

	*o = SetNodePoolPropertyRequest2(varSetNodePoolPropertyRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "maxSize")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSetNodePoolPropertyRequest2 struct {
	value *SetNodePoolPropertyRequest2
	isSet bool
}

func (v NullableSetNodePoolPropertyRequest2) Get() *SetNodePoolPropertyRequest2 {
	return v.value
}

func (v *NullableSetNodePoolPropertyRequest2) Set(val *SetNodePoolPropertyRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableSetNodePoolPropertyRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableSetNodePoolPropertyRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetNodePoolPropertyRequest2(val *SetNodePoolPropertyRequest2) *NullableSetNodePoolPropertyRequest2 {
	return &NullableSetNodePoolPropertyRequest2{value: val, isSet: true}
}

func (v NullableSetNodePoolPropertyRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetNodePoolPropertyRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


