/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the FleetInvoice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FleetInvoice{}

// FleetInvoice struct for FleetInvoice
type FleetInvoice struct {
	// Email of the user that this invoice is issued to
	BillIssuedToUserEmail *string `json:"billIssuedToUserEmail,omitempty"`
	// ID of the user that this invoice is issued to
	BillIssuedToUserID *string `json:"billIssuedToUserID,omitempty"`
	// Name of the user that this invoice is issued to
	BillIssuedToUserName *string `json:"billIssuedToUserName,omitempty"`
	// Currency of the invoice
	Currency *string `json:"currency,omitempty"`
	// ID of an Org
	CustomerId *string `json:"customerId,omitempty"`
	// Organization name of the customer
	CustomerName *string `json:"customerName,omitempty"`
	// Due date in ISO 8601 format
	DueDate *string `json:"dueDate,omitempty"`
	// ID of the invoice
	Id *string `json:"id,omitempty"`
	// Date of the invoice in ISO 8601 format
	InvoiceDate *string `json:"invoiceDate,omitempty"`
	// Stripe URL for this invoice
	InvoiceUrl *string `json:"invoiceUrl,omitempty"`
	// Payment terms of the invoice
	PaymentTerms *string `json:"paymentTerms,omitempty"`
	// This describes the status of the invoice and is set by the payment provider
	Status *string `json:"status,omitempty"`
	// Amount of tax, if any
	TaxAmount *float64 `json:"taxAmount,omitempty"`
	// Amount of Invoice
	TotalAmount *float64 `json:"totalAmount,omitempty"`
	// Amount of Invoice without tax
	TotalAmountWithoutTax *float64 `json:"totalAmountWithoutTax,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FleetInvoice FleetInvoice

// NewFleetInvoice instantiates a new FleetInvoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetInvoice() *FleetInvoice {
	this := FleetInvoice{}
	return &this
}

// NewFleetInvoiceWithDefaults instantiates a new FleetInvoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetInvoiceWithDefaults() *FleetInvoice {
	this := FleetInvoice{}
	return &this
}

// GetBillIssuedToUserEmail returns the BillIssuedToUserEmail field value if set, zero value otherwise.
func (o *FleetInvoice) GetBillIssuedToUserEmail() string {
	if o == nil || IsNil(o.BillIssuedToUserEmail) {
		var ret string
		return ret
	}
	return *o.BillIssuedToUserEmail
}

// GetBillIssuedToUserEmailOk returns a tuple with the BillIssuedToUserEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetInvoice) GetBillIssuedToUserEmailOk() (*string, bool) {
	if o == nil || IsNil(o.BillIssuedToUserEmail) {
		return nil, false
	}
	return o.BillIssuedToUserEmail, true
}

// HasBillIssuedToUserEmail returns a boolean if a field has been set.
func (o *FleetInvoice) HasBillIssuedToUserEmail() bool {
	if o != nil && !IsNil(o.BillIssuedToUserEmail) {
		return true
	}

	return false
}

// SetBillIssuedToUserEmail gets a reference to the given string and assigns it to the BillIssuedToUserEmail field.
func (o *FleetInvoice) SetBillIssuedToUserEmail(v string) {
	o.BillIssuedToUserEmail = &v
}

// GetBillIssuedToUserID returns the BillIssuedToUserID field value if set, zero value otherwise.
func (o *FleetInvoice) GetBillIssuedToUserID() string {
	if o == nil || IsNil(o.BillIssuedToUserID) {
		var ret string
		return ret
	}
	return *o.BillIssuedToUserID
}

// GetBillIssuedToUserIDOk returns a tuple with the BillIssuedToUserID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetInvoice) GetBillIssuedToUserIDOk() (*string, bool) {
	if o == nil || IsNil(o.BillIssuedToUserID) {
		return nil, false
	}
	return o.BillIssuedToUserID, true
}

// HasBillIssuedToUserID returns a boolean if a field has been set.
func (o *FleetInvoice) HasBillIssuedToUserID() bool {
	if o != nil && !IsNil(o.BillIssuedToUserID) {
		return true
	}

	return false
}

// SetBillIssuedToUserID gets a reference to the given string and assigns it to the BillIssuedToUserID field.
func (o *FleetInvoice) SetBillIssuedToUserID(v string) {
	o.BillIssuedToUserID = &v
}

// GetBillIssuedToUserName returns the BillIssuedToUserName field value if set, zero value otherwise.
func (o *FleetInvoice) GetBillIssuedToUserName() string {
	if o == nil || IsNil(o.BillIssuedToUserName) {
		var ret string
		return ret
	}
	return *o.BillIssuedToUserName
}

// GetBillIssuedToUserNameOk returns a tuple with the BillIssuedToUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetInvoice) GetBillIssuedToUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.BillIssuedToUserName) {
		return nil, false
	}
	return o.BillIssuedToUserName, true
}

// HasBillIssuedToUserName returns a boolean if a field has been set.
func (o *FleetInvoice) HasBillIssuedToUserName() bool {
	if o != nil && !IsNil(o.BillIssuedToUserName) {
		return true
	}

	return false
}

// SetBillIssuedToUserName gets a reference to the given string and assigns it to the BillIssuedToUserName field.
func (o *FleetInvoice) SetBillIssuedToUserName(v string) {
	o.BillIssuedToUserName = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *FleetInvoice) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetInvoice) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *FleetInvoice) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *FleetInvoice) SetCurrency(v string) {
	o.Currency = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *FleetInvoice) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetInvoice) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *FleetInvoice) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *FleetInvoice) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetCustomerName returns the CustomerName field value if set, zero value otherwise.
func (o *FleetInvoice) GetCustomerName() string {
	if o == nil || IsNil(o.CustomerName) {
		var ret string
		return ret
	}
	return *o.CustomerName
}

// GetCustomerNameOk returns a tuple with the CustomerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetInvoice) GetCustomerNameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerName) {
		return nil, false
	}
	return o.CustomerName, true
}

// HasCustomerName returns a boolean if a field has been set.
func (o *FleetInvoice) HasCustomerName() bool {
	if o != nil && !IsNil(o.CustomerName) {
		return true
	}

	return false
}

// SetCustomerName gets a reference to the given string and assigns it to the CustomerName field.
func (o *FleetInvoice) SetCustomerName(v string) {
	o.CustomerName = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *FleetInvoice) GetDueDate() string {
	if o == nil || IsNil(o.DueDate) {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetInvoice) GetDueDateOk() (*string, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *FleetInvoice) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *FleetInvoice) SetDueDate(v string) {
	o.DueDate = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FleetInvoice) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetInvoice) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FleetInvoice) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FleetInvoice) SetId(v string) {
	o.Id = &v
}

// GetInvoiceDate returns the InvoiceDate field value if set, zero value otherwise.
func (o *FleetInvoice) GetInvoiceDate() string {
	if o == nil || IsNil(o.InvoiceDate) {
		var ret string
		return ret
	}
	return *o.InvoiceDate
}

// GetInvoiceDateOk returns a tuple with the InvoiceDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetInvoice) GetInvoiceDateOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceDate) {
		return nil, false
	}
	return o.InvoiceDate, true
}

// HasInvoiceDate returns a boolean if a field has been set.
func (o *FleetInvoice) HasInvoiceDate() bool {
	if o != nil && !IsNil(o.InvoiceDate) {
		return true
	}

	return false
}

// SetInvoiceDate gets a reference to the given string and assigns it to the InvoiceDate field.
func (o *FleetInvoice) SetInvoiceDate(v string) {
	o.InvoiceDate = &v
}

// GetInvoiceUrl returns the InvoiceUrl field value if set, zero value otherwise.
func (o *FleetInvoice) GetInvoiceUrl() string {
	if o == nil || IsNil(o.InvoiceUrl) {
		var ret string
		return ret
	}
	return *o.InvoiceUrl
}

// GetInvoiceUrlOk returns a tuple with the InvoiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetInvoice) GetInvoiceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceUrl) {
		return nil, false
	}
	return o.InvoiceUrl, true
}

// HasInvoiceUrl returns a boolean if a field has been set.
func (o *FleetInvoice) HasInvoiceUrl() bool {
	if o != nil && !IsNil(o.InvoiceUrl) {
		return true
	}

	return false
}

// SetInvoiceUrl gets a reference to the given string and assigns it to the InvoiceUrl field.
func (o *FleetInvoice) SetInvoiceUrl(v string) {
	o.InvoiceUrl = &v
}

// GetPaymentTerms returns the PaymentTerms field value if set, zero value otherwise.
func (o *FleetInvoice) GetPaymentTerms() string {
	if o == nil || IsNil(o.PaymentTerms) {
		var ret string
		return ret
	}
	return *o.PaymentTerms
}

// GetPaymentTermsOk returns a tuple with the PaymentTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetInvoice) GetPaymentTermsOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentTerms) {
		return nil, false
	}
	return o.PaymentTerms, true
}

// HasPaymentTerms returns a boolean if a field has been set.
func (o *FleetInvoice) HasPaymentTerms() bool {
	if o != nil && !IsNil(o.PaymentTerms) {
		return true
	}

	return false
}

// SetPaymentTerms gets a reference to the given string and assigns it to the PaymentTerms field.
func (o *FleetInvoice) SetPaymentTerms(v string) {
	o.PaymentTerms = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *FleetInvoice) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetInvoice) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *FleetInvoice) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *FleetInvoice) SetStatus(v string) {
	o.Status = &v
}

// GetTaxAmount returns the TaxAmount field value if set, zero value otherwise.
func (o *FleetInvoice) GetTaxAmount() float64 {
	if o == nil || IsNil(o.TaxAmount) {
		var ret float64
		return ret
	}
	return *o.TaxAmount
}

// GetTaxAmountOk returns a tuple with the TaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetInvoice) GetTaxAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.TaxAmount) {
		return nil, false
	}
	return o.TaxAmount, true
}

// HasTaxAmount returns a boolean if a field has been set.
func (o *FleetInvoice) HasTaxAmount() bool {
	if o != nil && !IsNil(o.TaxAmount) {
		return true
	}

	return false
}

// SetTaxAmount gets a reference to the given float64 and assigns it to the TaxAmount field.
func (o *FleetInvoice) SetTaxAmount(v float64) {
	o.TaxAmount = &v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *FleetInvoice) GetTotalAmount() float64 {
	if o == nil || IsNil(o.TotalAmount) {
		var ret float64
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetInvoice) GetTotalAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalAmount) {
		return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *FleetInvoice) HasTotalAmount() bool {
	if o != nil && !IsNil(o.TotalAmount) {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given float64 and assigns it to the TotalAmount field.
func (o *FleetInvoice) SetTotalAmount(v float64) {
	o.TotalAmount = &v
}

// GetTotalAmountWithoutTax returns the TotalAmountWithoutTax field value if set, zero value otherwise.
func (o *FleetInvoice) GetTotalAmountWithoutTax() float64 {
	if o == nil || IsNil(o.TotalAmountWithoutTax) {
		var ret float64
		return ret
	}
	return *o.TotalAmountWithoutTax
}

// GetTotalAmountWithoutTaxOk returns a tuple with the TotalAmountWithoutTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetInvoice) GetTotalAmountWithoutTaxOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalAmountWithoutTax) {
		return nil, false
	}
	return o.TotalAmountWithoutTax, true
}

// HasTotalAmountWithoutTax returns a boolean if a field has been set.
func (o *FleetInvoice) HasTotalAmountWithoutTax() bool {
	if o != nil && !IsNil(o.TotalAmountWithoutTax) {
		return true
	}

	return false
}

// SetTotalAmountWithoutTax gets a reference to the given float64 and assigns it to the TotalAmountWithoutTax field.
func (o *FleetInvoice) SetTotalAmountWithoutTax(v float64) {
	o.TotalAmountWithoutTax = &v
}

func (o FleetInvoice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FleetInvoice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillIssuedToUserEmail) {
		toSerialize["billIssuedToUserEmail"] = o.BillIssuedToUserEmail
	}
	if !IsNil(o.BillIssuedToUserID) {
		toSerialize["billIssuedToUserID"] = o.BillIssuedToUserID
	}
	if !IsNil(o.BillIssuedToUserName) {
		toSerialize["billIssuedToUserName"] = o.BillIssuedToUserName
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customerId"] = o.CustomerId
	}
	if !IsNil(o.CustomerName) {
		toSerialize["customerName"] = o.CustomerName
	}
	if !IsNil(o.DueDate) {
		toSerialize["dueDate"] = o.DueDate
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InvoiceDate) {
		toSerialize["invoiceDate"] = o.InvoiceDate
	}
	if !IsNil(o.InvoiceUrl) {
		toSerialize["invoiceUrl"] = o.InvoiceUrl
	}
	if !IsNil(o.PaymentTerms) {
		toSerialize["paymentTerms"] = o.PaymentTerms
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TaxAmount) {
		toSerialize["taxAmount"] = o.TaxAmount
	}
	if !IsNil(o.TotalAmount) {
		toSerialize["totalAmount"] = o.TotalAmount
	}
	if !IsNil(o.TotalAmountWithoutTax) {
		toSerialize["totalAmountWithoutTax"] = o.TotalAmountWithoutTax
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FleetInvoice) UnmarshalJSON(data []byte) (err error) {
	varFleetInvoice := _FleetInvoice{}

	err = json.Unmarshal(data, &varFleetInvoice)

	if err != nil {
		return err
	}

	*o = FleetInvoice(varFleetInvoice)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "billIssuedToUserEmail")
		delete(additionalProperties, "billIssuedToUserID")
		delete(additionalProperties, "billIssuedToUserName")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "customerId")
		delete(additionalProperties, "customerName")
		delete(additionalProperties, "dueDate")
		delete(additionalProperties, "id")
		delete(additionalProperties, "invoiceDate")
		delete(additionalProperties, "invoiceUrl")
		delete(additionalProperties, "paymentTerms")
		delete(additionalProperties, "status")
		delete(additionalProperties, "taxAmount")
		delete(additionalProperties, "totalAmount")
		delete(additionalProperties, "totalAmountWithoutTax")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFleetInvoice struct {
	value *FleetInvoice
	isSet bool
}

func (v NullableFleetInvoice) Get() *FleetInvoice {
	return v.value
}

func (v *NullableFleetInvoice) Set(val *FleetInvoice) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetInvoice(val *FleetInvoice) *NullableFleetInvoice {
	return &NullableFleetInvoice{value: val, isSet: true}
}

func (v NullableFleetInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


