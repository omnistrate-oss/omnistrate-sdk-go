/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the FleetDescribeSubscriptionResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FleetDescribeSubscriptionResult{}

// FleetDescribeSubscriptionResult struct for FleetDescribeSubscriptionResult
type FleetDescribeSubscriptionResult struct {
	// Whether to allow creating instances when payment is not configured.
	AllowCreatesWhenPaymentNotConfigured *bool `json:"allowCreatesWhenPaymentNotConfigured,omitempty"`
	// The billing provider type
	BillingProvider *string `json:"billingProvider,omitempty"`
	// The time that this subscription was created
	CreatedAt string `json:"createdAt"`
	// The active pricing for the subscription at the time of the request.
	CurrentActivePricePerUnit map[string]interface{} `json:"currentActivePricePerUnit,omitempty"`
	// Whether this subscription has a custom price
	CustomPrice *bool `json:"customPrice,omitempty"`
	// The external payer ID to record which customer should pay for this subscription
	ExternalPayerId *string `json:"externalPayerId,omitempty"`
	// ID of a Subscription
	Id string `json:"id"`
	// The number of active instances in the subscription
	InstanceCount int64 `json:"instanceCount"`
	// The maximum number of instances that can be created for this subscription.
	MaxNumberOfInstances *int64 `json:"maxNumberOfInstances,omitempty"`
	// ID of a Product Tier
	ProductTierId string `json:"productTierId"`
	// The name of the product tier
	ProductTierName string `json:"productTierName"`
	// The email of the user that owns the subscription
	RootUserEmail string `json:"rootUserEmail"`
	// ID of a User
	RootUserId string `json:"rootUserId"`
	// The name of the user that owns the subscription
	RootUserName string `json:"rootUserName"`
	// ID of an Org
	RootUserOrgId *string `json:"rootUserOrgId,omitempty"`
	// Includes the past, current, and future scheduled pricing for this subscription.
	ScheduledSubscriptionPricingList []SubscriptionPricing `json:"scheduledSubscriptionPricingList,omitempty"`
	// ID of a Service
	ServiceId string `json:"serviceId"`
	// The logo for the service
	ServiceLogoURL *string `json:"serviceLogoURL,omitempty"`
	// The name of the service
	ServiceName string `json:"serviceName"`
	// Subscription Status
	Status string `json:"status"`
	// The full audit logs of pricing change for this subscription.
	SubscriptionPricingAuditLogs []SubscriptionPricing `json:"subscriptionPricingAuditLogs,omitempty"`
	// The time that this subscription was last updated
	UpdatedAt string `json:"updatedAt"`
	// ID of a User
	UpdatedByUserId string `json:"updatedByUserId"`
	// The name of the user that last updated the subscription
	UpdatedByUserName string `json:"updatedByUserName"`
	// ID of an Org
	UpdatedByUserOrgId *string `json:"updatedByUserOrgId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FleetDescribeSubscriptionResult FleetDescribeSubscriptionResult

// NewFleetDescribeSubscriptionResult instantiates a new FleetDescribeSubscriptionResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetDescribeSubscriptionResult(createdAt string, id string, instanceCount int64, productTierId string, productTierName string, rootUserEmail string, rootUserId string, rootUserName string, serviceId string, serviceName string, status string, updatedAt string, updatedByUserId string, updatedByUserName string) *FleetDescribeSubscriptionResult {
	this := FleetDescribeSubscriptionResult{}
	this.CreatedAt = createdAt
	this.Id = id
	this.InstanceCount = instanceCount
	this.ProductTierId = productTierId
	this.ProductTierName = productTierName
	this.RootUserEmail = rootUserEmail
	this.RootUserId = rootUserId
	this.RootUserName = rootUserName
	this.ServiceId = serviceId
	this.ServiceName = serviceName
	this.Status = status
	this.UpdatedAt = updatedAt
	this.UpdatedByUserId = updatedByUserId
	this.UpdatedByUserName = updatedByUserName
	return &this
}

// NewFleetDescribeSubscriptionResultWithDefaults instantiates a new FleetDescribeSubscriptionResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetDescribeSubscriptionResultWithDefaults() *FleetDescribeSubscriptionResult {
	this := FleetDescribeSubscriptionResult{}
	return &this
}

// GetAllowCreatesWhenPaymentNotConfigured returns the AllowCreatesWhenPaymentNotConfigured field value if set, zero value otherwise.
func (o *FleetDescribeSubscriptionResult) GetAllowCreatesWhenPaymentNotConfigured() bool {
	if o == nil || IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		var ret bool
		return ret
	}
	return *o.AllowCreatesWhenPaymentNotConfigured
}

// GetAllowCreatesWhenPaymentNotConfiguredOk returns a tuple with the AllowCreatesWhenPaymentNotConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetAllowCreatesWhenPaymentNotConfiguredOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		return nil, false
	}
	return o.AllowCreatesWhenPaymentNotConfigured, true
}

// HasAllowCreatesWhenPaymentNotConfigured returns a boolean if a field has been set.
func (o *FleetDescribeSubscriptionResult) HasAllowCreatesWhenPaymentNotConfigured() bool {
	if o != nil && !IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		return true
	}

	return false
}

// SetAllowCreatesWhenPaymentNotConfigured gets a reference to the given bool and assigns it to the AllowCreatesWhenPaymentNotConfigured field.
func (o *FleetDescribeSubscriptionResult) SetAllowCreatesWhenPaymentNotConfigured(v bool) {
	o.AllowCreatesWhenPaymentNotConfigured = &v
}

// GetBillingProvider returns the BillingProvider field value if set, zero value otherwise.
func (o *FleetDescribeSubscriptionResult) GetBillingProvider() string {
	if o == nil || IsNil(o.BillingProvider) {
		var ret string
		return ret
	}
	return *o.BillingProvider
}

// GetBillingProviderOk returns a tuple with the BillingProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetBillingProviderOk() (*string, bool) {
	if o == nil || IsNil(o.BillingProvider) {
		return nil, false
	}
	return o.BillingProvider, true
}

// HasBillingProvider returns a boolean if a field has been set.
func (o *FleetDescribeSubscriptionResult) HasBillingProvider() bool {
	if o != nil && !IsNil(o.BillingProvider) {
		return true
	}

	return false
}

// SetBillingProvider gets a reference to the given string and assigns it to the BillingProvider field.
func (o *FleetDescribeSubscriptionResult) SetBillingProvider(v string) {
	o.BillingProvider = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *FleetDescribeSubscriptionResult) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *FleetDescribeSubscriptionResult) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetCurrentActivePricePerUnit returns the CurrentActivePricePerUnit field value if set, zero value otherwise.
func (o *FleetDescribeSubscriptionResult) GetCurrentActivePricePerUnit() map[string]interface{} {
	if o == nil || IsNil(o.CurrentActivePricePerUnit) {
		var ret map[string]interface{}
		return ret
	}
	return o.CurrentActivePricePerUnit
}

// GetCurrentActivePricePerUnitOk returns a tuple with the CurrentActivePricePerUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetCurrentActivePricePerUnitOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CurrentActivePricePerUnit) {
		return map[string]interface{}{}, false
	}
	return o.CurrentActivePricePerUnit, true
}

// HasCurrentActivePricePerUnit returns a boolean if a field has been set.
func (o *FleetDescribeSubscriptionResult) HasCurrentActivePricePerUnit() bool {
	if o != nil && !IsNil(o.CurrentActivePricePerUnit) {
		return true
	}

	return false
}

// SetCurrentActivePricePerUnit gets a reference to the given map[string]interface{} and assigns it to the CurrentActivePricePerUnit field.
func (o *FleetDescribeSubscriptionResult) SetCurrentActivePricePerUnit(v map[string]interface{}) {
	o.CurrentActivePricePerUnit = v
}

// GetCustomPrice returns the CustomPrice field value if set, zero value otherwise.
func (o *FleetDescribeSubscriptionResult) GetCustomPrice() bool {
	if o == nil || IsNil(o.CustomPrice) {
		var ret bool
		return ret
	}
	return *o.CustomPrice
}

// GetCustomPriceOk returns a tuple with the CustomPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetCustomPriceOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomPrice) {
		return nil, false
	}
	return o.CustomPrice, true
}

// HasCustomPrice returns a boolean if a field has been set.
func (o *FleetDescribeSubscriptionResult) HasCustomPrice() bool {
	if o != nil && !IsNil(o.CustomPrice) {
		return true
	}

	return false
}

// SetCustomPrice gets a reference to the given bool and assigns it to the CustomPrice field.
func (o *FleetDescribeSubscriptionResult) SetCustomPrice(v bool) {
	o.CustomPrice = &v
}

// GetExternalPayerId returns the ExternalPayerId field value if set, zero value otherwise.
func (o *FleetDescribeSubscriptionResult) GetExternalPayerId() string {
	if o == nil || IsNil(o.ExternalPayerId) {
		var ret string
		return ret
	}
	return *o.ExternalPayerId
}

// GetExternalPayerIdOk returns a tuple with the ExternalPayerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetExternalPayerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalPayerId) {
		return nil, false
	}
	return o.ExternalPayerId, true
}

// HasExternalPayerId returns a boolean if a field has been set.
func (o *FleetDescribeSubscriptionResult) HasExternalPayerId() bool {
	if o != nil && !IsNil(o.ExternalPayerId) {
		return true
	}

	return false
}

// SetExternalPayerId gets a reference to the given string and assigns it to the ExternalPayerId field.
func (o *FleetDescribeSubscriptionResult) SetExternalPayerId(v string) {
	o.ExternalPayerId = &v
}

// GetId returns the Id field value
func (o *FleetDescribeSubscriptionResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FleetDescribeSubscriptionResult) SetId(v string) {
	o.Id = v
}

// GetInstanceCount returns the InstanceCount field value
func (o *FleetDescribeSubscriptionResult) GetInstanceCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.InstanceCount
}

// GetInstanceCountOk returns a tuple with the InstanceCount field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetInstanceCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceCount, true
}

// SetInstanceCount sets field value
func (o *FleetDescribeSubscriptionResult) SetInstanceCount(v int64) {
	o.InstanceCount = v
}

// GetMaxNumberOfInstances returns the MaxNumberOfInstances field value if set, zero value otherwise.
func (o *FleetDescribeSubscriptionResult) GetMaxNumberOfInstances() int64 {
	if o == nil || IsNil(o.MaxNumberOfInstances) {
		var ret int64
		return ret
	}
	return *o.MaxNumberOfInstances
}

// GetMaxNumberOfInstancesOk returns a tuple with the MaxNumberOfInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetMaxNumberOfInstancesOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxNumberOfInstances) {
		return nil, false
	}
	return o.MaxNumberOfInstances, true
}

// HasMaxNumberOfInstances returns a boolean if a field has been set.
func (o *FleetDescribeSubscriptionResult) HasMaxNumberOfInstances() bool {
	if o != nil && !IsNil(o.MaxNumberOfInstances) {
		return true
	}

	return false
}

// SetMaxNumberOfInstances gets a reference to the given int64 and assigns it to the MaxNumberOfInstances field.
func (o *FleetDescribeSubscriptionResult) SetMaxNumberOfInstances(v int64) {
	o.MaxNumberOfInstances = &v
}

// GetProductTierId returns the ProductTierId field value
func (o *FleetDescribeSubscriptionResult) GetProductTierId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductTierId
}

// GetProductTierIdOk returns a tuple with the ProductTierId field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetProductTierIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductTierId, true
}

// SetProductTierId sets field value
func (o *FleetDescribeSubscriptionResult) SetProductTierId(v string) {
	o.ProductTierId = v
}

// GetProductTierName returns the ProductTierName field value
func (o *FleetDescribeSubscriptionResult) GetProductTierName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductTierName
}

// GetProductTierNameOk returns a tuple with the ProductTierName field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetProductTierNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductTierName, true
}

// SetProductTierName sets field value
func (o *FleetDescribeSubscriptionResult) SetProductTierName(v string) {
	o.ProductTierName = v
}

// GetRootUserEmail returns the RootUserEmail field value
func (o *FleetDescribeSubscriptionResult) GetRootUserEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RootUserEmail
}

// GetRootUserEmailOk returns a tuple with the RootUserEmail field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetRootUserEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RootUserEmail, true
}

// SetRootUserEmail sets field value
func (o *FleetDescribeSubscriptionResult) SetRootUserEmail(v string) {
	o.RootUserEmail = v
}

// GetRootUserId returns the RootUserId field value
func (o *FleetDescribeSubscriptionResult) GetRootUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RootUserId
}

// GetRootUserIdOk returns a tuple with the RootUserId field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetRootUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RootUserId, true
}

// SetRootUserId sets field value
func (o *FleetDescribeSubscriptionResult) SetRootUserId(v string) {
	o.RootUserId = v
}

// GetRootUserName returns the RootUserName field value
func (o *FleetDescribeSubscriptionResult) GetRootUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RootUserName
}

// GetRootUserNameOk returns a tuple with the RootUserName field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetRootUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RootUserName, true
}

// SetRootUserName sets field value
func (o *FleetDescribeSubscriptionResult) SetRootUserName(v string) {
	o.RootUserName = v
}

// GetRootUserOrgId returns the RootUserOrgId field value if set, zero value otherwise.
func (o *FleetDescribeSubscriptionResult) GetRootUserOrgId() string {
	if o == nil || IsNil(o.RootUserOrgId) {
		var ret string
		return ret
	}
	return *o.RootUserOrgId
}

// GetRootUserOrgIdOk returns a tuple with the RootUserOrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetRootUserOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.RootUserOrgId) {
		return nil, false
	}
	return o.RootUserOrgId, true
}

// HasRootUserOrgId returns a boolean if a field has been set.
func (o *FleetDescribeSubscriptionResult) HasRootUserOrgId() bool {
	if o != nil && !IsNil(o.RootUserOrgId) {
		return true
	}

	return false
}

// SetRootUserOrgId gets a reference to the given string and assigns it to the RootUserOrgId field.
func (o *FleetDescribeSubscriptionResult) SetRootUserOrgId(v string) {
	o.RootUserOrgId = &v
}

// GetScheduledSubscriptionPricingList returns the ScheduledSubscriptionPricingList field value if set, zero value otherwise.
func (o *FleetDescribeSubscriptionResult) GetScheduledSubscriptionPricingList() []SubscriptionPricing {
	if o == nil || IsNil(o.ScheduledSubscriptionPricingList) {
		var ret []SubscriptionPricing
		return ret
	}
	return o.ScheduledSubscriptionPricingList
}

// GetScheduledSubscriptionPricingListOk returns a tuple with the ScheduledSubscriptionPricingList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetScheduledSubscriptionPricingListOk() ([]SubscriptionPricing, bool) {
	if o == nil || IsNil(o.ScheduledSubscriptionPricingList) {
		return nil, false
	}
	return o.ScheduledSubscriptionPricingList, true
}

// HasScheduledSubscriptionPricingList returns a boolean if a field has been set.
func (o *FleetDescribeSubscriptionResult) HasScheduledSubscriptionPricingList() bool {
	if o != nil && !IsNil(o.ScheduledSubscriptionPricingList) {
		return true
	}

	return false
}

// SetScheduledSubscriptionPricingList gets a reference to the given []SubscriptionPricing and assigns it to the ScheduledSubscriptionPricingList field.
func (o *FleetDescribeSubscriptionResult) SetScheduledSubscriptionPricingList(v []SubscriptionPricing) {
	o.ScheduledSubscriptionPricingList = v
}

// GetServiceId returns the ServiceId field value
func (o *FleetDescribeSubscriptionResult) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *FleetDescribeSubscriptionResult) SetServiceId(v string) {
	o.ServiceId = v
}

// GetServiceLogoURL returns the ServiceLogoURL field value if set, zero value otherwise.
func (o *FleetDescribeSubscriptionResult) GetServiceLogoURL() string {
	if o == nil || IsNil(o.ServiceLogoURL) {
		var ret string
		return ret
	}
	return *o.ServiceLogoURL
}

// GetServiceLogoURLOk returns a tuple with the ServiceLogoURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetServiceLogoURLOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceLogoURL) {
		return nil, false
	}
	return o.ServiceLogoURL, true
}

// HasServiceLogoURL returns a boolean if a field has been set.
func (o *FleetDescribeSubscriptionResult) HasServiceLogoURL() bool {
	if o != nil && !IsNil(o.ServiceLogoURL) {
		return true
	}

	return false
}

// SetServiceLogoURL gets a reference to the given string and assigns it to the ServiceLogoURL field.
func (o *FleetDescribeSubscriptionResult) SetServiceLogoURL(v string) {
	o.ServiceLogoURL = &v
}

// GetServiceName returns the ServiceName field value
func (o *FleetDescribeSubscriptionResult) GetServiceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceName, true
}

// SetServiceName sets field value
func (o *FleetDescribeSubscriptionResult) SetServiceName(v string) {
	o.ServiceName = v
}

// GetStatus returns the Status field value
func (o *FleetDescribeSubscriptionResult) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *FleetDescribeSubscriptionResult) SetStatus(v string) {
	o.Status = v
}

// GetSubscriptionPricingAuditLogs returns the SubscriptionPricingAuditLogs field value if set, zero value otherwise.
func (o *FleetDescribeSubscriptionResult) GetSubscriptionPricingAuditLogs() []SubscriptionPricing {
	if o == nil || IsNil(o.SubscriptionPricingAuditLogs) {
		var ret []SubscriptionPricing
		return ret
	}
	return o.SubscriptionPricingAuditLogs
}

// GetSubscriptionPricingAuditLogsOk returns a tuple with the SubscriptionPricingAuditLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetSubscriptionPricingAuditLogsOk() ([]SubscriptionPricing, bool) {
	if o == nil || IsNil(o.SubscriptionPricingAuditLogs) {
		return nil, false
	}
	return o.SubscriptionPricingAuditLogs, true
}

// HasSubscriptionPricingAuditLogs returns a boolean if a field has been set.
func (o *FleetDescribeSubscriptionResult) HasSubscriptionPricingAuditLogs() bool {
	if o != nil && !IsNil(o.SubscriptionPricingAuditLogs) {
		return true
	}

	return false
}

// SetSubscriptionPricingAuditLogs gets a reference to the given []SubscriptionPricing and assigns it to the SubscriptionPricingAuditLogs field.
func (o *FleetDescribeSubscriptionResult) SetSubscriptionPricingAuditLogs(v []SubscriptionPricing) {
	o.SubscriptionPricingAuditLogs = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *FleetDescribeSubscriptionResult) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *FleetDescribeSubscriptionResult) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetUpdatedByUserId returns the UpdatedByUserId field value
func (o *FleetDescribeSubscriptionResult) GetUpdatedByUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedByUserId
}

// GetUpdatedByUserIdOk returns a tuple with the UpdatedByUserId field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetUpdatedByUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedByUserId, true
}

// SetUpdatedByUserId sets field value
func (o *FleetDescribeSubscriptionResult) SetUpdatedByUserId(v string) {
	o.UpdatedByUserId = v
}

// GetUpdatedByUserName returns the UpdatedByUserName field value
func (o *FleetDescribeSubscriptionResult) GetUpdatedByUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedByUserName
}

// GetUpdatedByUserNameOk returns a tuple with the UpdatedByUserName field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetUpdatedByUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedByUserName, true
}

// SetUpdatedByUserName sets field value
func (o *FleetDescribeSubscriptionResult) SetUpdatedByUserName(v string) {
	o.UpdatedByUserName = v
}

// GetUpdatedByUserOrgId returns the UpdatedByUserOrgId field value if set, zero value otherwise.
func (o *FleetDescribeSubscriptionResult) GetUpdatedByUserOrgId() string {
	if o == nil || IsNil(o.UpdatedByUserOrgId) {
		var ret string
		return ret
	}
	return *o.UpdatedByUserOrgId
}

// GetUpdatedByUserOrgIdOk returns a tuple with the UpdatedByUserOrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeSubscriptionResult) GetUpdatedByUserOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedByUserOrgId) {
		return nil, false
	}
	return o.UpdatedByUserOrgId, true
}

// HasUpdatedByUserOrgId returns a boolean if a field has been set.
func (o *FleetDescribeSubscriptionResult) HasUpdatedByUserOrgId() bool {
	if o != nil && !IsNil(o.UpdatedByUserOrgId) {
		return true
	}

	return false
}

// SetUpdatedByUserOrgId gets a reference to the given string and assigns it to the UpdatedByUserOrgId field.
func (o *FleetDescribeSubscriptionResult) SetUpdatedByUserOrgId(v string) {
	o.UpdatedByUserOrgId = &v
}

func (o FleetDescribeSubscriptionResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FleetDescribeSubscriptionResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		toSerialize["allowCreatesWhenPaymentNotConfigured"] = o.AllowCreatesWhenPaymentNotConfigured
	}
	if !IsNil(o.BillingProvider) {
		toSerialize["billingProvider"] = o.BillingProvider
	}
	toSerialize["createdAt"] = o.CreatedAt
	if !IsNil(o.CurrentActivePricePerUnit) {
		toSerialize["currentActivePricePerUnit"] = o.CurrentActivePricePerUnit
	}
	if !IsNil(o.CustomPrice) {
		toSerialize["customPrice"] = o.CustomPrice
	}
	if !IsNil(o.ExternalPayerId) {
		toSerialize["externalPayerId"] = o.ExternalPayerId
	}
	toSerialize["id"] = o.Id
	toSerialize["instanceCount"] = o.InstanceCount
	if !IsNil(o.MaxNumberOfInstances) {
		toSerialize["maxNumberOfInstances"] = o.MaxNumberOfInstances
	}
	toSerialize["productTierId"] = o.ProductTierId
	toSerialize["productTierName"] = o.ProductTierName
	toSerialize["rootUserEmail"] = o.RootUserEmail
	toSerialize["rootUserId"] = o.RootUserId
	toSerialize["rootUserName"] = o.RootUserName
	if !IsNil(o.RootUserOrgId) {
		toSerialize["rootUserOrgId"] = o.RootUserOrgId
	}
	if !IsNil(o.ScheduledSubscriptionPricingList) {
		toSerialize["scheduledSubscriptionPricingList"] = o.ScheduledSubscriptionPricingList
	}
	toSerialize["serviceId"] = o.ServiceId
	if !IsNil(o.ServiceLogoURL) {
		toSerialize["serviceLogoURL"] = o.ServiceLogoURL
	}
	toSerialize["serviceName"] = o.ServiceName
	toSerialize["status"] = o.Status
	if !IsNil(o.SubscriptionPricingAuditLogs) {
		toSerialize["subscriptionPricingAuditLogs"] = o.SubscriptionPricingAuditLogs
	}
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["updatedByUserId"] = o.UpdatedByUserId
	toSerialize["updatedByUserName"] = o.UpdatedByUserName
	if !IsNil(o.UpdatedByUserOrgId) {
		toSerialize["updatedByUserOrgId"] = o.UpdatedByUserOrgId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FleetDescribeSubscriptionResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdAt",
		"id",
		"instanceCount",
		"productTierId",
		"productTierName",
		"rootUserEmail",
		"rootUserId",
		"rootUserName",
		"serviceId",
		"serviceName",
		"status",
		"updatedAt",
		"updatedByUserId",
		"updatedByUserName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFleetDescribeSubscriptionResult := _FleetDescribeSubscriptionResult{}

	err = json.Unmarshal(data, &varFleetDescribeSubscriptionResult)

	if err != nil {
		return err
	}

	*o = FleetDescribeSubscriptionResult(varFleetDescribeSubscriptionResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "allowCreatesWhenPaymentNotConfigured")
		delete(additionalProperties, "billingProvider")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "currentActivePricePerUnit")
		delete(additionalProperties, "customPrice")
		delete(additionalProperties, "externalPayerId")
		delete(additionalProperties, "id")
		delete(additionalProperties, "instanceCount")
		delete(additionalProperties, "maxNumberOfInstances")
		delete(additionalProperties, "productTierId")
		delete(additionalProperties, "productTierName")
		delete(additionalProperties, "rootUserEmail")
		delete(additionalProperties, "rootUserId")
		delete(additionalProperties, "rootUserName")
		delete(additionalProperties, "rootUserOrgId")
		delete(additionalProperties, "scheduledSubscriptionPricingList")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "serviceLogoURL")
		delete(additionalProperties, "serviceName")
		delete(additionalProperties, "status")
		delete(additionalProperties, "subscriptionPricingAuditLogs")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "updatedByUserId")
		delete(additionalProperties, "updatedByUserName")
		delete(additionalProperties, "updatedByUserOrgId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFleetDescribeSubscriptionResult struct {
	value *FleetDescribeSubscriptionResult
	isSet bool
}

func (v NullableFleetDescribeSubscriptionResult) Get() *FleetDescribeSubscriptionResult {
	return v.value
}

func (v *NullableFleetDescribeSubscriptionResult) Set(val *FleetDescribeSubscriptionResult) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetDescribeSubscriptionResult) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetDescribeSubscriptionResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetDescribeSubscriptionResult(val *FleetDescribeSubscriptionResult) *NullableFleetDescribeSubscriptionResult {
	return &NullableFleetDescribeSubscriptionResult{value: val, isSet: true}
}

func (v NullableFleetDescribeSubscriptionResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetDescribeSubscriptionResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


