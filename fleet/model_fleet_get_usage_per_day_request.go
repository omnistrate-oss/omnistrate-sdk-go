/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the FleetGetUsagePerDayRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FleetGetUsagePerDayRequest{}

// FleetGetUsagePerDayRequest struct for FleetGetUsagePerDayRequest
type FleetGetUsagePerDayRequest struct {
	// End time of the window in RFC 3339 format. If omitted, the filter is open-ended at the start.
	EndDate *time.Time `json:"endDate,omitempty"`
	// Start time of the window in RFC 3339 format. If omitted, the filter is open-ended at the start.
	StartDate *time.Time `json:"startDate,omitempty"`
	// ID of a Subscription
	SubscriptionId string `json:"subscriptionId"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _FleetGetUsagePerDayRequest FleetGetUsagePerDayRequest

// NewFleetGetUsagePerDayRequest instantiates a new FleetGetUsagePerDayRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetGetUsagePerDayRequest(subscriptionId string, token string) *FleetGetUsagePerDayRequest {
	this := FleetGetUsagePerDayRequest{}
	this.SubscriptionId = subscriptionId
	this.Token = token
	return &this
}

// NewFleetGetUsagePerDayRequestWithDefaults instantiates a new FleetGetUsagePerDayRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetGetUsagePerDayRequestWithDefaults() *FleetGetUsagePerDayRequest {
	this := FleetGetUsagePerDayRequest{}
	return &this
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *FleetGetUsagePerDayRequest) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetGetUsagePerDayRequest) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *FleetGetUsagePerDayRequest) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *FleetGetUsagePerDayRequest) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *FleetGetUsagePerDayRequest) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetGetUsagePerDayRequest) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *FleetGetUsagePerDayRequest) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *FleetGetUsagePerDayRequest) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *FleetGetUsagePerDayRequest) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *FleetGetUsagePerDayRequest) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *FleetGetUsagePerDayRequest) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

// GetToken returns the Token field value
func (o *FleetGetUsagePerDayRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *FleetGetUsagePerDayRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *FleetGetUsagePerDayRequest) SetToken(v string) {
	o.Token = v
}

func (o FleetGetUsagePerDayRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FleetGetUsagePerDayRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	toSerialize["subscriptionId"] = o.SubscriptionId
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FleetGetUsagePerDayRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"subscriptionId",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFleetGetUsagePerDayRequest := _FleetGetUsagePerDayRequest{}

	err = json.Unmarshal(data, &varFleetGetUsagePerDayRequest)

	if err != nil {
		return err
	}

	*o = FleetGetUsagePerDayRequest(varFleetGetUsagePerDayRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "endDate")
		delete(additionalProperties, "startDate")
		delete(additionalProperties, "subscriptionId")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFleetGetUsagePerDayRequest struct {
	value *FleetGetUsagePerDayRequest
	isSet bool
}

func (v NullableFleetGetUsagePerDayRequest) Get() *FleetGetUsagePerDayRequest {
	return v.value
}

func (v *NullableFleetGetUsagePerDayRequest) Set(val *FleetGetUsagePerDayRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetGetUsagePerDayRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetGetUsagePerDayRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetGetUsagePerDayRequest(val *FleetGetUsagePerDayRequest) *NullableFleetGetUsagePerDayRequest {
	return &NullableFleetGetUsagePerDayRequest{value: val, isSet: true}
}

func (v NullableFleetGetUsagePerDayRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetGetUsagePerDayRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


