/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NodeHealthSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodeHealthSummary{}

// NodeHealthSummary struct for NodeHealthSummary
type NodeHealthSummary struct {
	// The availability zone of the node
	AvailabilityZone string `json:"availabilityZone"`
	// The health status of the network endpoints
	ConnectivityStatus string `json:"connectivityStatus"`
	// The health status of the disk
	DiskHealth string `json:"diskHealth"`
	// The endpoint of the node
	Endpoint string `json:"endpoint"`
	// The list of process events
	Events []string `json:"events"`
	// The load status of the pod
	LoadHealth string `json:"loadHealth"`
	// The health status of the machine hosting the service
	NodeHealth string `json:"nodeHealth"`
	// The name of the node
	NodeName string `json:"nodeName"`
	// The ports that this node exposes
	Ports []int64 `json:"ports,omitempty"`
	// The health status of the process
	ProcessHealth string `json:"processHealth"`
	// The liveness status of the process
	ProcessLiveness string `json:"processLiveness"`
	// The recent logs of the process
	RecentLogs string `json:"recentLogs"`
	// The overall status of the node
	Status string `json:"status"`
}

type _NodeHealthSummary NodeHealthSummary

// NewNodeHealthSummary instantiates a new NodeHealthSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeHealthSummary(availabilityZone string, connectivityStatus string, diskHealth string, endpoint string, events []string, loadHealth string, nodeHealth string, nodeName string, processHealth string, processLiveness string, recentLogs string, status string) *NodeHealthSummary {
	this := NodeHealthSummary{}
	this.AvailabilityZone = availabilityZone
	this.ConnectivityStatus = connectivityStatus
	this.DiskHealth = diskHealth
	this.Endpoint = endpoint
	this.Events = events
	this.LoadHealth = loadHealth
	this.NodeHealth = nodeHealth
	this.NodeName = nodeName
	this.ProcessHealth = processHealth
	this.ProcessLiveness = processLiveness
	this.RecentLogs = recentLogs
	this.Status = status
	return &this
}

// NewNodeHealthSummaryWithDefaults instantiates a new NodeHealthSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeHealthSummaryWithDefaults() *NodeHealthSummary {
	this := NodeHealthSummary{}
	return &this
}

// GetAvailabilityZone returns the AvailabilityZone field value
func (o *NodeHealthSummary) GetAvailabilityZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AvailabilityZone
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value
// and a boolean to check if the value has been set.
func (o *NodeHealthSummary) GetAvailabilityZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvailabilityZone, true
}

// SetAvailabilityZone sets field value
func (o *NodeHealthSummary) SetAvailabilityZone(v string) {
	o.AvailabilityZone = v
}

// GetConnectivityStatus returns the ConnectivityStatus field value
func (o *NodeHealthSummary) GetConnectivityStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectivityStatus
}

// GetConnectivityStatusOk returns a tuple with the ConnectivityStatus field value
// and a boolean to check if the value has been set.
func (o *NodeHealthSummary) GetConnectivityStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectivityStatus, true
}

// SetConnectivityStatus sets field value
func (o *NodeHealthSummary) SetConnectivityStatus(v string) {
	o.ConnectivityStatus = v
}

// GetDiskHealth returns the DiskHealth field value
func (o *NodeHealthSummary) GetDiskHealth() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DiskHealth
}

// GetDiskHealthOk returns a tuple with the DiskHealth field value
// and a boolean to check if the value has been set.
func (o *NodeHealthSummary) GetDiskHealthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiskHealth, true
}

// SetDiskHealth sets field value
func (o *NodeHealthSummary) SetDiskHealth(v string) {
	o.DiskHealth = v
}

// GetEndpoint returns the Endpoint field value
func (o *NodeHealthSummary) GetEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *NodeHealthSummary) GetEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *NodeHealthSummary) SetEndpoint(v string) {
	o.Endpoint = v
}

// GetEvents returns the Events field value
func (o *NodeHealthSummary) GetEvents() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Events
}

// GetEventsOk returns a tuple with the Events field value
// and a boolean to check if the value has been set.
func (o *NodeHealthSummary) GetEventsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Events, true
}

// SetEvents sets field value
func (o *NodeHealthSummary) SetEvents(v []string) {
	o.Events = v
}

// GetLoadHealth returns the LoadHealth field value
func (o *NodeHealthSummary) GetLoadHealth() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoadHealth
}

// GetLoadHealthOk returns a tuple with the LoadHealth field value
// and a boolean to check if the value has been set.
func (o *NodeHealthSummary) GetLoadHealthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoadHealth, true
}

// SetLoadHealth sets field value
func (o *NodeHealthSummary) SetLoadHealth(v string) {
	o.LoadHealth = v
}

// GetNodeHealth returns the NodeHealth field value
func (o *NodeHealthSummary) GetNodeHealth() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeHealth
}

// GetNodeHealthOk returns a tuple with the NodeHealth field value
// and a boolean to check if the value has been set.
func (o *NodeHealthSummary) GetNodeHealthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeHealth, true
}

// SetNodeHealth sets field value
func (o *NodeHealthSummary) SetNodeHealth(v string) {
	o.NodeHealth = v
}

// GetNodeName returns the NodeName field value
func (o *NodeHealthSummary) GetNodeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeName
}

// GetNodeNameOk returns a tuple with the NodeName field value
// and a boolean to check if the value has been set.
func (o *NodeHealthSummary) GetNodeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeName, true
}

// SetNodeName sets field value
func (o *NodeHealthSummary) SetNodeName(v string) {
	o.NodeName = v
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *NodeHealthSummary) GetPorts() []int64 {
	if o == nil || IsNil(o.Ports) {
		var ret []int64
		return ret
	}
	return o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeHealthSummary) GetPortsOk() ([]int64, bool) {
	if o == nil || IsNil(o.Ports) {
		return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *NodeHealthSummary) HasPorts() bool {
	if o != nil && !IsNil(o.Ports) {
		return true
	}

	return false
}

// SetPorts gets a reference to the given []int64 and assigns it to the Ports field.
func (o *NodeHealthSummary) SetPorts(v []int64) {
	o.Ports = v
}

// GetProcessHealth returns the ProcessHealth field value
func (o *NodeHealthSummary) GetProcessHealth() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProcessHealth
}

// GetProcessHealthOk returns a tuple with the ProcessHealth field value
// and a boolean to check if the value has been set.
func (o *NodeHealthSummary) GetProcessHealthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessHealth, true
}

// SetProcessHealth sets field value
func (o *NodeHealthSummary) SetProcessHealth(v string) {
	o.ProcessHealth = v
}

// GetProcessLiveness returns the ProcessLiveness field value
func (o *NodeHealthSummary) GetProcessLiveness() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProcessLiveness
}

// GetProcessLivenessOk returns a tuple with the ProcessLiveness field value
// and a boolean to check if the value has been set.
func (o *NodeHealthSummary) GetProcessLivenessOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessLiveness, true
}

// SetProcessLiveness sets field value
func (o *NodeHealthSummary) SetProcessLiveness(v string) {
	o.ProcessLiveness = v
}

// GetRecentLogs returns the RecentLogs field value
func (o *NodeHealthSummary) GetRecentLogs() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecentLogs
}

// GetRecentLogsOk returns a tuple with the RecentLogs field value
// and a boolean to check if the value has been set.
func (o *NodeHealthSummary) GetRecentLogsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecentLogs, true
}

// SetRecentLogs sets field value
func (o *NodeHealthSummary) SetRecentLogs(v string) {
	o.RecentLogs = v
}

// GetStatus returns the Status field value
func (o *NodeHealthSummary) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *NodeHealthSummary) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *NodeHealthSummary) SetStatus(v string) {
	o.Status = v
}

func (o NodeHealthSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodeHealthSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["availabilityZone"] = o.AvailabilityZone
	toSerialize["connectivityStatus"] = o.ConnectivityStatus
	toSerialize["diskHealth"] = o.DiskHealth
	toSerialize["endpoint"] = o.Endpoint
	toSerialize["events"] = o.Events
	toSerialize["loadHealth"] = o.LoadHealth
	toSerialize["nodeHealth"] = o.NodeHealth
	toSerialize["nodeName"] = o.NodeName
	if !IsNil(o.Ports) {
		toSerialize["ports"] = o.Ports
	}
	toSerialize["processHealth"] = o.ProcessHealth
	toSerialize["processLiveness"] = o.ProcessLiveness
	toSerialize["recentLogs"] = o.RecentLogs
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *NodeHealthSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"availabilityZone",
		"connectivityStatus",
		"diskHealth",
		"endpoint",
		"events",
		"loadHealth",
		"nodeHealth",
		"nodeName",
		"processHealth",
		"processLiveness",
		"recentLogs",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNodeHealthSummary := _NodeHealthSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNodeHealthSummary)

	if err != nil {
		return err
	}

	*o = NodeHealthSummary(varNodeHealthSummary)

	return err
}

type NullableNodeHealthSummary struct {
	value *NodeHealthSummary
	isSet bool
}

func (v NullableNodeHealthSummary) Get() *NodeHealthSummary {
	return v.value
}

func (v *NullableNodeHealthSummary) Set(val *NodeHealthSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeHealthSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeHealthSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeHealthSummary(val *NodeHealthSummary) *NullableNodeHealthSummary {
	return &NullableNodeHealthSummary{value: val, isSet: true}
}

func (v NullableNodeHealthSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeHealthSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


