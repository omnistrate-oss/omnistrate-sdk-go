/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the FleetCreateSubscriptionOnBehalfOfCustomerRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FleetCreateSubscriptionOnBehalfOfCustomerRequest2{}

// FleetCreateSubscriptionOnBehalfOfCustomerRequest2 struct for FleetCreateSubscriptionOnBehalfOfCustomerRequest2
type FleetCreateSubscriptionOnBehalfOfCustomerRequest2 struct {
	// Whether to inherit the service plan pricing
	InheritServicePlanPricing *bool `json:"inheritServicePlanPricing,omitempty"`
	// The user ID of the customer that this subscription is on behalf of
	OnBehalfOfCustomerUserId string `json:"onBehalfOfCustomerUserId"`
	// The effective date of the pricing, truncated to the first day of the month. Only the current or future months may be specified.
	PricingEffectiveDate *string `json:"pricingEffectiveDate,omitempty"`
	// If inheritServicePlanPricing is false, provide the pricing per unit for the subscription here.
	PricingPerUnit map[string]interface{} `json:"pricingPerUnit,omitempty"`
	// The product tier ID
	ProductTierId string `json:"productTierId"`
	AdditionalProperties map[string]interface{}
}

type _FleetCreateSubscriptionOnBehalfOfCustomerRequest2 FleetCreateSubscriptionOnBehalfOfCustomerRequest2

// NewFleetCreateSubscriptionOnBehalfOfCustomerRequest2 instantiates a new FleetCreateSubscriptionOnBehalfOfCustomerRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetCreateSubscriptionOnBehalfOfCustomerRequest2(onBehalfOfCustomerUserId string, productTierId string) *FleetCreateSubscriptionOnBehalfOfCustomerRequest2 {
	this := FleetCreateSubscriptionOnBehalfOfCustomerRequest2{}
	this.OnBehalfOfCustomerUserId = onBehalfOfCustomerUserId
	this.ProductTierId = productTierId
	return &this
}

// NewFleetCreateSubscriptionOnBehalfOfCustomerRequest2WithDefaults instantiates a new FleetCreateSubscriptionOnBehalfOfCustomerRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetCreateSubscriptionOnBehalfOfCustomerRequest2WithDefaults() *FleetCreateSubscriptionOnBehalfOfCustomerRequest2 {
	this := FleetCreateSubscriptionOnBehalfOfCustomerRequest2{}
	return &this
}

// GetInheritServicePlanPricing returns the InheritServicePlanPricing field value if set, zero value otherwise.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) GetInheritServicePlanPricing() bool {
	if o == nil || IsNil(o.InheritServicePlanPricing) {
		var ret bool
		return ret
	}
	return *o.InheritServicePlanPricing
}

// GetInheritServicePlanPricingOk returns a tuple with the InheritServicePlanPricing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) GetInheritServicePlanPricingOk() (*bool, bool) {
	if o == nil || IsNil(o.InheritServicePlanPricing) {
		return nil, false
	}
	return o.InheritServicePlanPricing, true
}

// HasInheritServicePlanPricing returns a boolean if a field has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) HasInheritServicePlanPricing() bool {
	if o != nil && !IsNil(o.InheritServicePlanPricing) {
		return true
	}

	return false
}

// SetInheritServicePlanPricing gets a reference to the given bool and assigns it to the InheritServicePlanPricing field.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) SetInheritServicePlanPricing(v bool) {
	o.InheritServicePlanPricing = &v
}

// GetOnBehalfOfCustomerUserId returns the OnBehalfOfCustomerUserId field value
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) GetOnBehalfOfCustomerUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OnBehalfOfCustomerUserId
}

// GetOnBehalfOfCustomerUserIdOk returns a tuple with the OnBehalfOfCustomerUserId field value
// and a boolean to check if the value has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) GetOnBehalfOfCustomerUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OnBehalfOfCustomerUserId, true
}

// SetOnBehalfOfCustomerUserId sets field value
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) SetOnBehalfOfCustomerUserId(v string) {
	o.OnBehalfOfCustomerUserId = v
}

// GetPricingEffectiveDate returns the PricingEffectiveDate field value if set, zero value otherwise.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) GetPricingEffectiveDate() string {
	if o == nil || IsNil(o.PricingEffectiveDate) {
		var ret string
		return ret
	}
	return *o.PricingEffectiveDate
}

// GetPricingEffectiveDateOk returns a tuple with the PricingEffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) GetPricingEffectiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.PricingEffectiveDate) {
		return nil, false
	}
	return o.PricingEffectiveDate, true
}

// HasPricingEffectiveDate returns a boolean if a field has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) HasPricingEffectiveDate() bool {
	if o != nil && !IsNil(o.PricingEffectiveDate) {
		return true
	}

	return false
}

// SetPricingEffectiveDate gets a reference to the given string and assigns it to the PricingEffectiveDate field.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) SetPricingEffectiveDate(v string) {
	o.PricingEffectiveDate = &v
}

// GetPricingPerUnit returns the PricingPerUnit field value if set, zero value otherwise.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) GetPricingPerUnit() map[string]interface{} {
	if o == nil || IsNil(o.PricingPerUnit) {
		var ret map[string]interface{}
		return ret
	}
	return o.PricingPerUnit
}

// GetPricingPerUnitOk returns a tuple with the PricingPerUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) GetPricingPerUnitOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.PricingPerUnit) {
		return map[string]interface{}{}, false
	}
	return o.PricingPerUnit, true
}

// HasPricingPerUnit returns a boolean if a field has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) HasPricingPerUnit() bool {
	if o != nil && !IsNil(o.PricingPerUnit) {
		return true
	}

	return false
}

// SetPricingPerUnit gets a reference to the given map[string]interface{} and assigns it to the PricingPerUnit field.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) SetPricingPerUnit(v map[string]interface{}) {
	o.PricingPerUnit = v
}

// GetProductTierId returns the ProductTierId field value
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) GetProductTierId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductTierId
}

// GetProductTierIdOk returns a tuple with the ProductTierId field value
// and a boolean to check if the value has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) GetProductTierIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductTierId, true
}

// SetProductTierId sets field value
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) SetProductTierId(v string) {
	o.ProductTierId = v
}

func (o FleetCreateSubscriptionOnBehalfOfCustomerRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FleetCreateSubscriptionOnBehalfOfCustomerRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InheritServicePlanPricing) {
		toSerialize["inheritServicePlanPricing"] = o.InheritServicePlanPricing
	}
	toSerialize["onBehalfOfCustomerUserId"] = o.OnBehalfOfCustomerUserId
	if !IsNil(o.PricingEffectiveDate) {
		toSerialize["pricingEffectiveDate"] = o.PricingEffectiveDate
	}
	if !IsNil(o.PricingPerUnit) {
		toSerialize["pricingPerUnit"] = o.PricingPerUnit
	}
	toSerialize["productTierId"] = o.ProductTierId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"onBehalfOfCustomerUserId",
		"productTierId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFleetCreateSubscriptionOnBehalfOfCustomerRequest2 := _FleetCreateSubscriptionOnBehalfOfCustomerRequest2{}

	err = json.Unmarshal(data, &varFleetCreateSubscriptionOnBehalfOfCustomerRequest2)

	if err != nil {
		return err
	}

	*o = FleetCreateSubscriptionOnBehalfOfCustomerRequest2(varFleetCreateSubscriptionOnBehalfOfCustomerRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "inheritServicePlanPricing")
		delete(additionalProperties, "onBehalfOfCustomerUserId")
		delete(additionalProperties, "pricingEffectiveDate")
		delete(additionalProperties, "pricingPerUnit")
		delete(additionalProperties, "productTierId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFleetCreateSubscriptionOnBehalfOfCustomerRequest2 struct {
	value *FleetCreateSubscriptionOnBehalfOfCustomerRequest2
	isSet bool
}

func (v NullableFleetCreateSubscriptionOnBehalfOfCustomerRequest2) Get() *FleetCreateSubscriptionOnBehalfOfCustomerRequest2 {
	return v.value
}

func (v *NullableFleetCreateSubscriptionOnBehalfOfCustomerRequest2) Set(val *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetCreateSubscriptionOnBehalfOfCustomerRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetCreateSubscriptionOnBehalfOfCustomerRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetCreateSubscriptionOnBehalfOfCustomerRequest2(val *FleetCreateSubscriptionOnBehalfOfCustomerRequest2) *NullableFleetCreateSubscriptionOnBehalfOfCustomerRequest2 {
	return &NullableFleetCreateSubscriptionOnBehalfOfCustomerRequest2{value: val, isSet: true}
}

func (v NullableFleetCreateSubscriptionOnBehalfOfCustomerRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetCreateSubscriptionOnBehalfOfCustomerRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


