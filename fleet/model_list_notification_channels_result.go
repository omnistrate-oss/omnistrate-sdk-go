/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the ListNotificationChannelsResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListNotificationChannelsResult{}

// ListNotificationChannelsResult struct for ListNotificationChannelsResult
type ListNotificationChannelsResult struct {
	// List of notification channels
	Channels []Channel `json:"channels,omitempty"`
}

// NewListNotificationChannelsResult instantiates a new ListNotificationChannelsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListNotificationChannelsResult() *ListNotificationChannelsResult {
	this := ListNotificationChannelsResult{}
	return &this
}

// NewListNotificationChannelsResultWithDefaults instantiates a new ListNotificationChannelsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListNotificationChannelsResultWithDefaults() *ListNotificationChannelsResult {
	this := ListNotificationChannelsResult{}
	return &this
}

// GetChannels returns the Channels field value if set, zero value otherwise.
func (o *ListNotificationChannelsResult) GetChannels() []Channel {
	if o == nil || IsNil(o.Channels) {
		var ret []Channel
		return ret
	}
	return o.Channels
}

// GetChannelsOk returns a tuple with the Channels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListNotificationChannelsResult) GetChannelsOk() ([]Channel, bool) {
	if o == nil || IsNil(o.Channels) {
		return nil, false
	}
	return o.Channels, true
}

// HasChannels returns a boolean if a field has been set.
func (o *ListNotificationChannelsResult) HasChannels() bool {
	if o != nil && !IsNil(o.Channels) {
		return true
	}

	return false
}

// SetChannels gets a reference to the given []Channel and assigns it to the Channels field.
func (o *ListNotificationChannelsResult) SetChannels(v []Channel) {
	o.Channels = v
}

func (o ListNotificationChannelsResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListNotificationChannelsResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Channels) {
		toSerialize["channels"] = o.Channels
	}
	return toSerialize, nil
}

type NullableListNotificationChannelsResult struct {
	value *ListNotificationChannelsResult
	isSet bool
}

func (v NullableListNotificationChannelsResult) Get() *ListNotificationChannelsResult {
	return v.value
}

func (v *NullableListNotificationChannelsResult) Set(val *ListNotificationChannelsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableListNotificationChannelsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableListNotificationChannelsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListNotificationChannelsResult(val *ListNotificationChannelsResult) *NullableListNotificationChannelsResult {
	return &NullableListNotificationChannelsResult{value: val, isSet: true}
}

func (v NullableListNotificationChannelsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListNotificationChannelsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


