/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the OneOffPatchResourceInstanceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OneOffPatchResourceInstanceRequest{}

// OneOffPatchResourceInstanceRequest struct for OneOffPatchResourceInstanceRequest
type OneOffPatchResourceInstanceRequest struct {
	// ID of a Service Environment
	EnvironmentId string `json:"environmentId"`
	// ID of a Resource Instance
	InstanceId string `json:"instanceId"`
	// ID of a resource
	ResourceId string `json:"resourceId"`
	// The resource override configuration for one-off patching.
	ResourceOverrideConfiguration *map[string]ResourceOneOffPatchConfigurationOverride `json:"resourceOverrideConfiguration,omitempty"`
	// ID of a Service
	ServiceId string `json:"serviceId"`
	// The target resource version.
	TargetTierVersion *string `json:"targetTierVersion,omitempty"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _OneOffPatchResourceInstanceRequest OneOffPatchResourceInstanceRequest

// NewOneOffPatchResourceInstanceRequest instantiates a new OneOffPatchResourceInstanceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOneOffPatchResourceInstanceRequest(environmentId string, instanceId string, resourceId string, serviceId string, token string) *OneOffPatchResourceInstanceRequest {
	this := OneOffPatchResourceInstanceRequest{}
	this.EnvironmentId = environmentId
	this.InstanceId = instanceId
	this.ResourceId = resourceId
	this.ServiceId = serviceId
	this.Token = token
	return &this
}

// NewOneOffPatchResourceInstanceRequestWithDefaults instantiates a new OneOffPatchResourceInstanceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOneOffPatchResourceInstanceRequestWithDefaults() *OneOffPatchResourceInstanceRequest {
	this := OneOffPatchResourceInstanceRequest{}
	return &this
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *OneOffPatchResourceInstanceRequest) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *OneOffPatchResourceInstanceRequest) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *OneOffPatchResourceInstanceRequest) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetInstanceId returns the InstanceId field value
func (o *OneOffPatchResourceInstanceRequest) GetInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value
// and a boolean to check if the value has been set.
func (o *OneOffPatchResourceInstanceRequest) GetInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceId, true
}

// SetInstanceId sets field value
func (o *OneOffPatchResourceInstanceRequest) SetInstanceId(v string) {
	o.InstanceId = v
}

// GetResourceId returns the ResourceId field value
func (o *OneOffPatchResourceInstanceRequest) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *OneOffPatchResourceInstanceRequest) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *OneOffPatchResourceInstanceRequest) SetResourceId(v string) {
	o.ResourceId = v
}

// GetResourceOverrideConfiguration returns the ResourceOverrideConfiguration field value if set, zero value otherwise.
func (o *OneOffPatchResourceInstanceRequest) GetResourceOverrideConfiguration() map[string]ResourceOneOffPatchConfigurationOverride {
	if o == nil || IsNil(o.ResourceOverrideConfiguration) {
		var ret map[string]ResourceOneOffPatchConfigurationOverride
		return ret
	}
	return *o.ResourceOverrideConfiguration
}

// GetResourceOverrideConfigurationOk returns a tuple with the ResourceOverrideConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OneOffPatchResourceInstanceRequest) GetResourceOverrideConfigurationOk() (*map[string]ResourceOneOffPatchConfigurationOverride, bool) {
	if o == nil || IsNil(o.ResourceOverrideConfiguration) {
		return nil, false
	}
	return o.ResourceOverrideConfiguration, true
}

// HasResourceOverrideConfiguration returns a boolean if a field has been set.
func (o *OneOffPatchResourceInstanceRequest) HasResourceOverrideConfiguration() bool {
	if o != nil && !IsNil(o.ResourceOverrideConfiguration) {
		return true
	}

	return false
}

// SetResourceOverrideConfiguration gets a reference to the given map[string]ResourceOneOffPatchConfigurationOverride and assigns it to the ResourceOverrideConfiguration field.
func (o *OneOffPatchResourceInstanceRequest) SetResourceOverrideConfiguration(v map[string]ResourceOneOffPatchConfigurationOverride) {
	o.ResourceOverrideConfiguration = &v
}

// GetServiceId returns the ServiceId field value
func (o *OneOffPatchResourceInstanceRequest) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *OneOffPatchResourceInstanceRequest) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *OneOffPatchResourceInstanceRequest) SetServiceId(v string) {
	o.ServiceId = v
}

// GetTargetTierVersion returns the TargetTierVersion field value if set, zero value otherwise.
func (o *OneOffPatchResourceInstanceRequest) GetTargetTierVersion() string {
	if o == nil || IsNil(o.TargetTierVersion) {
		var ret string
		return ret
	}
	return *o.TargetTierVersion
}

// GetTargetTierVersionOk returns a tuple with the TargetTierVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OneOffPatchResourceInstanceRequest) GetTargetTierVersionOk() (*string, bool) {
	if o == nil || IsNil(o.TargetTierVersion) {
		return nil, false
	}
	return o.TargetTierVersion, true
}

// HasTargetTierVersion returns a boolean if a field has been set.
func (o *OneOffPatchResourceInstanceRequest) HasTargetTierVersion() bool {
	if o != nil && !IsNil(o.TargetTierVersion) {
		return true
	}

	return false
}

// SetTargetTierVersion gets a reference to the given string and assigns it to the TargetTierVersion field.
func (o *OneOffPatchResourceInstanceRequest) SetTargetTierVersion(v string) {
	o.TargetTierVersion = &v
}

// GetToken returns the Token field value
func (o *OneOffPatchResourceInstanceRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *OneOffPatchResourceInstanceRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *OneOffPatchResourceInstanceRequest) SetToken(v string) {
	o.Token = v
}

func (o OneOffPatchResourceInstanceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OneOffPatchResourceInstanceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["environmentId"] = o.EnvironmentId
	toSerialize["instanceId"] = o.InstanceId
	toSerialize["resourceId"] = o.ResourceId
	if !IsNil(o.ResourceOverrideConfiguration) {
		toSerialize["resourceOverrideConfiguration"] = o.ResourceOverrideConfiguration
	}
	toSerialize["serviceId"] = o.ServiceId
	if !IsNil(o.TargetTierVersion) {
		toSerialize["targetTierVersion"] = o.TargetTierVersion
	}
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OneOffPatchResourceInstanceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"environmentId",
		"instanceId",
		"resourceId",
		"serviceId",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOneOffPatchResourceInstanceRequest := _OneOffPatchResourceInstanceRequest{}

	err = json.Unmarshal(data, &varOneOffPatchResourceInstanceRequest)

	if err != nil {
		return err
	}

	*o = OneOffPatchResourceInstanceRequest(varOneOffPatchResourceInstanceRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "environmentId")
		delete(additionalProperties, "instanceId")
		delete(additionalProperties, "resourceId")
		delete(additionalProperties, "resourceOverrideConfiguration")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "targetTierVersion")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOneOffPatchResourceInstanceRequest struct {
	value *OneOffPatchResourceInstanceRequest
	isSet bool
}

func (v NullableOneOffPatchResourceInstanceRequest) Get() *OneOffPatchResourceInstanceRequest {
	return v.value
}

func (v *NullableOneOffPatchResourceInstanceRequest) Set(val *OneOffPatchResourceInstanceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOneOffPatchResourceInstanceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOneOffPatchResourceInstanceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOneOffPatchResourceInstanceRequest(val *OneOffPatchResourceInstanceRequest) *NullableOneOffPatchResourceInstanceRequest {
	return &NullableOneOffPatchResourceInstanceRequest{value: val, isSet: true}
}

func (v NullableOneOffPatchResourceInstanceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOneOffPatchResourceInstanceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


