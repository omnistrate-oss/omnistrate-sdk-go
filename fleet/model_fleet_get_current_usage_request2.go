/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"time"
)

// checks if the FleetGetCurrentUsageRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FleetGetCurrentUsageRequest2{}

// FleetGetCurrentUsageRequest2 struct for FleetGetCurrentUsageRequest2
type FleetGetCurrentUsageRequest2 struct {
	EndDate *time.Time `json:"endDate,omitempty"`
	StartDate *time.Time `json:"startDate,omitempty"`
	// Optionally filter by subscription IDs
	SubscriptionIDs []string `json:"subscriptionIDs,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FleetGetCurrentUsageRequest2 FleetGetCurrentUsageRequest2

// NewFleetGetCurrentUsageRequest2 instantiates a new FleetGetCurrentUsageRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetGetCurrentUsageRequest2() *FleetGetCurrentUsageRequest2 {
	this := FleetGetCurrentUsageRequest2{}
	return &this
}

// NewFleetGetCurrentUsageRequest2WithDefaults instantiates a new FleetGetCurrentUsageRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetGetCurrentUsageRequest2WithDefaults() *FleetGetCurrentUsageRequest2 {
	this := FleetGetCurrentUsageRequest2{}
	return &this
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *FleetGetCurrentUsageRequest2) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetGetCurrentUsageRequest2) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *FleetGetCurrentUsageRequest2) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *FleetGetCurrentUsageRequest2) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *FleetGetCurrentUsageRequest2) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetGetCurrentUsageRequest2) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *FleetGetCurrentUsageRequest2) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *FleetGetCurrentUsageRequest2) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetSubscriptionIDs returns the SubscriptionIDs field value if set, zero value otherwise.
func (o *FleetGetCurrentUsageRequest2) GetSubscriptionIDs() []string {
	if o == nil || IsNil(o.SubscriptionIDs) {
		var ret []string
		return ret
	}
	return o.SubscriptionIDs
}

// GetSubscriptionIDsOk returns a tuple with the SubscriptionIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetGetCurrentUsageRequest2) GetSubscriptionIDsOk() ([]string, bool) {
	if o == nil || IsNil(o.SubscriptionIDs) {
		return nil, false
	}
	return o.SubscriptionIDs, true
}

// HasSubscriptionIDs returns a boolean if a field has been set.
func (o *FleetGetCurrentUsageRequest2) HasSubscriptionIDs() bool {
	if o != nil && !IsNil(o.SubscriptionIDs) {
		return true
	}

	return false
}

// SetSubscriptionIDs gets a reference to the given []string and assigns it to the SubscriptionIDs field.
func (o *FleetGetCurrentUsageRequest2) SetSubscriptionIDs(v []string) {
	o.SubscriptionIDs = v
}

func (o FleetGetCurrentUsageRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FleetGetCurrentUsageRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.SubscriptionIDs) {
		toSerialize["subscriptionIDs"] = o.SubscriptionIDs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FleetGetCurrentUsageRequest2) UnmarshalJSON(data []byte) (err error) {
	varFleetGetCurrentUsageRequest2 := _FleetGetCurrentUsageRequest2{}

	err = json.Unmarshal(data, &varFleetGetCurrentUsageRequest2)

	if err != nil {
		return err
	}

	*o = FleetGetCurrentUsageRequest2(varFleetGetCurrentUsageRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "endDate")
		delete(additionalProperties, "startDate")
		delete(additionalProperties, "subscriptionIDs")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFleetGetCurrentUsageRequest2 struct {
	value *FleetGetCurrentUsageRequest2
	isSet bool
}

func (v NullableFleetGetCurrentUsageRequest2) Get() *FleetGetCurrentUsageRequest2 {
	return v.value
}

func (v *NullableFleetGetCurrentUsageRequest2) Set(val *FleetGetCurrentUsageRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetGetCurrentUsageRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetGetCurrentUsageRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetGetCurrentUsageRequest2(val *FleetGetCurrentUsageRequest2) *NullableFleetGetCurrentUsageRequest2 {
	return &NullableFleetGetCurrentUsageRequest2{value: val, isSet: true}
}

func (v NullableFleetGetCurrentUsageRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetGetCurrentUsageRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


