/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the FleetCreateSubscriptionOnBehalfOfCustomerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FleetCreateSubscriptionOnBehalfOfCustomerRequest{}

// FleetCreateSubscriptionOnBehalfOfCustomerRequest struct for FleetCreateSubscriptionOnBehalfOfCustomerRequest
type FleetCreateSubscriptionOnBehalfOfCustomerRequest struct {
	// ID of a Service Environment
	EnvironmentId string `json:"environmentId"`
	// The external payer ID to record which customer should pay for this subscription
	ExternalPayerId *string `json:"externalPayerId,omitempty"`
	// Whether to inherit the service plan price
	InheritServicePlanPrice *bool `json:"inheritServicePlanPrice,omitempty"`
	// ID of a User
	OnBehalfOfCustomerUserId string `json:"onBehalfOfCustomerUserId"`
	// The effective date of the price, truncated to the first day of the month. Only the current or future months may be specified.
	PriceEffectiveDate *string `json:"priceEffectiveDate,omitempty"`
	// If inheritServicePlanPrice is false, provide the price per unit for the subscription here.
	PricePerUnit map[string]interface{} `json:"pricePerUnit,omitempty"`
	// ID of a Product Tier
	ProductTierId string `json:"productTierId"`
	// ID of a Service
	ServiceId string `json:"serviceId"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _FleetCreateSubscriptionOnBehalfOfCustomerRequest FleetCreateSubscriptionOnBehalfOfCustomerRequest

// NewFleetCreateSubscriptionOnBehalfOfCustomerRequest instantiates a new FleetCreateSubscriptionOnBehalfOfCustomerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetCreateSubscriptionOnBehalfOfCustomerRequest(environmentId string, onBehalfOfCustomerUserId string, productTierId string, serviceId string, token string) *FleetCreateSubscriptionOnBehalfOfCustomerRequest {
	this := FleetCreateSubscriptionOnBehalfOfCustomerRequest{}
	this.EnvironmentId = environmentId
	this.OnBehalfOfCustomerUserId = onBehalfOfCustomerUserId
	this.ProductTierId = productTierId
	this.ServiceId = serviceId
	this.Token = token
	return &this
}

// NewFleetCreateSubscriptionOnBehalfOfCustomerRequestWithDefaults instantiates a new FleetCreateSubscriptionOnBehalfOfCustomerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetCreateSubscriptionOnBehalfOfCustomerRequestWithDefaults() *FleetCreateSubscriptionOnBehalfOfCustomerRequest {
	this := FleetCreateSubscriptionOnBehalfOfCustomerRequest{}
	return &this
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetExternalPayerId returns the ExternalPayerId field value if set, zero value otherwise.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) GetExternalPayerId() string {
	if o == nil || IsNil(o.ExternalPayerId) {
		var ret string
		return ret
	}
	return *o.ExternalPayerId
}

// GetExternalPayerIdOk returns a tuple with the ExternalPayerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) GetExternalPayerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalPayerId) {
		return nil, false
	}
	return o.ExternalPayerId, true
}

// HasExternalPayerId returns a boolean if a field has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) HasExternalPayerId() bool {
	if o != nil && !IsNil(o.ExternalPayerId) {
		return true
	}

	return false
}

// SetExternalPayerId gets a reference to the given string and assigns it to the ExternalPayerId field.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) SetExternalPayerId(v string) {
	o.ExternalPayerId = &v
}

// GetInheritServicePlanPrice returns the InheritServicePlanPrice field value if set, zero value otherwise.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) GetInheritServicePlanPrice() bool {
	if o == nil || IsNil(o.InheritServicePlanPrice) {
		var ret bool
		return ret
	}
	return *o.InheritServicePlanPrice
}

// GetInheritServicePlanPriceOk returns a tuple with the InheritServicePlanPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) GetInheritServicePlanPriceOk() (*bool, bool) {
	if o == nil || IsNil(o.InheritServicePlanPrice) {
		return nil, false
	}
	return o.InheritServicePlanPrice, true
}

// HasInheritServicePlanPrice returns a boolean if a field has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) HasInheritServicePlanPrice() bool {
	if o != nil && !IsNil(o.InheritServicePlanPrice) {
		return true
	}

	return false
}

// SetInheritServicePlanPrice gets a reference to the given bool and assigns it to the InheritServicePlanPrice field.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) SetInheritServicePlanPrice(v bool) {
	o.InheritServicePlanPrice = &v
}

// GetOnBehalfOfCustomerUserId returns the OnBehalfOfCustomerUserId field value
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) GetOnBehalfOfCustomerUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OnBehalfOfCustomerUserId
}

// GetOnBehalfOfCustomerUserIdOk returns a tuple with the OnBehalfOfCustomerUserId field value
// and a boolean to check if the value has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) GetOnBehalfOfCustomerUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OnBehalfOfCustomerUserId, true
}

// SetOnBehalfOfCustomerUserId sets field value
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) SetOnBehalfOfCustomerUserId(v string) {
	o.OnBehalfOfCustomerUserId = v
}

// GetPriceEffectiveDate returns the PriceEffectiveDate field value if set, zero value otherwise.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) GetPriceEffectiveDate() string {
	if o == nil || IsNil(o.PriceEffectiveDate) {
		var ret string
		return ret
	}
	return *o.PriceEffectiveDate
}

// GetPriceEffectiveDateOk returns a tuple with the PriceEffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) GetPriceEffectiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.PriceEffectiveDate) {
		return nil, false
	}
	return o.PriceEffectiveDate, true
}

// HasPriceEffectiveDate returns a boolean if a field has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) HasPriceEffectiveDate() bool {
	if o != nil && !IsNil(o.PriceEffectiveDate) {
		return true
	}

	return false
}

// SetPriceEffectiveDate gets a reference to the given string and assigns it to the PriceEffectiveDate field.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) SetPriceEffectiveDate(v string) {
	o.PriceEffectiveDate = &v
}

// GetPricePerUnit returns the PricePerUnit field value if set, zero value otherwise.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) GetPricePerUnit() map[string]interface{} {
	if o == nil || IsNil(o.PricePerUnit) {
		var ret map[string]interface{}
		return ret
	}
	return o.PricePerUnit
}

// GetPricePerUnitOk returns a tuple with the PricePerUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) GetPricePerUnitOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.PricePerUnit) {
		return map[string]interface{}{}, false
	}
	return o.PricePerUnit, true
}

// HasPricePerUnit returns a boolean if a field has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) HasPricePerUnit() bool {
	if o != nil && !IsNil(o.PricePerUnit) {
		return true
	}

	return false
}

// SetPricePerUnit gets a reference to the given map[string]interface{} and assigns it to the PricePerUnit field.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) SetPricePerUnit(v map[string]interface{}) {
	o.PricePerUnit = v
}

// GetProductTierId returns the ProductTierId field value
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) GetProductTierId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductTierId
}

// GetProductTierIdOk returns a tuple with the ProductTierId field value
// and a boolean to check if the value has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) GetProductTierIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductTierId, true
}

// SetProductTierId sets field value
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) SetProductTierId(v string) {
	o.ProductTierId = v
}

// GetServiceId returns the ServiceId field value
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) SetServiceId(v string) {
	o.ServiceId = v
}

// GetToken returns the Token field value
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) SetToken(v string) {
	o.Token = v
}

func (o FleetCreateSubscriptionOnBehalfOfCustomerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FleetCreateSubscriptionOnBehalfOfCustomerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["environmentId"] = o.EnvironmentId
	if !IsNil(o.ExternalPayerId) {
		toSerialize["externalPayerId"] = o.ExternalPayerId
	}
	if !IsNil(o.InheritServicePlanPrice) {
		toSerialize["inheritServicePlanPrice"] = o.InheritServicePlanPrice
	}
	toSerialize["onBehalfOfCustomerUserId"] = o.OnBehalfOfCustomerUserId
	if !IsNil(o.PriceEffectiveDate) {
		toSerialize["priceEffectiveDate"] = o.PriceEffectiveDate
	}
	if !IsNil(o.PricePerUnit) {
		toSerialize["pricePerUnit"] = o.PricePerUnit
	}
	toSerialize["productTierId"] = o.ProductTierId
	toSerialize["serviceId"] = o.ServiceId
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FleetCreateSubscriptionOnBehalfOfCustomerRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"environmentId",
		"onBehalfOfCustomerUserId",
		"productTierId",
		"serviceId",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFleetCreateSubscriptionOnBehalfOfCustomerRequest := _FleetCreateSubscriptionOnBehalfOfCustomerRequest{}

	err = json.Unmarshal(data, &varFleetCreateSubscriptionOnBehalfOfCustomerRequest)

	if err != nil {
		return err
	}

	*o = FleetCreateSubscriptionOnBehalfOfCustomerRequest(varFleetCreateSubscriptionOnBehalfOfCustomerRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "environmentId")
		delete(additionalProperties, "externalPayerId")
		delete(additionalProperties, "inheritServicePlanPrice")
		delete(additionalProperties, "onBehalfOfCustomerUserId")
		delete(additionalProperties, "priceEffectiveDate")
		delete(additionalProperties, "pricePerUnit")
		delete(additionalProperties, "productTierId")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFleetCreateSubscriptionOnBehalfOfCustomerRequest struct {
	value *FleetCreateSubscriptionOnBehalfOfCustomerRequest
	isSet bool
}

func (v NullableFleetCreateSubscriptionOnBehalfOfCustomerRequest) Get() *FleetCreateSubscriptionOnBehalfOfCustomerRequest {
	return v.value
}

func (v *NullableFleetCreateSubscriptionOnBehalfOfCustomerRequest) Set(val *FleetCreateSubscriptionOnBehalfOfCustomerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetCreateSubscriptionOnBehalfOfCustomerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetCreateSubscriptionOnBehalfOfCustomerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetCreateSubscriptionOnBehalfOfCustomerRequest(val *FleetCreateSubscriptionOnBehalfOfCustomerRequest) *NullableFleetCreateSubscriptionOnBehalfOfCustomerRequest {
	return &NullableFleetCreateSubscriptionOnBehalfOfCustomerRequest{value: val, isSet: true}
}

func (v NullableFleetCreateSubscriptionOnBehalfOfCustomerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetCreateSubscriptionOnBehalfOfCustomerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


