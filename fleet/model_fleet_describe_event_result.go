/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FleetDescribeEventResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FleetDescribeEventResult{}

// FleetDescribeEventResult struct for FleetDescribeEventResult
type FleetDescribeEventResult struct {
	// The service environment ID this workflow belongs to.
	EnvironmentId string `json:"environmentId"`
	// The event source
	EventSource *string `json:"eventSource,omitempty"`
	// The ID of the event
	Id string `json:"id"`
	// The resource instance ID.
	InstanceId string `json:"instanceId"`
	// Resource Instance of message
	Message string `json:"message"`
	// The organization ID of the user that caused the event
	OrgId *string `json:"orgId,omitempty"`
	// The organization name of the user that caused the event
	OrgName *string `json:"orgName,omitempty"`
	// Name of the resource
	ResourceName string `json:"resourceName"`
	// The service ID this workflow belongs to.
	ServiceId string `json:"serviceId"`
	// The event time
	Time string `json:"time"`
	// The ID of the user that caused the event
	UserId *string `json:"userId,omitempty"`
	// The user name of the user that caused the event
	UserName *string `json:"userName,omitempty"`
	// The list of workflow events that indicate failures
	WorkflowFailures []WorkflowFailure `json:"workflowFailures,omitempty"`
	// The workflow ID
	WorkflowId *string `json:"workflowId,omitempty"`
}

type _FleetDescribeEventResult FleetDescribeEventResult

// NewFleetDescribeEventResult instantiates a new FleetDescribeEventResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetDescribeEventResult(environmentId string, id string, instanceId string, message string, resourceName string, serviceId string, time string) *FleetDescribeEventResult {
	this := FleetDescribeEventResult{}
	this.EnvironmentId = environmentId
	this.Id = id
	this.InstanceId = instanceId
	this.Message = message
	this.ResourceName = resourceName
	this.ServiceId = serviceId
	this.Time = time
	return &this
}

// NewFleetDescribeEventResultWithDefaults instantiates a new FleetDescribeEventResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetDescribeEventResultWithDefaults() *FleetDescribeEventResult {
	this := FleetDescribeEventResult{}
	return &this
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *FleetDescribeEventResult) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeEventResult) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *FleetDescribeEventResult) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetEventSource returns the EventSource field value if set, zero value otherwise.
func (o *FleetDescribeEventResult) GetEventSource() string {
	if o == nil || IsNil(o.EventSource) {
		var ret string
		return ret
	}
	return *o.EventSource
}

// GetEventSourceOk returns a tuple with the EventSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeEventResult) GetEventSourceOk() (*string, bool) {
	if o == nil || IsNil(o.EventSource) {
		return nil, false
	}
	return o.EventSource, true
}

// HasEventSource returns a boolean if a field has been set.
func (o *FleetDescribeEventResult) HasEventSource() bool {
	if o != nil && !IsNil(o.EventSource) {
		return true
	}

	return false
}

// SetEventSource gets a reference to the given string and assigns it to the EventSource field.
func (o *FleetDescribeEventResult) SetEventSource(v string) {
	o.EventSource = &v
}

// GetId returns the Id field value
func (o *FleetDescribeEventResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeEventResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FleetDescribeEventResult) SetId(v string) {
	o.Id = v
}

// GetInstanceId returns the InstanceId field value
func (o *FleetDescribeEventResult) GetInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeEventResult) GetInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceId, true
}

// SetInstanceId sets field value
func (o *FleetDescribeEventResult) SetInstanceId(v string) {
	o.InstanceId = v
}

// GetMessage returns the Message field value
func (o *FleetDescribeEventResult) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeEventResult) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *FleetDescribeEventResult) SetMessage(v string) {
	o.Message = v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *FleetDescribeEventResult) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeEventResult) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *FleetDescribeEventResult) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *FleetDescribeEventResult) SetOrgId(v string) {
	o.OrgId = &v
}

// GetOrgName returns the OrgName field value if set, zero value otherwise.
func (o *FleetDescribeEventResult) GetOrgName() string {
	if o == nil || IsNil(o.OrgName) {
		var ret string
		return ret
	}
	return *o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeEventResult) GetOrgNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrgName) {
		return nil, false
	}
	return o.OrgName, true
}

// HasOrgName returns a boolean if a field has been set.
func (o *FleetDescribeEventResult) HasOrgName() bool {
	if o != nil && !IsNil(o.OrgName) {
		return true
	}

	return false
}

// SetOrgName gets a reference to the given string and assigns it to the OrgName field.
func (o *FleetDescribeEventResult) SetOrgName(v string) {
	o.OrgName = &v
}

// GetResourceName returns the ResourceName field value
func (o *FleetDescribeEventResult) GetResourceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeEventResult) GetResourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceName, true
}

// SetResourceName sets field value
func (o *FleetDescribeEventResult) SetResourceName(v string) {
	o.ResourceName = v
}

// GetServiceId returns the ServiceId field value
func (o *FleetDescribeEventResult) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeEventResult) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *FleetDescribeEventResult) SetServiceId(v string) {
	o.ServiceId = v
}

// GetTime returns the Time field value
func (o *FleetDescribeEventResult) GetTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *FleetDescribeEventResult) GetTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *FleetDescribeEventResult) SetTime(v string) {
	o.Time = v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *FleetDescribeEventResult) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeEventResult) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *FleetDescribeEventResult) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *FleetDescribeEventResult) SetUserId(v string) {
	o.UserId = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *FleetDescribeEventResult) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeEventResult) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *FleetDescribeEventResult) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *FleetDescribeEventResult) SetUserName(v string) {
	o.UserName = &v
}

// GetWorkflowFailures returns the WorkflowFailures field value if set, zero value otherwise.
func (o *FleetDescribeEventResult) GetWorkflowFailures() []WorkflowFailure {
	if o == nil || IsNil(o.WorkflowFailures) {
		var ret []WorkflowFailure
		return ret
	}
	return o.WorkflowFailures
}

// GetWorkflowFailuresOk returns a tuple with the WorkflowFailures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeEventResult) GetWorkflowFailuresOk() ([]WorkflowFailure, bool) {
	if o == nil || IsNil(o.WorkflowFailures) {
		return nil, false
	}
	return o.WorkflowFailures, true
}

// HasWorkflowFailures returns a boolean if a field has been set.
func (o *FleetDescribeEventResult) HasWorkflowFailures() bool {
	if o != nil && !IsNil(o.WorkflowFailures) {
		return true
	}

	return false
}

// SetWorkflowFailures gets a reference to the given []WorkflowFailure and assigns it to the WorkflowFailures field.
func (o *FleetDescribeEventResult) SetWorkflowFailures(v []WorkflowFailure) {
	o.WorkflowFailures = v
}

// GetWorkflowId returns the WorkflowId field value if set, zero value otherwise.
func (o *FleetDescribeEventResult) GetWorkflowId() string {
	if o == nil || IsNil(o.WorkflowId) {
		var ret string
		return ret
	}
	return *o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetDescribeEventResult) GetWorkflowIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkflowId) {
		return nil, false
	}
	return o.WorkflowId, true
}

// HasWorkflowId returns a boolean if a field has been set.
func (o *FleetDescribeEventResult) HasWorkflowId() bool {
	if o != nil && !IsNil(o.WorkflowId) {
		return true
	}

	return false
}

// SetWorkflowId gets a reference to the given string and assigns it to the WorkflowId field.
func (o *FleetDescribeEventResult) SetWorkflowId(v string) {
	o.WorkflowId = &v
}

func (o FleetDescribeEventResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FleetDescribeEventResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["environmentId"] = o.EnvironmentId
	if !IsNil(o.EventSource) {
		toSerialize["eventSource"] = o.EventSource
	}
	toSerialize["id"] = o.Id
	toSerialize["instanceId"] = o.InstanceId
	toSerialize["message"] = o.Message
	if !IsNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	if !IsNil(o.OrgName) {
		toSerialize["orgName"] = o.OrgName
	}
	toSerialize["resourceName"] = o.ResourceName
	toSerialize["serviceId"] = o.ServiceId
	toSerialize["time"] = o.Time
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.UserName) {
		toSerialize["userName"] = o.UserName
	}
	if !IsNil(o.WorkflowFailures) {
		toSerialize["workflowFailures"] = o.WorkflowFailures
	}
	if !IsNil(o.WorkflowId) {
		toSerialize["workflowId"] = o.WorkflowId
	}
	return toSerialize, nil
}

func (o *FleetDescribeEventResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"environmentId",
		"id",
		"instanceId",
		"message",
		"resourceName",
		"serviceId",
		"time",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFleetDescribeEventResult := _FleetDescribeEventResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFleetDescribeEventResult)

	if err != nil {
		return err
	}

	*o = FleetDescribeEventResult(varFleetDescribeEventResult)

	return err
}

type NullableFleetDescribeEventResult struct {
	value *FleetDescribeEventResult
	isSet bool
}

func (v NullableFleetDescribeEventResult) Get() *FleetDescribeEventResult {
	return v.value
}

func (v *NullableFleetDescribeEventResult) Set(val *FleetDescribeEventResult) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetDescribeEventResult) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetDescribeEventResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetDescribeEventResult(val *FleetDescribeEventResult) *NullableFleetDescribeEventResult {
	return &NullableFleetDescribeEventResult{value: val, isSet: true}
}

func (v NullableFleetDescribeEventResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetDescribeEventResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


