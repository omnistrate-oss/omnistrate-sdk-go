/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the ProductTierDeploymentConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductTierDeploymentConfiguration{}

// ProductTierDeploymentConfiguration struct for ProductTierDeploymentConfiguration
type ProductTierDeploymentConfiguration struct {
	OnPremInstallerTools *OnPremInstallerTools `json:"onPremInstallerTools,omitempty"`
	Requirements *ProductTierDeploymentRequirements `json:"requirements,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProductTierDeploymentConfiguration ProductTierDeploymentConfiguration

// NewProductTierDeploymentConfiguration instantiates a new ProductTierDeploymentConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductTierDeploymentConfiguration() *ProductTierDeploymentConfiguration {
	this := ProductTierDeploymentConfiguration{}
	return &this
}

// NewProductTierDeploymentConfigurationWithDefaults instantiates a new ProductTierDeploymentConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductTierDeploymentConfigurationWithDefaults() *ProductTierDeploymentConfiguration {
	this := ProductTierDeploymentConfiguration{}
	return &this
}

// GetOnPremInstallerTools returns the OnPremInstallerTools field value if set, zero value otherwise.
func (o *ProductTierDeploymentConfiguration) GetOnPremInstallerTools() OnPremInstallerTools {
	if o == nil || IsNil(o.OnPremInstallerTools) {
		var ret OnPremInstallerTools
		return ret
	}
	return *o.OnPremInstallerTools
}

// GetOnPremInstallerToolsOk returns a tuple with the OnPremInstallerTools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductTierDeploymentConfiguration) GetOnPremInstallerToolsOk() (*OnPremInstallerTools, bool) {
	if o == nil || IsNil(o.OnPremInstallerTools) {
		return nil, false
	}
	return o.OnPremInstallerTools, true
}

// HasOnPremInstallerTools returns a boolean if a field has been set.
func (o *ProductTierDeploymentConfiguration) HasOnPremInstallerTools() bool {
	if o != nil && !IsNil(o.OnPremInstallerTools) {
		return true
	}

	return false
}

// SetOnPremInstallerTools gets a reference to the given OnPremInstallerTools and assigns it to the OnPremInstallerTools field.
func (o *ProductTierDeploymentConfiguration) SetOnPremInstallerTools(v OnPremInstallerTools) {
	o.OnPremInstallerTools = &v
}

// GetRequirements returns the Requirements field value if set, zero value otherwise.
func (o *ProductTierDeploymentConfiguration) GetRequirements() ProductTierDeploymentRequirements {
	if o == nil || IsNil(o.Requirements) {
		var ret ProductTierDeploymentRequirements
		return ret
	}
	return *o.Requirements
}

// GetRequirementsOk returns a tuple with the Requirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductTierDeploymentConfiguration) GetRequirementsOk() (*ProductTierDeploymentRequirements, bool) {
	if o == nil || IsNil(o.Requirements) {
		return nil, false
	}
	return o.Requirements, true
}

// HasRequirements returns a boolean if a field has been set.
func (o *ProductTierDeploymentConfiguration) HasRequirements() bool {
	if o != nil && !IsNil(o.Requirements) {
		return true
	}

	return false
}

// SetRequirements gets a reference to the given ProductTierDeploymentRequirements and assigns it to the Requirements field.
func (o *ProductTierDeploymentConfiguration) SetRequirements(v ProductTierDeploymentRequirements) {
	o.Requirements = &v
}

func (o ProductTierDeploymentConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductTierDeploymentConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OnPremInstallerTools) {
		toSerialize["onPremInstallerTools"] = o.OnPremInstallerTools
	}
	if !IsNil(o.Requirements) {
		toSerialize["requirements"] = o.Requirements
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProductTierDeploymentConfiguration) UnmarshalJSON(data []byte) (err error) {
	varProductTierDeploymentConfiguration := _ProductTierDeploymentConfiguration{}

	err = json.Unmarshal(data, &varProductTierDeploymentConfiguration)

	if err != nil {
		return err
	}

	*o = ProductTierDeploymentConfiguration(varProductTierDeploymentConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "onPremInstallerTools")
		delete(additionalProperties, "requirements")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProductTierDeploymentConfiguration struct {
	value *ProductTierDeploymentConfiguration
	isSet bool
}

func (v NullableProductTierDeploymentConfiguration) Get() *ProductTierDeploymentConfiguration {
	return v.value
}

func (v *NullableProductTierDeploymentConfiguration) Set(val *ProductTierDeploymentConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableProductTierDeploymentConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableProductTierDeploymentConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductTierDeploymentConfiguration(val *ProductTierDeploymentConfiguration) *NullableProductTierDeploymentConfiguration {
	return &NullableProductTierDeploymentConfiguration{value: val, isSet: true}
}

func (v NullableProductTierDeploymentConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductTierDeploymentConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


