/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the FleetAuditEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FleetAuditEvent{}

// FleetAuditEvent struct for FleetAuditEvent
type FleetAuditEvent struct {
	// ID of a Service Environment
	EnvironmentId string `json:"environmentId"`
	// The event source
	EventSource *string `json:"eventSource,omitempty"`
	// ID of a Event
	Id string `json:"id"`
	// ID of a Resource Instance
	InstanceId string `json:"instanceId"`
	// Resource Instance of message
	Message string `json:"message"`
	// ID of an Org
	OrgId *string `json:"orgId,omitempty"`
	// The organization name of the user that caused the event
	OrgName *string `json:"orgName,omitempty"`
	// The version of the plan
	PlanVersion string `json:"planVersion"`
	// ID of a Product Tier
	ProductTierId string `json:"productTierId"`
	// Name of the resource
	ResourceName string `json:"resourceName"`
	// ID of a Service
	ServiceId string `json:"serviceId"`
	// The service name
	ServiceName string `json:"serviceName"`
	// The name of the service plan
	ServicePlanName string `json:"servicePlanName"`
	// ID of a Event
	Time string `json:"time"`
	// ID of a User
	UserId *string `json:"userId,omitempty"`
	// The user name of the user that caused the event
	UserName *string `json:"userName,omitempty"`
	// The list of workflow events that indicate failures
	WorkflowFailures []WorkflowFailure `json:"workflowFailures,omitempty"`
	// ID of a Workflow
	WorkflowId *string `json:"workflowId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FleetAuditEvent FleetAuditEvent

// NewFleetAuditEvent instantiates a new FleetAuditEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetAuditEvent(environmentId string, id string, instanceId string, message string, planVersion string, productTierId string, resourceName string, serviceId string, serviceName string, servicePlanName string, time string) *FleetAuditEvent {
	this := FleetAuditEvent{}
	this.EnvironmentId = environmentId
	this.Id = id
	this.InstanceId = instanceId
	this.Message = message
	this.PlanVersion = planVersion
	this.ProductTierId = productTierId
	this.ResourceName = resourceName
	this.ServiceId = serviceId
	this.ServiceName = serviceName
	this.ServicePlanName = servicePlanName
	this.Time = time
	return &this
}

// NewFleetAuditEventWithDefaults instantiates a new FleetAuditEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetAuditEventWithDefaults() *FleetAuditEvent {
	this := FleetAuditEvent{}
	return &this
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *FleetAuditEvent) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *FleetAuditEvent) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *FleetAuditEvent) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetEventSource returns the EventSource field value if set, zero value otherwise.
func (o *FleetAuditEvent) GetEventSource() string {
	if o == nil || IsNil(o.EventSource) {
		var ret string
		return ret
	}
	return *o.EventSource
}

// GetEventSourceOk returns a tuple with the EventSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetAuditEvent) GetEventSourceOk() (*string, bool) {
	if o == nil || IsNil(o.EventSource) {
		return nil, false
	}
	return o.EventSource, true
}

// HasEventSource returns a boolean if a field has been set.
func (o *FleetAuditEvent) HasEventSource() bool {
	if o != nil && !IsNil(o.EventSource) {
		return true
	}

	return false
}

// SetEventSource gets a reference to the given string and assigns it to the EventSource field.
func (o *FleetAuditEvent) SetEventSource(v string) {
	o.EventSource = &v
}

// GetId returns the Id field value
func (o *FleetAuditEvent) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FleetAuditEvent) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FleetAuditEvent) SetId(v string) {
	o.Id = v
}

// GetInstanceId returns the InstanceId field value
func (o *FleetAuditEvent) GetInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value
// and a boolean to check if the value has been set.
func (o *FleetAuditEvent) GetInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceId, true
}

// SetInstanceId sets field value
func (o *FleetAuditEvent) SetInstanceId(v string) {
	o.InstanceId = v
}

// GetMessage returns the Message field value
func (o *FleetAuditEvent) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *FleetAuditEvent) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *FleetAuditEvent) SetMessage(v string) {
	o.Message = v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *FleetAuditEvent) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetAuditEvent) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *FleetAuditEvent) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *FleetAuditEvent) SetOrgId(v string) {
	o.OrgId = &v
}

// GetOrgName returns the OrgName field value if set, zero value otherwise.
func (o *FleetAuditEvent) GetOrgName() string {
	if o == nil || IsNil(o.OrgName) {
		var ret string
		return ret
	}
	return *o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetAuditEvent) GetOrgNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrgName) {
		return nil, false
	}
	return o.OrgName, true
}

// HasOrgName returns a boolean if a field has been set.
func (o *FleetAuditEvent) HasOrgName() bool {
	if o != nil && !IsNil(o.OrgName) {
		return true
	}

	return false
}

// SetOrgName gets a reference to the given string and assigns it to the OrgName field.
func (o *FleetAuditEvent) SetOrgName(v string) {
	o.OrgName = &v
}

// GetPlanVersion returns the PlanVersion field value
func (o *FleetAuditEvent) GetPlanVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlanVersion
}

// GetPlanVersionOk returns a tuple with the PlanVersion field value
// and a boolean to check if the value has been set.
func (o *FleetAuditEvent) GetPlanVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlanVersion, true
}

// SetPlanVersion sets field value
func (o *FleetAuditEvent) SetPlanVersion(v string) {
	o.PlanVersion = v
}

// GetProductTierId returns the ProductTierId field value
func (o *FleetAuditEvent) GetProductTierId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductTierId
}

// GetProductTierIdOk returns a tuple with the ProductTierId field value
// and a boolean to check if the value has been set.
func (o *FleetAuditEvent) GetProductTierIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductTierId, true
}

// SetProductTierId sets field value
func (o *FleetAuditEvent) SetProductTierId(v string) {
	o.ProductTierId = v
}

// GetResourceName returns the ResourceName field value
func (o *FleetAuditEvent) GetResourceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value
// and a boolean to check if the value has been set.
func (o *FleetAuditEvent) GetResourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceName, true
}

// SetResourceName sets field value
func (o *FleetAuditEvent) SetResourceName(v string) {
	o.ResourceName = v
}

// GetServiceId returns the ServiceId field value
func (o *FleetAuditEvent) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *FleetAuditEvent) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *FleetAuditEvent) SetServiceId(v string) {
	o.ServiceId = v
}

// GetServiceName returns the ServiceName field value
func (o *FleetAuditEvent) GetServiceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value
// and a boolean to check if the value has been set.
func (o *FleetAuditEvent) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceName, true
}

// SetServiceName sets field value
func (o *FleetAuditEvent) SetServiceName(v string) {
	o.ServiceName = v
}

// GetServicePlanName returns the ServicePlanName field value
func (o *FleetAuditEvent) GetServicePlanName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServicePlanName
}

// GetServicePlanNameOk returns a tuple with the ServicePlanName field value
// and a boolean to check if the value has been set.
func (o *FleetAuditEvent) GetServicePlanNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServicePlanName, true
}

// SetServicePlanName sets field value
func (o *FleetAuditEvent) SetServicePlanName(v string) {
	o.ServicePlanName = v
}

// GetTime returns the Time field value
func (o *FleetAuditEvent) GetTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *FleetAuditEvent) GetTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *FleetAuditEvent) SetTime(v string) {
	o.Time = v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *FleetAuditEvent) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetAuditEvent) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *FleetAuditEvent) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *FleetAuditEvent) SetUserId(v string) {
	o.UserId = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *FleetAuditEvent) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetAuditEvent) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *FleetAuditEvent) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *FleetAuditEvent) SetUserName(v string) {
	o.UserName = &v
}

// GetWorkflowFailures returns the WorkflowFailures field value if set, zero value otherwise.
func (o *FleetAuditEvent) GetWorkflowFailures() []WorkflowFailure {
	if o == nil || IsNil(o.WorkflowFailures) {
		var ret []WorkflowFailure
		return ret
	}
	return o.WorkflowFailures
}

// GetWorkflowFailuresOk returns a tuple with the WorkflowFailures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetAuditEvent) GetWorkflowFailuresOk() ([]WorkflowFailure, bool) {
	if o == nil || IsNil(o.WorkflowFailures) {
		return nil, false
	}
	return o.WorkflowFailures, true
}

// HasWorkflowFailures returns a boolean if a field has been set.
func (o *FleetAuditEvent) HasWorkflowFailures() bool {
	if o != nil && !IsNil(o.WorkflowFailures) {
		return true
	}

	return false
}

// SetWorkflowFailures gets a reference to the given []WorkflowFailure and assigns it to the WorkflowFailures field.
func (o *FleetAuditEvent) SetWorkflowFailures(v []WorkflowFailure) {
	o.WorkflowFailures = v
}

// GetWorkflowId returns the WorkflowId field value if set, zero value otherwise.
func (o *FleetAuditEvent) GetWorkflowId() string {
	if o == nil || IsNil(o.WorkflowId) {
		var ret string
		return ret
	}
	return *o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetAuditEvent) GetWorkflowIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkflowId) {
		return nil, false
	}
	return o.WorkflowId, true
}

// HasWorkflowId returns a boolean if a field has been set.
func (o *FleetAuditEvent) HasWorkflowId() bool {
	if o != nil && !IsNil(o.WorkflowId) {
		return true
	}

	return false
}

// SetWorkflowId gets a reference to the given string and assigns it to the WorkflowId field.
func (o *FleetAuditEvent) SetWorkflowId(v string) {
	o.WorkflowId = &v
}

func (o FleetAuditEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FleetAuditEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["environmentId"] = o.EnvironmentId
	if !IsNil(o.EventSource) {
		toSerialize["eventSource"] = o.EventSource
	}
	toSerialize["id"] = o.Id
	toSerialize["instanceId"] = o.InstanceId
	toSerialize["message"] = o.Message
	if !IsNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	if !IsNil(o.OrgName) {
		toSerialize["orgName"] = o.OrgName
	}
	toSerialize["planVersion"] = o.PlanVersion
	toSerialize["productTierId"] = o.ProductTierId
	toSerialize["resourceName"] = o.ResourceName
	toSerialize["serviceId"] = o.ServiceId
	toSerialize["serviceName"] = o.ServiceName
	toSerialize["servicePlanName"] = o.ServicePlanName
	toSerialize["time"] = o.Time
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.UserName) {
		toSerialize["userName"] = o.UserName
	}
	if !IsNil(o.WorkflowFailures) {
		toSerialize["workflowFailures"] = o.WorkflowFailures
	}
	if !IsNil(o.WorkflowId) {
		toSerialize["workflowId"] = o.WorkflowId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FleetAuditEvent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"environmentId",
		"id",
		"instanceId",
		"message",
		"planVersion",
		"productTierId",
		"resourceName",
		"serviceId",
		"serviceName",
		"servicePlanName",
		"time",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFleetAuditEvent := _FleetAuditEvent{}

	err = json.Unmarshal(data, &varFleetAuditEvent)

	if err != nil {
		return err
	}

	*o = FleetAuditEvent(varFleetAuditEvent)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "environmentId")
		delete(additionalProperties, "eventSource")
		delete(additionalProperties, "id")
		delete(additionalProperties, "instanceId")
		delete(additionalProperties, "message")
		delete(additionalProperties, "orgId")
		delete(additionalProperties, "orgName")
		delete(additionalProperties, "planVersion")
		delete(additionalProperties, "productTierId")
		delete(additionalProperties, "resourceName")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "serviceName")
		delete(additionalProperties, "servicePlanName")
		delete(additionalProperties, "time")
		delete(additionalProperties, "userId")
		delete(additionalProperties, "userName")
		delete(additionalProperties, "workflowFailures")
		delete(additionalProperties, "workflowId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFleetAuditEvent struct {
	value *FleetAuditEvent
	isSet bool
}

func (v NullableFleetAuditEvent) Get() *FleetAuditEvent {
	return v.value
}

func (v *NullableFleetAuditEvent) Set(val *FleetAuditEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetAuditEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetAuditEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetAuditEvent(val *FleetAuditEvent) *NullableFleetAuditEvent {
	return &NullableFleetAuditEvent{value: val, isSet: true}
}

func (v NullableFleetAuditEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetAuditEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


