/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListOrganizationsResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListOrganizationsResult{}

// ListOrganizationsResult struct for ListOrganizationsResult
type ListOrganizationsResult struct {
	// The service environment ID this workflow belongs to.
	EnvironmentId string `json:"environmentId"`
	// Token to use for the next request
	NextPageToken *string `json:"nextPageToken,omitempty"`
	// List of organizations.
	Organizations []Organization `json:"organizations"`
	// The service ID this workflow belongs to.
	ServiceId string `json:"serviceId"`
}

type _ListOrganizationsResult ListOrganizationsResult

// NewListOrganizationsResult instantiates a new ListOrganizationsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListOrganizationsResult(environmentId string, organizations []Organization, serviceId string) *ListOrganizationsResult {
	this := ListOrganizationsResult{}
	this.EnvironmentId = environmentId
	this.Organizations = organizations
	this.ServiceId = serviceId
	return &this
}

// NewListOrganizationsResultWithDefaults instantiates a new ListOrganizationsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListOrganizationsResultWithDefaults() *ListOrganizationsResult {
	this := ListOrganizationsResult{}
	return &this
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *ListOrganizationsResult) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *ListOrganizationsResult) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *ListOrganizationsResult) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ListOrganizationsResult) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrganizationsResult) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ListOrganizationsResult) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ListOrganizationsResult) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetOrganizations returns the Organizations field value
func (o *ListOrganizationsResult) GetOrganizations() []Organization {
	if o == nil {
		var ret []Organization
		return ret
	}

	return o.Organizations
}

// GetOrganizationsOk returns a tuple with the Organizations field value
// and a boolean to check if the value has been set.
func (o *ListOrganizationsResult) GetOrganizationsOk() ([]Organization, bool) {
	if o == nil {
		return nil, false
	}
	return o.Organizations, true
}

// SetOrganizations sets field value
func (o *ListOrganizationsResult) SetOrganizations(v []Organization) {
	o.Organizations = v
}

// GetServiceId returns the ServiceId field value
func (o *ListOrganizationsResult) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *ListOrganizationsResult) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *ListOrganizationsResult) SetServiceId(v string) {
	o.ServiceId = v
}

func (o ListOrganizationsResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListOrganizationsResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["environmentId"] = o.EnvironmentId
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	toSerialize["organizations"] = o.Organizations
	toSerialize["serviceId"] = o.ServiceId
	return toSerialize, nil
}

func (o *ListOrganizationsResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"environmentId",
		"organizations",
		"serviceId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListOrganizationsResult := _ListOrganizationsResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListOrganizationsResult)

	if err != nil {
		return err
	}

	*o = ListOrganizationsResult(varListOrganizationsResult)

	return err
}

type NullableListOrganizationsResult struct {
	value *ListOrganizationsResult
	isSet bool
}

func (v NullableListOrganizationsResult) Get() *ListOrganizationsResult {
	return v.value
}

func (v *NullableListOrganizationsResult) Set(val *ListOrganizationsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableListOrganizationsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableListOrganizationsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListOrganizationsResult(val *ListOrganizationsResult) *NullableListOrganizationsResult {
	return &NullableListOrganizationsResult{value: val, isSet: true}
}

func (v NullableListOrganizationsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListOrganizationsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


