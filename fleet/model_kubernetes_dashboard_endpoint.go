/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the KubernetesDashboardEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubernetesDashboardEndpoint{}

// KubernetesDashboardEndpoint struct for KubernetesDashboardEndpoint
type KubernetesDashboardEndpoint struct {
	// The dashboard endpoint
	DashboardEndpoint *string `json:"dashboardEndpoint,omitempty"`
	// The deployment cell ID
	DeploymentCellID *string `json:"deploymentCellID,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _KubernetesDashboardEndpoint KubernetesDashboardEndpoint

// NewKubernetesDashboardEndpoint instantiates a new KubernetesDashboardEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesDashboardEndpoint() *KubernetesDashboardEndpoint {
	this := KubernetesDashboardEndpoint{}
	var dashboardEndpoint string = ""
	this.DashboardEndpoint = &dashboardEndpoint
	var deploymentCellID string = ""
	this.DeploymentCellID = &deploymentCellID
	return &this
}

// NewKubernetesDashboardEndpointWithDefaults instantiates a new KubernetesDashboardEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesDashboardEndpointWithDefaults() *KubernetesDashboardEndpoint {
	this := KubernetesDashboardEndpoint{}
	var dashboardEndpoint string = ""
	this.DashboardEndpoint = &dashboardEndpoint
	var deploymentCellID string = ""
	this.DeploymentCellID = &deploymentCellID
	return &this
}

// GetDashboardEndpoint returns the DashboardEndpoint field value if set, zero value otherwise.
func (o *KubernetesDashboardEndpoint) GetDashboardEndpoint() string {
	if o == nil || IsNil(o.DashboardEndpoint) {
		var ret string
		return ret
	}
	return *o.DashboardEndpoint
}

// GetDashboardEndpointOk returns a tuple with the DashboardEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesDashboardEndpoint) GetDashboardEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.DashboardEndpoint) {
		return nil, false
	}
	return o.DashboardEndpoint, true
}

// HasDashboardEndpoint returns a boolean if a field has been set.
func (o *KubernetesDashboardEndpoint) HasDashboardEndpoint() bool {
	if o != nil && !IsNil(o.DashboardEndpoint) {
		return true
	}

	return false
}

// SetDashboardEndpoint gets a reference to the given string and assigns it to the DashboardEndpoint field.
func (o *KubernetesDashboardEndpoint) SetDashboardEndpoint(v string) {
	o.DashboardEndpoint = &v
}

// GetDeploymentCellID returns the DeploymentCellID field value if set, zero value otherwise.
func (o *KubernetesDashboardEndpoint) GetDeploymentCellID() string {
	if o == nil || IsNil(o.DeploymentCellID) {
		var ret string
		return ret
	}
	return *o.DeploymentCellID
}

// GetDeploymentCellIDOk returns a tuple with the DeploymentCellID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesDashboardEndpoint) GetDeploymentCellIDOk() (*string, bool) {
	if o == nil || IsNil(o.DeploymentCellID) {
		return nil, false
	}
	return o.DeploymentCellID, true
}

// HasDeploymentCellID returns a boolean if a field has been set.
func (o *KubernetesDashboardEndpoint) HasDeploymentCellID() bool {
	if o != nil && !IsNil(o.DeploymentCellID) {
		return true
	}

	return false
}

// SetDeploymentCellID gets a reference to the given string and assigns it to the DeploymentCellID field.
func (o *KubernetesDashboardEndpoint) SetDeploymentCellID(v string) {
	o.DeploymentCellID = &v
}

func (o KubernetesDashboardEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubernetesDashboardEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DashboardEndpoint) {
		toSerialize["dashboardEndpoint"] = o.DashboardEndpoint
	}
	if !IsNil(o.DeploymentCellID) {
		toSerialize["deploymentCellID"] = o.DeploymentCellID
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KubernetesDashboardEndpoint) UnmarshalJSON(data []byte) (err error) {
	varKubernetesDashboardEndpoint := _KubernetesDashboardEndpoint{}

	err = json.Unmarshal(data, &varKubernetesDashboardEndpoint)

	if err != nil {
		return err
	}

	*o = KubernetesDashboardEndpoint(varKubernetesDashboardEndpoint)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "dashboardEndpoint")
		delete(additionalProperties, "deploymentCellID")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKubernetesDashboardEndpoint struct {
	value *KubernetesDashboardEndpoint
	isSet bool
}

func (v NullableKubernetesDashboardEndpoint) Get() *KubernetesDashboardEndpoint {
	return v.value
}

func (v *NullableKubernetesDashboardEndpoint) Set(val *KubernetesDashboardEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesDashboardEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesDashboardEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesDashboardEndpoint(val *KubernetesDashboardEndpoint) *NullableKubernetesDashboardEndpoint {
	return &NullableKubernetesDashboardEndpoint{value: val, isSet: true}
}

func (v NullableKubernetesDashboardEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesDashboardEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


