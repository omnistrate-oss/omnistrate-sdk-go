/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the KubeConfigHostClusterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubeConfigHostClusterRequest{}

// KubeConfigHostClusterRequest struct for KubeConfigHostClusterRequest
type KubeConfigHostClusterRequest struct {
	// ID of a Host Cluster
	Id string `json:"id"`
	// Role of the service account to use in the kubeconfig
	Role *string `json:"role,omitempty"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _KubeConfigHostClusterRequest KubeConfigHostClusterRequest

// NewKubeConfigHostClusterRequest instantiates a new KubeConfigHostClusterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubeConfigHostClusterRequest(id string, token string) *KubeConfigHostClusterRequest {
	this := KubeConfigHostClusterRequest{}
	this.Id = id
	var role string = "cluster-reader"
	this.Role = &role
	this.Token = token
	return &this
}

// NewKubeConfigHostClusterRequestWithDefaults instantiates a new KubeConfigHostClusterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubeConfigHostClusterRequestWithDefaults() *KubeConfigHostClusterRequest {
	this := KubeConfigHostClusterRequest{}
	var role string = "cluster-reader"
	this.Role = &role
	return &this
}

// GetId returns the Id field value
func (o *KubeConfigHostClusterRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *KubeConfigHostClusterRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *KubeConfigHostClusterRequest) SetId(v string) {
	o.Id = v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *KubeConfigHostClusterRequest) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubeConfigHostClusterRequest) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *KubeConfigHostClusterRequest) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *KubeConfigHostClusterRequest) SetRole(v string) {
	o.Role = &v
}

// GetToken returns the Token field value
func (o *KubeConfigHostClusterRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *KubeConfigHostClusterRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *KubeConfigHostClusterRequest) SetToken(v string) {
	o.Token = v
}

func (o KubeConfigHostClusterRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubeConfigHostClusterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KubeConfigHostClusterRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubeConfigHostClusterRequest := _KubeConfigHostClusterRequest{}

	err = json.Unmarshal(data, &varKubeConfigHostClusterRequest)

	if err != nil {
		return err
	}

	*o = KubeConfigHostClusterRequest(varKubeConfigHostClusterRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "role")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKubeConfigHostClusterRequest struct {
	value *KubeConfigHostClusterRequest
	isSet bool
}

func (v NullableKubeConfigHostClusterRequest) Get() *KubeConfigHostClusterRequest {
	return v.value
}

func (v *NullableKubeConfigHostClusterRequest) Set(val *KubeConfigHostClusterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKubeConfigHostClusterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKubeConfigHostClusterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubeConfigHostClusterRequest(val *KubeConfigHostClusterRequest) *NullableKubeConfigHostClusterRequest {
	return &NullableKubeConfigHostClusterRequest{value: val, isSet: true}
}

func (v NullableKubeConfigHostClusterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubeConfigHostClusterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


