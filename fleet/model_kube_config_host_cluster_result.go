/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the KubeConfigHostClusterResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubeConfigHostClusterResult{}

// KubeConfigHostClusterResult struct for KubeConfigHostClusterResult
type KubeConfigHostClusterResult struct {
	// The API server endpoint of the host cluster
	ApiServerEndpoint string `json:"apiServerEndpoint"`
	// Base64 encoded CA data for the host cluster
	CaDataBase64 string `json:"caDataBase64"`
	// Base64 encoded client certificate data for the host cluster
	ClientCertificateDataBase64 string `json:"clientCertificateDataBase64"`
	// Base64 encoded client key data for the host cluster
	ClientKeyDataBase64 string `json:"clientKeyDataBase64"`
	// ID of a Host Cluster
	Id string `json:"id"`
	// Service account token for the host cluster
	ServiceAccountToken string `json:"serviceAccountToken"`
	// The user name to use in the kubeconfig
	UserName string `json:"userName"`
	AdditionalProperties map[string]interface{}
}

type _KubeConfigHostClusterResult KubeConfigHostClusterResult

// NewKubeConfigHostClusterResult instantiates a new KubeConfigHostClusterResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubeConfigHostClusterResult(apiServerEndpoint string, caDataBase64 string, clientCertificateDataBase64 string, clientKeyDataBase64 string, id string, serviceAccountToken string, userName string) *KubeConfigHostClusterResult {
	this := KubeConfigHostClusterResult{}
	this.ApiServerEndpoint = apiServerEndpoint
	this.CaDataBase64 = caDataBase64
	this.ClientCertificateDataBase64 = clientCertificateDataBase64
	this.ClientKeyDataBase64 = clientKeyDataBase64
	this.Id = id
	this.ServiceAccountToken = serviceAccountToken
	this.UserName = userName
	return &this
}

// NewKubeConfigHostClusterResultWithDefaults instantiates a new KubeConfigHostClusterResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubeConfigHostClusterResultWithDefaults() *KubeConfigHostClusterResult {
	this := KubeConfigHostClusterResult{}
	return &this
}

// GetApiServerEndpoint returns the ApiServerEndpoint field value
func (o *KubeConfigHostClusterResult) GetApiServerEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiServerEndpoint
}

// GetApiServerEndpointOk returns a tuple with the ApiServerEndpoint field value
// and a boolean to check if the value has been set.
func (o *KubeConfigHostClusterResult) GetApiServerEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiServerEndpoint, true
}

// SetApiServerEndpoint sets field value
func (o *KubeConfigHostClusterResult) SetApiServerEndpoint(v string) {
	o.ApiServerEndpoint = v
}

// GetCaDataBase64 returns the CaDataBase64 field value
func (o *KubeConfigHostClusterResult) GetCaDataBase64() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CaDataBase64
}

// GetCaDataBase64Ok returns a tuple with the CaDataBase64 field value
// and a boolean to check if the value has been set.
func (o *KubeConfigHostClusterResult) GetCaDataBase64Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CaDataBase64, true
}

// SetCaDataBase64 sets field value
func (o *KubeConfigHostClusterResult) SetCaDataBase64(v string) {
	o.CaDataBase64 = v
}

// GetClientCertificateDataBase64 returns the ClientCertificateDataBase64 field value
func (o *KubeConfigHostClusterResult) GetClientCertificateDataBase64() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientCertificateDataBase64
}

// GetClientCertificateDataBase64Ok returns a tuple with the ClientCertificateDataBase64 field value
// and a boolean to check if the value has been set.
func (o *KubeConfigHostClusterResult) GetClientCertificateDataBase64Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientCertificateDataBase64, true
}

// SetClientCertificateDataBase64 sets field value
func (o *KubeConfigHostClusterResult) SetClientCertificateDataBase64(v string) {
	o.ClientCertificateDataBase64 = v
}

// GetClientKeyDataBase64 returns the ClientKeyDataBase64 field value
func (o *KubeConfigHostClusterResult) GetClientKeyDataBase64() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientKeyDataBase64
}

// GetClientKeyDataBase64Ok returns a tuple with the ClientKeyDataBase64 field value
// and a boolean to check if the value has been set.
func (o *KubeConfigHostClusterResult) GetClientKeyDataBase64Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientKeyDataBase64, true
}

// SetClientKeyDataBase64 sets field value
func (o *KubeConfigHostClusterResult) SetClientKeyDataBase64(v string) {
	o.ClientKeyDataBase64 = v
}

// GetId returns the Id field value
func (o *KubeConfigHostClusterResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *KubeConfigHostClusterResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *KubeConfigHostClusterResult) SetId(v string) {
	o.Id = v
}

// GetServiceAccountToken returns the ServiceAccountToken field value
func (o *KubeConfigHostClusterResult) GetServiceAccountToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceAccountToken
}

// GetServiceAccountTokenOk returns a tuple with the ServiceAccountToken field value
// and a boolean to check if the value has been set.
func (o *KubeConfigHostClusterResult) GetServiceAccountTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceAccountToken, true
}

// SetServiceAccountToken sets field value
func (o *KubeConfigHostClusterResult) SetServiceAccountToken(v string) {
	o.ServiceAccountToken = v
}

// GetUserName returns the UserName field value
func (o *KubeConfigHostClusterResult) GetUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
func (o *KubeConfigHostClusterResult) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserName, true
}

// SetUserName sets field value
func (o *KubeConfigHostClusterResult) SetUserName(v string) {
	o.UserName = v
}

func (o KubeConfigHostClusterResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubeConfigHostClusterResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apiServerEndpoint"] = o.ApiServerEndpoint
	toSerialize["caDataBase64"] = o.CaDataBase64
	toSerialize["clientCertificateDataBase64"] = o.ClientCertificateDataBase64
	toSerialize["clientKeyDataBase64"] = o.ClientKeyDataBase64
	toSerialize["id"] = o.Id
	toSerialize["serviceAccountToken"] = o.ServiceAccountToken
	toSerialize["userName"] = o.UserName

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KubeConfigHostClusterResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"apiServerEndpoint",
		"caDataBase64",
		"clientCertificateDataBase64",
		"clientKeyDataBase64",
		"id",
		"serviceAccountToken",
		"userName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubeConfigHostClusterResult := _KubeConfigHostClusterResult{}

	err = json.Unmarshal(data, &varKubeConfigHostClusterResult)

	if err != nil {
		return err
	}

	*o = KubeConfigHostClusterResult(varKubeConfigHostClusterResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "apiServerEndpoint")
		delete(additionalProperties, "caDataBase64")
		delete(additionalProperties, "clientCertificateDataBase64")
		delete(additionalProperties, "clientKeyDataBase64")
		delete(additionalProperties, "id")
		delete(additionalProperties, "serviceAccountToken")
		delete(additionalProperties, "userName")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKubeConfigHostClusterResult struct {
	value *KubeConfigHostClusterResult
	isSet bool
}

func (v NullableKubeConfigHostClusterResult) Get() *KubeConfigHostClusterResult {
	return v.value
}

func (v *NullableKubeConfigHostClusterResult) Set(val *KubeConfigHostClusterResult) {
	v.value = val
	v.isSet = true
}

func (v NullableKubeConfigHostClusterResult) IsSet() bool {
	return v.isSet
}

func (v *NullableKubeConfigHostClusterResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubeConfigHostClusterResult(val *KubeConfigHostClusterResult) *NullableKubeConfigHostClusterResult {
	return &NullableKubeConfigHostClusterResult{value: val, isSet: true}
}

func (v NullableKubeConfigHostClusterResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubeConfigHostClusterResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


