/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the ListHostClustersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListHostClustersRequest{}

// ListHostClustersRequest struct for ListHostClustersRequest
type ListHostClustersRequest struct {
	// ID of an Account Config
	AccountConfigId *string `json:"accountConfigId,omitempty"`
	// Include provisioner clusters in the response
	IncludeProvisionerClusters *bool `json:"includeProvisionerClusters,omitempty"`
	// ID of a Region
	RegionId *string `json:"regionId,omitempty"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _ListHostClustersRequest ListHostClustersRequest

// NewListHostClustersRequest instantiates a new ListHostClustersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListHostClustersRequest(token string) *ListHostClustersRequest {
	this := ListHostClustersRequest{}
	this.Token = token
	return &this
}

// NewListHostClustersRequestWithDefaults instantiates a new ListHostClustersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListHostClustersRequestWithDefaults() *ListHostClustersRequest {
	this := ListHostClustersRequest{}
	return &this
}

// GetAccountConfigId returns the AccountConfigId field value if set, zero value otherwise.
func (o *ListHostClustersRequest) GetAccountConfigId() string {
	if o == nil || IsNil(o.AccountConfigId) {
		var ret string
		return ret
	}
	return *o.AccountConfigId
}

// GetAccountConfigIdOk returns a tuple with the AccountConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHostClustersRequest) GetAccountConfigIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountConfigId) {
		return nil, false
	}
	return o.AccountConfigId, true
}

// HasAccountConfigId returns a boolean if a field has been set.
func (o *ListHostClustersRequest) HasAccountConfigId() bool {
	if o != nil && !IsNil(o.AccountConfigId) {
		return true
	}

	return false
}

// SetAccountConfigId gets a reference to the given string and assigns it to the AccountConfigId field.
func (o *ListHostClustersRequest) SetAccountConfigId(v string) {
	o.AccountConfigId = &v
}

// GetIncludeProvisionerClusters returns the IncludeProvisionerClusters field value if set, zero value otherwise.
func (o *ListHostClustersRequest) GetIncludeProvisionerClusters() bool {
	if o == nil || IsNil(o.IncludeProvisionerClusters) {
		var ret bool
		return ret
	}
	return *o.IncludeProvisionerClusters
}

// GetIncludeProvisionerClustersOk returns a tuple with the IncludeProvisionerClusters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHostClustersRequest) GetIncludeProvisionerClustersOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeProvisionerClusters) {
		return nil, false
	}
	return o.IncludeProvisionerClusters, true
}

// HasIncludeProvisionerClusters returns a boolean if a field has been set.
func (o *ListHostClustersRequest) HasIncludeProvisionerClusters() bool {
	if o != nil && !IsNil(o.IncludeProvisionerClusters) {
		return true
	}

	return false
}

// SetIncludeProvisionerClusters gets a reference to the given bool and assigns it to the IncludeProvisionerClusters field.
func (o *ListHostClustersRequest) SetIncludeProvisionerClusters(v bool) {
	o.IncludeProvisionerClusters = &v
}

// GetRegionId returns the RegionId field value if set, zero value otherwise.
func (o *ListHostClustersRequest) GetRegionId() string {
	if o == nil || IsNil(o.RegionId) {
		var ret string
		return ret
	}
	return *o.RegionId
}

// GetRegionIdOk returns a tuple with the RegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListHostClustersRequest) GetRegionIdOk() (*string, bool) {
	if o == nil || IsNil(o.RegionId) {
		return nil, false
	}
	return o.RegionId, true
}

// HasRegionId returns a boolean if a field has been set.
func (o *ListHostClustersRequest) HasRegionId() bool {
	if o != nil && !IsNil(o.RegionId) {
		return true
	}

	return false
}

// SetRegionId gets a reference to the given string and assigns it to the RegionId field.
func (o *ListHostClustersRequest) SetRegionId(v string) {
	o.RegionId = &v
}

// GetToken returns the Token field value
func (o *ListHostClustersRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *ListHostClustersRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *ListHostClustersRequest) SetToken(v string) {
	o.Token = v
}

func (o ListHostClustersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListHostClustersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountConfigId) {
		toSerialize["accountConfigId"] = o.AccountConfigId
	}
	if !IsNil(o.IncludeProvisionerClusters) {
		toSerialize["includeProvisionerClusters"] = o.IncludeProvisionerClusters
	}
	if !IsNil(o.RegionId) {
		toSerialize["regionId"] = o.RegionId
	}
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListHostClustersRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListHostClustersRequest := _ListHostClustersRequest{}

	err = json.Unmarshal(data, &varListHostClustersRequest)

	if err != nil {
		return err
	}

	*o = ListHostClustersRequest(varListHostClustersRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountConfigId")
		delete(additionalProperties, "includeProvisionerClusters")
		delete(additionalProperties, "regionId")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListHostClustersRequest struct {
	value *ListHostClustersRequest
	isSet bool
}

func (v NullableListHostClustersRequest) Get() *ListHostClustersRequest {
	return v.value
}

func (v *NullableListHostClustersRequest) Set(val *ListHostClustersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListHostClustersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListHostClustersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListHostClustersRequest(val *ListHostClustersRequest) *NullableListHostClustersRequest {
	return &NullableListHostClustersRequest{value: val, isSet: true}
}

func (v NullableListHostClustersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListHostClustersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


