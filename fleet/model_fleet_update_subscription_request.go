/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the FleetUpdateSubscriptionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FleetUpdateSubscriptionRequest{}

// FleetUpdateSubscriptionRequest struct for FleetUpdateSubscriptionRequest
type FleetUpdateSubscriptionRequest struct {
	// Whether to allow creating instances when payment is not configured.
	AllowCreatesWhenPaymentNotConfigured *bool `json:"allowCreatesWhenPaymentNotConfigured,omitempty"`
	// The billing provider type
	BillingProvider *string `json:"billingProvider,omitempty"`
	// Whether to use a custom price for this subscription
	CustomPrice *bool `json:"customPrice,omitempty"`
	// If custom price is true, provide the price per unit for the subscription here.
	CustomPricePerUnit map[string]interface{} `json:"customPricePerUnit,omitempty"`
	// ID of a Service Environment
	EnvironmentId string `json:"environmentId"`
	// The external payer ID to record which customer should pay for this subscription.
	ExternalPayerId *string `json:"externalPayerId,omitempty"`
	// ID of a Subscription
	Id string `json:"id"`
	// The maximum number of instances that can be created for this subscription. Use -1 to unset this restriction.
	MaxNumberOfInstances *int64 `json:"maxNumberOfInstances,omitempty"`
	// The effective date of the price, truncated to the first day of the month. Only the current or future months may be specified.
	PriceEffectiveDate *string `json:"priceEffectiveDate,omitempty"`
	// ID of a Service
	ServiceId string `json:"serviceId"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _FleetUpdateSubscriptionRequest FleetUpdateSubscriptionRequest

// NewFleetUpdateSubscriptionRequest instantiates a new FleetUpdateSubscriptionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetUpdateSubscriptionRequest(environmentId string, id string, serviceId string, token string) *FleetUpdateSubscriptionRequest {
	this := FleetUpdateSubscriptionRequest{}
	this.EnvironmentId = environmentId
	this.Id = id
	this.ServiceId = serviceId
	this.Token = token
	return &this
}

// NewFleetUpdateSubscriptionRequestWithDefaults instantiates a new FleetUpdateSubscriptionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetUpdateSubscriptionRequestWithDefaults() *FleetUpdateSubscriptionRequest {
	this := FleetUpdateSubscriptionRequest{}
	return &this
}

// GetAllowCreatesWhenPaymentNotConfigured returns the AllowCreatesWhenPaymentNotConfigured field value if set, zero value otherwise.
func (o *FleetUpdateSubscriptionRequest) GetAllowCreatesWhenPaymentNotConfigured() bool {
	if o == nil || IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		var ret bool
		return ret
	}
	return *o.AllowCreatesWhenPaymentNotConfigured
}

// GetAllowCreatesWhenPaymentNotConfiguredOk returns a tuple with the AllowCreatesWhenPaymentNotConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest) GetAllowCreatesWhenPaymentNotConfiguredOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		return nil, false
	}
	return o.AllowCreatesWhenPaymentNotConfigured, true
}

// HasAllowCreatesWhenPaymentNotConfigured returns a boolean if a field has been set.
func (o *FleetUpdateSubscriptionRequest) HasAllowCreatesWhenPaymentNotConfigured() bool {
	if o != nil && !IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		return true
	}

	return false
}

// SetAllowCreatesWhenPaymentNotConfigured gets a reference to the given bool and assigns it to the AllowCreatesWhenPaymentNotConfigured field.
func (o *FleetUpdateSubscriptionRequest) SetAllowCreatesWhenPaymentNotConfigured(v bool) {
	o.AllowCreatesWhenPaymentNotConfigured = &v
}

// GetBillingProvider returns the BillingProvider field value if set, zero value otherwise.
func (o *FleetUpdateSubscriptionRequest) GetBillingProvider() string {
	if o == nil || IsNil(o.BillingProvider) {
		var ret string
		return ret
	}
	return *o.BillingProvider
}

// GetBillingProviderOk returns a tuple with the BillingProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest) GetBillingProviderOk() (*string, bool) {
	if o == nil || IsNil(o.BillingProvider) {
		return nil, false
	}
	return o.BillingProvider, true
}

// HasBillingProvider returns a boolean if a field has been set.
func (o *FleetUpdateSubscriptionRequest) HasBillingProvider() bool {
	if o != nil && !IsNil(o.BillingProvider) {
		return true
	}

	return false
}

// SetBillingProvider gets a reference to the given string and assigns it to the BillingProvider field.
func (o *FleetUpdateSubscriptionRequest) SetBillingProvider(v string) {
	o.BillingProvider = &v
}

// GetCustomPrice returns the CustomPrice field value if set, zero value otherwise.
func (o *FleetUpdateSubscriptionRequest) GetCustomPrice() bool {
	if o == nil || IsNil(o.CustomPrice) {
		var ret bool
		return ret
	}
	return *o.CustomPrice
}

// GetCustomPriceOk returns a tuple with the CustomPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest) GetCustomPriceOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomPrice) {
		return nil, false
	}
	return o.CustomPrice, true
}

// HasCustomPrice returns a boolean if a field has been set.
func (o *FleetUpdateSubscriptionRequest) HasCustomPrice() bool {
	if o != nil && !IsNil(o.CustomPrice) {
		return true
	}

	return false
}

// SetCustomPrice gets a reference to the given bool and assigns it to the CustomPrice field.
func (o *FleetUpdateSubscriptionRequest) SetCustomPrice(v bool) {
	o.CustomPrice = &v
}

// GetCustomPricePerUnit returns the CustomPricePerUnit field value if set, zero value otherwise.
func (o *FleetUpdateSubscriptionRequest) GetCustomPricePerUnit() map[string]interface{} {
	if o == nil || IsNil(o.CustomPricePerUnit) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomPricePerUnit
}

// GetCustomPricePerUnitOk returns a tuple with the CustomPricePerUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest) GetCustomPricePerUnitOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomPricePerUnit) {
		return map[string]interface{}{}, false
	}
	return o.CustomPricePerUnit, true
}

// HasCustomPricePerUnit returns a boolean if a field has been set.
func (o *FleetUpdateSubscriptionRequest) HasCustomPricePerUnit() bool {
	if o != nil && !IsNil(o.CustomPricePerUnit) {
		return true
	}

	return false
}

// SetCustomPricePerUnit gets a reference to the given map[string]interface{} and assigns it to the CustomPricePerUnit field.
func (o *FleetUpdateSubscriptionRequest) SetCustomPricePerUnit(v map[string]interface{}) {
	o.CustomPricePerUnit = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *FleetUpdateSubscriptionRequest) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *FleetUpdateSubscriptionRequest) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetExternalPayerId returns the ExternalPayerId field value if set, zero value otherwise.
func (o *FleetUpdateSubscriptionRequest) GetExternalPayerId() string {
	if o == nil || IsNil(o.ExternalPayerId) {
		var ret string
		return ret
	}
	return *o.ExternalPayerId
}

// GetExternalPayerIdOk returns a tuple with the ExternalPayerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest) GetExternalPayerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalPayerId) {
		return nil, false
	}
	return o.ExternalPayerId, true
}

// HasExternalPayerId returns a boolean if a field has been set.
func (o *FleetUpdateSubscriptionRequest) HasExternalPayerId() bool {
	if o != nil && !IsNil(o.ExternalPayerId) {
		return true
	}

	return false
}

// SetExternalPayerId gets a reference to the given string and assigns it to the ExternalPayerId field.
func (o *FleetUpdateSubscriptionRequest) SetExternalPayerId(v string) {
	o.ExternalPayerId = &v
}

// GetId returns the Id field value
func (o *FleetUpdateSubscriptionRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FleetUpdateSubscriptionRequest) SetId(v string) {
	o.Id = v
}

// GetMaxNumberOfInstances returns the MaxNumberOfInstances field value if set, zero value otherwise.
func (o *FleetUpdateSubscriptionRequest) GetMaxNumberOfInstances() int64 {
	if o == nil || IsNil(o.MaxNumberOfInstances) {
		var ret int64
		return ret
	}
	return *o.MaxNumberOfInstances
}

// GetMaxNumberOfInstancesOk returns a tuple with the MaxNumberOfInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest) GetMaxNumberOfInstancesOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxNumberOfInstances) {
		return nil, false
	}
	return o.MaxNumberOfInstances, true
}

// HasMaxNumberOfInstances returns a boolean if a field has been set.
func (o *FleetUpdateSubscriptionRequest) HasMaxNumberOfInstances() bool {
	if o != nil && !IsNil(o.MaxNumberOfInstances) {
		return true
	}

	return false
}

// SetMaxNumberOfInstances gets a reference to the given int64 and assigns it to the MaxNumberOfInstances field.
func (o *FleetUpdateSubscriptionRequest) SetMaxNumberOfInstances(v int64) {
	o.MaxNumberOfInstances = &v
}

// GetPriceEffectiveDate returns the PriceEffectiveDate field value if set, zero value otherwise.
func (o *FleetUpdateSubscriptionRequest) GetPriceEffectiveDate() string {
	if o == nil || IsNil(o.PriceEffectiveDate) {
		var ret string
		return ret
	}
	return *o.PriceEffectiveDate
}

// GetPriceEffectiveDateOk returns a tuple with the PriceEffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest) GetPriceEffectiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.PriceEffectiveDate) {
		return nil, false
	}
	return o.PriceEffectiveDate, true
}

// HasPriceEffectiveDate returns a boolean if a field has been set.
func (o *FleetUpdateSubscriptionRequest) HasPriceEffectiveDate() bool {
	if o != nil && !IsNil(o.PriceEffectiveDate) {
		return true
	}

	return false
}

// SetPriceEffectiveDate gets a reference to the given string and assigns it to the PriceEffectiveDate field.
func (o *FleetUpdateSubscriptionRequest) SetPriceEffectiveDate(v string) {
	o.PriceEffectiveDate = &v
}

// GetServiceId returns the ServiceId field value
func (o *FleetUpdateSubscriptionRequest) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *FleetUpdateSubscriptionRequest) SetServiceId(v string) {
	o.ServiceId = v
}

// GetToken returns the Token field value
func (o *FleetUpdateSubscriptionRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *FleetUpdateSubscriptionRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *FleetUpdateSubscriptionRequest) SetToken(v string) {
	o.Token = v
}

func (o FleetUpdateSubscriptionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FleetUpdateSubscriptionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		toSerialize["allowCreatesWhenPaymentNotConfigured"] = o.AllowCreatesWhenPaymentNotConfigured
	}
	if !IsNil(o.BillingProvider) {
		toSerialize["billingProvider"] = o.BillingProvider
	}
	if !IsNil(o.CustomPrice) {
		toSerialize["customPrice"] = o.CustomPrice
	}
	if !IsNil(o.CustomPricePerUnit) {
		toSerialize["customPricePerUnit"] = o.CustomPricePerUnit
	}
	toSerialize["environmentId"] = o.EnvironmentId
	if !IsNil(o.ExternalPayerId) {
		toSerialize["externalPayerId"] = o.ExternalPayerId
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.MaxNumberOfInstances) {
		toSerialize["maxNumberOfInstances"] = o.MaxNumberOfInstances
	}
	if !IsNil(o.PriceEffectiveDate) {
		toSerialize["priceEffectiveDate"] = o.PriceEffectiveDate
	}
	toSerialize["serviceId"] = o.ServiceId
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FleetUpdateSubscriptionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"environmentId",
		"id",
		"serviceId",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFleetUpdateSubscriptionRequest := _FleetUpdateSubscriptionRequest{}

	err = json.Unmarshal(data, &varFleetUpdateSubscriptionRequest)

	if err != nil {
		return err
	}

	*o = FleetUpdateSubscriptionRequest(varFleetUpdateSubscriptionRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "allowCreatesWhenPaymentNotConfigured")
		delete(additionalProperties, "billingProvider")
		delete(additionalProperties, "customPrice")
		delete(additionalProperties, "customPricePerUnit")
		delete(additionalProperties, "environmentId")
		delete(additionalProperties, "externalPayerId")
		delete(additionalProperties, "id")
		delete(additionalProperties, "maxNumberOfInstances")
		delete(additionalProperties, "priceEffectiveDate")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFleetUpdateSubscriptionRequest struct {
	value *FleetUpdateSubscriptionRequest
	isSet bool
}

func (v NullableFleetUpdateSubscriptionRequest) Get() *FleetUpdateSubscriptionRequest {
	return v.value
}

func (v *NullableFleetUpdateSubscriptionRequest) Set(val *FleetUpdateSubscriptionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetUpdateSubscriptionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetUpdateSubscriptionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetUpdateSubscriptionRequest(val *FleetUpdateSubscriptionRequest) *NullableFleetUpdateSubscriptionRequest {
	return &NullableFleetUpdateSubscriptionRequest{value: val, isSet: true}
}

func (v NullableFleetUpdateSubscriptionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetUpdateSubscriptionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


