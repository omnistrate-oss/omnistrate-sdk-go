/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the ListFleetResourceInstancesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListFleetResourceInstancesRequest{}

// ListFleetResourceInstancesRequest struct for ListFleetResourceInstancesRequest
type ListFleetResourceInstancesRequest struct {
	// ID of a Product Tier
	ProductTierId *string `json:"ProductTierId,omitempty"`
	// The product tier version of the infra config to describe. If not specified, the latest version is described.
	ProductTierVersion *string `json:"ProductTierVersion,omitempty"`
	// ID of a Subscription
	SubscriptionId *string `json:"SubscriptionId,omitempty"`
	// ID of a Service Environment
	EnvironmentId string `json:"environmentId"`
	// ID of a Service
	ServiceId string `json:"serviceId"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _ListFleetResourceInstancesRequest ListFleetResourceInstancesRequest

// NewListFleetResourceInstancesRequest instantiates a new ListFleetResourceInstancesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListFleetResourceInstancesRequest(environmentId string, serviceId string, token string) *ListFleetResourceInstancesRequest {
	this := ListFleetResourceInstancesRequest{}
	this.EnvironmentId = environmentId
	this.ServiceId = serviceId
	this.Token = token
	return &this
}

// NewListFleetResourceInstancesRequestWithDefaults instantiates a new ListFleetResourceInstancesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListFleetResourceInstancesRequestWithDefaults() *ListFleetResourceInstancesRequest {
	this := ListFleetResourceInstancesRequest{}
	return &this
}

// GetProductTierId returns the ProductTierId field value if set, zero value otherwise.
func (o *ListFleetResourceInstancesRequest) GetProductTierId() string {
	if o == nil || IsNil(o.ProductTierId) {
		var ret string
		return ret
	}
	return *o.ProductTierId
}

// GetProductTierIdOk returns a tuple with the ProductTierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListFleetResourceInstancesRequest) GetProductTierIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTierId) {
		return nil, false
	}
	return o.ProductTierId, true
}

// HasProductTierId returns a boolean if a field has been set.
func (o *ListFleetResourceInstancesRequest) HasProductTierId() bool {
	if o != nil && !IsNil(o.ProductTierId) {
		return true
	}

	return false
}

// SetProductTierId gets a reference to the given string and assigns it to the ProductTierId field.
func (o *ListFleetResourceInstancesRequest) SetProductTierId(v string) {
	o.ProductTierId = &v
}

// GetProductTierVersion returns the ProductTierVersion field value if set, zero value otherwise.
func (o *ListFleetResourceInstancesRequest) GetProductTierVersion() string {
	if o == nil || IsNil(o.ProductTierVersion) {
		var ret string
		return ret
	}
	return *o.ProductTierVersion
}

// GetProductTierVersionOk returns a tuple with the ProductTierVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListFleetResourceInstancesRequest) GetProductTierVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTierVersion) {
		return nil, false
	}
	return o.ProductTierVersion, true
}

// HasProductTierVersion returns a boolean if a field has been set.
func (o *ListFleetResourceInstancesRequest) HasProductTierVersion() bool {
	if o != nil && !IsNil(o.ProductTierVersion) {
		return true
	}

	return false
}

// SetProductTierVersion gets a reference to the given string and assigns it to the ProductTierVersion field.
func (o *ListFleetResourceInstancesRequest) SetProductTierVersion(v string) {
	o.ProductTierVersion = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *ListFleetResourceInstancesRequest) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListFleetResourceInstancesRequest) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *ListFleetResourceInstancesRequest) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *ListFleetResourceInstancesRequest) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *ListFleetResourceInstancesRequest) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *ListFleetResourceInstancesRequest) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *ListFleetResourceInstancesRequest) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetServiceId returns the ServiceId field value
func (o *ListFleetResourceInstancesRequest) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *ListFleetResourceInstancesRequest) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *ListFleetResourceInstancesRequest) SetServiceId(v string) {
	o.ServiceId = v
}

// GetToken returns the Token field value
func (o *ListFleetResourceInstancesRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *ListFleetResourceInstancesRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *ListFleetResourceInstancesRequest) SetToken(v string) {
	o.Token = v
}

func (o ListFleetResourceInstancesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListFleetResourceInstancesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductTierId) {
		toSerialize["ProductTierId"] = o.ProductTierId
	}
	if !IsNil(o.ProductTierVersion) {
		toSerialize["ProductTierVersion"] = o.ProductTierVersion
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["SubscriptionId"] = o.SubscriptionId
	}
	toSerialize["environmentId"] = o.EnvironmentId
	toSerialize["serviceId"] = o.ServiceId
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListFleetResourceInstancesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"environmentId",
		"serviceId",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListFleetResourceInstancesRequest := _ListFleetResourceInstancesRequest{}

	err = json.Unmarshal(data, &varListFleetResourceInstancesRequest)

	if err != nil {
		return err
	}

	*o = ListFleetResourceInstancesRequest(varListFleetResourceInstancesRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ProductTierId")
		delete(additionalProperties, "ProductTierVersion")
		delete(additionalProperties, "SubscriptionId")
		delete(additionalProperties, "environmentId")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListFleetResourceInstancesRequest struct {
	value *ListFleetResourceInstancesRequest
	isSet bool
}

func (v NullableListFleetResourceInstancesRequest) Get() *ListFleetResourceInstancesRequest {
	return v.value
}

func (v *NullableListFleetResourceInstancesRequest) Set(val *ListFleetResourceInstancesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListFleetResourceInstancesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListFleetResourceInstancesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListFleetResourceInstancesRequest(val *ListFleetResourceInstancesRequest) *NullableListFleetResourceInstancesRequest {
	return &NullableListFleetResourceInstancesRequest{value: val, isSet: true}
}

func (v NullableListFleetResourceInstancesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListFleetResourceInstancesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


