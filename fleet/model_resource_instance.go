/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ResourceInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceInstance{}

// ResourceInstance struct for ResourceInstance
type ResourceInstance struct {
	// The AWS account ID
	AwsAccountID *string `json:"awsAccountID,omitempty"`
	// The cloud provider the workflow executed on.
	CloudProvider string `json:"cloudProvider"`
	ConsumptionResourceInstanceResult DescribeResourceInstanceResult `json:"consumptionResourceInstanceResult"`
	// Whether the subscription is the default subscription
	DefaultSubscription bool `json:"defaultSubscription"`
	// The Deployment Cell ID
	DeploymentCellID *string `json:"deploymentCellID,omitempty"`
	// The service environment ID this workflow belongs to.
	EnvironmentId string `json:"environmentId"`
	// The GCP project ID
	GcpProjectID *string `json:"gcpProjectID,omitempty"`
	// Custom input parameters
	InputParams interface{} `json:"input_params"`
	// The debug commands to access the instance
	InstanceDebugCommands []string `json:"instanceDebugCommands"`
	// List of individual integrations and their statuses for the instance
	IntegrationsStatus []IntegrationStatus `json:"integrationsStatus"`
	// The managed resource type of instance
	ManagedResourceType *string `json:"managedResourceType,omitempty"`
	// The organization ID of the resource instance.
	OrganizationId string `json:"organizationId"`
	// The organization name of the resource instance.
	OrganizationName string `json:"organizationName"`
	// The ports registration status of ports based proxy instance
	PortsRegistrationStatus *map[string][]int64 `json:"portsRegistrationStatus,omitempty"`
	// The product tier ID
	ProductTierId string `json:"productTierId"`
	// The product tier name
	ProductTierName string `json:"productTierName"`
	// The product tier type
	ProductTierType string `json:"productTierType"`
	// The proxy type of instance
	ProxyType *string `json:"proxyType,omitempty"`
	// Associated internal/external resources deployed for the instance, the corresponding versions deployed.
	ResourceVersionSummaries []ResourceVersionSummary `json:"resourceVersionSummaries"`
	// The service environment name
	ServiceEnvName string `json:"serviceEnvName"`
	// The service ID this workflow belongs to.
	ServiceId string `json:"serviceId"`
	// The logo for the service
	ServiceLogoURL *string `json:"serviceLogoURL,omitempty"`
	// The service model ID
	ServiceModelId string `json:"serviceModelId"`
	// The service model name
	ServiceModelName string `json:"serviceModelName"`
	// The service model type
	ServiceModelType string `json:"serviceModelType"`
	// The service name
	ServiceName string `json:"serviceName"`
	// The subscription ID
	SubscriptionId string `json:"subscriptionId"`
	// The subscription owner name
	SubscriptionOwnerName string `json:"subscriptionOwnerName"`
	// The tier version of the resource instance.
	TierVersion string `json:"tierVersion"`
	// The timestamp when the version set was released.
	TierVersionReleasedAt string `json:"tierVersionReleasedAt"`
	// The ID of the user who released the version set.
	TierVersionReleasedByUserId string `json:"tierVersionReleasedByUserId"`
	// The name of the user who released the version set.
	TierVersionReleasedByUserName string `json:"tierVersionReleasedByUserName"`
	// The tier version set status.
	TierVersionStatus string `json:"tierVersionStatus"`
}

type _ResourceInstance ResourceInstance

// NewResourceInstance instantiates a new ResourceInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceInstance(cloudProvider string, consumptionResourceInstanceResult DescribeResourceInstanceResult, defaultSubscription bool, environmentId string, inputParams interface{}, instanceDebugCommands []string, integrationsStatus []IntegrationStatus, organizationId string, organizationName string, productTierId string, productTierName string, productTierType string, resourceVersionSummaries []ResourceVersionSummary, serviceEnvName string, serviceId string, serviceModelId string, serviceModelName string, serviceModelType string, serviceName string, subscriptionId string, subscriptionOwnerName string, tierVersion string, tierVersionReleasedAt string, tierVersionReleasedByUserId string, tierVersionReleasedByUserName string, tierVersionStatus string) *ResourceInstance {
	this := ResourceInstance{}
	this.CloudProvider = cloudProvider
	this.ConsumptionResourceInstanceResult = consumptionResourceInstanceResult
	this.DefaultSubscription = defaultSubscription
	this.EnvironmentId = environmentId
	this.InputParams = inputParams
	this.InstanceDebugCommands = instanceDebugCommands
	this.IntegrationsStatus = integrationsStatus
	this.OrganizationId = organizationId
	this.OrganizationName = organizationName
	this.ProductTierId = productTierId
	this.ProductTierName = productTierName
	this.ProductTierType = productTierType
	this.ResourceVersionSummaries = resourceVersionSummaries
	this.ServiceEnvName = serviceEnvName
	this.ServiceId = serviceId
	this.ServiceModelId = serviceModelId
	this.ServiceModelName = serviceModelName
	this.ServiceModelType = serviceModelType
	this.ServiceName = serviceName
	this.SubscriptionId = subscriptionId
	this.SubscriptionOwnerName = subscriptionOwnerName
	this.TierVersion = tierVersion
	this.TierVersionReleasedAt = tierVersionReleasedAt
	this.TierVersionReleasedByUserId = tierVersionReleasedByUserId
	this.TierVersionReleasedByUserName = tierVersionReleasedByUserName
	this.TierVersionStatus = tierVersionStatus
	return &this
}

// NewResourceInstanceWithDefaults instantiates a new ResourceInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceInstanceWithDefaults() *ResourceInstance {
	this := ResourceInstance{}
	return &this
}

// GetAwsAccountID returns the AwsAccountID field value if set, zero value otherwise.
func (o *ResourceInstance) GetAwsAccountID() string {
	if o == nil || IsNil(o.AwsAccountID) {
		var ret string
		return ret
	}
	return *o.AwsAccountID
}

// GetAwsAccountIDOk returns a tuple with the AwsAccountID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetAwsAccountIDOk() (*string, bool) {
	if o == nil || IsNil(o.AwsAccountID) {
		return nil, false
	}
	return o.AwsAccountID, true
}

// HasAwsAccountID returns a boolean if a field has been set.
func (o *ResourceInstance) HasAwsAccountID() bool {
	if o != nil && !IsNil(o.AwsAccountID) {
		return true
	}

	return false
}

// SetAwsAccountID gets a reference to the given string and assigns it to the AwsAccountID field.
func (o *ResourceInstance) SetAwsAccountID(v string) {
	o.AwsAccountID = &v
}

// GetCloudProvider returns the CloudProvider field value
func (o *ResourceInstance) GetCloudProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetCloudProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *ResourceInstance) SetCloudProvider(v string) {
	o.CloudProvider = v
}

// GetConsumptionResourceInstanceResult returns the ConsumptionResourceInstanceResult field value
func (o *ResourceInstance) GetConsumptionResourceInstanceResult() DescribeResourceInstanceResult {
	if o == nil {
		var ret DescribeResourceInstanceResult
		return ret
	}

	return o.ConsumptionResourceInstanceResult
}

// GetConsumptionResourceInstanceResultOk returns a tuple with the ConsumptionResourceInstanceResult field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetConsumptionResourceInstanceResultOk() (*DescribeResourceInstanceResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConsumptionResourceInstanceResult, true
}

// SetConsumptionResourceInstanceResult sets field value
func (o *ResourceInstance) SetConsumptionResourceInstanceResult(v DescribeResourceInstanceResult) {
	o.ConsumptionResourceInstanceResult = v
}

// GetDefaultSubscription returns the DefaultSubscription field value
func (o *ResourceInstance) GetDefaultSubscription() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DefaultSubscription
}

// GetDefaultSubscriptionOk returns a tuple with the DefaultSubscription field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetDefaultSubscriptionOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultSubscription, true
}

// SetDefaultSubscription sets field value
func (o *ResourceInstance) SetDefaultSubscription(v bool) {
	o.DefaultSubscription = v
}

// GetDeploymentCellID returns the DeploymentCellID field value if set, zero value otherwise.
func (o *ResourceInstance) GetDeploymentCellID() string {
	if o == nil || IsNil(o.DeploymentCellID) {
		var ret string
		return ret
	}
	return *o.DeploymentCellID
}

// GetDeploymentCellIDOk returns a tuple with the DeploymentCellID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetDeploymentCellIDOk() (*string, bool) {
	if o == nil || IsNil(o.DeploymentCellID) {
		return nil, false
	}
	return o.DeploymentCellID, true
}

// HasDeploymentCellID returns a boolean if a field has been set.
func (o *ResourceInstance) HasDeploymentCellID() bool {
	if o != nil && !IsNil(o.DeploymentCellID) {
		return true
	}

	return false
}

// SetDeploymentCellID gets a reference to the given string and assigns it to the DeploymentCellID field.
func (o *ResourceInstance) SetDeploymentCellID(v string) {
	o.DeploymentCellID = &v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *ResourceInstance) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *ResourceInstance) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetGcpProjectID returns the GcpProjectID field value if set, zero value otherwise.
func (o *ResourceInstance) GetGcpProjectID() string {
	if o == nil || IsNil(o.GcpProjectID) {
		var ret string
		return ret
	}
	return *o.GcpProjectID
}

// GetGcpProjectIDOk returns a tuple with the GcpProjectID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetGcpProjectIDOk() (*string, bool) {
	if o == nil || IsNil(o.GcpProjectID) {
		return nil, false
	}
	return o.GcpProjectID, true
}

// HasGcpProjectID returns a boolean if a field has been set.
func (o *ResourceInstance) HasGcpProjectID() bool {
	if o != nil && !IsNil(o.GcpProjectID) {
		return true
	}

	return false
}

// SetGcpProjectID gets a reference to the given string and assigns it to the GcpProjectID field.
func (o *ResourceInstance) SetGcpProjectID(v string) {
	o.GcpProjectID = &v
}

// GetInputParams returns the InputParams field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ResourceInstance) GetInputParams() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.InputParams
}

// GetInputParamsOk returns a tuple with the InputParams field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceInstance) GetInputParamsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.InputParams) {
		return nil, false
	}
	return &o.InputParams, true
}

// SetInputParams sets field value
func (o *ResourceInstance) SetInputParams(v interface{}) {
	o.InputParams = v
}

// GetInstanceDebugCommands returns the InstanceDebugCommands field value
func (o *ResourceInstance) GetInstanceDebugCommands() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.InstanceDebugCommands
}

// GetInstanceDebugCommandsOk returns a tuple with the InstanceDebugCommands field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetInstanceDebugCommandsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstanceDebugCommands, true
}

// SetInstanceDebugCommands sets field value
func (o *ResourceInstance) SetInstanceDebugCommands(v []string) {
	o.InstanceDebugCommands = v
}

// GetIntegrationsStatus returns the IntegrationsStatus field value
func (o *ResourceInstance) GetIntegrationsStatus() []IntegrationStatus {
	if o == nil {
		var ret []IntegrationStatus
		return ret
	}

	return o.IntegrationsStatus
}

// GetIntegrationsStatusOk returns a tuple with the IntegrationsStatus field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetIntegrationsStatusOk() ([]IntegrationStatus, bool) {
	if o == nil {
		return nil, false
	}
	return o.IntegrationsStatus, true
}

// SetIntegrationsStatus sets field value
func (o *ResourceInstance) SetIntegrationsStatus(v []IntegrationStatus) {
	o.IntegrationsStatus = v
}

// GetManagedResourceType returns the ManagedResourceType field value if set, zero value otherwise.
func (o *ResourceInstance) GetManagedResourceType() string {
	if o == nil || IsNil(o.ManagedResourceType) {
		var ret string
		return ret
	}
	return *o.ManagedResourceType
}

// GetManagedResourceTypeOk returns a tuple with the ManagedResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetManagedResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ManagedResourceType) {
		return nil, false
	}
	return o.ManagedResourceType, true
}

// HasManagedResourceType returns a boolean if a field has been set.
func (o *ResourceInstance) HasManagedResourceType() bool {
	if o != nil && !IsNil(o.ManagedResourceType) {
		return true
	}

	return false
}

// SetManagedResourceType gets a reference to the given string and assigns it to the ManagedResourceType field.
func (o *ResourceInstance) SetManagedResourceType(v string) {
	o.ManagedResourceType = &v
}

// GetOrganizationId returns the OrganizationId field value
func (o *ResourceInstance) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *ResourceInstance) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetOrganizationName returns the OrganizationName field value
func (o *ResourceInstance) GetOrganizationName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetOrganizationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationName, true
}

// SetOrganizationName sets field value
func (o *ResourceInstance) SetOrganizationName(v string) {
	o.OrganizationName = v
}

// GetPortsRegistrationStatus returns the PortsRegistrationStatus field value if set, zero value otherwise.
func (o *ResourceInstance) GetPortsRegistrationStatus() map[string][]int64 {
	if o == nil || IsNil(o.PortsRegistrationStatus) {
		var ret map[string][]int64
		return ret
	}
	return *o.PortsRegistrationStatus
}

// GetPortsRegistrationStatusOk returns a tuple with the PortsRegistrationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetPortsRegistrationStatusOk() (*map[string][]int64, bool) {
	if o == nil || IsNil(o.PortsRegistrationStatus) {
		return nil, false
	}
	return o.PortsRegistrationStatus, true
}

// HasPortsRegistrationStatus returns a boolean if a field has been set.
func (o *ResourceInstance) HasPortsRegistrationStatus() bool {
	if o != nil && !IsNil(o.PortsRegistrationStatus) {
		return true
	}

	return false
}

// SetPortsRegistrationStatus gets a reference to the given map[string][]int64 and assigns it to the PortsRegistrationStatus field.
func (o *ResourceInstance) SetPortsRegistrationStatus(v map[string][]int64) {
	o.PortsRegistrationStatus = &v
}

// GetProductTierId returns the ProductTierId field value
func (o *ResourceInstance) GetProductTierId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductTierId
}

// GetProductTierIdOk returns a tuple with the ProductTierId field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetProductTierIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductTierId, true
}

// SetProductTierId sets field value
func (o *ResourceInstance) SetProductTierId(v string) {
	o.ProductTierId = v
}

// GetProductTierName returns the ProductTierName field value
func (o *ResourceInstance) GetProductTierName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductTierName
}

// GetProductTierNameOk returns a tuple with the ProductTierName field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetProductTierNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductTierName, true
}

// SetProductTierName sets field value
func (o *ResourceInstance) SetProductTierName(v string) {
	o.ProductTierName = v
}

// GetProductTierType returns the ProductTierType field value
func (o *ResourceInstance) GetProductTierType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductTierType
}

// GetProductTierTypeOk returns a tuple with the ProductTierType field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetProductTierTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductTierType, true
}

// SetProductTierType sets field value
func (o *ResourceInstance) SetProductTierType(v string) {
	o.ProductTierType = v
}

// GetProxyType returns the ProxyType field value if set, zero value otherwise.
func (o *ResourceInstance) GetProxyType() string {
	if o == nil || IsNil(o.ProxyType) {
		var ret string
		return ret
	}
	return *o.ProxyType
}

// GetProxyTypeOk returns a tuple with the ProxyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetProxyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyType) {
		return nil, false
	}
	return o.ProxyType, true
}

// HasProxyType returns a boolean if a field has been set.
func (o *ResourceInstance) HasProxyType() bool {
	if o != nil && !IsNil(o.ProxyType) {
		return true
	}

	return false
}

// SetProxyType gets a reference to the given string and assigns it to the ProxyType field.
func (o *ResourceInstance) SetProxyType(v string) {
	o.ProxyType = &v
}

// GetResourceVersionSummaries returns the ResourceVersionSummaries field value
func (o *ResourceInstance) GetResourceVersionSummaries() []ResourceVersionSummary {
	if o == nil {
		var ret []ResourceVersionSummary
		return ret
	}

	return o.ResourceVersionSummaries
}

// GetResourceVersionSummariesOk returns a tuple with the ResourceVersionSummaries field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetResourceVersionSummariesOk() ([]ResourceVersionSummary, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceVersionSummaries, true
}

// SetResourceVersionSummaries sets field value
func (o *ResourceInstance) SetResourceVersionSummaries(v []ResourceVersionSummary) {
	o.ResourceVersionSummaries = v
}

// GetServiceEnvName returns the ServiceEnvName field value
func (o *ResourceInstance) GetServiceEnvName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceEnvName
}

// GetServiceEnvNameOk returns a tuple with the ServiceEnvName field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetServiceEnvNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceEnvName, true
}

// SetServiceEnvName sets field value
func (o *ResourceInstance) SetServiceEnvName(v string) {
	o.ServiceEnvName = v
}

// GetServiceId returns the ServiceId field value
func (o *ResourceInstance) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *ResourceInstance) SetServiceId(v string) {
	o.ServiceId = v
}

// GetServiceLogoURL returns the ServiceLogoURL field value if set, zero value otherwise.
func (o *ResourceInstance) GetServiceLogoURL() string {
	if o == nil || IsNil(o.ServiceLogoURL) {
		var ret string
		return ret
	}
	return *o.ServiceLogoURL
}

// GetServiceLogoURLOk returns a tuple with the ServiceLogoURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetServiceLogoURLOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceLogoURL) {
		return nil, false
	}
	return o.ServiceLogoURL, true
}

// HasServiceLogoURL returns a boolean if a field has been set.
func (o *ResourceInstance) HasServiceLogoURL() bool {
	if o != nil && !IsNil(o.ServiceLogoURL) {
		return true
	}

	return false
}

// SetServiceLogoURL gets a reference to the given string and assigns it to the ServiceLogoURL field.
func (o *ResourceInstance) SetServiceLogoURL(v string) {
	o.ServiceLogoURL = &v
}

// GetServiceModelId returns the ServiceModelId field value
func (o *ResourceInstance) GetServiceModelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceModelId
}

// GetServiceModelIdOk returns a tuple with the ServiceModelId field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetServiceModelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceModelId, true
}

// SetServiceModelId sets field value
func (o *ResourceInstance) SetServiceModelId(v string) {
	o.ServiceModelId = v
}

// GetServiceModelName returns the ServiceModelName field value
func (o *ResourceInstance) GetServiceModelName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceModelName
}

// GetServiceModelNameOk returns a tuple with the ServiceModelName field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetServiceModelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceModelName, true
}

// SetServiceModelName sets field value
func (o *ResourceInstance) SetServiceModelName(v string) {
	o.ServiceModelName = v
}

// GetServiceModelType returns the ServiceModelType field value
func (o *ResourceInstance) GetServiceModelType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceModelType
}

// GetServiceModelTypeOk returns a tuple with the ServiceModelType field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetServiceModelTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceModelType, true
}

// SetServiceModelType sets field value
func (o *ResourceInstance) SetServiceModelType(v string) {
	o.ServiceModelType = v
}

// GetServiceName returns the ServiceName field value
func (o *ResourceInstance) GetServiceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceName, true
}

// SetServiceName sets field value
func (o *ResourceInstance) SetServiceName(v string) {
	o.ServiceName = v
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *ResourceInstance) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *ResourceInstance) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

// GetSubscriptionOwnerName returns the SubscriptionOwnerName field value
func (o *ResourceInstance) GetSubscriptionOwnerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionOwnerName
}

// GetSubscriptionOwnerNameOk returns a tuple with the SubscriptionOwnerName field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetSubscriptionOwnerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionOwnerName, true
}

// SetSubscriptionOwnerName sets field value
func (o *ResourceInstance) SetSubscriptionOwnerName(v string) {
	o.SubscriptionOwnerName = v
}

// GetTierVersion returns the TierVersion field value
func (o *ResourceInstance) GetTierVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TierVersion
}

// GetTierVersionOk returns a tuple with the TierVersion field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetTierVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TierVersion, true
}

// SetTierVersion sets field value
func (o *ResourceInstance) SetTierVersion(v string) {
	o.TierVersion = v
}

// GetTierVersionReleasedAt returns the TierVersionReleasedAt field value
func (o *ResourceInstance) GetTierVersionReleasedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TierVersionReleasedAt
}

// GetTierVersionReleasedAtOk returns a tuple with the TierVersionReleasedAt field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetTierVersionReleasedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TierVersionReleasedAt, true
}

// SetTierVersionReleasedAt sets field value
func (o *ResourceInstance) SetTierVersionReleasedAt(v string) {
	o.TierVersionReleasedAt = v
}

// GetTierVersionReleasedByUserId returns the TierVersionReleasedByUserId field value
func (o *ResourceInstance) GetTierVersionReleasedByUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TierVersionReleasedByUserId
}

// GetTierVersionReleasedByUserIdOk returns a tuple with the TierVersionReleasedByUserId field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetTierVersionReleasedByUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TierVersionReleasedByUserId, true
}

// SetTierVersionReleasedByUserId sets field value
func (o *ResourceInstance) SetTierVersionReleasedByUserId(v string) {
	o.TierVersionReleasedByUserId = v
}

// GetTierVersionReleasedByUserName returns the TierVersionReleasedByUserName field value
func (o *ResourceInstance) GetTierVersionReleasedByUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TierVersionReleasedByUserName
}

// GetTierVersionReleasedByUserNameOk returns a tuple with the TierVersionReleasedByUserName field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetTierVersionReleasedByUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TierVersionReleasedByUserName, true
}

// SetTierVersionReleasedByUserName sets field value
func (o *ResourceInstance) SetTierVersionReleasedByUserName(v string) {
	o.TierVersionReleasedByUserName = v
}

// GetTierVersionStatus returns the TierVersionStatus field value
func (o *ResourceInstance) GetTierVersionStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TierVersionStatus
}

// GetTierVersionStatusOk returns a tuple with the TierVersionStatus field value
// and a boolean to check if the value has been set.
func (o *ResourceInstance) GetTierVersionStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TierVersionStatus, true
}

// SetTierVersionStatus sets field value
func (o *ResourceInstance) SetTierVersionStatus(v string) {
	o.TierVersionStatus = v
}

func (o ResourceInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AwsAccountID) {
		toSerialize["awsAccountID"] = o.AwsAccountID
	}
	toSerialize["cloudProvider"] = o.CloudProvider
	toSerialize["consumptionResourceInstanceResult"] = o.ConsumptionResourceInstanceResult
	toSerialize["defaultSubscription"] = o.DefaultSubscription
	if !IsNil(o.DeploymentCellID) {
		toSerialize["deploymentCellID"] = o.DeploymentCellID
	}
	toSerialize["environmentId"] = o.EnvironmentId
	if !IsNil(o.GcpProjectID) {
		toSerialize["gcpProjectID"] = o.GcpProjectID
	}
	if o.InputParams != nil {
		toSerialize["input_params"] = o.InputParams
	}
	toSerialize["instanceDebugCommands"] = o.InstanceDebugCommands
	toSerialize["integrationsStatus"] = o.IntegrationsStatus
	if !IsNil(o.ManagedResourceType) {
		toSerialize["managedResourceType"] = o.ManagedResourceType
	}
	toSerialize["organizationId"] = o.OrganizationId
	toSerialize["organizationName"] = o.OrganizationName
	if !IsNil(o.PortsRegistrationStatus) {
		toSerialize["portsRegistrationStatus"] = o.PortsRegistrationStatus
	}
	toSerialize["productTierId"] = o.ProductTierId
	toSerialize["productTierName"] = o.ProductTierName
	toSerialize["productTierType"] = o.ProductTierType
	if !IsNil(o.ProxyType) {
		toSerialize["proxyType"] = o.ProxyType
	}
	toSerialize["resourceVersionSummaries"] = o.ResourceVersionSummaries
	toSerialize["serviceEnvName"] = o.ServiceEnvName
	toSerialize["serviceId"] = o.ServiceId
	if !IsNil(o.ServiceLogoURL) {
		toSerialize["serviceLogoURL"] = o.ServiceLogoURL
	}
	toSerialize["serviceModelId"] = o.ServiceModelId
	toSerialize["serviceModelName"] = o.ServiceModelName
	toSerialize["serviceModelType"] = o.ServiceModelType
	toSerialize["serviceName"] = o.ServiceName
	toSerialize["subscriptionId"] = o.SubscriptionId
	toSerialize["subscriptionOwnerName"] = o.SubscriptionOwnerName
	toSerialize["tierVersion"] = o.TierVersion
	toSerialize["tierVersionReleasedAt"] = o.TierVersionReleasedAt
	toSerialize["tierVersionReleasedByUserId"] = o.TierVersionReleasedByUserId
	toSerialize["tierVersionReleasedByUserName"] = o.TierVersionReleasedByUserName
	toSerialize["tierVersionStatus"] = o.TierVersionStatus
	return toSerialize, nil
}

func (o *ResourceInstance) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloudProvider",
		"consumptionResourceInstanceResult",
		"defaultSubscription",
		"environmentId",
		"input_params",
		"instanceDebugCommands",
		"integrationsStatus",
		"organizationId",
		"organizationName",
		"productTierId",
		"productTierName",
		"productTierType",
		"resourceVersionSummaries",
		"serviceEnvName",
		"serviceId",
		"serviceModelId",
		"serviceModelName",
		"serviceModelType",
		"serviceName",
		"subscriptionId",
		"subscriptionOwnerName",
		"tierVersion",
		"tierVersionReleasedAt",
		"tierVersionReleasedByUserId",
		"tierVersionReleasedByUserName",
		"tierVersionStatus",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResourceInstance := _ResourceInstance{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResourceInstance)

	if err != nil {
		return err
	}

	*o = ResourceInstance(varResourceInstance)

	return err
}

type NullableResourceInstance struct {
	value *ResourceInstance
	isSet bool
}

func (v NullableResourceInstance) Get() *ResourceInstance {
	return v.value
}

func (v *NullableResourceInstance) Set(val *ResourceInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceInstance(val *ResourceInstance) *NullableResourceInstance {
	return &NullableResourceInstance{value: val, isSet: true}
}

func (v NullableResourceInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


