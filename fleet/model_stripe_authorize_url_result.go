/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the StripeAuthorizeURLResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StripeAuthorizeURLResult{}

// StripeAuthorizeURLResult struct for StripeAuthorizeURLResult
type StripeAuthorizeURLResult struct {
	// URL to authorize Stripe Connect
	AuthorizeURL         *string `json:"authorizeURL,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _StripeAuthorizeURLResult StripeAuthorizeURLResult

// NewStripeAuthorizeURLResult instantiates a new StripeAuthorizeURLResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStripeAuthorizeURLResult() *StripeAuthorizeURLResult {
	this := StripeAuthorizeURLResult{}
	return &this
}

// NewStripeAuthorizeURLResultWithDefaults instantiates a new StripeAuthorizeURLResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStripeAuthorizeURLResultWithDefaults() *StripeAuthorizeURLResult {
	this := StripeAuthorizeURLResult{}
	return &this
}

// GetAuthorizeURL returns the AuthorizeURL field value if set, zero value otherwise.
func (o *StripeAuthorizeURLResult) GetAuthorizeURL() string {
	if o == nil || IsNil(o.AuthorizeURL) {
		var ret string
		return ret
	}
	return *o.AuthorizeURL
}

// GetAuthorizeURLOk returns a tuple with the AuthorizeURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripeAuthorizeURLResult) GetAuthorizeURLOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizeURL) {
		return nil, false
	}
	return o.AuthorizeURL, true
}

// HasAuthorizeURL returns a boolean if a field has been set.
func (o *StripeAuthorizeURLResult) HasAuthorizeURL() bool {
	if o != nil && !IsNil(o.AuthorizeURL) {
		return true
	}

	return false
}

// SetAuthorizeURL gets a reference to the given string and assigns it to the AuthorizeURL field.
func (o *StripeAuthorizeURLResult) SetAuthorizeURL(v string) {
	o.AuthorizeURL = &v
}

func (o StripeAuthorizeURLResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StripeAuthorizeURLResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthorizeURL) {
		toSerialize["authorizeURL"] = o.AuthorizeURL
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *StripeAuthorizeURLResult) UnmarshalJSON(data []byte) (err error) {
	varStripeAuthorizeURLResult := _StripeAuthorizeURLResult{}

	err = json.Unmarshal(data, &varStripeAuthorizeURLResult)

	if err != nil {
		return err
	}

	*o = StripeAuthorizeURLResult(varStripeAuthorizeURLResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "authorizeURL")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStripeAuthorizeURLResult struct {
	value *StripeAuthorizeURLResult
	isSet bool
}

func (v NullableStripeAuthorizeURLResult) Get() *StripeAuthorizeURLResult {
	return v.value
}

func (v *NullableStripeAuthorizeURLResult) Set(val *StripeAuthorizeURLResult) {
	v.value = val
	v.isSet = true
}

func (v NullableStripeAuthorizeURLResult) IsSet() bool {
	return v.isSet
}

func (v *NullableStripeAuthorizeURLResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStripeAuthorizeURLResult(val *StripeAuthorizeURLResult) *NullableStripeAuthorizeURLResult {
	return &NullableStripeAuthorizeURLResult{value: val, isSet: true}
}

func (v NullableStripeAuthorizeURLResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStripeAuthorizeURLResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
