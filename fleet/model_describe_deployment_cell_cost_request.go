/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the DescribeDeploymentCellCostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribeDeploymentCellCostRequest{}

// DescribeDeploymentCellCostRequest struct for DescribeDeploymentCellCostRequest
type DescribeDeploymentCellCostRequest struct {
	// End time of the window in RFC 3339 format. If omitted, the filter is open-ended at the start.
	EndDate time.Time `json:"endDate"`
	// The type of service environment
	EnvironmentType string `json:"environmentType"`
	// The cloud provider IDs to exclude from the cost data
	ExcludeCloudProviderIDs *string `json:"excludeCloudProviderIDs,omitempty"`
	// The deployment cell IDs to exclude from the cost data
	ExcludeDeploymentCellIDs *string `json:"excludeDeploymentCellIDs,omitempty"`
	// The instance IDs to exclude from the cost data
	ExcludeInstanceIDs *string `json:"excludeInstanceIDs,omitempty"`
	// The region IDs to exclude from the cost data
	ExcludeRegionIDs *string `json:"excludeRegionIDs,omitempty"`
	// The frequency of the cost data
	Frequency string `json:"frequency"`
	// The cloud provider IDs to include in the cost data
	IncludeCloudProviderIDs *string `json:"includeCloudProviderIDs,omitempty"`
	// The deployment cell IDs to include in the cost data
	IncludeDeploymentCellIDs *string `json:"includeDeploymentCellIDs,omitempty"`
	// The instance IDs to include in the cost data
	IncludeInstanceIDs *string `json:"includeInstanceIDs,omitempty"`
	// The region IDs to include in the cost data
	IncludeRegionIDs *string `json:"includeRegionIDs,omitempty"`
	// Start time of the window in RFC 3339 format. If omitted, the filter is open-ended at the start.
	StartDate time.Time `json:"startDate"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	// The number of top instances to return
	TopNInstances *int64 `json:"topNInstances,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DescribeDeploymentCellCostRequest DescribeDeploymentCellCostRequest

// NewDescribeDeploymentCellCostRequest instantiates a new DescribeDeploymentCellCostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeDeploymentCellCostRequest(endDate time.Time, environmentType string, frequency string, startDate time.Time, token string) *DescribeDeploymentCellCostRequest {
	this := DescribeDeploymentCellCostRequest{}
	this.EndDate = endDate
	this.EnvironmentType = environmentType
	this.Frequency = frequency
	this.StartDate = startDate
	this.Token = token
	return &this
}

// NewDescribeDeploymentCellCostRequestWithDefaults instantiates a new DescribeDeploymentCellCostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeDeploymentCellCostRequestWithDefaults() *DescribeDeploymentCellCostRequest {
	this := DescribeDeploymentCellCostRequest{}
	return &this
}

// GetEndDate returns the EndDate field value
func (o *DescribeDeploymentCellCostRequest) GetEndDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *DescribeDeploymentCellCostRequest) GetEndDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *DescribeDeploymentCellCostRequest) SetEndDate(v time.Time) {
	o.EndDate = v
}

// GetEnvironmentType returns the EnvironmentType field value
func (o *DescribeDeploymentCellCostRequest) GetEnvironmentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentType
}

// GetEnvironmentTypeOk returns a tuple with the EnvironmentType field value
// and a boolean to check if the value has been set.
func (o *DescribeDeploymentCellCostRequest) GetEnvironmentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentType, true
}

// SetEnvironmentType sets field value
func (o *DescribeDeploymentCellCostRequest) SetEnvironmentType(v string) {
	o.EnvironmentType = v
}

// GetExcludeCloudProviderIDs returns the ExcludeCloudProviderIDs field value if set, zero value otherwise.
func (o *DescribeDeploymentCellCostRequest) GetExcludeCloudProviderIDs() string {
	if o == nil || IsNil(o.ExcludeCloudProviderIDs) {
		var ret string
		return ret
	}
	return *o.ExcludeCloudProviderIDs
}

// GetExcludeCloudProviderIDsOk returns a tuple with the ExcludeCloudProviderIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDeploymentCellCostRequest) GetExcludeCloudProviderIDsOk() (*string, bool) {
	if o == nil || IsNil(o.ExcludeCloudProviderIDs) {
		return nil, false
	}
	return o.ExcludeCloudProviderIDs, true
}

// HasExcludeCloudProviderIDs returns a boolean if a field has been set.
func (o *DescribeDeploymentCellCostRequest) HasExcludeCloudProviderIDs() bool {
	if o != nil && !IsNil(o.ExcludeCloudProviderIDs) {
		return true
	}

	return false
}

// SetExcludeCloudProviderIDs gets a reference to the given string and assigns it to the ExcludeCloudProviderIDs field.
func (o *DescribeDeploymentCellCostRequest) SetExcludeCloudProviderIDs(v string) {
	o.ExcludeCloudProviderIDs = &v
}

// GetExcludeDeploymentCellIDs returns the ExcludeDeploymentCellIDs field value if set, zero value otherwise.
func (o *DescribeDeploymentCellCostRequest) GetExcludeDeploymentCellIDs() string {
	if o == nil || IsNil(o.ExcludeDeploymentCellIDs) {
		var ret string
		return ret
	}
	return *o.ExcludeDeploymentCellIDs
}

// GetExcludeDeploymentCellIDsOk returns a tuple with the ExcludeDeploymentCellIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDeploymentCellCostRequest) GetExcludeDeploymentCellIDsOk() (*string, bool) {
	if o == nil || IsNil(o.ExcludeDeploymentCellIDs) {
		return nil, false
	}
	return o.ExcludeDeploymentCellIDs, true
}

// HasExcludeDeploymentCellIDs returns a boolean if a field has been set.
func (o *DescribeDeploymentCellCostRequest) HasExcludeDeploymentCellIDs() bool {
	if o != nil && !IsNil(o.ExcludeDeploymentCellIDs) {
		return true
	}

	return false
}

// SetExcludeDeploymentCellIDs gets a reference to the given string and assigns it to the ExcludeDeploymentCellIDs field.
func (o *DescribeDeploymentCellCostRequest) SetExcludeDeploymentCellIDs(v string) {
	o.ExcludeDeploymentCellIDs = &v
}

// GetExcludeInstanceIDs returns the ExcludeInstanceIDs field value if set, zero value otherwise.
func (o *DescribeDeploymentCellCostRequest) GetExcludeInstanceIDs() string {
	if o == nil || IsNil(o.ExcludeInstanceIDs) {
		var ret string
		return ret
	}
	return *o.ExcludeInstanceIDs
}

// GetExcludeInstanceIDsOk returns a tuple with the ExcludeInstanceIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDeploymentCellCostRequest) GetExcludeInstanceIDsOk() (*string, bool) {
	if o == nil || IsNil(o.ExcludeInstanceIDs) {
		return nil, false
	}
	return o.ExcludeInstanceIDs, true
}

// HasExcludeInstanceIDs returns a boolean if a field has been set.
func (o *DescribeDeploymentCellCostRequest) HasExcludeInstanceIDs() bool {
	if o != nil && !IsNil(o.ExcludeInstanceIDs) {
		return true
	}

	return false
}

// SetExcludeInstanceIDs gets a reference to the given string and assigns it to the ExcludeInstanceIDs field.
func (o *DescribeDeploymentCellCostRequest) SetExcludeInstanceIDs(v string) {
	o.ExcludeInstanceIDs = &v
}

// GetExcludeRegionIDs returns the ExcludeRegionIDs field value if set, zero value otherwise.
func (o *DescribeDeploymentCellCostRequest) GetExcludeRegionIDs() string {
	if o == nil || IsNil(o.ExcludeRegionIDs) {
		var ret string
		return ret
	}
	return *o.ExcludeRegionIDs
}

// GetExcludeRegionIDsOk returns a tuple with the ExcludeRegionIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDeploymentCellCostRequest) GetExcludeRegionIDsOk() (*string, bool) {
	if o == nil || IsNil(o.ExcludeRegionIDs) {
		return nil, false
	}
	return o.ExcludeRegionIDs, true
}

// HasExcludeRegionIDs returns a boolean if a field has been set.
func (o *DescribeDeploymentCellCostRequest) HasExcludeRegionIDs() bool {
	if o != nil && !IsNil(o.ExcludeRegionIDs) {
		return true
	}

	return false
}

// SetExcludeRegionIDs gets a reference to the given string and assigns it to the ExcludeRegionIDs field.
func (o *DescribeDeploymentCellCostRequest) SetExcludeRegionIDs(v string) {
	o.ExcludeRegionIDs = &v
}

// GetFrequency returns the Frequency field value
func (o *DescribeDeploymentCellCostRequest) GetFrequency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value
// and a boolean to check if the value has been set.
func (o *DescribeDeploymentCellCostRequest) GetFrequencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Frequency, true
}

// SetFrequency sets field value
func (o *DescribeDeploymentCellCostRequest) SetFrequency(v string) {
	o.Frequency = v
}

// GetIncludeCloudProviderIDs returns the IncludeCloudProviderIDs field value if set, zero value otherwise.
func (o *DescribeDeploymentCellCostRequest) GetIncludeCloudProviderIDs() string {
	if o == nil || IsNil(o.IncludeCloudProviderIDs) {
		var ret string
		return ret
	}
	return *o.IncludeCloudProviderIDs
}

// GetIncludeCloudProviderIDsOk returns a tuple with the IncludeCloudProviderIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDeploymentCellCostRequest) GetIncludeCloudProviderIDsOk() (*string, bool) {
	if o == nil || IsNil(o.IncludeCloudProviderIDs) {
		return nil, false
	}
	return o.IncludeCloudProviderIDs, true
}

// HasIncludeCloudProviderIDs returns a boolean if a field has been set.
func (o *DescribeDeploymentCellCostRequest) HasIncludeCloudProviderIDs() bool {
	if o != nil && !IsNil(o.IncludeCloudProviderIDs) {
		return true
	}

	return false
}

// SetIncludeCloudProviderIDs gets a reference to the given string and assigns it to the IncludeCloudProviderIDs field.
func (o *DescribeDeploymentCellCostRequest) SetIncludeCloudProviderIDs(v string) {
	o.IncludeCloudProviderIDs = &v
}

// GetIncludeDeploymentCellIDs returns the IncludeDeploymentCellIDs field value if set, zero value otherwise.
func (o *DescribeDeploymentCellCostRequest) GetIncludeDeploymentCellIDs() string {
	if o == nil || IsNil(o.IncludeDeploymentCellIDs) {
		var ret string
		return ret
	}
	return *o.IncludeDeploymentCellIDs
}

// GetIncludeDeploymentCellIDsOk returns a tuple with the IncludeDeploymentCellIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDeploymentCellCostRequest) GetIncludeDeploymentCellIDsOk() (*string, bool) {
	if o == nil || IsNil(o.IncludeDeploymentCellIDs) {
		return nil, false
	}
	return o.IncludeDeploymentCellIDs, true
}

// HasIncludeDeploymentCellIDs returns a boolean if a field has been set.
func (o *DescribeDeploymentCellCostRequest) HasIncludeDeploymentCellIDs() bool {
	if o != nil && !IsNil(o.IncludeDeploymentCellIDs) {
		return true
	}

	return false
}

// SetIncludeDeploymentCellIDs gets a reference to the given string and assigns it to the IncludeDeploymentCellIDs field.
func (o *DescribeDeploymentCellCostRequest) SetIncludeDeploymentCellIDs(v string) {
	o.IncludeDeploymentCellIDs = &v
}

// GetIncludeInstanceIDs returns the IncludeInstanceIDs field value if set, zero value otherwise.
func (o *DescribeDeploymentCellCostRequest) GetIncludeInstanceIDs() string {
	if o == nil || IsNil(o.IncludeInstanceIDs) {
		var ret string
		return ret
	}
	return *o.IncludeInstanceIDs
}

// GetIncludeInstanceIDsOk returns a tuple with the IncludeInstanceIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDeploymentCellCostRequest) GetIncludeInstanceIDsOk() (*string, bool) {
	if o == nil || IsNil(o.IncludeInstanceIDs) {
		return nil, false
	}
	return o.IncludeInstanceIDs, true
}

// HasIncludeInstanceIDs returns a boolean if a field has been set.
func (o *DescribeDeploymentCellCostRequest) HasIncludeInstanceIDs() bool {
	if o != nil && !IsNil(o.IncludeInstanceIDs) {
		return true
	}

	return false
}

// SetIncludeInstanceIDs gets a reference to the given string and assigns it to the IncludeInstanceIDs field.
func (o *DescribeDeploymentCellCostRequest) SetIncludeInstanceIDs(v string) {
	o.IncludeInstanceIDs = &v
}

// GetIncludeRegionIDs returns the IncludeRegionIDs field value if set, zero value otherwise.
func (o *DescribeDeploymentCellCostRequest) GetIncludeRegionIDs() string {
	if o == nil || IsNil(o.IncludeRegionIDs) {
		var ret string
		return ret
	}
	return *o.IncludeRegionIDs
}

// GetIncludeRegionIDsOk returns a tuple with the IncludeRegionIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDeploymentCellCostRequest) GetIncludeRegionIDsOk() (*string, bool) {
	if o == nil || IsNil(o.IncludeRegionIDs) {
		return nil, false
	}
	return o.IncludeRegionIDs, true
}

// HasIncludeRegionIDs returns a boolean if a field has been set.
func (o *DescribeDeploymentCellCostRequest) HasIncludeRegionIDs() bool {
	if o != nil && !IsNil(o.IncludeRegionIDs) {
		return true
	}

	return false
}

// SetIncludeRegionIDs gets a reference to the given string and assigns it to the IncludeRegionIDs field.
func (o *DescribeDeploymentCellCostRequest) SetIncludeRegionIDs(v string) {
	o.IncludeRegionIDs = &v
}

// GetStartDate returns the StartDate field value
func (o *DescribeDeploymentCellCostRequest) GetStartDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *DescribeDeploymentCellCostRequest) GetStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *DescribeDeploymentCellCostRequest) SetStartDate(v time.Time) {
	o.StartDate = v
}

// GetToken returns the Token field value
func (o *DescribeDeploymentCellCostRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *DescribeDeploymentCellCostRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *DescribeDeploymentCellCostRequest) SetToken(v string) {
	o.Token = v
}

// GetTopNInstances returns the TopNInstances field value if set, zero value otherwise.
func (o *DescribeDeploymentCellCostRequest) GetTopNInstances() int64 {
	if o == nil || IsNil(o.TopNInstances) {
		var ret int64
		return ret
	}
	return *o.TopNInstances
}

// GetTopNInstancesOk returns a tuple with the TopNInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeDeploymentCellCostRequest) GetTopNInstancesOk() (*int64, bool) {
	if o == nil || IsNil(o.TopNInstances) {
		return nil, false
	}
	return o.TopNInstances, true
}

// HasTopNInstances returns a boolean if a field has been set.
func (o *DescribeDeploymentCellCostRequest) HasTopNInstances() bool {
	if o != nil && !IsNil(o.TopNInstances) {
		return true
	}

	return false
}

// SetTopNInstances gets a reference to the given int64 and assigns it to the TopNInstances field.
func (o *DescribeDeploymentCellCostRequest) SetTopNInstances(v int64) {
	o.TopNInstances = &v
}

func (o DescribeDeploymentCellCostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeDeploymentCellCostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["endDate"] = o.EndDate
	toSerialize["environmentType"] = o.EnvironmentType
	if !IsNil(o.ExcludeCloudProviderIDs) {
		toSerialize["excludeCloudProviderIDs"] = o.ExcludeCloudProviderIDs
	}
	if !IsNil(o.ExcludeDeploymentCellIDs) {
		toSerialize["excludeDeploymentCellIDs"] = o.ExcludeDeploymentCellIDs
	}
	if !IsNil(o.ExcludeInstanceIDs) {
		toSerialize["excludeInstanceIDs"] = o.ExcludeInstanceIDs
	}
	if !IsNil(o.ExcludeRegionIDs) {
		toSerialize["excludeRegionIDs"] = o.ExcludeRegionIDs
	}
	toSerialize["frequency"] = o.Frequency
	if !IsNil(o.IncludeCloudProviderIDs) {
		toSerialize["includeCloudProviderIDs"] = o.IncludeCloudProviderIDs
	}
	if !IsNil(o.IncludeDeploymentCellIDs) {
		toSerialize["includeDeploymentCellIDs"] = o.IncludeDeploymentCellIDs
	}
	if !IsNil(o.IncludeInstanceIDs) {
		toSerialize["includeInstanceIDs"] = o.IncludeInstanceIDs
	}
	if !IsNil(o.IncludeRegionIDs) {
		toSerialize["includeRegionIDs"] = o.IncludeRegionIDs
	}
	toSerialize["startDate"] = o.StartDate
	toSerialize["token"] = o.Token
	if !IsNil(o.TopNInstances) {
		toSerialize["topNInstances"] = o.TopNInstances
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DescribeDeploymentCellCostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"endDate",
		"environmentType",
		"frequency",
		"startDate",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeDeploymentCellCostRequest := _DescribeDeploymentCellCostRequest{}

	err = json.Unmarshal(data, &varDescribeDeploymentCellCostRequest)

	if err != nil {
		return err
	}

	*o = DescribeDeploymentCellCostRequest(varDescribeDeploymentCellCostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "endDate")
		delete(additionalProperties, "environmentType")
		delete(additionalProperties, "excludeCloudProviderIDs")
		delete(additionalProperties, "excludeDeploymentCellIDs")
		delete(additionalProperties, "excludeInstanceIDs")
		delete(additionalProperties, "excludeRegionIDs")
		delete(additionalProperties, "frequency")
		delete(additionalProperties, "includeCloudProviderIDs")
		delete(additionalProperties, "includeDeploymentCellIDs")
		delete(additionalProperties, "includeInstanceIDs")
		delete(additionalProperties, "includeRegionIDs")
		delete(additionalProperties, "startDate")
		delete(additionalProperties, "token")
		delete(additionalProperties, "topNInstances")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDescribeDeploymentCellCostRequest struct {
	value *DescribeDeploymentCellCostRequest
	isSet bool
}

func (v NullableDescribeDeploymentCellCostRequest) Get() *DescribeDeploymentCellCostRequest {
	return v.value
}

func (v *NullableDescribeDeploymentCellCostRequest) Set(val *DescribeDeploymentCellCostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeDeploymentCellCostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeDeploymentCellCostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeDeploymentCellCostRequest(val *DescribeDeploymentCellCostRequest) *NullableDescribeDeploymentCellCostRequest {
	return &NullableDescribeDeploymentCellCostRequest{value: val, isSet: true}
}

func (v NullableDescribeDeploymentCellCostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeDeploymentCellCostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


