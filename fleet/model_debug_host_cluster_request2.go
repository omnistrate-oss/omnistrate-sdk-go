/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the DebugHostClusterRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DebugHostClusterRequest2{}

// DebugHostClusterRequest2 struct for DebugHostClusterRequest2
type DebugHostClusterRequest2 struct {
	// Whether to include the installation logs of the amenities in the debug information
	IncludeAmenitiesInstallationLogs *bool `json:"includeAmenitiesInstallationLogs,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DebugHostClusterRequest2 DebugHostClusterRequest2

// NewDebugHostClusterRequest2 instantiates a new DebugHostClusterRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDebugHostClusterRequest2() *DebugHostClusterRequest2 {
	this := DebugHostClusterRequest2{}
	return &this
}

// NewDebugHostClusterRequest2WithDefaults instantiates a new DebugHostClusterRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDebugHostClusterRequest2WithDefaults() *DebugHostClusterRequest2 {
	this := DebugHostClusterRequest2{}
	return &this
}

// GetIncludeAmenitiesInstallationLogs returns the IncludeAmenitiesInstallationLogs field value if set, zero value otherwise.
func (o *DebugHostClusterRequest2) GetIncludeAmenitiesInstallationLogs() bool {
	if o == nil || IsNil(o.IncludeAmenitiesInstallationLogs) {
		var ret bool
		return ret
	}
	return *o.IncludeAmenitiesInstallationLogs
}

// GetIncludeAmenitiesInstallationLogsOk returns a tuple with the IncludeAmenitiesInstallationLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DebugHostClusterRequest2) GetIncludeAmenitiesInstallationLogsOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeAmenitiesInstallationLogs) {
		return nil, false
	}
	return o.IncludeAmenitiesInstallationLogs, true
}

// HasIncludeAmenitiesInstallationLogs returns a boolean if a field has been set.
func (o *DebugHostClusterRequest2) HasIncludeAmenitiesInstallationLogs() bool {
	if o != nil && !IsNil(o.IncludeAmenitiesInstallationLogs) {
		return true
	}

	return false
}

// SetIncludeAmenitiesInstallationLogs gets a reference to the given bool and assigns it to the IncludeAmenitiesInstallationLogs field.
func (o *DebugHostClusterRequest2) SetIncludeAmenitiesInstallationLogs(v bool) {
	o.IncludeAmenitiesInstallationLogs = &v
}

func (o DebugHostClusterRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DebugHostClusterRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IncludeAmenitiesInstallationLogs) {
		toSerialize["includeAmenitiesInstallationLogs"] = o.IncludeAmenitiesInstallationLogs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DebugHostClusterRequest2) UnmarshalJSON(data []byte) (err error) {
	varDebugHostClusterRequest2 := _DebugHostClusterRequest2{}

	err = json.Unmarshal(data, &varDebugHostClusterRequest2)

	if err != nil {
		return err
	}

	*o = DebugHostClusterRequest2(varDebugHostClusterRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "includeAmenitiesInstallationLogs")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDebugHostClusterRequest2 struct {
	value *DebugHostClusterRequest2
	isSet bool
}

func (v NullableDebugHostClusterRequest2) Get() *DebugHostClusterRequest2 {
	return v.value
}

func (v *NullableDebugHostClusterRequest2) Set(val *DebugHostClusterRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableDebugHostClusterRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableDebugHostClusterRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDebugHostClusterRequest2(val *DebugHostClusterRequest2) *NullableDebugHostClusterRequest2 {
	return &NullableDebugHostClusterRequest2{value: val, isSet: true}
}

func (v NullableDebugHostClusterRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDebugHostClusterRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


