/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProxyInstanceSearchRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProxyInstanceSearchRecord{}

// ProxyInstanceSearchRecord struct for ProxyInstanceSearchRecord
type ProxyInstanceSearchRecord struct {
	// The cloud provider where the instance is hosted.
	CloudProvider string `json:"cloudProvider"`
	// The instance description.
	Description string `json:"description"`
	// The proxy instance ID.
	Id string `json:"id"`
	// Is the proxy managed by Omnistrate.
	Managed bool `json:"managed"`
	// The managed resource type of the proxy instance.
	ManagedResourceType *string `json:"managedResourceType,omitempty"`
	// The ports registration status of the ports based proxy instance.
	PortsRegistrationStatus map[string][]int64 `json:"portsRegistrationStatus"`
	// The proxy type.
	ProxyType *string `json:"proxyType,omitempty"`
	// The region code where the instance is hosted.
	RegionCode string `json:"regionCode"`
	// The service environment ID of the instance.
	ServiceEnvironmentId string `json:"serviceEnvironmentId"`
	// The service environment name of the instance.
	ServiceEnvironmentName string `json:"serviceEnvironmentName"`
	// The service environment type of the instance.
	ServiceEnvironmentType *string `json:"serviceEnvironmentType,omitempty"`
	// The service ID of the instance.
	ServiceId string `json:"serviceId"`
	// The service name of the instance.
	ServiceName string `json:"serviceName"`
	// The instance status.
	Status string `json:"status"`
	// The instance status description.
	StatusDescription string `json:"statusDescription"`
	// The name of the target resource of the proxy instance.
	TargetResourceName string `json:"targetResourceName"`
}

type _ProxyInstanceSearchRecord ProxyInstanceSearchRecord

// NewProxyInstanceSearchRecord instantiates a new ProxyInstanceSearchRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProxyInstanceSearchRecord(cloudProvider string, description string, id string, managed bool, portsRegistrationStatus map[string][]int64, regionCode string, serviceEnvironmentId string, serviceEnvironmentName string, serviceId string, serviceName string, status string, statusDescription string, targetResourceName string) *ProxyInstanceSearchRecord {
	this := ProxyInstanceSearchRecord{}
	this.CloudProvider = cloudProvider
	this.Description = description
	this.Id = id
	this.Managed = managed
	this.PortsRegistrationStatus = portsRegistrationStatus
	this.RegionCode = regionCode
	this.ServiceEnvironmentId = serviceEnvironmentId
	this.ServiceEnvironmentName = serviceEnvironmentName
	this.ServiceId = serviceId
	this.ServiceName = serviceName
	this.Status = status
	this.StatusDescription = statusDescription
	this.TargetResourceName = targetResourceName
	return &this
}

// NewProxyInstanceSearchRecordWithDefaults instantiates a new ProxyInstanceSearchRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProxyInstanceSearchRecordWithDefaults() *ProxyInstanceSearchRecord {
	this := ProxyInstanceSearchRecord{}
	return &this
}

// GetCloudProvider returns the CloudProvider field value
func (o *ProxyInstanceSearchRecord) GetCloudProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *ProxyInstanceSearchRecord) GetCloudProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *ProxyInstanceSearchRecord) SetCloudProvider(v string) {
	o.CloudProvider = v
}

// GetDescription returns the Description field value
func (o *ProxyInstanceSearchRecord) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ProxyInstanceSearchRecord) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ProxyInstanceSearchRecord) SetDescription(v string) {
	o.Description = v
}

// GetId returns the Id field value
func (o *ProxyInstanceSearchRecord) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProxyInstanceSearchRecord) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProxyInstanceSearchRecord) SetId(v string) {
	o.Id = v
}

// GetManaged returns the Managed field value
func (o *ProxyInstanceSearchRecord) GetManaged() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Managed
}

// GetManagedOk returns a tuple with the Managed field value
// and a boolean to check if the value has been set.
func (o *ProxyInstanceSearchRecord) GetManagedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Managed, true
}

// SetManaged sets field value
func (o *ProxyInstanceSearchRecord) SetManaged(v bool) {
	o.Managed = v
}

// GetManagedResourceType returns the ManagedResourceType field value if set, zero value otherwise.
func (o *ProxyInstanceSearchRecord) GetManagedResourceType() string {
	if o == nil || IsNil(o.ManagedResourceType) {
		var ret string
		return ret
	}
	return *o.ManagedResourceType
}

// GetManagedResourceTypeOk returns a tuple with the ManagedResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProxyInstanceSearchRecord) GetManagedResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ManagedResourceType) {
		return nil, false
	}
	return o.ManagedResourceType, true
}

// HasManagedResourceType returns a boolean if a field has been set.
func (o *ProxyInstanceSearchRecord) HasManagedResourceType() bool {
	if o != nil && !IsNil(o.ManagedResourceType) {
		return true
	}

	return false
}

// SetManagedResourceType gets a reference to the given string and assigns it to the ManagedResourceType field.
func (o *ProxyInstanceSearchRecord) SetManagedResourceType(v string) {
	o.ManagedResourceType = &v
}

// GetPortsRegistrationStatus returns the PortsRegistrationStatus field value
func (o *ProxyInstanceSearchRecord) GetPortsRegistrationStatus() map[string][]int64 {
	if o == nil {
		var ret map[string][]int64
		return ret
	}

	return o.PortsRegistrationStatus
}

// GetPortsRegistrationStatusOk returns a tuple with the PortsRegistrationStatus field value
// and a boolean to check if the value has been set.
func (o *ProxyInstanceSearchRecord) GetPortsRegistrationStatusOk() (*map[string][]int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PortsRegistrationStatus, true
}

// SetPortsRegistrationStatus sets field value
func (o *ProxyInstanceSearchRecord) SetPortsRegistrationStatus(v map[string][]int64) {
	o.PortsRegistrationStatus = v
}

// GetProxyType returns the ProxyType field value if set, zero value otherwise.
func (o *ProxyInstanceSearchRecord) GetProxyType() string {
	if o == nil || IsNil(o.ProxyType) {
		var ret string
		return ret
	}
	return *o.ProxyType
}

// GetProxyTypeOk returns a tuple with the ProxyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProxyInstanceSearchRecord) GetProxyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyType) {
		return nil, false
	}
	return o.ProxyType, true
}

// HasProxyType returns a boolean if a field has been set.
func (o *ProxyInstanceSearchRecord) HasProxyType() bool {
	if o != nil && !IsNil(o.ProxyType) {
		return true
	}

	return false
}

// SetProxyType gets a reference to the given string and assigns it to the ProxyType field.
func (o *ProxyInstanceSearchRecord) SetProxyType(v string) {
	o.ProxyType = &v
}

// GetRegionCode returns the RegionCode field value
func (o *ProxyInstanceSearchRecord) GetRegionCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RegionCode
}

// GetRegionCodeOk returns a tuple with the RegionCode field value
// and a boolean to check if the value has been set.
func (o *ProxyInstanceSearchRecord) GetRegionCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegionCode, true
}

// SetRegionCode sets field value
func (o *ProxyInstanceSearchRecord) SetRegionCode(v string) {
	o.RegionCode = v
}

// GetServiceEnvironmentId returns the ServiceEnvironmentId field value
func (o *ProxyInstanceSearchRecord) GetServiceEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceEnvironmentId
}

// GetServiceEnvironmentIdOk returns a tuple with the ServiceEnvironmentId field value
// and a boolean to check if the value has been set.
func (o *ProxyInstanceSearchRecord) GetServiceEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceEnvironmentId, true
}

// SetServiceEnvironmentId sets field value
func (o *ProxyInstanceSearchRecord) SetServiceEnvironmentId(v string) {
	o.ServiceEnvironmentId = v
}

// GetServiceEnvironmentName returns the ServiceEnvironmentName field value
func (o *ProxyInstanceSearchRecord) GetServiceEnvironmentName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceEnvironmentName
}

// GetServiceEnvironmentNameOk returns a tuple with the ServiceEnvironmentName field value
// and a boolean to check if the value has been set.
func (o *ProxyInstanceSearchRecord) GetServiceEnvironmentNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceEnvironmentName, true
}

// SetServiceEnvironmentName sets field value
func (o *ProxyInstanceSearchRecord) SetServiceEnvironmentName(v string) {
	o.ServiceEnvironmentName = v
}

// GetServiceEnvironmentType returns the ServiceEnvironmentType field value if set, zero value otherwise.
func (o *ProxyInstanceSearchRecord) GetServiceEnvironmentType() string {
	if o == nil || IsNil(o.ServiceEnvironmentType) {
		var ret string
		return ret
	}
	return *o.ServiceEnvironmentType
}

// GetServiceEnvironmentTypeOk returns a tuple with the ServiceEnvironmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProxyInstanceSearchRecord) GetServiceEnvironmentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceEnvironmentType) {
		return nil, false
	}
	return o.ServiceEnvironmentType, true
}

// HasServiceEnvironmentType returns a boolean if a field has been set.
func (o *ProxyInstanceSearchRecord) HasServiceEnvironmentType() bool {
	if o != nil && !IsNil(o.ServiceEnvironmentType) {
		return true
	}

	return false
}

// SetServiceEnvironmentType gets a reference to the given string and assigns it to the ServiceEnvironmentType field.
func (o *ProxyInstanceSearchRecord) SetServiceEnvironmentType(v string) {
	o.ServiceEnvironmentType = &v
}

// GetServiceId returns the ServiceId field value
func (o *ProxyInstanceSearchRecord) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *ProxyInstanceSearchRecord) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *ProxyInstanceSearchRecord) SetServiceId(v string) {
	o.ServiceId = v
}

// GetServiceName returns the ServiceName field value
func (o *ProxyInstanceSearchRecord) GetServiceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value
// and a boolean to check if the value has been set.
func (o *ProxyInstanceSearchRecord) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceName, true
}

// SetServiceName sets field value
func (o *ProxyInstanceSearchRecord) SetServiceName(v string) {
	o.ServiceName = v
}

// GetStatus returns the Status field value
func (o *ProxyInstanceSearchRecord) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ProxyInstanceSearchRecord) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ProxyInstanceSearchRecord) SetStatus(v string) {
	o.Status = v
}

// GetStatusDescription returns the StatusDescription field value
func (o *ProxyInstanceSearchRecord) GetStatusDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatusDescription
}

// GetStatusDescriptionOk returns a tuple with the StatusDescription field value
// and a boolean to check if the value has been set.
func (o *ProxyInstanceSearchRecord) GetStatusDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusDescription, true
}

// SetStatusDescription sets field value
func (o *ProxyInstanceSearchRecord) SetStatusDescription(v string) {
	o.StatusDescription = v
}

// GetTargetResourceName returns the TargetResourceName field value
func (o *ProxyInstanceSearchRecord) GetTargetResourceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetResourceName
}

// GetTargetResourceNameOk returns a tuple with the TargetResourceName field value
// and a boolean to check if the value has been set.
func (o *ProxyInstanceSearchRecord) GetTargetResourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetResourceName, true
}

// SetTargetResourceName sets field value
func (o *ProxyInstanceSearchRecord) SetTargetResourceName(v string) {
	o.TargetResourceName = v
}

func (o ProxyInstanceSearchRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProxyInstanceSearchRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cloudProvider"] = o.CloudProvider
	toSerialize["description"] = o.Description
	toSerialize["id"] = o.Id
	toSerialize["managed"] = o.Managed
	if !IsNil(o.ManagedResourceType) {
		toSerialize["managedResourceType"] = o.ManagedResourceType
	}
	toSerialize["portsRegistrationStatus"] = o.PortsRegistrationStatus
	if !IsNil(o.ProxyType) {
		toSerialize["proxyType"] = o.ProxyType
	}
	toSerialize["regionCode"] = o.RegionCode
	toSerialize["serviceEnvironmentId"] = o.ServiceEnvironmentId
	toSerialize["serviceEnvironmentName"] = o.ServiceEnvironmentName
	if !IsNil(o.ServiceEnvironmentType) {
		toSerialize["serviceEnvironmentType"] = o.ServiceEnvironmentType
	}
	toSerialize["serviceId"] = o.ServiceId
	toSerialize["serviceName"] = o.ServiceName
	toSerialize["status"] = o.Status
	toSerialize["statusDescription"] = o.StatusDescription
	toSerialize["targetResourceName"] = o.TargetResourceName
	return toSerialize, nil
}

func (o *ProxyInstanceSearchRecord) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloudProvider",
		"description",
		"id",
		"managed",
		"portsRegistrationStatus",
		"regionCode",
		"serviceEnvironmentId",
		"serviceEnvironmentName",
		"serviceId",
		"serviceName",
		"status",
		"statusDescription",
		"targetResourceName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProxyInstanceSearchRecord := _ProxyInstanceSearchRecord{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProxyInstanceSearchRecord)

	if err != nil {
		return err
	}

	*o = ProxyInstanceSearchRecord(varProxyInstanceSearchRecord)

	return err
}

type NullableProxyInstanceSearchRecord struct {
	value *ProxyInstanceSearchRecord
	isSet bool
}

func (v NullableProxyInstanceSearchRecord) Get() *ProxyInstanceSearchRecord {
	return v.value
}

func (v *NullableProxyInstanceSearchRecord) Set(val *ProxyInstanceSearchRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableProxyInstanceSearchRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableProxyInstanceSearchRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProxyInstanceSearchRecord(val *ProxyInstanceSearchRecord) *NullableProxyInstanceSearchRecord {
	return &NullableProxyInstanceSearchRecord{value: val, isSet: true}
}

func (v NullableProxyInstanceSearchRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProxyInstanceSearchRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


