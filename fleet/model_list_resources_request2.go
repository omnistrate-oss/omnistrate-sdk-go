/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the ListResourcesRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListResourcesRequest2{}

// ListResourcesRequest2 struct for ListResourcesRequest2
type ListResourcesRequest2 struct {
	// Filter resources by environment type.
	EnvironmentType *string `json:"environmentType,omitempty"`
	// Token to use for the next request
	NextPageToken *string `json:"nextPageToken,omitempty"`
	// Filter resources by organization ID.
	OrgId *string `json:"orgId,omitempty"`
	// The number of resources to return per page.
	PageSize *int64 `json:"pageSize,omitempty"`
	// Filter resources by user ID.
	UserId *string `json:"userId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListResourcesRequest2 ListResourcesRequest2

// NewListResourcesRequest2 instantiates a new ListResourcesRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListResourcesRequest2() *ListResourcesRequest2 {
	this := ListResourcesRequest2{}
	return &this
}

// NewListResourcesRequest2WithDefaults instantiates a new ListResourcesRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListResourcesRequest2WithDefaults() *ListResourcesRequest2 {
	this := ListResourcesRequest2{}
	return &this
}

// GetEnvironmentType returns the EnvironmentType field value if set, zero value otherwise.
func (o *ListResourcesRequest2) GetEnvironmentType() string {
	if o == nil || IsNil(o.EnvironmentType) {
		var ret string
		return ret
	}
	return *o.EnvironmentType
}

// GetEnvironmentTypeOk returns a tuple with the EnvironmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourcesRequest2) GetEnvironmentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentType) {
		return nil, false
	}
	return o.EnvironmentType, true
}

// HasEnvironmentType returns a boolean if a field has been set.
func (o *ListResourcesRequest2) HasEnvironmentType() bool {
	if o != nil && !IsNil(o.EnvironmentType) {
		return true
	}

	return false
}

// SetEnvironmentType gets a reference to the given string and assigns it to the EnvironmentType field.
func (o *ListResourcesRequest2) SetEnvironmentType(v string) {
	o.EnvironmentType = &v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ListResourcesRequest2) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourcesRequest2) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ListResourcesRequest2) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ListResourcesRequest2) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *ListResourcesRequest2) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourcesRequest2) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *ListResourcesRequest2) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *ListResourcesRequest2) SetOrgId(v string) {
	o.OrgId = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *ListResourcesRequest2) GetPageSize() int64 {
	if o == nil || IsNil(o.PageSize) {
		var ret int64
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourcesRequest2) GetPageSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *ListResourcesRequest2) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int64 and assigns it to the PageSize field.
func (o *ListResourcesRequest2) SetPageSize(v int64) {
	o.PageSize = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ListResourcesRequest2) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourcesRequest2) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ListResourcesRequest2) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ListResourcesRequest2) SetUserId(v string) {
	o.UserId = &v
}

func (o ListResourcesRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListResourcesRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnvironmentType) {
		toSerialize["environmentType"] = o.EnvironmentType
	}
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	if !IsNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	if !IsNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListResourcesRequest2) UnmarshalJSON(data []byte) (err error) {
	varListResourcesRequest2 := _ListResourcesRequest2{}

	err = json.Unmarshal(data, &varListResourcesRequest2)

	if err != nil {
		return err
	}

	*o = ListResourcesRequest2(varListResourcesRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "environmentType")
		delete(additionalProperties, "nextPageToken")
		delete(additionalProperties, "orgId")
		delete(additionalProperties, "pageSize")
		delete(additionalProperties, "userId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListResourcesRequest2 struct {
	value *ListResourcesRequest2
	isSet bool
}

func (v NullableListResourcesRequest2) Get() *ListResourcesRequest2 {
	return v.value
}

func (v *NullableListResourcesRequest2) Set(val *ListResourcesRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableListResourcesRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableListResourcesRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListResourcesRequest2(val *ListResourcesRequest2) *NullableListResourcesRequest2 {
	return &NullableListResourcesRequest2{value: val, isSet: true}
}

func (v NullableListResourcesRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListResourcesRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


