/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the ListServiceOfferingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListServiceOfferingsRequest{}

// ListServiceOfferingsRequest struct for ListServiceOfferingsRequest
type ListServiceOfferingsRequest struct {
	// The type of service environment
	EnvironmentType *string `json:"environmentType,omitempty"`
	// ID of an Org
	OrgId *string `json:"orgId,omitempty"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	// This parameter is used to configure the visibility of the service control-plane APIs
	Visibility *string `json:"visibility,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListServiceOfferingsRequest ListServiceOfferingsRequest

// NewListServiceOfferingsRequest instantiates a new ListServiceOfferingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListServiceOfferingsRequest(token string) *ListServiceOfferingsRequest {
	this := ListServiceOfferingsRequest{}
	this.Token = token
	return &this
}

// NewListServiceOfferingsRequestWithDefaults instantiates a new ListServiceOfferingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListServiceOfferingsRequestWithDefaults() *ListServiceOfferingsRequest {
	this := ListServiceOfferingsRequest{}
	return &this
}

// GetEnvironmentType returns the EnvironmentType field value if set, zero value otherwise.
func (o *ListServiceOfferingsRequest) GetEnvironmentType() string {
	if o == nil || IsNil(o.EnvironmentType) {
		var ret string
		return ret
	}
	return *o.EnvironmentType
}

// GetEnvironmentTypeOk returns a tuple with the EnvironmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListServiceOfferingsRequest) GetEnvironmentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentType) {
		return nil, false
	}
	return o.EnvironmentType, true
}

// HasEnvironmentType returns a boolean if a field has been set.
func (o *ListServiceOfferingsRequest) HasEnvironmentType() bool {
	if o != nil && !IsNil(o.EnvironmentType) {
		return true
	}

	return false
}

// SetEnvironmentType gets a reference to the given string and assigns it to the EnvironmentType field.
func (o *ListServiceOfferingsRequest) SetEnvironmentType(v string) {
	o.EnvironmentType = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *ListServiceOfferingsRequest) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListServiceOfferingsRequest) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *ListServiceOfferingsRequest) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *ListServiceOfferingsRequest) SetOrgId(v string) {
	o.OrgId = &v
}

// GetToken returns the Token field value
func (o *ListServiceOfferingsRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *ListServiceOfferingsRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *ListServiceOfferingsRequest) SetToken(v string) {
	o.Token = v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *ListServiceOfferingsRequest) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListServiceOfferingsRequest) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *ListServiceOfferingsRequest) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *ListServiceOfferingsRequest) SetVisibility(v string) {
	o.Visibility = &v
}

func (o ListServiceOfferingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListServiceOfferingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnvironmentType) {
		toSerialize["environmentType"] = o.EnvironmentType
	}
	if !IsNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	toSerialize["token"] = o.Token
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListServiceOfferingsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListServiceOfferingsRequest := _ListServiceOfferingsRequest{}

	err = json.Unmarshal(data, &varListServiceOfferingsRequest)

	if err != nil {
		return err
	}

	*o = ListServiceOfferingsRequest(varListServiceOfferingsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "environmentType")
		delete(additionalProperties, "orgId")
		delete(additionalProperties, "token")
		delete(additionalProperties, "visibility")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListServiceOfferingsRequest struct {
	value *ListServiceOfferingsRequest
	isSet bool
}

func (v NullableListServiceOfferingsRequest) Get() *ListServiceOfferingsRequest {
	return v.value
}

func (v *NullableListServiceOfferingsRequest) Set(val *ListServiceOfferingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListServiceOfferingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListServiceOfferingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListServiceOfferingsRequest(val *ListServiceOfferingsRequest) *NullableListServiceOfferingsRequest {
	return &NullableListServiceOfferingsRequest{value: val, isSet: true}
}

func (v NullableListServiceOfferingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListServiceOfferingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


