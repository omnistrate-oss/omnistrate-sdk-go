/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the ListUpgradePathsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListUpgradePathsRequest{}

// ListUpgradePathsRequest struct for ListUpgradePathsRequest
type ListUpgradePathsRequest struct {
	// The next token to use for pagination
	NextPageToken *string `json:"nextPageToken,omitempty"`
	// The number of resources to return per page
	PageSize *int64 `json:"pageSize,omitempty"`
	// ID of a Product Tier
	ProductTierId string `json:"productTierId"`
	// ID of a Service
	ServiceId string `json:"serviceId"`
	// The source product tier version of the upgrade path.
	SourceProductTierVersion *string `json:"sourceProductTierVersion,omitempty"`
	// The status of the upgrade path.
	Status *string `json:"status,omitempty"`
	// The target product tier version of the upgrade path.
	TargetProductTierVersion *string `json:"targetProductTierVersion,omitempty"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	// The type of the upgrade path.
	Type *string `json:"type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListUpgradePathsRequest ListUpgradePathsRequest

// NewListUpgradePathsRequest instantiates a new ListUpgradePathsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListUpgradePathsRequest(productTierId string, serviceId string, token string) *ListUpgradePathsRequest {
	this := ListUpgradePathsRequest{}
	this.ProductTierId = productTierId
	this.ServiceId = serviceId
	this.Token = token
	return &this
}

// NewListUpgradePathsRequestWithDefaults instantiates a new ListUpgradePathsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListUpgradePathsRequestWithDefaults() *ListUpgradePathsRequest {
	this := ListUpgradePathsRequest{}
	return &this
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ListUpgradePathsRequest) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUpgradePathsRequest) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ListUpgradePathsRequest) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ListUpgradePathsRequest) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *ListUpgradePathsRequest) GetPageSize() int64 {
	if o == nil || IsNil(o.PageSize) {
		var ret int64
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUpgradePathsRequest) GetPageSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *ListUpgradePathsRequest) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int64 and assigns it to the PageSize field.
func (o *ListUpgradePathsRequest) SetPageSize(v int64) {
	o.PageSize = &v
}

// GetProductTierId returns the ProductTierId field value
func (o *ListUpgradePathsRequest) GetProductTierId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductTierId
}

// GetProductTierIdOk returns a tuple with the ProductTierId field value
// and a boolean to check if the value has been set.
func (o *ListUpgradePathsRequest) GetProductTierIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductTierId, true
}

// SetProductTierId sets field value
func (o *ListUpgradePathsRequest) SetProductTierId(v string) {
	o.ProductTierId = v
}

// GetServiceId returns the ServiceId field value
func (o *ListUpgradePathsRequest) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *ListUpgradePathsRequest) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *ListUpgradePathsRequest) SetServiceId(v string) {
	o.ServiceId = v
}

// GetSourceProductTierVersion returns the SourceProductTierVersion field value if set, zero value otherwise.
func (o *ListUpgradePathsRequest) GetSourceProductTierVersion() string {
	if o == nil || IsNil(o.SourceProductTierVersion) {
		var ret string
		return ret
	}
	return *o.SourceProductTierVersion
}

// GetSourceProductTierVersionOk returns a tuple with the SourceProductTierVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUpgradePathsRequest) GetSourceProductTierVersionOk() (*string, bool) {
	if o == nil || IsNil(o.SourceProductTierVersion) {
		return nil, false
	}
	return o.SourceProductTierVersion, true
}

// HasSourceProductTierVersion returns a boolean if a field has been set.
func (o *ListUpgradePathsRequest) HasSourceProductTierVersion() bool {
	if o != nil && !IsNil(o.SourceProductTierVersion) {
		return true
	}

	return false
}

// SetSourceProductTierVersion gets a reference to the given string and assigns it to the SourceProductTierVersion field.
func (o *ListUpgradePathsRequest) SetSourceProductTierVersion(v string) {
	o.SourceProductTierVersion = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ListUpgradePathsRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUpgradePathsRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ListUpgradePathsRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ListUpgradePathsRequest) SetStatus(v string) {
	o.Status = &v
}

// GetTargetProductTierVersion returns the TargetProductTierVersion field value if set, zero value otherwise.
func (o *ListUpgradePathsRequest) GetTargetProductTierVersion() string {
	if o == nil || IsNil(o.TargetProductTierVersion) {
		var ret string
		return ret
	}
	return *o.TargetProductTierVersion
}

// GetTargetProductTierVersionOk returns a tuple with the TargetProductTierVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUpgradePathsRequest) GetTargetProductTierVersionOk() (*string, bool) {
	if o == nil || IsNil(o.TargetProductTierVersion) {
		return nil, false
	}
	return o.TargetProductTierVersion, true
}

// HasTargetProductTierVersion returns a boolean if a field has been set.
func (o *ListUpgradePathsRequest) HasTargetProductTierVersion() bool {
	if o != nil && !IsNil(o.TargetProductTierVersion) {
		return true
	}

	return false
}

// SetTargetProductTierVersion gets a reference to the given string and assigns it to the TargetProductTierVersion field.
func (o *ListUpgradePathsRequest) SetTargetProductTierVersion(v string) {
	o.TargetProductTierVersion = &v
}

// GetToken returns the Token field value
func (o *ListUpgradePathsRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *ListUpgradePathsRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *ListUpgradePathsRequest) SetToken(v string) {
	o.Token = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ListUpgradePathsRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUpgradePathsRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ListUpgradePathsRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ListUpgradePathsRequest) SetType(v string) {
	o.Type = &v
}

func (o ListUpgradePathsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListUpgradePathsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	if !IsNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}
	toSerialize["productTierId"] = o.ProductTierId
	toSerialize["serviceId"] = o.ServiceId
	if !IsNil(o.SourceProductTierVersion) {
		toSerialize["sourceProductTierVersion"] = o.SourceProductTierVersion
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TargetProductTierVersion) {
		toSerialize["targetProductTierVersion"] = o.TargetProductTierVersion
	}
	toSerialize["token"] = o.Token
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListUpgradePathsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"productTierId",
		"serviceId",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListUpgradePathsRequest := _ListUpgradePathsRequest{}

	err = json.Unmarshal(data, &varListUpgradePathsRequest)

	if err != nil {
		return err
	}

	*o = ListUpgradePathsRequest(varListUpgradePathsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "nextPageToken")
		delete(additionalProperties, "pageSize")
		delete(additionalProperties, "productTierId")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "sourceProductTierVersion")
		delete(additionalProperties, "status")
		delete(additionalProperties, "targetProductTierVersion")
		delete(additionalProperties, "token")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListUpgradePathsRequest struct {
	value *ListUpgradePathsRequest
	isSet bool
}

func (v NullableListUpgradePathsRequest) Get() *ListUpgradePathsRequest {
	return v.value
}

func (v *NullableListUpgradePathsRequest) Set(val *ListUpgradePathsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListUpgradePathsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListUpgradePathsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUpgradePathsRequest(val *ListUpgradePathsRequest) *NullableListUpgradePathsRequest {
	return &NullableListUpgradePathsRequest{value: val, isSet: true}
}

func (v NullableListUpgradePathsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUpgradePathsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


