/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the FleetStopResourceInstanceRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FleetStopResourceInstanceRequest2{}

// FleetStopResourceInstanceRequest2 struct for FleetStopResourceInstanceRequest2
type FleetStopResourceInstanceRequest2 struct {
	// The resource ID.
	ResourceId string `json:"resourceId"`
	AdditionalProperties map[string]interface{}
}

type _FleetStopResourceInstanceRequest2 FleetStopResourceInstanceRequest2

// NewFleetStopResourceInstanceRequest2 instantiates a new FleetStopResourceInstanceRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetStopResourceInstanceRequest2(resourceId string) *FleetStopResourceInstanceRequest2 {
	this := FleetStopResourceInstanceRequest2{}
	this.ResourceId = resourceId
	return &this
}

// NewFleetStopResourceInstanceRequest2WithDefaults instantiates a new FleetStopResourceInstanceRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetStopResourceInstanceRequest2WithDefaults() *FleetStopResourceInstanceRequest2 {
	this := FleetStopResourceInstanceRequest2{}
	return &this
}

// GetResourceId returns the ResourceId field value
func (o *FleetStopResourceInstanceRequest2) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *FleetStopResourceInstanceRequest2) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *FleetStopResourceInstanceRequest2) SetResourceId(v string) {
	o.ResourceId = v
}

func (o FleetStopResourceInstanceRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FleetStopResourceInstanceRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resourceId"] = o.ResourceId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FleetStopResourceInstanceRequest2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resourceId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFleetStopResourceInstanceRequest2 := _FleetStopResourceInstanceRequest2{}

	err = json.Unmarshal(data, &varFleetStopResourceInstanceRequest2)

	if err != nil {
		return err
	}

	*o = FleetStopResourceInstanceRequest2(varFleetStopResourceInstanceRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "resourceId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFleetStopResourceInstanceRequest2 struct {
	value *FleetStopResourceInstanceRequest2
	isSet bool
}

func (v NullableFleetStopResourceInstanceRequest2) Get() *FleetStopResourceInstanceRequest2 {
	return v.value
}

func (v *NullableFleetStopResourceInstanceRequest2) Set(val *FleetStopResourceInstanceRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetStopResourceInstanceRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetStopResourceInstanceRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetStopResourceInstanceRequest2(val *FleetStopResourceInstanceRequest2) *NullableFleetStopResourceInstanceRequest2 {
	return &NullableFleetStopResourceInstanceRequest2{value: val, isSet: true}
}

func (v NullableFleetStopResourceInstanceRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetStopResourceInstanceRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


