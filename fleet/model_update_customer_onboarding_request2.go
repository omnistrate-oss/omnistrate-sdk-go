/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the UpdateCustomerOnboardingRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCustomerOnboardingRequest2{}

// UpdateCustomerOnboardingRequest2 struct for UpdateCustomerOnboardingRequest2
type UpdateCustomerOnboardingRequest2 struct {
	// The ID of the service associated with this onboarding.
	ServiceId *string `json:"serviceId,omitempty"`
	Stage *OnboardingStage `json:"stage,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateCustomerOnboardingRequest2 UpdateCustomerOnboardingRequest2

// NewUpdateCustomerOnboardingRequest2 instantiates a new UpdateCustomerOnboardingRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCustomerOnboardingRequest2() *UpdateCustomerOnboardingRequest2 {
	this := UpdateCustomerOnboardingRequest2{}
	return &this
}

// NewUpdateCustomerOnboardingRequest2WithDefaults instantiates a new UpdateCustomerOnboardingRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCustomerOnboardingRequest2WithDefaults() *UpdateCustomerOnboardingRequest2 {
	this := UpdateCustomerOnboardingRequest2{}
	return &this
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *UpdateCustomerOnboardingRequest2) GetServiceId() string {
	if o == nil || IsNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomerOnboardingRequest2) GetServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *UpdateCustomerOnboardingRequest2) HasServiceId() bool {
	if o != nil && !IsNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *UpdateCustomerOnboardingRequest2) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetStage returns the Stage field value if set, zero value otherwise.
func (o *UpdateCustomerOnboardingRequest2) GetStage() OnboardingStage {
	if o == nil || IsNil(o.Stage) {
		var ret OnboardingStage
		return ret
	}
	return *o.Stage
}

// GetStageOk returns a tuple with the Stage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomerOnboardingRequest2) GetStageOk() (*OnboardingStage, bool) {
	if o == nil || IsNil(o.Stage) {
		return nil, false
	}
	return o.Stage, true
}

// HasStage returns a boolean if a field has been set.
func (o *UpdateCustomerOnboardingRequest2) HasStage() bool {
	if o != nil && !IsNil(o.Stage) {
		return true
	}

	return false
}

// SetStage gets a reference to the given OnboardingStage and assigns it to the Stage field.
func (o *UpdateCustomerOnboardingRequest2) SetStage(v OnboardingStage) {
	o.Stage = &v
}

func (o UpdateCustomerOnboardingRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCustomerOnboardingRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServiceId) {
		toSerialize["serviceId"] = o.ServiceId
	}
	if !IsNil(o.Stage) {
		toSerialize["stage"] = o.Stage
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateCustomerOnboardingRequest2) UnmarshalJSON(data []byte) (err error) {
	varUpdateCustomerOnboardingRequest2 := _UpdateCustomerOnboardingRequest2{}

	err = json.Unmarshal(data, &varUpdateCustomerOnboardingRequest2)

	if err != nil {
		return err
	}

	*o = UpdateCustomerOnboardingRequest2(varUpdateCustomerOnboardingRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "stage")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateCustomerOnboardingRequest2 struct {
	value *UpdateCustomerOnboardingRequest2
	isSet bool
}

func (v NullableUpdateCustomerOnboardingRequest2) Get() *UpdateCustomerOnboardingRequest2 {
	return v.value
}

func (v *NullableUpdateCustomerOnboardingRequest2) Set(val *UpdateCustomerOnboardingRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCustomerOnboardingRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCustomerOnboardingRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCustomerOnboardingRequest2(val *UpdateCustomerOnboardingRequest2) *NullableUpdateCustomerOnboardingRequest2 {
	return &NullableUpdateCustomerOnboardingRequest2{value: val, isSet: true}
}

func (v NullableUpdateCustomerOnboardingRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCustomerOnboardingRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


