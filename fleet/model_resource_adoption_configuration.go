/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the ResourceAdoptionConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceAdoptionConfiguration{}

// ResourceAdoptionConfiguration struct for ResourceAdoptionConfiguration
type ResourceAdoptionConfiguration struct {
	HelmAdoptionConfiguration *HelmAdoptionConfiguration `json:"helmAdoptionConfiguration,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ResourceAdoptionConfiguration ResourceAdoptionConfiguration

// NewResourceAdoptionConfiguration instantiates a new ResourceAdoptionConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceAdoptionConfiguration() *ResourceAdoptionConfiguration {
	this := ResourceAdoptionConfiguration{}
	return &this
}

// NewResourceAdoptionConfigurationWithDefaults instantiates a new ResourceAdoptionConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceAdoptionConfigurationWithDefaults() *ResourceAdoptionConfiguration {
	this := ResourceAdoptionConfiguration{}
	return &this
}

// GetHelmAdoptionConfiguration returns the HelmAdoptionConfiguration field value if set, zero value otherwise.
func (o *ResourceAdoptionConfiguration) GetHelmAdoptionConfiguration() HelmAdoptionConfiguration {
	if o == nil || IsNil(o.HelmAdoptionConfiguration) {
		var ret HelmAdoptionConfiguration
		return ret
	}
	return *o.HelmAdoptionConfiguration
}

// GetHelmAdoptionConfigurationOk returns a tuple with the HelmAdoptionConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceAdoptionConfiguration) GetHelmAdoptionConfigurationOk() (*HelmAdoptionConfiguration, bool) {
	if o == nil || IsNil(o.HelmAdoptionConfiguration) {
		return nil, false
	}
	return o.HelmAdoptionConfiguration, true
}

// HasHelmAdoptionConfiguration returns a boolean if a field has been set.
func (o *ResourceAdoptionConfiguration) HasHelmAdoptionConfiguration() bool {
	if o != nil && !IsNil(o.HelmAdoptionConfiguration) {
		return true
	}

	return false
}

// SetHelmAdoptionConfiguration gets a reference to the given HelmAdoptionConfiguration and assigns it to the HelmAdoptionConfiguration field.
func (o *ResourceAdoptionConfiguration) SetHelmAdoptionConfiguration(v HelmAdoptionConfiguration) {
	o.HelmAdoptionConfiguration = &v
}

func (o ResourceAdoptionConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceAdoptionConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HelmAdoptionConfiguration) {
		toSerialize["helmAdoptionConfiguration"] = o.HelmAdoptionConfiguration
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResourceAdoptionConfiguration) UnmarshalJSON(data []byte) (err error) {
	varResourceAdoptionConfiguration := _ResourceAdoptionConfiguration{}

	err = json.Unmarshal(data, &varResourceAdoptionConfiguration)

	if err != nil {
		return err
	}

	*o = ResourceAdoptionConfiguration(varResourceAdoptionConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "helmAdoptionConfiguration")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResourceAdoptionConfiguration struct {
	value *ResourceAdoptionConfiguration
	isSet bool
}

func (v NullableResourceAdoptionConfiguration) Get() *ResourceAdoptionConfiguration {
	return v.value
}

func (v *NullableResourceAdoptionConfiguration) Set(val *ResourceAdoptionConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceAdoptionConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceAdoptionConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceAdoptionConfiguration(val *ResourceAdoptionConfiguration) *NullableResourceAdoptionConfiguration {
	return &NullableResourceAdoptionConfiguration{value: val, isSet: true}
}

func (v NullableResourceAdoptionConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceAdoptionConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


