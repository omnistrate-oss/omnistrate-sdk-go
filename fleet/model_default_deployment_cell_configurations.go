/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the DefaultDeploymentCellConfigurations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DefaultDeploymentCellConfigurations{}

// DefaultDeploymentCellConfigurations struct for DefaultDeploymentCellConfigurations
type DefaultDeploymentCellConfigurations struct {
	// The default deployment cell configurations per cloud provider.
	PerCloudProviderDeploymentCellConfiguration map[string]interface{} `json:"PerCloudProviderDeploymentCellConfiguration,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DefaultDeploymentCellConfigurations DefaultDeploymentCellConfigurations

// NewDefaultDeploymentCellConfigurations instantiates a new DefaultDeploymentCellConfigurations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefaultDeploymentCellConfigurations() *DefaultDeploymentCellConfigurations {
	this := DefaultDeploymentCellConfigurations{}
	return &this
}

// NewDefaultDeploymentCellConfigurationsWithDefaults instantiates a new DefaultDeploymentCellConfigurations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefaultDeploymentCellConfigurationsWithDefaults() *DefaultDeploymentCellConfigurations {
	this := DefaultDeploymentCellConfigurations{}
	return &this
}

// GetPerCloudProviderDeploymentCellConfiguration returns the PerCloudProviderDeploymentCellConfiguration field value if set, zero value otherwise.
func (o *DefaultDeploymentCellConfigurations) GetPerCloudProviderDeploymentCellConfiguration() map[string]interface{} {
	if o == nil || IsNil(o.PerCloudProviderDeploymentCellConfiguration) {
		var ret map[string]interface{}
		return ret
	}
	return o.PerCloudProviderDeploymentCellConfiguration
}

// GetPerCloudProviderDeploymentCellConfigurationOk returns a tuple with the PerCloudProviderDeploymentCellConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultDeploymentCellConfigurations) GetPerCloudProviderDeploymentCellConfigurationOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.PerCloudProviderDeploymentCellConfiguration) {
		return map[string]interface{}{}, false
	}
	return o.PerCloudProviderDeploymentCellConfiguration, true
}

// HasPerCloudProviderDeploymentCellConfiguration returns a boolean if a field has been set.
func (o *DefaultDeploymentCellConfigurations) HasPerCloudProviderDeploymentCellConfiguration() bool {
	if o != nil && !IsNil(o.PerCloudProviderDeploymentCellConfiguration) {
		return true
	}

	return false
}

// SetPerCloudProviderDeploymentCellConfiguration gets a reference to the given map[string]interface{} and assigns it to the PerCloudProviderDeploymentCellConfiguration field.
func (o *DefaultDeploymentCellConfigurations) SetPerCloudProviderDeploymentCellConfiguration(v map[string]interface{}) {
	o.PerCloudProviderDeploymentCellConfiguration = v
}

func (o DefaultDeploymentCellConfigurations) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DefaultDeploymentCellConfigurations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PerCloudProviderDeploymentCellConfiguration) {
		toSerialize["PerCloudProviderDeploymentCellConfiguration"] = o.PerCloudProviderDeploymentCellConfiguration
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DefaultDeploymentCellConfigurations) UnmarshalJSON(data []byte) (err error) {
	varDefaultDeploymentCellConfigurations := _DefaultDeploymentCellConfigurations{}

	err = json.Unmarshal(data, &varDefaultDeploymentCellConfigurations)

	if err != nil {
		return err
	}

	*o = DefaultDeploymentCellConfigurations(varDefaultDeploymentCellConfigurations)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "PerCloudProviderDeploymentCellConfiguration")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDefaultDeploymentCellConfigurations struct {
	value *DefaultDeploymentCellConfigurations
	isSet bool
}

func (v NullableDefaultDeploymentCellConfigurations) Get() *DefaultDeploymentCellConfigurations {
	return v.value
}

func (v *NullableDefaultDeploymentCellConfigurations) Set(val *DefaultDeploymentCellConfigurations) {
	v.value = val
	v.isSet = true
}

func (v NullableDefaultDeploymentCellConfigurations) IsSet() bool {
	return v.isSet
}

func (v *NullableDefaultDeploymentCellConfigurations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefaultDeploymentCellConfigurations(val *DefaultDeploymentCellConfigurations) *NullableDefaultDeploymentCellConfigurations {
	return &NullableDefaultDeploymentCellConfigurations{value: val, isSet: true}
}

func (v NullableDefaultDeploymentCellConfigurations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefaultDeploymentCellConfigurations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


