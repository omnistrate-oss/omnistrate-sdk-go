/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ResourceSearchRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceSearchRecord{}

// ResourceSearchRecord struct for ResourceSearchRecord
type ResourceSearchRecord struct {
	// The resource description.
	Description string `json:"description"`
	// The Resource ID.
	Id string `json:"id"`
	// The resource name.
	Name string `json:"name"`
	// The product tier ID of the resource.
	ProductTierId string `json:"productTierId"`
	// The product tier name of the resource.
	ProductTierName string `json:"productTierName"`
	ResourceType *string `json:"resourceType,omitempty"`
	// The service API ID of the resource.
	ServiceApiId string `json:"serviceApiId"`
	// The service environment ID of the resource.
	ServiceEnvironmentId string `json:"serviceEnvironmentId"`
	// The service environment name of the resource.
	ServiceEnvironmentName string `json:"serviceEnvironmentName"`
	// The service environment type of the resource.
	ServiceEnvironmentType *string `json:"serviceEnvironmentType,omitempty"`
	// The service ID of the resource.
	ServiceId string `json:"serviceId"`
	// The service model ID of the resource.
	ServiceModelId string `json:"serviceModelId"`
	// The service name of the resource.
	ServiceName string `json:"serviceName"`
}

type _ResourceSearchRecord ResourceSearchRecord

// NewResourceSearchRecord instantiates a new ResourceSearchRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceSearchRecord(description string, id string, name string, productTierId string, productTierName string, serviceApiId string, serviceEnvironmentId string, serviceEnvironmentName string, serviceId string, serviceModelId string, serviceName string) *ResourceSearchRecord {
	this := ResourceSearchRecord{}
	this.Description = description
	this.Id = id
	this.Name = name
	this.ProductTierId = productTierId
	this.ProductTierName = productTierName
	this.ServiceApiId = serviceApiId
	this.ServiceEnvironmentId = serviceEnvironmentId
	this.ServiceEnvironmentName = serviceEnvironmentName
	this.ServiceId = serviceId
	this.ServiceModelId = serviceModelId
	this.ServiceName = serviceName
	return &this
}

// NewResourceSearchRecordWithDefaults instantiates a new ResourceSearchRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceSearchRecordWithDefaults() *ResourceSearchRecord {
	this := ResourceSearchRecord{}
	return &this
}

// GetDescription returns the Description field value
func (o *ResourceSearchRecord) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ResourceSearchRecord) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ResourceSearchRecord) SetDescription(v string) {
	o.Description = v
}

// GetId returns the Id field value
func (o *ResourceSearchRecord) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ResourceSearchRecord) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ResourceSearchRecord) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ResourceSearchRecord) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ResourceSearchRecord) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ResourceSearchRecord) SetName(v string) {
	o.Name = v
}

// GetProductTierId returns the ProductTierId field value
func (o *ResourceSearchRecord) GetProductTierId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductTierId
}

// GetProductTierIdOk returns a tuple with the ProductTierId field value
// and a boolean to check if the value has been set.
func (o *ResourceSearchRecord) GetProductTierIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductTierId, true
}

// SetProductTierId sets field value
func (o *ResourceSearchRecord) SetProductTierId(v string) {
	o.ProductTierId = v
}

// GetProductTierName returns the ProductTierName field value
func (o *ResourceSearchRecord) GetProductTierName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductTierName
}

// GetProductTierNameOk returns a tuple with the ProductTierName field value
// and a boolean to check if the value has been set.
func (o *ResourceSearchRecord) GetProductTierNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductTierName, true
}

// SetProductTierName sets field value
func (o *ResourceSearchRecord) SetProductTierName(v string) {
	o.ProductTierName = v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *ResourceSearchRecord) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType) {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceSearchRecord) GetResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *ResourceSearchRecord) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *ResourceSearchRecord) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetServiceApiId returns the ServiceApiId field value
func (o *ResourceSearchRecord) GetServiceApiId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceApiId
}

// GetServiceApiIdOk returns a tuple with the ServiceApiId field value
// and a boolean to check if the value has been set.
func (o *ResourceSearchRecord) GetServiceApiIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceApiId, true
}

// SetServiceApiId sets field value
func (o *ResourceSearchRecord) SetServiceApiId(v string) {
	o.ServiceApiId = v
}

// GetServiceEnvironmentId returns the ServiceEnvironmentId field value
func (o *ResourceSearchRecord) GetServiceEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceEnvironmentId
}

// GetServiceEnvironmentIdOk returns a tuple with the ServiceEnvironmentId field value
// and a boolean to check if the value has been set.
func (o *ResourceSearchRecord) GetServiceEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceEnvironmentId, true
}

// SetServiceEnvironmentId sets field value
func (o *ResourceSearchRecord) SetServiceEnvironmentId(v string) {
	o.ServiceEnvironmentId = v
}

// GetServiceEnvironmentName returns the ServiceEnvironmentName field value
func (o *ResourceSearchRecord) GetServiceEnvironmentName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceEnvironmentName
}

// GetServiceEnvironmentNameOk returns a tuple with the ServiceEnvironmentName field value
// and a boolean to check if the value has been set.
func (o *ResourceSearchRecord) GetServiceEnvironmentNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceEnvironmentName, true
}

// SetServiceEnvironmentName sets field value
func (o *ResourceSearchRecord) SetServiceEnvironmentName(v string) {
	o.ServiceEnvironmentName = v
}

// GetServiceEnvironmentType returns the ServiceEnvironmentType field value if set, zero value otherwise.
func (o *ResourceSearchRecord) GetServiceEnvironmentType() string {
	if o == nil || IsNil(o.ServiceEnvironmentType) {
		var ret string
		return ret
	}
	return *o.ServiceEnvironmentType
}

// GetServiceEnvironmentTypeOk returns a tuple with the ServiceEnvironmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceSearchRecord) GetServiceEnvironmentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceEnvironmentType) {
		return nil, false
	}
	return o.ServiceEnvironmentType, true
}

// HasServiceEnvironmentType returns a boolean if a field has been set.
func (o *ResourceSearchRecord) HasServiceEnvironmentType() bool {
	if o != nil && !IsNil(o.ServiceEnvironmentType) {
		return true
	}

	return false
}

// SetServiceEnvironmentType gets a reference to the given string and assigns it to the ServiceEnvironmentType field.
func (o *ResourceSearchRecord) SetServiceEnvironmentType(v string) {
	o.ServiceEnvironmentType = &v
}

// GetServiceId returns the ServiceId field value
func (o *ResourceSearchRecord) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *ResourceSearchRecord) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *ResourceSearchRecord) SetServiceId(v string) {
	o.ServiceId = v
}

// GetServiceModelId returns the ServiceModelId field value
func (o *ResourceSearchRecord) GetServiceModelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceModelId
}

// GetServiceModelIdOk returns a tuple with the ServiceModelId field value
// and a boolean to check if the value has been set.
func (o *ResourceSearchRecord) GetServiceModelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceModelId, true
}

// SetServiceModelId sets field value
func (o *ResourceSearchRecord) SetServiceModelId(v string) {
	o.ServiceModelId = v
}

// GetServiceName returns the ServiceName field value
func (o *ResourceSearchRecord) GetServiceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value
// and a boolean to check if the value has been set.
func (o *ResourceSearchRecord) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceName, true
}

// SetServiceName sets field value
func (o *ResourceSearchRecord) SetServiceName(v string) {
	o.ServiceName = v
}

func (o ResourceSearchRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceSearchRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["productTierId"] = o.ProductTierId
	toSerialize["productTierName"] = o.ProductTierName
	if !IsNil(o.ResourceType) {
		toSerialize["resourceType"] = o.ResourceType
	}
	toSerialize["serviceApiId"] = o.ServiceApiId
	toSerialize["serviceEnvironmentId"] = o.ServiceEnvironmentId
	toSerialize["serviceEnvironmentName"] = o.ServiceEnvironmentName
	if !IsNil(o.ServiceEnvironmentType) {
		toSerialize["serviceEnvironmentType"] = o.ServiceEnvironmentType
	}
	toSerialize["serviceId"] = o.ServiceId
	toSerialize["serviceModelId"] = o.ServiceModelId
	toSerialize["serviceName"] = o.ServiceName
	return toSerialize, nil
}

func (o *ResourceSearchRecord) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"id",
		"name",
		"productTierId",
		"productTierName",
		"serviceApiId",
		"serviceEnvironmentId",
		"serviceEnvironmentName",
		"serviceId",
		"serviceModelId",
		"serviceName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResourceSearchRecord := _ResourceSearchRecord{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResourceSearchRecord)

	if err != nil {
		return err
	}

	*o = ResourceSearchRecord(varResourceSearchRecord)

	return err
}

type NullableResourceSearchRecord struct {
	value *ResourceSearchRecord
	isSet bool
}

func (v NullableResourceSearchRecord) Get() *ResourceSearchRecord {
	return v.value
}

func (v *NullableResourceSearchRecord) Set(val *ResourceSearchRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceSearchRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceSearchRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceSearchRecord(val *ResourceSearchRecord) *NullableResourceSearchRecord {
	return &NullableResourceSearchRecord{value: val, isSet: true}
}

func (v NullableResourceSearchRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceSearchRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


