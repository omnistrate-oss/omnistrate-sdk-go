/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateProductTierBillingPlanRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProductTierBillingPlanRequest{}

// CreateProductTierBillingPlanRequest struct for CreateProductTierBillingPlanRequest
type CreateProductTierBillingPlanRequest struct {
	// Allow creates when payment not configured
	AllowCreatesWhenPaymentNotConfigured bool `json:"allowCreatesWhenPaymentNotConfigured"`
	// ID of a Product Tier
	Id string `json:"id"`
	// Maximum number of instances
	MaxNumberofInstances int64 `json:"maxNumberofInstances"`
	// Plan name
	PlanName string `json:"planName"`
	// Pricing in dollars.
	Pricing interface{} `json:"pricing"`
	// ID of a Service
	ServiceId string `json:"serviceId"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _CreateProductTierBillingPlanRequest CreateProductTierBillingPlanRequest

// NewCreateProductTierBillingPlanRequest instantiates a new CreateProductTierBillingPlanRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProductTierBillingPlanRequest(allowCreatesWhenPaymentNotConfigured bool, id string, maxNumberofInstances int64, planName string, pricing interface{}, serviceId string, token string) *CreateProductTierBillingPlanRequest {
	this := CreateProductTierBillingPlanRequest{}
	this.AllowCreatesWhenPaymentNotConfigured = allowCreatesWhenPaymentNotConfigured
	this.Id = id
	this.MaxNumberofInstances = maxNumberofInstances
	this.PlanName = planName
	this.Pricing = pricing
	this.ServiceId = serviceId
	this.Token = token
	return &this
}

// NewCreateProductTierBillingPlanRequestWithDefaults instantiates a new CreateProductTierBillingPlanRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProductTierBillingPlanRequestWithDefaults() *CreateProductTierBillingPlanRequest {
	this := CreateProductTierBillingPlanRequest{}
	return &this
}

// GetAllowCreatesWhenPaymentNotConfigured returns the AllowCreatesWhenPaymentNotConfigured field value
func (o *CreateProductTierBillingPlanRequest) GetAllowCreatesWhenPaymentNotConfigured() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowCreatesWhenPaymentNotConfigured
}

// GetAllowCreatesWhenPaymentNotConfiguredOk returns a tuple with the AllowCreatesWhenPaymentNotConfigured field value
// and a boolean to check if the value has been set.
func (o *CreateProductTierBillingPlanRequest) GetAllowCreatesWhenPaymentNotConfiguredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowCreatesWhenPaymentNotConfigured, true
}

// SetAllowCreatesWhenPaymentNotConfigured sets field value
func (o *CreateProductTierBillingPlanRequest) SetAllowCreatesWhenPaymentNotConfigured(v bool) {
	o.AllowCreatesWhenPaymentNotConfigured = v
}

// GetId returns the Id field value
func (o *CreateProductTierBillingPlanRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateProductTierBillingPlanRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateProductTierBillingPlanRequest) SetId(v string) {
	o.Id = v
}

// GetMaxNumberofInstances returns the MaxNumberofInstances field value
func (o *CreateProductTierBillingPlanRequest) GetMaxNumberofInstances() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MaxNumberofInstances
}

// GetMaxNumberofInstancesOk returns a tuple with the MaxNumberofInstances field value
// and a boolean to check if the value has been set.
func (o *CreateProductTierBillingPlanRequest) GetMaxNumberofInstancesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxNumberofInstances, true
}

// SetMaxNumberofInstances sets field value
func (o *CreateProductTierBillingPlanRequest) SetMaxNumberofInstances(v int64) {
	o.MaxNumberofInstances = v
}

// GetPlanName returns the PlanName field value
func (o *CreateProductTierBillingPlanRequest) GetPlanName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value
// and a boolean to check if the value has been set.
func (o *CreateProductTierBillingPlanRequest) GetPlanNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlanName, true
}

// SetPlanName sets field value
func (o *CreateProductTierBillingPlanRequest) SetPlanName(v string) {
	o.PlanName = v
}

// GetPricing returns the Pricing field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *CreateProductTierBillingPlanRequest) GetPricing() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Pricing
}

// GetPricingOk returns a tuple with the Pricing field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProductTierBillingPlanRequest) GetPricingOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Pricing) {
		return nil, false
	}
	return &o.Pricing, true
}

// SetPricing sets field value
func (o *CreateProductTierBillingPlanRequest) SetPricing(v interface{}) {
	o.Pricing = v
}

// GetServiceId returns the ServiceId field value
func (o *CreateProductTierBillingPlanRequest) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *CreateProductTierBillingPlanRequest) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *CreateProductTierBillingPlanRequest) SetServiceId(v string) {
	o.ServiceId = v
}

// GetToken returns the Token field value
func (o *CreateProductTierBillingPlanRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *CreateProductTierBillingPlanRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *CreateProductTierBillingPlanRequest) SetToken(v string) {
	o.Token = v
}

func (o CreateProductTierBillingPlanRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProductTierBillingPlanRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["allowCreatesWhenPaymentNotConfigured"] = o.AllowCreatesWhenPaymentNotConfigured
	toSerialize["id"] = o.Id
	toSerialize["maxNumberofInstances"] = o.MaxNumberofInstances
	toSerialize["planName"] = o.PlanName
	if o.Pricing != nil {
		toSerialize["pricing"] = o.Pricing
	}
	toSerialize["serviceId"] = o.ServiceId
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateProductTierBillingPlanRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"allowCreatesWhenPaymentNotConfigured",
		"id",
		"maxNumberofInstances",
		"planName",
		"pricing",
		"serviceId",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateProductTierBillingPlanRequest := _CreateProductTierBillingPlanRequest{}

	err = json.Unmarshal(data, &varCreateProductTierBillingPlanRequest)

	if err != nil {
		return err
	}

	*o = CreateProductTierBillingPlanRequest(varCreateProductTierBillingPlanRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "allowCreatesWhenPaymentNotConfigured")
		delete(additionalProperties, "id")
		delete(additionalProperties, "maxNumberofInstances")
		delete(additionalProperties, "planName")
		delete(additionalProperties, "pricing")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateProductTierBillingPlanRequest struct {
	value *CreateProductTierBillingPlanRequest
	isSet bool
}

func (v NullableCreateProductTierBillingPlanRequest) Get() *CreateProductTierBillingPlanRequest {
	return v.value
}

func (v *NullableCreateProductTierBillingPlanRequest) Set(val *CreateProductTierBillingPlanRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProductTierBillingPlanRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProductTierBillingPlanRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProductTierBillingPlanRequest(val *CreateProductTierBillingPlanRequest) *NullableCreateProductTierBillingPlanRequest {
	return &NullableCreateProductTierBillingPlanRequest{value: val, isSet: true}
}

func (v NullableCreateProductTierBillingPlanRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProductTierBillingPlanRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


