/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the AdoptResourceInstanceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdoptResourceInstanceRequest{}

// AdoptResourceInstanceRequest struct for AdoptResourceInstanceRequest
type AdoptResourceInstanceRequest struct {
	// The host cluster ID or key
	HostClusterID string `json:"hostClusterID"`
	// The primary resource key to adopt. This is the top-level resource that will be managed by Omnistrate.
	PrimaryResourceKey string `json:"primaryResourceKey"`
	// The resource adoption configuration
	ResourceAdoptionConfiguration *map[string]ResourceAdoptionConfiguration `json:"resourceAdoptionConfiguration,omitempty"`
	// ID of a Service
	ServiceID string `json:"serviceID"`
	// ID of a Product Tier
	ServicePlanID string `json:"servicePlanID"`
	// The service plan version
	ServicePlanVersion *string `json:"servicePlanVersion,omitempty"`
	// ID of a Subscription
	SubscriptionID *string `json:"subscriptionID,omitempty"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _AdoptResourceInstanceRequest AdoptResourceInstanceRequest

// NewAdoptResourceInstanceRequest instantiates a new AdoptResourceInstanceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdoptResourceInstanceRequest(hostClusterID string, primaryResourceKey string, serviceID string, servicePlanID string, token string) *AdoptResourceInstanceRequest {
	this := AdoptResourceInstanceRequest{}
	this.HostClusterID = hostClusterID
	this.PrimaryResourceKey = primaryResourceKey
	this.ServiceID = serviceID
	this.ServicePlanID = servicePlanID
	this.Token = token
	return &this
}

// NewAdoptResourceInstanceRequestWithDefaults instantiates a new AdoptResourceInstanceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdoptResourceInstanceRequestWithDefaults() *AdoptResourceInstanceRequest {
	this := AdoptResourceInstanceRequest{}
	return &this
}

// GetHostClusterID returns the HostClusterID field value
func (o *AdoptResourceInstanceRequest) GetHostClusterID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HostClusterID
}

// GetHostClusterIDOk returns a tuple with the HostClusterID field value
// and a boolean to check if the value has been set.
func (o *AdoptResourceInstanceRequest) GetHostClusterIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HostClusterID, true
}

// SetHostClusterID sets field value
func (o *AdoptResourceInstanceRequest) SetHostClusterID(v string) {
	o.HostClusterID = v
}

// GetPrimaryResourceKey returns the PrimaryResourceKey field value
func (o *AdoptResourceInstanceRequest) GetPrimaryResourceKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrimaryResourceKey
}

// GetPrimaryResourceKeyOk returns a tuple with the PrimaryResourceKey field value
// and a boolean to check if the value has been set.
func (o *AdoptResourceInstanceRequest) GetPrimaryResourceKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrimaryResourceKey, true
}

// SetPrimaryResourceKey sets field value
func (o *AdoptResourceInstanceRequest) SetPrimaryResourceKey(v string) {
	o.PrimaryResourceKey = v
}

// GetResourceAdoptionConfiguration returns the ResourceAdoptionConfiguration field value if set, zero value otherwise.
func (o *AdoptResourceInstanceRequest) GetResourceAdoptionConfiguration() map[string]ResourceAdoptionConfiguration {
	if o == nil || IsNil(o.ResourceAdoptionConfiguration) {
		var ret map[string]ResourceAdoptionConfiguration
		return ret
	}
	return *o.ResourceAdoptionConfiguration
}

// GetResourceAdoptionConfigurationOk returns a tuple with the ResourceAdoptionConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdoptResourceInstanceRequest) GetResourceAdoptionConfigurationOk() (*map[string]ResourceAdoptionConfiguration, bool) {
	if o == nil || IsNil(o.ResourceAdoptionConfiguration) {
		return nil, false
	}
	return o.ResourceAdoptionConfiguration, true
}

// HasResourceAdoptionConfiguration returns a boolean if a field has been set.
func (o *AdoptResourceInstanceRequest) HasResourceAdoptionConfiguration() bool {
	if o != nil && !IsNil(o.ResourceAdoptionConfiguration) {
		return true
	}

	return false
}

// SetResourceAdoptionConfiguration gets a reference to the given map[string]ResourceAdoptionConfiguration and assigns it to the ResourceAdoptionConfiguration field.
func (o *AdoptResourceInstanceRequest) SetResourceAdoptionConfiguration(v map[string]ResourceAdoptionConfiguration) {
	o.ResourceAdoptionConfiguration = &v
}

// GetServiceID returns the ServiceID field value
func (o *AdoptResourceInstanceRequest) GetServiceID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceID
}

// GetServiceIDOk returns a tuple with the ServiceID field value
// and a boolean to check if the value has been set.
func (o *AdoptResourceInstanceRequest) GetServiceIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceID, true
}

// SetServiceID sets field value
func (o *AdoptResourceInstanceRequest) SetServiceID(v string) {
	o.ServiceID = v
}

// GetServicePlanID returns the ServicePlanID field value
func (o *AdoptResourceInstanceRequest) GetServicePlanID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServicePlanID
}

// GetServicePlanIDOk returns a tuple with the ServicePlanID field value
// and a boolean to check if the value has been set.
func (o *AdoptResourceInstanceRequest) GetServicePlanIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServicePlanID, true
}

// SetServicePlanID sets field value
func (o *AdoptResourceInstanceRequest) SetServicePlanID(v string) {
	o.ServicePlanID = v
}

// GetServicePlanVersion returns the ServicePlanVersion field value if set, zero value otherwise.
func (o *AdoptResourceInstanceRequest) GetServicePlanVersion() string {
	if o == nil || IsNil(o.ServicePlanVersion) {
		var ret string
		return ret
	}
	return *o.ServicePlanVersion
}

// GetServicePlanVersionOk returns a tuple with the ServicePlanVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdoptResourceInstanceRequest) GetServicePlanVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ServicePlanVersion) {
		return nil, false
	}
	return o.ServicePlanVersion, true
}

// HasServicePlanVersion returns a boolean if a field has been set.
func (o *AdoptResourceInstanceRequest) HasServicePlanVersion() bool {
	if o != nil && !IsNil(o.ServicePlanVersion) {
		return true
	}

	return false
}

// SetServicePlanVersion gets a reference to the given string and assigns it to the ServicePlanVersion field.
func (o *AdoptResourceInstanceRequest) SetServicePlanVersion(v string) {
	o.ServicePlanVersion = &v
}

// GetSubscriptionID returns the SubscriptionID field value if set, zero value otherwise.
func (o *AdoptResourceInstanceRequest) GetSubscriptionID() string {
	if o == nil || IsNil(o.SubscriptionID) {
		var ret string
		return ret
	}
	return *o.SubscriptionID
}

// GetSubscriptionIDOk returns a tuple with the SubscriptionID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdoptResourceInstanceRequest) GetSubscriptionIDOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionID) {
		return nil, false
	}
	return o.SubscriptionID, true
}

// HasSubscriptionID returns a boolean if a field has been set.
func (o *AdoptResourceInstanceRequest) HasSubscriptionID() bool {
	if o != nil && !IsNil(o.SubscriptionID) {
		return true
	}

	return false
}

// SetSubscriptionID gets a reference to the given string and assigns it to the SubscriptionID field.
func (o *AdoptResourceInstanceRequest) SetSubscriptionID(v string) {
	o.SubscriptionID = &v
}

// GetToken returns the Token field value
func (o *AdoptResourceInstanceRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *AdoptResourceInstanceRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *AdoptResourceInstanceRequest) SetToken(v string) {
	o.Token = v
}

func (o AdoptResourceInstanceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdoptResourceInstanceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hostClusterID"] = o.HostClusterID
	toSerialize["primaryResourceKey"] = o.PrimaryResourceKey
	if !IsNil(o.ResourceAdoptionConfiguration) {
		toSerialize["resourceAdoptionConfiguration"] = o.ResourceAdoptionConfiguration
	}
	toSerialize["serviceID"] = o.ServiceID
	toSerialize["servicePlanID"] = o.ServicePlanID
	if !IsNil(o.ServicePlanVersion) {
		toSerialize["servicePlanVersion"] = o.ServicePlanVersion
	}
	if !IsNil(o.SubscriptionID) {
		toSerialize["subscriptionID"] = o.SubscriptionID
	}
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AdoptResourceInstanceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hostClusterID",
		"primaryResourceKey",
		"serviceID",
		"servicePlanID",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAdoptResourceInstanceRequest := _AdoptResourceInstanceRequest{}

	err = json.Unmarshal(data, &varAdoptResourceInstanceRequest)

	if err != nil {
		return err
	}

	*o = AdoptResourceInstanceRequest(varAdoptResourceInstanceRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "hostClusterID")
		delete(additionalProperties, "primaryResourceKey")
		delete(additionalProperties, "resourceAdoptionConfiguration")
		delete(additionalProperties, "serviceID")
		delete(additionalProperties, "servicePlanID")
		delete(additionalProperties, "servicePlanVersion")
		delete(additionalProperties, "subscriptionID")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAdoptResourceInstanceRequest struct {
	value *AdoptResourceInstanceRequest
	isSet bool
}

func (v NullableAdoptResourceInstanceRequest) Get() *AdoptResourceInstanceRequest {
	return v.value
}

func (v *NullableAdoptResourceInstanceRequest) Set(val *AdoptResourceInstanceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAdoptResourceInstanceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAdoptResourceInstanceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdoptResourceInstanceRequest(val *AdoptResourceInstanceRequest) *NullableAdoptResourceInstanceRequest {
	return &NullableAdoptResourceInstanceRequest{value: val, isSet: true}
}

func (v NullableAdoptResourceInstanceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdoptResourceInstanceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


