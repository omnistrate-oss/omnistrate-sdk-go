/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the FleetFailoverResourceInstanceRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FleetFailoverResourceInstanceRequest2{}

// FleetFailoverResourceInstanceRequest2 struct for FleetFailoverResourceInstanceRequest2
type FleetFailoverResourceInstanceRequest2 struct {
	// The failed replica action
	FailedReplicaAction *string `json:"failedReplicaAction,omitempty"`
	// The failed replica ID
	FailedReplicaID string `json:"failedReplicaID"`
	AdditionalProperties map[string]interface{}
}

type _FleetFailoverResourceInstanceRequest2 FleetFailoverResourceInstanceRequest2

// NewFleetFailoverResourceInstanceRequest2 instantiates a new FleetFailoverResourceInstanceRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetFailoverResourceInstanceRequest2(failedReplicaID string) *FleetFailoverResourceInstanceRequest2 {
	this := FleetFailoverResourceInstanceRequest2{}
	this.FailedReplicaID = failedReplicaID
	return &this
}

// NewFleetFailoverResourceInstanceRequest2WithDefaults instantiates a new FleetFailoverResourceInstanceRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetFailoverResourceInstanceRequest2WithDefaults() *FleetFailoverResourceInstanceRequest2 {
	this := FleetFailoverResourceInstanceRequest2{}
	return &this
}

// GetFailedReplicaAction returns the FailedReplicaAction field value if set, zero value otherwise.
func (o *FleetFailoverResourceInstanceRequest2) GetFailedReplicaAction() string {
	if o == nil || IsNil(o.FailedReplicaAction) {
		var ret string
		return ret
	}
	return *o.FailedReplicaAction
}

// GetFailedReplicaActionOk returns a tuple with the FailedReplicaAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetFailoverResourceInstanceRequest2) GetFailedReplicaActionOk() (*string, bool) {
	if o == nil || IsNil(o.FailedReplicaAction) {
		return nil, false
	}
	return o.FailedReplicaAction, true
}

// HasFailedReplicaAction returns a boolean if a field has been set.
func (o *FleetFailoverResourceInstanceRequest2) HasFailedReplicaAction() bool {
	if o != nil && !IsNil(o.FailedReplicaAction) {
		return true
	}

	return false
}

// SetFailedReplicaAction gets a reference to the given string and assigns it to the FailedReplicaAction field.
func (o *FleetFailoverResourceInstanceRequest2) SetFailedReplicaAction(v string) {
	o.FailedReplicaAction = &v
}

// GetFailedReplicaID returns the FailedReplicaID field value
func (o *FleetFailoverResourceInstanceRequest2) GetFailedReplicaID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FailedReplicaID
}

// GetFailedReplicaIDOk returns a tuple with the FailedReplicaID field value
// and a boolean to check if the value has been set.
func (o *FleetFailoverResourceInstanceRequest2) GetFailedReplicaIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailedReplicaID, true
}

// SetFailedReplicaID sets field value
func (o *FleetFailoverResourceInstanceRequest2) SetFailedReplicaID(v string) {
	o.FailedReplicaID = v
}

func (o FleetFailoverResourceInstanceRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FleetFailoverResourceInstanceRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FailedReplicaAction) {
		toSerialize["failedReplicaAction"] = o.FailedReplicaAction
	}
	toSerialize["failedReplicaID"] = o.FailedReplicaID

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FleetFailoverResourceInstanceRequest2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"failedReplicaID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFleetFailoverResourceInstanceRequest2 := _FleetFailoverResourceInstanceRequest2{}

	err = json.Unmarshal(data, &varFleetFailoverResourceInstanceRequest2)

	if err != nil {
		return err
	}

	*o = FleetFailoverResourceInstanceRequest2(varFleetFailoverResourceInstanceRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "failedReplicaAction")
		delete(additionalProperties, "failedReplicaID")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFleetFailoverResourceInstanceRequest2 struct {
	value *FleetFailoverResourceInstanceRequest2
	isSet bool
}

func (v NullableFleetFailoverResourceInstanceRequest2) Get() *FleetFailoverResourceInstanceRequest2 {
	return v.value
}

func (v *NullableFleetFailoverResourceInstanceRequest2) Set(val *FleetFailoverResourceInstanceRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetFailoverResourceInstanceRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetFailoverResourceInstanceRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetFailoverResourceInstanceRequest2(val *FleetFailoverResourceInstanceRequest2) *NullableFleetFailoverResourceInstanceRequest2 {
	return &NullableFleetFailoverResourceInstanceRequest2{value: val, isSet: true}
}

func (v NullableFleetFailoverResourceInstanceRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetFailoverResourceInstanceRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


