/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the DescribeResourceInstanceInstallerResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribeResourceInstanceInstallerResult{}

// DescribeResourceInstanceInstallerResult struct for DescribeResourceInstanceInstallerResult
type DescribeResourceInstanceInstallerResult struct {
	// URL from where the resource instance installer can be downloaded
	InstallerURL *string `json:"installerURL,omitempty"`
	// ID of a Resource Instance
	InstanceId string `json:"instanceId"`
	AdditionalProperties map[string]interface{}
}

type _DescribeResourceInstanceInstallerResult DescribeResourceInstanceInstallerResult

// NewDescribeResourceInstanceInstallerResult instantiates a new DescribeResourceInstanceInstallerResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeResourceInstanceInstallerResult(instanceId string) *DescribeResourceInstanceInstallerResult {
	this := DescribeResourceInstanceInstallerResult{}
	this.InstanceId = instanceId
	return &this
}

// NewDescribeResourceInstanceInstallerResultWithDefaults instantiates a new DescribeResourceInstanceInstallerResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeResourceInstanceInstallerResultWithDefaults() *DescribeResourceInstanceInstallerResult {
	this := DescribeResourceInstanceInstallerResult{}
	return &this
}

// GetInstallerURL returns the InstallerURL field value if set, zero value otherwise.
func (o *DescribeResourceInstanceInstallerResult) GetInstallerURL() string {
	if o == nil || IsNil(o.InstallerURL) {
		var ret string
		return ret
	}
	return *o.InstallerURL
}

// GetInstallerURLOk returns a tuple with the InstallerURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceInstallerResult) GetInstallerURLOk() (*string, bool) {
	if o == nil || IsNil(o.InstallerURL) {
		return nil, false
	}
	return o.InstallerURL, true
}

// HasInstallerURL returns a boolean if a field has been set.
func (o *DescribeResourceInstanceInstallerResult) HasInstallerURL() bool {
	if o != nil && !IsNil(o.InstallerURL) {
		return true
	}

	return false
}

// SetInstallerURL gets a reference to the given string and assigns it to the InstallerURL field.
func (o *DescribeResourceInstanceInstallerResult) SetInstallerURL(v string) {
	o.InstallerURL = &v
}

// GetInstanceId returns the InstanceId field value
func (o *DescribeResourceInstanceInstallerResult) GetInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceInstallerResult) GetInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceId, true
}

// SetInstanceId sets field value
func (o *DescribeResourceInstanceInstallerResult) SetInstanceId(v string) {
	o.InstanceId = v
}

func (o DescribeResourceInstanceInstallerResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeResourceInstanceInstallerResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstallerURL) {
		toSerialize["installerURL"] = o.InstallerURL
	}
	toSerialize["instanceId"] = o.InstanceId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DescribeResourceInstanceInstallerResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"instanceId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeResourceInstanceInstallerResult := _DescribeResourceInstanceInstallerResult{}

	err = json.Unmarshal(data, &varDescribeResourceInstanceInstallerResult)

	if err != nil {
		return err
	}

	*o = DescribeResourceInstanceInstallerResult(varDescribeResourceInstanceInstallerResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "installerURL")
		delete(additionalProperties, "instanceId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDescribeResourceInstanceInstallerResult struct {
	value *DescribeResourceInstanceInstallerResult
	isSet bool
}

func (v NullableDescribeResourceInstanceInstallerResult) Get() *DescribeResourceInstanceInstallerResult {
	return v.value
}

func (v *NullableDescribeResourceInstanceInstallerResult) Set(val *DescribeResourceInstanceInstallerResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeResourceInstanceInstallerResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeResourceInstanceInstallerResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeResourceInstanceInstallerResult(val *DescribeResourceInstanceInstallerResult) *NullableDescribeResourceInstanceInstallerResult {
	return &NullableDescribeResourceInstanceInstallerResult{value: val, isSet: true}
}

func (v NullableDescribeResourceInstanceInstallerResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeResourceInstanceInstallerResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


