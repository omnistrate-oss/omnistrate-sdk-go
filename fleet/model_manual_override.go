/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the ManualOverride type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManualOverride{}

// ManualOverride struct for ManualOverride
type ManualOverride struct {
	// The timestamp when the manual override was set.
	SetAt *string `json:"setAt,omitempty"`
	// ID of a User
	SetterUserId *string `json:"setterUserId,omitempty"`
	// ID of a Workflow
	WorkflowId *string `json:"workflowId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ManualOverride ManualOverride

// NewManualOverride instantiates a new ManualOverride object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManualOverride() *ManualOverride {
	this := ManualOverride{}
	return &this
}

// NewManualOverrideWithDefaults instantiates a new ManualOverride object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManualOverrideWithDefaults() *ManualOverride {
	this := ManualOverride{}
	return &this
}

// GetSetAt returns the SetAt field value if set, zero value otherwise.
func (o *ManualOverride) GetSetAt() string {
	if o == nil || IsNil(o.SetAt) {
		var ret string
		return ret
	}
	return *o.SetAt
}

// GetSetAtOk returns a tuple with the SetAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualOverride) GetSetAtOk() (*string, bool) {
	if o == nil || IsNil(o.SetAt) {
		return nil, false
	}
	return o.SetAt, true
}

// HasSetAt returns a boolean if a field has been set.
func (o *ManualOverride) HasSetAt() bool {
	if o != nil && !IsNil(o.SetAt) {
		return true
	}

	return false
}

// SetSetAt gets a reference to the given string and assigns it to the SetAt field.
func (o *ManualOverride) SetSetAt(v string) {
	o.SetAt = &v
}

// GetSetterUserId returns the SetterUserId field value if set, zero value otherwise.
func (o *ManualOverride) GetSetterUserId() string {
	if o == nil || IsNil(o.SetterUserId) {
		var ret string
		return ret
	}
	return *o.SetterUserId
}

// GetSetterUserIdOk returns a tuple with the SetterUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualOverride) GetSetterUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.SetterUserId) {
		return nil, false
	}
	return o.SetterUserId, true
}

// HasSetterUserId returns a boolean if a field has been set.
func (o *ManualOverride) HasSetterUserId() bool {
	if o != nil && !IsNil(o.SetterUserId) {
		return true
	}

	return false
}

// SetSetterUserId gets a reference to the given string and assigns it to the SetterUserId field.
func (o *ManualOverride) SetSetterUserId(v string) {
	o.SetterUserId = &v
}

// GetWorkflowId returns the WorkflowId field value if set, zero value otherwise.
func (o *ManualOverride) GetWorkflowId() string {
	if o == nil || IsNil(o.WorkflowId) {
		var ret string
		return ret
	}
	return *o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualOverride) GetWorkflowIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkflowId) {
		return nil, false
	}
	return o.WorkflowId, true
}

// HasWorkflowId returns a boolean if a field has been set.
func (o *ManualOverride) HasWorkflowId() bool {
	if o != nil && !IsNil(o.WorkflowId) {
		return true
	}

	return false
}

// SetWorkflowId gets a reference to the given string and assigns it to the WorkflowId field.
func (o *ManualOverride) SetWorkflowId(v string) {
	o.WorkflowId = &v
}

func (o ManualOverride) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManualOverride) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SetAt) {
		toSerialize["setAt"] = o.SetAt
	}
	if !IsNil(o.SetterUserId) {
		toSerialize["setterUserId"] = o.SetterUserId
	}
	if !IsNil(o.WorkflowId) {
		toSerialize["workflowId"] = o.WorkflowId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ManualOverride) UnmarshalJSON(data []byte) (err error) {
	varManualOverride := _ManualOverride{}

	err = json.Unmarshal(data, &varManualOverride)

	if err != nil {
		return err
	}

	*o = ManualOverride(varManualOverride)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "setAt")
		delete(additionalProperties, "setterUserId")
		delete(additionalProperties, "workflowId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableManualOverride struct {
	value *ManualOverride
	isSet bool
}

func (v NullableManualOverride) Get() *ManualOverride {
	return v.value
}

func (v *NullableManualOverride) Set(val *ManualOverride) {
	v.value = val
	v.isSet = true
}

func (v NullableManualOverride) IsSet() bool {
	return v.isSet
}

func (v *NullableManualOverride) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManualOverride(val *ManualOverride) *NullableManualOverride {
	return &NullableManualOverride{value: val, isSet: true}
}

func (v NullableManualOverride) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManualOverride) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


