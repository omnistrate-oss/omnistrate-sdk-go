/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the ListAllOrganizationsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListAllOrganizationsRequest{}

// ListAllOrganizationsRequest struct for ListAllOrganizationsRequest
type ListAllOrganizationsRequest struct {
	// Filter for organizations with invoices
	HasInvoice *bool `json:"hasInvoice,omitempty"`
	// Start time of the window in RFC 3339 format. If omitted, the filter is open-ended at the start.
	HasInvoiceFromDate *time.Time `json:"hasInvoiceFromDate,omitempty"`
	// End time of the window in RFC 3339 format. If omitted, the filter is open-ended at the start.
	HasInvoiceToDate *time.Time `json:"hasInvoiceToDate,omitempty"`
	// This describes the status of the invoice and is set by the payment provider
	HasInvoiceWithStatus *string `json:"hasInvoiceWithStatus,omitempty"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _ListAllOrganizationsRequest ListAllOrganizationsRequest

// NewListAllOrganizationsRequest instantiates a new ListAllOrganizationsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAllOrganizationsRequest(token string) *ListAllOrganizationsRequest {
	this := ListAllOrganizationsRequest{}
	this.Token = token
	return &this
}

// NewListAllOrganizationsRequestWithDefaults instantiates a new ListAllOrganizationsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAllOrganizationsRequestWithDefaults() *ListAllOrganizationsRequest {
	this := ListAllOrganizationsRequest{}
	return &this
}

// GetHasInvoice returns the HasInvoice field value if set, zero value otherwise.
func (o *ListAllOrganizationsRequest) GetHasInvoice() bool {
	if o == nil || IsNil(o.HasInvoice) {
		var ret bool
		return ret
	}
	return *o.HasInvoice
}

// GetHasInvoiceOk returns a tuple with the HasInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAllOrganizationsRequest) GetHasInvoiceOk() (*bool, bool) {
	if o == nil || IsNil(o.HasInvoice) {
		return nil, false
	}
	return o.HasInvoice, true
}

// HasHasInvoice returns a boolean if a field has been set.
func (o *ListAllOrganizationsRequest) HasHasInvoice() bool {
	if o != nil && !IsNil(o.HasInvoice) {
		return true
	}

	return false
}

// SetHasInvoice gets a reference to the given bool and assigns it to the HasInvoice field.
func (o *ListAllOrganizationsRequest) SetHasInvoice(v bool) {
	o.HasInvoice = &v
}

// GetHasInvoiceFromDate returns the HasInvoiceFromDate field value if set, zero value otherwise.
func (o *ListAllOrganizationsRequest) GetHasInvoiceFromDate() time.Time {
	if o == nil || IsNil(o.HasInvoiceFromDate) {
		var ret time.Time
		return ret
	}
	return *o.HasInvoiceFromDate
}

// GetHasInvoiceFromDateOk returns a tuple with the HasInvoiceFromDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAllOrganizationsRequest) GetHasInvoiceFromDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.HasInvoiceFromDate) {
		return nil, false
	}
	return o.HasInvoiceFromDate, true
}

// HasHasInvoiceFromDate returns a boolean if a field has been set.
func (o *ListAllOrganizationsRequest) HasHasInvoiceFromDate() bool {
	if o != nil && !IsNil(o.HasInvoiceFromDate) {
		return true
	}

	return false
}

// SetHasInvoiceFromDate gets a reference to the given time.Time and assigns it to the HasInvoiceFromDate field.
func (o *ListAllOrganizationsRequest) SetHasInvoiceFromDate(v time.Time) {
	o.HasInvoiceFromDate = &v
}

// GetHasInvoiceToDate returns the HasInvoiceToDate field value if set, zero value otherwise.
func (o *ListAllOrganizationsRequest) GetHasInvoiceToDate() time.Time {
	if o == nil || IsNil(o.HasInvoiceToDate) {
		var ret time.Time
		return ret
	}
	return *o.HasInvoiceToDate
}

// GetHasInvoiceToDateOk returns a tuple with the HasInvoiceToDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAllOrganizationsRequest) GetHasInvoiceToDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.HasInvoiceToDate) {
		return nil, false
	}
	return o.HasInvoiceToDate, true
}

// HasHasInvoiceToDate returns a boolean if a field has been set.
func (o *ListAllOrganizationsRequest) HasHasInvoiceToDate() bool {
	if o != nil && !IsNil(o.HasInvoiceToDate) {
		return true
	}

	return false
}

// SetHasInvoiceToDate gets a reference to the given time.Time and assigns it to the HasInvoiceToDate field.
func (o *ListAllOrganizationsRequest) SetHasInvoiceToDate(v time.Time) {
	o.HasInvoiceToDate = &v
}

// GetHasInvoiceWithStatus returns the HasInvoiceWithStatus field value if set, zero value otherwise.
func (o *ListAllOrganizationsRequest) GetHasInvoiceWithStatus() string {
	if o == nil || IsNil(o.HasInvoiceWithStatus) {
		var ret string
		return ret
	}
	return *o.HasInvoiceWithStatus
}

// GetHasInvoiceWithStatusOk returns a tuple with the HasInvoiceWithStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAllOrganizationsRequest) GetHasInvoiceWithStatusOk() (*string, bool) {
	if o == nil || IsNil(o.HasInvoiceWithStatus) {
		return nil, false
	}
	return o.HasInvoiceWithStatus, true
}

// HasHasInvoiceWithStatus returns a boolean if a field has been set.
func (o *ListAllOrganizationsRequest) HasHasInvoiceWithStatus() bool {
	if o != nil && !IsNil(o.HasInvoiceWithStatus) {
		return true
	}

	return false
}

// SetHasInvoiceWithStatus gets a reference to the given string and assigns it to the HasInvoiceWithStatus field.
func (o *ListAllOrganizationsRequest) SetHasInvoiceWithStatus(v string) {
	o.HasInvoiceWithStatus = &v
}

// GetToken returns the Token field value
func (o *ListAllOrganizationsRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *ListAllOrganizationsRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *ListAllOrganizationsRequest) SetToken(v string) {
	o.Token = v
}

func (o ListAllOrganizationsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListAllOrganizationsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HasInvoice) {
		toSerialize["hasInvoice"] = o.HasInvoice
	}
	if !IsNil(o.HasInvoiceFromDate) {
		toSerialize["hasInvoiceFromDate"] = o.HasInvoiceFromDate
	}
	if !IsNil(o.HasInvoiceToDate) {
		toSerialize["hasInvoiceToDate"] = o.HasInvoiceToDate
	}
	if !IsNil(o.HasInvoiceWithStatus) {
		toSerialize["hasInvoiceWithStatus"] = o.HasInvoiceWithStatus
	}
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListAllOrganizationsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListAllOrganizationsRequest := _ListAllOrganizationsRequest{}

	err = json.Unmarshal(data, &varListAllOrganizationsRequest)

	if err != nil {
		return err
	}

	*o = ListAllOrganizationsRequest(varListAllOrganizationsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "hasInvoice")
		delete(additionalProperties, "hasInvoiceFromDate")
		delete(additionalProperties, "hasInvoiceToDate")
		delete(additionalProperties, "hasInvoiceWithStatus")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListAllOrganizationsRequest struct {
	value *ListAllOrganizationsRequest
	isSet bool
}

func (v NullableListAllOrganizationsRequest) Get() *ListAllOrganizationsRequest {
	return v.value
}

func (v *NullableListAllOrganizationsRequest) Set(val *ListAllOrganizationsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListAllOrganizationsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListAllOrganizationsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAllOrganizationsRequest(val *ListAllOrganizationsRequest) *NullableListAllOrganizationsRequest {
	return &NullableListAllOrganizationsRequest{value: val, isSet: true}
}

func (v NullableListAllOrganizationsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAllOrganizationsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


