/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the FleetUpdateResourceInstanceRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FleetUpdateResourceInstanceRequest2{}

// FleetUpdateResourceInstanceRequest2 struct for FleetUpdateResourceInstanceRequest2
type FleetUpdateResourceInstanceRequest2 struct {
	// The network type
	NetworkType *string `json:"network_type,omitempty"`
	// The request parameters
	RequestParams interface{} `json:"requestParams,omitempty"`
	// The resource ID.
	ResourceId string `json:"resourceId"`
	AdditionalProperties map[string]interface{}
}

type _FleetUpdateResourceInstanceRequest2 FleetUpdateResourceInstanceRequest2

// NewFleetUpdateResourceInstanceRequest2 instantiates a new FleetUpdateResourceInstanceRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetUpdateResourceInstanceRequest2(resourceId string) *FleetUpdateResourceInstanceRequest2 {
	this := FleetUpdateResourceInstanceRequest2{}
	this.ResourceId = resourceId
	return &this
}

// NewFleetUpdateResourceInstanceRequest2WithDefaults instantiates a new FleetUpdateResourceInstanceRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetUpdateResourceInstanceRequest2WithDefaults() *FleetUpdateResourceInstanceRequest2 {
	this := FleetUpdateResourceInstanceRequest2{}
	return &this
}

// GetNetworkType returns the NetworkType field value if set, zero value otherwise.
func (o *FleetUpdateResourceInstanceRequest2) GetNetworkType() string {
	if o == nil || IsNil(o.NetworkType) {
		var ret string
		return ret
	}
	return *o.NetworkType
}

// GetNetworkTypeOk returns a tuple with the NetworkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetUpdateResourceInstanceRequest2) GetNetworkTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkType) {
		return nil, false
	}
	return o.NetworkType, true
}

// HasNetworkType returns a boolean if a field has been set.
func (o *FleetUpdateResourceInstanceRequest2) HasNetworkType() bool {
	if o != nil && !IsNil(o.NetworkType) {
		return true
	}

	return false
}

// SetNetworkType gets a reference to the given string and assigns it to the NetworkType field.
func (o *FleetUpdateResourceInstanceRequest2) SetNetworkType(v string) {
	o.NetworkType = &v
}

// GetRequestParams returns the RequestParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FleetUpdateResourceInstanceRequest2) GetRequestParams() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.RequestParams
}

// GetRequestParamsOk returns a tuple with the RequestParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FleetUpdateResourceInstanceRequest2) GetRequestParamsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.RequestParams) {
		return nil, false
	}
	return &o.RequestParams, true
}

// HasRequestParams returns a boolean if a field has been set.
func (o *FleetUpdateResourceInstanceRequest2) HasRequestParams() bool {
	if o != nil && !IsNil(o.RequestParams) {
		return true
	}

	return false
}

// SetRequestParams gets a reference to the given interface{} and assigns it to the RequestParams field.
func (o *FleetUpdateResourceInstanceRequest2) SetRequestParams(v interface{}) {
	o.RequestParams = v
}

// GetResourceId returns the ResourceId field value
func (o *FleetUpdateResourceInstanceRequest2) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *FleetUpdateResourceInstanceRequest2) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *FleetUpdateResourceInstanceRequest2) SetResourceId(v string) {
	o.ResourceId = v
}

func (o FleetUpdateResourceInstanceRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FleetUpdateResourceInstanceRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkType) {
		toSerialize["network_type"] = o.NetworkType
	}
	if o.RequestParams != nil {
		toSerialize["requestParams"] = o.RequestParams
	}
	toSerialize["resourceId"] = o.ResourceId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FleetUpdateResourceInstanceRequest2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resourceId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFleetUpdateResourceInstanceRequest2 := _FleetUpdateResourceInstanceRequest2{}

	err = json.Unmarshal(data, &varFleetUpdateResourceInstanceRequest2)

	if err != nil {
		return err
	}

	*o = FleetUpdateResourceInstanceRequest2(varFleetUpdateResourceInstanceRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "network_type")
		delete(additionalProperties, "requestParams")
		delete(additionalProperties, "resourceId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFleetUpdateResourceInstanceRequest2 struct {
	value *FleetUpdateResourceInstanceRequest2
	isSet bool
}

func (v NullableFleetUpdateResourceInstanceRequest2) Get() *FleetUpdateResourceInstanceRequest2 {
	return v.value
}

func (v *NullableFleetUpdateResourceInstanceRequest2) Set(val *FleetUpdateResourceInstanceRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetUpdateResourceInstanceRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetUpdateResourceInstanceRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetUpdateResourceInstanceRequest2(val *FleetUpdateResourceInstanceRequest2) *NullableFleetUpdateResourceInstanceRequest2 {
	return &NullableFleetUpdateResourceInstanceRequest2{value: val, isSet: true}
}

func (v NullableFleetUpdateResourceInstanceRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetUpdateResourceInstanceRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


