/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the ListResourcesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListResourcesRequest{}

// ListResourcesRequest struct for ListResourcesRequest
type ListResourcesRequest struct {
	// ID of a Service Environment
	EnvironmentId string `json:"environmentId"`
	// The type of service environment
	EnvironmentType *string `json:"environmentType,omitempty"`
	// Token to use for the next request
	NextPageToken *string `json:"nextPageToken,omitempty"`
	// ID of an Org
	OrgId *string `json:"orgId,omitempty"`
	// The number of resources to return per page.
	PageSize *int64 `json:"pageSize,omitempty"`
	// ID of a Product Tier
	ProductTierId string `json:"productTierId"`
	// ID of a Service
	ServiceId string `json:"serviceId"`
	// ID of a Service Model
	ServiceModelId string `json:"serviceModelId"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	// ID of a User
	UserId *string `json:"userId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListResourcesRequest ListResourcesRequest

// NewListResourcesRequest instantiates a new ListResourcesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListResourcesRequest(environmentId string, productTierId string, serviceId string, serviceModelId string, token string) *ListResourcesRequest {
	this := ListResourcesRequest{}
	this.EnvironmentId = environmentId
	this.ProductTierId = productTierId
	this.ServiceId = serviceId
	this.ServiceModelId = serviceModelId
	this.Token = token
	return &this
}

// NewListResourcesRequestWithDefaults instantiates a new ListResourcesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListResourcesRequestWithDefaults() *ListResourcesRequest {
	this := ListResourcesRequest{}
	return &this
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *ListResourcesRequest) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *ListResourcesRequest) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *ListResourcesRequest) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetEnvironmentType returns the EnvironmentType field value if set, zero value otherwise.
func (o *ListResourcesRequest) GetEnvironmentType() string {
	if o == nil || IsNil(o.EnvironmentType) {
		var ret string
		return ret
	}
	return *o.EnvironmentType
}

// GetEnvironmentTypeOk returns a tuple with the EnvironmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourcesRequest) GetEnvironmentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentType) {
		return nil, false
	}
	return o.EnvironmentType, true
}

// HasEnvironmentType returns a boolean if a field has been set.
func (o *ListResourcesRequest) HasEnvironmentType() bool {
	if o != nil && !IsNil(o.EnvironmentType) {
		return true
	}

	return false
}

// SetEnvironmentType gets a reference to the given string and assigns it to the EnvironmentType field.
func (o *ListResourcesRequest) SetEnvironmentType(v string) {
	o.EnvironmentType = &v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ListResourcesRequest) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourcesRequest) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ListResourcesRequest) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ListResourcesRequest) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *ListResourcesRequest) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourcesRequest) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *ListResourcesRequest) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *ListResourcesRequest) SetOrgId(v string) {
	o.OrgId = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *ListResourcesRequest) GetPageSize() int64 {
	if o == nil || IsNil(o.PageSize) {
		var ret int64
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourcesRequest) GetPageSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *ListResourcesRequest) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int64 and assigns it to the PageSize field.
func (o *ListResourcesRequest) SetPageSize(v int64) {
	o.PageSize = &v
}

// GetProductTierId returns the ProductTierId field value
func (o *ListResourcesRequest) GetProductTierId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductTierId
}

// GetProductTierIdOk returns a tuple with the ProductTierId field value
// and a boolean to check if the value has been set.
func (o *ListResourcesRequest) GetProductTierIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductTierId, true
}

// SetProductTierId sets field value
func (o *ListResourcesRequest) SetProductTierId(v string) {
	o.ProductTierId = v
}

// GetServiceId returns the ServiceId field value
func (o *ListResourcesRequest) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *ListResourcesRequest) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *ListResourcesRequest) SetServiceId(v string) {
	o.ServiceId = v
}

// GetServiceModelId returns the ServiceModelId field value
func (o *ListResourcesRequest) GetServiceModelId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceModelId
}

// GetServiceModelIdOk returns a tuple with the ServiceModelId field value
// and a boolean to check if the value has been set.
func (o *ListResourcesRequest) GetServiceModelIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceModelId, true
}

// SetServiceModelId sets field value
func (o *ListResourcesRequest) SetServiceModelId(v string) {
	o.ServiceModelId = v
}

// GetToken returns the Token field value
func (o *ListResourcesRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *ListResourcesRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *ListResourcesRequest) SetToken(v string) {
	o.Token = v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ListResourcesRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResourcesRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ListResourcesRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ListResourcesRequest) SetUserId(v string) {
	o.UserId = &v
}

func (o ListResourcesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListResourcesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["environmentId"] = o.EnvironmentId
	if !IsNil(o.EnvironmentType) {
		toSerialize["environmentType"] = o.EnvironmentType
	}
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	if !IsNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	if !IsNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}
	toSerialize["productTierId"] = o.ProductTierId
	toSerialize["serviceId"] = o.ServiceId
	toSerialize["serviceModelId"] = o.ServiceModelId
	toSerialize["token"] = o.Token
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListResourcesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"environmentId",
		"productTierId",
		"serviceId",
		"serviceModelId",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListResourcesRequest := _ListResourcesRequest{}

	err = json.Unmarshal(data, &varListResourcesRequest)

	if err != nil {
		return err
	}

	*o = ListResourcesRequest(varListResourcesRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "environmentId")
		delete(additionalProperties, "environmentType")
		delete(additionalProperties, "nextPageToken")
		delete(additionalProperties, "orgId")
		delete(additionalProperties, "pageSize")
		delete(additionalProperties, "productTierId")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "serviceModelId")
		delete(additionalProperties, "token")
		delete(additionalProperties, "userId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListResourcesRequest struct {
	value *ListResourcesRequest
	isSet bool
}

func (v NullableListResourcesRequest) Get() *ListResourcesRequest {
	return v.value
}

func (v *NullableListResourcesRequest) Set(val *ListResourcesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListResourcesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListResourcesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListResourcesRequest(val *ListResourcesRequest) *NullableListResourcesRequest {
	return &NullableListResourcesRequest{value: val, isSet: true}
}

func (v NullableListResourcesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListResourcesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


