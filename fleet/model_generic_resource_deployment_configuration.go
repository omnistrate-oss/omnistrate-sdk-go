/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the GenericResourceDeploymentConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenericResourceDeploymentConfiguration{}

// GenericResourceDeploymentConfiguration struct for GenericResourceDeploymentConfiguration
type GenericResourceDeploymentConfiguration struct {
	// Image for the generic resource deployment
	Image *string `json:"Image,omitempty"`
	// Events associated with the pods in the generic resource deployment
	PodEvents *map[string][]PodEvent `json:"PodEvents,omitempty"`
	// Status of the pods in the generic resource deployment
	PodStatus *map[string]string `json:"PodStatus,omitempty"`
	// Mapping of pods to k8s node names for the generic resource deployment
	PodToHostMapping *map[string]string `json:"PodToHostMapping,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GenericResourceDeploymentConfiguration GenericResourceDeploymentConfiguration

// NewGenericResourceDeploymentConfiguration instantiates a new GenericResourceDeploymentConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenericResourceDeploymentConfiguration() *GenericResourceDeploymentConfiguration {
	this := GenericResourceDeploymentConfiguration{}
	return &this
}

// NewGenericResourceDeploymentConfigurationWithDefaults instantiates a new GenericResourceDeploymentConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenericResourceDeploymentConfigurationWithDefaults() *GenericResourceDeploymentConfiguration {
	this := GenericResourceDeploymentConfiguration{}
	return &this
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *GenericResourceDeploymentConfiguration) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericResourceDeploymentConfiguration) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *GenericResourceDeploymentConfiguration) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *GenericResourceDeploymentConfiguration) SetImage(v string) {
	o.Image = &v
}

// GetPodEvents returns the PodEvents field value if set, zero value otherwise.
func (o *GenericResourceDeploymentConfiguration) GetPodEvents() map[string][]PodEvent {
	if o == nil || IsNil(o.PodEvents) {
		var ret map[string][]PodEvent
		return ret
	}
	return *o.PodEvents
}

// GetPodEventsOk returns a tuple with the PodEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericResourceDeploymentConfiguration) GetPodEventsOk() (*map[string][]PodEvent, bool) {
	if o == nil || IsNil(o.PodEvents) {
		return nil, false
	}
	return o.PodEvents, true
}

// HasPodEvents returns a boolean if a field has been set.
func (o *GenericResourceDeploymentConfiguration) HasPodEvents() bool {
	if o != nil && !IsNil(o.PodEvents) {
		return true
	}

	return false
}

// SetPodEvents gets a reference to the given map[string][]PodEvent and assigns it to the PodEvents field.
func (o *GenericResourceDeploymentConfiguration) SetPodEvents(v map[string][]PodEvent) {
	o.PodEvents = &v
}

// GetPodStatus returns the PodStatus field value if set, zero value otherwise.
func (o *GenericResourceDeploymentConfiguration) GetPodStatus() map[string]string {
	if o == nil || IsNil(o.PodStatus) {
		var ret map[string]string
		return ret
	}
	return *o.PodStatus
}

// GetPodStatusOk returns a tuple with the PodStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericResourceDeploymentConfiguration) GetPodStatusOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.PodStatus) {
		return nil, false
	}
	return o.PodStatus, true
}

// HasPodStatus returns a boolean if a field has been set.
func (o *GenericResourceDeploymentConfiguration) HasPodStatus() bool {
	if o != nil && !IsNil(o.PodStatus) {
		return true
	}

	return false
}

// SetPodStatus gets a reference to the given map[string]string and assigns it to the PodStatus field.
func (o *GenericResourceDeploymentConfiguration) SetPodStatus(v map[string]string) {
	o.PodStatus = &v
}

// GetPodToHostMapping returns the PodToHostMapping field value if set, zero value otherwise.
func (o *GenericResourceDeploymentConfiguration) GetPodToHostMapping() map[string]string {
	if o == nil || IsNil(o.PodToHostMapping) {
		var ret map[string]string
		return ret
	}
	return *o.PodToHostMapping
}

// GetPodToHostMappingOk returns a tuple with the PodToHostMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericResourceDeploymentConfiguration) GetPodToHostMappingOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.PodToHostMapping) {
		return nil, false
	}
	return o.PodToHostMapping, true
}

// HasPodToHostMapping returns a boolean if a field has been set.
func (o *GenericResourceDeploymentConfiguration) HasPodToHostMapping() bool {
	if o != nil && !IsNil(o.PodToHostMapping) {
		return true
	}

	return false
}

// SetPodToHostMapping gets a reference to the given map[string]string and assigns it to the PodToHostMapping field.
func (o *GenericResourceDeploymentConfiguration) SetPodToHostMapping(v map[string]string) {
	o.PodToHostMapping = &v
}

func (o GenericResourceDeploymentConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenericResourceDeploymentConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Image) {
		toSerialize["Image"] = o.Image
	}
	if !IsNil(o.PodEvents) {
		toSerialize["PodEvents"] = o.PodEvents
	}
	if !IsNil(o.PodStatus) {
		toSerialize["PodStatus"] = o.PodStatus
	}
	if !IsNil(o.PodToHostMapping) {
		toSerialize["PodToHostMapping"] = o.PodToHostMapping
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GenericResourceDeploymentConfiguration) UnmarshalJSON(data []byte) (err error) {
	varGenericResourceDeploymentConfiguration := _GenericResourceDeploymentConfiguration{}

	err = json.Unmarshal(data, &varGenericResourceDeploymentConfiguration)

	if err != nil {
		return err
	}

	*o = GenericResourceDeploymentConfiguration(varGenericResourceDeploymentConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "Image")
		delete(additionalProperties, "PodEvents")
		delete(additionalProperties, "PodStatus")
		delete(additionalProperties, "PodToHostMapping")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGenericResourceDeploymentConfiguration struct {
	value *GenericResourceDeploymentConfiguration
	isSet bool
}

func (v NullableGenericResourceDeploymentConfiguration) Get() *GenericResourceDeploymentConfiguration {
	return v.value
}

func (v *NullableGenericResourceDeploymentConfiguration) Set(val *GenericResourceDeploymentConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableGenericResourceDeploymentConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableGenericResourceDeploymentConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenericResourceDeploymentConfiguration(val *GenericResourceDeploymentConfiguration) *NullableGenericResourceDeploymentConfiguration {
	return &NullableGenericResourceDeploymentConfiguration{value: val, isSet: true}
}

func (v NullableGenericResourceDeploymentConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenericResourceDeploymentConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


