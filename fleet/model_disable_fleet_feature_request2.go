/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the DisableFleetFeatureRequest2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DisableFleetFeatureRequest2{}

// DisableFleetFeatureRequest2 struct for DisableFleetFeatureRequest2
type DisableFleetFeatureRequest2 struct {
	// The feature to disable.
	Feature *string `json:"feature,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DisableFleetFeatureRequest2 DisableFleetFeatureRequest2

// NewDisableFleetFeatureRequest2 instantiates a new DisableFleetFeatureRequest2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDisableFleetFeatureRequest2() *DisableFleetFeatureRequest2 {
	this := DisableFleetFeatureRequest2{}
	return &this
}

// NewDisableFleetFeatureRequest2WithDefaults instantiates a new DisableFleetFeatureRequest2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDisableFleetFeatureRequest2WithDefaults() *DisableFleetFeatureRequest2 {
	this := DisableFleetFeatureRequest2{}
	return &this
}

// GetFeature returns the Feature field value if set, zero value otherwise.
func (o *DisableFleetFeatureRequest2) GetFeature() string {
	if o == nil || IsNil(o.Feature) {
		var ret string
		return ret
	}
	return *o.Feature
}

// GetFeatureOk returns a tuple with the Feature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisableFleetFeatureRequest2) GetFeatureOk() (*string, bool) {
	if o == nil || IsNil(o.Feature) {
		return nil, false
	}
	return o.Feature, true
}

// HasFeature returns a boolean if a field has been set.
func (o *DisableFleetFeatureRequest2) HasFeature() bool {
	if o != nil && !IsNil(o.Feature) {
		return true
	}

	return false
}

// SetFeature gets a reference to the given string and assigns it to the Feature field.
func (o *DisableFleetFeatureRequest2) SetFeature(v string) {
	o.Feature = &v
}

func (o DisableFleetFeatureRequest2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DisableFleetFeatureRequest2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Feature) {
		toSerialize["feature"] = o.Feature
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DisableFleetFeatureRequest2) UnmarshalJSON(data []byte) (err error) {
	varDisableFleetFeatureRequest2 := _DisableFleetFeatureRequest2{}

	err = json.Unmarshal(data, &varDisableFleetFeatureRequest2)

	if err != nil {
		return err
	}

	*o = DisableFleetFeatureRequest2(varDisableFleetFeatureRequest2)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "feature")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDisableFleetFeatureRequest2 struct {
	value *DisableFleetFeatureRequest2
	isSet bool
}

func (v NullableDisableFleetFeatureRequest2) Get() *DisableFleetFeatureRequest2 {
	return v.value
}

func (v *NullableDisableFleetFeatureRequest2) Set(val *DisableFleetFeatureRequest2) {
	v.value = val
	v.isSet = true
}

func (v NullableDisableFleetFeatureRequest2) IsSet() bool {
	return v.isSet
}

func (v *NullableDisableFleetFeatureRequest2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDisableFleetFeatureRequest2(val *DisableFleetFeatureRequest2) *NullableDisableFleetFeatureRequest2 {
	return &NullableDisableFleetFeatureRequest2{value: val, isSet: true}
}

func (v NullableDisableFleetFeatureRequest2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDisableFleetFeatureRequest2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


