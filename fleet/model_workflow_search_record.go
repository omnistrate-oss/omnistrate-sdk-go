/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the WorkflowSearchRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowSearchRecord{}

// WorkflowSearchRecord struct for WorkflowSearchRecord
type WorkflowSearchRecord struct {
	// The ID of the workflow.
	Id string `json:"id"`
	// The name of the resource associated with the workflow.
	ResourceName string `json:"resourceName"`
	// ID of a Service Environment
	ServiceEnvironmentId string `json:"serviceEnvironmentId"`
	// The service environment name of the workflow.
	ServiceEnvironmentName string `json:"serviceEnvironmentName"`
	// The type of service environment
	ServiceEnvironmentType *string `json:"serviceEnvironmentType,omitempty"`
	// ID of a Service
	ServiceId string `json:"serviceId"`
	// The service name of the workflow.
	ServiceName string `json:"serviceName"`
	// The status of an operation
	Status string `json:"status"`
	// The workflow type.
	Type string `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _WorkflowSearchRecord WorkflowSearchRecord

// NewWorkflowSearchRecord instantiates a new WorkflowSearchRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowSearchRecord(id string, resourceName string, serviceEnvironmentId string, serviceEnvironmentName string, serviceId string, serviceName string, status string, type_ string) *WorkflowSearchRecord {
	this := WorkflowSearchRecord{}
	this.Id = id
	this.ResourceName = resourceName
	this.ServiceEnvironmentId = serviceEnvironmentId
	this.ServiceEnvironmentName = serviceEnvironmentName
	this.ServiceId = serviceId
	this.ServiceName = serviceName
	this.Status = status
	this.Type = type_
	return &this
}

// NewWorkflowSearchRecordWithDefaults instantiates a new WorkflowSearchRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowSearchRecordWithDefaults() *WorkflowSearchRecord {
	this := WorkflowSearchRecord{}
	return &this
}

// GetId returns the Id field value
func (o *WorkflowSearchRecord) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WorkflowSearchRecord) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WorkflowSearchRecord) SetId(v string) {
	o.Id = v
}

// GetResourceName returns the ResourceName field value
func (o *WorkflowSearchRecord) GetResourceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value
// and a boolean to check if the value has been set.
func (o *WorkflowSearchRecord) GetResourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceName, true
}

// SetResourceName sets field value
func (o *WorkflowSearchRecord) SetResourceName(v string) {
	o.ResourceName = v
}

// GetServiceEnvironmentId returns the ServiceEnvironmentId field value
func (o *WorkflowSearchRecord) GetServiceEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceEnvironmentId
}

// GetServiceEnvironmentIdOk returns a tuple with the ServiceEnvironmentId field value
// and a boolean to check if the value has been set.
func (o *WorkflowSearchRecord) GetServiceEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceEnvironmentId, true
}

// SetServiceEnvironmentId sets field value
func (o *WorkflowSearchRecord) SetServiceEnvironmentId(v string) {
	o.ServiceEnvironmentId = v
}

// GetServiceEnvironmentName returns the ServiceEnvironmentName field value
func (o *WorkflowSearchRecord) GetServiceEnvironmentName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceEnvironmentName
}

// GetServiceEnvironmentNameOk returns a tuple with the ServiceEnvironmentName field value
// and a boolean to check if the value has been set.
func (o *WorkflowSearchRecord) GetServiceEnvironmentNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceEnvironmentName, true
}

// SetServiceEnvironmentName sets field value
func (o *WorkflowSearchRecord) SetServiceEnvironmentName(v string) {
	o.ServiceEnvironmentName = v
}

// GetServiceEnvironmentType returns the ServiceEnvironmentType field value if set, zero value otherwise.
func (o *WorkflowSearchRecord) GetServiceEnvironmentType() string {
	if o == nil || IsNil(o.ServiceEnvironmentType) {
		var ret string
		return ret
	}
	return *o.ServiceEnvironmentType
}

// GetServiceEnvironmentTypeOk returns a tuple with the ServiceEnvironmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowSearchRecord) GetServiceEnvironmentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceEnvironmentType) {
		return nil, false
	}
	return o.ServiceEnvironmentType, true
}

// HasServiceEnvironmentType returns a boolean if a field has been set.
func (o *WorkflowSearchRecord) HasServiceEnvironmentType() bool {
	if o != nil && !IsNil(o.ServiceEnvironmentType) {
		return true
	}

	return false
}

// SetServiceEnvironmentType gets a reference to the given string and assigns it to the ServiceEnvironmentType field.
func (o *WorkflowSearchRecord) SetServiceEnvironmentType(v string) {
	o.ServiceEnvironmentType = &v
}

// GetServiceId returns the ServiceId field value
func (o *WorkflowSearchRecord) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *WorkflowSearchRecord) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *WorkflowSearchRecord) SetServiceId(v string) {
	o.ServiceId = v
}

// GetServiceName returns the ServiceName field value
func (o *WorkflowSearchRecord) GetServiceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value
// and a boolean to check if the value has been set.
func (o *WorkflowSearchRecord) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceName, true
}

// SetServiceName sets field value
func (o *WorkflowSearchRecord) SetServiceName(v string) {
	o.ServiceName = v
}

// GetStatus returns the Status field value
func (o *WorkflowSearchRecord) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *WorkflowSearchRecord) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *WorkflowSearchRecord) SetStatus(v string) {
	o.Status = v
}

// GetType returns the Type field value
func (o *WorkflowSearchRecord) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *WorkflowSearchRecord) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *WorkflowSearchRecord) SetType(v string) {
	o.Type = v
}

func (o WorkflowSearchRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowSearchRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["resourceName"] = o.ResourceName
	toSerialize["serviceEnvironmentId"] = o.ServiceEnvironmentId
	toSerialize["serviceEnvironmentName"] = o.ServiceEnvironmentName
	if !IsNil(o.ServiceEnvironmentType) {
		toSerialize["serviceEnvironmentType"] = o.ServiceEnvironmentType
	}
	toSerialize["serviceId"] = o.ServiceId
	toSerialize["serviceName"] = o.ServiceName
	toSerialize["status"] = o.Status
	toSerialize["type"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WorkflowSearchRecord) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"resourceName",
		"serviceEnvironmentId",
		"serviceEnvironmentName",
		"serviceId",
		"serviceName",
		"status",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkflowSearchRecord := _WorkflowSearchRecord{}

	err = json.Unmarshal(data, &varWorkflowSearchRecord)

	if err != nil {
		return err
	}

	*o = WorkflowSearchRecord(varWorkflowSearchRecord)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "resourceName")
		delete(additionalProperties, "serviceEnvironmentId")
		delete(additionalProperties, "serviceEnvironmentName")
		delete(additionalProperties, "serviceEnvironmentType")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "serviceName")
		delete(additionalProperties, "status")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWorkflowSearchRecord struct {
	value *WorkflowSearchRecord
	isSet bool
}

func (v NullableWorkflowSearchRecord) Get() *WorkflowSearchRecord {
	return v.value
}

func (v *NullableWorkflowSearchRecord) Set(val *WorkflowSearchRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowSearchRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowSearchRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowSearchRecord(val *WorkflowSearchRecord) *NullableWorkflowSearchRecord {
	return &NullableWorkflowSearchRecord{value: val, isSet: true}
}

func (v NullableWorkflowSearchRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowSearchRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


