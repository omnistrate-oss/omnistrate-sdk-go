/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the DescribeResourceInstanceResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribeResourceInstanceResult{}

// DescribeResourceInstanceResult struct for DescribeResourceInstanceResult
type DescribeResourceInstanceResult struct {
	// True if this resource instance has associated infrastructure deployed
	Active bool `json:"active"`
	// The AWS account ID
	AwsAccountID *string `json:"awsAccountID,omitempty"`
	BackupStatus *BackupStatus `json:"backupStatus,omitempty"`
	// The cloud provider name
	CloudProvider *string `json:"cloud_provider,omitempty"`
	// The instance creation time
	CreatedAt string `json:"created_at"`
	// The user ID that created the resource instance
	CreatedByUserId string `json:"createdByUserId"`
	// The name of the user that created the resource instance
	CreatedByUserName string `json:"createdByUserName"`
	CustomNetworkDetail *CustomNetworkResourceDetail `json:"customNetworkDetail,omitempty"`
	// The detailed network topology
	DetailedNetworkTopology *map[string]ResourceNetworkTopologyResult `json:"detailedNetworkTopology,omitempty"`
	// The external payer id to record which customer should pay for this resource instance
	ExternalPayerId *string `json:"externalPayerId,omitempty"`
	// The GCP project ID
	GcpProjectID *string `json:"gcpProjectID,omitempty"`
	// Whether the instance is High Availability
	HighAvailability *bool `json:"highAvailability,omitempty"`
	// The instance ID
	Id string `json:"id"`
	// The instance update time
	LastModifiedAt string `json:"last_modified_at"`
	// The network type
	NetworkType *string `json:"network_type,omitempty"`
	// The product tier features
	ProductTierFeatures map[string]interface{} `json:"productTierFeatures"`
	// The region code
	Region *string `json:"region,omitempty"`
	// Custom result parameters
	ResultParams interface{} `json:"result_params"`
	// The instance status
	Status string `json:"status"`
	// The subscription ID
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DescribeResourceInstanceResult DescribeResourceInstanceResult

// NewDescribeResourceInstanceResult instantiates a new DescribeResourceInstanceResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeResourceInstanceResult(active bool, createdAt string, createdByUserId string, createdByUserName string, id string, lastModifiedAt string, productTierFeatures map[string]interface{}, resultParams interface{}, status string) *DescribeResourceInstanceResult {
	this := DescribeResourceInstanceResult{}
	this.Active = active
	this.CreatedAt = createdAt
	this.CreatedByUserId = createdByUserId
	this.CreatedByUserName = createdByUserName
	this.Id = id
	this.LastModifiedAt = lastModifiedAt
	this.ProductTierFeatures = productTierFeatures
	this.ResultParams = resultParams
	this.Status = status
	return &this
}

// NewDescribeResourceInstanceResultWithDefaults instantiates a new DescribeResourceInstanceResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeResourceInstanceResultWithDefaults() *DescribeResourceInstanceResult {
	this := DescribeResourceInstanceResult{}
	return &this
}

// GetActive returns the Active field value
func (o *DescribeResourceInstanceResult) GetActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *DescribeResourceInstanceResult) SetActive(v bool) {
	o.Active = v
}

// GetAwsAccountID returns the AwsAccountID field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetAwsAccountID() string {
	if o == nil || IsNil(o.AwsAccountID) {
		var ret string
		return ret
	}
	return *o.AwsAccountID
}

// GetAwsAccountIDOk returns a tuple with the AwsAccountID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetAwsAccountIDOk() (*string, bool) {
	if o == nil || IsNil(o.AwsAccountID) {
		return nil, false
	}
	return o.AwsAccountID, true
}

// HasAwsAccountID returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasAwsAccountID() bool {
	if o != nil && !IsNil(o.AwsAccountID) {
		return true
	}

	return false
}

// SetAwsAccountID gets a reference to the given string and assigns it to the AwsAccountID field.
func (o *DescribeResourceInstanceResult) SetAwsAccountID(v string) {
	o.AwsAccountID = &v
}

// GetBackupStatus returns the BackupStatus field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetBackupStatus() BackupStatus {
	if o == nil || IsNil(o.BackupStatus) {
		var ret BackupStatus
		return ret
	}
	return *o.BackupStatus
}

// GetBackupStatusOk returns a tuple with the BackupStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetBackupStatusOk() (*BackupStatus, bool) {
	if o == nil || IsNil(o.BackupStatus) {
		return nil, false
	}
	return o.BackupStatus, true
}

// HasBackupStatus returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasBackupStatus() bool {
	if o != nil && !IsNil(o.BackupStatus) {
		return true
	}

	return false
}

// SetBackupStatus gets a reference to the given BackupStatus and assigns it to the BackupStatus field.
func (o *DescribeResourceInstanceResult) SetBackupStatus(v BackupStatus) {
	o.BackupStatus = &v
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetCloudProvider() string {
	if o == nil || IsNil(o.CloudProvider) {
		var ret string
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetCloudProviderOk() (*string, bool) {
	if o == nil || IsNil(o.CloudProvider) {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasCloudProvider() bool {
	if o != nil && !IsNil(o.CloudProvider) {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given string and assigns it to the CloudProvider field.
func (o *DescribeResourceInstanceResult) SetCloudProvider(v string) {
	o.CloudProvider = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *DescribeResourceInstanceResult) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *DescribeResourceInstanceResult) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetCreatedByUserId returns the CreatedByUserId field value
func (o *DescribeResourceInstanceResult) GetCreatedByUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedByUserId
}

// GetCreatedByUserIdOk returns a tuple with the CreatedByUserId field value
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetCreatedByUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedByUserId, true
}

// SetCreatedByUserId sets field value
func (o *DescribeResourceInstanceResult) SetCreatedByUserId(v string) {
	o.CreatedByUserId = v
}

// GetCreatedByUserName returns the CreatedByUserName field value
func (o *DescribeResourceInstanceResult) GetCreatedByUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedByUserName
}

// GetCreatedByUserNameOk returns a tuple with the CreatedByUserName field value
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetCreatedByUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedByUserName, true
}

// SetCreatedByUserName sets field value
func (o *DescribeResourceInstanceResult) SetCreatedByUserName(v string) {
	o.CreatedByUserName = v
}

// GetCustomNetworkDetail returns the CustomNetworkDetail field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetCustomNetworkDetail() CustomNetworkResourceDetail {
	if o == nil || IsNil(o.CustomNetworkDetail) {
		var ret CustomNetworkResourceDetail
		return ret
	}
	return *o.CustomNetworkDetail
}

// GetCustomNetworkDetailOk returns a tuple with the CustomNetworkDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetCustomNetworkDetailOk() (*CustomNetworkResourceDetail, bool) {
	if o == nil || IsNil(o.CustomNetworkDetail) {
		return nil, false
	}
	return o.CustomNetworkDetail, true
}

// HasCustomNetworkDetail returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasCustomNetworkDetail() bool {
	if o != nil && !IsNil(o.CustomNetworkDetail) {
		return true
	}

	return false
}

// SetCustomNetworkDetail gets a reference to the given CustomNetworkResourceDetail and assigns it to the CustomNetworkDetail field.
func (o *DescribeResourceInstanceResult) SetCustomNetworkDetail(v CustomNetworkResourceDetail) {
	o.CustomNetworkDetail = &v
}

// GetDetailedNetworkTopology returns the DetailedNetworkTopology field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetDetailedNetworkTopology() map[string]ResourceNetworkTopologyResult {
	if o == nil || IsNil(o.DetailedNetworkTopology) {
		var ret map[string]ResourceNetworkTopologyResult
		return ret
	}
	return *o.DetailedNetworkTopology
}

// GetDetailedNetworkTopologyOk returns a tuple with the DetailedNetworkTopology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetDetailedNetworkTopologyOk() (*map[string]ResourceNetworkTopologyResult, bool) {
	if o == nil || IsNil(o.DetailedNetworkTopology) {
		return nil, false
	}
	return o.DetailedNetworkTopology, true
}

// HasDetailedNetworkTopology returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasDetailedNetworkTopology() bool {
	if o != nil && !IsNil(o.DetailedNetworkTopology) {
		return true
	}

	return false
}

// SetDetailedNetworkTopology gets a reference to the given map[string]ResourceNetworkTopologyResult and assigns it to the DetailedNetworkTopology field.
func (o *DescribeResourceInstanceResult) SetDetailedNetworkTopology(v map[string]ResourceNetworkTopologyResult) {
	o.DetailedNetworkTopology = &v
}

// GetExternalPayerId returns the ExternalPayerId field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetExternalPayerId() string {
	if o == nil || IsNil(o.ExternalPayerId) {
		var ret string
		return ret
	}
	return *o.ExternalPayerId
}

// GetExternalPayerIdOk returns a tuple with the ExternalPayerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetExternalPayerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalPayerId) {
		return nil, false
	}
	return o.ExternalPayerId, true
}

// HasExternalPayerId returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasExternalPayerId() bool {
	if o != nil && !IsNil(o.ExternalPayerId) {
		return true
	}

	return false
}

// SetExternalPayerId gets a reference to the given string and assigns it to the ExternalPayerId field.
func (o *DescribeResourceInstanceResult) SetExternalPayerId(v string) {
	o.ExternalPayerId = &v
}

// GetGcpProjectID returns the GcpProjectID field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetGcpProjectID() string {
	if o == nil || IsNil(o.GcpProjectID) {
		var ret string
		return ret
	}
	return *o.GcpProjectID
}

// GetGcpProjectIDOk returns a tuple with the GcpProjectID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetGcpProjectIDOk() (*string, bool) {
	if o == nil || IsNil(o.GcpProjectID) {
		return nil, false
	}
	return o.GcpProjectID, true
}

// HasGcpProjectID returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasGcpProjectID() bool {
	if o != nil && !IsNil(o.GcpProjectID) {
		return true
	}

	return false
}

// SetGcpProjectID gets a reference to the given string and assigns it to the GcpProjectID field.
func (o *DescribeResourceInstanceResult) SetGcpProjectID(v string) {
	o.GcpProjectID = &v
}

// GetHighAvailability returns the HighAvailability field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetHighAvailability() bool {
	if o == nil || IsNil(o.HighAvailability) {
		var ret bool
		return ret
	}
	return *o.HighAvailability
}

// GetHighAvailabilityOk returns a tuple with the HighAvailability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetHighAvailabilityOk() (*bool, bool) {
	if o == nil || IsNil(o.HighAvailability) {
		return nil, false
	}
	return o.HighAvailability, true
}

// HasHighAvailability returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasHighAvailability() bool {
	if o != nil && !IsNil(o.HighAvailability) {
		return true
	}

	return false
}

// SetHighAvailability gets a reference to the given bool and assigns it to the HighAvailability field.
func (o *DescribeResourceInstanceResult) SetHighAvailability(v bool) {
	o.HighAvailability = &v
}

// GetId returns the Id field value
func (o *DescribeResourceInstanceResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DescribeResourceInstanceResult) SetId(v string) {
	o.Id = v
}

// GetLastModifiedAt returns the LastModifiedAt field value
func (o *DescribeResourceInstanceResult) GetLastModifiedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastModifiedAt
}

// GetLastModifiedAtOk returns a tuple with the LastModifiedAt field value
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetLastModifiedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifiedAt, true
}

// SetLastModifiedAt sets field value
func (o *DescribeResourceInstanceResult) SetLastModifiedAt(v string) {
	o.LastModifiedAt = v
}

// GetNetworkType returns the NetworkType field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetNetworkType() string {
	if o == nil || IsNil(o.NetworkType) {
		var ret string
		return ret
	}
	return *o.NetworkType
}

// GetNetworkTypeOk returns a tuple with the NetworkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetNetworkTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkType) {
		return nil, false
	}
	return o.NetworkType, true
}

// HasNetworkType returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasNetworkType() bool {
	if o != nil && !IsNil(o.NetworkType) {
		return true
	}

	return false
}

// SetNetworkType gets a reference to the given string and assigns it to the NetworkType field.
func (o *DescribeResourceInstanceResult) SetNetworkType(v string) {
	o.NetworkType = &v
}

// GetProductTierFeatures returns the ProductTierFeatures field value
func (o *DescribeResourceInstanceResult) GetProductTierFeatures() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ProductTierFeatures
}

// GetProductTierFeaturesOk returns a tuple with the ProductTierFeatures field value
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetProductTierFeaturesOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.ProductTierFeatures, true
}

// SetProductTierFeatures sets field value
func (o *DescribeResourceInstanceResult) SetProductTierFeatures(v map[string]interface{}) {
	o.ProductTierFeatures = v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *DescribeResourceInstanceResult) SetRegion(v string) {
	o.Region = &v
}

// GetResultParams returns the ResultParams field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *DescribeResourceInstanceResult) GetResultParams() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.ResultParams
}

// GetResultParamsOk returns a tuple with the ResultParams field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DescribeResourceInstanceResult) GetResultParamsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ResultParams) {
		return nil, false
	}
	return &o.ResultParams, true
}

// SetResultParams sets field value
func (o *DescribeResourceInstanceResult) SetResultParams(v interface{}) {
	o.ResultParams = v
}

// GetStatus returns the Status field value
func (o *DescribeResourceInstanceResult) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *DescribeResourceInstanceResult) SetStatus(v string) {
	o.Status = v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *DescribeResourceInstanceResult) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

func (o DescribeResourceInstanceResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeResourceInstanceResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["active"] = o.Active
	if !IsNil(o.AwsAccountID) {
		toSerialize["awsAccountID"] = o.AwsAccountID
	}
	if !IsNil(o.BackupStatus) {
		toSerialize["backupStatus"] = o.BackupStatus
	}
	if !IsNil(o.CloudProvider) {
		toSerialize["cloud_provider"] = o.CloudProvider
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["createdByUserId"] = o.CreatedByUserId
	toSerialize["createdByUserName"] = o.CreatedByUserName
	if !IsNil(o.CustomNetworkDetail) {
		toSerialize["customNetworkDetail"] = o.CustomNetworkDetail
	}
	if !IsNil(o.DetailedNetworkTopology) {
		toSerialize["detailedNetworkTopology"] = o.DetailedNetworkTopology
	}
	if !IsNil(o.ExternalPayerId) {
		toSerialize["externalPayerId"] = o.ExternalPayerId
	}
	if !IsNil(o.GcpProjectID) {
		toSerialize["gcpProjectID"] = o.GcpProjectID
	}
	if !IsNil(o.HighAvailability) {
		toSerialize["highAvailability"] = o.HighAvailability
	}
	toSerialize["id"] = o.Id
	toSerialize["last_modified_at"] = o.LastModifiedAt
	if !IsNil(o.NetworkType) {
		toSerialize["network_type"] = o.NetworkType
	}
	toSerialize["productTierFeatures"] = o.ProductTierFeatures
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if o.ResultParams != nil {
		toSerialize["result_params"] = o.ResultParams
	}
	toSerialize["status"] = o.Status
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DescribeResourceInstanceResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"active",
		"created_at",
		"createdByUserId",
		"createdByUserName",
		"id",
		"last_modified_at",
		"productTierFeatures",
		"result_params",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDescribeResourceInstanceResult := _DescribeResourceInstanceResult{}

	err = json.Unmarshal(data, &varDescribeResourceInstanceResult)

	if err != nil {
		return err
	}

	*o = DescribeResourceInstanceResult(varDescribeResourceInstanceResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "active")
		delete(additionalProperties, "awsAccountID")
		delete(additionalProperties, "backupStatus")
		delete(additionalProperties, "cloud_provider")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "createdByUserId")
		delete(additionalProperties, "createdByUserName")
		delete(additionalProperties, "customNetworkDetail")
		delete(additionalProperties, "detailedNetworkTopology")
		delete(additionalProperties, "externalPayerId")
		delete(additionalProperties, "gcpProjectID")
		delete(additionalProperties, "highAvailability")
		delete(additionalProperties, "id")
		delete(additionalProperties, "last_modified_at")
		delete(additionalProperties, "network_type")
		delete(additionalProperties, "productTierFeatures")
		delete(additionalProperties, "region")
		delete(additionalProperties, "result_params")
		delete(additionalProperties, "status")
		delete(additionalProperties, "subscriptionId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDescribeResourceInstanceResult struct {
	value *DescribeResourceInstanceResult
	isSet bool
}

func (v NullableDescribeResourceInstanceResult) Get() *DescribeResourceInstanceResult {
	return v.value
}

func (v *NullableDescribeResourceInstanceResult) Set(val *DescribeResourceInstanceResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeResourceInstanceResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeResourceInstanceResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeResourceInstanceResult(val *DescribeResourceInstanceResult) *NullableDescribeResourceInstanceResult {
	return &NullableDescribeResourceInstanceResult{value: val, isSet: true}
}

func (v NullableDescribeResourceInstanceResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeResourceInstanceResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


