/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
)

// checks if the DescribeResourceInstanceResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DescribeResourceInstanceResult{}

// DescribeResourceInstanceResult struct for DescribeResourceInstanceResult
type DescribeResourceInstanceResult struct {
	// True if this resource instance has associated infrastructure deployed
	Active *bool `json:"active,omitempty"`
	// Whether the instance has autoscaling enabled
	AutoscalingEnabled *bool `json:"autoscalingEnabled,omitempty"`
	// The AWS account ID
	AwsAccountID *string       `json:"awsAccountID,omitempty"`
	BackupStatus *BackupStatus `json:"backupStatus,omitempty"`
	// The cloud provider name
	CloudProvider *string `json:"cloud_provider,omitempty"`
	// The instance creation time
	CreatedAt *string `json:"created_at,omitempty"`
	// ID of a User
	CreatedByUserId *string `json:"createdByUserId,omitempty"`
	// The name of the user that created the resource instance
	CreatedByUserName *string `json:"createdByUserName,omitempty"`
	// The current number of replicas
	CurrentReplicas     *string                      `json:"currentReplicas,omitempty"`
	CustomNetworkDetail *CustomNetworkResourceDetail `json:"customNetworkDetail,omitempty"`
	// The detailed network topology
	DetailedNetworkTopology map[string]interface{} `json:"detailedNetworkTopology,omitempty"`
	// The external payer id to record which customer should pay for this resource instance
	ExternalPayerId *string `json:"externalPayerId,omitempty"`
	// The GCP project ID
	GcpProjectID *string `json:"gcpProjectID,omitempty"`
	// Whether the instance is High Availability
	HighAvailability *bool `json:"highAvailability,omitempty"`
	// The instance ID
	Id *string `json:"id,omitempty"`
	// The load status of a pod
	InstanceLoadStatus          *string                      `json:"instanceLoadStatus,omitempty"`
	KubernetesDashboardEndpoint *KubernetesDashboardEndpoint `json:"kubernetesDashboardEndpoint,omitempty"`
	// The instance update time
	LastModifiedAt *string `json:"last_modified_at,omitempty"`
	// Pending actions or maintenance tasks for the resource instance, with action type as key and reference key as value.
	MaintenanceTasks map[string]interface{} `json:"maintenanceTasks,omitempty"`
	// The maximum number of replicas
	MaxReplicas *string `json:"maxReplicas,omitempty"`
	// The minimum number of replicas
	MinReplicas *string `json:"minReplicas,omitempty"`
	// The network type
	NetworkType *string `json:"network_type,omitempty"`
	// The product tier features
	ProductTierFeatures map[string]interface{} `json:"productTierFeatures,omitempty"`
	// The region code
	Region *string `json:"region,omitempty"`
	// ID of a resource
	ResourceID *string `json:"resourceID,omitempty"`
	// Custom result parameters
	ResultParams interface{} `json:"result_params,omitempty"`
	// Whether the instance has serverless enabled
	ServerlessEnabled *bool `json:"serverlessEnabled,omitempty"`
	// The status of an operation
	Status *string `json:"status,omitempty"`
	// Subscription ID
	SubscriptionId      *string              `json:"subscriptionId,omitempty"`
	SubscriptionLicense *SubscriptionLicense `json:"subscriptionLicense,omitempty"`
	// Subscription Status
	SubscriptionStatus   *string `json:"subscriptionStatus,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DescribeResourceInstanceResult DescribeResourceInstanceResult

// NewDescribeResourceInstanceResult instantiates a new DescribeResourceInstanceResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDescribeResourceInstanceResult() *DescribeResourceInstanceResult {
	this := DescribeResourceInstanceResult{}
	return &this
}

// NewDescribeResourceInstanceResultWithDefaults instantiates a new DescribeResourceInstanceResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDescribeResourceInstanceResultWithDefaults() *DescribeResourceInstanceResult {
	this := DescribeResourceInstanceResult{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *DescribeResourceInstanceResult) SetActive(v bool) {
	o.Active = &v
}

// GetAutoscalingEnabled returns the AutoscalingEnabled field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetAutoscalingEnabled() bool {
	if o == nil || IsNil(o.AutoscalingEnabled) {
		var ret bool
		return ret
	}
	return *o.AutoscalingEnabled
}

// GetAutoscalingEnabledOk returns a tuple with the AutoscalingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetAutoscalingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoscalingEnabled) {
		return nil, false
	}
	return o.AutoscalingEnabled, true
}

// HasAutoscalingEnabled returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasAutoscalingEnabled() bool {
	if o != nil && !IsNil(o.AutoscalingEnabled) {
		return true
	}

	return false
}

// SetAutoscalingEnabled gets a reference to the given bool and assigns it to the AutoscalingEnabled field.
func (o *DescribeResourceInstanceResult) SetAutoscalingEnabled(v bool) {
	o.AutoscalingEnabled = &v
}

// GetAwsAccountID returns the AwsAccountID field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetAwsAccountID() string {
	if o == nil || IsNil(o.AwsAccountID) {
		var ret string
		return ret
	}
	return *o.AwsAccountID
}

// GetAwsAccountIDOk returns a tuple with the AwsAccountID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetAwsAccountIDOk() (*string, bool) {
	if o == nil || IsNil(o.AwsAccountID) {
		return nil, false
	}
	return o.AwsAccountID, true
}

// HasAwsAccountID returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasAwsAccountID() bool {
	if o != nil && !IsNil(o.AwsAccountID) {
		return true
	}

	return false
}

// SetAwsAccountID gets a reference to the given string and assigns it to the AwsAccountID field.
func (o *DescribeResourceInstanceResult) SetAwsAccountID(v string) {
	o.AwsAccountID = &v
}

// GetBackupStatus returns the BackupStatus field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetBackupStatus() BackupStatus {
	if o == nil || IsNil(o.BackupStatus) {
		var ret BackupStatus
		return ret
	}
	return *o.BackupStatus
}

// GetBackupStatusOk returns a tuple with the BackupStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetBackupStatusOk() (*BackupStatus, bool) {
	if o == nil || IsNil(o.BackupStatus) {
		return nil, false
	}
	return o.BackupStatus, true
}

// HasBackupStatus returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasBackupStatus() bool {
	if o != nil && !IsNil(o.BackupStatus) {
		return true
	}

	return false
}

// SetBackupStatus gets a reference to the given BackupStatus and assigns it to the BackupStatus field.
func (o *DescribeResourceInstanceResult) SetBackupStatus(v BackupStatus) {
	o.BackupStatus = &v
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetCloudProvider() string {
	if o == nil || IsNil(o.CloudProvider) {
		var ret string
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetCloudProviderOk() (*string, bool) {
	if o == nil || IsNil(o.CloudProvider) {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasCloudProvider() bool {
	if o != nil && !IsNil(o.CloudProvider) {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given string and assigns it to the CloudProvider field.
func (o *DescribeResourceInstanceResult) SetCloudProvider(v string) {
	o.CloudProvider = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *DescribeResourceInstanceResult) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCreatedByUserId returns the CreatedByUserId field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetCreatedByUserId() string {
	if o == nil || IsNil(o.CreatedByUserId) {
		var ret string
		return ret
	}
	return *o.CreatedByUserId
}

// GetCreatedByUserIdOk returns a tuple with the CreatedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetCreatedByUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByUserId) {
		return nil, false
	}
	return o.CreatedByUserId, true
}

// HasCreatedByUserId returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasCreatedByUserId() bool {
	if o != nil && !IsNil(o.CreatedByUserId) {
		return true
	}

	return false
}

// SetCreatedByUserId gets a reference to the given string and assigns it to the CreatedByUserId field.
func (o *DescribeResourceInstanceResult) SetCreatedByUserId(v string) {
	o.CreatedByUserId = &v
}

// GetCreatedByUserName returns the CreatedByUserName field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetCreatedByUserName() string {
	if o == nil || IsNil(o.CreatedByUserName) {
		var ret string
		return ret
	}
	return *o.CreatedByUserName
}

// GetCreatedByUserNameOk returns a tuple with the CreatedByUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetCreatedByUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByUserName) {
		return nil, false
	}
	return o.CreatedByUserName, true
}

// HasCreatedByUserName returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasCreatedByUserName() bool {
	if o != nil && !IsNil(o.CreatedByUserName) {
		return true
	}

	return false
}

// SetCreatedByUserName gets a reference to the given string and assigns it to the CreatedByUserName field.
func (o *DescribeResourceInstanceResult) SetCreatedByUserName(v string) {
	o.CreatedByUserName = &v
}

// GetCurrentReplicas returns the CurrentReplicas field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetCurrentReplicas() string {
	if o == nil || IsNil(o.CurrentReplicas) {
		var ret string
		return ret
	}
	return *o.CurrentReplicas
}

// GetCurrentReplicasOk returns a tuple with the CurrentReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetCurrentReplicasOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentReplicas) {
		return nil, false
	}
	return o.CurrentReplicas, true
}

// HasCurrentReplicas returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasCurrentReplicas() bool {
	if o != nil && !IsNil(o.CurrentReplicas) {
		return true
	}

	return false
}

// SetCurrentReplicas gets a reference to the given string and assigns it to the CurrentReplicas field.
func (o *DescribeResourceInstanceResult) SetCurrentReplicas(v string) {
	o.CurrentReplicas = &v
}

// GetCustomNetworkDetail returns the CustomNetworkDetail field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetCustomNetworkDetail() CustomNetworkResourceDetail {
	if o == nil || IsNil(o.CustomNetworkDetail) {
		var ret CustomNetworkResourceDetail
		return ret
	}
	return *o.CustomNetworkDetail
}

// GetCustomNetworkDetailOk returns a tuple with the CustomNetworkDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetCustomNetworkDetailOk() (*CustomNetworkResourceDetail, bool) {
	if o == nil || IsNil(o.CustomNetworkDetail) {
		return nil, false
	}
	return o.CustomNetworkDetail, true
}

// HasCustomNetworkDetail returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasCustomNetworkDetail() bool {
	if o != nil && !IsNil(o.CustomNetworkDetail) {
		return true
	}

	return false
}

// SetCustomNetworkDetail gets a reference to the given CustomNetworkResourceDetail and assigns it to the CustomNetworkDetail field.
func (o *DescribeResourceInstanceResult) SetCustomNetworkDetail(v CustomNetworkResourceDetail) {
	o.CustomNetworkDetail = &v
}

// GetDetailedNetworkTopology returns the DetailedNetworkTopology field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetDetailedNetworkTopology() map[string]interface{} {
	if o == nil || IsNil(o.DetailedNetworkTopology) {
		var ret map[string]interface{}
		return ret
	}
	return o.DetailedNetworkTopology
}

// GetDetailedNetworkTopologyOk returns a tuple with the DetailedNetworkTopology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetDetailedNetworkTopologyOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DetailedNetworkTopology) {
		return map[string]interface{}{}, false
	}
	return o.DetailedNetworkTopology, true
}

// HasDetailedNetworkTopology returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasDetailedNetworkTopology() bool {
	if o != nil && !IsNil(o.DetailedNetworkTopology) {
		return true
	}

	return false
}

// SetDetailedNetworkTopology gets a reference to the given map[string]interface{} and assigns it to the DetailedNetworkTopology field.
func (o *DescribeResourceInstanceResult) SetDetailedNetworkTopology(v map[string]interface{}) {
	o.DetailedNetworkTopology = v
}

// GetExternalPayerId returns the ExternalPayerId field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetExternalPayerId() string {
	if o == nil || IsNil(o.ExternalPayerId) {
		var ret string
		return ret
	}
	return *o.ExternalPayerId
}

// GetExternalPayerIdOk returns a tuple with the ExternalPayerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetExternalPayerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalPayerId) {
		return nil, false
	}
	return o.ExternalPayerId, true
}

// HasExternalPayerId returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasExternalPayerId() bool {
	if o != nil && !IsNil(o.ExternalPayerId) {
		return true
	}

	return false
}

// SetExternalPayerId gets a reference to the given string and assigns it to the ExternalPayerId field.
func (o *DescribeResourceInstanceResult) SetExternalPayerId(v string) {
	o.ExternalPayerId = &v
}

// GetGcpProjectID returns the GcpProjectID field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetGcpProjectID() string {
	if o == nil || IsNil(o.GcpProjectID) {
		var ret string
		return ret
	}
	return *o.GcpProjectID
}

// GetGcpProjectIDOk returns a tuple with the GcpProjectID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetGcpProjectIDOk() (*string, bool) {
	if o == nil || IsNil(o.GcpProjectID) {
		return nil, false
	}
	return o.GcpProjectID, true
}

// HasGcpProjectID returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasGcpProjectID() bool {
	if o != nil && !IsNil(o.GcpProjectID) {
		return true
	}

	return false
}

// SetGcpProjectID gets a reference to the given string and assigns it to the GcpProjectID field.
func (o *DescribeResourceInstanceResult) SetGcpProjectID(v string) {
	o.GcpProjectID = &v
}

// GetHighAvailability returns the HighAvailability field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetHighAvailability() bool {
	if o == nil || IsNil(o.HighAvailability) {
		var ret bool
		return ret
	}
	return *o.HighAvailability
}

// GetHighAvailabilityOk returns a tuple with the HighAvailability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetHighAvailabilityOk() (*bool, bool) {
	if o == nil || IsNil(o.HighAvailability) {
		return nil, false
	}
	return o.HighAvailability, true
}

// HasHighAvailability returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasHighAvailability() bool {
	if o != nil && !IsNil(o.HighAvailability) {
		return true
	}

	return false
}

// SetHighAvailability gets a reference to the given bool and assigns it to the HighAvailability field.
func (o *DescribeResourceInstanceResult) SetHighAvailability(v bool) {
	o.HighAvailability = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DescribeResourceInstanceResult) SetId(v string) {
	o.Id = &v
}

// GetInstanceLoadStatus returns the InstanceLoadStatus field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetInstanceLoadStatus() string {
	if o == nil || IsNil(o.InstanceLoadStatus) {
		var ret string
		return ret
	}
	return *o.InstanceLoadStatus
}

// GetInstanceLoadStatusOk returns a tuple with the InstanceLoadStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetInstanceLoadStatusOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceLoadStatus) {
		return nil, false
	}
	return o.InstanceLoadStatus, true
}

// HasInstanceLoadStatus returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasInstanceLoadStatus() bool {
	if o != nil && !IsNil(o.InstanceLoadStatus) {
		return true
	}

	return false
}

// SetInstanceLoadStatus gets a reference to the given string and assigns it to the InstanceLoadStatus field.
func (o *DescribeResourceInstanceResult) SetInstanceLoadStatus(v string) {
	o.InstanceLoadStatus = &v
}

// GetKubernetesDashboardEndpoint returns the KubernetesDashboardEndpoint field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetKubernetesDashboardEndpoint() KubernetesDashboardEndpoint {
	if o == nil || IsNil(o.KubernetesDashboardEndpoint) {
		var ret KubernetesDashboardEndpoint
		return ret
	}
	return *o.KubernetesDashboardEndpoint
}

// GetKubernetesDashboardEndpointOk returns a tuple with the KubernetesDashboardEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetKubernetesDashboardEndpointOk() (*KubernetesDashboardEndpoint, bool) {
	if o == nil || IsNil(o.KubernetesDashboardEndpoint) {
		return nil, false
	}
	return o.KubernetesDashboardEndpoint, true
}

// HasKubernetesDashboardEndpoint returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasKubernetesDashboardEndpoint() bool {
	if o != nil && !IsNil(o.KubernetesDashboardEndpoint) {
		return true
	}

	return false
}

// SetKubernetesDashboardEndpoint gets a reference to the given KubernetesDashboardEndpoint and assigns it to the KubernetesDashboardEndpoint field.
func (o *DescribeResourceInstanceResult) SetKubernetesDashboardEndpoint(v KubernetesDashboardEndpoint) {
	o.KubernetesDashboardEndpoint = &v
}

// GetLastModifiedAt returns the LastModifiedAt field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetLastModifiedAt() string {
	if o == nil || IsNil(o.LastModifiedAt) {
		var ret string
		return ret
	}
	return *o.LastModifiedAt
}

// GetLastModifiedAtOk returns a tuple with the LastModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetLastModifiedAtOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedAt) {
		return nil, false
	}
	return o.LastModifiedAt, true
}

// HasLastModifiedAt returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasLastModifiedAt() bool {
	if o != nil && !IsNil(o.LastModifiedAt) {
		return true
	}

	return false
}

// SetLastModifiedAt gets a reference to the given string and assigns it to the LastModifiedAt field.
func (o *DescribeResourceInstanceResult) SetLastModifiedAt(v string) {
	o.LastModifiedAt = &v
}

// GetMaintenanceTasks returns the MaintenanceTasks field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetMaintenanceTasks() map[string]interface{} {
	if o == nil || IsNil(o.MaintenanceTasks) {
		var ret map[string]interface{}
		return ret
	}
	return o.MaintenanceTasks
}

// GetMaintenanceTasksOk returns a tuple with the MaintenanceTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetMaintenanceTasksOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.MaintenanceTasks) {
		return map[string]interface{}{}, false
	}
	return o.MaintenanceTasks, true
}

// HasMaintenanceTasks returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasMaintenanceTasks() bool {
	if o != nil && !IsNil(o.MaintenanceTasks) {
		return true
	}

	return false
}

// SetMaintenanceTasks gets a reference to the given map[string]interface{} and assigns it to the MaintenanceTasks field.
func (o *DescribeResourceInstanceResult) SetMaintenanceTasks(v map[string]interface{}) {
	o.MaintenanceTasks = v
}

// GetMaxReplicas returns the MaxReplicas field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetMaxReplicas() string {
	if o == nil || IsNil(o.MaxReplicas) {
		var ret string
		return ret
	}
	return *o.MaxReplicas
}

// GetMaxReplicasOk returns a tuple with the MaxReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetMaxReplicasOk() (*string, bool) {
	if o == nil || IsNil(o.MaxReplicas) {
		return nil, false
	}
	return o.MaxReplicas, true
}

// HasMaxReplicas returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasMaxReplicas() bool {
	if o != nil && !IsNil(o.MaxReplicas) {
		return true
	}

	return false
}

// SetMaxReplicas gets a reference to the given string and assigns it to the MaxReplicas field.
func (o *DescribeResourceInstanceResult) SetMaxReplicas(v string) {
	o.MaxReplicas = &v
}

// GetMinReplicas returns the MinReplicas field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetMinReplicas() string {
	if o == nil || IsNil(o.MinReplicas) {
		var ret string
		return ret
	}
	return *o.MinReplicas
}

// GetMinReplicasOk returns a tuple with the MinReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetMinReplicasOk() (*string, bool) {
	if o == nil || IsNil(o.MinReplicas) {
		return nil, false
	}
	return o.MinReplicas, true
}

// HasMinReplicas returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasMinReplicas() bool {
	if o != nil && !IsNil(o.MinReplicas) {
		return true
	}

	return false
}

// SetMinReplicas gets a reference to the given string and assigns it to the MinReplicas field.
func (o *DescribeResourceInstanceResult) SetMinReplicas(v string) {
	o.MinReplicas = &v
}

// GetNetworkType returns the NetworkType field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetNetworkType() string {
	if o == nil || IsNil(o.NetworkType) {
		var ret string
		return ret
	}
	return *o.NetworkType
}

// GetNetworkTypeOk returns a tuple with the NetworkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetNetworkTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkType) {
		return nil, false
	}
	return o.NetworkType, true
}

// HasNetworkType returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasNetworkType() bool {
	if o != nil && !IsNil(o.NetworkType) {
		return true
	}

	return false
}

// SetNetworkType gets a reference to the given string and assigns it to the NetworkType field.
func (o *DescribeResourceInstanceResult) SetNetworkType(v string) {
	o.NetworkType = &v
}

// GetProductTierFeatures returns the ProductTierFeatures field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetProductTierFeatures() map[string]interface{} {
	if o == nil || IsNil(o.ProductTierFeatures) {
		var ret map[string]interface{}
		return ret
	}
	return o.ProductTierFeatures
}

// GetProductTierFeaturesOk returns a tuple with the ProductTierFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetProductTierFeaturesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ProductTierFeatures) {
		return map[string]interface{}{}, false
	}
	return o.ProductTierFeatures, true
}

// HasProductTierFeatures returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasProductTierFeatures() bool {
	if o != nil && !IsNil(o.ProductTierFeatures) {
		return true
	}

	return false
}

// SetProductTierFeatures gets a reference to the given map[string]interface{} and assigns it to the ProductTierFeatures field.
func (o *DescribeResourceInstanceResult) SetProductTierFeatures(v map[string]interface{}) {
	o.ProductTierFeatures = v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *DescribeResourceInstanceResult) SetRegion(v string) {
	o.Region = &v
}

// GetResourceID returns the ResourceID field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetResourceID() string {
	if o == nil || IsNil(o.ResourceID) {
		var ret string
		return ret
	}
	return *o.ResourceID
}

// GetResourceIDOk returns a tuple with the ResourceID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetResourceIDOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceID) {
		return nil, false
	}
	return o.ResourceID, true
}

// HasResourceID returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasResourceID() bool {
	if o != nil && !IsNil(o.ResourceID) {
		return true
	}

	return false
}

// SetResourceID gets a reference to the given string and assigns it to the ResourceID field.
func (o *DescribeResourceInstanceResult) SetResourceID(v string) {
	o.ResourceID = &v
}

// GetResultParams returns the ResultParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DescribeResourceInstanceResult) GetResultParams() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ResultParams
}

// GetResultParamsOk returns a tuple with the ResultParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DescribeResourceInstanceResult) GetResultParamsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ResultParams) {
		return nil, false
	}
	return &o.ResultParams, true
}

// HasResultParams returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasResultParams() bool {
	if o != nil && !IsNil(o.ResultParams) {
		return true
	}

	return false
}

// SetResultParams gets a reference to the given interface{} and assigns it to the ResultParams field.
func (o *DescribeResourceInstanceResult) SetResultParams(v interface{}) {
	o.ResultParams = v
}

// GetServerlessEnabled returns the ServerlessEnabled field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetServerlessEnabled() bool {
	if o == nil || IsNil(o.ServerlessEnabled) {
		var ret bool
		return ret
	}
	return *o.ServerlessEnabled
}

// GetServerlessEnabledOk returns a tuple with the ServerlessEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetServerlessEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ServerlessEnabled) {
		return nil, false
	}
	return o.ServerlessEnabled, true
}

// HasServerlessEnabled returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasServerlessEnabled() bool {
	if o != nil && !IsNil(o.ServerlessEnabled) {
		return true
	}

	return false
}

// SetServerlessEnabled gets a reference to the given bool and assigns it to the ServerlessEnabled field.
func (o *DescribeResourceInstanceResult) SetServerlessEnabled(v bool) {
	o.ServerlessEnabled = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DescribeResourceInstanceResult) SetStatus(v string) {
	o.Status = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *DescribeResourceInstanceResult) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetSubscriptionLicense returns the SubscriptionLicense field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetSubscriptionLicense() SubscriptionLicense {
	if o == nil || IsNil(o.SubscriptionLicense) {
		var ret SubscriptionLicense
		return ret
	}
	return *o.SubscriptionLicense
}

// GetSubscriptionLicenseOk returns a tuple with the SubscriptionLicense field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetSubscriptionLicenseOk() (*SubscriptionLicense, bool) {
	if o == nil || IsNil(o.SubscriptionLicense) {
		return nil, false
	}
	return o.SubscriptionLicense, true
}

// HasSubscriptionLicense returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasSubscriptionLicense() bool {
	if o != nil && !IsNil(o.SubscriptionLicense) {
		return true
	}

	return false
}

// SetSubscriptionLicense gets a reference to the given SubscriptionLicense and assigns it to the SubscriptionLicense field.
func (o *DescribeResourceInstanceResult) SetSubscriptionLicense(v SubscriptionLicense) {
	o.SubscriptionLicense = &v
}

// GetSubscriptionStatus returns the SubscriptionStatus field value if set, zero value otherwise.
func (o *DescribeResourceInstanceResult) GetSubscriptionStatus() string {
	if o == nil || IsNil(o.SubscriptionStatus) {
		var ret string
		return ret
	}
	return *o.SubscriptionStatus
}

// GetSubscriptionStatusOk returns a tuple with the SubscriptionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DescribeResourceInstanceResult) GetSubscriptionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionStatus) {
		return nil, false
	}
	return o.SubscriptionStatus, true
}

// HasSubscriptionStatus returns a boolean if a field has been set.
func (o *DescribeResourceInstanceResult) HasSubscriptionStatus() bool {
	if o != nil && !IsNil(o.SubscriptionStatus) {
		return true
	}

	return false
}

// SetSubscriptionStatus gets a reference to the given string and assigns it to the SubscriptionStatus field.
func (o *DescribeResourceInstanceResult) SetSubscriptionStatus(v string) {
	o.SubscriptionStatus = &v
}

func (o DescribeResourceInstanceResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DescribeResourceInstanceResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.AutoscalingEnabled) {
		toSerialize["autoscalingEnabled"] = o.AutoscalingEnabled
	}
	if !IsNil(o.AwsAccountID) {
		toSerialize["awsAccountID"] = o.AwsAccountID
	}
	if !IsNil(o.BackupStatus) {
		toSerialize["backupStatus"] = o.BackupStatus
	}
	if !IsNil(o.CloudProvider) {
		toSerialize["cloud_provider"] = o.CloudProvider
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CreatedByUserId) {
		toSerialize["createdByUserId"] = o.CreatedByUserId
	}
	if !IsNil(o.CreatedByUserName) {
		toSerialize["createdByUserName"] = o.CreatedByUserName
	}
	if !IsNil(o.CurrentReplicas) {
		toSerialize["currentReplicas"] = o.CurrentReplicas
	}
	if !IsNil(o.CustomNetworkDetail) {
		toSerialize["customNetworkDetail"] = o.CustomNetworkDetail
	}
	if !IsNil(o.DetailedNetworkTopology) {
		toSerialize["detailedNetworkTopology"] = o.DetailedNetworkTopology
	}
	if !IsNil(o.ExternalPayerId) {
		toSerialize["externalPayerId"] = o.ExternalPayerId
	}
	if !IsNil(o.GcpProjectID) {
		toSerialize["gcpProjectID"] = o.GcpProjectID
	}
	if !IsNil(o.HighAvailability) {
		toSerialize["highAvailability"] = o.HighAvailability
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InstanceLoadStatus) {
		toSerialize["instanceLoadStatus"] = o.InstanceLoadStatus
	}
	if !IsNil(o.KubernetesDashboardEndpoint) {
		toSerialize["kubernetesDashboardEndpoint"] = o.KubernetesDashboardEndpoint
	}
	if !IsNil(o.LastModifiedAt) {
		toSerialize["last_modified_at"] = o.LastModifiedAt
	}
	if !IsNil(o.MaintenanceTasks) {
		toSerialize["maintenanceTasks"] = o.MaintenanceTasks
	}
	if !IsNil(o.MaxReplicas) {
		toSerialize["maxReplicas"] = o.MaxReplicas
	}
	if !IsNil(o.MinReplicas) {
		toSerialize["minReplicas"] = o.MinReplicas
	}
	if !IsNil(o.NetworkType) {
		toSerialize["network_type"] = o.NetworkType
	}
	if !IsNil(o.ProductTierFeatures) {
		toSerialize["productTierFeatures"] = o.ProductTierFeatures
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.ResourceID) {
		toSerialize["resourceID"] = o.ResourceID
	}
	if o.ResultParams != nil {
		toSerialize["result_params"] = o.ResultParams
	}
	if !IsNil(o.ServerlessEnabled) {
		toSerialize["serverlessEnabled"] = o.ServerlessEnabled
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if !IsNil(o.SubscriptionLicense) {
		toSerialize["subscriptionLicense"] = o.SubscriptionLicense
	}
	if !IsNil(o.SubscriptionStatus) {
		toSerialize["subscriptionStatus"] = o.SubscriptionStatus
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DescribeResourceInstanceResult) UnmarshalJSON(data []byte) (err error) {
	varDescribeResourceInstanceResult := _DescribeResourceInstanceResult{}

	err = json.Unmarshal(data, &varDescribeResourceInstanceResult)

	if err != nil {
		return err
	}

	*o = DescribeResourceInstanceResult(varDescribeResourceInstanceResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "active")
		delete(additionalProperties, "autoscalingEnabled")
		delete(additionalProperties, "awsAccountID")
		delete(additionalProperties, "backupStatus")
		delete(additionalProperties, "cloud_provider")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "createdByUserId")
		delete(additionalProperties, "createdByUserName")
		delete(additionalProperties, "currentReplicas")
		delete(additionalProperties, "customNetworkDetail")
		delete(additionalProperties, "detailedNetworkTopology")
		delete(additionalProperties, "externalPayerId")
		delete(additionalProperties, "gcpProjectID")
		delete(additionalProperties, "highAvailability")
		delete(additionalProperties, "id")
		delete(additionalProperties, "instanceLoadStatus")
		delete(additionalProperties, "kubernetesDashboardEndpoint")
		delete(additionalProperties, "last_modified_at")
		delete(additionalProperties, "maintenanceTasks")
		delete(additionalProperties, "maxReplicas")
		delete(additionalProperties, "minReplicas")
		delete(additionalProperties, "network_type")
		delete(additionalProperties, "productTierFeatures")
		delete(additionalProperties, "region")
		delete(additionalProperties, "resourceID")
		delete(additionalProperties, "result_params")
		delete(additionalProperties, "serverlessEnabled")
		delete(additionalProperties, "status")
		delete(additionalProperties, "subscriptionId")
		delete(additionalProperties, "subscriptionLicense")
		delete(additionalProperties, "subscriptionStatus")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDescribeResourceInstanceResult struct {
	value *DescribeResourceInstanceResult
	isSet bool
}

func (v NullableDescribeResourceInstanceResult) Get() *DescribeResourceInstanceResult {
	return v.value
}

func (v *NullableDescribeResourceInstanceResult) Set(val *DescribeResourceInstanceResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDescribeResourceInstanceResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDescribeResourceInstanceResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDescribeResourceInstanceResult(val *DescribeResourceInstanceResult) *NullableDescribeResourceInstanceResult {
	return &NullableDescribeResourceInstanceResult{value: val, isSet: true}
}

func (v NullableDescribeResourceInstanceResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDescribeResourceInstanceResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
