openapi: 3.0.3
info:
  description: REST API for Omnistrate Fleet
  title: Omnistrate Fleet API
  version: 2022-09-01-00
servers:
- url: https://api.omnistrate.cloud
tags:
- description: The cost API provides insights into the cost of operating a fleet
  name: cost-api
- description: The set of APIs manage the internal temporal workflows.
  name: fleet-workflows-api
- description: The set of APIs manage the inventory for service providers.
  name: inventory-api
- description: The set of APIs manage the host clusters for service providers.
  name: hostcluster-api
- description: The set of APIs manage the events for service providers.
  name: events-api
- description: The set of APIs for auditing fleet events for service providers.
  name: audit-events-api
- description: The set of APIs manage the operations and observe overall fleet health
    for service providers
  name: operations-api
- name: webhooks-api
- name: notifications-api
- name: customer-onboardings-api
- name: helm-package-api
- name: fleet-custom-network-api
- description: The set of APIs to manage invoices for service providers.
  name: invoice-api
paths:
  /2022-09-01-00/fleet/account-config/{id}:
    delete:
      operationId: inventory-api#DeleteAccountConfig
      parameters:
      - description: Account Config ID to operate on
        example: ac-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Account Config
          example: Non amet tempora.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DeleteAccountConfig inventory-api
      tags:
      - inventory-api
    get:
      operationId: inventory-api#DescribeAccountConfig
      parameters:
      - description: Account Config ID to operate on
        example: ac-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of an Account Config
          example: Sunt quis expedita dignissimos molestias.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                awsAccountID: "123456789012"
                awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                azureTenantID: 12345678-1234-1234-1234-123456789012
                byoaInstanceIDs:
                - instance-12345678
                - instance-abcdefgh
                cloudProviderId: infra-12345678
                description: An AWS account hosting multiple dev environments
                gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                gcpProjectID: my-project
                gcpProjectNumber: "123456789012"
                gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                id: ac-12345678
                name: Dev AWS account
                status: READY
                statusMessage: Account is ready
              schema:
                $ref: "#/components/schemas/FleetDescribeAccountConfigResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe an account\
            \ config"
      security:
      - api_key_header_Authorization: []
      summary: DescribeAccountConfig inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/account-configs:
    get:
      operationId: inventory-api#ListAccountConfigs
      requestBody:
        content:
          application/json:
            example:
              cloudProviderName: aws
            schema:
              $ref: "#/components/schemas/FleetListAccountConfigsRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                accountConfigs:
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: infra-12345678
                  description: An AWS account hosting multiple dev environments
                  gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: ac-12345678
                  name: Dev AWS account
                  status: READY
                  statusMessage: Account is ready
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: infra-12345678
                  description: An AWS account hosting multiple dev environments
                  gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: ac-12345678
                  name: Dev AWS account
                  status: READY
                  statusMessage: Account is ready
                - awsAccountID: "123456789012"
                  awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
                  awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
                  awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
                  azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  byoaInstanceIDs:
                  - instance-12345678
                  - instance-abcdefgh
                  cloudProviderId: infra-12345678
                  description: An AWS account hosting multiple dev environments
                  gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
                  id: ac-12345678
                  name: Dev AWS account
                  status: READY
                  statusMessage: Account is ready
                ids:
                - ac-12345678
                - ac-abcdefgh
                - ac-1234efgh
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/ListAccountConfigsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list account configs"
      security:
      - api_key_header_Authorization: []
      summary: ListAccountConfigs inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/audit-events:
    get:
      operationId: audit-events-api#AuditEvents
      parameters:
      - allowEmptyValue: true
        example: token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The next token to use for pagination
          example: token
          type: string
        style: form
      - allowEmptyValue: true
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        style: form
      - allowEmptyValue: true
        description: The service ID to list events for
        example: s-123456
        explode: true
        in: query
        name: serviceID
        required: false
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: form
      - allowEmptyValue: true
        example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
        explode: true
        in: query
        name: environmentType
        required: false
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: form
      - allowEmptyValue: true
        description: The event types to filter by
        example:
        - Nulla et inventore quidem beatae.
        - Dolores vitae neque voluptas ut voluptas.
        - Et adipisci.
        explode: true
        in: query
        name: eventSourceTypes
        required: false
        schema:
          description: The event types to filter by
          example:
          - Asperiores impedit voluptas cupiditate est aut voluptatem.
          - Quia maxime sapiente.
          - Quia amet ut laudantium qui placeat.
          - Laboriosam optio.
          items:
            example: Suscipit quos.
            type: string
          type: array
        style: form
      - allowEmptyValue: true
        description: The instance ID to list events for
        example: instance-12345678
        explode: true
        in: query
        name: instanceID
        required: false
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: form
      - allowEmptyValue: true
        example: Et iusto eos.
        explode: true
        in: query
        name: productTierID
        required: false
        schema:
          description: ID of a Product Tier
          example: Omnis quos quos.
          type: string
        style: form
      - allowEmptyValue: true
        description: Start date of the events
        example: 2023-01-01T10:00:00Z
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: End date of the events
        example: 2024-01-01T10:00:00Z
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - environmentId: Animi esse et.
                  eventSource: "Customer, Infra or Maintenance"
                  id: Ab dolore architecto laboriosam repellendus necessitatibus enim.
                  instanceId: Est vel nihil ab distinctio perspiciatis.
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  planVersion: v1.0
                  productTierId: Autem neque soluta soluta et et porro.
                  resourceName: Veritatis quis.
                  serviceId: Explicabo itaque.
                  serviceName: mysql
                  servicePlanName: Basic Plan
                  time: Maxime qui nisi.
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                  workflowId: workflow-12345678
                - environmentId: Animi esse et.
                  eventSource: "Customer, Infra or Maintenance"
                  id: Ab dolore architecto laboriosam repellendus necessitatibus enim.
                  instanceId: Est vel nihil ab distinctio perspiciatis.
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  planVersion: v1.0
                  productTierId: Autem neque soluta soluta et et porro.
                  resourceName: Veritatis quis.
                  serviceId: Explicabo itaque.
                  serviceName: mysql
                  servicePlanName: Basic Plan
                  time: Maxime qui nisi.
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                  workflowId: workflow-12345678
                - environmentId: Animi esse et.
                  eventSource: "Customer, Infra or Maintenance"
                  id: Ab dolore architecto laboriosam repellendus necessitatibus enim.
                  instanceId: Est vel nihil ab distinctio perspiciatis.
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  planVersion: v1.0
                  productTierId: Autem neque soluta soluta et et porro.
                  resourceName: Veritatis quis.
                  serviceId: Explicabo itaque.
                  serviceName: mysql
                  servicePlanName: Basic Plan
                  time: Maxime qui nisi.
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                  workflowId: workflow-12345678
                ids:
                - event-12345678
                nextPageToken: Sit harum laboriosam totam voluptas vero.
              schema:
                $ref: "#/components/schemas/FleetAuditEventsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list events"
      security:
      - api_key_header_Authorization: []
      summary: AuditEvents audit-events-api
      tags:
      - audit-events-api
  /2022-09-01-00/fleet/cost/cloud-provider:
    get:
      description: Get the total cost of operating a fleet on a cloud provider
      operationId: cost-api#DescribeCloudProviderCost
      parameters:
      - allowEmptyValue: true
        description: The start date of the range
        example: 2023-01-01T10:00:00Z
        explode: true
        in: query
        name: startDate
        required: true
        schema:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: The end date of the range
        example: 2024-01-01T10:00:00Z
        explode: true
        in: query
        name: endDate
        required: true
        schema:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: The type of environment to filter costs by
        example: DEV
        explode: true
        in: query
        name: environmentType
        required: true
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: form
      - allowEmptyValue: true
        description: The frequency of the cost data
        example: DAILY|MONTHLY
        explode: true
        in: query
        name: frequency
        required: true
        schema:
          description: The frequency of the cost data
          example: DAILY|MONTHLY
          type: string
        style: form
      - allowEmptyValue: true
        description: The cloud provider IDs to include in the cost data
        example: "infra-12345678,infra-23456789"
        explode: true
        in: query
        name: includeCloudProviderIDs
        required: false
        schema:
          description: The cloud provider IDs to include in the cost data
          example: "infra-12345678,infra-23456789"
          type: string
        style: form
      - allowEmptyValue: true
        description: The cloud provider IDs to exclude from the cost data
        example: "infra-12345678,infra-23456789"
        explode: true
        in: query
        name: excludeCloudProviderIDs
        required: false
        schema:
          description: The cloud provider IDs to exclude from the cost data
          example: "infra-12345678,infra-23456789"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                cloudProviderCosts:
                  infra-abcdefgh:
                    cloudProviderName: aws
                    cost:
                    - cost: 100
                      date: 2023-01-01T10:00:00Z
                    - cost: 200
                      date: 2023-01-02T10:00:00Z
                    - cost: 145
                      date: 2023-01-03T10:00:00Z
                    totalCost: 445
              schema:
                $ref: "#/components/schemas/DescribeCloudProviderCostResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to process the request"
      security:
      - api_key_header_Authorization: []
      summary: DescribeCloudProviderCost cost-api
      tags:
      - cost-api
  /2022-09-01-00/fleet/cost/deployment-cell:
    get:
      description: Get the total cost of operating a fleet in a deployment cell
      operationId: cost-api#DescribeDeploymentCellCost
      parameters:
      - allowEmptyValue: true
        description: The start date of the range
        example: 2023-01-01T10:00:00Z
        explode: true
        in: query
        name: startDate
        required: true
        schema:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: The end date of the range
        example: 2024-01-01T10:00:00Z
        explode: true
        in: query
        name: endDate
        required: true
        schema:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: The type of environment to filter costs by
        example: DEV
        explode: true
        in: query
        name: environmentType
        required: true
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: form
      - allowEmptyValue: true
        description: The frequency of the cost data
        example: DAILY|MONTHLY
        explode: true
        in: query
        name: frequency
        required: true
        schema:
          description: The frequency of the cost data
          example: DAILY|MONTHLY
          type: string
        style: form
      - allowEmptyValue: true
        description: The cloud provider IDs to include in the cost data
        example: "infra-12345678,infra-23456789"
        explode: true
        in: query
        name: includeCloudProviderIDs
        required: false
        schema:
          description: The cloud provider IDs to include in the cost data
          example: "infra-12345678,infra-23456789"
          type: string
        style: form
      - allowEmptyValue: true
        description: The cloud provider IDs to exclude from the cost data
        example: "infra-12345678,infra-23456789"
        explode: true
        in: query
        name: excludeCloudProviderIDs
        required: false
        schema:
          description: The cloud provider IDs to exclude from the cost data
          example: "infra-12345678,infra-23456789"
          type: string
        style: form
      - allowEmptyValue: true
        description: The region IDs to include in the cost data
        example: "region-12345678,region-23456789"
        explode: true
        in: query
        name: includeRegionIDs
        required: false
        schema:
          description: The region IDs to include in the cost data
          example: "region-12345678,region-23456789"
          type: string
        style: form
      - allowEmptyValue: true
        description: The region IDs to exclude from the cost data
        example: "region-12345678,region-23456789"
        explode: true
        in: query
        name: excludeRegionIDs
        required: false
        schema:
          description: The region IDs to exclude from the cost data
          example: "region-12345678,region-23456789"
          type: string
        style: form
      - allowEmptyValue: true
        description: The deployment cell IDs to include in the cost data
        example: "hc-12345678,hc-23456789"
        explode: true
        in: query
        name: includeDeploymentCellIDs
        required: false
        schema:
          description: The deployment cell IDs to include in the cost data
          example: "hc-12345678,hc-23456789"
          type: string
        style: form
      - allowEmptyValue: true
        description: The deployment cell IDs to exclude from the cost data
        example: "hc-12345678,hc-23456789"
        explode: true
        in: query
        name: excludeDeploymentCellIDs
        required: false
        schema:
          description: The deployment cell IDs to exclude from the cost data
          example: "hc-12345678,hc-23456789"
          type: string
        style: form
      - allowEmptyValue: true
        description: The instance IDs to include in the cost data
        example: "instance-12345678,instance-23456789"
        explode: true
        in: query
        name: includeInstanceIDs
        required: false
        schema:
          description: The instance IDs to include in the cost data
          example: "instance-12345678,instance-23456789"
          type: string
        style: form
      - allowEmptyValue: true
        description: The instance IDs to exclude from the cost data
        example: "instance-12345678,instance-23456789"
        explode: true
        in: query
        name: excludeInstanceIDs
        required: false
        schema:
          description: The instance IDs to exclude from the cost data
          example: "instance-12345678,instance-23456789"
          type: string
        style: form
      - allowEmptyValue: true
        description: The number of top instances to include in the cost data
        example: 10
        explode: true
        in: query
        name: topNInstances
        required: false
        schema:
          description: The number of top instances to include in the cost data
          example: 10
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                deploymentCellCosts:
                  hc-abcdefgh:
                    cloudProviderName: aws
                    cost:
                    - cost: 100
                      date: 2023-01-01T10:00:00Z
                    - cost: 200
                      date: 2023-01-02T10:00:00Z
                    - cost: 145
                      date: 2023-01-03T10:00:00Z
                    instancesCost:
                    - cloudProviderName: aws
                      instanceID: instance-12345678
                      isDeleted: false
                      productTierID: pt-12345678
                      productTierName: Standard
                      productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
                      regionName: us-west-2
                      serviceEnvironmentID: se-12345678
                      serviceID: s-12345678
                      subscriptionID: sub-12345678
                      totalCost: 100
                      utilization: 50
                    regionName: us-west-2
                    totalCost: 445
              schema:
                $ref: "#/components/schemas/DescribeDeploymentCellCostResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to process the request"
      security:
      - api_key_header_Authorization: []
      summary: DescribeDeploymentCellCost cost-api
      tags:
      - cost-api
  /2022-09-01-00/fleet/cost/region:
    get:
      description: Get the total cost of operating a fleet in a region
      operationId: cost-api#DescribeRegionCost
      parameters:
      - allowEmptyValue: true
        description: The start date of the range
        example: 2023-01-01T10:00:00Z
        explode: true
        in: query
        name: startDate
        required: true
        schema:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: The end date of the range
        example: 2024-01-01T10:00:00Z
        explode: true
        in: query
        name: endDate
        required: true
        schema:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: The type of environment to filter costs by
        example: DEV
        explode: true
        in: query
        name: environmentType
        required: true
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: form
      - allowEmptyValue: true
        description: The frequency of the cost data
        example: DAILY|MONTHLY
        explode: true
        in: query
        name: frequency
        required: true
        schema:
          description: The frequency of the cost data
          example: DAILY|MONTHLY
          type: string
        style: form
      - allowEmptyValue: true
        description: The cloud provider IDs to include in the cost data
        example: "infra-12345678,infra-23456789"
        explode: true
        in: query
        name: includeCloudProviderIDs
        required: false
        schema:
          description: The cloud provider IDs to include in the cost data
          example: "infra-12345678,infra-23456789"
          type: string
        style: form
      - allowEmptyValue: true
        description: The cloud provider IDs to exclude from the cost data
        example: "infra-12345678,infra-23456789"
        explode: true
        in: query
        name: excludeCloudProviderIDs
        required: false
        schema:
          description: The cloud provider IDs to exclude from the cost data
          example: "infra-12345678,infra-23456789"
          type: string
        style: form
      - allowEmptyValue: true
        description: The region IDs to include in the cost data
        example: "region-12345678,region-23456789"
        explode: true
        in: query
        name: includeRegionIDs
        required: false
        schema:
          description: The region IDs to include in the cost data
          example: "region-12345678,region-23456789"
          type: string
        style: form
      - allowEmptyValue: true
        description: The region IDs to exclude from the cost data
        example: "region-12345678,region-23456789"
        explode: true
        in: query
        name: excludeRegionIDs
        required: false
        schema:
          description: The region IDs to exclude from the cost data
          example: "region-12345678,region-23456789"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                regionCosts:
                  region-abcdefgh:
                    cloudProviderName: aws
                    cost:
                    - cost: 100
                      date: 2023-01-01T10:00:00Z
                    - cost: 200
                      date: 2023-01-02T10:00:00Z
                    - cost: 145
                      date: 2023-01-03T10:00:00Z
                    regionName: us-west-2
                    totalCost: 445
              schema:
                $ref: "#/components/schemas/DescribeRegionCostResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to process the request"
      security:
      - api_key_header_Authorization: []
      summary: DescribeRegionCost cost-api
      tags:
      - cost-api
  /2022-09-01-00/fleet/cost/user:
    get:
      description: Get the total cost of operating a fleet for a user
      operationId: cost-api#DescribeUserCost
      parameters:
      - allowEmptyValue: true
        description: The start date of the range
        example: 2023-01-01T10:00:00Z
        explode: true
        in: query
        name: startDate
        required: true
        schema:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: The end date of the range
        example: 2024-01-01T10:00:00Z
        explode: true
        in: query
        name: endDate
        required: true
        schema:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: The type of environment to filter costs by
        example: DEV
        explode: true
        in: query
        name: environmentType
        required: true
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: form
      - allowEmptyValue: true
        description: The user IDs to include in the cost data
        example: "user-12345678,user-23456789"
        explode: true
        in: query
        name: includeUserIDs
        required: false
        schema:
          description: The user IDs to include in the cost data
          example: "user-12345678,user-23456789"
          type: string
        style: form
      - allowEmptyValue: true
        description: The user IDs to exclude from the cost data
        example: user-23456789
        explode: true
        in: query
        name: excludeUserIDs
        required: false
        schema:
          description: The user IDs to exclude from the cost data
          example: user-23456789
          type: string
        style: form
      - allowEmptyValue: true
        description: The number of top users to include in the cost data
        example: 10
        explode: true
        in: query
        name: topNUsers
        required: false
        schema:
          description: The number of top users to include in the cost data
          example: 10
          format: int64
          type: integer
        style: form
      - allowEmptyValue: true
        description: The number of top instances to include in the cost data
        example: 10
        explode: true
        in: query
        name: topNInstances
        required: false
        schema:
          description: The number of top instances to include in the cost data
          example: 10
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                userCosts:
                  user-abcdefgh:
                    cost:
                    - cost: 100
                      date: 2023-01-01T10:00:00Z
                    - cost: 200
                      date: 2023-01-02T10:00:00Z
                    - cost: 145
                      date: 2023-01-03T10:00:00Z
                    email: admin@example.com
                    instancesCost:
                    - cloudProviderName: aws
                      instanceID: instance-12345678
                      isDeleted: false
                      productTierID: pt-12345678
                      productTierName: Standard
                      productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
                      regionName: us-west-2
                      serviceEnvironmentID: se-12345678
                      serviceID: s-12345678
                      subscriptionID: sub-12345678
                      totalCost: 100
                      utilization: 50
                    orgID: org-12345678
                    orgName: Acme Corp
                    totalCost: 445
                    userName: John Doe
              schema:
                $ref: "#/components/schemas/DescribeUserCostResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to process the request"
      security:
      - api_key_header_Authorization: []
      summary: DescribeUserCost cost-api
      tags:
      - cost-api
  /2022-09-01-00/fleet/custom-network:
    get:
      operationId: fleet-custom-network-api#ListCustomNetworks
      parameters:
      - allowEmptyValue: true
        description: The name of the cloud provider that custom network should be
          created in
        example: aws
        explode: true
        in: query
        name: cloudProviderName
        required: false
        schema:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        style: form
      - allowEmptyValue: true
        description: The region of the cloud provider that the network should be created
          in
        example: us-east-1
        explode: true
        in: query
        name: cloudProviderRegion
        required: false
        schema:
          description: The region of the cloud provider that the network should be
            created in
          example: us-east-1
          type: string
        style: form
      - allowEmptyValue: true
        description: "Flag indicating whether to return only custom networks, or to\
          \ include default and imported networks as well"
        example: false
        explode: true
        in: query
        name: customNetworksOnly
        required: false
        schema:
          description: "Flag indicating whether to return only custom networks, or\
            \ to include default and imported networks as well"
          example: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                customNetworks:
                - cidr: 10.0.0.0/16
                  cloudProviderName: aws
                  cloudProviderRegion: us-east-1
                  id: n-12345678
                  name: Prod us-east-1
                  networkDefinitionType: Custom
                  networkFeaturesConfiguration:
                    isPrivateLinkEnabled: true
                  networkInstances:
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  owningOrgID: org-12345678
                  owningOrgName: my-customer
                  owningUserID: user-12345678
                  owningUserName: Jane Doe
                - cidr: 10.0.0.0/16
                  cloudProviderName: aws
                  cloudProviderRegion: us-east-1
                  id: n-12345678
                  name: Prod us-east-1
                  networkDefinitionType: Custom
                  networkFeaturesConfiguration:
                    isPrivateLinkEnabled: true
                  networkInstances:
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  owningOrgID: org-12345678
                  owningOrgName: my-customer
                  owningUserID: user-12345678
                  owningUserName: Jane Doe
                - cidr: 10.0.0.0/16
                  cloudProviderName: aws
                  cloudProviderRegion: us-east-1
                  id: n-12345678
                  name: Prod us-east-1
                  networkDefinitionType: Custom
                  networkFeaturesConfiguration:
                    isPrivateLinkEnabled: true
                  networkInstances:
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  owningOrgID: org-12345678
                  owningOrgName: my-customer
                  owningUserID: user-12345678
                  owningUserName: Jane Doe
                - cidr: 10.0.0.0/16
                  cloudProviderName: aws
                  cloudProviderRegion: us-east-1
                  id: n-12345678
                  name: Prod us-east-1
                  networkDefinitionType: Custom
                  networkFeaturesConfiguration:
                    isPrivateLinkEnabled: true
                  networkInstances:
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  - awsAccountID: "123456789012"
                    azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                    azureTenantID: 12345678-1234-1234-1234-123456789012
                    cloudProviderNativeNetworkId: vpc-12345678
                    gcpProjectID: my-project
                    gcpProjectNumber: "123456789012"
                    hostClusterID: hc-12345678
                  owningOrgID: org-12345678
                  owningOrgName: my-customer
                  owningUserID: user-12345678
                  owningUserName: Jane Doe
              schema:
                $ref: "#/components/schemas/FleetListCustomNetworksResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list custom networks"
      security:
      - api_key_header_Authorization: []
      summary: ListCustomNetworks fleet-custom-network-api
      tags:
      - fleet-custom-network-api
    post:
      operationId: fleet-custom-network-api#CreateCustomNetwork
      requestBody:
        content:
          application/json:
            example:
              cidr: 10.0.0.0/16
              cloudProviderName: aws
              cloudProviderRegion: us-east-1
              name: Prod us-east-1
              networkFeaturesConfiguration:
                isPrivateLinkEnabled: true
            schema:
              $ref: "#/components/schemas/FleetCreateCustomNetworkRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                cidr: 10.0.0.0/16
                cloudProviderName: aws
                cloudProviderRegion: us-east-1
                id: n-12345678
                name: Prod us-east-1
                networkDefinitionType: Custom
                networkFeaturesConfiguration:
                  isPrivateLinkEnabled: true
                networkInstances:
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                owningOrgID: org-12345678
                owningOrgName: my-customer
                owningUserID: user-12345678
                owningUserName: Jane Doe
              schema:
                $ref: "#/components/schemas/FleetCustomNetwork"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a custom\
            \ network"
      security:
      - api_key_header_Authorization: []
      summary: CreateCustomNetwork fleet-custom-network-api
      tags:
      - fleet-custom-network-api
  /2022-09-01-00/fleet/custom-network/{id}:
    delete:
      operationId: fleet-custom-network-api#DeleteCustomNetwork
      parameters:
      - description: ID of a custom network
        example: n-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a custom network
          example: Et enim officiis similique a eum omnis.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request to delete a custom\
            \ network"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested custom network\
            \ is not found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a custom\
            \ network"
      security:
      - api_key_header_Authorization: []
      summary: DeleteCustomNetwork fleet-custom-network-api
      tags:
      - fleet-custom-network-api
    get:
      operationId: fleet-custom-network-api#DescribeCustomNetwork
      parameters:
      - description: ID of a custom network
        example: n-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a custom network
          example: Cupiditate aliquam quibusdam.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                cidr: 10.0.0.0/16
                cloudProviderName: aws
                cloudProviderRegion: us-east-1
                id: n-12345678
                name: Prod us-east-1
                networkDefinitionType: Custom
                networkFeaturesConfiguration:
                  isPrivateLinkEnabled: true
                networkInstances:
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                owningOrgID: org-12345678
                owningOrgName: my-customer
                owningUserID: user-12345678
                owningUserName: Jane Doe
              schema:
                $ref: "#/components/schemas/FleetCustomNetwork"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request to describe a\
            \ custom network"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested custom network\
            \ is not found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a custom\
            \ network"
      security:
      - api_key_header_Authorization: []
      summary: DescribeCustomNetwork fleet-custom-network-api
      tags:
      - fleet-custom-network-api
    patch:
      operationId: fleet-custom-network-api#UpdateCustomNetwork
      parameters:
      - description: ID of a custom network
        example: n-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a custom network
          example: Qui numquam corrupti et qui ducimus.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: Dev us-east-1
            schema:
              $ref: "#/components/schemas/FleetUpdateCustomNetworkRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                cidr: 10.0.0.0/16
                cloudProviderName: aws
                cloudProviderRegion: us-east-1
                id: n-12345678
                name: Prod us-east-1
                networkDefinitionType: Custom
                networkFeaturesConfiguration:
                  isPrivateLinkEnabled: true
                networkInstances:
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 12345678-1234-1234-1234-123456789012
                  azureTenantID: 12345678-1234-1234-1234-123456789012
                  cloudProviderNativeNetworkId: vpc-12345678
                  gcpProjectID: my-project
                  gcpProjectNumber: "123456789012"
                  hostClusterID: hc-12345678
                owningOrgID: org-12345678
                owningOrgName: my-customer
                owningUserID: user-12345678
                owningUserName: Jane Doe
              schema:
                $ref: "#/components/schemas/FleetCustomNetwork"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested custom network\
            \ is not found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a custom\
            \ network"
      security:
      - api_key_header_Authorization: []
      summary: UpdateCustomNetwork fleet-custom-network-api
      tags:
      - fleet-custom-network-api
  /2022-09-01-00/fleet/customer-onboarding:
    get:
      operationId: customer-onboardings-api#ListCustomerOnboardings
      parameters:
      - allowEmptyValue: true
        description: Whether to return only pending onboardings.
        example: true
        explode: true
        in: query
        name: pendingOnly
        required: false
        schema:
          description: Whether to return only pending onboardings.
          example: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                onboardings:
                - id: onboarding-1234567890
                  isCompleted: true
                  name: My Onboarding
                  orgId: org-1234567890
                  serviceId: service-1234567890
                  stages:
                  - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
                    status: NOT_STARTED|COMPLETE|SKIPPED
                  - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
                    status: NOT_STARTED|COMPLETE|SKIPPED
                  userId: user-1234567890
                - id: onboarding-1234567890
                  isCompleted: true
                  name: My Onboarding
                  orgId: org-1234567890
                  serviceId: service-1234567890
                  stages:
                  - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
                    status: NOT_STARTED|COMPLETE|SKIPPED
                  - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
                    status: NOT_STARTED|COMPLETE|SKIPPED
                  userId: user-1234567890
              schema:
                $ref: "#/components/schemas/ListCustomerOnboardingResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Internal Server Error response."
      security:
      - api_key_header_Authorization: []
      summary: ListCustomerOnboardings customer-onboardings-api
      tags:
      - customer-onboardings-api
    post:
      operationId: customer-onboardings-api#CreateCustomerOnboarding
      requestBody:
        content:
          application/json:
            example:
              name: Ut eos.
            schema:
              $ref: "#/components/schemas/CreateCustomerOnboardingRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: In consectetur animi placeat.
              schema:
                example: Consequuntur sit non consequuntur.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Internal Server Error response."
      security:
      - api_key_header_Authorization: []
      summary: CreateCustomerOnboarding customer-onboardings-api
      tags:
      - customer-onboardings-api
  /2022-09-01-00/fleet/customer-onboarding-stages:
    get:
      operationId: customer-onboardings-api#ListCustomerOnboardingStages
      responses:
        "200":
          content:
            application/json:
              example:
                stages:
                - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
                  status: NOT_STARTED|COMPLETE|SKIPPED
                - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
                  status: NOT_STARTED|COMPLETE|SKIPPED
              schema:
                $ref: "#/components/schemas/ListCustomerOnboardingStagesResult"
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Internal Server Error response."
      security:
      - api_key_header_Authorization: []
      summary: ListCustomerOnboardingStages customer-onboardings-api
      tags:
      - customer-onboardings-api
  /2022-09-01-00/fleet/customer-onboarding/{id}:
    delete:
      operationId: customer-onboardings-api#DeleteCustomerOnboarding
      parameters:
      - description: The ID of the onboarding.
        example: onboarding-1234567890
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Customer Onboarding
          example: Ad omnis aut aut aut.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Internal Server Error response."
      security:
      - api_key_header_Authorization: []
      summary: DeleteCustomerOnboarding customer-onboardings-api
      tags:
      - customer-onboardings-api
    get:
      operationId: customer-onboardings-api#DescribeCustomerOnboarding
      parameters:
      - description: The ID of the onboarding.
        example: onboarding-1234567890
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Customer Onboarding
          example: Qui quia molestiae blanditiis.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                id: onboarding-1234567890
                isCompleted: true
                name: My Onboarding
                orgId: org-1234567890
                serviceId: service-1234567890
                stages:
                - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
                  status: NOT_STARTED|COMPLETE|SKIPPED
                - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
                  status: NOT_STARTED|COMPLETE|SKIPPED
                - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
                  status: NOT_STARTED|COMPLETE|SKIPPED
                - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
                  status: NOT_STARTED|COMPLETE|SKIPPED
                userId: user-1234567890
              schema:
                $ref: "#/components/schemas/CustomerOnboarding"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Internal Server Error response."
      security:
      - api_key_header_Authorization: []
      summary: DescribeCustomerOnboarding customer-onboardings-api
      tags:
      - customer-onboardings-api
    patch:
      operationId: customer-onboardings-api#UpdateCustomerOnboarding
      parameters:
      - description: The ID of the onboarding.
        example: onboarding-1234567890
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Customer Onboarding
          example: Inventore et.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              serviceId: service-1234567890
              stage:
                name: ConfigureAccounts
                status: Skipped
            schema:
              $ref: "#/components/schemas/UpdateCustomerOnboardingRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Internal Server Error response."
      security:
      - api_key_header_Authorization: []
      summary: UpdateCustomerOnboarding customer-onboardings-api
      tags:
      - customer-onboardings-api
  /2022-09-01-00/fleet/events:
    get:
      operationId: events-api#ListEvents
      parameters:
      - allowEmptyValue: true
        description: The environment type to filter by
        example: DEV
        explode: true
        in: query
        name: environmentType
        required: false
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - eventID: e-123456
                  eventPayload:
                    eventType: CustomerSignUp
                    token: "123456"
                  eventType: InviteUser
                  orgID: o-123456
                  orgName: Acme Corp
                  orgURL: https://acme.com
                  priority: Critical
                  time: 2023-01-10T00:00:00Z
                  userEmail: user@example.com
                  userID: user-123456
                  userName: user
                - eventID: e-123456
                  eventPayload:
                    eventType: CustomerSignUp
                    token: "123456"
                  eventType: InviteUser
                  orgID: o-123456
                  orgName: Acme Corp
                  orgURL: https://acme.com
                  priority: Critical
                  time: 2023-01-10T00:00:00Z
                  userEmail: user@example.com
                  userID: user-123456
                  userName: user
                - eventID: e-123456
                  eventPayload:
                    eventType: CustomerSignUp
                    token: "123456"
                  eventType: InviteUser
                  orgID: o-123456
                  orgName: Acme Corp
                  orgURL: https://acme.com
                  priority: Critical
                  time: 2023-01-10T00:00:00Z
                  userEmail: user@example.com
                  userID: user-123456
                  userName: user
              schema:
                $ref: "#/components/schemas/ListEndCustomerEventsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list events"
      security:
      - api_key_header_Authorization: []
      summary: ListEvents events-api
      tags:
      - events-api
  /2022-09-01-00/fleet/events/{id}:
    delete:
      operationId: events-api#AcknowledgeEvent
      parameters:
      - description: The ID of the event
        example: e-123456
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Event
          example: Provident qui labore qui quaerat nemo modi.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list events."
      security:
      - api_key_header_Authorization: []
      summary: AcknowledgeEvent events-api
      tags:
      - events-api
  /2022-09-01-00/fleet/helm-package-installations:
    get:
      operationId: helm-package-api#ListHelmPackageInstallations
      parameters:
      - allowEmptyValue: true
        description: The host cluster ID to list helm packages for
        example: hc-12345678
        explode: true
        in: query
        name: hostClusterID
        required: false
        schema:
          description: ID of a Host Cluster
          example: Est dolor sed.
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                helmPackageInstallations:
                - helmPackage:
                    chartName: my-chart
                    chartRepoName: my-repo
                    chartRepoUrl: https://my-repo.com
                    chartValues:
                      key1: value1
                      key2: 3
                      key3:
                        key4: value4
                    chartVersion: 1.0.0
                    layeredChartValues:
                    - name: my-layer
                      scope:
                        '{{ $sys.cloudProviderName }}': aws
                      values:
                        global:
                          affinity:
                            nodeAffinity:
                              requiredDuringSchedulingIgnoredDuringExecution:
                                nodeSelectorTerms:
                                - matchExpressions:
                                  - key: omnistrate.com/managed-by
                                    operator: In
                                    values:
                                    - omnistrate
                      valuesFile:
                        gitConfiguration:
                          accessToken: my-token
                          commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                          referenceName: tags/v1.0.0
                          repositoryUrl: https://github.com/username/myrepo
                          userName: my-user
                        path: helm/values/production.yaml
                    - name: my-layer
                      scope:
                        '{{ $sys.cloudProviderName }}': aws
                      values:
                        global:
                          affinity:
                            nodeAffinity:
                              requiredDuringSchedulingIgnoredDuringExecution:
                                nodeSelectorTerms:
                                - matchExpressions:
                                  - key: omnistrate.com/managed-by
                                    operator: In
                                    values:
                                    - omnistrate
                      valuesFile:
                        gitConfiguration:
                          accessToken: my-token
                          commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                          referenceName: tags/v1.0.0
                          repositoryUrl: https://github.com/username/myrepo
                          userName: my-user
                        path: helm/values/production.yaml
                    - name: my-layer
                      scope:
                        '{{ $sys.cloudProviderName }}': aws
                      values:
                        global:
                          affinity:
                            nodeAffinity:
                              requiredDuringSchedulingIgnoredDuringExecution:
                                nodeSelectorTerms:
                                - matchExpressions:
                                  - key: omnistrate.com/managed-by
                                    operator: In
                                    values:
                                    - omnistrate
                      valuesFile:
                        gitConfiguration:
                          accessToken: my-token
                          commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                          referenceName: tags/v1.0.0
                          repositoryUrl: https://github.com/username/myrepo
                          userName: my-user
                        path: helm/values/production.yaml
                    - name: my-layer
                      scope:
                        '{{ $sys.cloudProviderName }}': aws
                      values:
                        global:
                          affinity:
                            nodeAffinity:
                              requiredDuringSchedulingIgnoredDuringExecution:
                                nodeSelectorTerms:
                                - matchExpressions:
                                  - key: omnistrate.com/managed-by
                                    operator: In
                                    values:
                                    - omnistrate
                      valuesFile:
                        gitConfiguration:
                          accessToken: my-token
                          commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                          referenceName: tags/v1.0.0
                          repositoryUrl: https://github.com/username/myrepo
                          userName: my-user
                        path: helm/values/production.yaml
                    namespace: default
                  hostClusterID: hc-12345678
                  status: unknown|deployed|uninstalled|superseded|failed|uninstalling|pending-install|pending-upgrade|pending-rollback
                - helmPackage:
                    chartName: my-chart
                    chartRepoName: my-repo
                    chartRepoUrl: https://my-repo.com
                    chartValues:
                      key1: value1
                      key2: 3
                      key3:
                        key4: value4
                    chartVersion: 1.0.0
                    layeredChartValues:
                    - name: my-layer
                      scope:
                        '{{ $sys.cloudProviderName }}': aws
                      values:
                        global:
                          affinity:
                            nodeAffinity:
                              requiredDuringSchedulingIgnoredDuringExecution:
                                nodeSelectorTerms:
                                - matchExpressions:
                                  - key: omnistrate.com/managed-by
                                    operator: In
                                    values:
                                    - omnistrate
                      valuesFile:
                        gitConfiguration:
                          accessToken: my-token
                          commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                          referenceName: tags/v1.0.0
                          repositoryUrl: https://github.com/username/myrepo
                          userName: my-user
                        path: helm/values/production.yaml
                    - name: my-layer
                      scope:
                        '{{ $sys.cloudProviderName }}': aws
                      values:
                        global:
                          affinity:
                            nodeAffinity:
                              requiredDuringSchedulingIgnoredDuringExecution:
                                nodeSelectorTerms:
                                - matchExpressions:
                                  - key: omnistrate.com/managed-by
                                    operator: In
                                    values:
                                    - omnistrate
                      valuesFile:
                        gitConfiguration:
                          accessToken: my-token
                          commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                          referenceName: tags/v1.0.0
                          repositoryUrl: https://github.com/username/myrepo
                          userName: my-user
                        path: helm/values/production.yaml
                    - name: my-layer
                      scope:
                        '{{ $sys.cloudProviderName }}': aws
                      values:
                        global:
                          affinity:
                            nodeAffinity:
                              requiredDuringSchedulingIgnoredDuringExecution:
                                nodeSelectorTerms:
                                - matchExpressions:
                                  - key: omnistrate.com/managed-by
                                    operator: In
                                    values:
                                    - omnistrate
                      valuesFile:
                        gitConfiguration:
                          accessToken: my-token
                          commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                          referenceName: tags/v1.0.0
                          repositoryUrl: https://github.com/username/myrepo
                          userName: my-user
                        path: helm/values/production.yaml
                    - name: my-layer
                      scope:
                        '{{ $sys.cloudProviderName }}': aws
                      values:
                        global:
                          affinity:
                            nodeAffinity:
                              requiredDuringSchedulingIgnoredDuringExecution:
                                nodeSelectorTerms:
                                - matchExpressions:
                                  - key: omnistrate.com/managed-by
                                    operator: In
                                    values:
                                    - omnistrate
                      valuesFile:
                        gitConfiguration:
                          accessToken: my-token
                          commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                          referenceName: tags/v1.0.0
                          repositoryUrl: https://github.com/username/myrepo
                          userName: my-user
                        path: helm/values/production.yaml
                    namespace: default
                  hostClusterID: hc-12345678
                  status: unknown|deployed|uninstalled|superseded|failed|uninstalling|pending-install|pending-upgrade|pending-rollback
                - helmPackage:
                    chartName: my-chart
                    chartRepoName: my-repo
                    chartRepoUrl: https://my-repo.com
                    chartValues:
                      key1: value1
                      key2: 3
                      key3:
                        key4: value4
                    chartVersion: 1.0.0
                    layeredChartValues:
                    - name: my-layer
                      scope:
                        '{{ $sys.cloudProviderName }}': aws
                      values:
                        global:
                          affinity:
                            nodeAffinity:
                              requiredDuringSchedulingIgnoredDuringExecution:
                                nodeSelectorTerms:
                                - matchExpressions:
                                  - key: omnistrate.com/managed-by
                                    operator: In
                                    values:
                                    - omnistrate
                      valuesFile:
                        gitConfiguration:
                          accessToken: my-token
                          commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                          referenceName: tags/v1.0.0
                          repositoryUrl: https://github.com/username/myrepo
                          userName: my-user
                        path: helm/values/production.yaml
                    - name: my-layer
                      scope:
                        '{{ $sys.cloudProviderName }}': aws
                      values:
                        global:
                          affinity:
                            nodeAffinity:
                              requiredDuringSchedulingIgnoredDuringExecution:
                                nodeSelectorTerms:
                                - matchExpressions:
                                  - key: omnistrate.com/managed-by
                                    operator: In
                                    values:
                                    - omnistrate
                      valuesFile:
                        gitConfiguration:
                          accessToken: my-token
                          commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                          referenceName: tags/v1.0.0
                          repositoryUrl: https://github.com/username/myrepo
                          userName: my-user
                        path: helm/values/production.yaml
                    - name: my-layer
                      scope:
                        '{{ $sys.cloudProviderName }}': aws
                      values:
                        global:
                          affinity:
                            nodeAffinity:
                              requiredDuringSchedulingIgnoredDuringExecution:
                                nodeSelectorTerms:
                                - matchExpressions:
                                  - key: omnistrate.com/managed-by
                                    operator: In
                                    values:
                                    - omnistrate
                      valuesFile:
                        gitConfiguration:
                          accessToken: my-token
                          commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                          referenceName: tags/v1.0.0
                          repositoryUrl: https://github.com/username/myrepo
                          userName: my-user
                        path: helm/values/production.yaml
                    - name: my-layer
                      scope:
                        '{{ $sys.cloudProviderName }}': aws
                      values:
                        global:
                          affinity:
                            nodeAffinity:
                              requiredDuringSchedulingIgnoredDuringExecution:
                                nodeSelectorTerms:
                                - matchExpressions:
                                  - key: omnistrate.com/managed-by
                                    operator: In
                                    values:
                                    - omnistrate
                      valuesFile:
                        gitConfiguration:
                          accessToken: my-token
                          commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                          referenceName: tags/v1.0.0
                          repositoryUrl: https://github.com/username/myrepo
                          userName: my-user
                        path: helm/values/production.yaml
                    namespace: default
                  hostClusterID: hc-12345678
                  status: unknown|deployed|uninstalled|superseded|failed|uninstalling|pending-install|pending-upgrade|pending-rollback
              schema:
                $ref: "#/components/schemas/ListHelmPackageInstallationsResult"
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Internal Server Error response."
      security:
      - api_key_header_Authorization: []
      summary: ListHelmPackageInstallations helm-package-api
      tags:
      - helm-package-api
  /2022-09-01-00/fleet/hooks/{id}:
    post:
      operationId: webhooks-api#ReceiveWebhook
      parameters:
      - description: The unique id per producer.
        example: Quia ducimus dolorem vero voluptas.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The unique id per producer.
          example: Vel voluptatem blanditiis incidunt voluptatem provident quibusdam.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example: Veritatis provident quasi sequi.
            schema:
              description: The event data
              example: Perspiciatis voluptate deleniti placeat explicabo soluta.
              type: string
        description: The event data
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list events"
      summary: ReceiveWebhook webhooks-api
      tags:
      - webhooks-api
  /2022-09-01-00/fleet/host-cluster/{id}:
    delete:
      description: Delete an empty host cluster.
      operationId: hostcluster-api#DeleteHostCluster
      parameters:
      - description: ID of the host cluster to delete
        example: hc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Host Cluster
          example: Unde et.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete host cluster."
      security:
      - api_key_header_Authorization: []
      summary: DeleteHostCluster hostcluster-api
      tags:
      - hostcluster-api
    get:
      operationId: hostcluster-api#DescribeHostCluster
      parameters:
      - description: ID of the host cluster to describe
        example: hc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Host Cluster
          example: Magnam numquam facilis eaque.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                EnvironmentType: PROD
                accountConfigId: ac-12345678
                accountID: "123456789012"
                amenities:
                - Description: Ensures high availability across multiple zones.
                  IsManaged: true
                  Name: Prometheus
                  Properties:
                    Est est.: Quasi laboriosam mollitia quisquam ut ipsa.
                    Officia ut.: Omnis suscipit.
                  Type: HelmChart
                - Description: Ensures high availability across multiple zones.
                  IsManaged: true
                  Name: Prometheus
                  Properties:
                    Est est.: Quasi laboriosam mollitia quisquam ut ipsa.
                    Officia ut.: Omnis suscipit.
                  Type: HelmChart
                cloudProvider: aws
                currentNumberOfDeployments: 2
                customNetworkDetail:
                  cidr: 10.177.0.0/16
                  id: n-12345678
                  name: Prod us-east-1
                  orgName: Company TM
                customerEmail: admin@example.com
                customerOrganizationName: My Customer Organization
                description: My Host Cluster
                hasPendingChanges: true
                healthStatus:
                  failedEntities:
                  - error: Namespace failed to sync because of missing permissions
                    identifier: namespace-12345
                    syncStatus: FAILED
                    type: NAMESPACE
                  - error: Service unable to setup load balancer
                    identifier: service-67890
                    syncStatus: FAILED
                    type: SERVICE
                helmPackages:
                - firstDeployed: 2021-01-01T00:00:00Z
                  lastDeployed: 2021-01-01T00:00:00Z
                  name: my-helm-package
                  namespace: my-namespace
                  repository: https://my-helm-repo.com
                  status: deployed
                  values:
                    key1: value1
                    key2: value2
                  version: 1.0.0
                id: hc-12345678
                isCustomDeployment: true
                isInSyncWithOrgTemplate: true
                key: my-host-cluster
                kubernetesDashboardEndpoint: https://my-k8s-dashboard.com
                modelType: BYOA
                pendingAmenities:
                - Description: Ensures high availability across multiple zones.
                  IsManaged: true
                  Name: Prometheus
                  Properties:
                    Est est.: Quasi laboriosam mollitia quisquam ut ipsa.
                    Officia ut.: Omnis suscipit.
                  Type: HelmChart
                - Description: Ensures high availability across multiple zones.
                  IsManaged: true
                  Name: Prometheus
                  Properties:
                    Est est.: Quasi laboriosam mollitia quisquam ut ipsa.
                    Officia ut.: Omnis suscipit.
                  Type: HelmChart
                region: us-east-1
                regionId: region-12345678
                role: Provisioner
                status: READY
                type: Kubernetes
              schema:
                $ref: "#/components/schemas/HostCluster"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe host\
            \ cluster."
      security:
      - api_key_header_Authorization: []
      summary: DescribeHostCluster hostcluster-api
      tags:
      - hostcluster-api
    patch:
      operationId: hostcluster-api#UpdateHostCluster
      parameters:
      - description: ID of the host cluster to update
        example: hc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Host Cluster
          example: Omnis expedita.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              pendingAmenities:
              - Description: Ensures high availability across multiple zones.
                IsManaged: true
                Name: Prometheus
                Properties:
                  Repellat iure alias aperiam aut.: Commodi velit doloribus hic explicabo
                    voluptas ut.
                Type: HelmChart
              - Description: Ensures high availability across multiple zones.
                IsManaged: true
                Name: Prometheus
                Properties:
                  Repellat iure alias aperiam aut.: Commodi velit doloribus hic explicabo
                    voluptas ut.
                Type: HelmChart
              syncWithOrgTemplate: true
            schema:
              $ref: "#/components/schemas/UpdateHostClusterRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update host cluster."
      security:
      - api_key_header_Authorization: []
      summary: UpdateHostCluster hostcluster-api
      tags:
      - hostcluster-api
  /2022-09-01-00/fleet/host-cluster/{id}/apply-pending-changes:
    post:
      operationId: hostcluster-api#ApplyPendingChangesToHostCluster
      parameters:
      - description: ID of the host cluster to apply pending changes to
        example: hc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Host Cluster
          example: Quia quos incidunt.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to apply pending\
            \ changes to host cluster."
      security:
      - api_key_header_Authorization: []
      summary: ApplyPendingChangesToHostCluster hostcluster-api
      tags:
      - hostcluster-api
  /2022-09-01-00/fleet/host-cluster/{id}/dashboard/token:
    post:
      operationId: hostcluster-api#GenerateTokenForHostClusterDashboard
      parameters:
      - description: ID of the host cluster to delete
        example: hc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Host Cluster
          example: Maiores aspernatur harum sed.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                expirationTimestamp: 2021-01-01T00:00:00Z
                token: token
              schema:
                $ref: "#/components/schemas/GenerateTokenForHostClusterDashboardResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to generate a kubernetes\
            \ dashboard token."
      security:
      - api_key_header_Authorization: []
      summary: GenerateTokenForHostClusterDashboard hostcluster-api
      tags:
      - hostcluster-api
  /2022-09-01-00/fleet/host-cluster/{id}/debug:
    get:
      description: Debug a host cluster.
      operationId: hostcluster-api#DebugHostCluster
      parameters:
      - allowEmptyValue: true
        description: Include the installation logs of the amenities in the host cluster
        example: true
        explode: true
        in: query
        name: includeAmenitiesInstallationLogs
        required: false
        schema:
          description: Include the installation logs of the amenities in the host
            cluster
          example: true
          type: boolean
        style: form
      - description: ID of the host cluster to debug
        example: hc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Host Cluster
          example: Aut laborum non error ut.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                customHelmExecutionLogsBase64:
                  postgres: base64-encoded-log-data
                  redis: base64-encoded-log-data
              schema:
                $ref: "#/components/schemas/DebugHostClusterResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to debug host cluster."
      security:
      - api_key_header_Authorization: []
      summary: DebugHostCluster hostcluster-api
      tags:
      - hostcluster-api
  /2022-09-01-00/fleet/host-cluster/{id}/kubeconfig:
    get:
      description: Retrieve the kubeconfig for a host cluster.
      operationId: hostcluster-api#KubeConfigHostCluster
      parameters:
      - allowEmptyValue: true
        description: The role of the service account to use for the kubeconfig
        example: cluster-admin|cluster-reader
        explode: true
        in: query
        name: role
        required: false
        schema:
          default: cluster-reader
          description: The role of the service account to use for the kubeconfig
          example: cluster-admin|cluster-reader
          type: string
        style: form
      - description: ID of the host cluster to get the kubeconfig for
        example: hc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Host Cluster
          example: Quis numquam aperiam tenetur minus quasi.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                apiServerEndpoint: https://api.my-host-cluster.com
                caDataBase64: base64-encoded-ca-data
                clientCertificateDataBase64: base64-encoded-client-certificate-data
                clientKeyDataBase64: base64-encoded-client-key-data
                id: hc-12345678
                serviceAccountToken: base64-encoded-service-account-token
                userName: omnistrate-user
              schema:
                $ref: "#/components/schemas/KubeConfigHostClusterResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update kubeconfig\
            \ for host cluster."
      security:
      - api_key_header_Authorization: []
      summary: KubeConfigHostCluster hostcluster-api
      tags:
      - hostcluster-api
  /2022-09-01-00/fleet/host-cluster/adopt:
    post:
      description: Adopt a self-managed host cluster.
      operationId: hostcluster-api#AdoptHostCluster
      requestBody:
        content:
          application/json:
            example:
              cloudProvider: aws
              customerEmail: mycustomer@example.com
              description: My Adopted Host Cluster
              id: hc-12345678
              region: us-east-1
            schema:
              $ref: "#/components/schemas/AdoptHostClusterRequest2"
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                adoptionStatus: READY
                agentInstallationKit: base64-encoded-tar-archive
              schema:
                $ref: "#/components/schemas/AdoptHostClusterResult"
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete host cluster."
      security:
      - api_key_header_Authorization: []
      summary: AdoptHostCluster hostcluster-api
      tags:
      - hostcluster-api
  /2022-09-01-00/fleet/host-clusters:
    get:
      operationId: hostcluster-api#ListHostClusters
      parameters:
      - allowEmptyValue: true
        description: The account config ID of the host cluster
        example: ac-12345678
        explode: true
        in: query
        name: accountConfigId
        required: false
        schema:
          description: ID of an Account Config
          example: Itaque temporibus tempora rerum veritatis ut voluptatem.
          type: string
        style: form
      - allowEmptyValue: true
        description: The region ID of the host cluster
        example: region-12345678
        explode: true
        in: query
        name: regionId
        required: false
        schema:
          description: ID of a Region
          example: Explicabo nesciunt.
          type: string
        style: form
      - allowEmptyValue: true
        description: Whether to include provisioner clusters in the response
        example: true
        explode: true
        in: query
        name: includeProvisionerClusters
        required: false
        schema:
          description: Whether to include provisioner clusters in the response
          example: true
          type: boolean
        style: form
      - allowEmptyValue: true
        description: The email of the customer to filter host clusters by
        example: admin@example.com
        explode: true
        in: query
        name: customerEmail
        required: false
        schema:
          description: The email of the customer to filter host clusters by
          example: admin@example.com
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                hostClusters:
                - accountConfigId: ac-12345678
                  accountID: "123456789012"
                  cloudProvider: aws
                  currentNumberOfDeployments: 2
                  customerEmail: admin@example.com
                  customerOrganizationName: My Customer Organization
                  description: My Host Cluster
                  failedEntities:
                  - error: Namespace failed to sync because of missing permissions
                    identifier: namespace-12345
                    syncStatus: FAILED
                    type: NAMESPACE
                  - error: Service unable to setup load balancer
                    identifier: service-67890
                    syncStatus: FAILED
                    type: SERVICE
                  helmPackages:
                  - firstDeployed: 2021-01-01T00:00:00Z
                    lastDeployed: 2021-01-01T00:00:00Z
                    name: my-helm-package
                    namespace: my-namespace
                    repository: https://my-helm-repo.com
                    status: deployed
                    values:
                      key1: value1
                      key2: value2
                    version: 1.0.0
                  id: hc-12345678
                  isCustomDeployment: false
                  key: my-host-cluster
                  kubernetesDashboardEndpoint: https://my-k8s-dashboard.com
                  region: us-east-1
                  regionId: region-12345678
                  status: READY
                  type: Kubernetes
                token: xsm
              schema:
                $ref: "#/components/schemas/ListHostClustersResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list host clusters"
      security:
      - api_key_header_Authorization: []
      summary: ListHostClusters hostcluster-api
      tags:
      - hostcluster-api
  /2022-09-01-00/fleet/host-clusters/{hostClusterId}/instances:
    get:
      description: Return all resource instances in the given host cluster
      operationId: inventory-api#ListAllInstancesInHostCluster
      parameters:
      - allowEmptyValue: true
        example: token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The next token to use for pagination
          example: token
          type: string
        style: form
      - allowEmptyValue: true
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        style: form
      - description: ID of the host cluster to list instances for
        example: hc-12345678
        explode: false
        in: path
        name: hostClusterId
        required: true
        schema:
          description: ID of a Host Cluster
          example: Beatae numquam rem id ad minima.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                instances:
                - adopted: true
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  cloudProvider: aws
                  consumptionResourceInstanceResult:
                    active: true
                    autoscalingEnabled: true
                    awsAccountID: "123456789012"
                    azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                    backupStatus:
                      backupPeriodInHours: 2
                      backupRetentionInDays: 7
                      earliestRestoreTime: 2021-09-01T00:00:00Z
                      lastBackupTime: 2021-09-01T00:00:00Z
                    cloud_provider: aws
                    created_at: 2023-01-10T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    currentReplicas: "2"
                    customNetworkDetail:
                      cidr: 10.177.0.0/16
                      id: n-12345678
                      name: Prod us-east-1
                    detailedNetworkTopology:
                      r-abcd1234:
                        allowedIPRanges:
                        - 0.0.0.0/0
                        clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        clusterPorts:
                        - 3306
                        isJob: false
                        jobMetrics:
                        - additionalData:
                            exitCode: 0
                            status: Succeeded
                          endTime: 2023-01-01T10:05:00Z
                          metricType: cpu_core_seconds
                          startTime: 2023-01-01T10:00:00Z
                          value: 120.5
                        - additionalData:
                            peakMemoryUsage: 512MB
                          endTime: 2023-01-01T10:05:00Z
                          metricType: memory_mb_seconds
                          startTime: 2023-01-01T10:00:00Z
                          value: 2560
                        main: true
                        networkingType: PUBLIC
                        nodes:
                        - availabilityZone: us-east-2a
                          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                          healthStatus: healthy
                          id: primary-0
                          ports:
                          - 3306
                          status: RUNNING
                        privateNetworkCIDR: 10.0.0.2/24
                        privateNetworkID: n-1234abcd
                        publiclyAccessible: true
                        resourceKey: primary
                        resourceName: Primary MySQL Instance
                    externalPayerId: external-payer-id-1234
                    gcpProjectID: my-project
                    highAvailability: true
                    id: instance-abcd1234
                    instanceLoadStatus: Dolor sapiente.
                    kubernetesDashboardEndpoint:
                      dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                      deploymentCellID: hc-12345678
                    last_modified_at: 2023-01-20T00:00:00Z
                    maintenanceTasks:
                      Repudiandae tenetur.: Fugiat quas.
                      Ut excepturi ad.: Fuga exercitationem odit praesentium quos
                        non.
                    maxReplicas: "1"
                    minReplicas: "1"
                    network_type: PUBLIC|INTERNAL
                    productTierFeatures:
                      LOGS:
                        auth:
                          password: px3c4d5f6g7h8i
                          username: abcd1234
                        enabled: true
                        websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                      METRICS:
                        enabled: false
                    region: us-east-1
                    resourceID: r-abcd1234
                    result_params:
                      param1: value1
                      param2: value2
                    serverlessEnabled: true
                    status: RUNNING
                    subscriptionId: sub-abcd1234
                    subscriptionLicense:
                      certificateBase64: public-cert
                      expirationDate: 2024-01-01T10:00:00Z
                      licenseBase64: license-file
                    subscriptionStatus: ACTIVE
                    tierVersion: "1.0"
                  defaultSubscription: true
                  deploymentCellID: hc-12345678
                  environmentId: se-12345678
                  gcpProjectID: my-project
                  input_params:
                    param1: value1
                    param2: value2
                  instanceDebugCommands:
                  - aws eks update-kubeconfig --name my-cluster --region us-west-2
                  - kubectl -n instance-12345678 get pods
                  integrationsStatus:
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  maintenanceTasks:
                    Illum temporibus fuga.: Quaerat non odio et asperiores vel voluptatibus.
                    Sit quo vitae consequatur quae ullam sequi.: Autem veritatis dolores
                      molestiae et atque.
                  managedResourceType: PortsBasedProxy
                  manualOverride:
                    setAt: 2020-01-01T00:00:00Z
                    setterUserId: user-12345678
                    workflowId: wf-12345678
                  organizationId: org-12345678
                  organizationName: my-org
                  portsRegistrationStatus:
                    instance-123:
                    - 30000
                    - 30001
                    instance-456:
                    - 30002
                    - 30003
                  productTierId: pt-12345678
                  productTierName: premium
                  productTierType: OMNISTRATE_DEDICATED
                  proxyType: PortsBasedProxy
                  resourceVersionSummaries:
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  serviceEnvName: dev
                  serviceId: s-12345678
                  serviceLogoURL: Minima quia rerum sed eos.
                  serviceModelId: sm-12345678
                  serviceModelName: hosted
                  serviceModelType: OMNISTRATE_HOSTED
                  serviceName: mysql
                  subscriptionId: sub-12345678
                  subscriptionOwnerName: John Doe
                  subscriptionStatus: ACTIVE
                  tierVersion: "1.0"
                  tierVersionReleasedAt: 2020-01-01T00:00:00Z
                  tierVersionReleasedByUserId: user-12345678
                  tierVersionReleasedByUserName: John Doe
                  tierVersionStatus: Preferred|Active|Deprecated|Pending
                - adopted: true
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  cloudProvider: aws
                  consumptionResourceInstanceResult:
                    active: true
                    autoscalingEnabled: true
                    awsAccountID: "123456789012"
                    azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                    backupStatus:
                      backupPeriodInHours: 2
                      backupRetentionInDays: 7
                      earliestRestoreTime: 2021-09-01T00:00:00Z
                      lastBackupTime: 2021-09-01T00:00:00Z
                    cloud_provider: aws
                    created_at: 2023-01-10T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    currentReplicas: "2"
                    customNetworkDetail:
                      cidr: 10.177.0.0/16
                      id: n-12345678
                      name: Prod us-east-1
                    detailedNetworkTopology:
                      r-abcd1234:
                        allowedIPRanges:
                        - 0.0.0.0/0
                        clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        clusterPorts:
                        - 3306
                        isJob: false
                        jobMetrics:
                        - additionalData:
                            exitCode: 0
                            status: Succeeded
                          endTime: 2023-01-01T10:05:00Z
                          metricType: cpu_core_seconds
                          startTime: 2023-01-01T10:00:00Z
                          value: 120.5
                        - additionalData:
                            peakMemoryUsage: 512MB
                          endTime: 2023-01-01T10:05:00Z
                          metricType: memory_mb_seconds
                          startTime: 2023-01-01T10:00:00Z
                          value: 2560
                        main: true
                        networkingType: PUBLIC
                        nodes:
                        - availabilityZone: us-east-2a
                          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                          healthStatus: healthy
                          id: primary-0
                          ports:
                          - 3306
                          status: RUNNING
                        privateNetworkCIDR: 10.0.0.2/24
                        privateNetworkID: n-1234abcd
                        publiclyAccessible: true
                        resourceKey: primary
                        resourceName: Primary MySQL Instance
                    externalPayerId: external-payer-id-1234
                    gcpProjectID: my-project
                    highAvailability: true
                    id: instance-abcd1234
                    instanceLoadStatus: Dolor sapiente.
                    kubernetesDashboardEndpoint:
                      dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                      deploymentCellID: hc-12345678
                    last_modified_at: 2023-01-20T00:00:00Z
                    maintenanceTasks:
                      Repudiandae tenetur.: Fugiat quas.
                      Ut excepturi ad.: Fuga exercitationem odit praesentium quos
                        non.
                    maxReplicas: "1"
                    minReplicas: "1"
                    network_type: PUBLIC|INTERNAL
                    productTierFeatures:
                      LOGS:
                        auth:
                          password: px3c4d5f6g7h8i
                          username: abcd1234
                        enabled: true
                        websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                      METRICS:
                        enabled: false
                    region: us-east-1
                    resourceID: r-abcd1234
                    result_params:
                      param1: value1
                      param2: value2
                    serverlessEnabled: true
                    status: RUNNING
                    subscriptionId: sub-abcd1234
                    subscriptionLicense:
                      certificateBase64: public-cert
                      expirationDate: 2024-01-01T10:00:00Z
                      licenseBase64: license-file
                    subscriptionStatus: ACTIVE
                    tierVersion: "1.0"
                  defaultSubscription: true
                  deploymentCellID: hc-12345678
                  environmentId: se-12345678
                  gcpProjectID: my-project
                  input_params:
                    param1: value1
                    param2: value2
                  instanceDebugCommands:
                  - aws eks update-kubeconfig --name my-cluster --region us-west-2
                  - kubectl -n instance-12345678 get pods
                  integrationsStatus:
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  maintenanceTasks:
                    Illum temporibus fuga.: Quaerat non odio et asperiores vel voluptatibus.
                    Sit quo vitae consequatur quae ullam sequi.: Autem veritatis dolores
                      molestiae et atque.
                  managedResourceType: PortsBasedProxy
                  manualOverride:
                    setAt: 2020-01-01T00:00:00Z
                    setterUserId: user-12345678
                    workflowId: wf-12345678
                  organizationId: org-12345678
                  organizationName: my-org
                  portsRegistrationStatus:
                    instance-123:
                    - 30000
                    - 30001
                    instance-456:
                    - 30002
                    - 30003
                  productTierId: pt-12345678
                  productTierName: premium
                  productTierType: OMNISTRATE_DEDICATED
                  proxyType: PortsBasedProxy
                  resourceVersionSummaries:
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  serviceEnvName: dev
                  serviceId: s-12345678
                  serviceLogoURL: Minima quia rerum sed eos.
                  serviceModelId: sm-12345678
                  serviceModelName: hosted
                  serviceModelType: OMNISTRATE_HOSTED
                  serviceName: mysql
                  subscriptionId: sub-12345678
                  subscriptionOwnerName: John Doe
                  subscriptionStatus: ACTIVE
                  tierVersion: "1.0"
                  tierVersionReleasedAt: 2020-01-01T00:00:00Z
                  tierVersionReleasedByUserId: user-12345678
                  tierVersionReleasedByUserName: John Doe
                  tierVersionStatus: Preferred|Active|Deprecated|Pending
                - adopted: true
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  cloudProvider: aws
                  consumptionResourceInstanceResult:
                    active: true
                    autoscalingEnabled: true
                    awsAccountID: "123456789012"
                    azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                    backupStatus:
                      backupPeriodInHours: 2
                      backupRetentionInDays: 7
                      earliestRestoreTime: 2021-09-01T00:00:00Z
                      lastBackupTime: 2021-09-01T00:00:00Z
                    cloud_provider: aws
                    created_at: 2023-01-10T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    currentReplicas: "2"
                    customNetworkDetail:
                      cidr: 10.177.0.0/16
                      id: n-12345678
                      name: Prod us-east-1
                    detailedNetworkTopology:
                      r-abcd1234:
                        allowedIPRanges:
                        - 0.0.0.0/0
                        clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        clusterPorts:
                        - 3306
                        isJob: false
                        jobMetrics:
                        - additionalData:
                            exitCode: 0
                            status: Succeeded
                          endTime: 2023-01-01T10:05:00Z
                          metricType: cpu_core_seconds
                          startTime: 2023-01-01T10:00:00Z
                          value: 120.5
                        - additionalData:
                            peakMemoryUsage: 512MB
                          endTime: 2023-01-01T10:05:00Z
                          metricType: memory_mb_seconds
                          startTime: 2023-01-01T10:00:00Z
                          value: 2560
                        main: true
                        networkingType: PUBLIC
                        nodes:
                        - availabilityZone: us-east-2a
                          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                          healthStatus: healthy
                          id: primary-0
                          ports:
                          - 3306
                          status: RUNNING
                        privateNetworkCIDR: 10.0.0.2/24
                        privateNetworkID: n-1234abcd
                        publiclyAccessible: true
                        resourceKey: primary
                        resourceName: Primary MySQL Instance
                    externalPayerId: external-payer-id-1234
                    gcpProjectID: my-project
                    highAvailability: true
                    id: instance-abcd1234
                    instanceLoadStatus: Dolor sapiente.
                    kubernetesDashboardEndpoint:
                      dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                      deploymentCellID: hc-12345678
                    last_modified_at: 2023-01-20T00:00:00Z
                    maintenanceTasks:
                      Repudiandae tenetur.: Fugiat quas.
                      Ut excepturi ad.: Fuga exercitationem odit praesentium quos
                        non.
                    maxReplicas: "1"
                    minReplicas: "1"
                    network_type: PUBLIC|INTERNAL
                    productTierFeatures:
                      LOGS:
                        auth:
                          password: px3c4d5f6g7h8i
                          username: abcd1234
                        enabled: true
                        websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                      METRICS:
                        enabled: false
                    region: us-east-1
                    resourceID: r-abcd1234
                    result_params:
                      param1: value1
                      param2: value2
                    serverlessEnabled: true
                    status: RUNNING
                    subscriptionId: sub-abcd1234
                    subscriptionLicense:
                      certificateBase64: public-cert
                      expirationDate: 2024-01-01T10:00:00Z
                      licenseBase64: license-file
                    subscriptionStatus: ACTIVE
                    tierVersion: "1.0"
                  defaultSubscription: true
                  deploymentCellID: hc-12345678
                  environmentId: se-12345678
                  gcpProjectID: my-project
                  input_params:
                    param1: value1
                    param2: value2
                  instanceDebugCommands:
                  - aws eks update-kubeconfig --name my-cluster --region us-west-2
                  - kubectl -n instance-12345678 get pods
                  integrationsStatus:
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  maintenanceTasks:
                    Illum temporibus fuga.: Quaerat non odio et asperiores vel voluptatibus.
                    Sit quo vitae consequatur quae ullam sequi.: Autem veritatis dolores
                      molestiae et atque.
                  managedResourceType: PortsBasedProxy
                  manualOverride:
                    setAt: 2020-01-01T00:00:00Z
                    setterUserId: user-12345678
                    workflowId: wf-12345678
                  organizationId: org-12345678
                  organizationName: my-org
                  portsRegistrationStatus:
                    instance-123:
                    - 30000
                    - 30001
                    instance-456:
                    - 30002
                    - 30003
                  productTierId: pt-12345678
                  productTierName: premium
                  productTierType: OMNISTRATE_DEDICATED
                  proxyType: PortsBasedProxy
                  resourceVersionSummaries:
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  serviceEnvName: dev
                  serviceId: s-12345678
                  serviceLogoURL: Minima quia rerum sed eos.
                  serviceModelId: sm-12345678
                  serviceModelName: hosted
                  serviceModelType: OMNISTRATE_HOSTED
                  serviceName: mysql
                  subscriptionId: sub-12345678
                  subscriptionOwnerName: John Doe
                  subscriptionStatus: ACTIVE
                  tierVersion: "1.0"
                  tierVersionReleasedAt: 2020-01-01T00:00:00Z
                  tierVersionReleasedByUserId: user-12345678
                  tierVersionReleasedByUserName: John Doe
                  tierVersionStatus: Preferred|Active|Deprecated|Pending
                nextPageToken: Ut aliquam aliquam consequatur.
              schema:
                $ref: "#/components/schemas/ListAllInstancesInHostClusterResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list host clusters"
      security:
      - api_key_header_Authorization: []
      summary: ListAllInstancesInHostCluster inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/invoice/{id}:
    delete:
      operationId: invoice-api#DeleteInvoice
      parameters:
      - description: ID of the invoice
        example: invoice-1234568
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of the invoice
          example: invoice-1234568
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested invoice is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested invoice is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete invoice"
      security:
      - api_key_header_Authorization: []
      summary: DeleteInvoice invoice-api
      tags:
      - invoice-api
  /2022-09-01-00/fleet/invoice/{id}/approve:
    post:
      operationId: invoice-api#ApproveInvoice
      parameters:
      - description: ID of the invoice
        example: invoice-1234568
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of the invoice
          example: invoice-1234568
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested invoice is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested invoice is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to approve invoice"
      security:
      - api_key_header_Authorization: []
      summary: ApproveInvoice invoice-api
      tags:
      - invoice-api
  /2022-09-01-00/fleet/invoice/{id}/resend:
    post:
      operationId: invoice-api#ResendInvoice
      parameters:
      - description: ID of the invoice
        example: invoice-1234568
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of the invoice
          example: invoice-1234568
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested invoice is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested invoice is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to resend invoice"
      security:
      - api_key_header_Authorization: []
      summary: ResendInvoice invoice-api
      tags:
      - invoice-api
  /2022-09-01-00/fleet/invoice/{id}/void:
    post:
      operationId: invoice-api#VoidInvoice
      parameters:
      - description: ID of the invoice
        example: invoice-1234568
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of the invoice
          example: invoice-1234568
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested invoice is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested invoice is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to void invoice"
      security:
      - api_key_header_Authorization: []
      summary: VoidInvoice invoice-api
      tags:
      - invoice-api
  /2022-09-01-00/fleet/invoices:
    get:
      operationId: invoice-api#ListInvoices
      parameters:
      - allowEmptyValue: true
        description: Start date for filtering invoices
        example: 2023-01-01T10:00:00Z
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: End date for filtering invoices
        example: 2024-01-01T10:00:00Z
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: Filter by invoice status
        example: open
        explode: true
        in: query
        name: status
        required: false
        schema:
          description: This describes the status of the invoice and is set by the
            payment provider
          example: draft|open|paid|uncollectible|void
          type: string
        style: form
      - allowEmptyValue: true
        description: Filter by customer ID
        example: customer-1234568
        explode: true
        in: query
        name: customerId
        required: false
        schema:
          description: Filter by customer ID
          example: customer-1234568
          type: string
        style: form
      - allowEmptyValue: true
        description: Filter by billing provider
        example: STRIPE
        explode: true
        in: query
        name: billingProvider
        required: false
        schema:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                invoices:
                - billIssuedToUserEmail: abcd@example.io
                  billIssuedToUserID: user-1234568
                  billIssuedToUserName: John Doe
                  currency: USD
                  customerId: org-1234568
                  customerName: Acme Corp
                  dueDate: 2023-10-01T00:00:00Z
                  id: invoice-1234568
                  invoiceDate: 2023-10-01T00:00:00Z
                  invoiceUrl: https://dashboard.stripe.com/invoices/in_1R9aJ8G10a5MrQfCjUX3dstN
                  paymentTerms: Net 30
                  status: open
                  taxAmount: 10
                  totalAmount: 110
                  totalAmountWithoutTax: 100
                - billIssuedToUserEmail: abcd@example.io
                  billIssuedToUserID: user-1234568
                  billIssuedToUserName: John Doe
                  currency: USD
                  customerId: org-1234568
                  customerName: Acme Corp
                  dueDate: 2023-10-01T00:00:00Z
                  id: invoice-1234568
                  invoiceDate: 2023-10-01T00:00:00Z
                  invoiceUrl: https://dashboard.stripe.com/invoices/in_1R9aJ8G10a5MrQfCjUX3dstN
                  paymentTerms: Net 30
                  status: open
                  taxAmount: 10
                  totalAmount: 110
                  totalAmountWithoutTax: 100
              schema:
                $ref: "#/components/schemas/FleetListInvoicesResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list invoices"
      security:
      - api_key_header_Authorization: []
      summary: ListInvoices invoice-api
      tags:
      - invoice-api
  /2022-09-01-00/fleet/notification-channel:
    get:
      operationId: notifications-api#ListNotificationChannels
      responses:
        "200":
          content:
            application/json:
              example:
                channels:
                - channelType: EMAIL
                  email:
                    to: notify@example.com
                  id: channel-12345678
                - channelType: SLACK
                  id: channel-87654321
                  slack:
                    webhookUrl: https://hooks.slack.com/services/...
              schema:
                $ref: "#/components/schemas/ListNotificationChannelsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Internal Server Error response."
      security:
      - api_key_header_Authorization: []
      summary: ListNotificationChannels notifications-api
      tags:
      - notifications-api
    post:
      operationId: notifications-api#CreateNotificationChannel
      requestBody:
        content:
          application/json:
            example:
              email:
                to: notify@example.com
              name: My Channel
              pagerDuty:
                APIKey: e93facc47f2d4b2b88272b3a647afe7d-fictional-integration-key
              slack:
                webhookUrl: https://hooks.slack.com/services/...
              subscription:
                alertTypes:
                - Alarm
                - Notification
                environmentTypes:
                - PROD
                - PRIVATE
                - CANARY
                eventCategories:
                - InstanceEvent
                - ServiceEvent
                eventPriorities:
                - Critical
                - High
                eventTypes:
                - UnhealthyInstance
                - UserSignUp
              webhook:
                method: POST
                url: https://example.com/notify
            schema:
              $ref: "#/components/schemas/CreateNotificationChannelRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Maiores voluptate.
              schema:
                example: Est voluptate doloremque et fuga delectus.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Internal Server Error response."
      security:
      - api_key_header_Authorization: []
      summary: CreateNotificationChannel notifications-api
      tags:
      - notifications-api
  /2022-09-01-00/fleet/notification-channel/{id}:
    delete:
      operationId: notifications-api#DeleteNotificationChannel
      parameters:
      - description: Unique identifier of the channel
        example: channel-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Notification Channel
          example: Totam quos voluptatem laboriosam.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Internal Server Error response."
      security:
      - api_key_header_Authorization: []
      summary: DeleteNotificationChannel notifications-api
      tags:
      - notifications-api
    get:
      operationId: notifications-api#DescribeNotificationChannel
      parameters:
      - description: Unique identifier of the channel
        example: channel-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Notification Channel
          example: Deleniti sed.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                channelType: EMAIL
                email:
                  to: notify@example.com
                id: channel-12345678
                name: My Channel
                pagerDuty:
                  integrationKey: e93facc47f2d4b2b88272b3a647afe7d-fictional-integration-key
                slack:
                  webhookUrl: https://hooks.slack.com/services/...
                subscription:
                  alertTypes:
                  - Alarm
                  - Notification
                  environmentTypes:
                  - PROD
                  - PRIVATE
                  - CANARY
                  eventCategories:
                  - InstanceEvent
                  - ServiceEvent
                  eventPriorities:
                  - Critical
                  - High
                  eventTypes:
                  - UnhealthyInstance
                  - UserSignUp
                webhook:
                  method: POST
                  url: https://example.com/notify
              schema:
                $ref: "#/components/schemas/Channel"
          description: OK response.
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Internal Server Error response."
      security:
      - api_key_header_Authorization: []
      summary: DescribeNotificationChannel notifications-api
      tags:
      - notifications-api
    patch:
      operationId: notifications-api#UpdateNotificationChannel
      parameters:
      - description: Unique identifier of the channel
        example: channel-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Notification Channel
          example: Aspernatur quaerat.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              email:
                to: notify@example.com
              name: My Channel
              pagerDuty:
                APIKey: e93facc47f2d4b2b88272b3a647afe7d-fictional-integration-key
              slack:
                webhookUrl: https://hooks.slack.com/services/...
              subscription:
                alertTypes:
                - Alarm
                - Notification
                environmentTypes:
                - PROD
                - PRIVATE
                - CANARY
                eventCategories:
                - InstanceEvent
                - ServiceEvent
                eventPriorities:
                - Critical
                - High
                eventTypes:
                - UnhealthyInstance
                - UserSignUp
              webhook:
                method: POST
                url: https://example.com/notify
            schema:
              $ref: "#/components/schemas/UpdateNotificationChannelRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Internal Server Error response."
      security:
      - api_key_header_Authorization: []
      summary: UpdateNotificationChannel notifications-api
      tags:
      - notifications-api
  /2022-09-01-00/fleet/notification-channel/{id}/event-history:
    get:
      operationId: notifications-api#NotificationChannelEventHistory
      parameters:
      - allowEmptyValue: true
        description: The start time of the range
        example: 2023-01-01T10:00:00Z
        explode: true
        in: query
        name: startTime
        required: false
        schema:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: The end time of the range
        example: 2024-01-01T10:00:00Z
        explode: true
        in: query
        name: endTime
        required: false
        schema:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - description: Unique identifier of the channel
        example: channel-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Notification Channel
          example: Non voluptates.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - channelResponse:
                    body: Notification received
                    status: 200
                  id: event-12345678
                  payload:
                    key1: value1
                    key2: 42
                  publicationStatus: SUCCESS
                  timestamp: 2023-01-01T10:00:00Z
              schema:
                $ref: "#/components/schemas/ChannelEventHistoryResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Internal Server Error response."
      security:
      - api_key_header_Authorization: []
      summary: NotificationChannelEventHistory notifications-api
      tags:
      - notifications-api
  /2022-09-01-00/fleet/notification-event/{id}/replay:
    post:
      operationId: notifications-api#ReplayEvent
      parameters:
      - description: Unique identifier of the event to replay
        example: event-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Event
          example: Facere accusantium veniam excepturi laboriosam.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Internal Server Error response."
      security:
      - api_key_header_Authorization: []
      summary: ReplayEvent notifications-api
      tags:
      - notifications-api
  /2022-09-01-00/fleet/operations/deployment-cell-health:
    get:
      operationId: operations-api#DeploymentCellHealth
      parameters:
      - allowEmptyValue: true
        description: The host cluster ID to get the health for
        example: hc-12345678
        explode: true
        in: query
        name: hostClusterID
        required: false
        schema:
          description: ID of a Host Cluster
          example: Pariatur non iure accusamus alias eum.
          type: string
        style: form
      - allowEmptyValue: true
        description: The service ID to get the health for
        example: s-12345678
        explode: true
        in: query
        name: serviceID
        required: false
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: form
      - allowEmptyValue: true
        description: The service environment ID to get the health for
        example: se-12345678
        explode: true
        in: query
        name: serviceEnvironmentID
        required: false
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                cloudProvider: aws
                hostClusterID: hc-12345678
                instanceHealth:
                  Occaecati animi.:
                    instanceID: instance-12345678
                    lifeCycleStatus: RUNNING
                    resourcesHealth:
                      Molestiae ex eos.:
                        nodesHealth:
                          Ducimus magni fugit quod est.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                          Molestiae in.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                          Nobis accusantium iure perspiciatis et distinctio quo.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                        resourceID: resource-12345678
                        resourceKey: primary
                        resourceType: Kustomize
                        status: HEALTHY
                      Nihil nostrum.:
                        nodesHealth:
                          Ducimus magni fugit quod est.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                          Molestiae in.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                          Nobis accusantium iure perspiciatis et distinctio quo.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                        resourceID: resource-12345678
                        resourceKey: primary
                        resourceType: Kustomize
                        status: HEALTHY
                      Tempora minima nam similique.:
                        nodesHealth:
                          Ducimus magni fugit quod est.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                          Molestiae in.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                          Nobis accusantium iure perspiciatis et distinctio quo.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                        resourceID: resource-12345678
                        resourceKey: primary
                        resourceType: Kustomize
                        status: HEALTHY
                    status: HEALTHY
                  Omnis iure.:
                    instanceID: instance-12345678
                    lifeCycleStatus: RUNNING
                    resourcesHealth:
                      Molestiae ex eos.:
                        nodesHealth:
                          Ducimus magni fugit quod est.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                          Molestiae in.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                          Nobis accusantium iure perspiciatis et distinctio quo.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                        resourceID: resource-12345678
                        resourceKey: primary
                        resourceType: Kustomize
                        status: HEALTHY
                      Nihil nostrum.:
                        nodesHealth:
                          Ducimus magni fugit quod est.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                          Molestiae in.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                          Nobis accusantium iure perspiciatis et distinctio quo.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                        resourceID: resource-12345678
                        resourceKey: primary
                        resourceType: Kustomize
                        status: HEALTHY
                      Tempora minima nam similique.:
                        nodesHealth:
                          Ducimus magni fugit quod est.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                          Molestiae in.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                          Nobis accusantium iure perspiciatis et distinctio quo.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                        resourceID: resource-12345678
                        resourceKey: primary
                        resourceType: Kustomize
                        status: HEALTHY
                    status: HEALTHY
                  Quasi quod.:
                    instanceID: instance-12345678
                    lifeCycleStatus: RUNNING
                    resourcesHealth:
                      Molestiae ex eos.:
                        nodesHealth:
                          Ducimus magni fugit quod est.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                          Molestiae in.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                          Nobis accusantium iure perspiciatis et distinctio quo.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                        resourceID: resource-12345678
                        resourceKey: primary
                        resourceType: Kustomize
                        status: HEALTHY
                      Nihil nostrum.:
                        nodesHealth:
                          Ducimus magni fugit quod est.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                          Molestiae in.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                          Nobis accusantium iure perspiciatis et distinctio quo.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                        resourceID: resource-12345678
                        resourceKey: primary
                        resourceType: Kustomize
                        status: HEALTHY
                      Tempora minima nam similique.:
                        nodesHealth:
                          Ducimus magni fugit quod est.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                          Molestiae in.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                          Nobis accusantium iure perspiciatis et distinctio quo.:
                            availabilityZone: us-east-2a
                            connectivityStatus: HEALTHY
                            diskHealth: HEALTHY
                            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                            integrationsHealth:
                              CustomerObservabilityHealth: HEALTHY
                              InternalObservabilityHealth: HEALTHY
                            loadStatus: LOAD_NORMAL
                            nodeHealth: HEALTHY
                            nodeName: postgres-0
                            ports:
                            - 80
                            - 443
                            processHealth: HEALTHY
                            processLiveness: HEALTHY
                            status: HEALTHY
                        resourceID: resource-12345678
                        resourceKey: primary
                        resourceType: Kustomize
                        status: HEALTHY
                    status: HEALTHY
                regionCode: us-west-1
                serviceEnvironmentName: prod
                serviceName: mysql
              schema:
                $ref: "#/components/schemas/DeploymentCellHealthDetail"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list events"
      security:
      - api_key_header_Authorization: []
      summary: DeploymentCellHealth operations-api
      tags:
      - operations-api
  /2022-09-01-00/fleet/operations/events:
    get:
      operationId: operations-api#ListEvents
      parameters:
      - allowEmptyValue: true
        example: token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The next token to use for pagination
          example: token
          type: string
        style: form
      - allowEmptyValue: true
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        style: form
      - allowEmptyValue: true
        example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
        explode: true
        in: query
        name: environmentType
        required: false
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: form
      - allowEmptyValue: true
        description: The event types to filter by
        example:
        - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
        - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
        - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
        - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
        explode: true
        in: query
        name: eventTypes
        required: false
        schema:
          description: The event types to filter by
          example:
          - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
          - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
          items:
            description: The type of the service provider specific event
            example: UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
            type: string
          type: array
        style: form
      - allowEmptyValue: true
        description: The service ID to list events for
        example: s-123456
        explode: true
        in: query
        name: serviceID
        required: false
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: form
      - allowEmptyValue: true
        description: The service environment ID to list events for
        example: se-123456
        explode: true
        in: query
        name: serviceEnvironmentID
        required: false
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: form
      - allowEmptyValue: true
        description: The instance ID to list events for
        example: instance-12345678
        explode: true
        in: query
        name: instanceID
        required: false
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: form
      - allowEmptyValue: true
        description: Start date of the events
        example: 2023-01-01T10:00:00Z
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: End date of the events
        example: 2024-01-01T10:00:00Z
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        example: Et iusto eos.
        explode: true
        in: query
        name: productTierID
        required: false
        schema:
          description: ID of a Product Tier
          example: Ut quam.
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - alertType: Alarm
                  eventCategory: InstanceEvent
                  eventID: e-123456
                  eventPayload:
                    Beatae qui numquam laboriosam facilis iusto.: Odio cum est possimus
                      in dignissimos consequatur.
                  eventType: UnhealthyInstance
                  expiryTime: 2023-01-10T00:00:00Z
                  instanceID: instance-12345678
                  planVersion: v1.0
                  priority: Critical
                  resourceName: Resource-123
                  scope: ServiceProvider
                  serviceEnvironmentID: se-123456
                  serviceID: s-123456
                  serviceName: Service-123
                  servicePlanName: Basic Plan
                  time: 2023-01-10T00:00:00Z
                - alertType: Alarm
                  eventCategory: InstanceEvent
                  eventID: e-123456
                  eventPayload:
                    Beatae qui numquam laboriosam facilis iusto.: Odio cum est possimus
                      in dignissimos consequatur.
                  eventType: UnhealthyInstance
                  expiryTime: 2023-01-10T00:00:00Z
                  instanceID: instance-12345678
                  planVersion: v1.0
                  priority: Critical
                  resourceName: Resource-123
                  scope: ServiceProvider
                  serviceEnvironmentID: se-123456
                  serviceID: s-123456
                  serviceName: Service-123
                  servicePlanName: Basic Plan
                  time: 2023-01-10T00:00:00Z
                - alertType: Alarm
                  eventCategory: InstanceEvent
                  eventID: e-123456
                  eventPayload:
                    Beatae qui numquam laboriosam facilis iusto.: Odio cum est possimus
                      in dignissimos consequatur.
                  eventType: UnhealthyInstance
                  expiryTime: 2023-01-10T00:00:00Z
                  instanceID: instance-12345678
                  planVersion: v1.0
                  priority: Critical
                  resourceName: Resource-123
                  scope: ServiceProvider
                  serviceEnvironmentID: se-123456
                  serviceID: s-123456
                  serviceName: Service-123
                  servicePlanName: Basic Plan
                  time: 2023-01-10T00:00:00Z
                - alertType: Alarm
                  eventCategory: InstanceEvent
                  eventID: e-123456
                  eventPayload:
                    Beatae qui numquam laboriosam facilis iusto.: Odio cum est possimus
                      in dignissimos consequatur.
                  eventType: UnhealthyInstance
                  expiryTime: 2023-01-10T00:00:00Z
                  instanceID: instance-12345678
                  planVersion: v1.0
                  priority: Critical
                  resourceName: Resource-123
                  scope: ServiceProvider
                  serviceEnvironmentID: se-123456
                  serviceID: s-123456
                  serviceName: Service-123
                  servicePlanName: Basic Plan
                  time: 2023-01-10T00:00:00Z
                eventsSummary:
                  eventsSummary:
                    FailedDeployment: 1
                    UnhealthyInstance: 2
                nextPageToken: Ad sed.
              schema:
                $ref: "#/components/schemas/ListServiceProviderEventsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list events"
      security:
      - api_key_header_Authorization: []
      summary: ListEvents operations-api
      tags:
      - operations-api
  /2022-09-01-00/fleet/operations/service-health:
    get:
      operationId: operations-api#ServiceHealth
      parameters:
      - allowEmptyValue: true
        description: The service ID to get the health for
        example: s-123456
        explode: true
        in: query
        name: serviceID
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: form
      - allowEmptyValue: true
        description: The service environment ID to get the health for
        example: se-123456
        explode: true
        in: query
        name: serviceEnvironmentID
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                cloudProviderHealthSummary:
                  Molestiae in.:
                    cloudProvider: aws
                    deployingInstances: 4320918553463254953
                    healthyInstances: 8961813057115890149
                    message: Cloud provider is healthy
                    regionalHealthSummary:
                      Aliquid quos est repellat.:
                        deployingInstances: 824437352417740907
                        deploymentCellHealthSummary:
                          Dolorum aspernatur laudantium.:
                            deployingInstances: 760118460644851580
                            healthyInstances: 8182996191029383329
                            hostClusterID: hc-12345678
                            message: Cell is healthy
                            status: Healthy
                            totalInstances: 8433346918713972995
                            unhealthyInstances: 1447603451201828936
                            unknownInstances: 353898198516431730
                          Praesentium minus architecto quaerat eius esse tenetur.:
                            deployingInstances: 760118460644851580
                            healthyInstances: 8182996191029383329
                            hostClusterID: hc-12345678
                            message: Cell is healthy
                            status: Healthy
                            totalInstances: 8433346918713972995
                            unhealthyInstances: 1447603451201828936
                            unknownInstances: 353898198516431730
                        healthyInstances: 309565262515953183
                        message: Region is healthy
                        region: us-east-1
                        status: Healthy
                        totalInstances: 8279708374573816846
                        unhealthyInstances: 3947959408020232459
                        unknownInstances: 5472845935342352928
                    status: Healthy
                    totalInstances: 3549338136386849085
                    unhealthyInstances: 2541367647699679040
                    unknownInstances: 6902474443291324634
                  Pariatur sed nobis id.:
                    cloudProvider: aws
                    deployingInstances: 4320918553463254953
                    healthyInstances: 8961813057115890149
                    message: Cloud provider is healthy
                    regionalHealthSummary:
                      Aliquid quos est repellat.:
                        deployingInstances: 824437352417740907
                        deploymentCellHealthSummary:
                          Dolorum aspernatur laudantium.:
                            deployingInstances: 760118460644851580
                            healthyInstances: 8182996191029383329
                            hostClusterID: hc-12345678
                            message: Cell is healthy
                            status: Healthy
                            totalInstances: 8433346918713972995
                            unhealthyInstances: 1447603451201828936
                            unknownInstances: 353898198516431730
                          Praesentium minus architecto quaerat eius esse tenetur.:
                            deployingInstances: 760118460644851580
                            healthyInstances: 8182996191029383329
                            hostClusterID: hc-12345678
                            message: Cell is healthy
                            status: Healthy
                            totalInstances: 8433346918713972995
                            unhealthyInstances: 1447603451201828936
                            unknownInstances: 353898198516431730
                        healthyInstances: 309565262515953183
                        message: Region is healthy
                        region: us-east-1
                        status: Healthy
                        totalInstances: 8279708374573816846
                        unhealthyInstances: 3947959408020232459
                        unknownInstances: 5472845935342352928
                    status: Healthy
                    totalInstances: 3549338136386849085
                    unhealthyInstances: 2541367647699679040
                    unknownInstances: 6902474443291324634
                  Sed aspernatur dolor ipsum aut sed omnis.:
                    cloudProvider: aws
                    deployingInstances: 4320918553463254953
                    healthyInstances: 8961813057115890149
                    message: Cloud provider is healthy
                    regionalHealthSummary:
                      Aliquid quos est repellat.:
                        deployingInstances: 824437352417740907
                        deploymentCellHealthSummary:
                          Dolorum aspernatur laudantium.:
                            deployingInstances: 760118460644851580
                            healthyInstances: 8182996191029383329
                            hostClusterID: hc-12345678
                            message: Cell is healthy
                            status: Healthy
                            totalInstances: 8433346918713972995
                            unhealthyInstances: 1447603451201828936
                            unknownInstances: 353898198516431730
                          Praesentium minus architecto quaerat eius esse tenetur.:
                            deployingInstances: 760118460644851580
                            healthyInstances: 8182996191029383329
                            hostClusterID: hc-12345678
                            message: Cell is healthy
                            status: Healthy
                            totalInstances: 8433346918713972995
                            unhealthyInstances: 1447603451201828936
                            unknownInstances: 353898198516431730
                        healthyInstances: 309565262515953183
                        message: Region is healthy
                        region: us-east-1
                        status: Healthy
                        totalInstances: 8279708374573816846
                        unhealthyInstances: 3947959408020232459
                        unknownInstances: 5472845935342352928
                    status: Healthy
                    totalInstances: 3549338136386849085
                    unhealthyInstances: 2541367647699679040
                    unknownInstances: 6902474443291324634
                healthyInstances: 907427796279671596
                message: Service is healthy
                serviceEnvironmentID: se-123456
                serviceID: s-123456
                status: Healthy
                totalInstances: 273742187461109028
                unhealthyInstances: 7736612834600503339
                unknownInstances: 264722033236879330
              schema:
                $ref: "#/components/schemas/ServiceHealthSummary"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list events"
      security:
      - api_key_header_Authorization: []
      summary: ServiceHealth operations-api
      tags:
      - operations-api
  /2022-09-01-00/fleet/organizations:
    get:
      operationId: inventory-api#ListAllOrganizations
      parameters:
      - allowEmptyValue: true
        description: Filter for organizations with invoices
        example: true
        explode: true
        in: query
        name: hasInvoice
        required: false
        schema:
          description: Filter for organizations with invoices
          example: false
          type: boolean
        style: form
      - allowEmptyValue: true
        description: Filter for organizations with invoices with a specific status
        example: draft|open|paid|uncollectible|void
        explode: true
        in: query
        name: hasInvoiceWithStatus
        required: false
        schema:
          description: This describes the status of the invoice and is set by the
            payment provider
          example: draft|open|paid|uncollectible|void
          type: string
        style: form
      - allowEmptyValue: true
        description: Filter for organizations with invoices from a specific date
        example: 2023-01-01T10:00:00Z
        explode: true
        in: query
        name: hasInvoiceFromDate
        required: false
        schema:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: Filter for organizations with invoices to a specific date
        example: 2024-01-01T10:00:00Z
        explode: true
        in: query
        name: hasInvoiceToDate
        required: false
        schema:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                nextPageToken: next-token
                organizations:
                - email: omnistrate-devops@examplecorp.com
                  orgId: o-12345678
                  orgName: Acme Corp
                  orgUrl: omnistrate.com
                - email: omnistrate-devops@examplecorp.com
                  orgId: o-12345678
                  orgName: Acme Corp
                  orgUrl: omnistrate.com
              schema:
                $ref: "#/components/schemas/ListAllOrganizationsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a inventory\
            \ summary."
      security:
      - api_key_header_Authorization: []
      summary: ListAllOrganizations inventory-api
      tags:
      - inventory-api
  ? /2022-09-01-00/fleet/proxy-resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{id}
  : delete:
      operationId: inventory-api#DeleteProxyResourceInstance
      parameters:
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Corrupti dolorem at quos.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The instance ID
        example: instance-abcd1234
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The instance ID
          example: instance-abcd1234
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: DeleteProxyResourceInstance inventory-api
      tags:
      - inventory-api
  ? /2022-09-01-00/fleet/proxy-resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{sourceResourceKey}
  : post:
      operationId: inventory-api#CreateProxyResourceInstance
      parameters:
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Consectetur ducimus temporibus officiis harum cupiditate totam.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The serverless resource key
        example: mysql
        explode: false
        in: path
        name: sourceResourceKey
        required: true
        schema:
          description: The serverless resource key
          example: mysql
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              cloud_provider: aws
              region: us-east-1
              requestParams:
                param1: value1
                param2: value2
            schema:
              $ref: "#/components/schemas/CreateProxyResourceInstanceRequest2"
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                id: Asperiores rerum consequatur quisquam.
              schema:
                $ref: "#/components/schemas/CreateProxyResourceInstanceResult"
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: CreateProxyResourceInstance inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/resource-instance/{serviceID}/{servicePlanID}/{hostClusterID}/{primaryResourceKey}/adopt:
    post:
      operationId: inventory-api#AdoptResourceInstance
      parameters:
      - allowEmptyValue: true
        description: The service plan version
        example: "1.0"
        explode: true
        in: query
        name: servicePlanVersion
        required: false
        schema:
          description: The service plan version
          example: "1.0"
          type: string
        style: form
      - allowEmptyValue: true
        description: The subscription ID of the resource instance
        example: sub-12345678
        explode: true
        in: query
        name: subscriptionID
        required: false
        schema:
          description: ID of a Subscription
          example: Iste sint cumque accusantium magnam.
          type: string
        style: form
      - description: Service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceID
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service plan ID
        example: pt-12345678
        explode: false
        in: path
        name: servicePlanID
        required: true
        schema:
          description: ID of a Product Tier
          example: Ad non est dolor ducimus.
          type: string
        style: simple
      - description: The host cluster ID or key
        example: hc-12345678
        explode: false
        in: path
        name: hostClusterID
        required: true
        schema:
          description: The host cluster ID or key
          example: hc-12345678
          type: string
        style: simple
      - description: The primary resource key to adopt. This is the top-level resource
          that will be managed by Omnistrate.
        example: mysql
        explode: false
        in: path
        name: primaryResourceKey
        required: true
        schema:
          description: The primary resource key to adopt. This is the top-level resource
            that will be managed by Omnistrate.
          example: mysql
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              resourceAdoptionConfiguration:
                mysql:
                  helmAdoptionConfiguration:
                    chartRepoURL: https://charts.example.com
                    releaseName: my-helm-release
                    releaseNamespace: default
                    runtimeConfiguration:
                      timeout: 300s
                      waitForJobs: true
                redis:
                  helmAdoptionConfiguration:
                    chartRepoURL: https://charts.example.com
                    releaseName: my-redis-release
                    releaseNamespace: redis
                    runtimeConfiguration:
                      timeout: 300s
                      waitForJobs: true
            schema:
              $ref: "#/components/schemas/AdoptResourceInstanceRequest2"
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                id: Ipsum sapiente eaque iste.
              schema:
                $ref: "#/components/schemas/FleetCreateResourceInstanceResult"
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: AdoptResourceInstance inventory-api
      tags:
      - inventory-api
  ? /2022-09-01-00/fleet/resource-instance/{serviceProviderId}/{serviceKey}/{serviceAPIVersion}/{serviceEnvironmentKey}/{serviceModelKey}/{productTierKey}/{resourceKey}
  : post:
      operationId: inventory-api#CreateResourceInstance
      parameters:
      - description: The service provider ID
        example: omnistrate
        explode: false
        in: path
        name: serviceProviderId
        required: true
        schema:
          description: ID of a Service Provider
          example: Illum ipsum dicta maxime tenetur odit.
          type: string
        style: simple
      - description: The service name
        example: service-orchestration
        explode: false
        in: path
        name: serviceKey
        required: true
        schema:
          description: The service name
          example: service-orchestration
          type: string
        style: simple
      - description: The service API version
        example: v1
        explode: false
        in: path
        name: serviceAPIVersion
        required: true
        schema:
          description: The service API version
          example: v1
          type: string
        style: simple
      - description: The service environment name
        example: dev
        explode: false
        in: path
        name: serviceEnvironmentKey
        required: true
        schema:
          description: The service environment name
          example: dev
          type: string
        style: simple
      - description: The service model name
        example: hosted
        explode: false
        in: path
        name: serviceModelKey
        required: true
        schema:
          description: The service model name
          example: hosted
          type: string
        style: simple
      - description: The product tier name
        example: premium
        explode: false
        in: path
        name: productTierKey
        required: true
        schema:
          description: The product tier name
          example: premium
          type: string
        style: simple
      - description: The resource key
        example: mysql
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: mysql
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              cloud_provider: aws
              custom_network_id: n-1234567890
              externalPayerId: external-billing-id-1234
              network_type: PUBLIC|INTERNAL
              onprem_platform: OpenShift
              productTierVersion: "1.0"
              region: us-east-1
              requestParams:
                param1: value1
                param2: value2
              subscriptionId: sub-12345678
            schema:
              $ref: "#/components/schemas/FleetCreateResourceInstanceRequest2"
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                id: Modi sit.
              schema:
                $ref: "#/components/schemas/FleetCreateResourceInstanceResult"
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: CreateResourceInstance inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/search-inventory:
    post:
      operationId: inventory-api#SearchInventory
      requestBody:
        content:
          application/json:
            example:
              query: foo
            schema:
              $ref: "#/components/schemas/SearchInventoryRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                deploymentCellResults:
                - cloudProvider: aws
                  description: The Deployment Cell is hosted in us-east-2 on aws.
                  id: hc-12345
                  regionCode: us-east-2
                  serviceEnvironmentID: se-12345
                  serviceEnvironmentName: MyEnvironment
                  serviceEnvironmentType: PROD
                  serviceID: s-12345
                  serviceName: MyService
                notificationResults:
                - description: Deployment completed
                  id: event-12345
                  name: Deployment
                  priority: Low
                  resourceName: postgres
                  serviceEnvironmentID: se-12345
                  serviceEnvironmentName: MyEnvironment
                  serviceEnvironmentType: PROD
                  serviceID: s-12345
                  serviceName: MyService
                  time: 2020-01-01T00:01:00Z
                  type: SuccessfulDeployment
                proxyInstanceResults:
                - cloudProvider: aws
                  description: My proxy.
                  id: i-12345
                  managed: true
                  managedResourceType: PortsBasedProxy
                  portsRegistrationStatus:
                    instance-123:
                    - 30000
                    - 30001
                    instance-456:
                    - 30002
                    - 30003
                  proxyType: PortsBasedProxy
                  regionCode: us-west-1
                  serviceEnvironmentID: se-12345
                  serviceEnvironmentName: MyEnvironment
                  serviceEnvironmentType: PROD
                  serviceID: s-12345
                  serviceName: MyService
                  status: Running
                  statusDescription: Instance is running.
                  targetResourceName: postgres
                resourceInstanceResults:
                - cloudProvider: aws
                  description: My proxy.
                  id: i-12345
                  managed: true
                  managedResourceType: PortsBasedProxy
                  portsRegistrationStatus:
                    instance-123:
                    - 30000
                    - 30001
                    instance-456:
                    - 30002
                    - 30003
                  productTierId: pt-12345
                  productTierName: free
                  productTierVersion: "2.0"
                  proxyType: PortsBasedProxy
                  regionCode: us-west-1
                  resourceName: postgres
                  serviceEnvironmentID: se-12345
                  serviceEnvironmentName: MyEnvironment
                  serviceEnvironmentType: PROD
                  serviceID: s-12345
                  serviceName: MyService
                  status: Running
                  statusDescription: Instance is running.
                  subscriptionID: sub-12345
                resourceResults:
                - description: The Resource is hosted in us-east-2 on aws.
                  id: i-12345
                  name: postgres
                  productTierId: pt-12345
                  productTierName: prod
                  serviceApiId: sa-12345
                  serviceEnvironmentID: se-12345
                  serviceEnvironmentName: MyEnvironment
                  serviceEnvironmentType: PROD
                  serviceID: s-12345
                  serviceModelId: sm-12345
                  serviceName: MyService
                serverlessProxyResults:
                - description: My serverless proxy.
                  id: r-12345
                  managed: false
                  managedResourceType: PortsBasedProxy
                  name: proxy
                  productTierId: pt-12345
                  productTierName: prod
                  proxyType: PortsBasedProxy
                  serviceApiId: sa-12345
                  serviceEnvironmentID: se-12345
                  serviceEnvironmentName: MyEnvironment
                  serviceEnvironmentType: PROD
                  serviceID: s-12345
                  serviceModelId: sm-12345
                  serviceName: MyService
                servicePlanResults:
                - deploymentType: CUSTOMER_HOSTED
                  description: The postgres service plan.
                  id: pt-12345
                  name: postgres
                  serviceEnvironmentID: se-12345
                  serviceEnvironmentName: MyEnvironment
                  serviceEnvironmentType: PROD
                  serviceID: s-12345
                  serviceName: MyService
                  tenancyType: OMNISTRATE_DEDICATED_TENANCY
                  version: "2.0"
                  versionSetStatus: Active
                serviceResults:
                - description: My Postgres Service
                  id: s-12345678
                  name: MyService
                subscriptionResults:
                - id: sub-12345
                  orgID: org-12345
                  productTierID: pt-12345
                  rootUserEmail: bob@enterprise.com
                  rootUserID: user-12345
                  rootUserName: bob
                  serviceEnvironmentID: se-12345
                  serviceEnvironmentName: MyEnvironment
                  serviceEnvironmentType: PROD
                  serviceID: s-12345
                  serviceName: MyService
                  servicePlanName: prod
                  status: ACTIVE
                upgradePathResults:
                - id: upgrade-12345
                  productTierID: pt-12345
                  productTierName: prod
                  serviceEnvironmentID: se-12345
                  serviceEnvironmentName: MyEnvironment
                  serviceEnvironmentType: PROD
                  serviceID: s-12345
                  serviceName: MyService
                  status: IN_PROGRESS
                userResults:
                - email: bob@omnistrate.com
                  external: false
                  id: user-12345
                  name: Bob
                  orgName: Bob's Organization
                workflowResults:
                - id: submit-update-instance-abcdefgh
                  resourceName: postgres
                  serviceEnvironmentID: se-12345
                  serviceEnvironmentName: MyEnvironment
                  serviceEnvironmentType: PROD
                  serviceID: s-12345
                  serviceName: MyService
                  status: IN_PROGRESS
                  type: Service deployment
              schema:
                $ref: "#/components/schemas/SearchInventoryResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a inventory\
            \ summary."
      security:
      - api_key_header_Authorization: []
      summary: SearchInventory inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service-offering:
    get:
      operationId: inventory-api#ListServiceOfferings
      parameters:
      - allowEmptyValue: true
        description: Org Id
        example: org-12345678
        explode: true
        in: query
        name: orgId
        required: false
        schema:
          description: ID of an Org
          example: Atque commodi ea.
          type: string
        style: form
      - allowEmptyValue: true
        description: The visibility of service offering
        example: PRIVATE
        explode: true
        in: query
        name: visibility
        required: false
        schema:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                ConsumptionListServiceOfferingsResult:
                  nextPageToken: next-token
                  serviceIds:
                  - s-12345678
                  - s-abcdefgh
                  services:
                  - createdAt: 2019-01-01T00:00:00Z
                    isDeprecated: false
                    offerings:
                    - allowCreatesWhenPaymentNotConfigured: true
                      assets:
                        cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                        cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
                      maxNumberOfInstances: 4
                      productTierName: Premium
                      productTierURLKey: premium
                      resourceParameters:
                      - name: MySQL
                        urlKey: mysql
                      - name: Redis
                        urlKey: redis
                      serviceAPIID: sa-12345678
                      serviceAPIVersion: v1
                      serviceEnvironmentName: Production
                      serviceEnvironmentURLKey: prod
                      serviceEnvironmentVisibility: PRIVATE
                      serviceModelName: Bring Your Own Account
                      serviceModelURLKey: byoa
                    - productTierName: Basic
                      productTierURLKey: basic
                      resourceParameters:
                      - name: MySQL
                        urlKey: mysql
                      - name: Redis
                        urlKey: redis
                      serviceAPIID: sa-abcdefgh
                      serviceAPIVersion: v1
                      serviceEnvironmentName: Production
                      serviceEnvironmentURLKey: prod
                      serviceEnvironmentVisibility: PUBLIC
                      serviceModelName: Hosted
                      serviceModelURLKey: hosted
                    serviceDescription: MySQL is a relational database
                    serviceId: s-12345678
                    serviceName: MySQL
                    serviceOrgId: org-12345678
                    serviceProviderId: sp-9zrg9W8Are
                    serviceProviderName: "Omnistrate, Inc."
                    serviceURLKey: mysql
                  - createdAt: 2019-01-01T00:00:00Z
                    isDeprecated: false
                    offerings:
                    - allowCreatesWhenPaymentNotConfigured: true
                      assets:
                        cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                        cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
                      maxNumberOfInstances: 4
                      productTierName: Premium
                      productTierURLKey: premium
                      resourceParameters:
                      - name: MySQL
                        urlKey: mysql
                      - name: Redis
                        urlKey: redis
                      serviceAPIID: sa-12345678
                      serviceAPIVersion: v1
                      serviceEnvironmentName: Production
                      serviceEnvironmentURLKey: prod
                      serviceEnvironmentVisibility: PRIVATE
                      serviceModelName: Bring Your Own Account
                      serviceModelURLKey: byoa
                    - productTierName: Basic
                      productTierURLKey: basic
                      resourceParameters:
                      - name: MySQL
                        urlKey: mysql
                      - name: Redis
                        urlKey: redis
                      serviceAPIID: sa-abcdefgh
                      serviceAPIVersion: v1
                      serviceEnvironmentName: Production
                      serviceEnvironmentURLKey: prod
                      serviceEnvironmentVisibility: PUBLIC
                      serviceModelName: Hosted
                      serviceModelURLKey: hosted
                    serviceDescription: MySQL is a relational database
                    serviceId: s-12345678
                    serviceName: MySQL
                    serviceOrgId: org-12345678
                    serviceProviderId: sp-9zrg9W8Are
                    serviceProviderName: "Omnistrate, Inc."
                    serviceURLKey: mysql
                  - createdAt: 2019-01-01T00:00:00Z
                    isDeprecated: false
                    offerings:
                    - allowCreatesWhenPaymentNotConfigured: true
                      assets:
                        cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                        cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
                      maxNumberOfInstances: 4
                      productTierName: Premium
                      productTierURLKey: premium
                      resourceParameters:
                      - name: MySQL
                        urlKey: mysql
                      - name: Redis
                        urlKey: redis
                      serviceAPIID: sa-12345678
                      serviceAPIVersion: v1
                      serviceEnvironmentName: Production
                      serviceEnvironmentURLKey: prod
                      serviceEnvironmentVisibility: PRIVATE
                      serviceModelName: Bring Your Own Account
                      serviceModelURLKey: byoa
                    - productTierName: Basic
                      productTierURLKey: basic
                      resourceParameters:
                      - name: MySQL
                        urlKey: mysql
                      - name: Redis
                        urlKey: redis
                      serviceAPIID: sa-abcdefgh
                      serviceAPIVersion: v1
                      serviceEnvironmentName: Production
                      serviceEnvironmentURLKey: prod
                      serviceEnvironmentVisibility: PUBLIC
                      serviceModelName: Hosted
                      serviceModelURLKey: hosted
                    serviceDescription: MySQL is a relational database
                    serviceId: s-12345678
                    serviceName: MySQL
                    serviceOrgId: org-12345678
                    serviceProviderId: sp-9zrg9W8Are
                    serviceProviderName: "Omnistrate, Inc."
                    serviceURLKey: mysql
              schema:
                $ref: "#/components/schemas/InventoryListServiceOfferingsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list service offerings"
      security:
      - api_key_header_Authorization: []
      summary: ListServiceOfferings inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service-offering/{serviceId}:
    get:
      operationId: inventory-api#DescribeServiceOffering
      parameters:
      - allowEmptyValue: true
        description: The visibility of service offering
        example: PRIVATE
        explode: true
        in: query
        name: visibility
        required: false
        schema:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
        style: form
      - allowEmptyValue: true
        description: The product tier Id
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Vel at aut.
          type: string
        style: form
      - allowEmptyValue: true
        description: The product tier version
        example: 1.0.0
        explode: true
        in: query
        name: productTierVersion
        required: false
        schema:
          description: The product tier version
          example: 1.0.0
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ConsumptionDescribeServiceOfferingResult:
                  createdAt: 2019-01-01T00:00:00Z
                  isDeprecated: false
                  offerings:
                  - allowCreatesWhenPaymentNotConfigured: true
                    assets:
                      cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                      cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
                    maxNumberOfInstances: 4
                    productTierName: Premium
                    productTierURLKey: premium
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-12345678
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PRIVATE
                    serviceModelName: Bring Your Own Account
                    serviceModelURLKey: byoa
                  - productTierName: Basic
                    productTierURLKey: basic
                    resourceParameters:
                    - name: MySQL
                      urlKey: mysql
                    - name: Redis
                      urlKey: redis
                    serviceAPIID: sa-abcdefgh
                    serviceAPIVersion: v1
                    serviceEnvironmentName: Production
                    serviceEnvironmentURLKey: prod
                    serviceEnvironmentVisibility: PUBLIC
                    serviceModelName: Hosted
                    serviceModelURLKey: hosted
                  serviceDescription: MySQL is a relational database
                  serviceId: s-12345678
                  serviceName: MySQL
                  serviceOrgId: org-12345678
                  serviceProviderId: sp-9zrg9W8Are
                  serviceProviderName: "Omnistrate, Inc."
                  serviceURLKey: mysql
              schema:
                $ref: "#/components/schemas/InventoryDescribeServiceOfferingResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a service\
            \ offering"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceOffering inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service-offering/{serviceId}/resource/{resourceId}/instance/{instanceId}:
    get:
      operationId: inventory-api#DescribeServiceOfferingResource
      parameters:
      - allowEmptyValue: true
        description: The product tier Id
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Harum vitae deleniti.
          type: string
        style: form
      - allowEmptyValue: true
        description: The product tier version
        example: 1.0.0
        explode: true
        in: query
        name: productTierVersion
        required: false
        schema:
          description: The product tier version
          example: 1.0.0
          type: string
        style: form
      - description: The service ID
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The resource ID
        example: r-12345678
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          description: ID of a resource
          example: Molestiae quam quaerat et.
          type: string
        style: simple
      - description: The instance ID
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          default: none
          description: The instance ID
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ConsumptionDescribeServiceOfferingResourceResult:
                  apis:
                  - inputParameters:
                    - defaultValue: null
                      description: The name of the server
                      displayName: Server Name
                      isList: false
                      key: serverName
                      modifiable: true
                      options: null
                      required: true
                      type: string
                    - defaultValue: option1
                      description: The type of the server
                      displayName: Server Type
                      isList: false
                      key: serverType
                      modifiable: true
                      options:
                      - option1
                      - option2
                      required: true
                      type: string
                    outputParameters:
                    - description: The name of the server
                      displayName: Server Name
                      isList: false
                      key: serverName
                      type: string
                    - description: The type of the server
                      displayName: Server Type
                      isList: false
                      key: serverType
                      type: string
                    verb: create
                  - inputParameters:
                    - defaultValue: null
                      description: The name of the server
                      displayName: Server Name
                      isList: false
                      key: serverName
                      modifiable: true
                      options: null
                      required: true
                      type: string
                    outputParameters:
                    - description: The name of the server
                      displayName: Server Name
                      isList: false
                      key: serverName
                      type: string
                    - description: The type of the server
                      displayName: Server Type
                      isList: false
                      key: serverType
                      type: string
                    verb: describe
              schema:
                $ref: "#/components/schemas/InventoryDescribeServiceOfferingResourceResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a service\
            \ offering resource"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceOfferingResource inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/account-config-instance/{instanceId}:
    post:
      operationId: inventory-api#UpdateAccountConfigResourceInstance
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              setConnection: true
            schema:
              $ref: "#/components/schemas/FleetUpdateAccountConfigResourceInstanceRequest2"
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: UpdateAccountConfigResourceInstance inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/{resourceKey}/instance/{instanceId}/custom-dns:
    delete:
      operationId: inventory-api#RemoveCustomDNSFromResourceInstance
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource key
        example: http-service
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: http-service
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: RemoveCustomDNSFromResourceInstance inventory-api
      tags:
      - inventory-api
    post:
      operationId: inventory-api#AddCustomDNSToResourceInstance
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource key
        example: http-service
        explode: false
        in: path
        name: resourceKey
        required: true
        schema:
          description: The resource key
          example: http-service
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              customDNS: my-custom-dns.com
              targetPort: 8080
            schema:
              $ref: "#/components/schemas/FleetAddCustomDNSToResourceInstanceRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: AddCustomDNSToResourceInstance inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/host-cluster/{id}:
    get:
      operationId: inventory-api#DescribeHostCluster
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The host cluster ID
        example: hc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Host Cluster
          example: Est et ut non quasi.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                awsAccountID: "123456789012"
                azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                cloudProvider: aws
                dashboardEndpoint: https://dashboard.example.com
                gcpProjectID: my-project
                id: hc-12345678
                region: us-east-1
                status: READY
                type: Kubernetes
              schema:
                $ref: "#/components/schemas/FleetDescribeHostClusterResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a host\
            \ cluster."
      security:
      - api_key_header_Authorization: []
      summary: DescribeHostCluster inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/host-cluster/{id}/dashboard/token:
    post:
      operationId: inventory-api#GenerateTokenForHostClusterDashboard
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The host cluster ID
        example: hc-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Host Cluster
          example: Molestiae et sed dolorem.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                expirationTimestamp: 2021-01-01T00:00:00Z
                token: token
              schema:
                $ref: "#/components/schemas/FleetGenerateTokenForHostClusterDashboardResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to generate a kubernetes\
            \ dashboard token."
      security:
      - api_key_header_Authorization: []
      summary: GenerateTokenForHostClusterDashboard inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/host-clusters:
    get:
      operationId: inventory-api#ListHostClusters
      parameters:
      - allowEmptyValue: true
        example: token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The next token to use for pagination
          example: token
          type: string
        style: form
      - allowEmptyValue: true
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        style: form
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                hostClusters:
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  cloudProvider: aws
                  dashboardEndpoint: https://dashboard.example.com
                  gcpProjectID: my-project
                  id: hc-12345678
                  region: us-east-1
                  status: READY
                  type: Kubernetes
                - awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  cloudProvider: aws
                  dashboardEndpoint: https://dashboard.example.com
                  gcpProjectID: my-project
                  id: hc-12345678
                  region: us-east-1
                  status: READY
                  type: Kubernetes
                ids:
                - sub-12345678
                - sub-abcdefgh
                - sub-1234efgh
                nextPageToken: next-token
              schema:
                $ref: "#/components/schemas/FleetListHostClustersResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list host clusters."
      security:
      - api_key_header_Authorization: []
      summary: ListHostClusters inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}:
    delete:
      operationId: inventory-api#DeleteResourceInstance
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              resourceId: r-12345678
            schema:
              $ref: "#/components/schemas/FleetDeleteResourceInstanceRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a resource\
            \ instance."
      security:
      - api_key_header_Authorization: []
      summary: DeleteResourceInstance inventory-api
      tags:
      - inventory-api
    get:
      operationId: inventory-api#DescribeResourceInstance
      parameters:
      - allowEmptyValue: true
        description: "If true, the response will include detailed information about\
          \ the resource instance."
        example: true
        explode: true
        in: query
        name: detail
        required: false
        schema:
          default: false
          description: "If true, the response will include detailed information about\
            \ the resource instance."
          example: true
          type: boolean
        style: form
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                adopted: true
                awsAccountID: "123456789012"
                azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                cloudProvider: aws
                consumptionResourceInstanceResult:
                  active: true
                  autoscalingEnabled: true
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  backupStatus:
                    backupPeriodInHours: 2
                    backupRetentionInDays: 7
                    earliestRestoreTime: 2021-09-01T00:00:00Z
                    lastBackupTime: 2021-09-01T00:00:00Z
                  cloud_provider: aws
                  created_at: 2023-01-10T00:00:00Z
                  createdByUserId: user-12345678
                  createdByUserName: John Doe
                  currentReplicas: "2"
                  customNetworkDetail:
                    cidr: 10.177.0.0/16
                    id: n-12345678
                    name: Prod us-east-1
                  detailedNetworkTopology:
                    r-abcd1234:
                      allowedIPRanges:
                      - 0.0.0.0/0
                      clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      clusterPorts:
                      - 3306
                      isJob: false
                      jobMetrics:
                      - additionalData:
                          exitCode: 0
                          status: Succeeded
                        endTime: 2023-01-01T10:05:00Z
                        metricType: cpu_core_seconds
                        startTime: 2023-01-01T10:00:00Z
                        value: 120.5
                      - additionalData:
                          peakMemoryUsage: 512MB
                        endTime: 2023-01-01T10:05:00Z
                        metricType: memory_mb_seconds
                        startTime: 2023-01-01T10:00:00Z
                        value: 2560
                      main: true
                      networkingType: PUBLIC
                      nodes:
                      - availabilityZone: us-east-2a
                        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        healthStatus: healthy
                        id: primary-0
                        ports:
                        - 3306
                        status: RUNNING
                      privateNetworkCIDR: 10.0.0.2/24
                      privateNetworkID: n-1234abcd
                      publiclyAccessible: true
                      resourceKey: primary
                      resourceName: Primary MySQL Instance
                  externalPayerId: external-payer-id-1234
                  gcpProjectID: my-project
                  highAvailability: true
                  id: instance-abcd1234
                  instanceLoadStatus: Dolor sapiente.
                  kubernetesDashboardEndpoint:
                    dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                    deploymentCellID: hc-12345678
                  last_modified_at: 2023-01-20T00:00:00Z
                  maintenanceTasks:
                    Repudiandae tenetur.: Fugiat quas.
                    Ut excepturi ad.: Fuga exercitationem odit praesentium quos non.
                  maxReplicas: "1"
                  minReplicas: "1"
                  network_type: PUBLIC|INTERNAL
                  productTierFeatures:
                    LOGS:
                      auth:
                        password: px3c4d5f6g7h8i
                        username: abcd1234
                      enabled: true
                      websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                    METRICS:
                      enabled: false
                  region: us-east-1
                  resourceID: r-abcd1234
                  result_params:
                    param1: value1
                    param2: value2
                  serverlessEnabled: true
                  status: RUNNING
                  subscriptionId: sub-abcd1234
                  subscriptionLicense:
                    certificateBase64: public-cert
                    expirationDate: 2024-01-01T10:00:00Z
                    licenseBase64: license-file
                  subscriptionStatus: ACTIVE
                  tierVersion: "1.0"
                defaultSubscription: true
                deploymentCellID: hc-12345678
                environmentId: se-12345678
                gcpProjectID: my-project
                input_params:
                  param1: value1
                  param2: value2
                instanceDebugCommands:
                - aws eks update-kubeconfig --name my-cluster --region us-west-2
                - kubectl -n instance-12345678 get pods
                integrationsStatus:
                - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                  configuration:
                    provider: native
                  healthStatus: UNHEALTHY
                  integrationType: LOGS
                  message: missing exporter secret configuration for gcp
                  scope: INTERNAL
                - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                  configuration:
                    provider: native
                  healthStatus: UNHEALTHY
                  integrationType: LOGS
                  message: missing exporter secret configuration for gcp
                  scope: INTERNAL
                - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                  configuration:
                    provider: native
                  healthStatus: UNHEALTHY
                  integrationType: LOGS
                  message: missing exporter secret configuration for gcp
                  scope: INTERNAL
                maintenanceTasks:
                  Delectus dolorum beatae aut cupiditate voluptatem.: Dolores et ullam
                    quis eaque.
                  Distinctio at.: Vitae quia quidem.
                  Est sit quaerat dolores voluptatem.: Sed odit.
                managedResourceType: PortsBasedProxy
                manualOverride:
                  setAt: 2020-01-01T00:00:00Z
                  setterUserId: user-12345678
                  workflowId: wf-12345678
                organizationId: org-12345678
                organizationName: my-org
                portsRegistrationStatus:
                  instance-123:
                  - 30000
                  - 30001
                  instance-456:
                  - 30002
                  - 30003
                productTierId: pt-12345678
                productTierName: premium
                productTierType: OMNISTRATE_DEDICATED
                proxyType: PortsBasedProxy
                resourceVersionSummaries:
                - capabilities:
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  externalResource: true
                  genericResourceDeploymentConfiguration:
                    image: nginx:latest
                    podEvents:
                      pod1:
                      - FirstTimestamp: 2025-10-01T12:00:00Z
                        LastTimestamp: 2025-10-01T12:05:00Z
                        Message: Pod scheduled successfully
                        NumberOfOccurrences: 3
                        Reason: Scheduled
                    podStatus:
                      pod1: Running
                      pod2: Pending
                    podToHostMapping:
                      pod1: node1
                      pod2: node2
                  helmDeploymentConfiguration:
                    chartName: nginx
                    chartVersion: 1.2.3
                    podEvents:
                      pod1:
                      - FirstTimestamp: 2025-10-01T12:00:00Z
                        LastTimestamp: 2025-10-01T12:05:00Z
                        Message: Pod scheduled successfully
                        NumberOfOccurrences: 3
                        Reason: Scheduled
                      pod2:
                      - FirstTimestamp: 2025-10-01T12:06:00Z
                        LastTimestamp: 2025-10-01T12:06:00Z
                        Message: Insufficient resources
                        NumberOfOccurrences: 1
                        Reason: FailedScheduling
                    podStatus:
                      pod1: Running
                      pod2: Pending
                      pod3: Failed
                    podToHostMapping:
                      pod1: node1
                      pod2: node2
                      pod3: node1
                    releaseName: my-nginx-release
                    releaseNamespace: default
                    releaseStatus: deployed
                    repositoryURL: https://charts.example.com
                    runtimeConfiguration:
                      namespace: default
                      timeout: 300s
                      waitForJobs: true
                      waitForJobsTimeout: 10m
                    values:
                      mysql:
                        image:
                          repository: mysql
                          tag: "8.0"
                        replicaCount: 3
                        service:
                          type: LoadBalancer
                  kustomizeDeploymentConfiguration:
                    BasePath: /path/to/kustomization
                    DeploymentErrors: Failed to apply Kustomize overlays
                    Overlays:
                      overlay1: /path/to/overlay1
                      overlay2: /path/to/overlay2
                  latestVersion: "2.0"
                  resourceId: r-12345678
                  resourceName: asserts-server
                  terraformDeploymentConfiguration:
                    configurationFiles:
                      main.tf: "resource \"aws_instance\" \"example\" { ... }"
                      variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                        \ }"
                    deploymentErrors: Failed to initialize Terraform provider
                  version: "1.0"
                - capabilities:
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  externalResource: true
                  genericResourceDeploymentConfiguration:
                    image: nginx:latest
                    podEvents:
                      pod1:
                      - FirstTimestamp: 2025-10-01T12:00:00Z
                        LastTimestamp: 2025-10-01T12:05:00Z
                        Message: Pod scheduled successfully
                        NumberOfOccurrences: 3
                        Reason: Scheduled
                    podStatus:
                      pod1: Running
                      pod2: Pending
                    podToHostMapping:
                      pod1: node1
                      pod2: node2
                  helmDeploymentConfiguration:
                    chartName: nginx
                    chartVersion: 1.2.3
                    podEvents:
                      pod1:
                      - FirstTimestamp: 2025-10-01T12:00:00Z
                        LastTimestamp: 2025-10-01T12:05:00Z
                        Message: Pod scheduled successfully
                        NumberOfOccurrences: 3
                        Reason: Scheduled
                      pod2:
                      - FirstTimestamp: 2025-10-01T12:06:00Z
                        LastTimestamp: 2025-10-01T12:06:00Z
                        Message: Insufficient resources
                        NumberOfOccurrences: 1
                        Reason: FailedScheduling
                    podStatus:
                      pod1: Running
                      pod2: Pending
                      pod3: Failed
                    podToHostMapping:
                      pod1: node1
                      pod2: node2
                      pod3: node1
                    releaseName: my-nginx-release
                    releaseNamespace: default
                    releaseStatus: deployed
                    repositoryURL: https://charts.example.com
                    runtimeConfiguration:
                      namespace: default
                      timeout: 300s
                      waitForJobs: true
                      waitForJobsTimeout: 10m
                    values:
                      mysql:
                        image:
                          repository: mysql
                          tag: "8.0"
                        replicaCount: 3
                        service:
                          type: LoadBalancer
                  kustomizeDeploymentConfiguration:
                    BasePath: /path/to/kustomization
                    DeploymentErrors: Failed to apply Kustomize overlays
                    Overlays:
                      overlay1: /path/to/overlay1
                      overlay2: /path/to/overlay2
                  latestVersion: "2.0"
                  resourceId: r-12345678
                  resourceName: asserts-server
                  terraformDeploymentConfiguration:
                    configurationFiles:
                      main.tf: "resource \"aws_instance\" \"example\" { ... }"
                      variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                        \ }"
                    deploymentErrors: Failed to initialize Terraform provider
                  version: "1.0"
                - capabilities:
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  externalResource: true
                  genericResourceDeploymentConfiguration:
                    image: nginx:latest
                    podEvents:
                      pod1:
                      - FirstTimestamp: 2025-10-01T12:00:00Z
                        LastTimestamp: 2025-10-01T12:05:00Z
                        Message: Pod scheduled successfully
                        NumberOfOccurrences: 3
                        Reason: Scheduled
                    podStatus:
                      pod1: Running
                      pod2: Pending
                    podToHostMapping:
                      pod1: node1
                      pod2: node2
                  helmDeploymentConfiguration:
                    chartName: nginx
                    chartVersion: 1.2.3
                    podEvents:
                      pod1:
                      - FirstTimestamp: 2025-10-01T12:00:00Z
                        LastTimestamp: 2025-10-01T12:05:00Z
                        Message: Pod scheduled successfully
                        NumberOfOccurrences: 3
                        Reason: Scheduled
                      pod2:
                      - FirstTimestamp: 2025-10-01T12:06:00Z
                        LastTimestamp: 2025-10-01T12:06:00Z
                        Message: Insufficient resources
                        NumberOfOccurrences: 1
                        Reason: FailedScheduling
                    podStatus:
                      pod1: Running
                      pod2: Pending
                      pod3: Failed
                    podToHostMapping:
                      pod1: node1
                      pod2: node2
                      pod3: node1
                    releaseName: my-nginx-release
                    releaseNamespace: default
                    releaseStatus: deployed
                    repositoryURL: https://charts.example.com
                    runtimeConfiguration:
                      namespace: default
                      timeout: 300s
                      waitForJobs: true
                      waitForJobsTimeout: 10m
                    values:
                      mysql:
                        image:
                          repository: mysql
                          tag: "8.0"
                        replicaCount: 3
                        service:
                          type: LoadBalancer
                  kustomizeDeploymentConfiguration:
                    BasePath: /path/to/kustomization
                    DeploymentErrors: Failed to apply Kustomize overlays
                    Overlays:
                      overlay1: /path/to/overlay1
                      overlay2: /path/to/overlay2
                  latestVersion: "2.0"
                  resourceId: r-12345678
                  resourceName: asserts-server
                  terraformDeploymentConfiguration:
                    configurationFiles:
                      main.tf: "resource \"aws_instance\" \"example\" { ... }"
                      variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                        \ }"
                    deploymentErrors: Failed to initialize Terraform provider
                  version: "1.0"
                serviceEnvName: dev
                serviceId: s-12345678
                serviceLogoURL: Sit maiores sed.
                serviceModelId: sm-12345678
                serviceModelName: hosted
                serviceModelType: OMNISTRATE_HOSTED
                serviceName: mysql
                subscriptionId: sub-12345678
                subscriptionOwnerName: John Doe
                subscriptionStatus: ACTIVE
                tierVersion: "1.0"
                tierVersionReleasedAt: 2020-01-01T00:00:00Z
                tierVersionReleasedByUserId: user-12345678
                tierVersionReleasedByUserName: John Doe
                tierVersionStatus: Preferred|Active|Deprecated|Pending
              schema:
                $ref: "#/components/schemas/ResourceInstance"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a inventory\
            \ summary."
      security:
      - api_key_header_Authorization: []
      summary: DescribeResourceInstance inventory-api
      tags:
      - inventory-api
    patch:
      operationId: inventory-api#UpdateResourceInstance
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              network_type: PUBLIC|INTERNAL
              requestParams:
                param1: value1
                param2: value2
              resourceId: r-12345678
            schema:
              $ref: "#/components/schemas/FleetUpdateResourceInstanceRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to modify a resource\
            \ instance."
      security:
      - api_key_header_Authorization: []
      summary: UpdateResourceInstance inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}/add-capacity:
    post:
      operationId: inventory-api#AddCapacityToResourceInstance
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              capacityToBeAdded: 3
              resourceId: r-12345678
            schema:
              $ref: "#/components/schemas/FleetAddCapacityToResourceInstanceRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to add capacity to\
            \ a resource instance."
      security:
      - api_key_header_Authorization: []
      summary: AddCapacityToResourceInstance inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}/autosnapshot:
    post:
      operationId: inventory-api#TriggerAutomaticResourceInstanceSnapshotCreation
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              example:
                environmentId: se-12345678
                serviceId: s-12345678
                snapshotId: instance-ss-12345678
              schema:
                $ref: "#/components/schemas/FleetAutomaticInstanceSnapshotCreationResult"
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Failed to create a resource instance snapshot"
      security:
      - api_key_header_Authorization: []
      summary: TriggerAutomaticResourceInstanceSnapshotCreation inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}/debug:
    get:
      operationId: inventory-api#DebugResourceInstance
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                instanceId: instance-12345678
                resourcesDebug:
                  Cum omnis.:
                    debugData: Inventore nam.
                    resourceId: r-12345678
                  Itaque accusamus placeat rem optio nobis.:
                    debugData: Inventore nam.
                    resourceId: r-12345678
                  Omnis quaerat dolorem quidem.:
                    debugData: Inventore nam.
                    resourceId: r-12345678
              schema:
                $ref: "#/components/schemas/DebugResourceInstanceResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get resource instance\
            \ debug information."
      security:
      - api_key_header_Authorization: []
      summary: DebugResourceInstance inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}/debug-mode:
    post:
      operationId: inventory-api#UpdateResourceInstanceDebugMode
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              enable: true
            schema:
              $ref: "#/components/schemas/FleetUpdateResourceInstanceDebugModeRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to set resource instance\
            \ maintenance mode."
      security:
      - api_key_header_Authorization: []
      summary: UpdateResourceInstanceDebugMode inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}/dependent-components:
    get:
      operationId: inventory-api#ListDependentComponents
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                environmentId: se-12345678
                nextPageToken: next-token
                resources:
                - environmentId: se-12345678
                  instanceCount: 2
                  name: asserts-server
                  perVersionInstanceCount:
                    "1.0": 2
                    "1.1": 2
                    "2.0": 2
                  productTierType: OMNISTRATE_DEDICATED
                  proxyType: PortsBasedProxy
                  resourceId: r-12345678
                  serviceId: s-12345678
                  serviceModelType: OMNISTRATE_HOSTED
                  version: "2.0"
                  versionHistory:
                  - "1.0"
                  - "1.1"
                  - "2.0"
                - environmentId: se-12345678
                  instanceCount: 2
                  name: asserts-server
                  perVersionInstanceCount:
                    "1.0": 2
                    "1.1": 2
                    "2.0": 2
                  productTierType: OMNISTRATE_DEDICATED
                  proxyType: PortsBasedProxy
                  resourceId: r-12345678
                  serviceId: s-12345678
                  serviceModelType: OMNISTRATE_HOSTED
                  version: "2.0"
                  versionHistory:
                  - "1.0"
                  - "1.1"
                  - "2.0"
                - environmentId: se-12345678
                  instanceCount: 2
                  name: asserts-server
                  perVersionInstanceCount:
                    "1.0": 2
                    "1.1": 2
                    "2.0": 2
                  productTierType: OMNISTRATE_DEDICATED
                  proxyType: PortsBasedProxy
                  resourceId: r-12345678
                  serviceId: s-12345678
                  serviceModelType: OMNISTRATE_HOSTED
                  version: "2.0"
                  versionHistory:
                  - "1.0"
                  - "1.1"
                  - "2.0"
                - environmentId: se-12345678
                  instanceCount: 2
                  name: asserts-server
                  perVersionInstanceCount:
                    "1.0": 2
                    "1.1": 2
                    "2.0": 2
                  productTierType: OMNISTRATE_DEDICATED
                  proxyType: PortsBasedProxy
                  resourceId: r-12345678
                  serviceId: s-12345678
                  serviceModelType: OMNISTRATE_HOSTED
                  version: "2.0"
                  versionHistory:
                  - "1.0"
                  - "1.1"
                  - "2.0"
                serviceId: s-12345678
              schema:
                $ref: "#/components/schemas/FleetListDependentComponentsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list dependent\
            \ components."
      security:
      - api_key_header_Authorization: []
      summary: ListDependentComponents inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}/event/{id}:
    get:
      operationId: inventory-api#DescribeInstanceEvent
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      - description: The ID of the event
        example: event-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Event
          example: In et optio sint nulla.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                environmentId: se-12345678
                eventSource: "Customer, Infra or Maintenance"
                id: event-12345678
                instanceId: instance-12345678
                message: instance-abcd1234 created
                orgId: org-12345678
                orgName: Acme Corporation
                resourceName: Galera
                serviceId: s-12345678
                time: 2023-01-10T00:00:00Z
                userId: user-12345678
                userName: John Doe
                workflowFailures:
                - eventTime: 2020-01-01T00:00:00Z
                  message: Bootstrap failed for reason X
                - eventTime: 2020-01-01T00:01:00Z
                  message: Compute failed for reason Y
                workflowId: workflow-12345678
              schema:
                $ref: "#/components/schemas/FleetDescribeEventResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe an event."
      security:
      - api_key_header_Authorization: []
      summary: DescribeInstanceEvent inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}/events:
    get:
      operationId: inventory-api#ListInstanceEvents
      parameters:
      - allowEmptyValue: true
        description: Filter events that occurred after this time
        example: 2023-01-10T00:00:00Z
        explode: true
        in: query
        name: startTime
        required: false
        schema:
          description: Filter events that occurred after this time
          example: 2023-01-10T00:00:00Z
          type: string
        style: form
      - allowEmptyValue: true
        description: Filter events that occurred before this time
        example: 2023-01-10T00:00:00Z
        explode: true
        in: query
        name: endTime
        required: false
        schema:
          description: Filter events that occurred before this time
          example: 2023-01-10T00:00:00Z
          type: string
        style: form
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                events:
                - environmentId: se-12345678
                  eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  instanceId: instance-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceName: Galera
                  serviceId: s-12345678
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                  workflowId: workflow-12345678
                - environmentId: se-12345678
                  eventSource: "Customer, Infra or Maintenance"
                  id: event-12345678
                  instanceId: instance-12345678
                  message: instance-abcd1234 created
                  orgId: org-12345678
                  orgName: Acme Corporation
                  resourceName: Galera
                  serviceId: s-12345678
                  time: 2023-01-10T00:00:00Z
                  userId: user-12345678
                  userName: John Doe
                  workflowFailures:
                  - eventTime: 2020-01-01T00:00:00Z
                    message: Bootstrap failed for reason X
                  - eventTime: 2020-01-01T00:01:00Z
                    message: Compute failed for reason Y
                  workflowId: workflow-12345678
                ids:
                - event-12345678
                nextPageToken: token
              schema:
                $ref: "#/components/schemas/FleetListEventsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list events."
      security:
      - api_key_header_Authorization: []
      summary: ListInstanceEvents inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}/failover:
    post:
      operationId: inventory-api#FailoverResourceInstance
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              failedReplicaAction: FAILOVER_AND_RESTART
              failedReplicaID: db-0
            schema:
              $ref: "#/components/schemas/FleetFailoverResourceInstanceRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to failover a resource\
            \ instance."
      security:
      - api_key_header_Authorization: []
      summary: FailoverResourceInstance inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}/installer:
    get:
      operationId: inventory-api#DescribeResourceInstanceInstaller
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                installerURL: Expedita repudiandae.
                instanceId: instance-12345678
              schema:
                $ref: "#/components/schemas/DescribeResourceInstanceInstallerResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get resource instance\
            \ installer metadata."
      security:
      - api_key_header_Authorization: []
      summary: DescribeResourceInstanceInstaller inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}/linked-instances:
    get:
      operationId: inventory-api#ListLinkedInstances
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                environmentId: se-12345678
                nextPageToken: next-token
                resourceInstances:
                - adopted: true
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  cloudProvider: aws
                  consumptionResourceInstanceResult:
                    active: true
                    autoscalingEnabled: true
                    awsAccountID: "123456789012"
                    azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                    backupStatus:
                      backupPeriodInHours: 2
                      backupRetentionInDays: 7
                      earliestRestoreTime: 2021-09-01T00:00:00Z
                      lastBackupTime: 2021-09-01T00:00:00Z
                    cloud_provider: aws
                    created_at: 2023-01-10T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    currentReplicas: "2"
                    customNetworkDetail:
                      cidr: 10.177.0.0/16
                      id: n-12345678
                      name: Prod us-east-1
                    detailedNetworkTopology:
                      r-abcd1234:
                        allowedIPRanges:
                        - 0.0.0.0/0
                        clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        clusterPorts:
                        - 3306
                        isJob: false
                        jobMetrics:
                        - additionalData:
                            exitCode: 0
                            status: Succeeded
                          endTime: 2023-01-01T10:05:00Z
                          metricType: cpu_core_seconds
                          startTime: 2023-01-01T10:00:00Z
                          value: 120.5
                        - additionalData:
                            peakMemoryUsage: 512MB
                          endTime: 2023-01-01T10:05:00Z
                          metricType: memory_mb_seconds
                          startTime: 2023-01-01T10:00:00Z
                          value: 2560
                        main: true
                        networkingType: PUBLIC
                        nodes:
                        - availabilityZone: us-east-2a
                          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                          healthStatus: healthy
                          id: primary-0
                          ports:
                          - 3306
                          status: RUNNING
                        privateNetworkCIDR: 10.0.0.2/24
                        privateNetworkID: n-1234abcd
                        publiclyAccessible: true
                        resourceKey: primary
                        resourceName: Primary MySQL Instance
                    externalPayerId: external-payer-id-1234
                    gcpProjectID: my-project
                    highAvailability: true
                    id: instance-abcd1234
                    instanceLoadStatus: Dolor sapiente.
                    kubernetesDashboardEndpoint:
                      dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                      deploymentCellID: hc-12345678
                    last_modified_at: 2023-01-20T00:00:00Z
                    maintenanceTasks:
                      Repudiandae tenetur.: Fugiat quas.
                      Ut excepturi ad.: Fuga exercitationem odit praesentium quos
                        non.
                    maxReplicas: "1"
                    minReplicas: "1"
                    network_type: PUBLIC|INTERNAL
                    productTierFeatures:
                      LOGS:
                        auth:
                          password: px3c4d5f6g7h8i
                          username: abcd1234
                        enabled: true
                        websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                      METRICS:
                        enabled: false
                    region: us-east-1
                    resourceID: r-abcd1234
                    result_params:
                      param1: value1
                      param2: value2
                    serverlessEnabled: true
                    status: RUNNING
                    subscriptionId: sub-abcd1234
                    subscriptionLicense:
                      certificateBase64: public-cert
                      expirationDate: 2024-01-01T10:00:00Z
                      licenseBase64: license-file
                    subscriptionStatus: ACTIVE
                    tierVersion: "1.0"
                  defaultSubscription: true
                  deploymentCellID: hc-12345678
                  environmentId: se-12345678
                  gcpProjectID: my-project
                  input_params:
                    param1: value1
                    param2: value2
                  instanceDebugCommands:
                  - aws eks update-kubeconfig --name my-cluster --region us-west-2
                  - kubectl -n instance-12345678 get pods
                  integrationsStatus:
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  maintenanceTasks:
                    Illum temporibus fuga.: Quaerat non odio et asperiores vel voluptatibus.
                    Sit quo vitae consequatur quae ullam sequi.: Autem veritatis dolores
                      molestiae et atque.
                  managedResourceType: PortsBasedProxy
                  manualOverride:
                    setAt: 2020-01-01T00:00:00Z
                    setterUserId: user-12345678
                    workflowId: wf-12345678
                  organizationId: org-12345678
                  organizationName: my-org
                  portsRegistrationStatus:
                    instance-123:
                    - 30000
                    - 30001
                    instance-456:
                    - 30002
                    - 30003
                  productTierId: pt-12345678
                  productTierName: premium
                  productTierType: OMNISTRATE_DEDICATED
                  proxyType: PortsBasedProxy
                  resourceVersionSummaries:
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  serviceEnvName: dev
                  serviceId: s-12345678
                  serviceLogoURL: Minima quia rerum sed eos.
                  serviceModelId: sm-12345678
                  serviceModelName: hosted
                  serviceModelType: OMNISTRATE_HOSTED
                  serviceName: mysql
                  subscriptionId: sub-12345678
                  subscriptionOwnerName: John Doe
                  subscriptionStatus: ACTIVE
                  tierVersion: "1.0"
                  tierVersionReleasedAt: 2020-01-01T00:00:00Z
                  tierVersionReleasedByUserId: user-12345678
                  tierVersionReleasedByUserName: John Doe
                  tierVersionStatus: Preferred|Active|Deprecated|Pending
                - adopted: true
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  cloudProvider: aws
                  consumptionResourceInstanceResult:
                    active: true
                    autoscalingEnabled: true
                    awsAccountID: "123456789012"
                    azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                    backupStatus:
                      backupPeriodInHours: 2
                      backupRetentionInDays: 7
                      earliestRestoreTime: 2021-09-01T00:00:00Z
                      lastBackupTime: 2021-09-01T00:00:00Z
                    cloud_provider: aws
                    created_at: 2023-01-10T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    currentReplicas: "2"
                    customNetworkDetail:
                      cidr: 10.177.0.0/16
                      id: n-12345678
                      name: Prod us-east-1
                    detailedNetworkTopology:
                      r-abcd1234:
                        allowedIPRanges:
                        - 0.0.0.0/0
                        clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        clusterPorts:
                        - 3306
                        isJob: false
                        jobMetrics:
                        - additionalData:
                            exitCode: 0
                            status: Succeeded
                          endTime: 2023-01-01T10:05:00Z
                          metricType: cpu_core_seconds
                          startTime: 2023-01-01T10:00:00Z
                          value: 120.5
                        - additionalData:
                            peakMemoryUsage: 512MB
                          endTime: 2023-01-01T10:05:00Z
                          metricType: memory_mb_seconds
                          startTime: 2023-01-01T10:00:00Z
                          value: 2560
                        main: true
                        networkingType: PUBLIC
                        nodes:
                        - availabilityZone: us-east-2a
                          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                          healthStatus: healthy
                          id: primary-0
                          ports:
                          - 3306
                          status: RUNNING
                        privateNetworkCIDR: 10.0.0.2/24
                        privateNetworkID: n-1234abcd
                        publiclyAccessible: true
                        resourceKey: primary
                        resourceName: Primary MySQL Instance
                    externalPayerId: external-payer-id-1234
                    gcpProjectID: my-project
                    highAvailability: true
                    id: instance-abcd1234
                    instanceLoadStatus: Dolor sapiente.
                    kubernetesDashboardEndpoint:
                      dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                      deploymentCellID: hc-12345678
                    last_modified_at: 2023-01-20T00:00:00Z
                    maintenanceTasks:
                      Repudiandae tenetur.: Fugiat quas.
                      Ut excepturi ad.: Fuga exercitationem odit praesentium quos
                        non.
                    maxReplicas: "1"
                    minReplicas: "1"
                    network_type: PUBLIC|INTERNAL
                    productTierFeatures:
                      LOGS:
                        auth:
                          password: px3c4d5f6g7h8i
                          username: abcd1234
                        enabled: true
                        websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                      METRICS:
                        enabled: false
                    region: us-east-1
                    resourceID: r-abcd1234
                    result_params:
                      param1: value1
                      param2: value2
                    serverlessEnabled: true
                    status: RUNNING
                    subscriptionId: sub-abcd1234
                    subscriptionLicense:
                      certificateBase64: public-cert
                      expirationDate: 2024-01-01T10:00:00Z
                      licenseBase64: license-file
                    subscriptionStatus: ACTIVE
                    tierVersion: "1.0"
                  defaultSubscription: true
                  deploymentCellID: hc-12345678
                  environmentId: se-12345678
                  gcpProjectID: my-project
                  input_params:
                    param1: value1
                    param2: value2
                  instanceDebugCommands:
                  - aws eks update-kubeconfig --name my-cluster --region us-west-2
                  - kubectl -n instance-12345678 get pods
                  integrationsStatus:
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  maintenanceTasks:
                    Illum temporibus fuga.: Quaerat non odio et asperiores vel voluptatibus.
                    Sit quo vitae consequatur quae ullam sequi.: Autem veritatis dolores
                      molestiae et atque.
                  managedResourceType: PortsBasedProxy
                  manualOverride:
                    setAt: 2020-01-01T00:00:00Z
                    setterUserId: user-12345678
                    workflowId: wf-12345678
                  organizationId: org-12345678
                  organizationName: my-org
                  portsRegistrationStatus:
                    instance-123:
                    - 30000
                    - 30001
                    instance-456:
                    - 30002
                    - 30003
                  productTierId: pt-12345678
                  productTierName: premium
                  productTierType: OMNISTRATE_DEDICATED
                  proxyType: PortsBasedProxy
                  resourceVersionSummaries:
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  serviceEnvName: dev
                  serviceId: s-12345678
                  serviceLogoURL: Minima quia rerum sed eos.
                  serviceModelId: sm-12345678
                  serviceModelName: hosted
                  serviceModelType: OMNISTRATE_HOSTED
                  serviceName: mysql
                  subscriptionId: sub-12345678
                  subscriptionOwnerName: John Doe
                  subscriptionStatus: ACTIVE
                  tierVersion: "1.0"
                  tierVersionReleasedAt: 2020-01-01T00:00:00Z
                  tierVersionReleasedByUserId: user-12345678
                  tierVersionReleasedByUserName: John Doe
                  tierVersionStatus: Preferred|Active|Deprecated|Pending
                - adopted: true
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  cloudProvider: aws
                  consumptionResourceInstanceResult:
                    active: true
                    autoscalingEnabled: true
                    awsAccountID: "123456789012"
                    azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                    backupStatus:
                      backupPeriodInHours: 2
                      backupRetentionInDays: 7
                      earliestRestoreTime: 2021-09-01T00:00:00Z
                      lastBackupTime: 2021-09-01T00:00:00Z
                    cloud_provider: aws
                    created_at: 2023-01-10T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    currentReplicas: "2"
                    customNetworkDetail:
                      cidr: 10.177.0.0/16
                      id: n-12345678
                      name: Prod us-east-1
                    detailedNetworkTopology:
                      r-abcd1234:
                        allowedIPRanges:
                        - 0.0.0.0/0
                        clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        clusterPorts:
                        - 3306
                        isJob: false
                        jobMetrics:
                        - additionalData:
                            exitCode: 0
                            status: Succeeded
                          endTime: 2023-01-01T10:05:00Z
                          metricType: cpu_core_seconds
                          startTime: 2023-01-01T10:00:00Z
                          value: 120.5
                        - additionalData:
                            peakMemoryUsage: 512MB
                          endTime: 2023-01-01T10:05:00Z
                          metricType: memory_mb_seconds
                          startTime: 2023-01-01T10:00:00Z
                          value: 2560
                        main: true
                        networkingType: PUBLIC
                        nodes:
                        - availabilityZone: us-east-2a
                          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                          healthStatus: healthy
                          id: primary-0
                          ports:
                          - 3306
                          status: RUNNING
                        privateNetworkCIDR: 10.0.0.2/24
                        privateNetworkID: n-1234abcd
                        publiclyAccessible: true
                        resourceKey: primary
                        resourceName: Primary MySQL Instance
                    externalPayerId: external-payer-id-1234
                    gcpProjectID: my-project
                    highAvailability: true
                    id: instance-abcd1234
                    instanceLoadStatus: Dolor sapiente.
                    kubernetesDashboardEndpoint:
                      dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                      deploymentCellID: hc-12345678
                    last_modified_at: 2023-01-20T00:00:00Z
                    maintenanceTasks:
                      Repudiandae tenetur.: Fugiat quas.
                      Ut excepturi ad.: Fuga exercitationem odit praesentium quos
                        non.
                    maxReplicas: "1"
                    minReplicas: "1"
                    network_type: PUBLIC|INTERNAL
                    productTierFeatures:
                      LOGS:
                        auth:
                          password: px3c4d5f6g7h8i
                          username: abcd1234
                        enabled: true
                        websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                      METRICS:
                        enabled: false
                    region: us-east-1
                    resourceID: r-abcd1234
                    result_params:
                      param1: value1
                      param2: value2
                    serverlessEnabled: true
                    status: RUNNING
                    subscriptionId: sub-abcd1234
                    subscriptionLicense:
                      certificateBase64: public-cert
                      expirationDate: 2024-01-01T10:00:00Z
                      licenseBase64: license-file
                    subscriptionStatus: ACTIVE
                    tierVersion: "1.0"
                  defaultSubscription: true
                  deploymentCellID: hc-12345678
                  environmentId: se-12345678
                  gcpProjectID: my-project
                  input_params:
                    param1: value1
                    param2: value2
                  instanceDebugCommands:
                  - aws eks update-kubeconfig --name my-cluster --region us-west-2
                  - kubectl -n instance-12345678 get pods
                  integrationsStatus:
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  maintenanceTasks:
                    Illum temporibus fuga.: Quaerat non odio et asperiores vel voluptatibus.
                    Sit quo vitae consequatur quae ullam sequi.: Autem veritatis dolores
                      molestiae et atque.
                  managedResourceType: PortsBasedProxy
                  manualOverride:
                    setAt: 2020-01-01T00:00:00Z
                    setterUserId: user-12345678
                    workflowId: wf-12345678
                  organizationId: org-12345678
                  organizationName: my-org
                  portsRegistrationStatus:
                    instance-123:
                    - 30000
                    - 30001
                    instance-456:
                    - 30002
                    - 30003
                  productTierId: pt-12345678
                  productTierName: premium
                  productTierType: OMNISTRATE_DEDICATED
                  proxyType: PortsBasedProxy
                  resourceVersionSummaries:
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  serviceEnvName: dev
                  serviceId: s-12345678
                  serviceLogoURL: Minima quia rerum sed eos.
                  serviceModelId: sm-12345678
                  serviceModelName: hosted
                  serviceModelType: OMNISTRATE_HOSTED
                  serviceName: mysql
                  subscriptionId: sub-12345678
                  subscriptionOwnerName: John Doe
                  subscriptionStatus: ACTIVE
                  tierVersion: "1.0"
                  tierVersionReleasedAt: 2020-01-01T00:00:00Z
                  tierVersionReleasedByUserId: user-12345678
                  tierVersionReleasedByUserName: John Doe
                  tierVersionStatus: Preferred|Active|Deprecated|Pending
                serviceId: s-12345678
              schema:
                $ref: "#/components/schemas/FleetListLinkedInstancesResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list dependency\
            \ resource instances."
      security:
      - api_key_header_Authorization: []
      summary: ListLinkedInstances inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}/patch:
    patch:
      operationId: inventory-api#OneOffPatchResourceInstance
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              resourceId: r-12345678
              resourceOverrideConfiguration:
                mysql:
                  helmChartValues:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
                redis:
                  helmChartValues:
                    image:
                      repository: redis
                      tag: "6.0"
                    replicaCount: 2
              targetTierVersion: "2.0"
            schema:
              $ref: "#/components/schemas/OneOffPatchResourceInstanceRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                adopted: true
                awsAccountID: "123456789012"
                azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                cloudProvider: aws
                consumptionResourceInstanceResult:
                  active: true
                  autoscalingEnabled: true
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  backupStatus:
                    backupPeriodInHours: 2
                    backupRetentionInDays: 7
                    earliestRestoreTime: 2021-09-01T00:00:00Z
                    lastBackupTime: 2021-09-01T00:00:00Z
                  cloud_provider: aws
                  created_at: 2023-01-10T00:00:00Z
                  createdByUserId: user-12345678
                  createdByUserName: John Doe
                  currentReplicas: "2"
                  customNetworkDetail:
                    cidr: 10.177.0.0/16
                    id: n-12345678
                    name: Prod us-east-1
                  detailedNetworkTopology:
                    r-abcd1234:
                      allowedIPRanges:
                      - 0.0.0.0/0
                      clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      clusterPorts:
                      - 3306
                      isJob: false
                      jobMetrics:
                      - additionalData:
                          exitCode: 0
                          status: Succeeded
                        endTime: 2023-01-01T10:05:00Z
                        metricType: cpu_core_seconds
                        startTime: 2023-01-01T10:00:00Z
                        value: 120.5
                      - additionalData:
                          peakMemoryUsage: 512MB
                        endTime: 2023-01-01T10:05:00Z
                        metricType: memory_mb_seconds
                        startTime: 2023-01-01T10:00:00Z
                        value: 2560
                      main: true
                      networkingType: PUBLIC
                      nodes:
                      - availabilityZone: us-east-2a
                        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        healthStatus: healthy
                        id: primary-0
                        ports:
                        - 3306
                        status: RUNNING
                      privateNetworkCIDR: 10.0.0.2/24
                      privateNetworkID: n-1234abcd
                      publiclyAccessible: true
                      resourceKey: primary
                      resourceName: Primary MySQL Instance
                  externalPayerId: external-payer-id-1234
                  gcpProjectID: my-project
                  highAvailability: true
                  id: instance-abcd1234
                  instanceLoadStatus: Dolor sapiente.
                  kubernetesDashboardEndpoint:
                    dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                    deploymentCellID: hc-12345678
                  last_modified_at: 2023-01-20T00:00:00Z
                  maintenanceTasks:
                    Repudiandae tenetur.: Fugiat quas.
                    Ut excepturi ad.: Fuga exercitationem odit praesentium quos non.
                  maxReplicas: "1"
                  minReplicas: "1"
                  network_type: PUBLIC|INTERNAL
                  productTierFeatures:
                    LOGS:
                      auth:
                        password: px3c4d5f6g7h8i
                        username: abcd1234
                      enabled: true
                      websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                    METRICS:
                      enabled: false
                  region: us-east-1
                  resourceID: r-abcd1234
                  result_params:
                    param1: value1
                    param2: value2
                  serverlessEnabled: true
                  status: RUNNING
                  subscriptionId: sub-abcd1234
                  subscriptionLicense:
                    certificateBase64: public-cert
                    expirationDate: 2024-01-01T10:00:00Z
                    licenseBase64: license-file
                  subscriptionStatus: ACTIVE
                  tierVersion: "1.0"
                defaultSubscription: true
                deploymentCellID: hc-12345678
                environmentId: se-12345678
                gcpProjectID: my-project
                input_params:
                  param1: value1
                  param2: value2
                instanceDebugCommands:
                - aws eks update-kubeconfig --name my-cluster --region us-west-2
                - kubectl -n instance-12345678 get pods
                integrationsStatus:
                - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                  configuration:
                    provider: native
                  healthStatus: UNHEALTHY
                  integrationType: LOGS
                  message: missing exporter secret configuration for gcp
                  scope: INTERNAL
                - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                  configuration:
                    provider: native
                  healthStatus: UNHEALTHY
                  integrationType: LOGS
                  message: missing exporter secret configuration for gcp
                  scope: INTERNAL
                maintenanceTasks:
                  Quo vel sunt.: Error accusantium.
                  Sapiente neque autem.: Tempore qui aut asperiores dolores et rerum.
                managedResourceType: PortsBasedProxy
                manualOverride:
                  setAt: 2020-01-01T00:00:00Z
                  setterUserId: user-12345678
                  workflowId: wf-12345678
                organizationId: org-12345678
                organizationName: my-org
                portsRegistrationStatus:
                  instance-123:
                  - 30000
                  - 30001
                  instance-456:
                  - 30002
                  - 30003
                productTierId: pt-12345678
                productTierName: premium
                productTierType: OMNISTRATE_DEDICATED
                proxyType: PortsBasedProxy
                resourceVersionSummaries:
                - capabilities:
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  externalResource: true
                  genericResourceDeploymentConfiguration:
                    image: nginx:latest
                    podEvents:
                      pod1:
                      - FirstTimestamp: 2025-10-01T12:00:00Z
                        LastTimestamp: 2025-10-01T12:05:00Z
                        Message: Pod scheduled successfully
                        NumberOfOccurrences: 3
                        Reason: Scheduled
                    podStatus:
                      pod1: Running
                      pod2: Pending
                    podToHostMapping:
                      pod1: node1
                      pod2: node2
                  helmDeploymentConfiguration:
                    chartName: nginx
                    chartVersion: 1.2.3
                    podEvents:
                      pod1:
                      - FirstTimestamp: 2025-10-01T12:00:00Z
                        LastTimestamp: 2025-10-01T12:05:00Z
                        Message: Pod scheduled successfully
                        NumberOfOccurrences: 3
                        Reason: Scheduled
                      pod2:
                      - FirstTimestamp: 2025-10-01T12:06:00Z
                        LastTimestamp: 2025-10-01T12:06:00Z
                        Message: Insufficient resources
                        NumberOfOccurrences: 1
                        Reason: FailedScheduling
                    podStatus:
                      pod1: Running
                      pod2: Pending
                      pod3: Failed
                    podToHostMapping:
                      pod1: node1
                      pod2: node2
                      pod3: node1
                    releaseName: my-nginx-release
                    releaseNamespace: default
                    releaseStatus: deployed
                    repositoryURL: https://charts.example.com
                    runtimeConfiguration:
                      namespace: default
                      timeout: 300s
                      waitForJobs: true
                      waitForJobsTimeout: 10m
                    values:
                      mysql:
                        image:
                          repository: mysql
                          tag: "8.0"
                        replicaCount: 3
                        service:
                          type: LoadBalancer
                  kustomizeDeploymentConfiguration:
                    BasePath: /path/to/kustomization
                    DeploymentErrors: Failed to apply Kustomize overlays
                    Overlays:
                      overlay1: /path/to/overlay1
                      overlay2: /path/to/overlay2
                  latestVersion: "2.0"
                  resourceId: r-12345678
                  resourceName: asserts-server
                  terraformDeploymentConfiguration:
                    configurationFiles:
                      main.tf: "resource \"aws_instance\" \"example\" { ... }"
                      variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                        \ }"
                    deploymentErrors: Failed to initialize Terraform provider
                  version: "1.0"
                - capabilities:
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  externalResource: true
                  genericResourceDeploymentConfiguration:
                    image: nginx:latest
                    podEvents:
                      pod1:
                      - FirstTimestamp: 2025-10-01T12:00:00Z
                        LastTimestamp: 2025-10-01T12:05:00Z
                        Message: Pod scheduled successfully
                        NumberOfOccurrences: 3
                        Reason: Scheduled
                    podStatus:
                      pod1: Running
                      pod2: Pending
                    podToHostMapping:
                      pod1: node1
                      pod2: node2
                  helmDeploymentConfiguration:
                    chartName: nginx
                    chartVersion: 1.2.3
                    podEvents:
                      pod1:
                      - FirstTimestamp: 2025-10-01T12:00:00Z
                        LastTimestamp: 2025-10-01T12:05:00Z
                        Message: Pod scheduled successfully
                        NumberOfOccurrences: 3
                        Reason: Scheduled
                      pod2:
                      - FirstTimestamp: 2025-10-01T12:06:00Z
                        LastTimestamp: 2025-10-01T12:06:00Z
                        Message: Insufficient resources
                        NumberOfOccurrences: 1
                        Reason: FailedScheduling
                    podStatus:
                      pod1: Running
                      pod2: Pending
                      pod3: Failed
                    podToHostMapping:
                      pod1: node1
                      pod2: node2
                      pod3: node1
                    releaseName: my-nginx-release
                    releaseNamespace: default
                    releaseStatus: deployed
                    repositoryURL: https://charts.example.com
                    runtimeConfiguration:
                      namespace: default
                      timeout: 300s
                      waitForJobs: true
                      waitForJobsTimeout: 10m
                    values:
                      mysql:
                        image:
                          repository: mysql
                          tag: "8.0"
                        replicaCount: 3
                        service:
                          type: LoadBalancer
                  kustomizeDeploymentConfiguration:
                    BasePath: /path/to/kustomization
                    DeploymentErrors: Failed to apply Kustomize overlays
                    Overlays:
                      overlay1: /path/to/overlay1
                      overlay2: /path/to/overlay2
                  latestVersion: "2.0"
                  resourceId: r-12345678
                  resourceName: asserts-server
                  terraformDeploymentConfiguration:
                    configurationFiles:
                      main.tf: "resource \"aws_instance\" \"example\" { ... }"
                      variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                        \ }"
                    deploymentErrors: Failed to initialize Terraform provider
                  version: "1.0"
                - capabilities:
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  - capability: SERVERLESS
                    configuration:
                      EnableAutoStop: true
                      MinimumNodesInPool: 5
                      PortsMappingProxyConfig:
                        MaxNumberOfClustersPerProxyInstance: 50
                        NumberOfPortsPerCluster: 4
                      ProxyId: r-123456
                      ReferenceProxyKey: resource-proxy
                      TargetPort: 5432
                  externalResource: true
                  genericResourceDeploymentConfiguration:
                    image: nginx:latest
                    podEvents:
                      pod1:
                      - FirstTimestamp: 2025-10-01T12:00:00Z
                        LastTimestamp: 2025-10-01T12:05:00Z
                        Message: Pod scheduled successfully
                        NumberOfOccurrences: 3
                        Reason: Scheduled
                    podStatus:
                      pod1: Running
                      pod2: Pending
                    podToHostMapping:
                      pod1: node1
                      pod2: node2
                  helmDeploymentConfiguration:
                    chartName: nginx
                    chartVersion: 1.2.3
                    podEvents:
                      pod1:
                      - FirstTimestamp: 2025-10-01T12:00:00Z
                        LastTimestamp: 2025-10-01T12:05:00Z
                        Message: Pod scheduled successfully
                        NumberOfOccurrences: 3
                        Reason: Scheduled
                      pod2:
                      - FirstTimestamp: 2025-10-01T12:06:00Z
                        LastTimestamp: 2025-10-01T12:06:00Z
                        Message: Insufficient resources
                        NumberOfOccurrences: 1
                        Reason: FailedScheduling
                    podStatus:
                      pod1: Running
                      pod2: Pending
                      pod3: Failed
                    podToHostMapping:
                      pod1: node1
                      pod2: node2
                      pod3: node1
                    releaseName: my-nginx-release
                    releaseNamespace: default
                    releaseStatus: deployed
                    repositoryURL: https://charts.example.com
                    runtimeConfiguration:
                      namespace: default
                      timeout: 300s
                      waitForJobs: true
                      waitForJobsTimeout: 10m
                    values:
                      mysql:
                        image:
                          repository: mysql
                          tag: "8.0"
                        replicaCount: 3
                        service:
                          type: LoadBalancer
                  kustomizeDeploymentConfiguration:
                    BasePath: /path/to/kustomization
                    DeploymentErrors: Failed to apply Kustomize overlays
                    Overlays:
                      overlay1: /path/to/overlay1
                      overlay2: /path/to/overlay2
                  latestVersion: "2.0"
                  resourceId: r-12345678
                  resourceName: asserts-server
                  terraformDeploymentConfiguration:
                    configurationFiles:
                      main.tf: "resource \"aws_instance\" \"example\" { ... }"
                      variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                        \ }"
                    deploymentErrors: Failed to initialize Terraform provider
                  version: "1.0"
                serviceEnvName: dev
                serviceId: s-12345678
                serviceLogoURL: Ducimus minus omnis corporis.
                serviceModelId: sm-12345678
                serviceModelName: hosted
                serviceModelType: OMNISTRATE_HOSTED
                serviceName: mysql
                subscriptionId: sub-12345678
                subscriptionOwnerName: John Doe
                subscriptionStatus: ACTIVE
                tierVersion: "1.0"
                tierVersionReleasedAt: 2020-01-01T00:00:00Z
                tierVersionReleasedByUserId: user-12345678
                tierVersionReleasedByUserName: John Doe
                tierVersionStatus: Preferred|Active|Deprecated|Pending
              schema:
                $ref: "#/components/schemas/ResourceInstance"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a inventory\
            \ summary."
      security:
      - api_key_header_Authorization: []
      summary: OneOffPatchResourceInstance inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}/remove-capacity:
    post:
      operationId: inventory-api#RemoveCapacityFromResourceInstance
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              capacityToBeRemoved: 3
              resourceId: r-12345678
            schema:
              $ref: "#/components/schemas/FleetRemoveCapacityFromResourceInstanceRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to remove capacity\
            \ from a resource instance."
      security:
      - api_key_header_Authorization: []
      summary: RemoveCapacityFromResourceInstance inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}/restart:
    post:
      operationId: inventory-api#RestartResourceInstance
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              resourceId: r-12345678
            schema:
              $ref: "#/components/schemas/FleetRestartResourceInstanceRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to restart a resource\
            \ instance."
      security:
      - api_key_header_Authorization: []
      summary: RestartResourceInstance inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}/restore:
    get:
      operationId: inventory-api#DescribeResourceInstanceSnapshotFromTime
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              targetRestoreTime: 2021-09-01T00:00:00Z
            schema:
              $ref: "#/components/schemas/FleetDescribeInstanceSnapshotFromTimeRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                completeTime: 2021-09-01T00:00:00Z
                environmentId: se-12345678
                productTierId: pt-12345678
                productTierVersion: "1.0"
                serviceId: s-12345678
                snapshotId: instance-ss-12345678
                status: completed
              schema:
                $ref: "#/components/schemas/FleetDescribeInstanceSnapshotFromTimeResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Failed to delete a resource instance snapshot"
      security:
      - api_key_header_Authorization: []
      summary: DescribeResourceInstanceSnapshotFromTime inventory-api
      tags:
      - inventory-api
    post:
      operationId: inventory-api#RestoreResourceInstance
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              network_type: PUBLIC|INTERNAL
              targetRestoreTime: 2021-09-01T00:00:00Z
            schema:
              $ref: "#/components/schemas/FleetRestoreResourceInstanceRequest2"
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                id: Iusto nemo.
              schema:
                $ref: "#/components/schemas/FleetRestoreResourceInstanceResult"
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: RestoreResourceInstance inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}/snapshot:
    get:
      operationId: inventory-api#ListResourceInstanceSnapshots
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                snapshots:
                - completeTime: 2021-09-01T00:00:00Z
                  createdTime: 2021-09-01T00:00:00Z
                  encrypted: true
                  environmentId: se-12345678
                  productTierId: pt-12345678
                  productTierVersion: "1.0"
                  progress: 99
                  serviceId: s-12345678
                  snapshotId: instance-ss-12345678
                  sourceInstanceId: instance-12345678
                  status: completed
                - completeTime: 2021-09-01T00:00:00Z
                  createdTime: 2021-09-01T00:00:00Z
                  encrypted: true
                  environmentId: se-12345678
                  productTierId: pt-12345678
                  productTierVersion: "1.0"
                  progress: 99
                  serviceId: s-12345678
                  snapshotId: instance-ss-12345678
                  sourceInstanceId: instance-12345678
                  status: completed
                - completeTime: 2021-09-01T00:00:00Z
                  createdTime: 2021-09-01T00:00:00Z
                  encrypted: true
                  environmentId: se-12345678
                  productTierId: pt-12345678
                  productTierVersion: "1.0"
                  progress: 99
                  serviceId: s-12345678
                  snapshotId: instance-ss-12345678
                  sourceInstanceId: instance-12345678
                  status: completed
              schema:
                $ref: "#/components/schemas/FleetListInstanceSnapshotResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Failed to list resource instance snapshots"
      security:
      - api_key_header_Authorization: []
      summary: ListResourceInstanceSnapshots inventory-api
      tags:
      - inventory-api
    post:
      operationId: inventory-api#CreateResourceInstanceSnapshot
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              example:
                environmentId: se-12345678
                serviceId: s-12345678
                snapshotId: instance-ss-12345678
              schema:
                $ref: "#/components/schemas/FleetCreateInstanceSnapshotResult"
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Failed to create a resource instance snapshot"
      security:
      - api_key_header_Authorization: []
      summary: CreateResourceInstanceSnapshot inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}/snapshot/{snapshotId}:
    delete:
      operationId: inventory-api#DeleteResourceInstanceSnapshot
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      - description: The instance snapshot ID
        example: instance-ss-12345678
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          description: The instance snapshot ID
          example: instance-ss-12345678
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Failed to delete a resource instance snapshot"
      security:
      - api_key_header_Authorization: []
      summary: DeleteResourceInstanceSnapshot inventory-api
      tags:
      - inventory-api
    get:
      operationId: inventory-api#DescribeResourceInstanceSnapshot
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      - description: The instance snapshot ID
        example: instance-ss-12345678
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          description: ID of a Resource Instance Snapshot
          example: Et et.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                completeTime: 2021-09-01T00:00:00Z
                createdTime: 2021-09-01T00:00:00Z
                encrypted: true
                environmentId: se-12345678
                productTierId: pt-12345678
                productTierVersion: "1.0"
                progress: 99
                serviceId: s-12345678
                snapshotId: instance-ss-12345678
                sourceInstanceId: instance-12345678
                status: completed
              schema:
                $ref: "#/components/schemas/FleetDescribeInstanceSnapshotResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Failed to describe a resource instance snapshot"
      security:
      - api_key_header_Authorization: []
      summary: DescribeResourceInstanceSnapshot inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}/start:
    post:
      operationId: inventory-api#StartResourceInstance
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              resourceId: r-12345678
            schema:
              $ref: "#/components/schemas/FleetStartResourceInstanceRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to start a resource\
            \ instance."
      security:
      - api_key_header_Authorization: []
      summary: StartResourceInstance inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instance/{instanceId}/stop:
    post:
      operationId: inventory-api#StopResourceInstance
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The resource instance ID.
        example: instance-12345678
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              resourceId: r-12345678
            schema:
              $ref: "#/components/schemas/FleetStopResourceInstanceRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to stop a resource\
            \ instance."
      security:
      - api_key_header_Authorization: []
      summary: StopResourceInstance inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/instances/:
    get:
      operationId: inventory-api#ListResourceInstances
      parameters:
      - allowEmptyValue: true
        description: "Product tier version of the instance to describe. If not specified,\
          \ the latest version is described."
        example: Qui fugiat officiis consequatur itaque ut voluptatum.
        explode: true
        in: query
        name: ProductTierVersion
        required: false
        schema:
          description: "Product tier version of the instance to describe. If not specified,\
            \ the latest version is described."
          example: Voluptatibus quibusdam qui enim labore rem.
          type: string
        style: form
      - allowEmptyValue: true
        description: Product tier id of the instance to describe. Needs to specified
          in combination with the product tier version
        example: Et iusto eos.
        explode: true
        in: query
        name: ProductTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Repellat nisi.
          type: string
        style: form
      - allowEmptyValue: true
        description: Subscription id of the instance to describe.
        example: Ab veritatis rerum quam voluptates.
        explode: true
        in: query
        name: SubscriptionId
        required: false
        schema:
          description: ID of a Subscription
          example: Ut id asperiores.
          type: string
        style: form
      - allowEmptyValue: true
        description: Filter to apply to the list of instances.
        example: onlyCloudAccounts
        explode: true
        in: query
        name: Filter
        required: false
        schema:
          description: Filter to list resources.
          enum:
          - onlyCloudAccounts
          - excludeCloudAccounts
          example: onlyCloudAccounts
          type: string
        style: form
      - allowEmptyValue: true
        description: Whether to exclude detailed information about the resource instances.
        example: true
        explode: true
        in: query
        name: ExcludeDetail
        required: false
        schema:
          default: false
          description: Whether to exclude detailed information about the resource
            instances.
          example: false
          type: boolean
        style: form
      - allowEmptyValue: true
        example: token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The next token to use for pagination
          example: token
          type: string
        style: form
      - allowEmptyValue: true
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        style: form
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                environmentId: se-12345678
                nextPageToken: next-token
                resourceInstances:
                - adopted: true
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  cloudProvider: aws
                  consumptionResourceInstanceResult:
                    active: true
                    autoscalingEnabled: true
                    awsAccountID: "123456789012"
                    azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                    backupStatus:
                      backupPeriodInHours: 2
                      backupRetentionInDays: 7
                      earliestRestoreTime: 2021-09-01T00:00:00Z
                      lastBackupTime: 2021-09-01T00:00:00Z
                    cloud_provider: aws
                    created_at: 2023-01-10T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    currentReplicas: "2"
                    customNetworkDetail:
                      cidr: 10.177.0.0/16
                      id: n-12345678
                      name: Prod us-east-1
                    detailedNetworkTopology:
                      r-abcd1234:
                        allowedIPRanges:
                        - 0.0.0.0/0
                        clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        clusterPorts:
                        - 3306
                        isJob: false
                        jobMetrics:
                        - additionalData:
                            exitCode: 0
                            status: Succeeded
                          endTime: 2023-01-01T10:05:00Z
                          metricType: cpu_core_seconds
                          startTime: 2023-01-01T10:00:00Z
                          value: 120.5
                        - additionalData:
                            peakMemoryUsage: 512MB
                          endTime: 2023-01-01T10:05:00Z
                          metricType: memory_mb_seconds
                          startTime: 2023-01-01T10:00:00Z
                          value: 2560
                        main: true
                        networkingType: PUBLIC
                        nodes:
                        - availabilityZone: us-east-2a
                          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                          healthStatus: healthy
                          id: primary-0
                          ports:
                          - 3306
                          status: RUNNING
                        privateNetworkCIDR: 10.0.0.2/24
                        privateNetworkID: n-1234abcd
                        publiclyAccessible: true
                        resourceKey: primary
                        resourceName: Primary MySQL Instance
                    externalPayerId: external-payer-id-1234
                    gcpProjectID: my-project
                    highAvailability: true
                    id: instance-abcd1234
                    instanceLoadStatus: Dolor sapiente.
                    kubernetesDashboardEndpoint:
                      dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                      deploymentCellID: hc-12345678
                    last_modified_at: 2023-01-20T00:00:00Z
                    maintenanceTasks:
                      Repudiandae tenetur.: Fugiat quas.
                      Ut excepturi ad.: Fuga exercitationem odit praesentium quos
                        non.
                    maxReplicas: "1"
                    minReplicas: "1"
                    network_type: PUBLIC|INTERNAL
                    productTierFeatures:
                      LOGS:
                        auth:
                          password: px3c4d5f6g7h8i
                          username: abcd1234
                        enabled: true
                        websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                      METRICS:
                        enabled: false
                    region: us-east-1
                    resourceID: r-abcd1234
                    result_params:
                      param1: value1
                      param2: value2
                    serverlessEnabled: true
                    status: RUNNING
                    subscriptionId: sub-abcd1234
                    subscriptionLicense:
                      certificateBase64: public-cert
                      expirationDate: 2024-01-01T10:00:00Z
                      licenseBase64: license-file
                    subscriptionStatus: ACTIVE
                    tierVersion: "1.0"
                  defaultSubscription: true
                  deploymentCellID: hc-12345678
                  environmentId: se-12345678
                  gcpProjectID: my-project
                  input_params:
                    param1: value1
                    param2: value2
                  instanceDebugCommands:
                  - aws eks update-kubeconfig --name my-cluster --region us-west-2
                  - kubectl -n instance-12345678 get pods
                  integrationsStatus:
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  maintenanceTasks:
                    Illum temporibus fuga.: Quaerat non odio et asperiores vel voluptatibus.
                    Sit quo vitae consequatur quae ullam sequi.: Autem veritatis dolores
                      molestiae et atque.
                  managedResourceType: PortsBasedProxy
                  manualOverride:
                    setAt: 2020-01-01T00:00:00Z
                    setterUserId: user-12345678
                    workflowId: wf-12345678
                  organizationId: org-12345678
                  organizationName: my-org
                  portsRegistrationStatus:
                    instance-123:
                    - 30000
                    - 30001
                    instance-456:
                    - 30002
                    - 30003
                  productTierId: pt-12345678
                  productTierName: premium
                  productTierType: OMNISTRATE_DEDICATED
                  proxyType: PortsBasedProxy
                  resourceVersionSummaries:
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  serviceEnvName: dev
                  serviceId: s-12345678
                  serviceLogoURL: Minima quia rerum sed eos.
                  serviceModelId: sm-12345678
                  serviceModelName: hosted
                  serviceModelType: OMNISTRATE_HOSTED
                  serviceName: mysql
                  subscriptionId: sub-12345678
                  subscriptionOwnerName: John Doe
                  subscriptionStatus: ACTIVE
                  tierVersion: "1.0"
                  tierVersionReleasedAt: 2020-01-01T00:00:00Z
                  tierVersionReleasedByUserId: user-12345678
                  tierVersionReleasedByUserName: John Doe
                  tierVersionStatus: Preferred|Active|Deprecated|Pending
                - adopted: true
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  cloudProvider: aws
                  consumptionResourceInstanceResult:
                    active: true
                    autoscalingEnabled: true
                    awsAccountID: "123456789012"
                    azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                    backupStatus:
                      backupPeriodInHours: 2
                      backupRetentionInDays: 7
                      earliestRestoreTime: 2021-09-01T00:00:00Z
                      lastBackupTime: 2021-09-01T00:00:00Z
                    cloud_provider: aws
                    created_at: 2023-01-10T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    currentReplicas: "2"
                    customNetworkDetail:
                      cidr: 10.177.0.0/16
                      id: n-12345678
                      name: Prod us-east-1
                    detailedNetworkTopology:
                      r-abcd1234:
                        allowedIPRanges:
                        - 0.0.0.0/0
                        clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        clusterPorts:
                        - 3306
                        isJob: false
                        jobMetrics:
                        - additionalData:
                            exitCode: 0
                            status: Succeeded
                          endTime: 2023-01-01T10:05:00Z
                          metricType: cpu_core_seconds
                          startTime: 2023-01-01T10:00:00Z
                          value: 120.5
                        - additionalData:
                            peakMemoryUsage: 512MB
                          endTime: 2023-01-01T10:05:00Z
                          metricType: memory_mb_seconds
                          startTime: 2023-01-01T10:00:00Z
                          value: 2560
                        main: true
                        networkingType: PUBLIC
                        nodes:
                        - availabilityZone: us-east-2a
                          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                          healthStatus: healthy
                          id: primary-0
                          ports:
                          - 3306
                          status: RUNNING
                        privateNetworkCIDR: 10.0.0.2/24
                        privateNetworkID: n-1234abcd
                        publiclyAccessible: true
                        resourceKey: primary
                        resourceName: Primary MySQL Instance
                    externalPayerId: external-payer-id-1234
                    gcpProjectID: my-project
                    highAvailability: true
                    id: instance-abcd1234
                    instanceLoadStatus: Dolor sapiente.
                    kubernetesDashboardEndpoint:
                      dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                      deploymentCellID: hc-12345678
                    last_modified_at: 2023-01-20T00:00:00Z
                    maintenanceTasks:
                      Repudiandae tenetur.: Fugiat quas.
                      Ut excepturi ad.: Fuga exercitationem odit praesentium quos
                        non.
                    maxReplicas: "1"
                    minReplicas: "1"
                    network_type: PUBLIC|INTERNAL
                    productTierFeatures:
                      LOGS:
                        auth:
                          password: px3c4d5f6g7h8i
                          username: abcd1234
                        enabled: true
                        websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                      METRICS:
                        enabled: false
                    region: us-east-1
                    resourceID: r-abcd1234
                    result_params:
                      param1: value1
                      param2: value2
                    serverlessEnabled: true
                    status: RUNNING
                    subscriptionId: sub-abcd1234
                    subscriptionLicense:
                      certificateBase64: public-cert
                      expirationDate: 2024-01-01T10:00:00Z
                      licenseBase64: license-file
                    subscriptionStatus: ACTIVE
                    tierVersion: "1.0"
                  defaultSubscription: true
                  deploymentCellID: hc-12345678
                  environmentId: se-12345678
                  gcpProjectID: my-project
                  input_params:
                    param1: value1
                    param2: value2
                  instanceDebugCommands:
                  - aws eks update-kubeconfig --name my-cluster --region us-west-2
                  - kubectl -n instance-12345678 get pods
                  integrationsStatus:
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  maintenanceTasks:
                    Illum temporibus fuga.: Quaerat non odio et asperiores vel voluptatibus.
                    Sit quo vitae consequatur quae ullam sequi.: Autem veritatis dolores
                      molestiae et atque.
                  managedResourceType: PortsBasedProxy
                  manualOverride:
                    setAt: 2020-01-01T00:00:00Z
                    setterUserId: user-12345678
                    workflowId: wf-12345678
                  organizationId: org-12345678
                  organizationName: my-org
                  portsRegistrationStatus:
                    instance-123:
                    - 30000
                    - 30001
                    instance-456:
                    - 30002
                    - 30003
                  productTierId: pt-12345678
                  productTierName: premium
                  productTierType: OMNISTRATE_DEDICATED
                  proxyType: PortsBasedProxy
                  resourceVersionSummaries:
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  serviceEnvName: dev
                  serviceId: s-12345678
                  serviceLogoURL: Minima quia rerum sed eos.
                  serviceModelId: sm-12345678
                  serviceModelName: hosted
                  serviceModelType: OMNISTRATE_HOSTED
                  serviceName: mysql
                  subscriptionId: sub-12345678
                  subscriptionOwnerName: John Doe
                  subscriptionStatus: ACTIVE
                  tierVersion: "1.0"
                  tierVersionReleasedAt: 2020-01-01T00:00:00Z
                  tierVersionReleasedByUserId: user-12345678
                  tierVersionReleasedByUserName: John Doe
                  tierVersionStatus: Preferred|Active|Deprecated|Pending
                - adopted: true
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  cloudProvider: aws
                  consumptionResourceInstanceResult:
                    active: true
                    autoscalingEnabled: true
                    awsAccountID: "123456789012"
                    azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                    backupStatus:
                      backupPeriodInHours: 2
                      backupRetentionInDays: 7
                      earliestRestoreTime: 2021-09-01T00:00:00Z
                      lastBackupTime: 2021-09-01T00:00:00Z
                    cloud_provider: aws
                    created_at: 2023-01-10T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    currentReplicas: "2"
                    customNetworkDetail:
                      cidr: 10.177.0.0/16
                      id: n-12345678
                      name: Prod us-east-1
                    detailedNetworkTopology:
                      r-abcd1234:
                        allowedIPRanges:
                        - 0.0.0.0/0
                        clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                        clusterPorts:
                        - 3306
                        isJob: false
                        jobMetrics:
                        - additionalData:
                            exitCode: 0
                            status: Succeeded
                          endTime: 2023-01-01T10:05:00Z
                          metricType: cpu_core_seconds
                          startTime: 2023-01-01T10:00:00Z
                          value: 120.5
                        - additionalData:
                            peakMemoryUsage: 512MB
                          endTime: 2023-01-01T10:05:00Z
                          metricType: memory_mb_seconds
                          startTime: 2023-01-01T10:00:00Z
                          value: 2560
                        main: true
                        networkingType: PUBLIC
                        nodes:
                        - availabilityZone: us-east-2a
                          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                          healthStatus: healthy
                          id: primary-0
                          ports:
                          - 3306
                          status: RUNNING
                        privateNetworkCIDR: 10.0.0.2/24
                        privateNetworkID: n-1234abcd
                        publiclyAccessible: true
                        resourceKey: primary
                        resourceName: Primary MySQL Instance
                    externalPayerId: external-payer-id-1234
                    gcpProjectID: my-project
                    highAvailability: true
                    id: instance-abcd1234
                    instanceLoadStatus: Dolor sapiente.
                    kubernetesDashboardEndpoint:
                      dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                      deploymentCellID: hc-12345678
                    last_modified_at: 2023-01-20T00:00:00Z
                    maintenanceTasks:
                      Repudiandae tenetur.: Fugiat quas.
                      Ut excepturi ad.: Fuga exercitationem odit praesentium quos
                        non.
                    maxReplicas: "1"
                    minReplicas: "1"
                    network_type: PUBLIC|INTERNAL
                    productTierFeatures:
                      LOGS:
                        auth:
                          password: px3c4d5f6g7h8i
                          username: abcd1234
                        enabled: true
                        websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                      METRICS:
                        enabled: false
                    region: us-east-1
                    resourceID: r-abcd1234
                    result_params:
                      param1: value1
                      param2: value2
                    serverlessEnabled: true
                    status: RUNNING
                    subscriptionId: sub-abcd1234
                    subscriptionLicense:
                      certificateBase64: public-cert
                      expirationDate: 2024-01-01T10:00:00Z
                      licenseBase64: license-file
                    subscriptionStatus: ACTIVE
                    tierVersion: "1.0"
                  defaultSubscription: true
                  deploymentCellID: hc-12345678
                  environmentId: se-12345678
                  gcpProjectID: my-project
                  input_params:
                    param1: value1
                    param2: value2
                  instanceDebugCommands:
                  - aws eks update-kubeconfig --name my-cluster --region us-west-2
                  - kubectl -n instance-12345678 get pods
                  integrationsStatus:
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
                    configuration:
                      provider: native
                    healthStatus: UNHEALTHY
                    integrationType: LOGS
                    message: missing exporter secret configuration for gcp
                    scope: INTERNAL
                  maintenanceTasks:
                    Illum temporibus fuga.: Quaerat non odio et asperiores vel voluptatibus.
                    Sit quo vitae consequatur quae ullam sequi.: Autem veritatis dolores
                      molestiae et atque.
                  managedResourceType: PortsBasedProxy
                  manualOverride:
                    setAt: 2020-01-01T00:00:00Z
                    setterUserId: user-12345678
                    workflowId: wf-12345678
                  organizationId: org-12345678
                  organizationName: my-org
                  portsRegistrationStatus:
                    instance-123:
                    - 30000
                    - 30001
                    instance-456:
                    - 30002
                    - 30003
                  productTierId: pt-12345678
                  productTierName: premium
                  productTierType: OMNISTRATE_DEDICATED
                  proxyType: PortsBasedProxy
                  resourceVersionSummaries:
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  - capabilities:
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    - capability: SERVERLESS
                      configuration:
                        EnableAutoStop: true
                        MinimumNodesInPool: 5
                        PortsMappingProxyConfig:
                          MaxNumberOfClustersPerProxyInstance: 50
                          NumberOfPortsPerCluster: 4
                        ProxyId: r-123456
                        ReferenceProxyKey: resource-proxy
                        TargetPort: 5432
                    externalResource: true
                    genericResourceDeploymentConfiguration:
                      image: nginx:latest
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                      podStatus:
                        pod1: Running
                        pod2: Pending
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                    helmDeploymentConfiguration:
                      chartName: nginx
                      chartVersion: 1.2.3
                      podEvents:
                        pod1:
                        - FirstTimestamp: 2025-10-01T12:00:00Z
                          LastTimestamp: 2025-10-01T12:05:00Z
                          Message: Pod scheduled successfully
                          NumberOfOccurrences: 3
                          Reason: Scheduled
                        pod2:
                        - FirstTimestamp: 2025-10-01T12:06:00Z
                          LastTimestamp: 2025-10-01T12:06:00Z
                          Message: Insufficient resources
                          NumberOfOccurrences: 1
                          Reason: FailedScheduling
                      podStatus:
                        pod1: Running
                        pod2: Pending
                        pod3: Failed
                      podToHostMapping:
                        pod1: node1
                        pod2: node2
                        pod3: node1
                      releaseName: my-nginx-release
                      releaseNamespace: default
                      releaseStatus: deployed
                      repositoryURL: https://charts.example.com
                      runtimeConfiguration:
                        namespace: default
                        timeout: 300s
                        waitForJobs: true
                        waitForJobsTimeout: 10m
                      values:
                        mysql:
                          image:
                            repository: mysql
                            tag: "8.0"
                          replicaCount: 3
                          service:
                            type: LoadBalancer
                    kustomizeDeploymentConfiguration:
                      BasePath: /path/to/kustomization
                      DeploymentErrors: Failed to apply Kustomize overlays
                      Overlays:
                        overlay1: /path/to/overlay1
                        overlay2: /path/to/overlay2
                    latestVersion: "2.0"
                    resourceId: r-12345678
                    resourceName: asserts-server
                    terraformDeploymentConfiguration:
                      configurationFiles:
                        main.tf: "resource \"aws_instance\" \"example\" { ... }"
                        variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                          \ }"
                      deploymentErrors: Failed to initialize Terraform provider
                    version: "1.0"
                  serviceEnvName: dev
                  serviceId: s-12345678
                  serviceLogoURL: Minima quia rerum sed eos.
                  serviceModelId: sm-12345678
                  serviceModelName: hosted
                  serviceModelType: OMNISTRATE_HOSTED
                  serviceName: mysql
                  subscriptionId: sub-12345678
                  subscriptionOwnerName: John Doe
                  subscriptionStatus: ACTIVE
                  tierVersion: "1.0"
                  tierVersionReleasedAt: 2020-01-01T00:00:00Z
                  tierVersionReleasedByUserId: user-12345678
                  tierVersionReleasedByUserName: John Doe
                  tierVersionStatus: Preferred|Active|Deprecated|Pending
                serviceId: s-12345678
              schema:
                $ref: "#/components/schemas/ListFleetResourceInstancesResultInternal"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a inventory\
            \ summary."
      security:
      - api_key_header_Authorization: []
      summary: ListResourceInstances inventory-api
      tags:
      - inventory-api
  ? /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/model/{serviceModelId}/productTier/{productTierId}/resource/{resourceId}
  : get:
      operationId: inventory-api#DescribeResource
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The service model ID.
        example: sm-12345678
        explode: false
        in: path
        name: serviceModelId
        required: true
        schema:
          description: ID of a Service Model
          example: Corrupti ad.
          type: string
        style: simple
      - description: The product tier ID.
        example: pt-12345678
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Omnis et et ullam ut ea.
          type: string
        style: simple
      - description: The resource ID.
        example: r-12345678
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          description: ID of a resource
          example: Sapiente voluptatem animi deserunt molestias.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                environmentId: se-12345678
                instanceCount: 2
                name: asserts-server
                perVersionInstanceCount:
                  "1.0": 2
                  "1.1": 2
                  "2.0": 2
                productTierType: OMNISTRATE_DEDICATED
                proxyType: PortsBasedProxy
                resourceId: r-12345678
                serviceId: s-12345678
                serviceModelType: OMNISTRATE_HOSTED
                version: "2.0"
                versionHistory:
                - "1.0"
                - "1.1"
                - "2.0"
              schema:
                $ref: "#/components/schemas/Resource"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a inventory\
            \ summary."
      security:
      - api_key_header_Authorization: []
      summary: DescribeResource inventory-api
      tags:
      - inventory-api
  ? /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/model/{serviceModelId}/productTier/{productTierId}/resources
  : get:
      operationId: inventory-api#ListResources
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The service model ID.
        example: sm-12345678
        explode: false
        in: path
        name: serviceModelId
        required: true
        schema:
          description: ID of a Service Model
          example: Reprehenderit impedit.
          type: string
        style: simple
      - description: The product tier ID.
        example: pt-12345678
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Ut et omnis.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              environmentType: PROD
              nextPageToken: next-token
              orgId: org-12345678
              pageSize: 10
              userId: user-12345678
            schema:
              $ref: "#/components/schemas/ListResourcesRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                environmentId: se-12345678
                nextPageToken: next-token
                resources:
                - environmentId: se-12345678
                  instanceCount: 2
                  name: asserts-server
                  perVersionInstanceCount:
                    "1.0": 2
                    "1.1": 2
                    "2.0": 2
                  productTierType: OMNISTRATE_DEDICATED
                  proxyType: PortsBasedProxy
                  resourceId: r-12345678
                  serviceId: s-12345678
                  serviceModelType: OMNISTRATE_HOSTED
                  version: "2.0"
                  versionHistory:
                  - "1.0"
                  - "1.1"
                  - "2.0"
                - environmentId: se-12345678
                  instanceCount: 2
                  name: asserts-server
                  perVersionInstanceCount:
                    "1.0": 2
                    "1.1": 2
                    "2.0": 2
                  productTierType: OMNISTRATE_DEDICATED
                  proxyType: PortsBasedProxy
                  resourceId: r-12345678
                  serviceId: s-12345678
                  serviceModelType: OMNISTRATE_HOSTED
                  version: "2.0"
                  versionHistory:
                  - "1.0"
                  - "1.1"
                  - "2.0"
                serviceId: s-12345678
              schema:
                $ref: "#/components/schemas/ListResourcesResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a inventory\
            \ summary."
      security:
      - api_key_header_Authorization: []
      summary: ListResources inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/organization/{organizationId}:
    get:
      operationId: inventory-api#DescribeOrganization
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The organization ID.
        example: o-12345678
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          description: ID of an Org
          example: A enim maxime adipisci consectetur est.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                email: omnistrate-devops@examplecorp.com
                orgId: o-12345678
                orgName: Acme Corp
                orgUrl: omnistrate.com
              schema:
                $ref: "#/components/schemas/Organization"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe the inventory\
            \ for organization."
      security:
      - api_key_header_Authorization: []
      summary: DescribeOrganization inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/organizations:
    get:
      operationId: inventory-api#ListActiveOrganizations
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                environmentId: se-12345678
                nextPageToken: next-token
                organizations:
                - email: omnistrate-devops@examplecorp.com
                  orgId: o-12345678
                  orgName: Acme Corp
                  orgUrl: omnistrate.com
                - email: omnistrate-devops@examplecorp.com
                  orgId: o-12345678
                  orgName: Acme Corp
                  orgUrl: omnistrate.com
                - email: omnistrate-devops@examplecorp.com
                  orgId: o-12345678
                  orgName: Acme Corp
                  orgUrl: omnistrate.com
                - email: omnistrate-devops@examplecorp.com
                  orgId: o-12345678
                  orgName: Acme Corp
                  orgUrl: omnistrate.com
                serviceId: s-12345678
              schema:
                $ref: "#/components/schemas/ListOrganizationsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a inventory\
            \ summary."
      security:
      - api_key_header_Authorization: []
      summary: ListActiveOrganizations inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/search-inventory:
    post:
      operationId: inventory-api#SearchServiceInventory
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              query: foo
            schema:
              $ref: "#/components/schemas/SearchServiceInventoryRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                results:
                - description: The PostgresDB for Omnistrate.
                  id: r-12345678
                  name: postgres
                  status: Ready
                  statusDescription: The PostgresDB for Omnistrate is ready.
                serviceId: s-12345678
              schema:
                $ref: "#/components/schemas/SearchServiceInventoryResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a inventory\
            \ summary."
      security:
      - api_key_header_Authorization: []
      summary: SearchServiceInventory inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/service-inventory-summary:
    get:
      operationId: inventory-api#DescribeInventorySummary
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                EnvironmentCount: 1
                ImagesCount: 1
                InfraConfigCount: 1
                InstancesCount: 1
                OrganizationCount: 1
                ResourceCount: 1
                UserCount: 1
                environmentId: se-12345678
                serviceId: s-12345678
              schema:
                $ref: "#/components/schemas/DescribeInventorySummaryResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a inventory\
            \ summary."
      security:
      - api_key_header_Authorization: []
      summary: DescribeInventorySummary inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/service-workflows:
    get:
      operationId: fleet-workflows-api#ListServiceWorkflows
      parameters:
      - allowEmptyValue: true
        example: token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The next token to use for pagination
          example: token
          type: string
        style: form
      - allowEmptyValue: true
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        style: form
      - allowEmptyValue: true
        description: The instance ID of the workflow
        example: instance-12345678
        explode: true
        in: query
        name: instanceId
        required: false
        schema:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        style: form
      - allowEmptyValue: true
        description: Start date of the workflows
        example: 2023-01-01T10:00:00Z
        explode: true
        in: query
        name: startDate
        required: false
        schema:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - allowEmptyValue: true
        description: End date of the workflows
        example: 2024-01-01T10:00:00Z
        explode: true
        in: query
        name: endDate
        required: false
        schema:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        style: form
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                environmentId: se-12345678
                nextPageToken: Cum expedita soluta fugit.
                serviceId: s-12345678
                workflows:
                - ResourceCount: 8828892867202845189
                  UpdatedBy: Anonymous
                  UpdatedReason: Customer requested termination.
                  WorkflowType: Service deployment.
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  cloudProvider: aws
                  endTime: 2020-01-01T00:01:00Z
                  gcpProjectID: my-project
                  id: submit-create-instance-plan-instance-50h74sj46
                  manualOverride:
                    setAt: 2020-01-01T00:00:00Z
                    setterUserId: user-12345678
                    workflowId: wf-12345678
                  orgName: my-org
                  parentId: Est sit vitae.
                  planType: my-plan
                  servicePlanName: my-product-tier-plan
                  startTime: 2020-01-01T00:00:00Z
                  status: IN_PROGRESS
                - ResourceCount: 8828892867202845189
                  UpdatedBy: Anonymous
                  UpdatedReason: Customer requested termination.
                  WorkflowType: Service deployment.
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  cloudProvider: aws
                  endTime: 2020-01-01T00:01:00Z
                  gcpProjectID: my-project
                  id: submit-create-instance-plan-instance-50h74sj46
                  manualOverride:
                    setAt: 2020-01-01T00:00:00Z
                    setterUserId: user-12345678
                    workflowId: wf-12345678
                  orgName: my-org
                  parentId: Est sit vitae.
                  planType: my-plan
                  servicePlanName: my-product-tier-plan
                  startTime: 2020-01-01T00:00:00Z
                  status: IN_PROGRESS
                - ResourceCount: 8828892867202845189
                  UpdatedBy: Anonymous
                  UpdatedReason: Customer requested termination.
                  WorkflowType: Service deployment.
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  cloudProvider: aws
                  endTime: 2020-01-01T00:01:00Z
                  gcpProjectID: my-project
                  id: submit-create-instance-plan-instance-50h74sj46
                  manualOverride:
                    setAt: 2020-01-01T00:00:00Z
                    setterUserId: user-12345678
                    workflowId: wf-12345678
                  orgName: my-org
                  parentId: Est sit vitae.
                  planType: my-plan
                  servicePlanName: my-product-tier-plan
                  startTime: 2020-01-01T00:00:00Z
                  status: IN_PROGRESS
                - ResourceCount: 8828892867202845189
                  UpdatedBy: Anonymous
                  UpdatedReason: Customer requested termination.
                  WorkflowType: Service deployment.
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  cloudProvider: aws
                  endTime: 2020-01-01T00:01:00Z
                  gcpProjectID: my-project
                  id: submit-create-instance-plan-instance-50h74sj46
                  manualOverride:
                    setAt: 2020-01-01T00:00:00Z
                    setterUserId: user-12345678
                    workflowId: wf-12345678
                  orgName: my-org
                  parentId: Est sit vitae.
                  planType: my-plan
                  servicePlanName: my-product-tier-plan
                  startTime: 2020-01-01T00:00:00Z
                  status: IN_PROGRESS
              schema:
                $ref: "#/components/schemas/ListServiceWorkflowsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list workflows."
      security:
      - api_key_header_Authorization: []
      summary: ListServiceWorkflows fleet-workflows-api
      tags:
      - fleet-workflows-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/service-workflows-summary:
    get:
      operationId: fleet-workflows-api#DescribeServiceWorkflowSummary
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ActiveWorkflowCount: 3086519174243521743
                CompletedWorkflowCount: 7332839425503143898
                FailedWorkflowCount: 1264030380730299976
                environmentId: se-12345678
                serviceId: s-12345678
              schema:
                $ref: "#/components/schemas/DescribeServiceWorkflowSummaryResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a workflow\
            \ summary."
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceWorkflowSummary fleet-workflows-api
      tags:
      - fleet-workflows-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/service-workflows/{id}:
    delete:
      operationId: fleet-workflows-api#TerminateServiceWorkflow
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: ID of the ServiceWorkflow
        example: submit-create-instance-plan-instance-50h74sj46
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of the ServiceWorkflow
          example: submit-create-instance-plan-instance-50h74sj46
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ResourceCount: 1614323562474660875
                UpdatedBy: Anonymous
                UpdatedReason: Customer requested termination.
                WorkflowType: Service deployment.
                awsAccountID: "123456789012"
                azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                cloudProvider: aws
                endTime: 2020-01-01T00:01:00Z
                gcpProjectID: my-project
                id: submit-create-instance-plan-instance-50h74sj46
                manualOverride:
                  setAt: 2020-01-01T00:00:00Z
                  setterUserId: user-12345678
                  workflowId: wf-12345678
                orgName: my-org
                parentId: Et eum repudiandae reprehenderit.
                planType: my-plan
                servicePlanName: my-product-tier-plan
                startTime: 2020-01-01T00:00:00Z
                status: IN_PROGRESS
              schema:
                $ref: "#/components/schemas/ServiceWorkflow"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to terminate a service-workflow."
      security:
      - api_key_header_Authorization: []
      summary: TerminateServiceWorkflow fleet-workflows-api
      tags:
      - fleet-workflows-api
    get:
      operationId: fleet-workflows-api#DescribeServiceWorkflow
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: ID of the ServiceWorkflow
        example: submit-create-instance-plan-instance-50h74sj46
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of the ServiceWorkflow
          example: submit-create-instance-plan-instance-50h74sj46
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Resources:
                - actionHookDeploymentStatus: IN_PROGRESS
                  computeDeploymentStatus: IN_PROGRESS
                  configurationStatus: IN_PROGRESS
                  infraDeploymentStatus: IN_PROGRESS
                  monitoringStatus: IN_PROGRESS
                  networkDeploymentStatus: IN_PROGRESS
                  resourceName: Galera
                  status: IN_PROGRESS
                  storageDeploymentStatus: IN_PROGRESS
                - actionHookDeploymentStatus: IN_PROGRESS
                  computeDeploymentStatus: IN_PROGRESS
                  configurationStatus: IN_PROGRESS
                  infraDeploymentStatus: IN_PROGRESS
                  monitoringStatus: IN_PROGRESS
                  networkDeploymentStatus: IN_PROGRESS
                  resourceName: Galera
                  status: IN_PROGRESS
                  storageDeploymentStatus: IN_PROGRESS
                Workflow:
                  ResourceCount: 8828892867202845189
                  UpdatedBy: Anonymous
                  UpdatedReason: Customer requested termination.
                  WorkflowType: Service deployment.
                  awsAccountID: "123456789012"
                  azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                  cloudProvider: aws
                  endTime: 2020-01-01T00:01:00Z
                  gcpProjectID: my-project
                  id: submit-create-instance-plan-instance-50h74sj46
                  manualOverride:
                    setAt: 2020-01-01T00:00:00Z
                    setterUserId: user-12345678
                    workflowId: wf-12345678
                  orgName: my-org
                  parentId: Est sit vitae.
                  planType: my-plan
                  servicePlanName: my-product-tier-plan
                  startTime: 2020-01-01T00:00:00Z
                  status: IN_PROGRESS
                environmentId: se-12345678
                serviceId: s-12345678
              schema:
                $ref: "#/components/schemas/DescribeServiceWorkflowResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a workflow."
      security:
      - api_key_header_Authorization: []
      summary: DescribeServiceWorkflow fleet-workflows-api
      tags:
      - fleet-workflows-api
    patch:
      operationId: fleet-workflows-api#UpdateServiceWorkflow
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: ID of the ServiceWorkflow
        example: submit-create-instance-plan-instance-50h74sj46
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of the ServiceWorkflow
          example: submit-create-instance-plan-instance-50h74sj46
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              status: Pause
            schema:
              $ref: "#/components/schemas/UpdateServiceWorkflowRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                ResourceCount: 1515323514473653248
                UpdatedBy: Anonymous
                UpdatedReason: Customer requested termination.
                WorkflowType: Service deployment.
                awsAccountID: "123456789012"
                azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
                cloudProvider: aws
                endTime: 2020-01-01T00:01:00Z
                gcpProjectID: my-project
                id: submit-create-instance-plan-instance-50h74sj46
                manualOverride:
                  setAt: 2020-01-01T00:00:00Z
                  setterUserId: user-12345678
                  workflowId: wf-12345678
                orgName: my-org
                parentId: Et voluptatem et ab ut.
                planType: my-plan
                servicePlanName: my-product-tier-plan
                startTime: 2020-01-01T00:00:00Z
                status: IN_PROGRESS
              schema:
                $ref: "#/components/schemas/ServiceWorkflow"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to modify a workflow."
      security:
      - api_key_header_Authorization: []
      summary: UpdateServiceWorkflow fleet-workflows-api
      tags:
      - fleet-workflows-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/service-workflows/{id}/events:
    get:
      operationId: fleet-workflows-api#GetWorkflowEvents
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: ID of the ServiceWorkflow
        example: submit-create-instance-plan-instance-50h74sj46
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of the ServiceWorkflow
          example: submit-create-instance-plan-instance-50h74sj46
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                environmentId: se-12345678
                id: submit-create-instance-plan-instance-50h74sj46
                resources:
                - resourceId: r-12345678
                  resourceKey: db
                  resourceName: Galera
                  workflowSteps:
                  - events:
                    - eventTime: 2020-01-01T00:00:00Z
                      eventType: WorkflowStepStarted
                      message: Bootstrap started
                    - eventTime: 2020-01-01T00:01:00Z
                      eventType: WorkflowStepCompleted
                      message: Bootstrap completed
                    stepName: Bootstrap
                  - events:
                    - eventTime: 2020-01-01T00:02:00Z
                      eventType: WorkflowStepStarted
                      message: Compute deployment started
                    - eventTime: 2020-01-01T00:03:00Z
                      eventType: WorkflowStepCompleted
                      message: Compute deployment completed
                    stepName: Compute
                  - events:
                    - eventTime: 2020-01-01T00:04:00Z
                      eventType: WorkflowStepStarted
                      message: Network deployment started
                    - eventTime: 2020-01-01T00:05:00Z
                      eventType: WorkflowStepFailed
                      message: Details of the failure
                    stepName: Network
                serviceId: s-12345678
              schema:
                $ref: "#/components/schemas/GetWorkflowEventsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to get events."
      security:
      - api_key_header_Authorization: []
      summary: GetWorkflowEvents fleet-workflows-api
      tags:
      - fleet-workflows-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/snapshot/{snapshotId}/restore:
    post:
      operationId: inventory-api#RestoreResourceInstanceFromSnapshot
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The snapshot ID
        example: instance-ss-12345678
        explode: false
        in: path
        name: snapshotId
        required: true
        schema:
          description: ID of a Resource Instance Snapshot
          example: Qui eaque dolore quas sequi quasi.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              inputParametersOverride:
                param1: value1
                param2: value2
              network_type: PUBLIC|INTERNAL
              productTierVersionOverride: "1.0"
            schema:
              $ref: "#/components/schemas/FleetRestoreResourceInstanceFromSnapshotRequest2"
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                id: Atque eaque non eos natus laborum beatae.
              schema:
                $ref: "#/components/schemas/FleetRestoreResourceInstanceResult"
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: RestoreResourceInstanceFromSnapshot inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/subscription:
    get:
      operationId: inventory-api#ListSubscription
      parameters:
      - allowEmptyValue: true
        description: The product tier Id
        example: pt-12345678
        explode: true
        in: query
        name: productTierId
        required: false
        schema:
          description: ID of a Product Tier
          example: Eum vitae aliquam corporis odio ad placeat.
          type: string
        style: form
      - allowEmptyValue: true
        example: token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The next token to use for pagination
          example: token
          type: string
        style: form
      - allowEmptyValue: true
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        style: form
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - sub-12345678
                - sub-abcdefgh
                - sub-1234efgh
                nextPageToken: Molestias iusto et.
                subscriptions:
                - allowCreatesWhenPaymentNotConfigured: true
                  billingProvider: Stripe | GovPay
                  createdAt: 2019-01-01T00:00:00Z
                  currentActivePricePerUnit:
                    CPU core hours:
                      amount: 0.001
                      currency: USD
                    Memory GiB hours:
                      amount: 1.0E-4
                      currency: USD
                    Storage GiB hours:
                      amount: 1.0E-4
                      currency: USD
                  customPrice: true
                  externalPayerId: a3df-sdf9-gfn3-4g3f
                  id: sub-12345678
                  instanceCount: 3
                  maxNumberOfInstances: 10
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  rootUserEmail: abc@gmail.com
                  rootUserId: user-12345678
                  rootUserName: John Doe
                  rootUserOrgId: org-12345678
                  scheduledSubscriptionPricingList:
                  - createdAt: 2019-01-03T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    customPrice: false
                    endDate: 2019-02-01T00:00:00Z
                    isActiveBillingPrice: true
                    pricePerUnit:
                      CPU core hours:
                        amount: 0.001
                        currency: USD
                      Memory GiB hours:
                        amount: 1.0E-4
                        currency: USD
                      Storage GiB hours:
                        amount: 1.0E-4
                        currency: USD
                    startDate: 2019-01-01T00:00:00Z
                  - createdAt: 2019-01-04T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    customPrice: true
                    endDate: null
                    isActiveBillingPrice: true
                    pricePerUnit:
                      CPU core hours:
                        amount: 0.01
                        currency: USD
                      Memory GiB hours:
                        amount: 0.001
                        currency: USD
                      Storage GiB hours:
                        amount: 0.001
                        currency: USD
                    startDate: 2019-02-01T00:00:00Z
                  serviceId: s-12345678
                  serviceLogoURL: Nisi suscipit numquam.
                  serviceName: MySQL multi-writer service
                  status: ACTIVE
                  subscriptionPricingAuditLogs:
                  - createdAt: 2019-01-04T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    customPrice: true
                    endDate: 2019-02-01T00:00:00Z
                    isActiveBillingPrice: false
                    pricePerUnit:
                      CPU core hours:
                        amount: 0.02
                        currency: USD
                      Memory GiB hours:
                        amount: 0.002
                        currency: USD
                      Storage GiB hours:
                        amount: 0.002
                        currency: USD
                    startDate: 2019-01-01T00:00:00Z
                  - createdAt: 2019-01-04T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    customPrice: true
                    endDate: 2019-02-01T00:00:00Z
                    isActiveBillingPrice: true
                    pricePerUnit:
                      CPU core hours:
                        amount: 0.01
                        currency: USD
                      Memory GiB hours:
                        amount: 0.001
                        currency: USD
                      Storage GiB hours:
                        amount: 0.001
                        currency: USD
                    startDate: 2019-01-01T00:00:00Z
                  - createdAt: 2019-01-05T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    customPrice: true
                    endDate: null
                    isActiveBillingPrice: true
                    pricePerUnit:
                      CPU core hours:
                        amount: 0.01
                        currency: USD
                      Memory GiB hours:
                        amount: 0.001
                        currency: USD
                      Storage GiB hours:
                        amount: 0.001
                        currency: USD
                    startDate: 2019-02-01T00:00:00Z
                  updatedAt: 2019-01-01T00:00:00Z
                  updatedByUserId: user-12345678
                  updatedByUserName: John Doe
                  updatedByUserOrgId: org-12345678
                - allowCreatesWhenPaymentNotConfigured: true
                  billingProvider: Stripe | GovPay
                  createdAt: 2019-01-01T00:00:00Z
                  currentActivePricePerUnit:
                    CPU core hours:
                      amount: 0.001
                      currency: USD
                    Memory GiB hours:
                      amount: 1.0E-4
                      currency: USD
                    Storage GiB hours:
                      amount: 1.0E-4
                      currency: USD
                  customPrice: true
                  externalPayerId: a3df-sdf9-gfn3-4g3f
                  id: sub-12345678
                  instanceCount: 3
                  maxNumberOfInstances: 10
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  rootUserEmail: abc@gmail.com
                  rootUserId: user-12345678
                  rootUserName: John Doe
                  rootUserOrgId: org-12345678
                  scheduledSubscriptionPricingList:
                  - createdAt: 2019-01-03T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    customPrice: false
                    endDate: 2019-02-01T00:00:00Z
                    isActiveBillingPrice: true
                    pricePerUnit:
                      CPU core hours:
                        amount: 0.001
                        currency: USD
                      Memory GiB hours:
                        amount: 1.0E-4
                        currency: USD
                      Storage GiB hours:
                        amount: 1.0E-4
                        currency: USD
                    startDate: 2019-01-01T00:00:00Z
                  - createdAt: 2019-01-04T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    customPrice: true
                    endDate: null
                    isActiveBillingPrice: true
                    pricePerUnit:
                      CPU core hours:
                        amount: 0.01
                        currency: USD
                      Memory GiB hours:
                        amount: 0.001
                        currency: USD
                      Storage GiB hours:
                        amount: 0.001
                        currency: USD
                    startDate: 2019-02-01T00:00:00Z
                  serviceId: s-12345678
                  serviceLogoURL: Nisi suscipit numquam.
                  serviceName: MySQL multi-writer service
                  status: ACTIVE
                  subscriptionPricingAuditLogs:
                  - createdAt: 2019-01-04T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    customPrice: true
                    endDate: 2019-02-01T00:00:00Z
                    isActiveBillingPrice: false
                    pricePerUnit:
                      CPU core hours:
                        amount: 0.02
                        currency: USD
                      Memory GiB hours:
                        amount: 0.002
                        currency: USD
                      Storage GiB hours:
                        amount: 0.002
                        currency: USD
                    startDate: 2019-01-01T00:00:00Z
                  - createdAt: 2019-01-04T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    customPrice: true
                    endDate: 2019-02-01T00:00:00Z
                    isActiveBillingPrice: true
                    pricePerUnit:
                      CPU core hours:
                        amount: 0.01
                        currency: USD
                      Memory GiB hours:
                        amount: 0.001
                        currency: USD
                      Storage GiB hours:
                        amount: 0.001
                        currency: USD
                    startDate: 2019-01-01T00:00:00Z
                  - createdAt: 2019-01-05T00:00:00Z
                    createdByUserId: user-12345678
                    createdByUserName: John Doe
                    customPrice: true
                    endDate: null
                    isActiveBillingPrice: true
                    pricePerUnit:
                      CPU core hours:
                        amount: 0.01
                        currency: USD
                      Memory GiB hours:
                        amount: 0.001
                        currency: USD
                      Storage GiB hours:
                        amount: 0.001
                        currency: USD
                    startDate: 2019-02-01T00:00:00Z
                  updatedAt: 2019-01-01T00:00:00Z
                  updatedByUserId: user-12345678
                  updatedByUserName: John Doe
                  updatedByUserOrgId: org-12345678
              schema:
                $ref: "#/components/schemas/FleetListSubscriptionsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list a subscription"
      security:
      - api_key_header_Authorization: []
      summary: ListSubscription inventory-api
      tags:
      - inventory-api
    post:
      operationId: inventory-api#CreateSubscriptionOnBehalfOfCustomer
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              allowCreatesWhenPaymentNotConfigured: true
              billingProvider: STRIPE
              customPrice: true
              customPricePerUnit:
                CPU core hours:
                  amount: 0.001
                  currency: USD
                Memory GiB hours:
                  amount: 1.0E-4
                  currency: USD
                Storage GiB hours:
                  amount: 1.0E-4
                  currency: USD
              externalPayerId: a3df-sdf9-gfn3-4g3f
              maxNumberOfInstances: 10
              onBehalfOfCustomerUserId: user-12345678
              priceEffectiveDate: 2019-01-01T00:00:00Z
              productTierId: prod-12345678
            schema:
              $ref: "#/components/schemas/FleetCreateSubscriptionOnBehalfOfCustomerRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: sub-12345678
              schema:
                $ref: "#/components/schemas/FleetCreateSubscriptionOnBehalfOfCustomerResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a subscription."
      security:
      - api_key_header_Authorization: []
      summary: CreateSubscriptionOnBehalfOfCustomer inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/subscription/{id}:
    delete:
      operationId: inventory-api#TerminateSubscription
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The subscription ID
        example: sub-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription
          example: In suscipit nostrum veritatis ut.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to terminate a subscription"
      security:
      - api_key_header_Authorization: []
      summary: TerminateSubscription inventory-api
      tags:
      - inventory-api
    get:
      operationId: inventory-api#DescribeSubscription
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The subscription ID
        example: sub-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription
          example: Ipsa autem.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                allowCreatesWhenPaymentNotConfigured: true
                billingProvider: Stripe | GovPay
                createdAt: 2019-01-01T00:00:00Z
                currentActivePricePerUnit:
                  CPU core hours:
                    amount: 0.001
                    currency: USD
                  Memory GiB hours:
                    amount: 1.0E-4
                    currency: USD
                  Storage GiB hours:
                    amount: 1.0E-4
                    currency: USD
                customPrice: true
                externalPayerId: a3df-sdf9-gfn3-4g3f
                id: sub-12345678
                instanceCount: 3
                maxNumberOfInstances: 10
                productTierId: pt-12345678
                productTierName: Omnistrate Multi Tenancy
                rootUserEmail: abc@gmail.com
                rootUserId: user-12345678
                rootUserName: John Doe
                rootUserOrgId: org-12345678
                scheduledSubscriptionPricingList:
                - createdAt: 2019-01-03T00:00:00Z
                  createdByUserId: user-12345678
                  createdByUserName: John Doe
                  customPrice: false
                  endDate: 2019-02-01T00:00:00Z
                  isActiveBillingPrice: true
                  pricePerUnit:
                    CPU core hours:
                      amount: 0.001
                      currency: USD
                    Memory GiB hours:
                      amount: 1.0E-4
                      currency: USD
                    Storage GiB hours:
                      amount: 1.0E-4
                      currency: USD
                  startDate: 2019-01-01T00:00:00Z
                - createdAt: 2019-01-04T00:00:00Z
                  createdByUserId: user-12345678
                  createdByUserName: John Doe
                  customPrice: true
                  endDate: null
                  isActiveBillingPrice: true
                  pricePerUnit:
                    CPU core hours:
                      amount: 0.01
                      currency: USD
                    Memory GiB hours:
                      amount: 0.001
                      currency: USD
                    Storage GiB hours:
                      amount: 0.001
                      currency: USD
                  startDate: 2019-02-01T00:00:00Z
                serviceId: s-12345678
                serviceLogoURL: Consectetur labore quos dolores vel.
                serviceName: MySQL multi-writer service
                status: ACTIVE
                subscriptionPricingAuditLogs:
                - createdAt: 2019-01-04T00:00:00Z
                  createdByUserId: user-12345678
                  createdByUserName: John Doe
                  customPrice: true
                  endDate: 2019-02-01T00:00:00Z
                  isActiveBillingPrice: false
                  pricePerUnit:
                    CPU core hours:
                      amount: 0.02
                      currency: USD
                    Memory GiB hours:
                      amount: 0.002
                      currency: USD
                    Storage GiB hours:
                      amount: 0.002
                      currency: USD
                  startDate: 2019-01-01T00:00:00Z
                - createdAt: 2019-01-04T00:00:00Z
                  createdByUserId: user-12345678
                  createdByUserName: John Doe
                  customPrice: true
                  endDate: 2019-02-01T00:00:00Z
                  isActiveBillingPrice: true
                  pricePerUnit:
                    CPU core hours:
                      amount: 0.01
                      currency: USD
                    Memory GiB hours:
                      amount: 0.001
                      currency: USD
                    Storage GiB hours:
                      amount: 0.001
                      currency: USD
                  startDate: 2019-01-01T00:00:00Z
                - createdAt: 2019-01-05T00:00:00Z
                  createdByUserId: user-12345678
                  createdByUserName: John Doe
                  customPrice: true
                  endDate: null
                  isActiveBillingPrice: true
                  pricePerUnit:
                    CPU core hours:
                      amount: 0.01
                      currency: USD
                    Memory GiB hours:
                      amount: 0.001
                      currency: USD
                    Storage GiB hours:
                      amount: 0.001
                      currency: USD
                  startDate: 2019-02-01T00:00:00Z
                updatedAt: 2019-01-01T00:00:00Z
                updatedByUserId: user-12345678
                updatedByUserName: John Doe
                updatedByUserOrgId: org-12345678
              schema:
                $ref: "#/components/schemas/FleetDescribeSubscriptionResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a subscription"
      security:
      - api_key_header_Authorization: []
      summary: DescribeSubscription inventory-api
      tags:
      - inventory-api
    patch:
      operationId: inventory-api#UpdateSubscription
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The subscription ID
        example: sub-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription
          example: Neque ipsa odio.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              allowCreatesWhenPaymentNotConfigured: true
              billingProvider: STRIPE
              customPrice: true
              customPricePerUnit:
                CPU core hours:
                  amount: 0.001
                  currency: USD
                Memory GiB hours:
                  amount: 1.0E-4
                  currency: USD
                Storage GiB hours:
                  amount: 1.0E-4
                  currency: USD
              externalPayerId: a3df-sdf9-gfn3-4g3f
              maxNumberOfInstances: 10
              priceEffectiveDate: 2019-01-01T00:00:00Z
            schema:
              $ref: "#/components/schemas/FleetUpdateSubscriptionRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to suspend a subscription"
      security:
      - api_key_header_Authorization: []
      summary: UpdateSubscription inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/subscription/{id}/resume:
    put:
      operationId: inventory-api#ResumeSubscription
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The subscription ID
        example: sub-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription
          example: Nemo maiores vero cumque animi ea ex.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to resume a subscription"
      security:
      - api_key_header_Authorization: []
      summary: ResumeSubscription inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/subscription/{id}/suspend:
    put:
      operationId: inventory-api#SuspendSubscription
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The subscription ID
        example: sub-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription
          example: Nulla corporis earum.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to suspend a subscription"
      security:
      - api_key_header_Authorization: []
      summary: SuspendSubscription inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/subscription/request:
    get:
      operationId: inventory-api#ListSubscriptionRequests
      parameters:
      - allowEmptyValue: true
        description: The status of the subscription request to filter by
        example: PENDING
        explode: true
        in: query
        name: status
        required: false
        schema:
          description: The status of the subscription request
          example: PENDING|APPROVED|DENIED|CANCELLED
          type: string
        style: form
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - subr-12345678
                - subr-abcdefgh
                - subr-1234efgh
                nextPageToken: next-token
                subscriptionRequests:
                - createdAt: 2019-01-01T00:00:00Z
                  id: subr-12345678
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  rootUserEmail: abc@gmail.com
                  rootUserId: org-12345678
                  rootUserName: John Doe
                  serviceId: s-12345678
                  serviceLogoURL: Sapiente pariatur cum iusto sit excepturi.
                  serviceName: MySQL multi-writer service
                  status: PENDING
                  updatedAt: 2019-01-01T00:00:00Z
                  updatedByUserId: user-12345678
                  updatedByUserName: John Doe
                - createdAt: 2019-01-01T00:00:00Z
                  id: subr-12345678
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  rootUserEmail: abc@gmail.com
                  rootUserId: org-12345678
                  rootUserName: John Doe
                  serviceId: s-12345678
                  serviceLogoURL: Sapiente pariatur cum iusto sit excepturi.
                  serviceName: MySQL multi-writer service
                  status: PENDING
                  updatedAt: 2019-01-01T00:00:00Z
                  updatedByUserId: user-12345678
                  updatedByUserName: John Doe
              schema:
                $ref: "#/components/schemas/ListSubscriptionRequestsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list subscriptions"
      security:
      - api_key_header_Authorization: []
      summary: ListSubscriptionRequests inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/subscription/request/{id}:
    delete:
      operationId: inventory-api#DenySubscriptionRequest
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The subscription ID
        example: subr-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription Request
          example: Quia reiciendis.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list subscriptions"
      security:
      - api_key_header_Authorization: []
      summary: DenySubscriptionRequest inventory-api
      tags:
      - inventory-api
    get:
      operationId: inventory-api#DescribeSubscriptionRequest
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The subscription ID
        example: subr-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription Request
          example: Nulla hic ad dolores fugit in.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                createdAt: 2019-01-01T00:00:00Z
                id: subr-12345678
                productTierId: pt-12345678
                productTierName: Omnistrate Multi Tenancy
                rootUserEmail: abc@gmail.com
                rootUserId: org-12345678
                rootUserName: John Doe
                serviceId: s-12345678
                serviceLogoURL: Labore voluptatem nihil nesciunt.
                serviceName: MySQL multi-writer service
                status: PENDING
                updatedAt: 2019-01-01T00:00:00Z
                updatedByUserId: user-12345678
                updatedByUserName: John Doe
              schema:
                $ref: "#/components/schemas/DescribeSubscriptionRequestResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a subscription"
      security:
      - api_key_header_Authorization: []
      summary: DescribeSubscriptionRequest inventory-api
      tags:
      - inventory-api
    put:
      operationId: inventory-api#ApproveSubscriptionRequest
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The subscription ID
        example: subr-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Subscription Request
          example: Officiis ut fuga est.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list subscriptions"
      security:
      - api_key_header_Authorization: []
      summary: ApproveSubscriptionRequest inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/subscriptions:
    patch:
      operationId: inventory-api#UpdateSubscriptions
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              allowCreatesWhenPaymentNotConfigured: true
              billingProvider: STRIPE
              customPrice: true
              customPricePerUnit:
                CPU core hours:
                  amount: 0.001
                  currency: USD
                Memory GiB hours:
                  amount: 1.0E-4
                  currency: USD
                Storage GiB hours:
                  amount: 1.0E-4
                  currency: USD
              externalPayerId: a3df-sdf9-gfn3-4g3f
              maxNumberOfInstances: 10
              priceEffectiveDate: 2019-01-01T00:00:00Z
              subscriptionIDs:
              - Iste nemo culpa est et autem ut.
              - Sint officia excepturi fugit dolor inventore.
              - At consequatur quidem facilis in natus molestiae.
            schema:
              $ref: "#/components/schemas/FleetUpdateSubscriptionsRequest2"
        required: true
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to bulk update subscriptions"
      security:
      - api_key_header_Authorization: []
      summary: UpdateSubscriptions inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/user/{userId}:
    get:
      operationId: inventory-api#DescribeUser
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      - description: The user ID
        example: user-12345678
        explode: false
        in: path
        name: userId
        required: true
        schema:
          description: ID of a User
          example: Mollitia recusandae itaque dolor.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                createdAt: 2021-01-01T00:00:00Z
                email: alice@enterprise.com
                enabled: true
                lastModifiedAt: 2021-01-01T00:00:00Z
                lastModifiedByUserID: user-12345678
                lastModifiedByUserName: Alice
                orgId: org-12345678
                orgName: Enterprise
                orgUrl: https://enterprise.com
                status: ACTIVE
                subscriptions:
                - cloudProviderNames:
                  - aws
                  - gcp
                  defaultSubscription: true
                  email: abc@gmail.com
                  instanceCount: 3
                  name: John Dae
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  roleType: reader
                  serviceEnvironmentId: se-12345678
                  serviceId: s-12345678
                  serviceLogoURL: Voluptatem quis cum totam.
                  serviceName: MySQL multi-writer service
                  subscriptionDate: 2019-01-01T00:00:00Z
                  subscriptionId: sub-abcd1234
                  subscriptionOwnerName: John Doe
                  userId: "[]user-abcd1234"
                - cloudProviderNames:
                  - aws
                  - gcp
                  defaultSubscription: true
                  email: abc@gmail.com
                  instanceCount: 3
                  name: John Dae
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  roleType: reader
                  serviceEnvironmentId: se-12345678
                  serviceId: s-12345678
                  serviceLogoURL: Voluptatem quis cum totam.
                  serviceName: MySQL multi-writer service
                  subscriptionDate: 2019-01-01T00:00:00Z
                  subscriptionId: sub-abcd1234
                  subscriptionOwnerName: John Doe
                  userId: "[]user-abcd1234"
                - cloudProviderNames:
                  - aws
                  - gcp
                  defaultSubscription: true
                  email: abc@gmail.com
                  instanceCount: 3
                  name: John Dae
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  roleType: reader
                  serviceEnvironmentId: se-12345678
                  serviceId: s-12345678
                  serviceLogoURL: Voluptatem quis cum totam.
                  serviceName: MySQL multi-writer service
                  subscriptionDate: 2019-01-01T00:00:00Z
                  subscriptionId: sub-abcd1234
                  subscriptionOwnerName: John Doe
                  userId: "[]user-abcd1234"
                token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
                userId: user-12345678
                userName: Alice
              schema:
                $ref: "#/components/schemas/FleetDescribeUserResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a inventory\
            \ summary."
      security:
      - api_key_header_Authorization: []
      summary: DescribeUser inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/environment/{environmentId}/users:
    get:
      operationId: inventory-api#ListUsers
      parameters:
      - allowEmptyValue: true
        example: token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The next token to use for pagination
          example: token
          type: string
        style: form
      - allowEmptyValue: true
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        style: form
      - allowEmptyValue: true
        description: The subscription ID of the user
        example: sub-12345678
        explode: true
        in: query
        name: subscriptionId
        required: false
        schema:
          description: ID of a Subscription
          example: Sapiente in possimus.
          type: string
        style: form
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The service environment ID this workflow belongs to.
        example: se-12345678
        explode: false
        in: path
        name: environmentId
        required: true
        schema:
          description: ID of a Service Environment
          example: se-123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                environmentId: se-12345678
                nextPageToken: next-token
                serviceId: s-12345678
                users:
                - createdAt: 2021-01-01T00:00:00Z
                  email: alice@enterprise.com
                  enabled: true
                  environmentId: se-12345678
                  instanceCount: 3
                  lastModifiedAt: 2021-01-01T00:00:00Z
                  lastModifiedByUserID: user-12345678
                  lastModifiedByUserName: Alice
                  orgId: org-12345678
                  orgName: Enterprise
                  orgUrl: https://enterprise.com
                  serviceId: s-12345678
                  status: ACTIVE
                  subscriptionCount: 3
                  token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
                  userId: user-12345678
                  userName: Alice
                  userSubscriptionRole: root
                - createdAt: 2021-01-01T00:00:00Z
                  email: alice@enterprise.com
                  enabled: true
                  environmentId: se-12345678
                  instanceCount: 3
                  lastModifiedAt: 2021-01-01T00:00:00Z
                  lastModifiedByUserID: user-12345678
                  lastModifiedByUserName: Alice
                  orgId: org-12345678
                  orgName: Enterprise
                  orgUrl: https://enterprise.com
                  serviceId: s-12345678
                  status: ACTIVE
                  subscriptionCount: 3
                  token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
                  userId: user-12345678
                  userName: Alice
                  userSubscriptionRole: root
                - createdAt: 2021-01-01T00:00:00Z
                  email: alice@enterprise.com
                  enabled: true
                  environmentId: se-12345678
                  instanceCount: 3
                  lastModifiedAt: 2021-01-01T00:00:00Z
                  lastModifiedByUserID: user-12345678
                  lastModifiedByUserName: Alice
                  orgId: org-12345678
                  orgName: Enterprise
                  orgUrl: https://enterprise.com
                  serviceId: s-12345678
                  status: ACTIVE
                  subscriptionCount: 3
                  token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
                  userId: user-12345678
                  userName: Alice
                  userSubscriptionRole: root
              schema:
                $ref: "#/components/schemas/FleetListUsersResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a inventory\
            \ summary."
      security:
      - api_key_header_Authorization: []
      summary: ListUsers inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/productTier/{productTierId}/upgrade-path:
    post:
      operationId: inventory-api#CreateUpgradePath
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this upgrade path belongs to
        example: pt-12345678
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Qui ut harum dolorum.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              configurationOverrides:
                instance-12345678:
                  redis:
                    customHelmValues:
                      redis:
                        enabled: true
                        replicaCount: 2
                instance-abcdefgh:
                  mysql:
                    customHelmRuntimeConfiguration:
                      waitForJobs: true
                      waitForJobsTimeout: 10m
                    customHelmValues:
                      mysql:
                        enabled: true
              notifyCustomer: true
              scheduledDate: 2020-01-01
              sourceVersion: "1.0"
              targetVersion: "2.0"
              upgradeFilters:
                INSTANCE_IDS:
                - instance-12345678
                - instance-abcdefgh
            schema:
              $ref: "#/components/schemas/CreateUpgradePathRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                completedAt: 2020-01-01T00:00:00Z
                completedCount: 2
                createdAt: 2020-01-01T00:00:00Z
                createdBy: John Doe
                failedCount: 4
                inProgressCount: 7
                lastModifiedBy: John Doe
                lastRequestedAction: Velit quibusdam sit et vero ducimus et.
                notifyCustomer: true
                pendingCount: 3
                plannedExecutionDate: 2020-01-01
                productTierId: pt-12345678
                releasedAt: 2020-01-01T00:00:00Z
                scheduledCount: 10
                serviceId: s-12345678
                skippedCount: 0
                sourceVersion: "1.0"
                sourceVersionName: Vel repellendus nostrum.
                status: COMPLETE
                targetVersion: "2.0"
                targetVersionName: Nam cupiditate aut animi est velit beatae.
                totalCount: 16
                type: Major
                updatedAt: 2020-01-01T00:00:00Z
                upgradePathId: up-12345678
              schema:
                $ref: "#/components/schemas/UpgradePath"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a inventory\
            \ summary."
      security:
      - api_key_header_Authorization: []
      summary: CreateUpgradePath inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/productTier/{productTierId}/upgrade-path/{upgradePathId}:
    get:
      operationId: inventory-api#DescribeUpgradePath
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this upgrade path belongs to
        example: pt-12345678
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Reprehenderit sequi voluptas optio aut voluptate.
          type: string
        style: simple
      - description: The upgrade path ID
        example: up-12345678
        explode: false
        in: path
        name: upgradePathId
        required: true
        schema:
          description: ID of an Upgrade Path
          example: Suscipit nisi officia omnis voluptate veniam.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                completedAt: 2020-01-01T00:00:00Z
                completedCount: 2
                createdAt: 2020-01-01T00:00:00Z
                createdBy: John Doe
                failedCount: 4
                inProgressCount: 7
                lastModifiedBy: John Doe
                lastRequestedAction: Et consequatur possimus.
                notifyCustomer: true
                pendingCount: 3
                plannedExecutionDate: 2020-01-01
                productTierId: pt-12345678
                releasedAt: 2020-01-01T00:00:00Z
                scheduledCount: 10
                serviceId: s-12345678
                skippedCount: 0
                sourceVersion: "1.0"
                sourceVersionName: In beatae cumque ipsa et.
                status: COMPLETE
                targetVersion: "2.0"
                targetVersionName: Veniam sint sit.
                totalCount: 16
                type: Major
                updatedAt: 2020-01-01T00:00:00Z
                upgradePathId: up-12345678
              schema:
                $ref: "#/components/schemas/UpgradePath"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a inventory\
            \ summary."
      security:
      - api_key_header_Authorization: []
      summary: DescribeUpgradePath inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/productTier/{productTierId}/upgrade-path/{upgradePathId}/cancel:
    post:
      operationId: inventory-api#CancelUpgradePath
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this upgrade path belongs to
        example: pt-12345678
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Fugit sed consequatur pariatur unde enim.
          type: string
        style: simple
      - description: The upgrade path ID
        example: up-12345678
        explode: false
        in: path
        name: upgradePathId
        required: true
        schema:
          description: ID of an Upgrade Path
          example: Maiores ea ipsa et voluptas itaque.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                completedAt: 2020-01-01T00:00:00Z
                completedCount: 2
                createdAt: 2020-01-01T00:00:00Z
                createdBy: John Doe
                failedCount: 4
                inProgressCount: 7
                lastModifiedBy: John Doe
                lastRequestedAction: Nobis fugiat quo.
                notifyCustomer: true
                pendingCount: 3
                plannedExecutionDate: 2020-01-01
                productTierId: pt-12345678
                releasedAt: 2020-01-01T00:00:00Z
                scheduledCount: 10
                serviceId: s-12345678
                skippedCount: 0
                sourceVersion: "1.0"
                sourceVersionName: Sapiente consequatur.
                status: COMPLETE
                targetVersion: "2.0"
                targetVersionName: Sequi reiciendis dolores ut praesentium corrupti.
                totalCount: 16
                type: Major
                updatedAt: 2020-01-01T00:00:00Z
                upgradePathId: up-12345678
              schema:
                $ref: "#/components/schemas/UpgradePath"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to cancel an upgrade\
            \ path."
      security:
      - api_key_header_Authorization: []
      summary: CancelUpgradePath inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/productTier/{productTierId}/upgrade-path/{upgradePathId}/eligible-instances:
    get:
      operationId: inventory-api#ListEligibleInstancesPerUpgrade
      parameters:
      - allowEmptyValue: true
        example: token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The next token to use for pagination
          example: token
          type: string
        style: form
      - allowEmptyValue: true
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        style: form
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this upgrade path belongs to
        example: pt-12345678
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Molestiae et qui architecto magnam explicabo.
          type: string
        style: simple
      - description: The upgrade path ID
        example: up-12345678
        explode: false
        in: path
        name: upgradePathId
        required: true
        schema:
          description: ID of an Upgrade Path
          example: Placeat expedita est porro voluptates id.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                instances:
                - cloudProviderName: aws
                  cloudProviderRegion: us-east-1
                  createdAt: 2020-01-01T00:00:00Z
                  instanceId: instance-12345678
                  lifecycleStatus: RUNNING
                  orgName: Omnistrate
                  resourceName: writer
                  status: PAUSED
                  updatedAt: 2020-01-01T00:00:00Z
                  workflowID: submit-update-instance-12345678
                - cloudProviderName: aws
                  cloudProviderRegion: eu-west-1
                  createdAt: 2020-01-01T00:00:00Z
                  instanceId: instance-abcdefgh
                  lifecycleStatus: STOPPED
                  orgName: Omnistrate
                  resourceName: app
                  status: FAILED
                  updatedAt: 2020-01-01T00:00:00Z
                  workflowID: submit-update-instance-abcdefgh
                nextPageToken: next-token
                productTierId: pt-12345678
                serviceId: s-12345678
                upgradePathId: up-12345678
              schema:
                $ref: "#/components/schemas/ListEligibleInstancesPerUpgradeResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list instances\
            \ by upgrade path."
      security:
      - api_key_header_Authorization: []
      summary: ListEligibleInstancesPerUpgrade inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/productTier/{productTierId}/upgrade-path/{upgradePathId}/manage-lifecycle:
    post:
      operationId: inventory-api#ManageUpgradePath
      parameters:
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this upgrade path belongs to
        example: pt-12345678
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Sequi soluta illum qui est qui.
          type: string
        style: simple
      - description: The upgrade path ID
        example: up-12345678
        explode: false
        in: path
        name: upgradePathId
        required: true
        schema:
          description: ID of an Upgrade Path
          example: Repellat voluptas similique quis nam.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              action: Delectus neque sit officiis exercitationem ratione officia.
              actionPayload:
                Eaque at rem natus aut.: Aut earum temporibus.
                Labore atque id quas voluptatum.: Ducimus quo eum nisi dolorum.
                Quo ut.: Excepturi doloremque et.
            schema:
              $ref: "#/components/schemas/ManageUpgradePathLifecycleRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                completedAt: 2020-01-01T00:00:00Z
                completedCount: 2
                createdAt: 2020-01-01T00:00:00Z
                createdBy: John Doe
                failedCount: 4
                inProgressCount: 7
                lastModifiedBy: John Doe
                lastRequestedAction: Vero ut in.
                notifyCustomer: true
                pendingCount: 3
                plannedExecutionDate: 2020-01-01
                productTierId: pt-12345678
                releasedAt: 2020-01-01T00:00:00Z
                scheduledCount: 10
                serviceId: s-12345678
                skippedCount: 0
                sourceVersion: "1.0"
                sourceVersionName: Quia officia nostrum dolores consequatur quos iure.
                status: COMPLETE
                targetVersion: "2.0"
                targetVersionName: Repellat et enim rerum.
                totalCount: 16
                type: Major
                updatedAt: 2020-01-01T00:00:00Z
                upgradePathId: up-12345678
              schema:
                $ref: "#/components/schemas/UpgradePath"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to manage the upgrade\
            \ path lifecycle."
      security:
      - api_key_header_Authorization: []
      summary: ManageUpgradePath inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/service/{serviceId}/productTier/{productTierId}/upgrade-paths:
    get:
      operationId: inventory-api#ListUpgradePaths
      parameters:
      - allowEmptyValue: true
        description: The source product tier version to list upgrade paths for
        example: "1.0"
        explode: true
        in: query
        name: sourceProductTierVersion
        required: false
        schema:
          description: The source product tier version to list upgrade paths for
          example: "1.0"
          type: string
        style: form
      - allowEmptyValue: true
        description: The target product tier version to list upgrade paths for
        example: "2.0"
        explode: true
        in: query
        name: targetProductTierVersion
        required: false
        schema:
          description: The target product tier version to list upgrade paths for
          example: "2.0"
          type: string
        style: form
      - allowEmptyValue: true
        description: The status of the upgrade path to filter by
        example: COMPLETE
        explode: true
        in: query
        name: status
        required: false
        schema:
          description: The status of the upgrade path.
          example: IN_PROGRESS|COMPLETE|SCHEDULED|PENDING|FAILED|PAUSED|CANCELLED
          type: string
        style: form
      - allowEmptyValue: true
        description: The type of the upgrade path to filter by
        example: Major
        explode: true
        in: query
        name: type
        required: false
        schema:
          description: The type of the upgrade path.
          example: Major|Incremental|UserDefined
          type: string
        style: form
      - allowEmptyValue: true
        example: token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The next token to use for pagination
          example: token
          type: string
        style: form
      - allowEmptyValue: true
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        style: form
      - description: The service ID this workflow belongs to.
        example: s-12345678
        explode: false
        in: path
        name: serviceId
        required: true
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: simple
      - description: The product tier ID that this upgrade path belongs to
        example: pt-12345678
        explode: false
        in: path
        name: productTierId
        required: true
        schema:
          description: ID of a Product Tier
          example: Minus voluptatem.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                nextPageToken: next-token
                upgradePaths:
                - completedAt: 2020-01-01T00:00:00Z
                  completedCount: 2
                  createdAt: 2020-01-01T00:00:00Z
                  createdBy: John Doe
                  failedCount: 4
                  inProgressCount: 7
                  lastModifiedBy: John Doe
                  lastRequestedAction: Et maxime aut quod quo.
                  notifyCustomer: true
                  pendingCount: 3
                  plannedExecutionDate: 2020-01-01
                  productTierId: pt-12345678
                  releasedAt: 2020-01-01T00:00:00Z
                  scheduledCount: 10
                  serviceId: s-12345678
                  skippedCount: 0
                  sourceVersion: "1.0"
                  sourceVersionName: Rerum iusto alias.
                  status: COMPLETE
                  targetVersion: "2.0"
                  targetVersionName: Iure doloremque magnam sit.
                  totalCount: 16
                  type: Major
                  updatedAt: 2020-01-01T00:00:00Z
                  upgradePathId: up-12345678
                - completedAt: 2020-01-01T00:00:00Z
                  completedCount: 2
                  createdAt: 2020-01-01T00:00:00Z
                  createdBy: John Doe
                  failedCount: 4
                  inProgressCount: 7
                  lastModifiedBy: John Doe
                  lastRequestedAction: Et maxime aut quod quo.
                  notifyCustomer: true
                  pendingCount: 3
                  plannedExecutionDate: 2020-01-01
                  productTierId: pt-12345678
                  releasedAt: 2020-01-01T00:00:00Z
                  scheduledCount: 10
                  serviceId: s-12345678
                  skippedCount: 0
                  sourceVersion: "1.0"
                  sourceVersionName: Rerum iusto alias.
                  status: COMPLETE
                  targetVersion: "2.0"
                  targetVersionName: Iure doloremque magnam sit.
                  totalCount: 16
                  type: Major
                  updatedAt: 2020-01-01T00:00:00Z
                  upgradePathId: up-12345678
                - completedAt: 2020-01-01T00:00:00Z
                  completedCount: 2
                  createdAt: 2020-01-01T00:00:00Z
                  createdBy: John Doe
                  failedCount: 4
                  inProgressCount: 7
                  lastModifiedBy: John Doe
                  lastRequestedAction: Et maxime aut quod quo.
                  notifyCustomer: true
                  pendingCount: 3
                  plannedExecutionDate: 2020-01-01
                  productTierId: pt-12345678
                  releasedAt: 2020-01-01T00:00:00Z
                  scheduledCount: 10
                  serviceId: s-12345678
                  skippedCount: 0
                  sourceVersion: "1.0"
                  sourceVersionName: Rerum iusto alias.
                  status: COMPLETE
                  targetVersion: "2.0"
                  targetVersionName: Iure doloremque magnam sit.
                  totalCount: 16
                  type: Major
                  updatedAt: 2020-01-01T00:00:00Z
                  upgradePathId: up-12345678
              schema:
                $ref: "#/components/schemas/ListUpgradePathsResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list an upgrade\
            \ path."
      security:
      - api_key_header_Authorization: []
      summary: ListUpgradePaths inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/services-orchestration:
    get:
      operationId: inventory-api#ListServicesOrchestrations
      parameters:
      - allowEmptyValue: true
        description: The environment type
        example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
        explode: true
        in: query
        name: environmentType
        required: true
        schema:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - accessServicesOrchestration:
                  ServicesTopology:
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: i-12345678
                    serviceId: s-12345678
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Maxime atque.
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: i-12345678
                    serviceId: s-12345678
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Maxime atque.
                  createdAt: 2021-01-01T00:00:00Z
                  id: so-12345678
                  orchestrationFailedReason: Invalid DSL
                  resultParams:
                    param1: value1
                    param2: value2
                  status: PENDING
                  updatedAt: 2021-01-01T00:00:00Z
              - accessServicesOrchestration:
                  ServicesTopology:
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: i-12345678
                    serviceId: s-12345678
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Maxime atque.
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: i-12345678
                    serviceId: s-12345678
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Maxime atque.
                  createdAt: 2021-01-01T00:00:00Z
                  id: so-12345678
                  orchestrationFailedReason: Invalid DSL
                  resultParams:
                    param1: value1
                    param2: value2
                  status: PENDING
                  updatedAt: 2021-01-01T00:00:00Z
              - accessServicesOrchestration:
                  ServicesTopology:
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: i-12345678
                    serviceId: s-12345678
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Maxime atque.
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: i-12345678
                    serviceId: s-12345678
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Maxime atque.
                  createdAt: 2021-01-01T00:00:00Z
                  id: so-12345678
                  orchestrationFailedReason: Invalid DSL
                  resultParams:
                    param1: value1
                    param2: value2
                  status: PENDING
                  updatedAt: 2021-01-01T00:00:00Z
              - accessServicesOrchestration:
                  ServicesTopology:
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: i-12345678
                    serviceId: s-12345678
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Maxime atque.
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: i-12345678
                    serviceId: s-12345678
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Maxime atque.
                  createdAt: 2021-01-01T00:00:00Z
                  id: so-12345678
                  orchestrationFailedReason: Invalid DSL
                  resultParams:
                    param1: value1
                    param2: value2
                  status: PENDING
                  updatedAt: 2021-01-01T00:00:00Z
              schema:
                example:
                - accessServicesOrchestration:
                    ServicesTopology:
                    - dependsOnDeployment:
                      - instanceDeploymentAlias1
                      - instanceDeploymentAlias2
                      failedReason: Invalid inputs
                      instanceDeploymentAlias: instanceDeploymentAlias
                      instanceId: i-12345678
                      serviceId: s-12345678
                      status: PENDING
                      statusMessage: Creating deployment
                      subscriptionId: Maxime atque.
                    - dependsOnDeployment:
                      - instanceDeploymentAlias1
                      - instanceDeploymentAlias2
                      failedReason: Invalid inputs
                      instanceDeploymentAlias: instanceDeploymentAlias
                      instanceId: i-12345678
                      serviceId: s-12345678
                      status: PENDING
                      statusMessage: Creating deployment
                      subscriptionId: Maxime atque.
                    createdAt: 2021-01-01T00:00:00Z
                    id: so-12345678
                    orchestrationFailedReason: Invalid DSL
                    resultParams:
                      param1: value1
                      param2: value2
                    status: PENDING
                    updatedAt: 2021-01-01T00:00:00Z
                - accessServicesOrchestration:
                    ServicesTopology:
                    - dependsOnDeployment:
                      - instanceDeploymentAlias1
                      - instanceDeploymentAlias2
                      failedReason: Invalid inputs
                      instanceDeploymentAlias: instanceDeploymentAlias
                      instanceId: i-12345678
                      serviceId: s-12345678
                      status: PENDING
                      statusMessage: Creating deployment
                      subscriptionId: Maxime atque.
                    - dependsOnDeployment:
                      - instanceDeploymentAlias1
                      - instanceDeploymentAlias2
                      failedReason: Invalid inputs
                      instanceDeploymentAlias: instanceDeploymentAlias
                      instanceId: i-12345678
                      serviceId: s-12345678
                      status: PENDING
                      statusMessage: Creating deployment
                      subscriptionId: Maxime atque.
                    createdAt: 2021-01-01T00:00:00Z
                    id: so-12345678
                    orchestrationFailedReason: Invalid DSL
                    resultParams:
                      param1: value1
                      param2: value2
                    status: PENDING
                    updatedAt: 2021-01-01T00:00:00Z
                - accessServicesOrchestration:
                    ServicesTopology:
                    - dependsOnDeployment:
                      - instanceDeploymentAlias1
                      - instanceDeploymentAlias2
                      failedReason: Invalid inputs
                      instanceDeploymentAlias: instanceDeploymentAlias
                      instanceId: i-12345678
                      serviceId: s-12345678
                      status: PENDING
                      statusMessage: Creating deployment
                      subscriptionId: Maxime atque.
                    - dependsOnDeployment:
                      - instanceDeploymentAlias1
                      - instanceDeploymentAlias2
                      failedReason: Invalid inputs
                      instanceDeploymentAlias: instanceDeploymentAlias
                      instanceId: i-12345678
                      serviceId: s-12345678
                      status: PENDING
                      statusMessage: Creating deployment
                      subscriptionId: Maxime atque.
                    createdAt: 2021-01-01T00:00:00Z
                    id: so-12345678
                    orchestrationFailedReason: Invalid DSL
                    resultParams:
                      param1: value1
                      param2: value2
                    status: PENDING
                    updatedAt: 2021-01-01T00:00:00Z
                - accessServicesOrchestration:
                    ServicesTopology:
                    - dependsOnDeployment:
                      - instanceDeploymentAlias1
                      - instanceDeploymentAlias2
                      failedReason: Invalid inputs
                      instanceDeploymentAlias: instanceDeploymentAlias
                      instanceId: i-12345678
                      serviceId: s-12345678
                      status: PENDING
                      statusMessage: Creating deployment
                      subscriptionId: Maxime atque.
                    - dependsOnDeployment:
                      - instanceDeploymentAlias1
                      - instanceDeploymentAlias2
                      failedReason: Invalid inputs
                      instanceDeploymentAlias: instanceDeploymentAlias
                      instanceId: i-12345678
                      serviceId: s-12345678
                      status: PENDING
                      statusMessage: Creating deployment
                      subscriptionId: Maxime atque.
                    createdAt: 2021-01-01T00:00:00Z
                    id: so-12345678
                    orchestrationFailedReason: Invalid DSL
                    resultParams:
                      param1: value1
                      param2: value2
                    status: PENDING
                    updatedAt: 2021-01-01T00:00:00Z
                items:
                  $ref: "#/components/schemas/FleetDescribeServicesOrchestrationResult"
                type: array
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to list resource\
            \ instances"
      security:
      - api_key_header_Authorization: []
      summary: ListServicesOrchestrations inventory-api
      tags:
      - inventory-api
    post:
      operationId: inventory-api#CreateServicesOrchestration
      requestBody:
        content:
          application/json:
            example:
              orchestrationCreateDSL: Ut vel voluptatem quia est.
            schema:
              $ref: "#/components/schemas/FleetCreateServicesOrchestrationRequest2"
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                id: so-12345678
              schema:
                $ref: "#/components/schemas/FleetCreateServicesOrchestrationResult"
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: CreateServicesOrchestration inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/services-orchestration/{id}:
    delete:
      operationId: inventory-api#DeleteServicesOrchestration
      parameters:
      - description: The ID of the services orchestration
        example: so-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Services Orchestration
          example: Animi vero velit maiores voluptatem.
          type: string
        style: simple
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: DeleteServicesOrchestration inventory-api
      tags:
      - inventory-api
    get:
      operationId: inventory-api#DescribeServicesOrchestration
      parameters:
      - description: The ID of the services orchestration
        example: so-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Services Orchestration
          example: Quis labore omnis perferendis neque.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                accessServicesOrchestration:
                  ServicesTopology:
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: i-12345678
                    serviceId: s-12345678
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Aut voluptas voluptatem ut.
                  - dependsOnDeployment:
                    - instanceDeploymentAlias1
                    - instanceDeploymentAlias2
                    failedReason: Invalid inputs
                    instanceDeploymentAlias: instanceDeploymentAlias
                    instanceId: i-12345678
                    serviceId: s-12345678
                    status: PENDING
                    statusMessage: Creating deployment
                    subscriptionId: Aut voluptas voluptatem ut.
                  createdAt: 2021-01-01T00:00:00Z
                  id: so-12345678
                  orchestrationFailedReason: Invalid DSL
                  resultParams:
                    param1: value1
                    param2: value2
                  status: PENDING
                  updatedAt: 2021-01-01T00:00:00Z
              schema:
                $ref: "#/components/schemas/FleetDescribeServicesOrchestrationResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: DescribeServicesOrchestration inventory-api
      tags:
      - inventory-api
    patch:
      operationId: inventory-api#ModifyServicesOrchestration
      parameters:
      - description: The ID of the services orchestration
        example: so-12345678
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: ID of a Services Orchestration
          example: Eligendi nam sunt totam quia et beatae.
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              orchestrationModifyDSL: Earum sequi architecto.
            schema:
              $ref: "#/components/schemas/FleetModifyServicesOrchestrationRequest2"
        required: true
      responses:
        "202":
          description: Accepted response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to update a resource\
            \ instance"
      security:
      - api_key_header_Authorization: []
      summary: ModifyServicesOrchestration inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/user:
    post:
      operationId: inventory-api#CreateConsumptionUser
      requestBody:
        content:
          application/json:
            example:
              companyUrl: https://mywebsite.com
              email: abc@gmail.com
              enableAutoVerification: true
              legalCompanyName: mywebsite
              name: John Doe
              password: password
            schema:
              $ref: "#/components/schemas/FleetCreateConsumptionUserRequest2"
        required: true
      responses:
        "200":
          content:
            application/json:
              example: Sed dolores deleniti fugit quasi.
              schema:
                example: Cupiditate dolores at hic fuga est repellat.
                type: string
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to create user"
      security:
      - api_key_header_Authorization: []
      summary: CreateConsumptionUser inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/user/{userId}:
    delete:
      operationId: inventory-api#DeleteUser
      parameters:
      - description: The user ID
        example: user-12345678
        explode: false
        in: path
        name: userId
        required: true
        schema:
          description: ID of a User
          example: Vero qui excepturi.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to delete a user"
      security:
      - api_key_header_Authorization: []
      summary: DeleteUser inventory-api
      tags:
      - inventory-api
    get:
      operationId: inventory-api#DescribeOrgUser
      parameters:
      - description: The user ID
        example: user-12345678
        explode: false
        in: path
        name: userId
        required: true
        schema:
          description: ID of a User
          example: Nihil error id commodi.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                createdAt: 2021-01-01T00:00:00Z
                email: alice@enterprise.com
                enabled: true
                lastModifiedAt: 2021-01-01T00:00:00Z
                lastModifiedByUserID: user-12345678
                lastModifiedByUserName: Alice
                orgId: org-12345678
                orgName: Enterprise
                orgUrl: https://enterprise.com
                status: ACTIVE
                subscriptions:
                - cloudProviderNames:
                  - aws
                  - gcp
                  defaultSubscription: true
                  email: abc@gmail.com
                  instanceCount: 3
                  name: John Dae
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  roleType: reader
                  serviceEnvironmentId: se-12345678
                  serviceId: s-12345678
                  serviceLogoURL: Voluptatem quis cum totam.
                  serviceName: MySQL multi-writer service
                  subscriptionDate: 2019-01-01T00:00:00Z
                  subscriptionId: sub-abcd1234
                  subscriptionOwnerName: John Doe
                  userId: "[]user-abcd1234"
                - cloudProviderNames:
                  - aws
                  - gcp
                  defaultSubscription: true
                  email: abc@gmail.com
                  instanceCount: 3
                  name: John Dae
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  roleType: reader
                  serviceEnvironmentId: se-12345678
                  serviceId: s-12345678
                  serviceLogoURL: Voluptatem quis cum totam.
                  serviceName: MySQL multi-writer service
                  subscriptionDate: 2019-01-01T00:00:00Z
                  subscriptionId: sub-abcd1234
                  subscriptionOwnerName: John Doe
                  userId: "[]user-abcd1234"
                - cloudProviderNames:
                  - aws
                  - gcp
                  defaultSubscription: true
                  email: abc@gmail.com
                  instanceCount: 3
                  name: John Dae
                  productTierId: pt-12345678
                  productTierName: Omnistrate Multi Tenancy
                  roleType: reader
                  serviceEnvironmentId: se-12345678
                  serviceId: s-12345678
                  serviceLogoURL: Voluptatem quis cum totam.
                  serviceName: MySQL multi-writer service
                  subscriptionDate: 2019-01-01T00:00:00Z
                  subscriptionId: sub-abcd1234
                  subscriptionOwnerName: John Doe
                  userId: "[]user-abcd1234"
                token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
                userId: user-12345678
                userName: Alice
              schema:
                $ref: "#/components/schemas/FleetDescribeUserResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a user."
      security:
      - api_key_header_Authorization: []
      summary: DescribeOrgUser inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/user/{userId}/suspend:
    put:
      operationId: inventory-api#SuspendUser
      parameters:
      - description: The user ID
        example: user-12345678
        explode: false
        in: path
        name: userId
        required: true
        schema:
          description: ID of a User
          example: Facilis voluptatem ratione non sunt.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to suspend a user"
      security:
      - api_key_header_Authorization: []
      summary: SuspendUser inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/user/{userId}/unsuspend:
    put:
      operationId: inventory-api#UnsuspendUser
      parameters:
      - description: The user ID
        example: user-12345678
        explode: false
        in: path
        name: userId
        required: true
        schema:
          description: ID of a User
          example: Explicabo aut nihil blanditiis sit vel.
          type: string
        style: simple
      responses:
        "200":
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to unsuspend a user"
      security:
      - api_key_header_Authorization: []
      summary: UnsuspendUser inventory-api
      tags:
      - inventory-api
  /2022-09-01-00/fleet/users:
    get:
      operationId: inventory-api#ListAllUsers
      parameters:
      - allowEmptyValue: true
        example: token
        explode: true
        in: query
        name: nextPageToken
        required: false
        schema:
          description: The next token to use for pagination
          example: token
          type: string
        style: form
      - allowEmptyValue: true
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        style: form
      - allowEmptyValue: true
        description: The service ID of the users
        example: s-12345678
        explode: true
        in: query
        name: serviceId
        required: false
        schema:
          description: ID of a Service
          example: s-123456
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                nextPageToken: next-token
                serviceId: s-12345678
                users:
                - createdAt: 2021-01-01T00:00:00Z
                  email: alice@enterprise.com
                  enabled: true
                  instanceCount: 3
                  lastModifiedAt: 2021-01-01T00:00:00Z
                  lastModifiedByUserID: user-12345678
                  lastModifiedByUserName: Alice
                  orgId: org-12345678
                  orgName: Enterprise
                  orgUrl: https://enterprise.com
                  status: ACTIVE
                  subscriptionCount: 3
                  token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
                  userId: user-12345678
                  userName: Alice
                - createdAt: 2021-01-01T00:00:00Z
                  email: alice@enterprise.com
                  enabled: true
                  instanceCount: 3
                  lastModifiedAt: 2021-01-01T00:00:00Z
                  lastModifiedByUserID: user-12345678
                  lastModifiedByUserName: Alice
                  orgId: org-12345678
                  orgName: Enterprise
                  orgUrl: https://enterprise.com
                  status: ACTIVE
                  subscriptionCount: 3
                  token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
                  userId: user-12345678
                  userName: Alice
                - createdAt: 2021-01-01T00:00:00Z
                  email: alice@enterprise.com
                  enabled: true
                  instanceCount: 3
                  lastModifiedAt: 2021-01-01T00:00:00Z
                  lastModifiedByUserID: user-12345678
                  lastModifiedByUserName: Alice
                  orgId: org-12345678
                  orgName: Enterprise
                  orgUrl: https://enterprise.com
                  status: ACTIVE
                  subscriptionCount: 3
                  token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
                  userId: user-12345678
                  userName: Alice
                - createdAt: 2021-01-01T00:00:00Z
                  email: alice@enterprise.com
                  enabled: true
                  instanceCount: 3
                  lastModifiedAt: 2021-01-01T00:00:00Z
                  lastModifiedByUserID: user-12345678
                  lastModifiedByUserName: Alice
                  orgId: org-12345678
                  orgName: Enterprise
                  orgUrl: https://enterprise.com
                  status: ACTIVE
                  subscriptionCount: 3
                  token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
                  userId: user-12345678
                  userName: Alice
              schema:
                $ref: "#/components/schemas/FleetListAllUsersResult"
          description: OK response.
        "400":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "bad_request: Response used on a bad request"
        "401":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "auth_failure: Response used on authentication failure"
        "403":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "forbidden: Response used on authorization failure"
        "404":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "not_found: Response used when the requested resource is not\
            \ found"
        "409":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "invalid_state: Response used when requested resource is in\
            \ an invalid state for this operation"
        "500":
          content:
            application/vnd.goa.error:
              schema:
                $ref: "#/components/schemas/Error"
          description: "failed_request: Response used on failure to describe a inventory\
            \ summary."
      security:
      - api_key_header_Authorization: []
      summary: ListAllUsers inventory-api
      tags:
      - inventory-api
components:
  schemas:
    APIEntity:
      example:
        inputParameters:
        - defaultValue: null
          description: The name of the server
          displayName: Server Name
          isList: false
          key: serverName
          modifiable: true
          options: null
          required: true
          type: string
        - defaultValue: option1
          description: The type of the server
          displayName: Server Type
          isList: false
          key: serverType
          modifiable: true
          options:
          - option1
          - option2
          required: true
          type: string
        outputParameters:
        - description: The name of the server
          displayName: Server Name
          isList: false
          key: serverName
          type: string
        - description: The type of the server
          displayName: Server Type
          isList: false
          key: serverType
          type: string
        verb: CREATE|DESCRIBE|LIST|UPDATE|DELETE
      properties:
        inputParameters:
          description: The input parameters
          example:
          - defaultValue: null
            description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            modifiable: true
            options: null
            required: true
            type: string
          - defaultValue: option1
            description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            modifiable: true
            options:
            - option1
            - option2
            required: true
            type: string
          items:
            $ref: "#/components/schemas/InputParameterEntity"
          type: array
        outputParameters:
          description: The output parameters
          example:
          - description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            type: string
          - description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            type: string
          items:
            $ref: "#/components/schemas/OutputParameterEntity"
          type: array
        verb:
          description: The API verb
          example: CREATE|DESCRIBE|LIST|UPDATE|DELETE
          type: string
      required:
      - inputParameters
      - outputParameters
      - verb
      type: object
    AccessSideUser:
      example:
        createdAt: 2021-01-01T00:00:00Z
        email: alice@enterprise.com
        enabled: true
        instanceCount: 3
        lastModifiedAt: 2021-01-01T00:00:00Z
        lastModifiedByUserID: user-12345678
        lastModifiedByUserName: Alice
        orgId: org-12345678
        orgName: Enterprise
        orgUrl: https://enterprise.com
        status: ACTIVE
        subscriptionCount: 3
        token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
        userId: user-12345678
        userName: Alice
      properties:
        createdAt:
          description: The time the user was created.
          example: 2021-01-01T00:00:00Z
          type: string
        email:
          description: The user email.
          example: alice@enterprise.com
          type: string
        enabled:
          description: Is the user enabled.
          example: true
          type: boolean
        instanceCount:
          description: The number of active instances the user has.
          example: 3
          format: int64
          type: integer
        lastModifiedAt:
          description: The last modified time of the user.
          example: 2021-01-01T00:00:00Z
          type: string
        lastModifiedByUserID:
          description: ID of a User
          example: Sint rerum beatae est ipsa.
          type: string
        lastModifiedByUserName:
          description: The user name of the last modifier.
          example: Alice
          type: string
        orgId:
          description: ID of an Org
          example: Ea animi nulla tenetur.
          type: string
        orgName:
          description: The organization name.
          example: Enterprise
          type: string
        orgUrl:
          description: The organization URL.
          example: https://enterprise.com
          type: string
        status:
          description: The status of the user.
          example: ACTIVE|NOT_ENABLED
          type: string
        subscriptionCount:
          description: The number of subscriptions the user has.
          example: 3
          format: int64
          type: integer
        token:
          description: "Token to validate the user, if the user is not enabled."
          example: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
          minLength: 1
          type: string
        userId:
          description: ID of a User
          example: Autem quaerat omnis doloremque voluptatum in nostrum.
          type: string
        userName:
          description: The user name.
          example: Alice
          type: string
      type: object
    AcknowledgeEventRequest:
      example:
        id: e-123456
        token: 9u
      properties:
        id:
          description: ID of a Event
          example: Nemo voluptates tempora natus.
          type: string
        token:
          description: JWT token used to perform authorization
          example: j
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    AddAccountConfigToServiceModelRequest:
      example:
        accountConfigId: ac-12345678
        id: sm-12345678
        serviceId: s-12345678
        token: hc2
      properties:
        accountConfigId:
          description: ID of an Account Config
          example: Dicta aut quia magnam sunt magni.
          type: string
        id:
          description: ID of a Service Model
          example: Amet ut nulla et quo nobis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "38"
          minLength: 1
          type: string
      required:
      - accountConfigId
      - id
      - serviceId
      - token
      type: object
    AddCapacityToResourceInstanceRequest:
      example:
        capacityToBeAdded: 3
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: 7ad
      properties:
        capacityToBeAdded:
          description: Number of replicas to be added
          example: 3
          format: int64
          type: integer
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Debitis nihil sit qui fuga repudiandae nihil.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: xy
          minLength: 1
          type: string
      required:
      - capacityToBeAdded
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    AddCustomDNSToResourceInstanceRequest:
      example:
        customDNS: my-custom-dns.com
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: http-service
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        targetPort: 8080
        token: 8hx
      properties:
        customDNS:
          description: The custom DNS to add
          example: my-custom-dns.com
          type: string
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: http-service
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Rem in minus sit odit.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        targetPort:
          description: The target port
          example: 8080
          format: int64
          type: integer
        token:
          description: JWT token used to perform authorization
          example: "y"
          minLength: 1
          type: string
      required:
      - customDNS
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    Address:
      example:
        addressLine1: 1234 Main St
        addressLine2: Apt 123
        addressLine3: Building 123
        city: San Francisco
        country: US
        state: CA
        zip: "94123"
      properties:
        addressLine1:
          description: The street address
          example: 1234 Main St
          type: string
        addressLine2:
          description: Address Line 2
          example: Apt 123
          type: string
        addressLine3:
          description: Address Line 3
          example: Building 123
          type: string
        city:
          description: Name of the City
          example: San Francisco
          type: string
        country:
          description: Name of the Country
          example: US
          type: string
        state:
          description: Name of the State/Province/Region
          example: CA
          type: string
        zip:
          description: Zip code
          example: "94123"
          type: string
      required:
      - addressLine1
      - city
      - country
      - state
      - zip
      type: object
    AdoptHostClusterRequest:
      example:
        cloudProvider: aws
        customerEmail: mycustomer@example.com
        description: My Adopted Host Cluster
        id: hc-12345678
        region: us-east-1
        token: c4
      properties:
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        customerEmail:
          description: Email of the customer who owns the host cluster in case this
            is a BYOA host cluster
          example: mycustomer@example.com
          type: string
        description:
          description: Description of the host cluster
          example: My Adopted Host Cluster
          minLength: 1
          type: string
        id:
          description: ID of a Host Cluster
          example: Temporibus deleniti dolorem.
          type: string
        region:
          description: The actual region name of the host cluster
          example: us-east-1
          type: string
        token:
          description: JWT token used to perform authorization
          example: 6jv
          minLength: 1
          type: string
      required:
      - cloudProvider
      - description
      - id
      - region
      - token
      type: object
    AdoptHostClusterRequest2:
      example:
        cloudProvider: aws
        customerEmail: mycustomer@example.com
        description: My Adopted Host Cluster
        id: hc-12345678
        region: us-east-1
      properties:
        cloudProvider:
          example: aws
          type: string
        customerEmail:
          description: Email of the customer who owns the host cluster in case this
            is a BYOA host cluster
          example: mycustomer@example.com
          type: string
        description:
          description: Description of the host cluster
          example: My Adopted Host Cluster
          minLength: 1
          type: string
        id:
          description: ID of the host cluster to adopt
          example: hc-12345678
          type: string
        region:
          description: The actual region name of the host cluster
          example: us-east-1
          type: string
      required:
      - cloudProvider
      - description
      - id
      - region
      type: object
    AdoptHostClusterResult:
      example:
        adoptionStatus: READY
        agentInstallationKit: base64-encoded-tar-archive
      properties:
        adoptionStatus:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        agentInstallationKit:
          description: The base64 encoded TAR archive containing the agent installation
            kit
          example: base64-encoded-tar-archive
          type: string
      required:
      - adoptionStatus
      - agentInstallationKit
      type: object
    AdoptResourceInstanceRequest:
      example:
        hostClusterID: hc-12345678
        primaryResourceKey: mysql
        resourceAdoptionConfiguration:
          mysql:
            helmAdoptionConfiguration:
              chartRepoURL: https://charts.example.com
              releaseName: my-helm-release
              releaseNamespace: default
              runtimeConfiguration:
                timeout: 300s
                waitForJobs: true
          redis:
            helmAdoptionConfiguration:
              chartRepoURL: https://charts.example.com
              releaseName: my-redis-release
              releaseNamespace: redis
              runtimeConfiguration:
                timeout: 300s
                waitForJobs: true
        serviceID: s-12345678
        servicePlanID: pt-12345678
        servicePlanVersion: "1.0"
        subscriptionID: sub-12345678
        token: "7"
      properties:
        hostClusterID:
          description: The host cluster ID or key
          example: hc-12345678
          type: string
        primaryResourceKey:
          description: The primary resource key to adopt. This is the top-level resource
            that will be managed by Omnistrate.
          example: mysql
          type: string
        resourceAdoptionConfiguration:
          additionalProperties:
            $ref: "#/components/schemas/ResourceAdoptionConfiguration"
          description: The resource adoption configuration
          example:
            mysql:
              helmAdoptionConfiguration:
                chartRepoURL: https://charts.example.com
                releaseName: my-helm-release
                releaseNamespace: default
                runtimeConfiguration:
                  timeout: 300s
                  waitForJobs: true
            redis:
              helmAdoptionConfiguration:
                chartRepoURL: https://charts.example.com
                releaseName: my-redis-release
                releaseNamespace: redis
                runtimeConfiguration:
                  timeout: 300s
                  waitForJobs: true
          type: object
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        servicePlanID:
          description: ID of a Product Tier
          example: Laborum rerum.
          type: string
        servicePlanVersion:
          description: The service plan version
          example: "1.0"
          type: string
        subscriptionID:
          description: ID of a Subscription
          example: Quo rerum officiis doloremque.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 3l
          minLength: 1
          type: string
      required:
      - hostClusterID
      - primaryResourceKey
      - serviceID
      - servicePlanID
      - token
      type: object
    AdoptResourceInstanceRequest2:
      example:
        resourceAdoptionConfiguration:
          mysql:
            helmAdoptionConfiguration:
              chartRepoURL: https://charts.example.com
              releaseName: my-helm-release
              releaseNamespace: default
              runtimeConfiguration:
                timeout: 300s
                waitForJobs: true
          redis:
            helmAdoptionConfiguration:
              chartRepoURL: https://charts.example.com
              releaseName: my-redis-release
              releaseNamespace: redis
              runtimeConfiguration:
                timeout: 300s
                waitForJobs: true
      properties:
        resourceAdoptionConfiguration:
          additionalProperties:
            $ref: "#/components/schemas/ResourceAdoptionConfiguration"
          description: The resource adoption configuration
          example:
            mysql:
              helmAdoptionConfiguration:
                chartRepoURL: https://charts.example.com
                releaseName: my-helm-release
                releaseNamespace: default
                runtimeConfiguration:
                  timeout: 300s
                  waitForJobs: true
            redis:
              helmAdoptionConfiguration:
                chartRepoURL: https://charts.example.com
                releaseName: my-redis-release
                releaseNamespace: redis
                runtimeConfiguration:
                  timeout: 300s
                  waitForJobs: true
          type: object
      type: object
    Amenity:
      example:
        Description: Ensures high availability across multiple zones.
        IsManaged: true
        Name: Prometheus
        Properties:
          Maxime delectus dolorem dolorem aut in.: Iusto consequatur illum voluptas
            minus ea.
        Type: HelmChart
      properties:
        Description:
          description: A description of the amenity.
          example: Ensures high availability across multiple zones.
          type: string
        IsManaged:
          description: Whether the amenity is managed by the system.
          example: true
          type: boolean
        Name:
          description: The name of the amenity.
          example: Prometheus
          type: string
        Properties:
          additionalProperties: true
          description: The properties of the amenity.
          example:
            Cumque earum non dolorum eligendi error.: Et iure aut quo omnis.
            Quo et.: Aut blanditiis rerum nihil.
          type: object
        Type:
          description: The type of the amenity.
          example: HelmChart
          type: string
      type: object
    ApplyPendingChangesToHostClusterRequest:
      example:
        id: hc-12345678
        token: xa
      properties:
        id:
          description: ID of a Host Cluster
          example: Dolorem ab porro et exercitationem at.
          type: string
        token:
          description: JWT token used to perform authorization
          example: "0"
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    ApproveSubscriptionRequestRequest:
      example:
        environmentId: se-12345678
        id: subr-12345678
        serviceId: s-12345678
        token: 13k
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        id:
          description: ID of a Subscription Request
          example: Voluptatem odit voluptatibus.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: lz
          minLength: 1
          type: string
      required:
      - environmentId
      - id
      - serviceId
      - token
      type: object
    BackupStatus:
      example:
        backupPeriodInHours: 2
        backupRetentionInDays: 7
        earliestRestoreTime: 2021-09-01T00:00:00Z
        lastBackupTime: 2021-09-01T00:00:00Z
      properties:
        backupPeriodInHours:
          description: The backup period in hours
          example: 2
          format: int64
          type: integer
        backupRetentionInDays:
          description: The backup retention in days
          example: 7
          format: int64
          type: integer
        earliestRestoreTime:
          description: The earliest restore time
          example: 2021-09-01T00:00:00Z
          type: string
        lastBackupTime:
          description: The last backup time
          example: 2021-09-01T00:00:00Z
          type: string
      required:
      - backupPeriodInHours
      - backupRetentionInDays
      type: object
    BillingProvider:
      example:
        balanceDueLink: https://billing.provider.com/balance-due. Only present when
          the billing provider is BRING_YOUR_OWN
        connectClientID: ca_1234567890
        logoURL: https://example.com/logo.png
        name: GovPay
        status: ENABLED | DISABLED | PENDING
        stripeCustomerID: cus_1234567890
        type: STRIPE
      properties:
        balanceDueLink:
          description: The URL to the balance due page
          example: https://billing.provider.com/balance-due. Only present when the
            billing provider is BRING_YOUR_OWN
          type: string
        connectClientID:
          description: The Stripe Connect Client ID associated with the billing provider.
            Only present when the billing provider is STRIPE
          example: ca_1234567890
          type: string
        logoURL:
          description: The URL of the logo for the billing provider. Only present
            when the billing provider is BRING_YOUR_OWN
          example: https://example.com/logo.png
          type: string
        name:
          description: A custom name for the billing provider. Only present when the
            billing provider is BRING_YOUR_OWN
          example: GovPay
          type: string
        status:
          description: The status of the billing provider
          example: ENABLED | DISABLED | PENDING
          type: string
        stripeCustomerID:
          description: The Stripe Customer ID associated with the billing provider.
            Only present when the billing provider is STRIPE
          example: cus_1234567890
          type: string
        type:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
      required:
      - status
      - type
      type: object
    BuildServiceFromComposeSpecRequest:
      example:
        configs:
          Quos unde.: Et et fugiat.
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        dryrun: true
        environment: dev
        environmentType: DEV
        fileContent: Nemo ducimus excepturi necessitatibus.
        name: MySQL multi-writer service
        release: true
        releaseAsPreferred: true
        releaseVersionName: mysql
        secrets:
          Id est hic aut pariatur et hic.: Recusandae repellendus.
          Natus sit voluptas id quibusdam enim.: Nobis quia totam non.
          Ut architecto quae ratione iste.: Nesciunt rerum ut.
        serviceLogoURL: http://hamill.info/keith
        token: hy3
      properties:
        configs:
          additionalProperties:
            example: Delectus natus nulla qui.
            type: string
          description: Configs for the service. Key is the compose spec name of the
            config and value is base64 encoded config content
          example:
            Debitis voluptatum omnis voluptas pariatur aliquid.: Omnis ullam nam.
            Vitae consequatur et et.: Officia voluptatibus libero temporibus consequatur
              quis.
          type: object
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        dryrun:
          description: "If set to true, performs a dry run of the build operation\
            \ without making any changes"
          example: true
          type: boolean
        environment:
          description: The environment to build the service in
          example: dev
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        fileContent:
          description: Base64 encoded Compose Spec YAML in docker compose format
          example: Incidunt quas nihil dolorem.
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        release:
          description: Release the service after building
          example: true
          type: boolean
        releaseAsPreferred:
          description: Release the service as preferred
          example: true
          type: boolean
        releaseVersionName:
          description: Release version name
          example: mysql
          type: string
        secrets:
          additionalProperties:
            example: Soluta tempore ut.
            type: string
          description: Secrets for the service. Key is the compose spec name of the
            secret and value is base64 encoded secret content
          example:
            Dignissimos doloribus quo voluptatem voluptas.: Est et rerum et cum dolor
              ex.
            Itaque odio perspiciatis a ut libero sed.: Error occaecati.
          type: object
        serviceLogoURL:
          description: The logo for the service
          example: http://ruecker.info/mohammed
          format: uri
          type: string
        token:
          description: JWT token used to perform authorization
          example: lr5
          minLength: 1
          type: string
      required:
      - fileContent
      - name
      - token
      type: object
    BuildServiceFromComposeSpecResult:
      example:
        productTierID: pt-12345678
        serviceEnvironmentID: se-12345678
        serviceID: s-12345678
        undefinedResources:
          mysql: r-12345678
      properties:
        productTierID:
          description: ID of a Product Tier
          example: Et ut repudiandae recusandae rem.
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        undefinedResources:
          additionalProperties:
            description: ID of a resource
            example: Possimus quo debitis nihil debitis at omnis.
            type: string
          description: Resources that appear in the service plan but were not defined
            in the spec. These resources were not processed during the build.
          example:
            mysql: r-12345678
          type: object
      required:
      - productTierID
      - serviceEnvironmentID
      - serviceID
      type: object
    BuildServiceFromServicePlanSpecRequest:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        dryrun: true
        environment: dev
        environmentType: DEV
        fileContent: Est est ab voluptates expedita architecto illum.
        name: MySQL multi-writer service
        release: true
        releaseAsPreferred: true
        releaseVersionName: mysql
        serviceLogoURL: http://moorekuhn.com/clark_grant
        token: "9"
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        dryrun:
          description: "If set to true, performs a dry run of the build operation\
            \ without making any changes"
          example: true
          type: boolean
        environment:
          description: The environment to build the service in
          example: dev
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        fileContent:
          description: Base64 encoded Compose Spec YAML in service plan configuration
            format
          example: Optio quia nisi nihil.
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        release:
          description: Release the service after building
          example: true
          type: boolean
        releaseAsPreferred:
          description: Release the service as preferred
          example: true
          type: boolean
        releaseVersionName:
          description: Release version name
          example: mysql
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: http://lakinmorar.org/timmothy.zboncak
          format: uri
          type: string
        token:
          description: JWT token used to perform authorization
          example: e
          minLength: 1
          type: string
      required:
      - fileContent
      - name
      - token
      type: object
    BuildServiceFromServicePlanSpecResult:
      example:
        productTierID: pt-12345678
        serviceEnvironmentID: se-12345678
        serviceID: s-12345678
        undefinedResources:
          mysql: r-12345678
      properties:
        productTierID:
          description: ID of a Product Tier
          example: Asperiores ut.
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        undefinedResources:
          additionalProperties:
            description: ID of a resource
            example: Omnis perspiciatis aut saepe sed corporis.
            type: string
          description: Resources that appear in the service plan but were not defined
            in the spec. These resources were not processed during the build.
          example:
            mysql: r-12345678
          type: object
      required:
      - productTierID
      - serviceEnvironmentID
      - serviceID
      type: object
    CancelSubscriptionRequestRequest:
      example:
        id: subr-12345678
        token: "4"
      properties:
        id:
          description: ID of a Subscription Request
          example: Officiis architecto id ut maiores.
          type: string
        token:
          description: JWT token used to perform authorization
          example: uy4
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    CancelUpgradePathRequest:
      example:
        productTierId: pt-12345678
        serviceId: s-12345678
        token: es
        upgradePathId: up-12345678
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Sit sunt reprehenderit sequi quidem asperiores sed.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "n"
          minLength: 1
          type: string
        upgradePathId:
          description: ID of an Upgrade Path
          example: Amet corporis aperiam a dolore numquam facilis.
          type: string
      required:
      - productTierId
      - serviceId
      - token
      - upgradePathId
      type: object
    Change:
      example:
        attributes:
          resourceId: r-12345678
        changeType: PENDING_NEW
        name: Customer metrics
      properties:
        attributes:
          additionalProperties:
            example: Temporibus enim commodi.
            type: string
          description: Additional setting/component attributes
          example:
            resourceId: r-12345678
          type: object
        changeType:
          description: State of the configuration change
          example: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
          type: string
        name:
          description: The name of the setting/component that changed
          example: Customer metrics
          type: string
      required:
      - attributes
      - changeType
      - name
      type: object
    ChangePasswordRequest:
      example:
        email: abc@gmail.com
        password: password
        token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
        token:
          example: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
          minLength: 1
          type: string
      required:
      - email
      - password
      - token
      type: object
    ChangePlanRequest:
      example:
        planName: STARTER
        token: "93"
      properties:
        planName:
          description: This parameter is used to select the appropriate Product Plan
          example: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
          type: string
        token:
          description: JWT token used to perform authorization
          example: 3gf
          minLength: 1
          type: string
      required:
      - planName
      - token
      type: object
    ChangeSet:
      example:
        categorizedResourceChanges:
          Repudiandae nam sint.:
            changes:
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            - attributes:
                resourceId: r-12345678
              changeType: PENDING_NEW
              name: Customer metrics
            status: PENDING_UPDATE
        imageConfigChanges:
          changeState: PENDING_NEW
          imageConfigId: imgc-12345678
          imageName: mysql
        infraConfigChanges:
          changeState: PENDING_NEW
          infraConfigId: ic-12345678
          name: MySQL Writer Infra Config
        overallResourceStatus: PENDING_UPDATE
        productTierFeatureChanges: PENDING_UPDATE
        resourceChanges: PENDING_DELETE
        resourceName: Placeat adipisci est reprehenderit.
      properties:
        categorizedResourceChanges:
          additionalProperties: true
          description: "Summary of all changes within a resource for each category\
            \ (ie. image, infra, product tier feature, etc.)"
          example:
            Repudiandae nam sint.:
              changes:
              - attributes:
                  resourceId: r-12345678
                changeType: PENDING_NEW
                name: Customer metrics
              - attributes:
                  resourceId: r-12345678
                changeType: PENDING_NEW
                name: Customer metrics
              - attributes:
                  resourceId: r-12345678
                changeType: PENDING_NEW
                name: Customer metrics
              - attributes:
                  resourceId: r-12345678
                changeType: PENDING_NEW
                name: Customer metrics
              status: PENDING_UPDATE
          type: object
        imageConfigChanges:
          $ref: "#/components/schemas/ImageConfigChangeSummary"
        infraConfigChanges:
          $ref: "#/components/schemas/InfraConfigChangeSummary"
        overallResourceStatus:
          description: Summary status of the changes
          example: NO_CHANGE|PENDING_CHANGE|NONE
          type: string
        productTierFeatureChanges:
          description: State of the configuration change
          example: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
          type: string
        resourceChanges:
          description: State of the configuration change
          example: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
          type: string
        resourceName:
          description: The name of the resource
          example: Et corrupti rem.
          type: string
      required:
      - categorizedResourceChanges
      - overallResourceStatus
      type: object
    ChangeSummary:
      example:
        changes:
        - attributes:
            resourceId: r-12345678
          changeType: PENDING_NEW
          name: Customer metrics
        - attributes:
            resourceId: r-12345678
          changeType: PENDING_NEW
          name: Customer metrics
        - attributes:
            resourceId: r-12345678
          changeType: PENDING_NEW
          name: Customer metrics
        status: PENDING_UPDATE
      properties:
        changes:
          description: List of individual changes
          example:
          - attributes:
              resourceId: r-12345678
            changeType: PENDING_NEW
            name: Customer metrics
          - attributes:
              resourceId: r-12345678
            changeType: PENDING_NEW
            name: Customer metrics
          - attributes:
              resourceId: r-12345678
            changeType: PENDING_NEW
            name: Customer metrics
          items:
            $ref: "#/components/schemas/Change"
          type: array
        status:
          description: Summary status of the changes
          example: NO_CHANGE|PENDING_CHANGE|NONE
          type: string
      required:
      - changes
      - status
      type: object
    Channel:
      example:
        channelType: EMAIL
        email:
          to: notify@example.com
        id: channel-12345678
        name: My Channel
        pagerDuty:
          integrationKey: e93facc47f2d4b2b88272b3a647afe7d-fictional-integration-key
        slack:
          webhookUrl: https://hooks.slack.com/services/...
        subscription:
          alertTypes:
          - Alarm
          - Notification
          environmentTypes:
          - PROD
          - PRIVATE
          - CANARY
          eventCategories:
          - InstanceEvent
          - ServiceEvent
          eventPriorities:
          - Critical
          - High
          eventTypes:
          - UnhealthyInstance
          - UserSignUp
        webhook:
          method: POST
          url: https://example.com/notify
      properties:
        channelType:
          example: EMAIL|SLACK|WEBHOOK|PAGERDUTY
          type: string
        email:
          $ref: "#/components/schemas/EmailConfiguration"
        id:
          description: ID of a Notification Channel
          example: Ad autem quisquam.
          type: string
        name:
          description: Name of the channel
          example: My Channel
          type: string
        pagerDuty:
          $ref: "#/components/schemas/PagerDutyConfiguration"
        slack:
          $ref: "#/components/schemas/SlackConfiguration"
        subscription:
          $ref: "#/components/schemas/ChannelSubscription"
        webhook:
          $ref: "#/components/schemas/WebhookConfiguration"
      required:
      - channelType
      - id
      - name
      - subscription
      type: object
    ChannelEventHistoryRequest:
      example:
        endTime: 2024-01-01T10:00:00Z
        id: channel-12345678
        startTime: 2023-01-01T10:00:00Z
        token: v7
      properties:
        endTime:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        id:
          description: ID of a Notification Channel
          example: Quia eos est et ut delectus.
          type: string
        startTime:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        token:
          description: JWT token used to perform authorization
          example: 9l
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    ChannelEventHistoryResult:
      example:
        events:
        - channelResponse:
            body: Notification received
            status: 200
          id: event-12345678
          payload:
            key1: value1
            key2: 42
          publicationStatus: SUCCESS
          timestamp: 2023-01-01T10:00:00Z
      properties:
        events:
          description: List of events related to the notification channel
          example:
          - channelResponse:
              body: Notification received
              status: 200
            id: event-12345678
            payload:
              key1: value1
              key2: 42
            publicationStatus: SUCCESS
            timestamp: 2023-01-01T10:00:00Z
          items:
            $ref: "#/components/schemas/Event"
          type: array
      required:
      - events
      type: object
    ChannelSubscription:
      example:
        alertTypes:
        - Alarm
        - Notification
        environmentTypes:
        - PROD
        - PRIVATE
        - CANARY
        eventCategories:
        - InstanceEvent
        - ServiceEvent
        eventPriorities:
        - Critical
        - High
        eventTypes:
        - UnhealthyInstance
        - UserSignUp
      properties:
        alertTypes:
          description: Types of alerts to route to this channel (optional)
          example:
          - Alarm
          - Notification
          items:
            description: The type of the alert
            example: Alarm|Notification
            type: string
          type: array
        environmentTypes:
          description: Types of environments to route to this channel (optional)
          example:
          - PROD
          - PRIVATE
          - CANARY
          items:
            description: The type of service environment
            example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
            type: string
          type: array
        eventCategories:
          description: Categories of events to route to this channel
          example:
          - InstanceEvent
          - ServiceEvent
          items:
            description: The category of the service provider specific event
            example: InstanceEvent|ServiceEvent|UserEvent|IdentityProviderEvent
            type: string
          type: array
        eventPriorities:
          description: Priorities of events to route to this channel
          example:
          - Critical
          - High
          items:
            description: The priority of the event
            example: Critical|High|Medium|Low
            type: string
          type: array
        eventTypes:
          description: Types of events to route to this channel (optional)
          example:
          - UnhealthyInstance
          - UserSignUp
          items:
            description: The type of the service provider specific event
            example: UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
            type: string
          type: array
      required:
      - alertTypes
      - environmentTypes
      - eventCategories
      - eventPriorities
      - eventTypes
      type: object
    ChartValuesRef:
      example:
        name: my-layer
        scope:
          '{{ $sys.cloudProviderName }}': aws
        values:
          global:
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: omnistrate.com/managed-by
                      operator: In
                      values:
                      - omnistrate
        valuesFile:
          gitConfiguration:
            accessToken: my-token
            commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
            referenceName: tags/v1.0.0
            repositoryUrl: https://github.com/username/myrepo
            userName: my-user
          path: helm/values/production.yaml
      properties:
        name:
          description: The name of the layer
          example: my-layer
          type: string
        scope:
          additionalProperties:
            example: Sed minus earum sapiente maiores explicabo officia.
            type: string
          description: "Scope condition for applying these chart values (can be used\
            \ with either values or valuesFile). Key is the parameter name which supports\
            \ template expressions like '{{ $sys.cloudProviderName }}', value is the\
            \ expected value. "
          example:
            '{{ $sys.cloudProviderName }}': aws
          type: object
        values:
          description: Inline chart values as a map (mutually exclusive with valuesFile)
          example:
            global:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: omnistrate.com/managed-by
                        operator: In
                        values:
                        - omnistrate
        valuesFile:
          $ref: "#/components/schemas/ValuesFile"
      type: object
    CheckIfContainerImageAccessibleRequest:
      example:
        image: library/mysql:5.7
        imageRegistry: docker.io
        password: password
        token: il
        username: username
      properties:
        image:
          description: Name of the image along with the tag. Include the repository
            name if the image is not from the official repository
          example: library/mysql:5.7
          type: string
        imageRegistry:
          description: Registry where the image is stored
          example: docker.io
          type: string
        password:
          description: Password to access the image registry
          example: password
          type: string
        token:
          description: JWT token used to perform authorization
          example: jkr
          minLength: 1
          type: string
        username:
          description: Username to access the image registry
          example: username
          type: string
      required:
      - image
      - imageRegistry
      - token
      type: object
    CheckIfContainerImageAccessibleResult:
      example:
        errorMsg: Ducimus repellendus sed laudantium.
        imageAccessible: false
      properties:
        errorMsg:
          description: Error message if the image is not accessible
          example: Sit in.
          type: string
        imageAccessible:
          description: Indicates if the image is accessible
          example: true
          type: boolean
      required:
      - imageAccessible
      type: object
    CloudProviderHealthSummary:
      example:
        cloudProvider: aws
        deployingInstances: 2875436408145806531
        healthyInstances: 7332019178452860446
        message: Cloud provider is healthy
        regionalHealthSummary:
          Et similique nihil similique quod molestias.:
            deployingInstances: 5368477830127649303
            deploymentCellHealthSummary:
              Facere voluptatem at alias et molestias beatae.:
                deployingInstances: 140941459220726652
                healthyInstances: 2469040421288542176
                hostClusterID: hc-12345678
                message: Cell is healthy
                status: Healthy
                totalInstances: 3903839146191449670
                unhealthyInstances: 6179807114901378760
                unknownInstances: 7464467265783535263
            healthyInstances: 4906411778649624403
            message: Region is healthy
            region: us-east-1
            status: Healthy
            totalInstances: 7838072593245651223
            unhealthyInstances: 8234245034027001273
            unknownInstances: 7377689956902808442
          Inventore recusandae et voluptatem debitis.:
            deployingInstances: 5368477830127649303
            deploymentCellHealthSummary:
              Facere voluptatem at alias et molestias beatae.:
                deployingInstances: 140941459220726652
                healthyInstances: 2469040421288542176
                hostClusterID: hc-12345678
                message: Cell is healthy
                status: Healthy
                totalInstances: 3903839146191449670
                unhealthyInstances: 6179807114901378760
                unknownInstances: 7464467265783535263
            healthyInstances: 4906411778649624403
            message: Region is healthy
            region: us-east-1
            status: Healthy
            totalInstances: 7838072593245651223
            unhealthyInstances: 8234245034027001273
            unknownInstances: 7377689956902808442
          Ipsum voluptatibus veniam quod placeat.:
            deployingInstances: 5368477830127649303
            deploymentCellHealthSummary:
              Facere voluptatem at alias et molestias beatae.:
                deployingInstances: 140941459220726652
                healthyInstances: 2469040421288542176
                hostClusterID: hc-12345678
                message: Cell is healthy
                status: Healthy
                totalInstances: 3903839146191449670
                unhealthyInstances: 6179807114901378760
                unknownInstances: 7464467265783535263
            healthyInstances: 4906411778649624403
            message: Region is healthy
            region: us-east-1
            status: Healthy
            totalInstances: 7838072593245651223
            unhealthyInstances: 8234245034027001273
            unknownInstances: 7377689956902808442
        status: Healthy
        totalInstances: 4704966460528644208
        unhealthyInstances: 4047263062715980708
        unknownInstances: 2921725137363550986
      properties:
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        deployingInstances:
          description: The number of instances currently deploying
          example: 4540158483645956838
          format: int64
          type: integer
        healthyInstances:
          description: The number of healthy instances in the cloud provider
          example: 5235280508373535020
          format: int64
          type: integer
        message:
          description: The status message
          example: Cloud provider is healthy
          type: string
        regionalHealthSummary:
          additionalProperties:
            $ref: "#/components/schemas/RegionalHealthSummary"
          description: The summary of health by region
          example:
            Deleniti voluptatibus nostrum.:
              deployingInstances: 5368477830127649303
              deploymentCellHealthSummary:
                Facere voluptatem at alias et molestias beatae.:
                  deployingInstances: 140941459220726652
                  healthyInstances: 2469040421288542176
                  hostClusterID: hc-12345678
                  message: Cell is healthy
                  status: Healthy
                  totalInstances: 3903839146191449670
                  unhealthyInstances: 6179807114901378760
                  unknownInstances: 7464467265783535263
              healthyInstances: 4906411778649624403
              message: Region is healthy
              region: us-east-1
              status: Healthy
              totalInstances: 7838072593245651223
              unhealthyInstances: 8234245034027001273
              unknownInstances: 7377689956902808442
            Nihil ut.:
              deployingInstances: 5368477830127649303
              deploymentCellHealthSummary:
                Facere voluptatem at alias et molestias beatae.:
                  deployingInstances: 140941459220726652
                  healthyInstances: 2469040421288542176
                  hostClusterID: hc-12345678
                  message: Cell is healthy
                  status: Healthy
                  totalInstances: 3903839146191449670
                  unhealthyInstances: 6179807114901378760
                  unknownInstances: 7464467265783535263
              healthyInstances: 4906411778649624403
              message: Region is healthy
              region: us-east-1
              status: Healthy
              totalInstances: 7838072593245651223
              unhealthyInstances: 8234245034027001273
              unknownInstances: 7377689956902808442
          type: object
        status:
          description: The status of the cloud provider
          example: Healthy
          type: string
        totalInstances:
          description: The total number of instances in the cloud provider
          example: 1532889476182827665
          format: int64
          type: integer
        unhealthyInstances:
          description: The number of unhealthy instances in the cloud provider
          example: 462825891269251004
          format: int64
          type: integer
        unknownInstances:
          description: The number of instances with unknown status
          example: 347713438587698793
          format: int64
          type: integer
      required:
      - cloudProvider
      - deployingInstances
      - healthyInstances
      - message
      - regionalHealthSummary
      - status
      - totalInstances
      - unhealthyInstances
      type: object
    CloudProvidersConfigReadiness:
      additionalProperties: true
      description: The readiness of the cloud providers configurations
      example:
        aws:
          resourceA: missing terraform configuration
          resourceB: missing cloudformation configuration
      type: object
    ClusterEndpoint:
      example:
        endpoint: https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
        healthStatus: HEALTHY
        networkingType: PUBLIC
        openPorts:
        - 30000
        - 30001
        primary: true
      properties:
        endpoint:
          default: ""
          description: The endpoint
          example: https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
          type: string
        healthStatus:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        networkingType:
          description: The networking type for this resource
          example: PUBLIC
          type: string
        openPorts:
          description: The open ports
          example:
          - 30000
          - 30001
          items:
            example: 8696676472684006775
            format: int64
            type: integer
          type: array
        primary:
          default: false
          description: Whether this is the primary endpoint
          example: true
          type: boolean
      type: object
    CompleteOAuthConnectionRequest:
      example:
        code: ac_12345678
        state: "12345678"
        token: aw9
      properties:
        code:
          description: Authorization code from Stripe
          example: ac_12345678
          type: string
        state:
          description: Random string used on the authorize URL
          example: "12345678"
          type: string
        token:
          description: JWT token used to perform authorization
          example: oa
          minLength: 1
          type: string
      required:
      - token
      type: object
    CompleteOAuthConnectionResult:
      example:
        stripeUserID: acct_12345678
      properties:
        stripeUserID:
          description: Stripe User ID
          example: acct_12345678
          type: string
      type: object
    ConsumptionServiceAuthRequest:
      example:
        password: Perferendis ut et aut voluptatem nemo accusamus.
        username: Rerum architecto aut sapiente dolore nihil possimus.
      properties:
        password:
          example: Numquam dolorem laboriosam quia eligendi assumenda.
          type: string
        username:
          example: Nam qui culpa.
          type: string
      required:
      - password
      - username
      type: object
    ConsumptionServiceAuthResult:
      example:
        token: 9cg
      properties:
        token:
          description: JWT token used to perform authorization
          example: 87p
          minLength: 1
          type: string
      required:
      - token
      type: object
    ContactusRequest:
      example:
        company: ABC
        email: abc@gmail.com
        message: this is a test
        name: John Doe
      properties:
        company:
          example: ABC
          minLength: 1
          type: string
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        message:
          example: this is a test
          minLength: 1
          type: string
        name:
          example: John Doe
          minLength: 1
          type: string
      required:
      - company
      - email
      - message
      - name
      type: object
    CopyProductTierRequest:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        billingProductID: abc123
        description: A premium product tier
        documentation: Any documentation
        exportUsageMetering: true
        exportUsageMeteringConfig:
          GCS:
            GCSBucketName: my_billing_bucket_name
          S3:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
            S3BucketRegion: us-east-1
        gcpRegions:
        - us-central1
        maxNumberOfInstances: 5
        name: Premium
        planDescription: A premium plan
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        pricing:
          price1: value1
        privateRegions:
        - n/a
        serviceId: s-12345678
        serviceModelId: sm-12345678
        sourceId: pt-12345678
        support: Any support
        targetTierType: OMNISTRATE_DEDICATED_TENANCY
        token: pza
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Nemo quia aspernatur omnis rerum voluptatem.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this product tier is available on
          example:
          - northcentralus
          items:
            example: Facere aut rerum in inventore veniam id.
            type: string
          type: array
        billingProductID:
          description: Optional billing product ID for tax purposes
          example: abc123
          type: string
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        exportUsageMetering:
          description: Export usage metering data
          example: true
          type: boolean
        exportUsageMeteringConfig:
          additionalProperties: true
          description: Export usage metering data configuration
          example:
            GCS:
              GCSBucketName: my_billing_bucket_name
            S3:
              S3BucketArn: arn:aws:s3:::my_billing_bucket_name
              S3BucketRegion: us-east-1
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Quod asperiores explicabo qui minus.
            type: string
          type: array
        maxNumberOfInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricePerUnit:
          additionalProperties: true
          description: Price per unit.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        pricing:
          description: Pricing
          example:
            price1: value1
        privateRegions:
          description: The Private cloud regions that this product tier is available
            on
          example:
          - n/a
          items:
            example: Architecto et voluptate molestias rerum.
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Molestiae at quasi vel amet harum.
          type: string
        sourceId:
          description: ID of a Product Tier
          example: Et et et id autem laudantium repellat.
          type: string
        support:
          description: Support
          example: Any support
          type: string
        targetTierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        token:
          description: JWT token used to perform authorization
          example: 3p
          minLength: 1
          type: string
      required:
      - description
      - name
      - serviceId
      - serviceModelId
      - sourceId
      - token
      type: object
    CopyServiceModelRequest:
      example:
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        features:
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        name: MySQL multi-writer service hosted model
        serviceId: s-12345678
        sourceId: sm-12345678
        targetServiceModelType: CUSTOMER_HOSTED
        targetTierType: OMNISTRATE_DEDICATED_TENANCY
        token: t
      properties:
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            description: ID of an Account Config
            example: Sit nihil sit quia rerum tempora.
            type: string
          type: array
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        features:
          description: Enabled service model features
          example:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          items:
            $ref: "#/components/schemas/ServiceModelFeatureDetail"
          type: array
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceId:
          description: ID of a Service Model
          example: Repudiandae sed quia.
          type: string
        targetServiceModelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        targetTierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        token:
          description: JWT token used to perform authorization
          example: "1"
          minLength: 1
          type: string
      required:
      - description
      - name
      - serviceId
      - sourceId
      - targetServiceModelType
      - token
      type: object
    CostDataPerDate:
      example:
        cost: 100
        costByInstanceType:
          t2.large:
            numVMs: 5
            totalCost: 50
            totalUptimeHours: 100
          t2.micro:
            numVMs: 5
            totalCost: 50
            totalUptimeHours: 100
        date: 2023-01-01T10:00:00Z
      properties:
        cost:
          description: The total cost of the fleet on that date
          example: 100
          format: double
          type: number
        costByInstanceType:
          additionalProperties:
            $ref: "#/components/schemas/InstanceTypeCost"
          description: The cost of the fleet by instance type on that date
          example:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          type: object
        date:
          description: The date of the cost data
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
      required:
      - cost
      - date
      type: object
    CreateCustomerOnboardingRequest:
      example:
        name: Saepe eveniet similique voluptas odio.
        token: ps3
      properties:
        name:
          description: "DEPRECATED: Name will be generated automatically."
          example: A eum commodi quasi ut.
          type: string
        token:
          description: JWT token used to perform authorization
          example: o
          minLength: 1
          type: string
      required:
      - token
      type: object
    CreateCustomerOnboardingRequest2:
      example:
        name: Maiores unde omnis.
      properties:
        name:
          description: "DEPRECATED: Name will be generated automatically."
          example: Consequatur omnis dolor rerum sit illo repellat.
          type: string
      type: object
    CreateIdentityProviderRequest:
      example:
        authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
        disabled: false
        emailIdentifiers: company.com
        environmentType: Est hic voluptatibus vel.
        identityProviderName: Google
        loginButtonIconUrl: https://example.com/icon.png
        loginButtonText: Login with Google
        name: Google for my company
        scopes: openid email profile
        token: t8w
        tokenEndpoint: https://oauth2.googleapis.com/token
        userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
      properties:
        authorizationEndpoint:
          description: The authorization endpoint of the Identity Provider
          example: https://accounts.google.com/o/oauth2/auth
          type: string
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
        disabled:
          description: Whether the Identity Provider is disabled
          example: false
          type: boolean
        emailIdentifiers:
          description: The email identifiers to use for the Identity Provider
          example: company.com
          type: string
        environmentType:
          description: The type of environment to filter costs by
          example: Nihil dolores aliquid maiores aperiam ea.
          type: string
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        loginButtonIconUrl:
          description: The URL of the icon to use for the login button
          example: https://example.com/icon.png
          type: string
        loginButtonText:
          description: The text to use for the login button
          example: Login with Google
          type: string
        name:
          description: The name of the Identity Provider
          example: Google for my company
          type: string
        scopes:
          description: The scopes to request from the Identity Provider
          example: openid email profile
          type: string
        token:
          description: JWT token used to perform authorization
          example: "31"
          minLength: 1
          type: string
        tokenEndpoint:
          description: The token endpoint of the Identity Provider
          example: https://oauth2.googleapis.com/token
          type: string
        userInfoEndpoint:
          description: The user info endpoint of the Identity Provider
          example: https://www.googleapis.com/oauth2/v3/userinfo
          type: string
      required:
      - clientId
      - clientSecret
      - identityProviderName
      - token
      type: object
    CreateNotificationChannelRequest:
      example:
        email:
          to: notify@example.com
        name: My Channel
        pagerDuty:
          APIKey: e93facc47f2d4b2b88272b3a647afe7d-fictional-integration-key
        slack:
          webhookUrl: https://hooks.slack.com/services/...
        subscription:
          alertTypes:
          - Alarm
          - Notification
          environmentTypes:
          - PROD
          - PRIVATE
          - CANARY
          eventCategories:
          - InstanceEvent
          - ServiceEvent
          eventPriorities:
          - Critical
          - High
          eventTypes:
          - UnhealthyInstance
          - UserSignUp
        token: tv
        webhook:
          method: POST
          url: https://example.com/notify
      properties:
        email:
          $ref: "#/components/schemas/EmailConfiguration"
        name:
          description: Name of the channel
          example: My Channel
          type: string
        pagerDuty:
          $ref: "#/components/schemas/PagerDutyConfiguration"
        slack:
          $ref: "#/components/schemas/SlackConfiguration"
        subscription:
          $ref: "#/components/schemas/ChannelSubscription"
        token:
          description: JWT token used to perform authorization
          example: kt
          minLength: 1
          type: string
        webhook:
          $ref: "#/components/schemas/WebhookConfiguration"
      required:
      - name
      - subscription
      - token
      type: object
    CreateNotificationChannelRequest2:
      example:
        email:
          to: notify@example.com
        name: My Channel
        pagerDuty:
          APIKey: e93facc47f2d4b2b88272b3a647afe7d-fictional-integration-key
        slack:
          webhookUrl: https://hooks.slack.com/services/...
        subscription:
          alertTypes:
          - Alarm
          - Notification
          environmentTypes:
          - PROD
          - PRIVATE
          - CANARY
          eventCategories:
          - InstanceEvent
          - ServiceEvent
          eventPriorities:
          - Critical
          - High
          eventTypes:
          - UnhealthyInstance
          - UserSignUp
        webhook:
          method: POST
          url: https://example.com/notify
      properties:
        email:
          $ref: "#/components/schemas/EmailConfiguration"
        name:
          description: Name of the channel
          example: My Channel
          type: string
        pagerDuty:
          $ref: "#/components/schemas/PagerDutyConfiguration"
        slack:
          $ref: "#/components/schemas/SlackConfiguration"
        subscription:
          $ref: "#/components/schemas/ChannelSubscription"
        webhook:
          $ref: "#/components/schemas/WebhookConfiguration"
      required:
      - name
      - subscription
      type: object
    CreatePipelineRequest:
      example:
        description: MySQL SaaS promotion pipeline
        name: my-pipeline
        serviceEnvironmentSequence:
        - se-12345678
        - se-23456789
        serviceId: s-12345678
        token: d
      properties:
        description:
          description: Description of the pipeline
          example: MySQL SaaS promotion pipeline
          type: string
        name:
          description: Name of the pipeline
          example: my-pipeline
          type: string
        serviceEnvironmentSequence:
          description: Sequence of service environments to be deployed in the pipeline
          example:
          - se-12345678
          - se-23456789
          items:
            description: ID of a Service Environment
            example: se-123456
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: x
          minLength: 1
          type: string
      required:
      - description
      - name
      - serviceEnvironmentSequence
      - serviceId
      - token
      type: object
    CreateProductTierRequest:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        billingProductID: abc123
        billingProviders:
        - STRIPE
        - BRING_YOUR_OWN
        defaultBillingProvider: STRIPE
        description: A premium product tier
        documentation: Any documentation
        exportUsageMetering: true
        exportUsageMeteringConfig:
          GCS:
            GCSBucketName: my_billing_bucket_name
          S3:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
            S3BucketRegion: us-east-1
        gcpRegions:
        - us-central1
        isDisabled: false
        maxNumberOfInstances: 5
        name: Premium
        planDescription: A premium plan
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        pricing:
          price1: value1
        privateRegions:
        - n/a
        serviceId: s-12345678
        serviceModelId: sm-12345678
        support: Any support
        tierType: OMNISTRATE_DEDICATED_TENANCY
        token: 36b
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Eos dicta enim at.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this product tier is available on
          example:
          - northcentralus
          items:
            example: Perspiciatis molestias.
            type: string
          type: array
        billingProductID:
          description: Optional billing product ID for tax purposes
          example: abc123
          type: string
        billingProviders:
          description: List of billing providers to be used for the product tier
          example:
          - STRIPE
          - BRING_YOUR_OWN
          items:
            description: The billing provider type
            example: STRIPE|BRING_YOUR_OWN
            type: string
          type: array
        defaultBillingProvider:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        exportUsageMetering:
          description: Export usage metering data
          example: true
          type: boolean
        exportUsageMeteringConfig:
          additionalProperties: true
          description: Export usage metering data configuration
          example:
            GCS:
              GCSBucketName: my_billing_bucket_name
            S3:
              S3BucketArn: arn:aws:s3:::my_billing_bucket_name
              S3BucketRegion: us-east-1
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Numquam sit atque ratione.
            type: string
          type: array
        isDisabled:
          description: Create the product tier in a disabled state. Enabling the product
            tier will let end-customers subscribe and use the service plan.
          example: false
          type: boolean
        maxNumberOfInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricePerUnit:
          additionalProperties: true
          description: Price per unit.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        pricing:
          description: Pricing
          example:
            price1: value1
        privateRegions:
          description: The private regions that this product tier is available on
          example:
          - n/a
          items:
            example: Eveniet consectetur harum aut.
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Ab culpa at corrupti vitae.
          type: string
        support:
          description: Support
          example: Any support
          type: string
        tierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        token:
          description: JWT token used to perform authorization
          example: q6
          minLength: 1
          type: string
      required:
      - description
      - name
      - planDescription
      - serviceId
      - serviceModelId
      - tierType
      - token
      type: object
    CreateProxyResourceInstanceRequest:
      example:
        cloud_provider: aws
        productTierKey: premium
        region: us-east-1
        requestParams:
          param1: value1
          param2: value2
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        sourceResourceKey: mysql
        token: p81
      properties:
        cloud_provider:
          description: The cloud provider name
          example: aws
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        region:
          description: The region code
          example: us-east-1
          type: string
        requestParams:
          description: The request parameters
          example:
            param1: value1
            param2: value2
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Voluptatem corporis.
          type: string
        sourceResourceKey:
          description: The serverless resource key
          example: mysql
          type: string
        token:
          description: JWT token used to perform authorization
          example: jf
          minLength: 1
          type: string
      required:
      - productTierKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - sourceResourceKey
      - token
      type: object
    CreateProxyResourceInstanceRequest2:
      example:
        cloud_provider: aws
        region: us-east-1
        requestParams:
          param1: value1
          param2: value2
      properties:
        cloud_provider:
          description: The cloud provider name
          example: aws
          type: string
        region:
          description: The region code
          example: us-east-1
          type: string
        requestParams:
          description: The request parameters
          example:
            param1: value1
            param2: value2
      type: object
    CreateProxyResourceInstanceResult:
      example:
        id: Facilis voluptatem earum dicta excepturi et non.
      properties:
        id:
          description: Proxy Resource Instance Id
          example: Velit non reprehenderit in qui necessitatibus ad.
          type: string
      type: object
    CreateResourceInstanceRequest:
      example:
        cloud_provider: aws
        custom_network_id: n-1234567890
        externalBillingId: external-billing-id-1234
        network_type: PUBLIC|INTERNAL
        onprem_platform: OpenShift
        productTierKey: premium
        productTierVersion: "1.0"
        region: us-east-1
        requestParams:
          param1: value1
          param2: value2
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: x9h
      properties:
        cloud_provider:
          description: The cloud provider name
          example: aws
          type: string
        custom_network_id:
          description: Custom network for resource
          example: n-1234567890
          type: string
        externalBillingId:
          description: This externalBillingId is deprecated and will be removed in
            the future
          example: external-billing-id-1234
          type: string
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        onprem_platform:
          description: OnPrem platform
          example: OpenShift
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        productTierVersion:
          description: The product tier version
          example: "1.0"
          type: string
        region:
          description: The region code
          example: us-east-1
          type: string
        requestParams:
          description: The request parameters
          example:
            param1: value1
            param2: value2
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Sunt quis excepturi quia.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: w8y
          minLength: 1
          type: string
      required:
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    CreateSaaSPortalCustomDomainRequest:
      example:
        customDomain: mycustomdomain.com
        description: My custom domain description
        environmentType: DEV
        name: MyCustomDomain
        token: w
      properties:
        customDomain:
          description: The custom domain
          example: mycustomdomain.com
          type: string
        description:
          description: The custom domain description
          example: My custom domain description
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        name:
          description: The custom domain name
          example: MyCustomDomain
          type: string
        token:
          description: JWT token used to perform authorization
          example: o0d
          minLength: 1
          type: string
      required:
      - customDomain
      - description
      - environmentType
      - name
      - token
      type: object
    CreateServiceEnvironmentRequest:
      example:
        autoApproveSubscription: false
        deploymentConfigId: dc-12345678
        description: The production environment for the MySQL multi-writer service
        name: Production
        serviceAuthPublicKey: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        serviceId: s-12345678
        sourceEnvironmentId: se-12345678
        token: z
        type: DEV
        visibility: PUBLIC
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        deploymentConfigId:
          description: ID of a Deployment Config
          example: Reprehenderit voluptatum sit.
          type: string
        description:
          description: A brief description of the service environment
          example: The production environment for the MySQL multi-writer service
          type: string
        name:
          description: Name of the Service Environment
          example: Production
          type: string
        serviceAuthPublicKey:
          description: PEM-encoded Public key part of the key used to sign the JWT
            tokens for the service control plane APIs
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: g
          minLength: 1
          type: string
        type:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - deploymentConfigId
      - description
      - name
      - serviceId
      - token
      type: object
    CreateServiceFromComposeSpecRequest:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        fileContent: Qui ut occaecati quo deserunt doloribus.
        fileFormat: text/plain
        fileName: mysql.yaml
        name: MySQL multi-writer service
        serviceLogoURL: http://williamson.name/judson.feest
        token: bx
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        fileContent:
          description: Base64 encoded Compose Spec YAML in docker compose format
          example: Expedita quia distinctio.
          type: string
        fileFormat:
          description: MIME type of file format
          example: text/plain
          type: string
        fileName:
          description: Name of compose spec YAML file that is uploaded
          example: mysql.yaml
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: http://weber.com/dorcas
          format: uri
          type: string
        token:
          description: JWT token used to perform authorization
          example: f
          minLength: 1
          type: string
      required:
      - description
      - fileContent
      - fileFormat
      - fileName
      - name
      - token
      type: object
    CreateServiceModelRequest:
      example:
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        features:
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        modelType: CUSTOMER_HOSTED
        name: MySQL multi-writer service hosted model
        serviceApiId: sa-12345678
        serviceId: s-12345678
        token: ht
      properties:
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            description: ID of an Account Config
            example: Sapiente vel nihil eaque beatae nisi assumenda.
            type: string
          type: array
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        features:
          description: Enabled service model features
          example:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          items:
            $ref: "#/components/schemas/ServiceModelFeatureDetail"
          type: array
        modelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        serviceApiId:
          description: ID of a Service API
          example: Maiores aliquam tempora et.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: mo
          minLength: 1
          type: string
      required:
      - description
      - modelType
      - name
      - serviceApiId
      - serviceId
      - token
      type: object
    CreateServiceRequest:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        name: MySQL multi-writer service
        serviceLogoURL: http://bashiriantrantow.info/claudia.dietrich
        token: s
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: http://schuster.org/willa_balistreri
          format: uri
          type: string
        token:
          description: JWT token used to perform authorization
          example: va
          minLength: 1
          type: string
      required:
      - description
      - name
      - token
      type: object
    CreateServicesOrchestrationRequest:
      example:
        orchestrationCreateDSL: Numquam dolores eos iure.
        token: k
      properties:
        orchestrationCreateDSL:
          description: base64 encoded content of service orchestration create DSL
          example: Est mollitia.
          type: string
        token:
          description: JWT token used to perform authorization
          example: tg
          minLength: 1
          type: string
      required:
      - orchestrationCreateDSL
      - token
      type: object
    CreateSubscriptionRequest:
      example:
        productTierId: pt-12345678
        serviceId: s-12345678
        token: s
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Eligendi adipisci et deserunt consequatur molestias.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 5me
          minLength: 1
          type: string
      required:
      - productTierId
      - serviceId
      - token
      type: object
    CreateSubscriptionRequestRequest:
      example:
        productTierId: pt-12345678
        serviceId: s-12345678
        token: lr
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Voluptas sint in.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: z8
          minLength: 1
          type: string
      required:
      - productTierId
      - serviceId
      - token
      type: object
    CreateUpgradePathRequest:
      example:
        configurationOverrides:
          instance-12345678:
            redis:
              customHelmValues:
                redis:
                  enabled: true
                  replicaCount: 2
          instance-abcdefgh:
            mysql:
              customHelmRuntimeConfiguration:
                waitForJobs: true
                waitForJobsTimeout: 10m
              customHelmValues:
                mysql:
                  enabled: true
        notifyCustomer: true
        productTierId: pt-12345678
        scheduledDate: 2020-01-01
        serviceId: s-12345678
        sourceVersion: "1.0"
        targetVersion: "2.0"
        token: q1r
        upgradeFilters:
          INSTANCE_IDS:
          - instance-12345678
          - instance-abcdefgh
      properties:
        configurationOverrides:
          additionalProperties: true
          description: Configuration overrides for the upgrade path per adopted instance
            ID. This currently only includes custom Helm chart values and Helm runtime
            configurations.
          example:
            instance-12345678:
              redis:
                customHelmValues:
                  redis:
                    enabled: true
                    replicaCount: 2
            instance-abcdefgh:
              mysql:
                customHelmRuntimeConfiguration:
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                customHelmValues:
                  mysql:
                    enabled: true
          type: object
        notifyCustomer:
          description: Whether to notify the end customer about the upgrade progress.
          example: true
          type: boolean
        productTierId:
          description: ID of a Product Tier
          example: Dolores doloribus consequuntur sint numquam facere ullam.
          type: string
        scheduledDate:
          description: The future date when the upgrade is planned to be executed.
            Empty for immediate upgrade.
          example: 2020-01-01
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceVersion:
          description: The source version of the upgrade path.
          example: "1.0"
          type: string
        targetVersion:
          description: The target version of the upgrade path.
          example: "2.0"
          type: string
        token:
          description: JWT token used to perform authorization
          example: 7pj
          minLength: 1
          type: string
        upgradeFilters:
          additionalProperties: true
          description: The filter to use to choose the instances to upgrade.
          example:
            INSTANCE_IDS:
            - instance-12345678
            - instance-abcdefgh
          type: object
      required:
      - productTierId
      - serviceId
      - sourceVersion
      - targetVersion
      - token
      - upgradeFilters
      type: object
    CreateUpgradePathRequest2:
      example:
        configurationOverrides:
          instance-12345678:
            redis:
              customHelmValues:
                redis:
                  enabled: true
                  replicaCount: 2
          instance-abcdefgh:
            mysql:
              customHelmRuntimeConfiguration:
                waitForJobs: true
                waitForJobsTimeout: 10m
              customHelmValues:
                mysql:
                  enabled: true
        notifyCustomer: true
        scheduledDate: 2020-01-01
        sourceVersion: "1.0"
        targetVersion: "2.0"
        upgradeFilters:
          INSTANCE_IDS:
          - instance-12345678
          - instance-abcdefgh
      properties:
        configurationOverrides:
          additionalProperties: true
          description: Configuration overrides for the upgrade path per adopted instance
            ID. This currently only includes custom Helm chart values and Helm runtime
            configurations.
          example:
            instance-12345678:
              redis:
                customHelmValues:
                  redis:
                    enabled: true
                    replicaCount: 2
            instance-abcdefgh:
              mysql:
                customHelmRuntimeConfiguration:
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                customHelmValues:
                  mysql:
                    enabled: true
          type: object
        notifyCustomer:
          description: Whether to notify the end customer about the upgrade progress.
          example: true
          type: boolean
        scheduledDate:
          description: The future date when the upgrade is planned to be executed.
            Empty for immediate upgrade.
          example: 2020-01-01
          type: string
        sourceVersion:
          description: The source version of the upgrade path.
          example: "1.0"
          type: string
        targetVersion:
          description: The target version of the upgrade path.
          example: "2.0"
          type: string
        upgradeFilters:
          additionalProperties:
            example:
            - Saepe blanditiis aut eius.
            - Dolorum laborum fugiat beatae quidem.
            - Qui culpa nesciunt qui et.
            items:
              example: Magnam quia molestiae optio dolor.
              type: string
            type: array
          description: The filter to use to choose the instances to upgrade.
          example:
            INSTANCE_IDS:
            - instance-12345678
            - instance-abcdefgh
          type: object
      required:
      - sourceVersion
      - targetVersion
      - upgradeFilters
      type: object
    CustomDNSEndpoint:
      example:
        aRecordTarget: 1.1.1.1
        cnameTarget: cname-target.com
        dnsHost: https://my-custom-endpoint.com
        dnsName: https://my-custom-endpoint.com
        enabled: true
        name: DNS to access the dashboard
        status: READY
      properties:
        aRecordTarget:
          example: 1.1.1.1
          type: string
        cnameTarget:
          example: cname-target.com
          type: string
        dnsHost:
          example: https://my-custom-endpoint.com
          type: string
        dnsName:
          description: "DEPRECATED: Use dnsHost instead"
          example: https://my-custom-endpoint.com
          type: string
        enabled:
          example: true
          type: boolean
        name:
          example: DNS to access the dashboard
          type: string
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
      required:
      - enabled
      type: object
    CustomDomain:
      example:
        clusterEndpoint: example.com
        customDomain: mycustomdomain.com
        description: My custom domain description
        environmentType: DEV
        name: MyCustomDomain
        status: READY
      properties:
        clusterEndpoint:
          description: The cluster endpoint for the saas portal instance
          example: example.com
          type: string
        customDomain:
          description: The custom domain
          example: mycustomdomain.com
          type: string
        description:
          description: The custom domain description
          example: My custom domain description
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        name:
          description: The custom domain name
          example: MyCustomDomain
          type: string
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
      required:
      - clusterEndpoint
      - customDomain
      - description
      - environmentType
      - name
      - status
      type: object
    CustomNetworkFleetDetail:
      description: Details of custom network used for instance
      example:
        cidr: 10.177.0.0/16
        id: n-12345678
        name: Prod us-east-1
        orgName: Company TM
      properties:
        cidr:
          description: CIDR block of the network
          example: 10.177.0.0/16
          type: string
        id:
          description: ID of a custom network
          example: Reiciendis et et aperiam.
          type: string
        name:
          description: User friendly network name
          example: Prod us-east-1
          type: string
        orgName:
          description: Name of organization that owns the network
          example: Company TM
          type: string
      type: object
    CustomNetworkResourceDetail:
      description: Details of custom network used for instance
      example:
        cidr: 10.177.0.0/16
        id: n-12345678
        name: Prod us-east-1
      properties:
        cidr:
          description: CIDR block of the network
          example: 10.177.0.0/16
          type: string
        id:
          description: ID of a custom network
          example: Quaerat ad rem sit velit.
          type: string
        name:
          description: User friendly network name
          example: Prod us-east-1
          type: string
      type: object
    CustomTag:
      description: Custom tag
      example:
        key: customKey
        value: customValue
      properties:
        key:
          description: Key of the custom tag
          example: customKey
          type: string
        value:
          description: Value of the custom tag
          example: customValue
          type: string
      required:
      - key
      - value
      type: object
    CustomerBillingProvider:
      example:
        balanceDueLink: https://billing.provider.com/balance-due
        logoURL: https://example.com/logo.png
        name: Stripe
        paymentConfigurable: true
        paymentConfigured: true
        paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
        type: STRIPE
      properties:
        balanceDueLink:
          description: The URL to the balance due page. Only present when the payment
            channel is BRING_YOUR_OWN
          example: https://billing.provider.com/balance-due
          type: string
        logoURL:
          description: The URL of the logo for the payment channel. Only present when
            the payment channel is BRING_YOUR_OWN
          example: https://example.com/logo.png
          type: string
        name:
          description: A custom name for the payment channel
          example: Stripe
          type: string
        paymentConfigurable:
          description: Whether the payment channel payment information can be configured.
          example: true
          type: boolean
        paymentConfigured:
          description: Whether the customer has configured their payment information.
          example: true
          type: boolean
        paymentInfoPortalURL:
          description: The URL from the billing provide to redirect users to so they
            can enter their payment information.  Only present when first adding payment
            information
          example: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
          type: string
        type:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
      required:
      - type
      type: object
    CustomerDeleteUserRequest:
      example:
        token: wp2
      properties:
        token:
          description: JWT token used to perform authorization
          example: r
          minLength: 1
          type: string
      required:
      - token
      type: object
    CustomerInviteUserRequest:
      example:
        email: abc@example.com
        token: z47
      properties:
        email:
          example: abc@example.com
          format: email
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: se
          minLength: 1
          type: string
      required:
      - email
      - token
      type: object
    CustomerLoginWithIdentityProviderRequest:
      example:
        authorizationCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        environmentType: DEV
        identityProviderName: Google
        invitedEmail: abc@gmail.com
        legalCompanyName: mywebsite
        redirectUri: https://www.example/redirect
        state: state
        token: 3l
      properties:
        authorizationCode:
          description: The authorization code from the Identity Provider
          example: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
          type: string
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        invitedEmail:
          description: Email address that the user was invited with
          example: abc@gmail.com
          format: email
          type: string
        legalCompanyName:
          example: mywebsite
          minLength: 1
          type: string
        redirectUri:
          description: The redirect URI used to get the authorization code
          example: https://www.example/redirect
          type: string
        state:
          description: The state parameter used to prevent CSRF attacks
          example: state
          type: string
        token:
          description: JWT token used to perform authorization
          example: i
          minLength: 1
          type: string
      required:
      - authorizationCode
      - token
      type: object
    CustomerLoginWithIdentityProviderResult:
      example:
        jwtToken: ""
      properties:
        jwtToken:
          description: The jwt token
          example: ""
          type: string
      required:
      - jwtToken
      type: object
    CustomerOnboarding:
      example:
        id: onboarding-1234567890
        isCompleted: true
        name: My Onboarding
        orgId: org-1234567890
        serviceId: service-1234567890
        stages:
        - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
          status: NOT_STARTED|COMPLETE|SKIPPED
        - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
          status: NOT_STARTED|COMPLETE|SKIPPED
        - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
          status: NOT_STARTED|COMPLETE|SKIPPED
        - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
          status: NOT_STARTED|COMPLETE|SKIPPED
        userId: user-1234567890
      properties:
        id:
          description: ID of a Customer Onboarding
          example: Est deleniti nostrum ullam.
          type: string
        isCompleted:
          description: Whether the onboarding is completed.
          example: true
          type: boolean
        name:
          description: The name of the onboarding.
          example: My Onboarding
          type: string
        orgId:
          description: ID of an Org
          example: Et ad et mollitia mollitia corrupti.
          type: string
        serviceId:
          description: The ID of the service associated with this onboarding.
          example: service-1234567890
          type: string
        stages:
          description: The stages of the onboarding.
          example:
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          items:
            $ref: "#/components/schemas/OnboardingStage"
          type: array
        userId:
          description: ID of a User
          example: Culpa iusto odio.
          type: string
      required:
      - id
      - isCompleted
      - orgId
      - stages
      - userId
      type: object
    CustomerResetPasswordRequest:
      example:
        email: abc@example.com
        token: c
      properties:
        email:
          example: abc@example.com
          format: email
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: e
          minLength: 1
          type: string
      required:
      - email
      - token
      type: object
    CustomerSigninRequest:
      example:
        email: abc@gmail.com
        environmentType: DEV
        hashedPassword: deprecated
        password: password
        token: n7m
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        hashedPassword:
          example: deprecated
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: xq9
          minLength: 1
          type: string
      required:
      - email
      - token
      type: object
    CustomerSigninResult:
      example:
        jwtToken: ""
      properties:
        jwtToken:
          description: The jwt token
          example: ""
          type: string
      required:
      - jwtToken
      type: object
    CustomerSignupRequest:
      example:
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        email: abc@gmail.com
        legalCompanyName: mywebsite
        name: John Doe
        password: password
        token: srq
      properties:
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        email:
          description: Email address of the end-user
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        legalCompanyName:
          default: ""
          example: mywebsite
          type: string
        name:
          description: Name of the end-user
          example: John Doe
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: "y"
          minLength: 1
          type: string
      required:
      - email
      - name
      - password
      - token
      type: object
    DebugHostClusterRequest:
      example:
        id: hc-12345678
        includeAmenitiesInstallationLogs: true
        token: 5y
      properties:
        id:
          description: ID of a Host Cluster
          example: Recusandae laudantium autem facere facere et.
          type: string
        includeAmenitiesInstallationLogs:
          description: Whether to include the installation logs of the amenities in
            the debug information
          example: true
          type: boolean
        token:
          description: JWT token used to perform authorization
          example: gt
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DebugHostClusterResult:
      example:
        customHelmExecutionLogsBase64:
          postgres: base64-encoded-log-data
          redis: base64-encoded-log-data
      properties:
        customHelmExecutionLogsBase64:
          additionalProperties:
            example: Voluptatem qui libero hic dolorum quibusdam laboriosam.
            type: string
          description: "Custom Helm execution logs for the host cluster, keyed by\
            \ namespace"
          example:
            postgres: base64-encoded-log-data
            redis: base64-encoded-log-data
          type: object
      type: object
    DebugResourceInstanceRequest:
      example:
        environmentId: se-12345678
        instanceId: instance-12345678
        serviceId: s-12345678
        token: c
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "3"
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - serviceId
      - token
      type: object
    DebugResourceInstanceResult:
      example:
        instanceId: instance-12345678
        resourcesDebug:
          mysql:
            debugData: Magnam voluptatibus quod aliquid sapiente fugiat.
            resourceId: r-12345678
      properties:
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        resourcesDebug:
          additionalProperties: true
          description: The debug information for individual instance resources
          example:
            mysql:
              debugData: Magnam voluptatibus quod aliquid sapiente fugiat.
              resourceId: r-12345678
          type: object
      required:
      - instanceId
      type: object
    DebugResourceResult:
      example:
        debugData: Assumenda non.
        resourceId: r-12345678
      properties:
        debugData:
          description: Individual debug data for the resource
          example: Ipsa voluptatibus suscipit aut minus.
        resourceId:
          description: ID of a resource
          example: Qui laboriosam perspiciatis dolorem quia.
          type: string
      required:
      - resourceId
      type: object
    DeleteAccountConfigRequest:
      example:
        id: ac-12345678
        token: qa
      properties:
        id:
          description: ID of an Account Config
          example: Veritatis voluptatem corporis.
          type: string
        token:
          description: JWT token used to perform authorization
          example: gh0
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteCustomerOnboardingRequest:
      example:
        id: onboarding-1234567890
        token: gkz
      properties:
        id:
          description: ID of a Customer Onboarding
          example: Impedit ex.
          type: string
        token:
          description: JWT token used to perform authorization
          example: vg
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteHostClusterRequest:
      example:
        id: hc-12345678
        token: cut
      properties:
        id:
          description: ID of a Host Cluster
          example: Rerum aut possimus quis pariatur quia.
          type: string
        token:
          description: JWT token used to perform authorization
          example: "5"
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteIdentityProviderRequest:
      example:
        id: idp-12345678
        token: m
      properties:
        id:
          description: ID of an Identity Provider
          example: Sit consequuntur et nihil aut fugit.
          type: string
        token:
          description: JWT token used to perform authorization
          example: z0u
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteNotificationChannelRequest:
      example:
        id: channel-12345678
        token: k
      properties:
        id:
          description: ID of a Notification Channel
          example: Reprehenderit perspiciatis.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 9g
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeletePipelineRequest:
      example:
        id: p-12345678
        serviceId: s-12345678
        token: v
      properties:
        id:
          description: ID of a Pipeline
          example: Nihil sit expedita quia reiciendis neque.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: vd
          minLength: 1
          type: string
      required:
      - token
      type: object
    DeleteProductTierRequest:
      example:
        id: pt-12345678
        serviceId: s-12345678
        token: 5n
      properties:
        id:
          description: ID of a Product Tier
          example: Quis quibusdam.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "y"
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteProxyResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        token: p85
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Fugiat omnis eaque.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 5c8
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    DeleteResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: i31
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Fugiat doloremque ex explicabo.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: mbs
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    DeleteSaaSPortalCustomDomainRequest:
      example:
        environmentType: DEV
        token: k
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        token:
          description: JWT token used to perform authorization
          example: "35"
          minLength: 1
          type: string
      required:
      - environmentType
      - token
      type: object
    DeleteSecretRequest:
      example:
        environmentType: DEV
        name: my-secret
        token: d
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        name:
          description: Name of the secret
          example: my-secret
          type: string
        token:
          description: JWT token used to perform authorization
          example: "16"
          minLength: 1
          type: string
      required:
      - environmentType
      - name
      - token
      type: object
    DeleteServiceEnvironmentRequest:
      example:
        id: se-12345678
        serviceId: s-12345678
        token: "26"
      properties:
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: d
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteServiceModelRequest:
      example:
        id: sm-12345678
        serviceId: s-12345678
        token: xq
      properties:
        id:
          description: ID of a Service Model
          example: Dolor dolor aut rerum.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 99c
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DeleteServiceRequest:
      example:
        id: s-12345678
        token: un
      properties:
        id:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: q
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteServicesOrchestrationRequest:
      example:
        id: so-12345678
        token: c
      properties:
        id:
          description: ID of a Services Orchestration
          example: Qui exercitationem mollitia nulla sed doloribus.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 4a
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteSubscriptionRequest:
      example:
        id: sub-12345678
        token: yn
      properties:
        id:
          description: ID of a Subscription
          example: Dolores enim laboriosam aut.
          type: string
        token:
          description: JWT token used to perform authorization
          example: zb5
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DeleteUserRequest:
      example:
        token: c5m
      properties:
        token:
          description: JWT token used to perform authorization
          example: "18"
          minLength: 1
          type: string
      required:
      - token
      type: object
    DemoRequest:
      example:
        company: ABC
        email: abc@gmail.com
        name: John Doe
        phone: +1-234567890
      properties:
        company:
          example: ABC
          minLength: 1
          type: string
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        name:
          example: John Doe
          minLength: 1
          type: string
        phone:
          example: +1-234567890
          type: string
      required:
      - company
      - email
      - name
      type: object
    DenySubscriptionRequestRequest:
      example:
        environmentId: se-12345678
        id: subr-12345678
        serviceId: s-12345678
        token: v
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        id:
          description: ID of a Subscription Request
          example: Sint error eum.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: zg
          minLength: 1
          type: string
      required:
      - environmentId
      - id
      - serviceId
      - token
      type: object
    DeploymentCellConfiguration:
      example:
        Amenities:
        - Description: Ensures high availability across multiple zones.
          IsManaged: true
          Name: Prometheus
          Properties:
            Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
            Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
          Type: HelmChart
        - Description: Ensures high availability across multiple zones.
          IsManaged: true
          Name: Prometheus
          Properties:
            Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
            Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
          Type: HelmChart
      properties:
        Amenities:
          description: The amenities available in the deployment cell.
          example:
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
              Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
            Type: HelmChart
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
              Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
            Type: HelmChart
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
              Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
            Type: HelmChart
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
              Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
            Type: HelmChart
          items:
            $ref: "#/components/schemas/Amenity"
          type: array
      type: object
    DeploymentCellConfigurations:
      example:
        DeploymentCellConfigurationPerCloudProvider:
          aws|azure|gcp|all:
            Amenities:
            - Description: Ensures high availability across multiple zones.
              IsManaged: true
              Name: Prometheus
              Properties:
                Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
                Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et
                  tenetur.
              Type: HelmChart
            - Description: Ensures high availability across multiple zones.
              IsManaged: true
              Name: Prometheus
              Properties:
                Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
                Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et
                  tenetur.
              Type: HelmChart
            - Description: Ensures high availability across multiple zones.
              IsManaged: true
              Name: Prometheus
              Properties:
                Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
                Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et
                  tenetur.
              Type: HelmChart
      properties:
        DeploymentCellConfigurationPerCloudProvider:
          additionalProperties: true
          description: The deployment cell configurations per cloud provider.
          example:
            aws|azure|gcp|all:
              Amenities:
              - Description: Ensures high availability across multiple zones.
                IsManaged: true
                Name: Prometheus
                Properties:
                  Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
                  Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero
                    et tenetur.
                Type: HelmChart
              - Description: Ensures high availability across multiple zones.
                IsManaged: true
                Name: Prometheus
                Properties:
                  Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
                  Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero
                    et tenetur.
                Type: HelmChart
              - Description: Ensures high availability across multiple zones.
                IsManaged: true
                Name: Prometheus
                Properties:
                  Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
                  Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero
                    et tenetur.
                Type: HelmChart
          type: object
      type: object
    DeploymentCellHealthDetail:
      example:
        cloudProvider: aws
        hostClusterID: hc-12345678
        instanceHealth:
          Incidunt illum eveniet.:
            instanceID: instance-12345678
            lifeCycleStatus: RUNNING
            resourcesHealth:
              Aliquam doloribus sunt velit consequuntur ipsum quia.:
                nodesHealth:
                  Delectus beatae quia at neque.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                  Id architecto rem.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                resourceID: resource-12345678
                resourceKey: primary
                resourceType: Kustomize
                status: HEALTHY
              Culpa et architecto.:
                nodesHealth:
                  Delectus beatae quia at neque.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                  Id architecto rem.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                resourceID: resource-12345678
                resourceKey: primary
                resourceType: Kustomize
                status: HEALTHY
              Eum et amet asperiores tempora inventore rerum.:
                nodesHealth:
                  Delectus beatae quia at neque.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                  Id architecto rem.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                resourceID: resource-12345678
                resourceKey: primary
                resourceType: Kustomize
                status: HEALTHY
            status: HEALTHY
          Porro et esse vel laboriosam non recusandae.:
            instanceID: instance-12345678
            lifeCycleStatus: RUNNING
            resourcesHealth:
              Aliquam doloribus sunt velit consequuntur ipsum quia.:
                nodesHealth:
                  Delectus beatae quia at neque.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                  Id architecto rem.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                resourceID: resource-12345678
                resourceKey: primary
                resourceType: Kustomize
                status: HEALTHY
              Culpa et architecto.:
                nodesHealth:
                  Delectus beatae quia at neque.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                  Id architecto rem.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                resourceID: resource-12345678
                resourceKey: primary
                resourceType: Kustomize
                status: HEALTHY
              Eum et amet asperiores tempora inventore rerum.:
                nodesHealth:
                  Delectus beatae quia at neque.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                  Id architecto rem.:
                    availabilityZone: us-east-2a
                    connectivityStatus: HEALTHY
                    diskHealth: HEALTHY
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    integrationsHealth:
                      CustomerObservabilityHealth: HEALTHY
                      InternalObservabilityHealth: HEALTHY
                    loadStatus: LOAD_NORMAL
                    nodeHealth: HEALTHY
                    nodeName: postgres-0
                    ports:
                    - 80
                    - 443
                    processHealth: HEALTHY
                    processLiveness: HEALTHY
                    status: HEALTHY
                resourceID: resource-12345678
                resourceKey: primary
                resourceType: Kustomize
                status: HEALTHY
            status: HEALTHY
        regionCode: us-west-1
        serviceEnvironmentName: prod
        serviceName: mysql
      properties:
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        hostClusterID:
          description: ID of a Host Cluster
          example: Delectus et atque accusantium adipisci provident omnis.
          type: string
        instanceHealth:
          additionalProperties:
            $ref: "#/components/schemas/InstanceHealthSummary"
          description: The health summary of the instances by instance ID
          example:
            Assumenda sunt et.:
              instanceID: instance-12345678
              lifeCycleStatus: RUNNING
              resourcesHealth:
                Aliquam doloribus sunt velit consequuntur ipsum quia.:
                  nodesHealth:
                    Delectus beatae quia at neque.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                    Id architecto rem.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                  resourceID: resource-12345678
                  resourceKey: primary
                  resourceType: Kustomize
                  status: HEALTHY
                Culpa et architecto.:
                  nodesHealth:
                    Delectus beatae quia at neque.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                    Id architecto rem.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                  resourceID: resource-12345678
                  resourceKey: primary
                  resourceType: Kustomize
                  status: HEALTHY
                Eum et amet asperiores tempora inventore rerum.:
                  nodesHealth:
                    Delectus beatae quia at neque.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                    Id architecto rem.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                  resourceID: resource-12345678
                  resourceKey: primary
                  resourceType: Kustomize
                  status: HEALTHY
              status: HEALTHY
            Temporibus doloremque minus quod.:
              instanceID: instance-12345678
              lifeCycleStatus: RUNNING
              resourcesHealth:
                Aliquam doloribus sunt velit consequuntur ipsum quia.:
                  nodesHealth:
                    Delectus beatae quia at neque.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                    Id architecto rem.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                  resourceID: resource-12345678
                  resourceKey: primary
                  resourceType: Kustomize
                  status: HEALTHY
                Culpa et architecto.:
                  nodesHealth:
                    Delectus beatae quia at neque.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                    Id architecto rem.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                  resourceID: resource-12345678
                  resourceKey: primary
                  resourceType: Kustomize
                  status: HEALTHY
                Eum et amet asperiores tempora inventore rerum.:
                  nodesHealth:
                    Delectus beatae quia at neque.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                    Id architecto rem.:
                      availabilityZone: us-east-2a
                      connectivityStatus: HEALTHY
                      diskHealth: HEALTHY
                      endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                      integrationsHealth:
                        CustomerObservabilityHealth: HEALTHY
                        InternalObservabilityHealth: HEALTHY
                      loadStatus: LOAD_NORMAL
                      nodeHealth: HEALTHY
                      nodeName: postgres-0
                      ports:
                      - 80
                      - 443
                      processHealth: HEALTHY
                      processLiveness: HEALTHY
                      status: HEALTHY
                  resourceID: resource-12345678
                  resourceKey: primary
                  resourceType: Kustomize
                  status: HEALTHY
              status: HEALTHY
          type: object
        regionCode:
          description: The region code of the host cluster
          example: us-west-1
          type: string
        serviceEnvironmentName:
          description: The name of the service environment
          example: prod
          type: string
        serviceName:
          description: The name of the service
          example: mysql
          type: string
      type: object
    DeploymentCellHealthRequest:
      example:
        hostClusterID: hc-12345678
        serviceEnvironmentID: se-12345678
        serviceID: s-12345678
        token: "y"
      properties:
        hostClusterID:
          description: ID of a Host Cluster
          example: Nostrum deleniti.
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: zc
          minLength: 1
          type: string
      required:
      - token
      type: object
    DeploymentCellHealthSummary:
      example:
        deployingInstances: 8120939320136606128
        healthyInstances: 924951964140290992
        hostClusterID: hc-12345678
        message: Cell is healthy
        status: Healthy
        totalInstances: 6248988188805020463
        unhealthyInstances: 6391146837843801497
        unknownInstances: 9155768156919313888
      properties:
        deployingInstances:
          description: The number of instances currently deploying
          example: 5447984446554274616
          format: int64
          type: integer
        healthyInstances:
          description: The number of healthy instances in the cell
          example: 3111217183569659540
          format: int64
          type: integer
        hostClusterID:
          description: ID of a Host Cluster
          example: Ratione voluptas quam odio vitae doloremque voluptas.
          type: string
        message:
          description: The status message
          example: Cell is healthy
          type: string
        status:
          description: The status of the cell
          example: Healthy
          type: string
        totalInstances:
          description: The total number of instances in the cell
          example: 1513500961975629167
          format: int64
          type: integer
        unhealthyInstances:
          description: The number of unhealthy instances in the cell
          example: 4400685524756319114
          format: int64
          type: integer
        unknownInstances:
          description: The number of instances with unknown status
          example: 4884870014546348391
          format: int64
          type: integer
      required:
      - deployingInstances
      - healthyInstances
      - hostClusterID
      - message
      - status
      - totalInstances
      - unhealthyInstances
      type: object
    DeploymentCellSearchRecord:
      example:
        cloudProvider: aws
        description: The PostgresDB for Omnistrate.
        id: hc-12345678
        regionCode: us-west-1
      properties:
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        description:
          description: The deployment cell description.
          example: The PostgresDB for Omnistrate.
          type: string
        id:
          description: The deployment cell ID.
          example: hc-12345678
          type: string
        regionCode:
          description: The region code of the deployment cell.
          example: us-west-1
          type: string
      required:
      - cloudProvider
      - description
      - id
      - regionCode
      type: object
    DescribeAccountConfigRequest:
      example:
        id: ac-12345678
        token: qos
      properties:
        id:
          description: ID of an Account Config
          example: Eum architecto debitis velit.
          type: string
        token:
          description: JWT token used to perform authorization
          example: "95"
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeAvailabilityZoneRequest:
      example:
        id: az-12345678
        token: av
      properties:
        id:
          description: ID of an AZ
          example: Totam eaque placeat.
          type: string
        token:
          description: JWT token used to perform authorization
          example: q4
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeAvailabilityZoneResult:
      example:
        cloudProviderName: aws
        code: us-east-1a
        description: US East (N. Virginia) Availability Zone A
        id: az-12345678
        regionCode: us-east-1
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        code:
          description: Cloud-provider native availability zone code
          example: us-east-1a
          type: string
        description:
          description: Description of the AvailabilityZone
          example: US East (N. Virginia) Availability Zone A
          type: string
        id:
          description: ID of an AZ
          example: Minima sint.
          type: string
        regionCode:
          description: Cloud-provider native region code
          example: us-east-1
          type: string
      required:
      - cloudProviderName
      - code
      - description
      - id
      - regionCode
      type: object
    DescribeCloudProviderCostRequest:
      example:
        endDate: 2024-01-01T10:00:00Z
        environmentType: DEV
        excludeCloudProviderIDs: "infra-12345678,infra-23456789"
        frequency: DAILY|MONTHLY
        includeCloudProviderIDs: "infra-12345678,infra-23456789"
        startDate: 2023-01-01T10:00:00Z
        token: y3c
      properties:
        endDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        excludeCloudProviderIDs:
          description: The cloud provider IDs to exclude from the cost data
          example: "infra-12345678,infra-23456789"
          type: string
        frequency:
          description: The frequency of the cost data
          example: DAILY|MONTHLY
          type: string
        includeCloudProviderIDs:
          description: The cloud provider IDs to include in the cost data
          example: "infra-12345678,infra-23456789"
          type: string
        startDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        token:
          description: JWT token used to perform authorization
          example: u
          minLength: 1
          type: string
      required:
      - endDate
      - environmentType
      - frequency
      - startDate
      - token
      type: object
    DescribeCloudProviderCostResult:
      example:
        cloudProviderCosts:
          infra-abcdefgh:
            cloudProviderName: aws
            cost:
            - cost: 100
              date: 2023-01-01T10:00:00Z
            - cost: 200
              date: 2023-01-02T10:00:00Z
            - cost: 145
              date: 2023-01-03T10:00:00Z
            totalCost: 445
      properties:
        cloudProviderCosts:
          additionalProperties: true
          description: The cost data for each cloud provider
          example:
            infra-abcdefgh:
              cloudProviderName: aws
              cost:
              - cost: 100
                date: 2023-01-01T10:00:00Z
              - cost: 200
                date: 2023-01-02T10:00:00Z
              - cost: 145
                date: 2023-01-03T10:00:00Z
              totalCost: 445
          type: object
      type: object
    DescribeCloudProviderRequest:
      example:
        id: infra-12345678
        token: c
      properties:
        id:
          description: ID of an CloudProvider
          example: Molestiae itaque velit.
          type: string
        token:
          description: JWT token used to perform authorization
          example: "78"
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeCloudProviderResult:
      example:
        description: Amazon Web Services
        id: infra-12345678
        name: aws
      properties:
        description:
          description: Description of the CloudProvider
          example: Amazon Web Services
          type: string
        id:
          description: ID of an CloudProvider
          example: Velit enim eveniet.
          type: string
        name:
          description: Name of the CloudProvider
          example: aws
          type: string
      required:
      - description
      - id
      - name
      type: object
    DescribeConsumptionBillingDetailsRequest:
      example:
        returnUrl: https://mysaasportal.com
        token: c6e
      properties:
        returnUrl:
          description: Return Url used to configure payment methods links
          example: https://mysaasportal.com
          type: string
        token:
          description: JWT token used to perform authorization
          example: "n"
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribeConsumptionBillingDetailsResult:
      example:
        billingProviders:
        - paymentConfigurable: true
          paymentConfigured: true
          paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
          type: STRIPE
        - balanceDueLink: https://billing.provider.com/balance-due
          logoURL: https://example.com/logo.png
          name: GovPay
          paymentConfigurable: false
          paymentConfigured: false
          paymentInfoPortalURL: null
          type: BRING_YOUR_OWN
        paymentConfigured: true
        paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
      properties:
        billingProviders:
          description: The billing providers available for the customer.
          example:
          - paymentConfigurable: true
            paymentConfigured: true
            paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
            type: STRIPE
          - balanceDueLink: https://billing.provider.com/balance-due
            logoURL: https://example.com/logo.png
            name: GovPay
            paymentConfigurable: false
            paymentConfigured: false
            paymentInfoPortalURL: null
            type: BRING_YOUR_OWN
          items:
            $ref: "#/components/schemas/CustomerBillingProvider"
          type: array
        paymentConfigured:
          description: Deprecated. Whether the customer has configured their payment
            information.
          example: true
          type: boolean
        paymentInfoPortalURL:
          description: Deprecated. The URL from the billing provide to redirect users
            to so they can enter their payment information.  Only present when first
            adding payment information
          example: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
          type: string
      required:
      - paymentConfigured
      type: object
    DescribeConsumptionBillingStatusRequest:
      example:
        token: dg
      properties:
        token:
          description: JWT token used to perform authorization
          example: fj9
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribeConsumptionBillingStatusResult:
      example:
        enabled: true
      properties:
        enabled:
          description: Whether billing is enabled
          example: true
          type: boolean
      type: object
    DescribeConsumptionUserBillingDetailsRequest:
      example:
        id: user-abcd1234
        token: 6be
      properties:
        id:
          description: ID of a User
          example: Placeat error suscipit alias hic eveniet qui.
          type: string
        token:
          description: JWT token used to perform authorization
          example: w
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeConsumptionUserBillingDetailsResult:
      example:
        billingEmbedURL: DEPRECATED
        name: John Dae
        paymentConfigured: true
        paymentInfoPortalURL: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
        userId: user-abcd1234
      properties:
        billingEmbedURL:
          description: DEPRECATED
          example: DEPRECATED
          type: string
        name:
          description: "DEPRECATED: The name of the user"
          example: John Dae
          type: string
        paymentConfigured:
          description: Whether the customer has configured their payment information.
          example: true
          type: boolean
        paymentInfoPortalURL:
          description: The URL from the billing provide to redirect users to so they
            can enter their payment information.  Only present when first adding payment
            information
          example: https://billing.provider.com/stripe-portal?customerId=cus_xxxxxxxxxxxxxx
          type: string
        userId:
          description: ID of a User
          example: Repudiandae non sit.
          type: string
      required:
      - paymentConfigured
      type: object
    DescribeCustomerOnboardingRequest:
      example:
        id: onboarding-1234567890
        token: t2
      properties:
        id:
          description: ID of a Customer Onboarding
          example: Ipsa non qui.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 6v
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeDeploymentCellCostRequest:
      example:
        endDate: 2024-01-01T10:00:00Z
        environmentType: DEV
        excludeCloudProviderIDs: "infra-12345678,infra-23456789"
        excludeDeploymentCellIDs: "hc-12345678,hc-23456789"
        excludeInstanceIDs: "instance-12345678,instance-23456789"
        excludeRegionIDs: "region-12345678,region-23456789"
        frequency: DAILY|MONTHLY
        includeCloudProviderIDs: "infra-12345678,infra-23456789"
        includeDeploymentCellIDs: "hc-12345678,hc-23456789"
        includeInstanceIDs: "instance-12345678,instance-23456789"
        includeRegionIDs: "region-12345678,region-23456789"
        startDate: 2023-01-01T10:00:00Z
        token: w
        topNInstances: 10
      properties:
        endDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        excludeCloudProviderIDs:
          description: The cloud provider IDs to exclude from the cost data
          example: "infra-12345678,infra-23456789"
          type: string
        excludeDeploymentCellIDs:
          description: The deployment cell IDs to exclude from the cost data
          example: "hc-12345678,hc-23456789"
          type: string
        excludeInstanceIDs:
          description: The instance IDs to exclude from the cost data
          example: "instance-12345678,instance-23456789"
          type: string
        excludeRegionIDs:
          description: The region IDs to exclude from the cost data
          example: "region-12345678,region-23456789"
          type: string
        frequency:
          description: The frequency of the cost data
          example: DAILY|MONTHLY
          type: string
        includeCloudProviderIDs:
          description: The cloud provider IDs to include in the cost data
          example: "infra-12345678,infra-23456789"
          type: string
        includeDeploymentCellIDs:
          description: The deployment cell IDs to include in the cost data
          example: "hc-12345678,hc-23456789"
          type: string
        includeInstanceIDs:
          description: The instance IDs to include in the cost data
          example: "instance-12345678,instance-23456789"
          type: string
        includeRegionIDs:
          description: The region IDs to include in the cost data
          example: "region-12345678,region-23456789"
          type: string
        startDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        token:
          description: JWT token used to perform authorization
          example: gcm
          minLength: 1
          type: string
        topNInstances:
          description: The number of top instances to return
          example: 10
          format: int64
          type: integer
      required:
      - endDate
      - environmentType
      - frequency
      - startDate
      - token
      type: object
    DescribeDeploymentCellCostResult:
      example:
        deploymentCellCosts:
          hc-abcdefgh:
            cloudProviderName: aws
            cost:
            - cost: 100
              date: 2023-01-01T10:00:00Z
            - cost: 200
              date: 2023-01-02T10:00:00Z
            - cost: 145
              date: 2023-01-03T10:00:00Z
            instancesCost:
            - cloudProviderName: aws
              instanceID: instance-12345678
              isDeleted: false
              productTierID: pt-12345678
              productTierName: Standard
              productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
              regionName: us-west-2
              serviceEnvironmentID: se-12345678
              serviceID: s-12345678
              subscriptionID: sub-12345678
              totalCost: 100
              utilization: 50
            regionName: us-west-2
            totalCost: 445
      properties:
        deploymentCellCosts:
          additionalProperties: true
          description: The cost data for each deployment cell
          example:
            hc-abcdefgh:
              cloudProviderName: aws
              cost:
              - cost: 100
                date: 2023-01-01T10:00:00Z
              - cost: 200
                date: 2023-01-02T10:00:00Z
              - cost: 145
                date: 2023-01-03T10:00:00Z
              instancesCost:
              - cloudProviderName: aws
                instanceID: instance-12345678
                isDeleted: false
                productTierID: pt-12345678
                productTierName: Standard
                productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
                regionName: us-west-2
                serviceEnvironmentID: se-12345678
                serviceID: s-12345678
                subscriptionID: sub-12345678
                totalCost: 100
                utilization: 50
              regionName: us-west-2
              totalCost: 445
          type: object
      type: object
    DescribeHostClusterRequest:
      example:
        id: hc-12345678
        token: w
      properties:
        id:
          description: ID of a Host Cluster
          example: Possimus voluptate.
          type: string
        token:
          description: JWT token used to perform authorization
          example: "75"
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeIdentityProviderRequest:
      example:
        id: idp-12345678
        token: mi
      properties:
        id:
          description: ID of an Identity Provider
          example: Delectus dolores est dignissimos fuga nihil exercitationem.
          type: string
        token:
          description: JWT token used to perform authorization
          example: vq
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeIdentityProviderResult:
      example:
        authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
        disabled: false
        emailIdentifiers: company.com
        environmentType: production
        id: idp-12345678
        identityProviderName: Google
        loginButtonIconUrl: https://example.com/icon.png
        loginButtonText: Login with Google
        name: Google for my company
        scopes: openid email profile
        status: Ready
        tokenEndpoint: https://oauth2.googleapis.com/token
        userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
      properties:
        authorizationEndpoint:
          description: The authorization endpoint of the Identity Provider
          example: https://accounts.google.com/o/oauth2/auth
          type: string
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
        disabled:
          description: Whether the Identity Provider is disabled
          example: false
          type: boolean
        emailIdentifiers:
          description: The email identifiers to use for the Identity Provider
          example: company.com
          type: string
        environmentType:
          description: The type of environment for the Identity Provider
          example: production
          type: string
        id:
          description: ID of an Identity Provider
          example: Nemo labore reiciendis ipsum harum.
          type: string
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        loginButtonIconUrl:
          description: The URL of the icon to use for the login button
          example: https://example.com/icon.png
          type: string
        loginButtonText:
          description: The text to use for the login button
          example: Login with Google
          type: string
        name:
          description: The name of the Identity Provider
          example: Google for my company
          type: string
        scopes:
          description: The scopes to request from the Identity Provider
          example: openid email profile
          type: string
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        tokenEndpoint:
          description: The token endpoint of the Identity Provider
          example: https://oauth2.googleapis.com/token
          type: string
        userInfoEndpoint:
          description: The user info endpoint of the Identity Provider
          example: https://www.googleapis.com/oauth2/v3/userinfo
          type: string
      required:
      - clientId
      - id
      - identityProviderName
      - status
      type: object
    DescribeIdentityProviderTypeResult:
      example:
        SupportCustomEndpoints: true
        SupportCustomScopes: false
        identityProviderName: Google
      properties:
        SupportCustomEndpoints:
          description: Whether the Identity Provider supports custom endpoints
          example: true
          type: boolean
        SupportCustomScopes:
          description: Whether the Identity Provider supports custom scopes
          example: false
          type: boolean
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
      required:
      - SupportCustomEndpoints
      - SupportCustomScopes
      - identityProviderName
      type: object
    DescribeInventorySummary:
      example:
        environmentId: se-12345678
        serviceId: s-12345678
        token: "9"
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: x8v
          minLength: 1
          type: string
      required:
      - environmentId
      - serviceId
      - token
      type: object
    DescribeInventorySummaryResult:
      example:
        EnvironmentCount: 1
        ImagesCount: 1
        InfraConfigCount: 1
        InstancesCount: 1
        OrganizationCount: 1
        ResourceCount: 1
        UserCount: 1
        environmentId: se-12345678
        serviceId: s-12345678
      properties:
        EnvironmentCount:
          description: The number of environments in the service.
          example: 1
          format: int64
          type: integer
        ImagesCount:
          description: The number of images in the service.
          example: 1
          format: int64
          type: integer
        InfraConfigCount:
          description: The number of infrastructure configurations in the service.
          example: 1
          format: int64
          type: integer
        InstancesCount:
          description: The number of instances in the service.
          example: 1
          format: int64
          type: integer
        OrganizationCount:
          description: The number of active organizations using the service.
          example: 1
          format: int64
          type: integer
        ResourceCount:
          description: The number of resources in the service.
          example: 1
          format: int64
          type: integer
        UserCount:
          description: The number of active users using the service.
          example: 1
          format: int64
          type: integer
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - EnvironmentCount
      - ImagesCount
      - InfraConfigCount
      - InstancesCount
      - OrganizationCount
      - ResourceCount
      - UserCount
      - environmentId
      - serviceId
      type: object
    DescribeNetworkRequest:
      example:
        id: n-12345678
        serviceId: s-12345678
        token: z
      properties:
        id:
          description: ID of a Network
          example: Enim ea.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: nxf
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeNetworkResult:
      example:
        cidr: 10.0.0.0/16
        id: n-12345678
        networkConfigId: nc-12345678
        serviceId: s-12345678
        type: PUBLIC
        vunitId: vu-12345678
      properties:
        cidr:
          description: CIDR block for the network
          example: 10.0.0.0/16
          type: string
        id:
          description: ID of a Network
          example: Molestiae in dignissimos enim ipsa eius in.
          type: string
        networkConfigId:
          description: ID of a Network Config
          example: Voluptatem aut distinctio possimus.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        type:
          description: The type of network
          example: PUBLIC
          type: string
        vunitId:
          description: ID of a VUnit
          example: Minima neque amet dolores.
          type: string
      type: object
    DescribeNotificationChannelRequest:
      example:
        id: channel-12345678
        token: 5o
      properties:
        id:
          description: ID of a Notification Channel
          example: Dignissimos culpa.
          type: string
        token:
          description: JWT token used to perform authorization
          example: mde
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeOrganizationRequest:
      example:
        environmentId: se-12345678
        organizationId: o-12345678
        serviceId: s-12345678
        token: 1b
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        organizationId:
          description: ID of an Org
          example: Aliquam id itaque voluptatem voluptatem.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "61"
          minLength: 1
          type: string
      required:
      - environmentId
      - organizationId
      - serviceId
      - token
      type: object
    DescribePipelineRequest:
      example:
        id: p-12345678
        serviceId: s-12345678
        token: h7j
      properties:
        id:
          description: ID of a Pipeline
          example: Nisi doloribus quia atque sunt magni et.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ky4
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribePipelineResult:
      example:
        description: MySQL SaaS promotion pipeline
        id: p-12345678
        name: my-pipeline
        serviceEnvironmentSequence:
        - se-12345678
        - se-23456789
        serviceId: s-12345678
      properties:
        description:
          description: Description of the pipeline
          example: MySQL SaaS promotion pipeline
          type: string
        id:
          description: ID of a Pipeline
          example: Soluta et iste ut totam consequatur.
          type: string
        name:
          description: Name of the pipeline
          example: my-pipeline
          type: string
        serviceEnvironmentSequence:
          description: Sequence of service environments to be deployed in the pipeline
          example:
          - se-12345678
          - se-23456789
          items:
            description: ID of a Service Environment
            example: se-123456
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      type: object
    DescribePlanRequest:
      example:
        token: "22"
      properties:
        token:
          description: JWT token used to perform authorization
          example: l
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribePlanResult:
      example:
        modifiedAt: 2023-01-01T00:00:00Z
        paymentConfigured: true
        paymentInfoPortalURL: https://billing.stripe.com/p/session/abc123
        planCoreHourCost: 0.05
        planDescription: The starter plan is priced at 'X' units
        planFrequency: MONTHLY
        planMonthlyCost: 49
        planName: STARTER
        startDate: 2023-01-01
      properties:
        modifiedAt:
          description: The time the plan was last modified
          example: 2023-01-01T00:00:00Z
          type: string
        paymentConfigured:
          description: Whether the customer has configured their payment information.
          example: true
          type: boolean
        paymentInfoPortalURL:
          description: The URL from Stripe to configure payment information
          example: https://billing.stripe.com/p/session/abc123
          type: string
        planCoreHourCost:
          description: The cost per core hour of this plan
          example: 0.05
          format: double
          type: number
        planDescription:
          description: The description of the plan
          example: The starter plan is priced at 'X' units
          type: string
        planFrequency:
          description: This parameter tells you if the plan is charged monthly or
            yearly
          example: MONTHLY
          type: string
        planMonthlyCost:
          description: The minimum monthly cost of this plan
          example: 49
          format: double
          type: number
        planName:
          description: This parameter is used to select the appropriate Product Plan
          example: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
          type: string
        startDate:
          description: The date that the plan starts
          example: 2023-01-01
          type: string
      required:
      - planName
      type: object
    DescribeProductTierRequest:
      example:
        id: pt-12345678
        serviceId: s-12345678
        token: q69
        version: "3.0"
      properties:
        id:
          description: ID of a Product Tier
          example: Voluptas aliquid qui minima.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 03u
          minLength: 1
          type: string
        version:
          description: The version number for the specific version set
          example: "3.0"
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeProductTierResult:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        apiGroups:
          r-12345678: v1
          r-23456789: v2
          r-34567890: v3
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        billingProductID: abc123
        billingProviders:
        - STRIPE
        - BRING_YOUR_OWN
        cloudProvidersConfigReadiness:
          aws:
            resourceA: missing terraform configuration
            resourceB: missing cloudformation configuration
        defaultBillingProvider: STRIPE
        description: A premium product tier
        documentation: Any documentation
        enabledFeatures:
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        exportUsageMetering: true
        exportUsageMeteringConfig:
          GCS:
            GCSBucketName: my_billing_bucket_name
          S3:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
            S3BucketRegion: us-east-1
        features:
          LOGS: true
          METRICS: false
        gcpRegions:
        - us-central1
        id: pt-12345678
        isDisabled: false
        key: premium
        maxNumberOfInstances: 5
        name: Premium
        planDescription: A premium plan
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        pricing:
          price1: value1
        privateRegions:
        - n/a
        serviceId: s-12345678
        serviceModelId: sm-12345678
        support: Any support
        tierType: OMNISTRATE_DEDICATED_TENANCY
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        apiGroups:
          additionalProperties: true
          description: The resources that belong to this service API bundle and their
            active versions
          example:
            r-12345678: v1
            r-23456789: v2
            r-34567890: v3
          type: object
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Eveniet in.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this product tier is available on
          example:
          - northcentralus
          items:
            example: Pariatur sed animi quo iure.
            type: string
          type: array
        billingProductID:
          description: Optional billing product ID for tax purposes
          example: abc123
          type: string
        billingProviders:
          description: List of billing providers to be used for the product tier
          example:
          - STRIPE
          - BRING_YOUR_OWN
          items:
            description: The billing provider type
            example: STRIPE|BRING_YOUR_OWN
            type: string
          type: array
        cloudProvidersConfigReadiness:
          additionalProperties: true
          description: The readiness of the cloud providers configurations
          example:
            aws:
              resourceA: missing terraform configuration
              resourceB: missing cloudformation configuration
          type: object
        defaultBillingProvider:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        enabledFeatures:
          description: "The features that are enabled for this product tier, including\
            \ scope details and configuration"
          example:
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          items:
            $ref: "#/components/schemas/ProductTierFeatureDetail"
          type: array
        exportUsageMetering:
          description: Export usage metering data
          example: true
          type: boolean
        exportUsageMeteringConfig:
          additionalProperties: true
          description: Export usage metering data configuration
          example:
            GCS:
              GCSBucketName: my_billing_bucket_name
            S3:
              S3BucketArn: arn:aws:s3:::my_billing_bucket_name
              S3BucketRegion: us-east-1
          type: object
        features:
          additionalProperties: true
          description: The features that are enabled / disabled for this product tier
          example:
            LOGS: true
            METRICS: false
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Quod nobis ut aspernatur voluptatibus.
            type: string
          type: array
        id:
          description: ID of a Product Tier
          example: A tempora aut aut magnam esse.
          type: string
        isDisabled:
          description: Flag to indicate if the product tier is disabled.
          example: false
          type: boolean
        key:
          description: Unique Key of the product tier
          example: premium
          type: string
        maxNumberOfInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricePerUnit:
          additionalProperties: true
          description: Price per unit.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        pricing:
          description: Pricing
          example:
            price1: value1
        privateRegions:
          description: The Private regions that this product tier is available on
          example:
          - n/a
          items:
            example: Ut veritatis vel voluptatem.
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Quas vel omnis eaque pariatur.
          type: string
        support:
          description: Support
          example: Any support
          type: string
        tierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
      required:
      - description
      - documentation
      - id
      - isDisabled
      - key
      - name
      - planDescription
      - pricing
      - serviceId
      - serviceModelId
      - support
      - tierType
      type: object
    DescribeRegionCostRequest:
      example:
        endDate: 2024-01-01T10:00:00Z
        environmentType: DEV
        excludeCloudProviderIDs: "infra-12345678,infra-23456789"
        excludeRegionIDs: "region-12345678,region-23456789"
        frequency: DAILY|MONTHLY
        includeCloudProviderIDs: "infra-12345678,infra-23456789"
        includeRegionIDs: "region-12345678,region-23456789"
        startDate: 2023-01-01T10:00:00Z
        token: a
      properties:
        endDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        excludeCloudProviderIDs:
          description: The cloud provider IDs to exclude from the cost data
          example: "infra-12345678,infra-23456789"
          type: string
        excludeRegionIDs:
          description: The region IDs to exclude from the cost data
          example: "region-12345678,region-23456789"
          type: string
        frequency:
          description: The frequency of the cost data
          example: DAILY|MONTHLY
          type: string
        includeCloudProviderIDs:
          description: The cloud provider IDs to include in the cost data
          example: "infra-12345678,infra-23456789"
          type: string
        includeRegionIDs:
          description: The region IDs to include in the cost data
          example: "region-12345678,region-23456789"
          type: string
        startDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        token:
          description: JWT token used to perform authorization
          example: zxu
          minLength: 1
          type: string
      required:
      - endDate
      - environmentType
      - frequency
      - startDate
      - token
      type: object
    DescribeRegionCostResult:
      example:
        regionCosts:
          region-abcdefgh:
            cloudProviderName: aws
            cost:
            - cost: 100
              date: 2023-01-01T10:00:00Z
            - cost: 200
              date: 2023-01-02T10:00:00Z
            - cost: 145
              date: 2023-01-03T10:00:00Z
            regionName: us-west-2
            totalCost: 445
      properties:
        regionCosts:
          additionalProperties: true
          description: The cost data for each region
          example:
            region-abcdefgh:
              cloudProviderName: aws
              cost:
              - cost: 100
                date: 2023-01-01T10:00:00Z
              - cost: 200
                date: 2023-01-02T10:00:00Z
              - cost: 145
                date: 2023-01-03T10:00:00Z
              regionName: us-west-2
              totalCost: 445
          type: object
      type: object
    DescribeRegionRequest:
      example:
        id: region-12345678
        token: cc6
      properties:
        id:
          description: ID of a Region
          example: Sed omnis occaecati dolores nihil sit.
          type: string
        token:
          description: JWT token used to perform authorization
          example: v
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeRegionResult:
      example:
        cloudProviderId: infra-12345678
        cloudProviderName: aws
        code: us-east-1
        description: US East (N. Virginia)
        id: region-12345678
      properties:
        cloudProviderId:
          description: ID of an CloudProvider
          example: Totam dicta sed repudiandae ut maiores.
          type: string
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        code:
          description: Cloud-provider native region code
          example: us-east-1
          minLength: 1
          type: string
        description:
          description: Description of the Region
          example: US East (N. Virginia)
          minLength: 1
          type: string
        id:
          description: ID of a Region
          example: Magnam est cumque reprehenderit dolorum.
          type: string
      required:
      - cloudProviderId
      - cloudProviderName
      - code
      - description
      - id
      type: object
    DescribeResourceInstanceInstaller:
      example:
        environmentId: se-12345678
        instanceId: instance-12345678
        serviceId: s-12345678
        token: kx8
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: zq
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - serviceId
      - token
      type: object
    DescribeResourceInstanceInstallerResult:
      example:
        installerURL: Quia qui voluptates dolor.
        instanceId: instance-12345678
      properties:
        installerURL:
          description: URL from where the resource instance installer can be downloaded
          example: Qui et quo voluptatem saepe et.
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
      required:
      - instanceId
      type: object
    DescribeResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: "9"
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Sequi assumenda nihil reiciendis quas velit.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: cd
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    DescribeResourceInstanceRequestInternal:
      example:
        detail: true
        environmentId: se-12345678
        instanceId: instance-12345678
        serviceId: s-12345678
        token: 7f
      properties:
        detail:
          default: false
          description: Whether to include detailed information about the resource
            instance
          example: true
          type: boolean
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: us
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - serviceId
      - token
      type: object
    DescribeResourceInstanceResult:
      example:
        active: true
        autoscalingEnabled: true
        awsAccountID: "123456789012"
        azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
        backupStatus:
          backupPeriodInHours: 2
          backupRetentionInDays: 7
          earliestRestoreTime: 2021-09-01T00:00:00Z
          lastBackupTime: 2021-09-01T00:00:00Z
        cloud_provider: aws
        created_at: 2023-01-10T00:00:00Z
        createdByUserId: user-12345678
        createdByUserName: John Doe
        currentReplicas: "2"
        customNetworkDetail:
          cidr: 10.177.0.0/16
          id: n-12345678
          name: Prod us-east-1
        detailedNetworkTopology:
          r-abcd1234:
            allowedIPRanges:
            - 0.0.0.0/0
            clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            clusterPorts:
            - 3306
            isJob: false
            jobMetrics:
            - additionalData:
                exitCode: 0
                status: Succeeded
              endTime: 2023-01-01T10:05:00Z
              metricType: cpu_core_seconds
              startTime: 2023-01-01T10:00:00Z
              value: 120.5
            - additionalData:
                peakMemoryUsage: 512MB
              endTime: 2023-01-01T10:05:00Z
              metricType: memory_mb_seconds
              startTime: 2023-01-01T10:00:00Z
              value: 2560
            main: true
            networkingType: PUBLIC
            nodes:
            - availabilityZone: us-east-2a
              endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              healthStatus: healthy
              id: primary-0
              ports:
              - 3306
              status: RUNNING
            privateNetworkCIDR: 10.0.0.2/24
            privateNetworkID: n-1234abcd
            publiclyAccessible: true
            resourceKey: primary
            resourceName: Primary MySQL Instance
        externalPayerId: external-payer-id-1234
        gcpProjectID: my-project
        highAvailability: true
        id: instance-abcd1234
        instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
        kubernetesDashboardEndpoint:
          dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
          deploymentCellID: hc-12345678
        last_modified_at: 2023-01-20T00:00:00Z
        maintenanceTasks:
          backups:
          - backup_id: bk-12345678
          upgrade_paths:
          - upgrade_path_id: up-9876543
            upgrade_path_instance_status: PENDING
            upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
            upgrade_path_status: IN_PROGRESS
          - upgrade_path_id: up-12345548
            upgrade_path_instance_status: PENDING
            upgrade_path_released_at: 2023-01-01T09:00:00Z
            upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
            upgrade_path_status: SCHEDULED
        maxReplicas: "1"
        minReplicas: "1"
        network_type: PUBLIC|INTERNAL
        productTierFeatures:
          LOGS:
            auth:
              password: px3c4d5f6g7h8i
              username: abcd1234
            enabled: true
            websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
          METRICS:
            enabled: false
        region: us-east-1
        resourceID: r-abcd1234
        result_params:
          param1: value1
          param2: value2
        serverlessEnabled: true
        status: RUNNING
        subscriptionId: sub-abcd1234
        subscriptionLicense:
          certificateBase64: public-cert
          expirationDate: 2024-01-01T10:00:00Z
          licenseBase64: license-file
        subscriptionStatus: ACTIVE
        tierVersion: "1.0"
      properties:
        active:
          description: True if this resource instance has associated infrastructure
            deployed
          example: true
          type: boolean
        autoscalingEnabled:
          description: Whether the instance has autoscaling enabled
          example: true
          type: boolean
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 0fa05079-dd73-4b88-babc-05537817604a
          type: string
        backupStatus:
          $ref: "#/components/schemas/BackupStatus"
        cloud_provider:
          description: The cloud provider name
          example: aws
          type: string
        created_at:
          description: The instance creation time
          example: 2023-01-10T00:00:00Z
          type: string
        createdByUserId:
          description: ID of a User
          example: Dolor rerum quis aliquam reprehenderit ut temporibus.
          type: string
        createdByUserName:
          description: The name of the user that created the resource instance
          example: John Doe
          type: string
        currentReplicas:
          description: The current number of replicas
          example: "2"
          type: string
        customNetworkDetail:
          $ref: "#/components/schemas/CustomNetworkResourceDetail"
        detailedNetworkTopology:
          additionalProperties: true
          description: The detailed network topology
          example:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              isJob: false
              jobMetrics:
              - additionalData:
                  exitCode: 0
                  status: Succeeded
                endTime: 2023-01-01T10:05:00Z
                metricType: cpu_core_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 120.5
              - additionalData:
                  peakMemoryUsage: 512MB
                endTime: 2023-01-01T10:05:00Z
                metricType: memory_mb_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 2560
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: primary
              resourceName: Primary MySQL Instance
          type: object
        externalPayerId:
          description: The external payer id to record which customer should pay for
            this resource instance
          example: external-payer-id-1234
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        highAvailability:
          description: Whether the instance is High Availability
          example: true
          type: boolean
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        instanceLoadStatus:
          description: The load status of a pod
          example: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          type: string
        kubernetesDashboardEndpoint:
          $ref: "#/components/schemas/KubernetesDashboardEndpoint"
        last_modified_at:
          description: The instance update time
          example: 2023-01-20T00:00:00Z
          type: string
        maintenanceTasks:
          additionalProperties: true
          description: "Pending actions or maintenance tasks for the resource instance,\
            \ with action type as key and reference key as value."
          example:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          type: object
        maxReplicas:
          description: The maximum number of replicas
          example: "1"
          type: string
        minReplicas:
          description: The minimum number of replicas
          example: "1"
          type: string
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        productTierFeatures:
          additionalProperties: true
          description: The product tier features
          example:
            LOGS:
              auth:
                password: px3c4d5f6g7h8i
                username: abcd1234
              enabled: true
              websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
            METRICS:
              enabled: false
          type: object
        region:
          description: The region code
          example: us-east-1
          type: string
        resourceID:
          description: ID of a resource
          example: Enim error hic cupiditate qui.
          type: string
        result_params:
          description: Custom result parameters
          example:
            param1: value1
            param2: value2
        serverlessEnabled:
          description: Whether the instance has serverless enabled
          example: true
          type: boolean
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        subscriptionId:
          description: Subscription ID
          example: sub-abcd1234
          type: string
        subscriptionLicense:
          $ref: "#/components/schemas/SubscriptionLicense"
        subscriptionStatus:
          description: Subscription Status
          example: ACTIVE|SUSPENDED|TERMINATED|CANCELLED
          type: string
        tierVersion:
          description: The tier version of the resource instance.
          example: "1.0"
          type: string
      type: object
    DescribeResourceRequest:
      example:
        environmentId: se-12345678
        productTierId: pt-12345678
        resourceId: r-12345678
        serviceId: s-12345678
        serviceModelId: sm-12345678
        token: mtz
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Inventore blanditiis similique aliquid at dolorum earum.
          type: string
        resourceId:
          description: ID of a resource
          example: Tenetur adipisci qui quo dolores quasi ducimus.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Culpa doloremque sit quisquam animi dolores.
          type: string
        token:
          description: JWT token used to perform authorization
          example: ji
          minLength: 1
          type: string
      required:
      - environmentId
      - productTierId
      - resourceId
      - serviceId
      - serviceModelId
      - token
      type: object
    DescribeServiceEnvironmentRequest:
      example:
        id: se-12345678
        serviceId: s-12345678
        token: ty
      properties:
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: gjm
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeServiceEnvironmentResult:
      example:
        autoApproveSubscription: false
        deploymentConfigId: dc-12345678
        description: The production environment for the MySQL multi-writer service
        id: se-12345678
        key: production
        name: Production
        roleType: admin
        saasPortalStatus: READY
        saasPortalUrl: https://saas-portal.example.com
        serviceAuthPublicKey: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        serviceId: s-12345678
        sourceEnvironmentId: se-12345678
        type: DEV
        visibility: PUBLIC
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        deploymentConfigId:
          description: ID of a Deployment Config
          example: Sunt id enim illo in ratione.
          type: string
        description:
          description: A brief description of the service environment
          example: The production environment for the MySQL multi-writer service
          type: string
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        key:
          description: Unique Key of the Service Environment
          example: production
          type: string
        name:
          description: Name of the Service Environment
          example: Production
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        saasPortalStatus:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        saasPortalUrl:
          description: The URL of the SaaS portal for this environment type
          example: https://saas-portal.example.com
          type: string
        serviceAuthPublicKey:
          description: PEM-encoded Public key part of the key used to sign the JWT
            tokens for the service control plane APIs
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        type:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - deploymentConfigId
      - description
      - id
      - key
      - name
      - serviceId
      - type
      - visibility
      type: object
    DescribeServiceModelRequest:
      example:
        id: sm-12345678
        serviceId: s-12345678
        token: ud
      properties:
        id:
          description: ID of a Service Model
          example: Modi consectetur esse et voluptatem.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ln8
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeServiceModelResult:
      example:
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        activeAccountConfigIds:
          aws: ac-12345678
          gcp: ac-23456789
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        features:
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        id: sm-12345678
        key: mysql-multi-writer-service-hosted-model
        modelType: CUSTOMER_HOSTED
        name: MySQL multi-writer service hosted model
        productTiers:
        - pt-12345678
        - pt-87654321
        serviceApiId: sa-12345678
        serviceId: s-12345678
      properties:
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            description: ID of an Account Config
            example: Sit ut possimus omnis.
            type: string
          type: array
        activeAccountConfigIds:
          additionalProperties: true
          description: The active infrastructure account configuration IDs per cloud
            provider
          example:
            aws: ac-12345678
            gcp: ac-23456789
          type: object
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        features:
          description: Enabled service model features
          example:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          items:
            $ref: "#/components/schemas/ServiceModelFeatureDetail"
          type: array
        id:
          description: ID of a Service Model
          example: Explicabo placeat doloribus ipsum cupiditate perferendis aut.
          type: string
        key:
          description: The unique key for this service model
          example: mysql-multi-writer-service-hosted-model
          type: string
        modelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        productTiers:
          description: The product tiers associated with this service model
          example:
          - pt-12345678
          - pt-87654321
          items:
            description: ID of a Product Tier
            example: Voluptate neque rerum similique.
            type: string
          type: array
        serviceApiId:
          description: ID of a Service API
          example: Doloribus excepturi reiciendis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - description
      - id
      - key
      - modelType
      - name
      - serviceApiId
      - serviceId
      type: object
    DescribeServiceOfferingRequest:
      example:
        environmentType: DEV
        serviceId: s-12345678
        token: ud
        visibility: PRIVATE
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "98"
          minLength: 1
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - serviceId
      - token
      type: object
    DescribeServiceOfferingResourceRequest:
      example:
        instanceId: instance-12345678
        productTierId: pt-12345678
        productTierVersion: 1.0.0
        resourceId: r-12345678
        serviceId: s-12345678
        token: kq
      properties:
        instanceId:
          default: none
          description: The instance ID
          example: instance-12345678
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Id porro est sunt sequi officia.
          type: string
        productTierVersion:
          description: The product tier version
          example: 1.0.0
          type: string
        resourceId:
          description: ID of a resource
          example: Repudiandae voluptates.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: c
          minLength: 1
          type: string
      required:
      - resourceId
      - serviceId
      - token
      type: object
    DescribeServiceOfferingResourceResult:
      example:
        apis:
        - inputParameters:
          - defaultValue: null
            description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            modifiable: true
            options: null
            required: true
            type: string
          - defaultValue: option1
            description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            modifiable: true
            options:
            - option1
            - option2
            required: true
            type: string
          outputParameters:
          - description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            type: string
          - description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            type: string
          verb: create
        - inputParameters:
          - defaultValue: null
            description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            modifiable: true
            options: null
            required: true
            type: string
          outputParameters:
          - description: The name of the server
            displayName: Server Name
            isList: false
            key: serverName
            type: string
          - description: The type of the server
            displayName: Server Type
            isList: false
            key: serverType
            type: string
          verb: describe
      properties:
        apis:
          description: The APIs
          example:
          - inputParameters:
            - defaultValue: null
              description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              modifiable: true
              options: null
              required: true
              type: string
            - defaultValue: option1
              description: The type of the server
              displayName: Server Type
              isList: false
              key: serverType
              modifiable: true
              options:
              - option1
              - option2
              required: true
              type: string
            outputParameters:
            - description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              type: string
            - description: The type of the server
              displayName: Server Type
              isList: false
              key: serverType
              type: string
            verb: create
          - inputParameters:
            - defaultValue: null
              description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              modifiable: true
              options: null
              required: true
              type: string
            outputParameters:
            - description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              type: string
            - description: The type of the server
              displayName: Server Type
              isList: false
              key: serverType
              type: string
            verb: describe
          items:
            $ref: "#/components/schemas/APIEntity"
          type: array
      type: object
    DescribeServiceOfferingResult:
      example:
        createdAt: 2019-01-01T00:00:00Z
        isDeprecated: false
        offerings:
        - allowCreatesWhenPaymentNotConfigured: true
          assets:
            cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
            cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
          maxNumberOfInstances: 4
          productTierName: Premium
          productTierURLKey: premium
          resourceParameters:
          - name: MySQL
            urlKey: mysql
          - name: Redis
            urlKey: redis
          serviceAPIID: sa-12345678
          serviceAPIVersion: v1
          serviceEnvironmentName: Production
          serviceEnvironmentURLKey: prod
          serviceEnvironmentVisibility: PRIVATE
          serviceModelName: Bring Your Own Account
          serviceModelURLKey: byoa
        - productTierName: Basic
          productTierURLKey: basic
          resourceParameters:
          - name: MySQL
            urlKey: mysql
          - name: Redis
            urlKey: redis
          serviceAPIID: sa-abcdefgh
          serviceAPIVersion: v1
          serviceEnvironmentName: Production
          serviceEnvironmentURLKey: prod
          serviceEnvironmentVisibility: PUBLIC
          serviceModelName: Hosted
          serviceModelURLKey: hosted
        serviceDescription: MySQL is a relational database
        serviceId: s-12345678
        serviceName: MySQL
        serviceOrgId: org-12345678
        serviceProviderId: sp-9zrg9W8Are
        serviceProviderName: "Omnistrate, Inc."
        serviceURLKey: mysql
      properties:
        createdAt:
          description: The time the service was created
          example: 2019-01-01T00:00:00Z
          type: string
        isDeprecated:
          default: false
          description: Whether the service offering is deprecated
          example: false
          type: boolean
        offerings:
          description: The service offerings
          example:
          - allowCreatesWhenPaymentNotConfigured: true
            assets:
              cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
              cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
            maxNumberOfInstances: 4
            productTierName: Premium
            productTierURLKey: premium
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-12345678
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PRIVATE
            serviceModelName: Bring Your Own Account
            serviceModelURLKey: byoa
          - productTierName: Basic
            productTierURLKey: basic
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-abcdefgh
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PUBLIC
            serviceModelName: Hosted
            serviceModelURLKey: hosted
          items:
            $ref: "#/components/schemas/ServiceOffering"
          type: array
        serviceDescription:
          description: The service description
          example: MySQL is a relational database
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceName:
          description: The service name
          example: MySQL
          type: string
        serviceOrgId:
          description: ID of an Org
          example: Quisquam qui quae neque saepe placeat.
          type: string
        serviceProviderId:
          description: The id of the service provider
          example: sp-9zrg9W8Are
          type: string
        serviceProviderName:
          description: The name of the service provider
          example: "Omnistrate, Inc."
          type: string
        serviceURLKey:
          description: The service URL key
          example: mysql
          type: string
      required:
      - createdAt
      - isDeprecated
      - offerings
      - serviceDescription
      - serviceId
      - serviceName
      - serviceOrgId
      - serviceProviderId
      - serviceProviderName
      - serviceURLKey
      type: object
    DescribeServiceProviderOrganizationRequest:
      example:
        token: l3
      properties:
        token:
          description: JWT token used to perform authorization
          example: sv
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribeServiceProviderOrganizationResult:
      example:
        DefaultDeploymentCellConfigurations:
          DeploymentCellConfigurationPerCloudProvider:
            aws|azure|gcp|all:
              Amenities:
              - Description: Ensures high availability across multiple zones.
                IsManaged: true
                Name: Prometheus
                Properties:
                  Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
                  Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero
                    et tenetur.
                Type: HelmChart
              - Description: Ensures high availability across multiple zones.
                IsManaged: true
                Name: Prometheus
                Properties:
                  Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
                  Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero
                    et tenetur.
                Type: HelmChart
              - Description: Ensures high availability across multiple zones.
                IsManaged: true
                Name: Prometheus
                Properties:
                  Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
                  Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero
                    et tenetur.
                Type: HelmChart
        DeploymentCellConfigurationsPerEnv:
          PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL:
            DeploymentCellConfigurationPerCloudProvider:
              aws|azure|gcp|all:
                Amenities:
                - Description: Ensures high availability across multiple zones.
                  IsManaged: true
                  Name: Prometheus
                  Properties:
                    Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
                    Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero
                      et tenetur.
                  Type: HelmChart
                - Description: Ensures high availability across multiple zones.
                  IsManaged: true
                  Name: Prometheus
                  Properties:
                    Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
                    Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero
                      et tenetur.
                  Type: HelmChart
                - Description: Ensures high availability across multiple zones.
                  IsManaged: true
                  Name: Prometheus
                  Properties:
                    Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
                    Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero
                      et tenetur.
                  Type: HelmChart
        id: org-aKQ8G13QeR
      properties:
        DefaultDeploymentCellConfigurations:
          $ref: "#/components/schemas/DeploymentCellConfigurations"
        DeploymentCellConfigurationsPerEnv:
          additionalProperties: true
          description: The default deployment cell configurations for the organization
            per environment.
          example:
            PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL:
              DeploymentCellConfigurationPerCloudProvider:
                aws|azure|gcp|all:
                  Amenities:
                  - Description: Ensures high availability across multiple zones.
                    IsManaged: true
                    Name: Prometheus
                    Properties:
                      Architecto culpa assumenda.: Est ducimus quis perferendis et
                        sit.
                      Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero
                        et tenetur.
                    Type: HelmChart
                  - Description: Ensures high availability across multiple zones.
                    IsManaged: true
                    Name: Prometheus
                    Properties:
                      Architecto culpa assumenda.: Est ducimus quis perferendis et
                        sit.
                      Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero
                        et tenetur.
                    Type: HelmChart
                  - Description: Ensures high availability across multiple zones.
                    IsManaged: true
                    Name: Prometheus
                    Properties:
                      Architecto culpa assumenda.: Est ducimus quis perferendis et
                        sit.
                      Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero
                        et tenetur.
                    Type: HelmChart
          type: object
        id:
          description: ID of an Org
          example: Rerum rem et impedit facere.
          type: string
      type: object
    DescribeServiceRequest:
      example:
        id: s-12345678
        token: y0q
      properties:
        id:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 5fz
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeServiceResult:
      example:
        createdAt: 2019-01-01T00:00:00Z
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        id: s-12345678
        key: mysql
        name: MySQL multi-writer service
        roleType: admin
        serviceEnvironments:
        - id: se-12345678
          name: dev
          promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          saasPortalStatus: READY
          saasPortalUrl: https://saas-portal.example.com
          servicePlans:
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          sourceEnvironmentID: se-12345678
          sourceEnvironmentName: dev
          type: DEV
          visibility: private
        - id: se-12345678
          name: dev
          promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          saasPortalStatus: READY
          saasPortalUrl: https://saas-portal.example.com
          servicePlans:
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          sourceEnvironmentID: se-12345678
          sourceEnvironmentName: dev
          type: DEV
          visibility: private
        serviceLogoURL: Eius quia hic illo.
        serviceProviderID: sp-12345678
        serviceProviderName: "Omnistrate, Inc."
      properties:
        createdAt:
          description: The time the service was created
          example: 2019-01-01T00:00:00Z
          type: string
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        id:
          description: ID of a Service
          example: s-123456
          type: string
        key:
          description: Unique key of the service
          example: mysql
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        serviceEnvironments:
          description: List of service environments
          example:
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          items:
            $ref: "#/components/schemas/ServiceEnvironment"
          type: array
        serviceLogoURL:
          description: The logo for the service
          example: Asperiores ea delectus eos unde.
          type: string
        serviceProviderID:
          description: ID of a Service Provider
          example: Est blanditiis quis sint numquam aliquam id.
          type: string
        serviceProviderName:
          description: The name of the service provider
          example: "Omnistrate, Inc."
          type: string
      required:
      - createdAt
      - description
      - id
      - key
      - name
      - serviceEnvironments
      - serviceProviderID
      - serviceProviderName
      type: object
    DescribeServiceWorkflowRequest:
      example:
        environmentId: se-12345678
        id: submit-create-instance-plan-instance-50h74sj46
        serviceId: s-12345678
        token: pd
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        id:
          description: ID of the ServiceWorkflow
          example: submit-create-instance-plan-instance-50h74sj46
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ko1
          minLength: 1
          type: string
      required:
      - environmentId
      - id
      - serviceId
      - token
      type: object
    DescribeServiceWorkflowResult:
      example:
        Resources:
        - actionHookDeploymentStatus: IN_PROGRESS
          computeDeploymentStatus: IN_PROGRESS
          configurationStatus: IN_PROGRESS
          infraDeploymentStatus: IN_PROGRESS
          monitoringStatus: IN_PROGRESS
          networkDeploymentStatus: IN_PROGRESS
          resourceName: Galera
          status: IN_PROGRESS
          storageDeploymentStatus: IN_PROGRESS
        - actionHookDeploymentStatus: IN_PROGRESS
          computeDeploymentStatus: IN_PROGRESS
          configurationStatus: IN_PROGRESS
          infraDeploymentStatus: IN_PROGRESS
          monitoringStatus: IN_PROGRESS
          networkDeploymentStatus: IN_PROGRESS
          resourceName: Galera
          status: IN_PROGRESS
          storageDeploymentStatus: IN_PROGRESS
        - actionHookDeploymentStatus: IN_PROGRESS
          computeDeploymentStatus: IN_PROGRESS
          configurationStatus: IN_PROGRESS
          infraDeploymentStatus: IN_PROGRESS
          monitoringStatus: IN_PROGRESS
          networkDeploymentStatus: IN_PROGRESS
          resourceName: Galera
          status: IN_PROGRESS
          storageDeploymentStatus: IN_PROGRESS
        Workflow:
          ResourceCount: 4448496671015290240
          UpdatedBy: Anonymous
          UpdatedReason: Customer requested termination.
          WorkflowType: Service deployment.
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          cloudProvider: aws
          endTime: 2020-01-01T00:01:00Z
          gcpProjectID: my-project
          id: submit-create-instance-plan-instance-50h74sj46
          manualOverride:
            setAt: 2020-01-01T00:00:00Z
            setterUserId: user-12345678
            workflowId: wf-12345678
          orgName: my-org
          parentId: Itaque ipsa provident nihil cupiditate modi mollitia.
          planType: my-plan
          servicePlanName: my-product-tier-plan
          startTime: 2020-01-01T00:00:00Z
          status: IN_PROGRESS
        environmentId: se-12345678
        serviceId: s-12345678
      properties:
        Resources:
          description: List of resources with deployment status.
          example:
          - actionHookDeploymentStatus: IN_PROGRESS
            computeDeploymentStatus: IN_PROGRESS
            configurationStatus: IN_PROGRESS
            infraDeploymentStatus: IN_PROGRESS
            monitoringStatus: IN_PROGRESS
            networkDeploymentStatus: IN_PROGRESS
            resourceName: Galera
            status: IN_PROGRESS
            storageDeploymentStatus: IN_PROGRESS
          - actionHookDeploymentStatus: IN_PROGRESS
            computeDeploymentStatus: IN_PROGRESS
            configurationStatus: IN_PROGRESS
            infraDeploymentStatus: IN_PROGRESS
            monitoringStatus: IN_PROGRESS
            networkDeploymentStatus: IN_PROGRESS
            resourceName: Galera
            status: IN_PROGRESS
            storageDeploymentStatus: IN_PROGRESS
          - actionHookDeploymentStatus: IN_PROGRESS
            computeDeploymentStatus: IN_PROGRESS
            configurationStatus: IN_PROGRESS
            infraDeploymentStatus: IN_PROGRESS
            monitoringStatus: IN_PROGRESS
            networkDeploymentStatus: IN_PROGRESS
            resourceName: Galera
            status: IN_PROGRESS
            storageDeploymentStatus: IN_PROGRESS
          items:
            $ref: "#/components/schemas/ResourceDeploymentStatus"
          type: array
        Workflow:
          $ref: "#/components/schemas/ServiceWorkflow"
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - Workflow
      - environmentId
      - serviceId
      type: object
    DescribeServiceWorkflowSummaryRequest:
      example:
        environmentId: se-12345678
        serviceId: s-12345678
        token: cz
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: c6
          minLength: 1
          type: string
      required:
      - environmentId
      - serviceId
      - token
      type: object
    DescribeServiceWorkflowSummaryResult:
      example:
        ActiveWorkflowCount: 5384045271995206834
        CompletedWorkflowCount: 8311138948707578024
        FailedWorkflowCount: 1737767015055076269
        environmentId: se-12345678
        serviceId: s-12345678
      properties:
        ActiveWorkflowCount:
          description: Number of active workflows for the given service in the past
            24 hours.
          example: 7585795355570829608
          format: int64
          type: integer
        CompletedWorkflowCount:
          description: Number of completed workflows for the given service in the
            past 24 hours.
          example: 434073484656333471
          format: int64
          type: integer
        FailedWorkflowCount:
          description: Number of failed workflows for the given service in the past
            24 hours.
          example: 2686595640774277424
          format: int64
          type: integer
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - environmentId
      - serviceId
      type: object
    DescribeServicesOrchestrationRequest:
      example:
        id: so-12345678
        token: 0k7
      properties:
        id:
          description: ID of a Services Orchestration
          example: Rem itaque voluptas dolorum ut.
          type: string
        token:
          description: JWT token used to perform authorization
          example: s
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeServicesOrchestrationResult:
      example:
        ServicesTopology:
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        createdAt: 2021-01-01T00:00:00Z
        id: so-12345678
        orchestrationFailedReason: Invalid DSL
        resultParams:
          param1: value1
          param2: value2
        status: PENDING
        updatedAt: 2021-01-01T00:00:00Z
      properties:
        ServicesTopology:
          description: The services deployment details
          example:
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Ab veritatis rerum quam voluptates.
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Ab veritatis rerum quam voluptates.
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Ab veritatis rerum quam voluptates.
          items:
            $ref: "#/components/schemas/ServiceDeploymentDetails"
          type: array
        createdAt:
          description: The time the services orchestration was created
          example: 2021-01-01T00:00:00Z
          type: string
        id:
          description: ID of a Services Orchestration
          example: Excepturi rerum harum cum voluptatem.
          type: string
        orchestrationFailedReason:
          description: The reason why the orchestration failed
          example: Invalid DSL
          type: string
        resultParams:
          description: Custom result parameters of the services orchestration
          example:
            param1: value1
            param2: value2
        status:
          description: The status of the services orchestration
          example: PENDING
          type: string
        updatedAt:
          description: The time the services orchestration was last updated
          example: 2021-01-01T00:00:00Z
          type: string
      required:
      - createdAt
      - id
      - status
      - updatedAt
      type: object
    DescribeSubscriptionRequest:
      example:
        id: sub-12345678
        token: "6"
      properties:
        id:
          description: ID of a Subscription
          example: Fuga voluptas ullam.
          type: string
        token:
          description: JWT token used to perform authorization
          example: x4
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeSubscriptionRequestRequest:
      example:
        id: subr-12345678
        token: au
      properties:
        id:
          description: ID of a Subscription Request
          example: Animi id velit aspernatur sit voluptatem optio.
          type: string
        token:
          description: JWT token used to perform authorization
          example: w1x
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    DescribeSubscriptionRequestResult:
      example:
        createdAt: 2019-01-01T00:00:00Z
        id: subr-12345678
        productTierId: pt-12345678
        productTierName: Omnistrate Multi Tenancy
        rootUserEmail: abc@gmail.com
        rootUserId: org-12345678
        rootUserName: John Doe
        serviceId: s-12345678
        serviceLogoURL: Voluptatem et eos.
        serviceName: MySQL multi-writer service
        status: PENDING
        updatedAt: 2019-01-01T00:00:00Z
        updatedByUserId: user-12345678
        updatedByUserName: John Doe
      properties:
        createdAt:
          description: The time that this subscription request was issued
          example: 2019-01-01T00:00:00Z
          type: string
        id:
          description: ID of a Subscription Request
          example: Veritatis est.
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Maiores voluptatem magnam rerum dolores.
          type: string
        productTierName:
          description: The name of the product tier
          example: Omnistrate Multi Tenancy
          type: string
        rootUserEmail:
          description: The email of the user that issued the subscription request
          example: abc@gmail.com
          type: string
        rootUserId:
          description: ID of a User
          example: Asperiores pariatur.
          type: string
        rootUserName:
          description: The name of the user that issued the subscription request
          example: John Doe
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Error aliquid quia.
          type: string
        serviceName:
          description: The name of the service
          example: MySQL multi-writer service
          type: string
        status:
          description: The status of the subscription request
          example: PENDING|APPROVED|DENIED|CANCELLED
          type: string
        updatedAt:
          description: The time that this subscription request was issued
          example: 2019-01-01T00:00:00Z
          type: string
        updatedByUserId:
          description: ID of a User
          example: Earum voluptas.
          type: string
        updatedByUserName:
          description: The user that last updated the subscription request
          example: John Doe
          type: string
      required:
      - createdAt
      - id
      - productTierId
      - productTierName
      - rootUserEmail
      - rootUserId
      - rootUserName
      - serviceId
      - serviceName
      - status
      - updatedAt
      - updatedByUserId
      - updatedByUserName
      type: object
    DescribeSubscriptionResult:
      example:
        accountConfigIdentityId: org-12345678
        allowCreatesWhenPaymentNotConfigured: true
        cloudProviderNames:
        - aws
        - gcp
        createdAt: 2019-01-01T00:00:00Z
        defaultSubscription: true
        id: sub-12345678
        maxNumberOfInstances: 10
        paymentMethodConfigured: true
        productTierId: pt-12345678
        productTierName: Omnistrate Multi Tenancy
        roleType: root
        rootUserId: user-12345678
        serviceId: s-12345678
        serviceLogoURL: Unde quis nemo.
        serviceName: MySQL multi-writer service
        serviceOrgId: org-12345678
        serviceOrgName: Omnistrate
        status: ACTIVE
        subscriptionOwnerName: John Doe
      properties:
        accountConfigIdentityId:
          description: ID of an Org
          example: Veniam adipisci iusto sunt iste soluta omnis.
          type: string
        allowCreatesWhenPaymentNotConfigured:
          description: Whether to allow creating instances when payment is not configured.
          example: true
          type: boolean
        cloudProviderNames:
          description: List of cloud provider names
          example:
          - aws
          - gcp
          items:
            example: Deleniti molestiae tempore id voluptate cumque ducimus.
            type: string
          type: array
        createdAt:
          description: The time that this subscription was created
          example: 2019-01-01T00:00:00Z
          type: string
        defaultSubscription:
          description: Whether this is the default subscription for the user
          example: true
          type: boolean
        id:
          description: ID of a Subscription
          example: Maxime soluta et aperiam omnis nihil.
          type: string
        maxNumberOfInstances:
          description: The maximum number of instances that can be created for this
            subscription.
          example: 10
          format: int64
          type: integer
        paymentMethodConfigured:
          description: Return true if the required payment method is configured for
            this subscription or no payment method is required. False if the subscription
            requires a payment method but it is not configured.
          example: true
          type: boolean
        productTierId:
          description: ID of a Product Tier
          example: Et eaque facilis consequatur et est.
          type: string
        productTierName:
          description: The name of the product tier
          example: Omnistrate Multi Tenancy
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        rootUserId:
          description: ID of a User
          example: Est sapiente quo consequatur.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Praesentium nisi rem.
          type: string
        serviceName:
          description: The name of the service
          example: MySQL multi-writer service
          type: string
        serviceOrgId:
          description: ID of an Org
          example: Molestias omnis nulla.
          type: string
        serviceOrgName:
          description: The name of the org that owns the service
          example: Omnistrate
          type: string
        status:
          description: Subscription Status
          example: ACTIVE|SUSPENDED|TERMINATED|CANCELLED
          type: string
        subscriptionOwnerName:
          description: The name of the subscription owner user
          example: John Doe
          type: string
      required:
      - accountConfigIdentityId
      - cloudProviderNames
      - createdAt
      - defaultSubscription
      - id
      - productTierId
      - productTierName
      - roleType
      - rootUserId
      - serviceId
      - serviceLogoURL
      - serviceName
      - serviceOrgId
      - serviceOrgName
      - status
      - subscriptionOwnerName
      type: object
    DescribeUpgradePathRequest:
      example:
        productTierId: pt-12345678
        serviceId: s-12345678
        token: m4
        upgradePathId: up-12345678
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Quo vero qui dolorum unde delectus provident.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: c6
          minLength: 1
          type: string
        upgradePathId:
          description: ID of an Upgrade Path
          example: Repudiandae adipisci ut.
          type: string
      required:
      - productTierId
      - serviceId
      - token
      - upgradePathId
      type: object
    DescribeUserCostRequest:
      example:
        endDate: 2024-01-01T10:00:00Z
        environmentType: DEV
        excludeUserIDs: user-23456789
        includeUserIDs: "user-12345678,user-23456789"
        startDate: 2023-01-01T10:00:00Z
        token: a
        topNInstances: 10
        topNUsers: 10
      properties:
        endDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        excludeUserIDs:
          description: The user IDs to exclude from the cost data
          example: user-23456789
          type: string
        includeUserIDs:
          description: The user IDs to include in the cost data
          example: "user-12345678,user-23456789"
          type: string
        startDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        token:
          description: JWT token used to perform authorization
          example: f
          minLength: 1
          type: string
        topNInstances:
          description: The number of top instances to return
          example: 10
          format: int64
          type: integer
        topNUsers:
          description: The number of top users to return
          example: 10
          format: int64
          type: integer
      required:
      - endDate
      - environmentType
      - startDate
      - token
      type: object
    DescribeUserCostResult:
      example:
        userCosts:
          user-abcdefgh:
            cost:
            - cost: 100
              date: 2023-01-01T10:00:00Z
            - cost: 200
              date: 2023-01-02T10:00:00Z
            - cost: 145
              date: 2023-01-03T10:00:00Z
            email: admin@example.com
            instancesCost:
            - cloudProviderName: aws
              instanceID: instance-12345678
              isDeleted: false
              productTierID: pt-12345678
              productTierName: Standard
              productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
              regionName: us-west-2
              serviceEnvironmentID: se-12345678
              serviceID: s-12345678
              subscriptionID: sub-12345678
              totalCost: 100
              utilization: 50
            orgID: org-12345678
            orgName: Acme Corp
            totalCost: 445
            userName: John Doe
      properties:
        userCosts:
          additionalProperties: true
          description: The cost data for each user
          example:
            user-abcdefgh:
              cost:
              - cost: 100
                date: 2023-01-01T10:00:00Z
              - cost: 200
                date: 2023-01-02T10:00:00Z
              - cost: 145
                date: 2023-01-03T10:00:00Z
              email: admin@example.com
              instancesCost:
              - cloudProviderName: aws
                instanceID: instance-12345678
                isDeleted: false
                productTierID: pt-12345678
                productTierName: Standard
                productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
                regionName: us-west-2
                serviceEnvironmentID: se-12345678
                serviceID: s-12345678
                subscriptionID: sub-12345678
                totalCost: 100
                utilization: 50
              orgID: org-12345678
              orgName: Acme Corp
              totalCost: 445
              userName: John Doe
          type: object
      type: object
    DescribeUserRequest:
      example:
        token: eg
      properties:
        token:
          description: JWT token used to perform authorization
          example: wpj
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribeUserResult:
      example:
        address:
          addressLine1: 1234 Main St
          addressLine2: Apt 123
          addressLine3: Building 123
          city: San Francisco
          country: US
          state: CA
          zip: "94123"
        createdAt: 2023-01-10T00:00:00Z
        email: abc@gmail.com
        enabled: true
        id: user-abcd1234
        lastModifiedAt: 2023-01-20T00:00:00Z
        name: John Dae
        orgCookiePolicy: Quas a delectus maiores.
        orgDescription: ACME Inc.
        orgFavIconURL: Et et eveniet.
        orgId: org-aKQ8G13QeR
        orgLogoURL: Illo quas officia.
        orgName: ACME
        orgPrivacyPolicy: Animi ut.
        orgSupportEmail: support@example.com
        orgTermsOfUse: Ut aperiam quidem laboriosam quae.
        orgURL: something.acme
        planName: STARTER
        roleType: reader
        status: ACTIVE
      properties:
        address:
          $ref: "#/components/schemas/Address"
        createdAt:
          description: The user creation time
          example: 2023-01-10T00:00:00Z
          type: string
        email:
          description: The email of the user
          example: abc@gmail.com
          type: string
        enabled:
          description: Is the user enabled.
          example: true
          type: boolean
        id:
          description: The User ID
          example: user-abcd1234
          type: string
        lastModifiedAt:
          description: The user update time
          example: 2023-01-20T00:00:00Z
          type: string
        name:
          description: The name of the user
          example: John Dae
          type: string
        orgCookiePolicy:
          description: The cookie policy for the org that this user owns
          example: Ipsum id.
          type: string
        orgDescription:
          description: The description of the org that this user owns
          example: ACME Inc.
          type: string
        orgFavIconURL:
          description: The favicon of the org that this user owns
          example: Culpa quaerat autem delectus sit.
          type: string
        orgId:
          description: The ID of the org that this user owns
          example: org-aKQ8G13QeR
          type: string
        orgLogoURL:
          description: The logo of the org that this user owns
          example: Quia doloremque quo aut deleniti culpa.
          type: string
        orgName:
          description: The org name that this user owns
          example: ACME
          type: string
        orgPrivacyPolicy:
          description: The privacy policy for the org that this user owns
          example: Est sed fuga.
          type: string
        orgSupportEmail:
          description: The support email of the org that this user owns
          example: support@example.com
          type: string
        orgTermsOfUse:
          description: The terms of use for the org that this user owns
          example: Sunt incidunt natus.
          type: string
        orgURL:
          description: The url of the org that this user owns
          example: something.acme
          type: string
        planName:
          description: This parameter is used to select the appropriate Product Plan
          example: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        status:
          description: The status of the user.
          example: ACTIVE|NOT_ENABLED
          type: string
      required:
      - id
      type: object
    DescribeUsersByOrgRequest:
      example:
        token: "85"
      properties:
        token:
          description: JWT token used to perform authorization
          example: w9c
          minLength: 1
          type: string
      required:
      - token
      type: object
    DescribeUsersByOrgResult:
      example:
        Id: org-aKQ8G13QeR
        orgUsers:
        - email: abc@gmail.com
          invitedAt: 2023-01-10T00:00:00Z
          name: John Doe
          roleType: reader
          userId: user-abcd1234
      properties:
        Id:
          description: The ID of the org
          example: org-aKQ8G13QeR
          type: string
        orgUsers:
          description: The users associated with the corresponding org
          example:
          - email: abc@gmail.com
            invitedAt: 2023-01-10T00:00:00Z
            name: John Doe
            roleType: reader
            userId: user-abcd1234
          items:
            $ref: "#/components/schemas/OrgUsers"
          type: array
      required:
      - Id
      - orgUsers
      type: object
    DescribeUsersBySubscriptionRequest:
      example:
        subscriptionId: sub-abcd1234
        token: tfl
      properties:
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: x
          minLength: 1
          type: string
      required:
      - subscriptionId
      - token
      type: object
    DescribeUsersBySubscriptionResult:
      example:
        Id: sub-abcd1234
        subscriptionUsers:
        - email: abc@gmail.com
          name: John Doe
          roleType: reader
          subscriptionId: sub-abcd1234
          userId: user-abcd1234
      properties:
        Id:
          description: The ID of the subscription
          example: sub-abcd1234
          type: string
        subscriptionUsers:
          description: The users associated with the corresponding subscription
          example:
          - email: abc@gmail.com
            name: John Doe
            roleType: reader
            subscriptionId: sub-abcd1234
            userId: user-abcd1234
          items:
            $ref: "#/components/schemas/SubscriptionUsers"
          type: array
      required:
      - Id
      - subscriptionUsers
      type: object
    DescribeVUnitRequest:
      example:
        id: vu-12345678
        serviceId: s-12345678
        token: 8s4
      properties:
        id:
          description: ID of a VUnit
          example: Molestiae tenetur quo saepe amet.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: h
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    DescribeVUnitResult:
      example:
        cloudProvider: aws
        id: vu-12345678
        networkIds:
        - n-12345678
        - n-abcdefgh
        - n-1234efgh
        region: us-west-2
        serviceId: s-12345678
        serviceModelId: sm-12345678
      properties:
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        id:
          description: ID of a VUnit
          example: Praesentium quo sit cum.
          type: string
        networkIds:
          description: List of network IDs in the given context
          example:
          - n-12345678
          - n-abcdefgh
          - n-1234efgh
          items:
            description: ID of a Network
            example: Omnis aut deserunt.
            type: string
          type: array
        region:
          description: Region code specific to the cloud-provider
          example: us-west-2
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Recusandae et id nulla qui ducimus consequuntur.
          type: string
      required:
      - cloudProvider
      - networkIds
      - region
      - serviceModelId
      type: object
    DetailedNodeHealthResult:
      example:
        ConnectivityStatus: HEALTHY
        DiskHealth: HEALTHY
        IntegrationsHealth:
          CustomerObservabilityHealth: HEALTHY
          InternalObservabilityHealth: HEALTHY
        LoadStatus: LOAD_NORMAL
        NodeHealth: HEALTHY
        ProcessHealth: HEALTHY
        ProcessLiveness: HEALTHY
      properties:
        ConnectivityStatus:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        DiskHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        IntegrationsHealth:
          $ref: "#/components/schemas/IntegrationsHealth"
        LoadStatus:
          description: The load status of a pod
          example: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          type: string
        NodeHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        ProcessHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        ProcessLiveness:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
      type: object
    DisableBillingProviderRequest:
      example:
        billingProviderType: STRIPE
        token: x8r
      properties:
        billingProviderType:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        token:
          description: JWT token used to perform authorization
          example: k
          minLength: 1
          type: string
      required:
      - billingProviderType
      - token
      type: object
    DisableProductTierFeatureRequest:
      example:
        feature: LOGS
        id: pt-12345678
        scope: INTERNAL
        serviceId: s-12345678
        token: 4ec
      properties:
        feature:
          description: ProductTierFeatureType is to enable / disable features per
            product tier
          example: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
          type: string
        id:
          description: ID of a Product Tier
          example: Earum in saepe atque.
          type: string
        scope:
          description: ProductTierFeatureScope defines scope of the feature within
            product tier
          example: INTERNAL|CUSTOMER
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "9"
          minLength: 1
          type: string
      required:
      - feature
      - id
      - serviceId
      - token
      type: object
    DisableServiceModelFeatureRequest:
      example:
        feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        id: sm-12345678
        serviceId: s-12345678
        token: a9
      properties:
        feature:
          description: Name of the service model feature
          example: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          type: string
        id:
          description: ID of a Service Model
          example: Ipsa repellat sed ipsa et eveniet.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: d
          minLength: 1
          type: string
      required:
      - feature
      - id
      - serviceId
      - token
      type: object
    DisableTenantBillingRequest:
      example:
        token: 8wl
      properties:
        token:
          description: JWT token used to perform authorization
          example: "105"
          minLength: 1
          type: string
      required:
      - token
      type: object
    EmailConfiguration:
      example:
        to: notify@example.com
      properties:
        to:
          description: Email address to send notifications to
          example: notify@example.com
          type: string
      required:
      - to
      type: object
    EnableBillingProviderRequest:
      example:
        balanceDueLink: https://billing.provider.com/balance-due. Only present when
          the billing provider is BRING_YOUR_OWN
        billingProviderType: STRIPE
        logoURL: https://example.com/logo.png
        name: Stripe
        token: zc
      properties:
        balanceDueLink:
          description: The URL to the balance due page
          example: https://billing.provider.com/balance-due. Only present when the
            billing provider is BRING_YOUR_OWN
          type: string
        billingProviderType:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        logoURL:
          description: The URL of the logo for the billing provider. Only present
            when the billing provider is BRING_YOUR_OWN
          example: https://example.com/logo.png
          type: string
        name:
          description: A custom name for the billing provider. Only present when the
            billing provider is BRING_YOUR_OWN
          example: Stripe
          type: string
        token:
          description: JWT token used to perform authorization
          example: gcl
          minLength: 1
          type: string
      required:
      - billingProviderType
      - token
      type: object
    EnableProductTierFeatureRequest:
      example:
        configuration:
          S3BucketArn: arn:aws:s3:::my_billing_bucket_name
        feature: LOGS
        id: pt-12345678
        scope: INTERNAL
        serviceId: s-12345678
        token: 78n
      properties:
        configuration:
          additionalProperties: true
          description: The configuration parameters of the product tier feature
          example:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
          type: object
        feature:
          description: ProductTierFeatureType is to enable / disable features per
            product tier
          example: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
          type: string
        id:
          description: ID of a Product Tier
          example: Velit porro asperiores dolor et consequatur.
          type: string
        scope:
          description: ProductTierFeatureScope defines scope of the feature within
            product tier
          example: INTERNAL|CUSTOMER
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "35"
          minLength: 1
          type: string
      required:
      - feature
      - id
      - serviceId
      - token
      type: object
    EnableServiceModelFeatureRequest:
      example:
        configuration:
          status: "ON"
        feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        id: sm-12345678
        serviceId: s-12345678
        token: x
      properties:
        configuration:
          additionalProperties: true
          description: The configuration parameters of the service model feature
          example:
            status: "ON"
          type: object
        feature:
          description: Name of the service model feature
          example: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          type: string
        id:
          description: ID of a Service Model
          example: Nulla ea alias ea natus voluptates et.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 3tz
          minLength: 1
          type: string
      required:
      - configuration
      - feature
      - id
      - serviceId
      - token
      type: object
    EnableTenantBillingRequest:
      example:
        token: 6h
      properties:
        token:
          description: JWT token used to perform authorization
          example: f6x
          minLength: 1
          type: string
      required:
      - token
      type: object
    EndCustomerEvent:
      example:
        eventID: e-123456
        eventPayload:
          eventType: CustomerSignUp
          token: "123456"
        eventType: InviteUser
        orgID: o-123456
        orgName: Acme Corp
        orgURL: https://acme.com
        priority: Critical
        time: 2023-01-10T00:00:00Z
        userEmail: user@example.com
        userID: user-123456
        userName: user
      properties:
        eventID:
          description: ID of a Event
          example: Nihil provident ut.
          type: string
        eventPayload:
          additionalProperties: true
          description: The event payload for a service provider.
          example:
            eventType: CustomerSignUp
            token: "123456"
          type: object
        eventType:
          description: The type of the end customer specific event
          example: InviteUser|RevokeUserRole|InstanceMaintenanceScheduled|CustomerSignUp|DisconnectAccountComplete|ConnectAccountComplete|PendingRevokePermissions|PendingRestorePermissions
          type: string
        orgID:
          description: ID of an Org
          example: Ullam aspernatur exercitationem in est.
          type: string
        orgName:
          description: Associated organization name.
          example: Acme Corp
          type: string
        orgURL:
          description: Associated organization URL.
          example: https://acme.com
          type: string
        priority:
          description: The priority of the event
          example: Critical|High|Medium|Low
          type: string
        time:
          description: The event time
          example: 2023-01-10T00:00:00Z
          type: string
        userEmail:
          description: User email associated with the event.
          example: user@example.com
          type: string
        userID:
          description: ID of a User
          example: Atque quo eos.
          type: string
        userName:
          description: Name of the user associated with the event.
          example: user
          type: string
      required:
      - eventID
      - eventPayload
      - eventType
      - orgID
      - orgName
      - orgURL
      - priority
      - time
      type: object
    EntityHealth:
      description: Health status of an entity
      example:
        error: No errors
        identifier: namespace-12345
        syncStatus: COMPLETE
        type: NAMESPACE
      properties:
        error:
          description: Optional error message if the entity is not in sync
          example: No errors
          type: string
        identifier:
          description: Unique identifier for the entity
          example: namespace-12345
          type: string
        syncStatus:
          description: Current synchronization status of the entity
          example: COMPLETE
          type: string
        type:
          description: "Type of the entity (e.g., NAMESPACE, SERVICE, POD, etc.)"
          example: NAMESPACE
          type: string
      required:
      - identifier
      - syncStatus
      - type
      type: object
    EnvironmentHealthReport:
      example:
        models:
          sm-12345678:
            vu-11111111: UNKNOWN
            vu-12345678: UP
            vu-87654321: DOWN
      properties:
        models:
          additionalProperties: true
          description: Health report for each model in the environment
          example:
            sm-12345678:
              vu-11111111: UNKNOWN
              vu-12345678: UP
              vu-87654321: DOWN
          type: object
      type: object
    EnvironmentPromotionStatus:
      example:
        status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
        targetEnvironmentID: se-12345678
      properties:
        status:
          description: The status of the promotion
          example: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          type: string
        targetEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
      required:
      - status
      - targetEnvironmentID
      type: object
    EnvironmentVariable:
      description: A service environment variable
      example:
        key: MYSQL_ROOT_PASSWORD
        value: password
      properties:
        key:
          description: The key of the environment variable
          example: MYSQL_ROOT_PASSWORD
          type: string
        value:
          description: The value of the environment variable
          example: password
          type: string
      required:
      - key
      - value
      type: object
    Error:
      example:
        fault: false
        id: 123abc
        message: parameter 'p' must be an integer
        name: bad_request
        temporary: true
        timeout: true
      properties:
        fault:
          description: Is the error a server-side fault?
          example: true
          type: boolean
        id:
          description: ID is a unique identifier for this particular occurrence of
            the problem.
          example: 123abc
          type: string
        message:
          description: Message is a human-readable explanation specific to this occurrence
            of the problem.
          example: parameter 'p' must be an integer
          type: string
        name:
          description: Name is the name of this class of errors.
          example: bad_request
          type: string
        temporary:
          description: Is the error temporary?
          example: true
          type: boolean
        timeout:
          description: Is the error a timeout?
          example: true
          type: boolean
      required:
      - fault
      - id
      - message
      - name
      - temporary
      - timeout
      type: object
    Event:
      example:
        body:
          key1: value1
          key2: 42
        channelResponse:
          body: Notification delivered
          status: 200
        id: event-12345678
        publicationStatus: SUCCESS
        timestamp: 2023-01-01T10:00:00Z
      properties:
        body:
          description: "Body of the event, including payload"
          example:
            key1: value1
            key2: 42
        channelResponse:
          description: "Response from the notification channel, if applicable"
          example:
            body: Notification delivered
            status: 200
        id:
          description: ID of a Event
          example: Ut corporis sit minus.
          type: string
        publicationStatus:
          description: Status of the event publication
          example: SUCCESS
          type: string
        timestamp:
          description: Timestamp when the event occurred
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
      required:
      - id
      - publicationStatus
      - timestamp
      type: object
    EventsPerResource:
      example:
        resourceId: r-12345678
        resourceKey: db
        resourceName: Galera
        workflowSteps:
        - events:
          - eventTime: 2020-01-01T00:00:00Z
            eventType: WorkflowStepStarted
            message: Bootstrap started
          - eventTime: 2020-01-01T00:01:00Z
            eventType: WorkflowStepCompleted
            message: Bootstrap completed
          stepName: Bootstrap
        - events:
          - eventTime: 2020-01-01T00:02:00Z
            eventType: WorkflowStepStarted
            message: Compute deployment started
          - eventTime: 2020-01-01T00:03:00Z
            eventType: WorkflowStepCompleted
            message: Compute deployment completed
          stepName: Compute
        - events:
          - eventTime: 2020-01-01T00:04:00Z
            eventType: WorkflowStepStarted
            message: Network deployment started
          - eventTime: 2020-01-01T00:05:00Z
            eventType: WorkflowStepFailed
            message: Details of the failure
          stepName: Network
      properties:
        resourceId:
          description: ID of a resource
          example: Omnis recusandae qui illo vel.
          type: string
        resourceKey:
          description: Resource Key
          example: db
          type: string
        resourceName:
          description: Resource Name
          example: Galera
          type: string
        workflowSteps:
          description: Per step workflow events for the resource
          example:
          - events:
            - eventTime: 2020-01-01T00:00:00Z
              eventType: WorkflowStepStarted
              message: Bootstrap started
            - eventTime: 2020-01-01T00:01:00Z
              eventType: WorkflowStepCompleted
              message: Bootstrap completed
            stepName: Bootstrap
          - events:
            - eventTime: 2020-01-01T00:02:00Z
              eventType: WorkflowStepStarted
              message: Compute deployment started
            - eventTime: 2020-01-01T00:03:00Z
              eventType: WorkflowStepCompleted
              message: Compute deployment completed
            stepName: Compute
          - events:
            - eventTime: 2020-01-01T00:04:00Z
              eventType: WorkflowStepStarted
              message: Network deployment started
            - eventTime: 2020-01-01T00:05:00Z
              eventType: WorkflowStepFailed
              message: Details of the failure
            stepName: Network
          items:
            $ref: "#/components/schemas/EventsPerWorkflowStep"
          type: array
      required:
      - resourceId
      - resourceKey
      - resourceName
      type: object
    EventsPerWorkflowStep:
      example:
        events:
        - eventTime: 2020-01-01T00:00:00Z
          eventType: WorkflowStepStarted
          message: Bootstrap started
        - eventTime: 2020-01-01T00:01:00Z
          eventType: WorkflowStepCompleted
          message: Bootstrap completed
        stepName: Bootstrap
      properties:
        events:
          description: List of events for the step
          example:
          - eventTime: 2020-01-01T00:00:00Z
            eventType: WorkflowStepStarted
            message: Bootstrap started
          - eventTime: 2020-01-01T00:01:00Z
            eventType: WorkflowStepCompleted
            message: Bootstrap completed
          items:
            $ref: "#/components/schemas/WorkflowEvent"
          type: array
        stepName:
          description: The name of the workflow step
          example: Bootstrap|Compute|Network|Storage|Deployment|Monitoring
          type: string
      required:
      - events
      - stepName
      type: object
    FailoverResourceInstanceRequest:
      example:
        failedReplicaAction: FAILOVER_AND_RESTART
        failedReplicaID: db-0
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: h
      properties:
        failedReplicaAction:
          description: The action to take for the replica that has failed
          example: FAILOVER_ONLY|FAILOVER_AND_RESTART|FAILOVER_AND_RECREATE
          type: string
        failedReplicaID:
          description: The failed replica ID
          example: db-0
          type: string
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Est voluptatem et.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: u
          minLength: 1
          type: string
      required:
      - failedReplicaID
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    FleetAddCapacityToResourceInstanceRequest:
      example:
        capacityToBeAdded: 3
        environmentId: se-12345678
        instanceId: instance-12345678
        resourceId: r-12345678
        serviceId: s-12345678
        token: b
      properties:
        capacityToBeAdded:
          description: Number of replicas to be added
          example: 3
          format: int64
          type: integer
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        resourceId:
          description: ID of a resource
          example: Rerum et doloribus amet odio.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: z
          minLength: 1
          type: string
      required:
      - capacityToBeAdded
      - environmentId
      - instanceId
      - resourceId
      - serviceId
      - token
      type: object
    FleetAddCapacityToResourceInstanceRequest2:
      example:
        capacityToBeAdded: 3
        resourceId: r-12345678
      properties:
        capacityToBeAdded:
          description: Number of replicas to be added
          example: 3
          format: int64
          type: integer
        resourceId:
          description: The resource ID.
          example: r-12345678
          type: string
      required:
      - capacityToBeAdded
      - resourceId
      type: object
    FleetAddCustomDNSToResourceInstanceRequest:
      example:
        customDNS: my-custom-dns.com
        environmentId: se-12345678
        instanceId: instance-12345678
        resourceKey: http-service
        serviceId: s-12345678
        targetPort: 8080
        token: w1h
      properties:
        customDNS:
          description: The custom DNS to add
          example: my-custom-dns.com
          type: string
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        resourceKey:
          description: The resource key
          example: http-service
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        targetPort:
          description: The target port
          example: 8080
          format: int64
          type: integer
        token:
          description: JWT token used to perform authorization
          example: "y"
          minLength: 1
          type: string
      required:
      - customDNS
      - environmentId
      - instanceId
      - resourceKey
      - serviceId
      - token
      type: object
    FleetAddCustomDNSToResourceInstanceRequest2:
      example:
        customDNS: my-custom-dns.com
        targetPort: 8080
      properties:
        customDNS:
          description: The custom DNS to add
          example: my-custom-dns.com
          type: string
        targetPort:
          description: The target port
          example: 8080
          format: int64
          type: integer
      required:
      - customDNS
      type: object
    FleetApproveInvoiceRequest:
      example:
        id: invoice-1234568
        token: lp2
      properties:
        id:
          description: ID of the invoice
          example: invoice-1234568
          type: string
        token:
          description: JWT token used to perform authorization
          example: ek
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    FleetAuditEvent:
      example:
        environmentId: se-123456
        eventSource: "Customer, Infra or Maintenance"
        id: Eos fugit.
        instanceId: instance-12345678
        message: instance-abcd1234 created
        orgId: org-12345678
        orgName: Acme Corporation
        planVersion: v1.0
        productTierId: Et iusto eos.
        resourceName: postgres
        serviceId: s-123456
        serviceName: mysql
        servicePlanName: Basic Plan
        time: event-12345678
        userId: user-12345678
        userName: John Doe
        workflowFailures:
        - eventTime: 2020-01-01T00:00:00Z
          message: Bootstrap failed for reason X
        - eventTime: 2020-01-01T00:01:00Z
          message: Compute failed for reason Y
        workflowId: workflow-12345678
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        eventSource:
          description: The event source
          example: "Customer, Infra or Maintenance"
          type: string
        id:
          description: ID of a Event
          example: Dolor et ut voluptatibus aut dolorem alias.
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        message:
          description: Resource Instance of message
          example: instance-abcd1234 created
          type: string
        orgId:
          description: ID of an Org
          example: Omnis et vero exercitationem ut et occaecati.
          type: string
        orgName:
          description: The organization name of the user that caused the event
          example: Acme Corporation
          type: string
        planVersion:
          description: The version of the plan
          example: v1.0
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Quod nulla qui.
          type: string
        resourceName:
          description: Name of the resource
          example: postgres
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceName:
          description: The service name
          example: mysql
          type: string
        servicePlanName:
          description: The name of the service plan
          example: Basic Plan
          type: string
        time:
          description: ID of a Event
          example: event-12345678
          type: string
        userId:
          description: ID of a User
          example: Sit quae.
          type: string
        userName:
          description: The user name of the user that caused the event
          example: John Doe
          type: string
        workflowFailures:
          description: The list of workflow events that indicate failures
          example:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
          items:
            $ref: "#/components/schemas/WorkflowFailure"
          type: array
        workflowId:
          description: ID of a Workflow
          example: Placeat explicabo nobis.
          type: string
      required:
      - environmentId
      - id
      - instanceId
      - message
      - planVersion
      - productTierId
      - resourceName
      - serviceId
      - serviceName
      - servicePlanName
      - time
      type: object
    FleetAuditEventsRequest:
      example:
        endDate: 2024-01-01T10:00:00Z
        environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
        eventSourceTypes:
        - Ad consequatur reprehenderit aliquid autem.
        - Autem ut aut qui.
        - Vel delectus iste.
        - Debitis rerum ut ut.
        instanceID: instance-12345678
        nextPageToken: token
        pageSize: 10
        productTierID: Et iusto eos.
        serviceID: s-123456
        startDate: 2023-01-01T10:00:00Z
        token: k
      properties:
        endDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        eventSourceTypes:
          description: The event types to filter by
          example:
          - Tempore repellendus totam ipsa.
          - Aspernatur dicta qui esse officia tempora autem.
          - Molestiae fugit aut expedita nostrum illum corrupti.
          items:
            example: Voluptatum voluptatem quod molestiae molestiae praesentium beatae.
            type: string
          type: array
        instanceID:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        productTierID:
          description: ID of a Product Tier
          example: Officiis voluptatem et.
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        startDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        token:
          description: JWT token used to perform authorization
          example: ic
          minLength: 1
          type: string
      required:
      - token
      type: object
    FleetAuditEventsResult:
      example:
        events:
        - environmentId: se-123456
          eventSource: "Customer, Infra or Maintenance"
          id: Eos fugit.
          instanceId: instance-12345678
          message: instance-abcd1234 created
          orgId: org-12345678
          orgName: Acme Corporation
          planVersion: v1.0
          productTierId: Et iusto eos.
          resourceName: postgres
          serviceId: s-123456
          serviceName: mysql
          servicePlanName: Basic Plan
          time: event-12345678
          userId: user-12345678
          userName: John Doe
          workflowFailures:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
          workflowId: workflow-12345678
        - environmentId: se-123456
          eventSource: "Customer, Infra or Maintenance"
          id: Eos fugit.
          instanceId: instance-12345678
          message: instance-abcd1234 created
          orgId: org-12345678
          orgName: Acme Corporation
          planVersion: v1.0
          productTierId: Et iusto eos.
          resourceName: postgres
          serviceId: s-123456
          serviceName: mysql
          servicePlanName: Basic Plan
          time: event-12345678
          userId: user-12345678
          userName: John Doe
          workflowFailures:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
          workflowId: workflow-12345678
        - environmentId: se-123456
          eventSource: "Customer, Infra or Maintenance"
          id: Eos fugit.
          instanceId: instance-12345678
          message: instance-abcd1234 created
          orgId: org-12345678
          orgName: Acme Corporation
          planVersion: v1.0
          productTierId: Et iusto eos.
          resourceName: postgres
          serviceId: s-123456
          serviceName: mysql
          servicePlanName: Basic Plan
          time: event-12345678
          userId: user-12345678
          userName: John Doe
          workflowFailures:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
          workflowId: workflow-12345678
        ids:
        - event-12345678
        nextPageToken: token
      properties:
        events:
          description: The list of events
          example:
          - environmentId: se-123456
            eventSource: "Customer, Infra or Maintenance"
            id: Eos fugit.
            instanceId: instance-12345678
            message: instance-abcd1234 created
            orgId: org-12345678
            orgName: Acme Corporation
            planVersion: v1.0
            productTierId: Et iusto eos.
            resourceName: postgres
            serviceId: s-123456
            serviceName: mysql
            servicePlanName: Basic Plan
            time: event-12345678
            userId: user-12345678
            userName: John Doe
            workflowFailures:
            - eventTime: 2020-01-01T00:00:00Z
              message: Bootstrap failed for reason X
            - eventTime: 2020-01-01T00:01:00Z
              message: Compute failed for reason Y
            workflowId: workflow-12345678
          - environmentId: se-123456
            eventSource: "Customer, Infra or Maintenance"
            id: Eos fugit.
            instanceId: instance-12345678
            message: instance-abcd1234 created
            orgId: org-12345678
            orgName: Acme Corporation
            planVersion: v1.0
            productTierId: Et iusto eos.
            resourceName: postgres
            serviceId: s-123456
            serviceName: mysql
            servicePlanName: Basic Plan
            time: event-12345678
            userId: user-12345678
            userName: John Doe
            workflowFailures:
            - eventTime: 2020-01-01T00:00:00Z
              message: Bootstrap failed for reason X
            - eventTime: 2020-01-01T00:01:00Z
              message: Compute failed for reason Y
            workflowId: workflow-12345678
          - environmentId: se-123456
            eventSource: "Customer, Infra or Maintenance"
            id: Eos fugit.
            instanceId: instance-12345678
            message: instance-abcd1234 created
            orgId: org-12345678
            orgName: Acme Corporation
            planVersion: v1.0
            productTierId: Et iusto eos.
            resourceName: postgres
            serviceId: s-123456
            serviceName: mysql
            servicePlanName: Basic Plan
            time: event-12345678
            userId: user-12345678
            userName: John Doe
            workflowFailures:
            - eventTime: 2020-01-01T00:00:00Z
              message: Bootstrap failed for reason X
            - eventTime: 2020-01-01T00:01:00Z
              message: Compute failed for reason Y
            workflowId: workflow-12345678
          - environmentId: se-123456
            eventSource: "Customer, Infra or Maintenance"
            id: Eos fugit.
            instanceId: instance-12345678
            message: instance-abcd1234 created
            orgId: org-12345678
            orgName: Acme Corporation
            planVersion: v1.0
            productTierId: Et iusto eos.
            resourceName: postgres
            serviceId: s-123456
            serviceName: mysql
            servicePlanName: Basic Plan
            time: event-12345678
            userId: user-12345678
            userName: John Doe
            workflowFailures:
            - eventTime: 2020-01-01T00:00:00Z
              message: Bootstrap failed for reason X
            - eventTime: 2020-01-01T00:01:00Z
              message: Compute failed for reason Y
            workflowId: workflow-12345678
          items:
            $ref: "#/components/schemas/FleetAuditEvent"
          type: array
        ids:
          description: The list of event IDs
          example:
          - event-12345678
          items:
            description: ID of a Event
            example: Nihil laboriosam asperiores optio modi quibusdam temporibus.
            type: string
          type: array
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
      required:
      - events
      - ids
      type: object
    FleetAutomaticInstanceSnapshotCreationRequest:
      example:
        environmentId: se-12345678
        instanceId: instance-12345678
        serviceId: s-12345678
        token: m2n
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: bf
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - serviceId
      - token
      type: object
    FleetAutomaticInstanceSnapshotCreationResult:
      example:
        environmentId: se-12345678
        serviceId: s-12345678
        snapshotId: instance-ss-12345678
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        snapshotId:
          description: ID of a Resource Instance Snapshot
          example: Culpa adipisci eaque accusamus ducimus incidunt totam.
          type: string
      required:
      - environmentId
      - serviceId
      - snapshotId
      type: object
    FleetCreateConsumptionUserRequest:
      example:
        companyUrl: https://mywebsite.com
        email: abc@gmail.com
        enableAutoVerification: true
        legalCompanyName: mywebsite
        name: John Doe
        password: password
        token: "1"
      properties:
        companyUrl:
          description: Company URL of the user.
          example: https://mywebsite.com
          type: string
        email:
          description: Email address of the user
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        enableAutoVerification:
          description: Whether to enable auto verification for the user.
          example: true
          type: boolean
        legalCompanyName:
          description: Legal company name of the user.
          example: mywebsite
          minLength: 1
          type: string
        name:
          description: Name of the user
          example: John Doe
          minLength: 1
          type: string
        password:
          description: Password of the user
          example: password
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: r47
          minLength: 1
          type: string
      required:
      - email
      - enableAutoVerification
      - legalCompanyName
      - name
      - password
      - token
      type: object
    FleetCreateConsumptionUserRequest2:
      example:
        companyUrl: https://mywebsite.com
        email: abc@gmail.com
        enableAutoVerification: true
        legalCompanyName: mywebsite
        name: John Doe
        password: password
      properties:
        companyUrl:
          description: Company URL of the user.
          example: https://mywebsite.com
          type: string
        email:
          description: Email address of the user
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        enableAutoVerification:
          description: Whether to enable auto verification for the user.
          example: true
          type: boolean
        legalCompanyName:
          description: Legal company name of the user.
          example: mywebsite
          minLength: 1
          type: string
        name:
          description: Name of the user
          example: John Doe
          minLength: 1
          type: string
        password:
          description: Password of the user
          example: password
          minLength: 1
          type: string
      required:
      - email
      - enableAutoVerification
      - legalCompanyName
      - name
      - password
      type: object
    FleetCreateCustomNetworkRequest:
      example:
        cidr: 10.0.0.0/16
        cloudProviderName: aws
        cloudProviderRegion: us-east-1
        name: Prod us-east-1
        networkFeaturesConfiguration:
          isPrivateLinkEnabled: false
        token: vu1
      properties:
        cidr:
          default: 10.0.0.0/16
          description: CIDR block for the network
          example: 10.0.0.0/16
          format: cidr
          type: string
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        cloudProviderRegion:
          description: The region of the cloud provider that the instance is running
            in.
          example: us-east-1
          type: string
        name:
          description: User friendly network name to help distinguish networks with
            same CIDRs
          example: Prod us-east-1
          type: string
        networkFeaturesConfiguration:
          $ref: "#/components/schemas/FleetNetworkFeaturesConfiguration"
        token:
          description: JWT token used to perform authorization
          example: s2c
          minLength: 1
          type: string
      required:
      - cidr
      - cloudProviderName
      - cloudProviderRegion
      - token
      type: object
    FleetCreateCustomNetworkRequest2:
      example:
        cidr: 10.0.0.0/16
        cloudProviderName: aws
        cloudProviderRegion: us-east-1
        name: Prod us-east-1
        networkFeaturesConfiguration:
          isPrivateLinkEnabled: true
      properties:
        cidr:
          default: 10.0.0.0/16
          description: CIDR block for the network
          example: 10.0.0.0/16
          format: cidr
          type: string
        cloudProviderName:
          description: The name of the cloud provider that the instance is running
            on.
          example: aws
          type: string
        cloudProviderRegion:
          description: The region of the cloud provider that the instance is running
            in.
          example: us-east-1
          type: string
        name:
          description: User friendly network name to help distinguish networks with
            same CIDRs
          example: Prod us-east-1
          type: string
        networkFeaturesConfiguration:
          $ref: "#/components/schemas/FleetNetworkFeaturesConfiguration"
      required:
      - cidr
      - cloudProviderName
      - cloudProviderRegion
      type: object
    FleetCreateInstanceSnapshotRequest:
      example:
        environmentId: se-12345678
        instanceId: instance-12345678
        serviceId: s-12345678
        token: r4d
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 9p
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - serviceId
      - token
      type: object
    FleetCreateInstanceSnapshotResult:
      example:
        environmentId: se-12345678
        serviceId: s-12345678
        snapshotId: instance-ss-12345678
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        snapshotId:
          description: ID of a Resource Instance Snapshot
          example: Voluptas sunt modi iusto voluptatem vel quaerat.
          type: string
      required:
      - environmentId
      - serviceId
      - snapshotId
      type: object
    FleetCreateResourceInstanceRequest:
      example:
        cloud_provider: aws
        custom_network_id: n-1234567890
        externalPayerId: external-billing-id-1234
        network_type: PUBLIC|INTERNAL
        onprem_platform: OpenShift
        productTierKey: premium
        productTierVersion: "1.0"
        region: us-east-1
        requestParams:
          param1: value1
          param2: value2
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-12345678
        token: jk
      properties:
        cloud_provider:
          description: The cloud provider name
          example: aws
          type: string
        custom_network_id:
          description: Custom network for resource
          example: n-1234567890
          type: string
        externalPayerId:
          description: The external payer id to record which customer should pay for
            this resource instance. This will override the subscription level external
            payer id if set.
          example: external-billing-id-1234
          type: string
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        onprem_platform:
          description: OnPrem platform
          example: OpenShift
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        productTierVersion:
          description: The product tier version
          example: "1.0"
          type: string
        region:
          description: The region code
          example: us-east-1
          type: string
        requestParams:
          description: The request parameters
          example:
            param1: value1
            param2: value2
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Eum deserunt aliquam ut quod.
          type: string
        subscriptionId:
          description: ID of a Subscription
          example: Reiciendis in aut.
          type: string
        token:
          description: JWT token used to perform authorization
          example: l
          minLength: 1
          type: string
      required:
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    FleetCreateResourceInstanceRequest2:
      example:
        cloud_provider: aws
        custom_network_id: n-1234567890
        externalPayerId: external-billing-id-1234
        network_type: PUBLIC|INTERNAL
        onprem_platform: OpenShift
        productTierVersion: "1.0"
        region: us-east-1
        requestParams:
          param1: value1
          param2: value2
        subscriptionId: sub-12345678
      properties:
        cloud_provider:
          description: The cloud provider name
          example: aws
          type: string
        custom_network_id:
          description: Custom network for resource
          example: n-1234567890
          type: string
        externalPayerId:
          description: The external payer id to record which customer should pay for
            this resource instance. This will override the subscription level external
            payer id if set.
          example: external-billing-id-1234
          type: string
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        onprem_platform:
          description: OnPrem platform
          example: OpenShift
          type: string
        productTierVersion:
          description: The product tier version
          example: "1.0"
          type: string
        region:
          description: The region code
          example: us-east-1
          type: string
        requestParams:
          description: The request parameters
          example:
            param1: value1
            param2: value2
        subscriptionId:
          description: The subscription ID
          example: sub-12345678
          type: string
      type: object
    FleetCreateResourceInstanceResult:
      example:
        id: Aliquid veritatis voluptatum quia est odio.
      properties:
        id:
          description: Resource Instance Id
          example: Labore deleniti commodi minus.
          type: string
      type: object
    FleetCreateServicesOrchestrationRequest:
      example:
        orchestrationCreateDSL: Cumque eum vitae dolor reiciendis non libero.
        token: 7e
      properties:
        orchestrationCreateDSL:
          description: base64 encoded content of service orchestration create DSL
          example: Soluta et soluta molestiae eaque ea neque.
          type: string
        token:
          description: JWT token used to perform authorization
          example: qg0
          minLength: 1
          type: string
      required:
      - orchestrationCreateDSL
      - token
      type: object
    FleetCreateServicesOrchestrationRequest2:
      example:
        orchestrationCreateDSL: Repellat nam omnis asperiores saepe id.
      properties:
        orchestrationCreateDSL:
          description: base64 encoded content of service orchestration create DSL
          example: Quo eos hic ad.
          type: string
      required:
      - orchestrationCreateDSL
      type: object
    FleetCreateServicesOrchestrationResult:
      example:
        id: so-12345678
      properties:
        id:
          description: ID of a Services Orchestration
          example: Eligendi voluptatem odit velit.
          type: string
      type: object
    FleetCreateSubscriptionOnBehalfOfCustomerRequest:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        billingProvider: STRIPE
        customPrice: true
        customPricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        environmentId: se-12345678
        externalPayerId: a3df-sdf9-gfn3-4g3f
        maxNumberOfInstances: 10
        onBehalfOfCustomerUserId: user-12345678
        priceEffectiveDate: 2019-01-01T00:00:00Z
        productTierId: prod-12345678
        serviceId: s-12345678
        token: rv0
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Whether to allow creating instances when payment is not configured.
          example: true
          type: boolean
        billingProvider:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        customPrice:
          description: Whether to use a custom price for this subscription
          example: true
          type: boolean
        customPricePerUnit:
          additionalProperties: true
          description: "If customPrice is true, provide the price per unit for the\
            \ subscription here."
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        externalPayerId:
          description: The external payer ID to record which customer should pay for
            this subscription
          example: a3df-sdf9-gfn3-4g3f
          type: string
        maxNumberOfInstances:
          description: The maximum number of instances that can be created for this
            subscription. Use -1 to unset this restriction.
          example: 10
          format: int64
          type: integer
        onBehalfOfCustomerUserId:
          description: ID of a User
          example: Velit officia cumque.
          type: string
        priceEffectiveDate:
          description: "The effective date of the price, truncated to the first day\
            \ of the month. Only the current or future months may be specified."
          example: 2019-01-01T00:00:00Z
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Molestiae veritatis molestias voluptatibus fugiat autem dolores.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "53"
          minLength: 1
          type: string
      required:
      - environmentId
      - onBehalfOfCustomerUserId
      - productTierId
      - serviceId
      - token
      type: object
    FleetCreateSubscriptionOnBehalfOfCustomerRequest2:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        billingProvider: STRIPE
        customPrice: true
        customPricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        externalPayerId: a3df-sdf9-gfn3-4g3f
        maxNumberOfInstances: 10
        onBehalfOfCustomerUserId: user-12345678
        priceEffectiveDate: 2019-01-01T00:00:00Z
        productTierId: prod-12345678
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Whether to allow creating instances when payment is not configured.
          example: true
          type: boolean
        billingProvider:
          description: The billing provider for this subscription
          example: STRIPE
          type: string
        customPrice:
          description: Whether to use a custom price for this subscription
          example: true
          type: boolean
        customPricePerUnit:
          additionalProperties: true
          description: "If customPrice is true, provide the price per unit for the\
            \ subscription here."
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        externalPayerId:
          description: The external payer ID to record which customer should pay for
            this subscription
          example: a3df-sdf9-gfn3-4g3f
          type: string
        maxNumberOfInstances:
          description: The maximum number of instances that can be created for this
            subscription. Use -1 to unset this restriction.
          example: 10
          format: int64
          type: integer
        onBehalfOfCustomerUserId:
          description: The user ID of the customer that this subscription is on behalf
            of
          example: user-12345678
          type: string
        priceEffectiveDate:
          description: "The effective date of the price, truncated to the first day\
            \ of the month. Only the current or future months may be specified."
          example: 2019-01-01T00:00:00Z
          type: string
        productTierId:
          description: The product tier ID
          example: prod-12345678
          type: string
      required:
      - onBehalfOfCustomerUserId
      - productTierId
      type: object
    FleetCreateSubscriptionOnBehalfOfCustomerResult:
      example:
        id: sub-12345678
      properties:
        id:
          description: ID of a Subscription
          example: Sunt illo qui voluptatem hic velit vero.
          type: string
      type: object
    FleetCustomNetwork:
      example:
        cidr: 10.0.0.0/16
        cloudProviderName: aws
        cloudProviderRegion: us-east-1
        id: n-12345678
        name: Prod us-east-1
        networkDefinitionType: Custom
        networkFeaturesConfiguration:
          isPrivateLinkEnabled: false
        networkInstances:
        - awsAccountID: "123456789012"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          cloudProviderNativeNetworkId: vpc-12345678
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          hostClusterID: hc-12345678
        - awsAccountID: "123456789012"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          cloudProviderNativeNetworkId: vpc-12345678
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          hostClusterID: hc-12345678
        - awsAccountID: "123456789012"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          cloudProviderNativeNetworkId: vpc-12345678
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          hostClusterID: hc-12345678
        - awsAccountID: "123456789012"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          cloudProviderNativeNetworkId: vpc-12345678
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          hostClusterID: hc-12345678
        owningOrgID: org-12345678
        owningOrgName: my-customer
        owningUserID: user-12345678
        owningUserName: Jane Doe
      properties:
        cidr:
          default: 10.0.0.0/16
          description: CIDR block for the network
          example: 10.0.0.0/16
          type: string
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        cloudProviderRegion:
          description: The region of the cloud provider that the instance is running
            in.
          example: us-east-1
          type: string
        id:
          description: ID of a custom network
          example: Fuga soluta eum eveniet similique repellendus est.
          type: string
        name:
          description: User friendly network name to help distinguish networks with
            same CIDRs
          example: Prod us-east-1
          type: string
        networkDefinitionType:
          description: Type of the network definition
          example: Default|Custom|Imported
          type: string
        networkFeaturesConfiguration:
          $ref: "#/components/schemas/FleetNetworkFeaturesConfiguration"
        networkInstances:
          description: List of network instances created within this custom network
          example:
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          items:
            $ref: "#/components/schemas/FleetCustomNetworkInstance"
          type: array
        owningOrgID:
          description: ID of the owning organization
          example: org-12345678
          type: string
        owningOrgName:
          description: Name of the owning organization
          example: my-customer
          type: string
        owningUserID:
          description: ID of the owning user
          example: user-12345678
          type: string
        owningUserName:
          description: Name of the owning user
          example: Jane Doe
          type: string
      required:
      - cidr
      - cloudProviderName
      - cloudProviderRegion
      - id
      - owningOrgID
      - owningOrgName
      type: object
    FleetCustomNetworkInstance:
      example:
        awsAccountID: "123456789012"
        azureSubscriptionID: 12345678-1234-1234-1234-123456789012
        azureTenantID: 12345678-1234-1234-1234-123456789012
        cloudProviderNativeNetworkId: vpc-12345678
        gcpProjectID: my-project
        gcpProjectNumber: "123456789012"
        hostClusterID: hc-12345678
      properties:
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        azureTenantID:
          description: The Azure tenant ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        cloudProviderNativeNetworkId:
          description: The ID of the network within cloud provider account
          example: vpc-12345678
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        gcpProjectNumber:
          description: The GCP project number
          example: "123456789012"
          type: string
        hostClusterID:
          description: ID of a Host Cluster
          example: Dignissimos id dolorem inventore quisquam amet.
          type: string
      type: object
    FleetDeleteCustomNetworkRequest:
      example:
        id: n-12345678
        token: 06u
      properties:
        id:
          description: ID of a custom network
          example: Qui totam iure aut accusamus.
          type: string
        token:
          description: JWT token used to perform authorization
          example: mni
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    FleetDeleteInstanceSnapshotRequest:
      example:
        environmentId: se-12345678
        instanceId: instance-12345678
        serviceId: s-12345678
        snapshotId: instance-ss-12345678
        token: 6sg
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        snapshotId:
          description: The instance snapshot ID
          example: instance-ss-12345678
          type: string
        token:
          description: JWT token used to perform authorization
          example: wt
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - serviceId
      - snapshotId
      - token
      type: object
    FleetDeleteInvoiceRequest:
      example:
        id: invoice-1234568
        token: 1oj
      properties:
        id:
          description: ID of the invoice
          example: invoice-1234568
          type: string
        token:
          description: JWT token used to perform authorization
          example: uh7
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    FleetDeleteResourceInstanceRequest:
      example:
        environmentId: se-12345678
        instanceId: instance-12345678
        resourceId: r-12345678
        serviceId: s-12345678
        token: 7i
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        resourceId:
          description: ID of a resource
          example: Hic voluptate iure nam ea.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: zm
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - resourceId
      - serviceId
      - token
      type: object
    FleetDeleteResourceInstanceRequest2:
      example:
        resourceId: r-12345678
      properties:
        resourceId:
          description: The resource ID.
          example: r-12345678
          type: string
      required:
      - resourceId
      type: object
    FleetDeleteServicesOrchestrationRequest:
      example:
        id: so-12345678
        token: q
      properties:
        id:
          description: ID of a Services Orchestration
          example: Aut sint perferendis dolor.
          type: string
        token:
          description: JWT token used to perform authorization
          example: e5
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    FleetDeleteUserRequest:
      example:
        token: 9l
        userId: user-12345678
      properties:
        token:
          description: JWT token used to perform authorization
          example: 7t
          minLength: 1
          type: string
        userId:
          description: ID of a User
          example: Laborum quibusdam deserunt.
          type: string
      required:
      - token
      - userId
      type: object
    FleetDescribeAccountConfigResult:
      description: Account configuration including the role required to access
      example:
        awsAccountID: "123456789012"
        awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
        awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
        awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
        azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
        azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
        azureSubscriptionID: 12345678-1234-1234-1234-123456789012
        azureTenantID: 12345678-1234-1234-1234-123456789012
        byoaInstanceIDs:
        - instance-12345678
        - instance-abcdefgh
        cloudProviderId: infra-12345678
        description: An AWS account hosting multiple dev environments
        gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
        gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
        gcpProjectID: my-project
        gcpProjectNumber: "123456789012"
        gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
        id: ac-12345678
        name: Dev AWS account
        status: READY
        statusMessage: Account is ready
      properties:
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        awsBootstrapRoleARN:
          description: The security role ARN or service account ARN that grants access
            to operate the infra
          example: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          type: string
        awsCloudFormationNoLBTemplateURL:
          description: The URL to the CloudFormation template (no LoadBalancer policy
            version)
          example: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          type: string
        awsCloudFormationTemplateURL:
          description: The URL to the CloudFormation template
          example: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          type: string
        azureBootstrapShellCommand:
          description: The Azure bootstrap shell command
          example: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          type: string
        azureDisconnectShellCommand:
          description: The Azure disconnect shell command
          example: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          type: string
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        azureTenantID:
          description: The Azure tenant ID
          example: 12345678-1234-1234-1234-123456789012
          type: string
        byoaInstanceIDs:
          description: The BYOA instance IDs that this account config is tied to
          example:
          - instance-12345678
          - instance-abcdefgh
          items:
            example: Illo impedit qui voluptas et.
            type: string
          type: array
        cloudProviderId:
          description: ID of an CloudProvider
          example: Aspernatur saepe eius et dolorem beatae.
          type: string
        description:
          description: The description for the account
          example: An AWS account hosting multiple dev environments
          type: string
        gcpBootstrapShellCommand:
          description: The GCP bootstrap shell command
          example: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          type: string
        gcpDisconnectShellCommand:
          description: The GCP disconnect shell command
          example: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        gcpProjectNumber:
          description: The GCP project number
          example: "123456789012"
          type: string
        gcpServiceAccountEmail:
          description: The GCP service account email
          example: bootstrap@my-project.iam.gserviceaccount.com
          type: string
        id:
          description: ID of an Account Config
          example: Minus fugit omnis est.
          type: string
        name:
          description: The name of the account
          example: Dev AWS account
          type: string
        status:
          description: The status of the account configuration
          example: PENDING|VERIFYING|READY|FAILED|DELETING|READY_TO_OFFBOARD
          type: string
        statusMessage:
          description: The status message of the account
          example: Account is ready
          type: string
      required:
      - cloudProviderId
      - description
      - id
      - name
      - status
      - statusMessage
      type: object
    FleetDescribeCustomNetworkRequest:
      example:
        id: n-12345678
        token: i0
      properties:
        id:
          description: ID of a custom network
          example: Perferendis aperiam fuga praesentium laudantium veniam.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 0ua
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    FleetDescribeEventRequest:
      example:
        environmentId: se-12345678
        id: event-12345678
        instanceId: instance-12345678
        serviceId: s-12345678
        token: j5k
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        id:
          description: ID of a Event
          example: Quasi eos quasi officiis rerum reiciendis.
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: i
          minLength: 1
          type: string
      required:
      - environmentId
      - id
      - instanceId
      - serviceId
      - token
      type: object
    FleetDescribeEventResult:
      example:
        environmentId: se-12345678
        eventSource: "Customer, Infra or Maintenance"
        id: event-12345678
        instanceId: instance-12345678
        message: instance-abcd1234 created
        orgId: org-12345678
        orgName: Acme Corporation
        resourceName: Galera
        serviceId: s-12345678
        time: 2023-01-10T00:00:00Z
        userId: user-12345678
        userName: John Doe
        workflowFailures:
        - eventTime: 2020-01-01T00:00:00Z
          message: Bootstrap failed for reason X
        - eventTime: 2020-01-01T00:01:00Z
          message: Compute failed for reason Y
        workflowId: workflow-12345678
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        eventSource:
          description: The event source
          example: "Customer, Infra or Maintenance"
          type: string
        id:
          description: ID of a Event
          example: Iste commodi culpa numquam.
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        message:
          description: Resource Instance of message
          example: instance-abcd1234 created
          type: string
        orgId:
          description: ID of an Org
          example: Ipsa tenetur unde necessitatibus.
          type: string
        orgName:
          description: The organization name of the user that caused the event
          example: Acme Corporation
          type: string
        resourceName:
          description: Name of the resource
          example: Galera
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        time:
          description: The event time
          example: 2023-01-10T00:00:00Z
          type: string
        userId:
          description: ID of a User
          example: Iste tempora consectetur reiciendis.
          type: string
        userName:
          description: The user name of the user that caused the event
          example: John Doe
          type: string
        workflowFailures:
          description: The list of workflow events that indicate failures
          example:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
          items:
            $ref: "#/components/schemas/WorkflowFailure"
          type: array
        workflowId:
          description: ID of a Workflow
          example: Assumenda beatae.
          type: string
      required:
      - environmentId
      - id
      - instanceId
      - message
      - resourceName
      - serviceId
      - time
      type: object
    FleetDescribeHostClusterRequest:
      example:
        environmentId: se-12345678
        id: hc-12345678
        serviceId: s-12345678
        token: jbw
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        id:
          description: ID of a Host Cluster
          example: Ipsum sit.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 9z
          minLength: 1
          type: string
      required:
      - environmentId
      - id
      - serviceId
      - token
      type: object
    FleetDescribeHostClusterResult:
      example:
        awsAccountID: "123456789012"
        azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
        cloudProvider: aws
        dashboardEndpoint: https://dashboard.example.com
        gcpProjectID: my-project
        id: hc-12345678
        region: us-east-1
        status: READY
        type: Kubernetes
      properties:
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 0fa05079-dd73-4b88-babc-05537817604a
          type: string
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        dashboardEndpoint:
          description: The endpoint to access the dashboard
          example: https://dashboard.example.com
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        id:
          description: ID of a Host Cluster
          example: Molestiae dolorum temporibus et aliquid aspernatur.
          type: string
        region:
          description: The region of the host cluster
          example: us-east-1
          type: string
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        type:
          example: Kubernetes
          type: string
      required:
      - cloudProvider
      - id
      - region
      - status
      - type
      type: object
    FleetDescribeInstanceSnapshotFromTimeRequest:
      example:
        environmentId: se-12345678
        instanceId: instance-12345678
        serviceId: s-12345678
        targetRestoreTime: 2021-09-01T00:00:00Z
        token: "5"
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        targetRestoreTime:
          description: The target restore time
          example: 2021-09-01T00:00:00Z
          type: string
        token:
          description: JWT token used to perform authorization
          example: "7"
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - serviceId
      - targetRestoreTime
      - token
      type: object
    FleetDescribeInstanceSnapshotFromTimeRequest2:
      example:
        targetRestoreTime: 2021-09-01T00:00:00Z
      properties:
        targetRestoreTime:
          description: The target restore time
          example: 2021-09-01T00:00:00Z
          type: string
      required:
      - targetRestoreTime
      type: object
    FleetDescribeInstanceSnapshotFromTimeResult:
      example:
        completeTime: 2021-09-01T00:00:00Z
        environmentId: se-12345678
        productTierId: pt-12345678
        productTierVersion: "1.0"
        serviceId: s-12345678
        snapshotId: instance-ss-12345678
        status: completed
      properties:
        completeTime:
          description: The snapshot time
          example: 2021-09-01T00:00:00Z
          type: string
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Eos rem laudantium.
          type: string
        productTierVersion:
          description: The product tier version
          example: "1.0"
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        snapshotId:
          description: ID of a Resource Instance Snapshot
          example: Rem asperiores deserunt.
          type: string
        status:
          description: The snapshot status
          example: completed
          type: string
      required:
      - completeTime
      - environmentId
      - productTierId
      - productTierVersion
      - serviceId
      - snapshotId
      - status
      type: object
    FleetDescribeInstanceSnapshotRequest:
      example:
        environmentId: se-12345678
        instanceId: instance-12345678
        serviceId: s-12345678
        snapshotId: instance-ss-12345678
        token: 0k
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        snapshotId:
          description: ID of a Resource Instance Snapshot
          example: Illum illo excepturi minima et aut.
          type: string
        token:
          description: JWT token used to perform authorization
          example: g5e
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - serviceId
      - snapshotId
      - token
      type: object
    FleetDescribeInstanceSnapshotResult:
      example:
        completeTime: 2021-09-01T00:00:00Z
        createdTime: 2021-09-01T00:00:00Z
        encrypted: true
        environmentId: se-12345678
        productTierId: pt-12345678
        productTierVersion: "1.0"
        progress: 99
        serviceId: s-12345678
        snapshotId: instance-ss-12345678
        sourceInstanceId: instance-12345678
        status: completed
      properties:
        completeTime:
          description: The snapshot time
          example: 2021-09-01T00:00:00Z
          type: string
        createdTime:
          description: The snapshot creation time
          example: 2021-09-01T00:00:00Z
          type: string
        encrypted:
          description: Whether the snapshot is encrypted
          example: true
          type: boolean
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Qui voluptate non harum.
          type: string
        productTierVersion:
          description: The product tier version
          example: "1.0"
          type: string
        progress:
          description: The backup progress. 0-100
          example: 99
          format: int64
          type: integer
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        snapshotId:
          description: ID of a Resource Instance Snapshot
          example: Eaque quae veniam sint tempora dolore molestiae.
          type: string
        sourceInstanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        status:
          description: The snapshot status
          example: completed
          type: string
      required:
      - completeTime
      - createdTime
      - encrypted
      - environmentId
      - productTierId
      - productTierVersion
      - progress
      - serviceId
      - snapshotId
      - sourceInstanceId
      - status
      type: object
    FleetDescribeOrgUser:
      example:
        token: qh
        userId: user-12345678
      properties:
        token:
          description: JWT token used to perform authorization
          example: 4b
          minLength: 1
          type: string
        userId:
          description: ID of a User
          example: Dolores nihil magnam tenetur consectetur omnis.
          type: string
      required:
      - token
      - userId
      type: object
    FleetDescribeServicesOrchestrationRequest:
      example:
        id: so-12345678
        token: xi
      properties:
        id:
          description: ID of a Services Orchestration
          example: Nam perferendis et qui vel quo rem.
          type: string
        token:
          description: JWT token used to perform authorization
          example: b4
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    FleetDescribeServicesOrchestrationResult:
      example:
        accessServicesOrchestration:
          ServicesTopology:
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Ab veritatis rerum quam voluptates.
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Ab veritatis rerum quam voluptates.
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Ab veritatis rerum quam voluptates.
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Ab veritatis rerum quam voluptates.
          createdAt: 2021-01-01T00:00:00Z
          id: so-12345678
          orchestrationFailedReason: Invalid DSL
          resultParams:
            param1: value1
            param2: value2
          status: PENDING
          updatedAt: 2021-01-01T00:00:00Z
      properties:
        accessServicesOrchestration:
          $ref: "#/components/schemas/DescribeServicesOrchestrationResult"
      type: object
    FleetDescribeSubscriptionRequest:
      example:
        environmentId: se-12345678
        id: sub-12345678
        serviceId: s-12345678
        token: l1
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        id:
          description: ID of a Subscription
          example: Hic nostrum.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: l
          minLength: 1
          type: string
      required:
      - environmentId
      - id
      - serviceId
      - token
      type: object
    FleetDescribeSubscriptionRequestRequest:
      example:
        environmentId: se-12345678
        id: subr-12345678
        serviceId: s-12345678
        token: d7
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        id:
          description: ID of a Subscription Request
          example: Deserunt commodi.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: bqn
          minLength: 1
          type: string
      required:
      - environmentId
      - id
      - serviceId
      - token
      type: object
    FleetDescribeSubscriptionResult:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        billingProvider: Stripe | GovPay
        createdAt: 2019-01-01T00:00:00Z
        currentActivePricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        customPrice: true
        externalPayerId: a3df-sdf9-gfn3-4g3f
        id: sub-12345678
        instanceCount: 3
        maxNumberOfInstances: 10
        productTierId: pt-12345678
        productTierName: Omnistrate Multi Tenancy
        rootUserEmail: abc@gmail.com
        rootUserId: user-12345678
        rootUserName: John Doe
        rootUserOrgId: org-12345678
        scheduledSubscriptionPricingList:
        - createdAt: 2019-01-03T00:00:00Z
          createdByUserId: user-12345678
          createdByUserName: John Doe
          customPrice: false
          endDate: 2019-02-01T00:00:00Z
          isActiveBillingPrice: true
          pricePerUnit:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          startDate: 2019-01-01T00:00:00Z
        - createdAt: 2019-01-04T00:00:00Z
          createdByUserId: user-12345678
          createdByUserName: John Doe
          customPrice: true
          endDate: null
          isActiveBillingPrice: true
          pricePerUnit:
            CPU core hours:
              amount: 0.01
              currency: USD
            Memory GiB hours:
              amount: 0.001
              currency: USD
            Storage GiB hours:
              amount: 0.001
              currency: USD
          startDate: 2019-02-01T00:00:00Z
        serviceId: s-12345678
        serviceLogoURL: Ut ut.
        serviceName: MySQL multi-writer service
        status: ACTIVE
        subscriptionPricingAuditLogs:
        - createdAt: 2019-01-04T00:00:00Z
          createdByUserId: user-12345678
          createdByUserName: John Doe
          customPrice: true
          endDate: 2019-02-01T00:00:00Z
          isActiveBillingPrice: false
          pricePerUnit:
            CPU core hours:
              amount: 0.02
              currency: USD
            Memory GiB hours:
              amount: 0.002
              currency: USD
            Storage GiB hours:
              amount: 0.002
              currency: USD
          startDate: 2019-01-01T00:00:00Z
        - createdAt: 2019-01-04T00:00:00Z
          createdByUserId: user-12345678
          createdByUserName: John Doe
          customPrice: true
          endDate: 2019-02-01T00:00:00Z
          isActiveBillingPrice: true
          pricePerUnit:
            CPU core hours:
              amount: 0.01
              currency: USD
            Memory GiB hours:
              amount: 0.001
              currency: USD
            Storage GiB hours:
              amount: 0.001
              currency: USD
          startDate: 2019-01-01T00:00:00Z
        - createdAt: 2019-01-05T00:00:00Z
          createdByUserId: user-12345678
          createdByUserName: John Doe
          customPrice: true
          endDate: null
          isActiveBillingPrice: true
          pricePerUnit:
            CPU core hours:
              amount: 0.01
              currency: USD
            Memory GiB hours:
              amount: 0.001
              currency: USD
            Storage GiB hours:
              amount: 0.001
              currency: USD
          startDate: 2019-02-01T00:00:00Z
        updatedAt: 2019-01-01T00:00:00Z
        updatedByUserId: user-12345678
        updatedByUserName: John Doe
        updatedByUserOrgId: org-12345678
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Whether to allow creating instances when payment is not configured.
          example: true
          type: boolean
        billingProvider:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        createdAt:
          description: The time that this subscription was created
          example: 2019-01-01T00:00:00Z
          type: string
        currentActivePricePerUnit:
          additionalProperties: true
          description: The active pricing for the subscription at the time of the
            request.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        customPrice:
          description: Whether this subscription has a custom price
          example: true
          type: boolean
        externalPayerId:
          description: The external payer ID to record which customer should pay for
            this subscription
          example: a3df-sdf9-gfn3-4g3f
          type: string
        id:
          description: ID of a Subscription
          example: Pariatur non.
          type: string
        instanceCount:
          description: The number of active instances in the subscription
          example: 3
          format: int64
          type: integer
        maxNumberOfInstances:
          description: The maximum number of instances that can be created for this
            subscription.
          example: 10
          format: int64
          type: integer
        productTierId:
          description: ID of a Product Tier
          example: Inventore veniam mollitia unde deleniti velit.
          type: string
        productTierName:
          description: The name of the product tier
          example: Omnistrate Multi Tenancy
          type: string
        rootUserEmail:
          description: The email of the user that owns the subscription
          example: abc@gmail.com
          type: string
        rootUserId:
          description: ID of a User
          example: Qui et eligendi placeat explicabo expedita est.
          type: string
        rootUserName:
          description: The name of the user that owns the subscription
          example: John Doe
          type: string
        rootUserOrgId:
          description: ID of an Org
          example: Et incidunt dolorem libero.
          type: string
        scheduledSubscriptionPricingList:
          description: "Includes the past, current, and future scheduled pricing for\
            \ this subscription."
          example:
          - createdAt: 2019-01-03T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            customPrice: false
            endDate: 2019-02-01T00:00:00Z
            isActiveBillingPrice: true
            pricePerUnit:
              CPU core hours:
                amount: 0.001
                currency: USD
              Memory GiB hours:
                amount: 1.0E-4
                currency: USD
              Storage GiB hours:
                amount: 1.0E-4
                currency: USD
            startDate: 2019-01-01T00:00:00Z
          - createdAt: 2019-01-04T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            customPrice: true
            endDate: null
            isActiveBillingPrice: true
            pricePerUnit:
              CPU core hours:
                amount: 0.01
                currency: USD
              Memory GiB hours:
                amount: 0.001
                currency: USD
              Storage GiB hours:
                amount: 0.001
                currency: USD
            startDate: 2019-02-01T00:00:00Z
          items:
            $ref: "#/components/schemas/SubscriptionPricing"
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Ea distinctio ut ut quia.
          type: string
        serviceName:
          description: The name of the service
          example: MySQL multi-writer service
          type: string
        status:
          description: Subscription Status
          example: ACTIVE|SUSPENDED|TERMINATED|CANCELLED
          type: string
        subscriptionPricingAuditLogs:
          description: The full audit logs of pricing change for this subscription.
          example:
          - createdAt: 2019-01-04T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            customPrice: true
            endDate: 2019-02-01T00:00:00Z
            isActiveBillingPrice: false
            pricePerUnit:
              CPU core hours:
                amount: 0.02
                currency: USD
              Memory GiB hours:
                amount: 0.002
                currency: USD
              Storage GiB hours:
                amount: 0.002
                currency: USD
            startDate: 2019-01-01T00:00:00Z
          - createdAt: 2019-01-04T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            customPrice: true
            endDate: 2019-02-01T00:00:00Z
            isActiveBillingPrice: true
            pricePerUnit:
              CPU core hours:
                amount: 0.01
                currency: USD
              Memory GiB hours:
                amount: 0.001
                currency: USD
              Storage GiB hours:
                amount: 0.001
                currency: USD
            startDate: 2019-01-01T00:00:00Z
          - createdAt: 2019-01-05T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            customPrice: true
            endDate: null
            isActiveBillingPrice: true
            pricePerUnit:
              CPU core hours:
                amount: 0.01
                currency: USD
              Memory GiB hours:
                amount: 0.001
                currency: USD
              Storage GiB hours:
                amount: 0.001
                currency: USD
            startDate: 2019-02-01T00:00:00Z
          items:
            $ref: "#/components/schemas/SubscriptionPricing"
          type: array
        updatedAt:
          description: The time that this subscription was last updated
          example: 2019-01-01T00:00:00Z
          type: string
        updatedByUserId:
          description: ID of a User
          example: Corporis voluptas accusantium eveniet dolores.
          type: string
        updatedByUserName:
          description: The name of the user that last updated the subscription
          example: John Doe
          type: string
        updatedByUserOrgId:
          description: ID of an Org
          example: Enim doloribus incidunt sunt.
          type: string
      required:
      - createdAt
      - id
      - instanceCount
      - productTierId
      - productTierName
      - rootUserEmail
      - rootUserId
      - rootUserName
      - serviceId
      - serviceName
      - status
      - updatedAt
      - updatedByUserId
      - updatedByUserName
      type: object
    FleetDescribeUser:
      example:
        environmentId: se-12345678
        serviceId: s-12345678
        token: nwc
        userId: user-12345678
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: xx2
          minLength: 1
          type: string
        userId:
          description: ID of a User
          example: Sapiente mollitia atque.
          type: string
      required:
      - environmentId
      - serviceId
      - token
      - userId
      type: object
    FleetDescribeUserResult:
      example:
        createdAt: 2021-01-01T00:00:00Z
        email: alice@enterprise.com
        enabled: true
        lastModifiedAt: 2021-01-01T00:00:00Z
        lastModifiedByUserID: user-12345678
        lastModifiedByUserName: Alice
        orgId: org-12345678
        orgName: Enterprise
        orgUrl: https://enterprise.com
        status: ACTIVE
        subscriptions:
        - cloudProviderNames:
          - aws
          - gcp
          defaultSubscription: true
          email: abc@gmail.com
          instanceCount: 3
          name: John Dae
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          roleType: reader
          serviceEnvironmentId: se-12345678
          serviceId: s-12345678
          serviceLogoURL: Et molestiae sit minus doloribus necessitatibus.
          serviceName: MySQL multi-writer service
          subscriptionDate: 2019-01-01T00:00:00Z
          subscriptionId: sub-abcd1234
          subscriptionOwnerName: John Doe
          userId: "[]user-abcd1234"
        - cloudProviderNames:
          - aws
          - gcp
          defaultSubscription: true
          email: abc@gmail.com
          instanceCount: 3
          name: John Dae
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          roleType: reader
          serviceEnvironmentId: se-12345678
          serviceId: s-12345678
          serviceLogoURL: Et molestiae sit minus doloribus necessitatibus.
          serviceName: MySQL multi-writer service
          subscriptionDate: 2019-01-01T00:00:00Z
          subscriptionId: sub-abcd1234
          subscriptionOwnerName: John Doe
          userId: "[]user-abcd1234"
        - cloudProviderNames:
          - aws
          - gcp
          defaultSubscription: true
          email: abc@gmail.com
          instanceCount: 3
          name: John Dae
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          roleType: reader
          serviceEnvironmentId: se-12345678
          serviceId: s-12345678
          serviceLogoURL: Et molestiae sit minus doloribus necessitatibus.
          serviceName: MySQL multi-writer service
          subscriptionDate: 2019-01-01T00:00:00Z
          subscriptionId: sub-abcd1234
          subscriptionOwnerName: John Doe
          userId: "[]user-abcd1234"
        token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
        userId: user-12345678
        userName: Alice
      properties:
        createdAt:
          description: The time the user was created.
          example: 2021-01-01T00:00:00Z
          type: string
        email:
          description: The user email.
          example: alice@enterprise.com
          type: string
        enabled:
          description: Is the user enabled.
          example: true
          type: boolean
        lastModifiedAt:
          description: The last modified time of the user.
          example: 2021-01-01T00:00:00Z
          type: string
        lastModifiedByUserID:
          description: ID of a User
          example: Ipsam harum nihil ex qui rerum.
          type: string
        lastModifiedByUserName:
          description: The user name of the last modifier.
          example: Alice
          type: string
        orgId:
          description: ID of an Org
          example: Provident occaecati voluptatem atque.
          type: string
        orgName:
          description: The organization name.
          example: Enterprise
          type: string
        orgUrl:
          description: The organization URL.
          example: https://enterprise.com
          type: string
        status:
          description: The status of the user.
          example: ACTIVE|NOT_ENABLED
          type: string
        subscriptions:
          description: List of subscriptions associated with the user.
          example:
          - cloudProviderNames:
            - aws
            - gcp
            defaultSubscription: true
            email: abc@gmail.com
            instanceCount: 3
            name: John Dae
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            roleType: reader
            serviceEnvironmentId: se-12345678
            serviceId: s-12345678
            serviceLogoURL: Et molestiae sit minus doloribus necessitatibus.
            serviceName: MySQL multi-writer service
            subscriptionDate: 2019-01-01T00:00:00Z
            subscriptionId: sub-abcd1234
            subscriptionOwnerName: John Doe
            userId: "[]user-abcd1234"
          - cloudProviderNames:
            - aws
            - gcp
            defaultSubscription: true
            email: abc@gmail.com
            instanceCount: 3
            name: John Dae
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            roleType: reader
            serviceEnvironmentId: se-12345678
            serviceId: s-12345678
            serviceLogoURL: Et molestiae sit minus doloribus necessitatibus.
            serviceName: MySQL multi-writer service
            subscriptionDate: 2019-01-01T00:00:00Z
            subscriptionId: sub-abcd1234
            subscriptionOwnerName: John Doe
            userId: "[]user-abcd1234"
          - cloudProviderNames:
            - aws
            - gcp
            defaultSubscription: true
            email: abc@gmail.com
            instanceCount: 3
            name: John Dae
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            roleType: reader
            serviceEnvironmentId: se-12345678
            serviceId: s-12345678
            serviceLogoURL: Et molestiae sit minus doloribus necessitatibus.
            serviceName: MySQL multi-writer service
            subscriptionDate: 2019-01-01T00:00:00Z
            subscriptionId: sub-abcd1234
            subscriptionOwnerName: John Doe
            userId: "[]user-abcd1234"
          items:
            $ref: "#/components/schemas/UserSubscription"
          type: array
        token:
          description: "Token to validate the user, if the user is not enabled."
          example: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
          minLength: 1
          type: string
        userId:
          description: ID of a User
          example: Laboriosam culpa ut corporis officiis voluptatem molestiae.
          type: string
        userName:
          description: The user name.
          example: Alice
          type: string
      type: object
    FleetFailoverResourceInstanceRequest:
      example:
        environmentId: se-12345678
        failedReplicaAction: FAILOVER_AND_RESTART
        failedReplicaID: db-0
        instanceId: instance-12345678
        serviceId: s-12345678
        token: "9"
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        failedReplicaAction:
          description: The action to take for the replica that has failed
          example: FAILOVER_ONLY|FAILOVER_AND_RESTART|FAILOVER_AND_RECREATE
          type: string
        failedReplicaID:
          description: The failed replica ID
          example: db-0
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ff
          minLength: 1
          type: string
      required:
      - environmentId
      - failedReplicaID
      - instanceId
      - serviceId
      - token
      type: object
    FleetFailoverResourceInstanceRequest2:
      example:
        failedReplicaAction: FAILOVER_AND_RESTART
        failedReplicaID: db-0
      properties:
        failedReplicaAction:
          description: The failed replica action
          example: FAILOVER_AND_RESTART
          type: string
        failedReplicaID:
          description: The failed replica ID
          example: db-0
          type: string
      required:
      - failedReplicaID
      type: object
    FleetGenerateTokenForHostClusterDashboardRequest:
      example:
        environmentId: se-12345678
        id: hc-12345678
        serviceId: s-12345678
        token: d
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        id:
          description: ID of a Host Cluster
          example: Ab omnis.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: g
          minLength: 1
          type: string
      required:
      - environmentId
      - id
      - serviceId
      - token
      type: object
    FleetGenerateTokenForHostClusterDashboardResult:
      example:
        expirationTimestamp: 2021-01-01T00:00:00Z
        token: token
      properties:
        expirationTimestamp:
          description: The timestamp when the token expires
          example: 2021-01-01T00:00:00Z
          type: string
        token:
          description: The token to access the dashboard
          example: token
          type: string
      required:
      - expirationTimestamp
      - token
      type: object
    FleetInvoice:
      example:
        billIssuedToUserEmail: abcd@example.io
        billIssuedToUserID: user-1234568
        billIssuedToUserName: John Doe
        currency: USD
        customerId: org-1234568
        customerName: Acme Corp
        dueDate: 2023-10-01T00:00:00Z
        id: invoice-1234568
        invoiceDate: 2023-10-01T00:00:00Z
        invoiceUrl: https://dashboard.stripe.com/invoices/in_1R9aJ8G10a5MrQfCjUX3dstN
        paymentTerms: Net 30
        status: open
        taxAmount: 10
        totalAmount: 110
        totalAmountWithoutTax: 100
      properties:
        billIssuedToUserEmail:
          description: Email of the user that this invoice is issued to
          example: abcd@example.io
          type: string
        billIssuedToUserID:
          description: ID of the user that this invoice is issued to
          example: user-1234568
          type: string
        billIssuedToUserName:
          description: Name of the user that this invoice is issued to
          example: John Doe
          type: string
        currency:
          description: Currency of the invoice
          example: USD
          type: string
        customerId:
          description: ID of an Org
          example: Est expedita a quaerat veniam expedita.
          type: string
        customerName:
          description: Organization name of the customer
          example: Acme Corp
          type: string
        dueDate:
          description: Due date in ISO 8601 format
          example: 2023-10-01T00:00:00Z
          type: string
        id:
          description: ID of the invoice
          example: invoice-1234568
          type: string
        invoiceDate:
          description: Date of the invoice in ISO 8601 format
          example: 2023-10-01T00:00:00Z
          type: string
        invoiceUrl:
          description: Stripe URL for this invoice
          example: https://dashboard.stripe.com/invoices/in_1R9aJ8G10a5MrQfCjUX3dstN
          type: string
        paymentTerms:
          description: Payment terms of the invoice
          example: Net 30
          type: string
        status:
          description: This describes the status of the invoice and is set by the
            payment provider
          example: draft|open|paid|uncollectible|void
          type: string
        taxAmount:
          description: "Amount of tax, if any"
          example: 10
          format: double
          type: number
        totalAmount:
          description: Amount of Invoice
          example: 110
          format: double
          type: number
        totalAmountWithoutTax:
          description: Amount of Invoice without tax
          example: 100
          format: double
          type: number
      type: object
    FleetListAccountConfigsRequest:
      example:
        cloudProviderName: aws
        token: i
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        token:
          description: JWT token used to perform authorization
          example: gq
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - token
      type: object
    FleetListAccountConfigsRequest2:
      example:
        cloudProviderName: aws
      properties:
        cloudProviderName:
          description: Cloud Provider name to filter on
          example: aws
          type: string
      required:
      - cloudProviderName
      type: object
    FleetListAllUsers:
      example:
        nextPageToken: token
        pageSize: 10
        serviceId: s-12345678
        token: ju
      properties:
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: m
          minLength: 1
          type: string
      required:
      - token
      type: object
    FleetListAllUsersResult:
      example:
        nextPageToken: next-token
        serviceId: s-12345678
        users:
        - createdAt: 2021-01-01T00:00:00Z
          email: alice@enterprise.com
          enabled: true
          instanceCount: 3
          lastModifiedAt: 2021-01-01T00:00:00Z
          lastModifiedByUserID: user-12345678
          lastModifiedByUserName: Alice
          orgId: org-12345678
          orgName: Enterprise
          orgUrl: https://enterprise.com
          status: ACTIVE
          subscriptionCount: 3
          token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
          userId: user-12345678
          userName: Alice
        - createdAt: 2021-01-01T00:00:00Z
          email: alice@enterprise.com
          enabled: true
          instanceCount: 3
          lastModifiedAt: 2021-01-01T00:00:00Z
          lastModifiedByUserID: user-12345678
          lastModifiedByUserName: Alice
          orgId: org-12345678
          orgName: Enterprise
          orgUrl: https://enterprise.com
          status: ACTIVE
          subscriptionCount: 3
          token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
          userId: user-12345678
          userName: Alice
        - createdAt: 2021-01-01T00:00:00Z
          email: alice@enterprise.com
          enabled: true
          instanceCount: 3
          lastModifiedAt: 2021-01-01T00:00:00Z
          lastModifiedByUserID: user-12345678
          lastModifiedByUserName: Alice
          orgId: org-12345678
          orgName: Enterprise
          orgUrl: https://enterprise.com
          status: ACTIVE
          subscriptionCount: 3
          token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
          userId: user-12345678
          userName: Alice
      properties:
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        users:
          description: List of access-side users.
          example:
          - createdAt: 2021-01-01T00:00:00Z
            email: alice@enterprise.com
            enabled: true
            instanceCount: 3
            lastModifiedAt: 2021-01-01T00:00:00Z
            lastModifiedByUserID: user-12345678
            lastModifiedByUserName: Alice
            orgId: org-12345678
            orgName: Enterprise
            orgUrl: https://enterprise.com
            status: ACTIVE
            subscriptionCount: 3
            token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
            userId: user-12345678
            userName: Alice
          - createdAt: 2021-01-01T00:00:00Z
            email: alice@enterprise.com
            enabled: true
            instanceCount: 3
            lastModifiedAt: 2021-01-01T00:00:00Z
            lastModifiedByUserID: user-12345678
            lastModifiedByUserName: Alice
            orgId: org-12345678
            orgName: Enterprise
            orgUrl: https://enterprise.com
            status: ACTIVE
            subscriptionCount: 3
            token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
            userId: user-12345678
            userName: Alice
          - createdAt: 2021-01-01T00:00:00Z
            email: alice@enterprise.com
            enabled: true
            instanceCount: 3
            lastModifiedAt: 2021-01-01T00:00:00Z
            lastModifiedByUserID: user-12345678
            lastModifiedByUserName: Alice
            orgId: org-12345678
            orgName: Enterprise
            orgUrl: https://enterprise.com
            status: ACTIVE
            subscriptionCount: 3
            token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
            userId: user-12345678
            userName: Alice
          items:
            $ref: "#/components/schemas/AccessSideUser"
          type: array
      required:
      - users
      type: object
    FleetListCustomNetworksRequest:
      example:
        cloudProviderName: aws
        cloudProviderRegion: us-east-1
        customNetworksOnly: false
        token: 3c5
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        cloudProviderRegion:
          description: The region of the cloud provider that the instance is running
            in.
          example: us-east-1
          type: string
        customNetworksOnly:
          description: "Flag indicating whether to return only custom networks, or\
            \ to include default and imported networks as well"
          example: false
          type: boolean
        token:
          description: JWT token used to perform authorization
          example: mu
          minLength: 1
          type: string
      required:
      - token
      type: object
    FleetListCustomNetworksResult:
      example:
        customNetworks:
        - cidr: 10.0.0.0/16
          cloudProviderName: aws
          cloudProviderRegion: us-east-1
          id: n-12345678
          name: Prod us-east-1
          networkDefinitionType: Custom
          networkFeaturesConfiguration:
            isPrivateLinkEnabled: false
          networkInstances:
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          owningOrgID: org-12345678
          owningOrgName: my-customer
          owningUserID: user-12345678
          owningUserName: Jane Doe
        - cidr: 10.0.0.0/16
          cloudProviderName: aws
          cloudProviderRegion: us-east-1
          id: n-12345678
          name: Prod us-east-1
          networkDefinitionType: Custom
          networkFeaturesConfiguration:
            isPrivateLinkEnabled: false
          networkInstances:
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          owningOrgID: org-12345678
          owningOrgName: my-customer
          owningUserID: user-12345678
          owningUserName: Jane Doe
        - cidr: 10.0.0.0/16
          cloudProviderName: aws
          cloudProviderRegion: us-east-1
          id: n-12345678
          name: Prod us-east-1
          networkDefinitionType: Custom
          networkFeaturesConfiguration:
            isPrivateLinkEnabled: false
          networkInstances:
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          owningOrgID: org-12345678
          owningOrgName: my-customer
          owningUserID: user-12345678
          owningUserName: Jane Doe
        - cidr: 10.0.0.0/16
          cloudProviderName: aws
          cloudProviderRegion: us-east-1
          id: n-12345678
          name: Prod us-east-1
          networkDefinitionType: Custom
          networkFeaturesConfiguration:
            isPrivateLinkEnabled: false
          networkInstances:
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          - awsAccountID: "123456789012"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            cloudProviderNativeNetworkId: vpc-12345678
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            hostClusterID: hc-12345678
          owningOrgID: org-12345678
          owningOrgName: my-customer
          owningUserID: user-12345678
          owningUserName: Jane Doe
      properties:
        customNetworks:
          description: List of custom networks
          example:
          - cidr: 10.0.0.0/16
            cloudProviderName: aws
            cloudProviderRegion: us-east-1
            id: n-12345678
            name: Prod us-east-1
            networkDefinitionType: Custom
            networkFeaturesConfiguration:
              isPrivateLinkEnabled: false
            networkInstances:
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            owningOrgID: org-12345678
            owningOrgName: my-customer
            owningUserID: user-12345678
            owningUserName: Jane Doe
          - cidr: 10.0.0.0/16
            cloudProviderName: aws
            cloudProviderRegion: us-east-1
            id: n-12345678
            name: Prod us-east-1
            networkDefinitionType: Custom
            networkFeaturesConfiguration:
              isPrivateLinkEnabled: false
            networkInstances:
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            owningOrgID: org-12345678
            owningOrgName: my-customer
            owningUserID: user-12345678
            owningUserName: Jane Doe
          - cidr: 10.0.0.0/16
            cloudProviderName: aws
            cloudProviderRegion: us-east-1
            id: n-12345678
            name: Prod us-east-1
            networkDefinitionType: Custom
            networkFeaturesConfiguration:
              isPrivateLinkEnabled: false
            networkInstances:
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            - awsAccountID: "123456789012"
              azureSubscriptionID: 12345678-1234-1234-1234-123456789012
              azureTenantID: 12345678-1234-1234-1234-123456789012
              cloudProviderNativeNetworkId: vpc-12345678
              gcpProjectID: my-project
              gcpProjectNumber: "123456789012"
              hostClusterID: hc-12345678
            owningOrgID: org-12345678
            owningOrgName: my-customer
            owningUserID: user-12345678
            owningUserName: Jane Doe
          items:
            $ref: "#/components/schemas/FleetCustomNetwork"
          type: array
      required:
      - customNetworks
      type: object
    FleetListDependentComponentsRequest:
      example:
        environmentId: se-12345678
        instanceId: instance-12345678
        serviceId: s-12345678
        token: 1s
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: t
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - serviceId
      - token
      type: object
    FleetListDependentComponentsResult:
      example:
        environmentId: se-12345678
        nextPageToken: next-token
        resources:
        - environmentId: se-12345678
          instanceCount: 2
          name: asserts-server
          perVersionInstanceCount:
            "1.0": 2
            "1.1": 2
            "2.0": 2
          productTierType: OMNISTRATE_DEDICATED
          proxyType: PortsBasedProxy
          resourceId: r-12345678
          serviceId: s-12345678
          serviceModelType: OMNISTRATE_HOSTED
          version: "2.0"
          versionHistory:
          - "1.0"
          - "1.1"
          - "2.0"
        - environmentId: se-12345678
          instanceCount: 2
          name: asserts-server
          perVersionInstanceCount:
            "1.0": 2
            "1.1": 2
            "2.0": 2
          productTierType: OMNISTRATE_DEDICATED
          proxyType: PortsBasedProxy
          resourceId: r-12345678
          serviceId: s-12345678
          serviceModelType: OMNISTRATE_HOSTED
          version: "2.0"
          versionHistory:
          - "1.0"
          - "1.1"
          - "2.0"
        serviceId: s-12345678
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        resources:
          description: The list of dependent resources.
          example:
          - environmentId: se-12345678
            instanceCount: 2
            name: asserts-server
            perVersionInstanceCount:
              "1.0": 2
              "1.1": 2
              "2.0": 2
            productTierType: OMNISTRATE_DEDICATED
            proxyType: PortsBasedProxy
            resourceId: r-12345678
            serviceId: s-12345678
            serviceModelType: OMNISTRATE_HOSTED
            version: "2.0"
            versionHistory:
            - "1.0"
            - "1.1"
            - "2.0"
          - environmentId: se-12345678
            instanceCount: 2
            name: asserts-server
            perVersionInstanceCount:
              "1.0": 2
              "1.1": 2
              "2.0": 2
            productTierType: OMNISTRATE_DEDICATED
            proxyType: PortsBasedProxy
            resourceId: r-12345678
            serviceId: s-12345678
            serviceModelType: OMNISTRATE_HOSTED
            version: "2.0"
            versionHistory:
            - "1.0"
            - "1.1"
            - "2.0"
          - environmentId: se-12345678
            instanceCount: 2
            name: asserts-server
            perVersionInstanceCount:
              "1.0": 2
              "1.1": 2
              "2.0": 2
            productTierType: OMNISTRATE_DEDICATED
            proxyType: PortsBasedProxy
            resourceId: r-12345678
            serviceId: s-12345678
            serviceModelType: OMNISTRATE_HOSTED
            version: "2.0"
            versionHistory:
            - "1.0"
            - "1.1"
            - "2.0"
          - environmentId: se-12345678
            instanceCount: 2
            name: asserts-server
            perVersionInstanceCount:
              "1.0": 2
              "1.1": 2
              "2.0": 2
            productTierType: OMNISTRATE_DEDICATED
            proxyType: PortsBasedProxy
            resourceId: r-12345678
            serviceId: s-12345678
            serviceModelType: OMNISTRATE_HOSTED
            version: "2.0"
            versionHistory:
            - "1.0"
            - "1.1"
            - "2.0"
          items:
            $ref: "#/components/schemas/Resource"
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - environmentId
      - resources
      - serviceId
      type: object
    FleetListEventsRequest:
      example:
        endTime: 2023-01-10T00:00:00Z
        environmentId: se-12345678
        instanceId: instance-12345678
        serviceId: s-12345678
        startTime: 2023-01-10T00:00:00Z
        token: 61o
      properties:
        endTime:
          description: Filter events that occurred before this time
          example: 2023-01-10T00:00:00Z
          type: string
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        startTime:
          description: Filter events that occurred after this time
          example: 2023-01-10T00:00:00Z
          type: string
        token:
          description: JWT token used to perform authorization
          example: zzu
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - serviceId
      - token
      type: object
    FleetListEventsResult:
      example:
        events:
        - environmentId: se-12345678
          eventSource: "Customer, Infra or Maintenance"
          id: event-12345678
          instanceId: instance-12345678
          message: instance-abcd1234 created
          orgId: org-12345678
          orgName: Acme Corporation
          resourceName: Galera
          serviceId: s-12345678
          time: 2023-01-10T00:00:00Z
          userId: user-12345678
          userName: John Doe
          workflowFailures:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
          workflowId: workflow-12345678
        - environmentId: se-12345678
          eventSource: "Customer, Infra or Maintenance"
          id: event-12345678
          instanceId: instance-12345678
          message: instance-abcd1234 created
          orgId: org-12345678
          orgName: Acme Corporation
          resourceName: Galera
          serviceId: s-12345678
          time: 2023-01-10T00:00:00Z
          userId: user-12345678
          userName: John Doe
          workflowFailures:
          - eventTime: 2020-01-01T00:00:00Z
            message: Bootstrap failed for reason X
          - eventTime: 2020-01-01T00:01:00Z
            message: Compute failed for reason Y
          workflowId: workflow-12345678
        ids:
        - event-12345678
        nextPageToken: token
      properties:
        events:
          description: The list of events
          example:
          - environmentId: se-12345678
            eventSource: "Customer, Infra or Maintenance"
            id: event-12345678
            instanceId: instance-12345678
            message: instance-abcd1234 created
            orgId: org-12345678
            orgName: Acme Corporation
            resourceName: Galera
            serviceId: s-12345678
            time: 2023-01-10T00:00:00Z
            userId: user-12345678
            userName: John Doe
            workflowFailures:
            - eventTime: 2020-01-01T00:00:00Z
              message: Bootstrap failed for reason X
            - eventTime: 2020-01-01T00:01:00Z
              message: Compute failed for reason Y
            workflowId: workflow-12345678
          - environmentId: se-12345678
            eventSource: "Customer, Infra or Maintenance"
            id: event-12345678
            instanceId: instance-12345678
            message: instance-abcd1234 created
            orgId: org-12345678
            orgName: Acme Corporation
            resourceName: Galera
            serviceId: s-12345678
            time: 2023-01-10T00:00:00Z
            userId: user-12345678
            userName: John Doe
            workflowFailures:
            - eventTime: 2020-01-01T00:00:00Z
              message: Bootstrap failed for reason X
            - eventTime: 2020-01-01T00:01:00Z
              message: Compute failed for reason Y
            workflowId: workflow-12345678
          - environmentId: se-12345678
            eventSource: "Customer, Infra or Maintenance"
            id: event-12345678
            instanceId: instance-12345678
            message: instance-abcd1234 created
            orgId: org-12345678
            orgName: Acme Corporation
            resourceName: Galera
            serviceId: s-12345678
            time: 2023-01-10T00:00:00Z
            userId: user-12345678
            userName: John Doe
            workflowFailures:
            - eventTime: 2020-01-01T00:00:00Z
              message: Bootstrap failed for reason X
            - eventTime: 2020-01-01T00:01:00Z
              message: Compute failed for reason Y
            workflowId: workflow-12345678
          - environmentId: se-12345678
            eventSource: "Customer, Infra or Maintenance"
            id: event-12345678
            instanceId: instance-12345678
            message: instance-abcd1234 created
            orgId: org-12345678
            orgName: Acme Corporation
            resourceName: Galera
            serviceId: s-12345678
            time: 2023-01-10T00:00:00Z
            userId: user-12345678
            userName: John Doe
            workflowFailures:
            - eventTime: 2020-01-01T00:00:00Z
              message: Bootstrap failed for reason X
            - eventTime: 2020-01-01T00:01:00Z
              message: Compute failed for reason Y
            workflowId: workflow-12345678
          items:
            $ref: "#/components/schemas/FleetDescribeEventResult"
          type: array
        ids:
          description: The list of event IDs
          example:
          - event-12345678
          items:
            description: ID of a Event
            example: Accusantium ratione maxime mollitia exercitationem.
            type: string
          type: array
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
      required:
      - events
      - ids
      type: object
    FleetListHostClustersRequest:
      example:
        environmentId: se-12345678
        nextPageToken: token
        pageSize: 10
        serviceId: s-12345678
        token: "1"
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: o5
          minLength: 1
          type: string
      required:
      - environmentId
      - serviceId
      - token
      type: object
    FleetListHostClustersResult:
      example:
        hostClusters:
        - awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          cloudProvider: aws
          dashboardEndpoint: https://dashboard.example.com
          gcpProjectID: my-project
          id: hc-12345678
          region: us-east-1
          status: READY
          type: Kubernetes
        - awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          cloudProvider: aws
          dashboardEndpoint: https://dashboard.example.com
          gcpProjectID: my-project
          id: hc-12345678
          region: us-east-1
          status: READY
          type: Kubernetes
        ids:
        - sub-12345678
        - sub-abcdefgh
        - sub-1234efgh
        nextPageToken: next-token
      properties:
        hostClusters:
          description: List of host clusters
          example:
          - awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            cloudProvider: aws
            dashboardEndpoint: https://dashboard.example.com
            gcpProjectID: my-project
            id: hc-12345678
            region: us-east-1
            status: READY
            type: Kubernetes
          - awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            cloudProvider: aws
            dashboardEndpoint: https://dashboard.example.com
            gcpProjectID: my-project
            id: hc-12345678
            region: us-east-1
            status: READY
            type: Kubernetes
          - awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            cloudProvider: aws
            dashboardEndpoint: https://dashboard.example.com
            gcpProjectID: my-project
            id: hc-12345678
            region: us-east-1
            status: READY
            type: Kubernetes
          - awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            cloudProvider: aws
            dashboardEndpoint: https://dashboard.example.com
            gcpProjectID: my-project
            id: hc-12345678
            region: us-east-1
            status: READY
            type: Kubernetes
          items:
            $ref: "#/components/schemas/FleetDescribeHostClusterResult"
          type: array
        ids:
          description: List of host cluster IDs
          example:
          - sub-12345678
          - sub-abcdefgh
          - sub-1234efgh
          items:
            description: ID of a Host Cluster
            example: Placeat autem quidem maiores hic ut ea.
            type: string
          type: array
        nextPageToken:
          description: The next token to use when listing host clusters
          example: next-token
          type: string
      required:
      - hostClusters
      - ids
      type: object
    FleetListInstanceSnapshotRequest:
      example:
        environmentId: se-12345678
        instanceId: instance-12345678
        serviceId: s-12345678
        token: v31
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: nsv
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - serviceId
      - token
      type: object
    FleetListInstanceSnapshotResult:
      example:
        snapshots:
        - completeTime: 2021-09-01T00:00:00Z
          createdTime: 2021-09-01T00:00:00Z
          encrypted: true
          environmentId: se-12345678
          productTierId: pt-12345678
          productTierVersion: "1.0"
          progress: 99
          serviceId: s-12345678
          snapshotId: instance-ss-12345678
          sourceInstanceId: instance-12345678
          status: completed
        - completeTime: 2021-09-01T00:00:00Z
          createdTime: 2021-09-01T00:00:00Z
          encrypted: true
          environmentId: se-12345678
          productTierId: pt-12345678
          productTierVersion: "1.0"
          progress: 99
          serviceId: s-12345678
          snapshotId: instance-ss-12345678
          sourceInstanceId: instance-12345678
          status: completed
        - completeTime: 2021-09-01T00:00:00Z
          createdTime: 2021-09-01T00:00:00Z
          encrypted: true
          environmentId: se-12345678
          productTierId: pt-12345678
          productTierVersion: "1.0"
          progress: 99
          serviceId: s-12345678
          snapshotId: instance-ss-12345678
          sourceInstanceId: instance-12345678
          status: completed
      properties:
        snapshots:
          description: The list of instance snapshots.
          example:
          - completeTime: 2021-09-01T00:00:00Z
            createdTime: 2021-09-01T00:00:00Z
            encrypted: true
            environmentId: se-12345678
            productTierId: pt-12345678
            productTierVersion: "1.0"
            progress: 99
            serviceId: s-12345678
            snapshotId: instance-ss-12345678
            sourceInstanceId: instance-12345678
            status: completed
          - completeTime: 2021-09-01T00:00:00Z
            createdTime: 2021-09-01T00:00:00Z
            encrypted: true
            environmentId: se-12345678
            productTierId: pt-12345678
            productTierVersion: "1.0"
            progress: 99
            serviceId: s-12345678
            snapshotId: instance-ss-12345678
            sourceInstanceId: instance-12345678
            status: completed
          - completeTime: 2021-09-01T00:00:00Z
            createdTime: 2021-09-01T00:00:00Z
            encrypted: true
            environmentId: se-12345678
            productTierId: pt-12345678
            productTierVersion: "1.0"
            progress: 99
            serviceId: s-12345678
            snapshotId: instance-ss-12345678
            sourceInstanceId: instance-12345678
            status: completed
          - completeTime: 2021-09-01T00:00:00Z
            createdTime: 2021-09-01T00:00:00Z
            encrypted: true
            environmentId: se-12345678
            productTierId: pt-12345678
            productTierVersion: "1.0"
            progress: 99
            serviceId: s-12345678
            snapshotId: instance-ss-12345678
            sourceInstanceId: instance-12345678
            status: completed
          items:
            $ref: "#/components/schemas/FleetDescribeInstanceSnapshotResult"
          type: array
      type: object
    FleetListInvoicesRequest:
      example:
        billingProvider: STRIPE
        customerId: customer-1234568
        endDate: 2024-01-01T10:00:00Z
        startDate: 2023-01-01T10:00:00Z
        status: open
        token: wd
      properties:
        billingProvider:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        customerId:
          description: ID of the customer
          example: customer-1234568
          type: string
        endDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        startDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        status:
          description: This describes the status of the invoice and is set by the
            payment provider
          example: draft|open|paid|uncollectible|void
          type: string
        token:
          description: JWT token used to perform authorization
          example: "426"
          minLength: 1
          type: string
      required:
      - token
      type: object
    FleetListInvoicesResult:
      example:
        invoices:
        - billIssuedToUserEmail: abcd@example.io
          billIssuedToUserID: user-1234568
          billIssuedToUserName: John Doe
          currency: USD
          customerId: org-1234568
          customerName: Acme Corp
          dueDate: 2023-10-01T00:00:00Z
          id: invoice-1234568
          invoiceDate: 2023-10-01T00:00:00Z
          invoiceUrl: https://dashboard.stripe.com/invoices/in_1R9aJ8G10a5MrQfCjUX3dstN
          paymentTerms: Net 30
          status: open
          taxAmount: 10
          totalAmount: 110
          totalAmountWithoutTax: 100
        - billIssuedToUserEmail: abcd@example.io
          billIssuedToUserID: user-1234568
          billIssuedToUserName: John Doe
          currency: USD
          customerId: org-1234568
          customerName: Acme Corp
          dueDate: 2023-10-01T00:00:00Z
          id: invoice-1234568
          invoiceDate: 2023-10-01T00:00:00Z
          invoiceUrl: https://dashboard.stripe.com/invoices/in_1R9aJ8G10a5MrQfCjUX3dstN
          paymentTerms: Net 30
          status: open
          taxAmount: 10
          totalAmount: 110
          totalAmountWithoutTax: 100
        - billIssuedToUserEmail: abcd@example.io
          billIssuedToUserID: user-1234568
          billIssuedToUserName: John Doe
          currency: USD
          customerId: org-1234568
          customerName: Acme Corp
          dueDate: 2023-10-01T00:00:00Z
          id: invoice-1234568
          invoiceDate: 2023-10-01T00:00:00Z
          invoiceUrl: https://dashboard.stripe.com/invoices/in_1R9aJ8G10a5MrQfCjUX3dstN
          paymentTerms: Net 30
          status: open
          taxAmount: 10
          totalAmount: 110
          totalAmountWithoutTax: 100
        - billIssuedToUserEmail: abcd@example.io
          billIssuedToUserID: user-1234568
          billIssuedToUserName: John Doe
          currency: USD
          customerId: org-1234568
          customerName: Acme Corp
          dueDate: 2023-10-01T00:00:00Z
          id: invoice-1234568
          invoiceDate: 2023-10-01T00:00:00Z
          invoiceUrl: https://dashboard.stripe.com/invoices/in_1R9aJ8G10a5MrQfCjUX3dstN
          paymentTerms: Net 30
          status: open
          taxAmount: 10
          totalAmount: 110
          totalAmountWithoutTax: 100
      properties:
        invoices:
          example:
          - billIssuedToUserEmail: abcd@example.io
            billIssuedToUserID: user-1234568
            billIssuedToUserName: John Doe
            currency: USD
            customerId: org-1234568
            customerName: Acme Corp
            dueDate: 2023-10-01T00:00:00Z
            id: invoice-1234568
            invoiceDate: 2023-10-01T00:00:00Z
            invoiceUrl: https://dashboard.stripe.com/invoices/in_1R9aJ8G10a5MrQfCjUX3dstN
            paymentTerms: Net 30
            status: open
            taxAmount: 10
            totalAmount: 110
            totalAmountWithoutTax: 100
          - billIssuedToUserEmail: abcd@example.io
            billIssuedToUserID: user-1234568
            billIssuedToUserName: John Doe
            currency: USD
            customerId: org-1234568
            customerName: Acme Corp
            dueDate: 2023-10-01T00:00:00Z
            id: invoice-1234568
            invoiceDate: 2023-10-01T00:00:00Z
            invoiceUrl: https://dashboard.stripe.com/invoices/in_1R9aJ8G10a5MrQfCjUX3dstN
            paymentTerms: Net 30
            status: open
            taxAmount: 10
            totalAmount: 110
            totalAmountWithoutTax: 100
          - billIssuedToUserEmail: abcd@example.io
            billIssuedToUserID: user-1234568
            billIssuedToUserName: John Doe
            currency: USD
            customerId: org-1234568
            customerName: Acme Corp
            dueDate: 2023-10-01T00:00:00Z
            id: invoice-1234568
            invoiceDate: 2023-10-01T00:00:00Z
            invoiceUrl: https://dashboard.stripe.com/invoices/in_1R9aJ8G10a5MrQfCjUX3dstN
            paymentTerms: Net 30
            status: open
            taxAmount: 10
            totalAmount: 110
            totalAmountWithoutTax: 100
          - billIssuedToUserEmail: abcd@example.io
            billIssuedToUserID: user-1234568
            billIssuedToUserName: John Doe
            currency: USD
            customerId: org-1234568
            customerName: Acme Corp
            dueDate: 2023-10-01T00:00:00Z
            id: invoice-1234568
            invoiceDate: 2023-10-01T00:00:00Z
            invoiceUrl: https://dashboard.stripe.com/invoices/in_1R9aJ8G10a5MrQfCjUX3dstN
            paymentTerms: Net 30
            status: open
            taxAmount: 10
            totalAmount: 110
            totalAmountWithoutTax: 100
          items:
            $ref: "#/components/schemas/FleetInvoice"
          type: array
      type: object
    FleetListLinkedInstancesRequest:
      example:
        environmentId: se-12345678
        instanceId: instance-12345678
        serviceId: s-12345678
        token: mk
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ue
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - serviceId
      - token
      type: object
    FleetListLinkedInstancesResult:
      example:
        environmentId: se-12345678
        nextPageToken: next-token
        resourceInstances:
        - adopted: true
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          cloudProvider: aws
          consumptionResourceInstanceResult:
            active: true
            autoscalingEnabled: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            backupStatus:
              backupPeriodInHours: 2
              backupRetentionInDays: 7
              earliestRestoreTime: 2021-09-01T00:00:00Z
              lastBackupTime: 2021-09-01T00:00:00Z
            cloud_provider: aws
            created_at: 2023-01-10T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            currentReplicas: "2"
            customNetworkDetail:
              cidr: 10.177.0.0/16
              id: n-12345678
              name: Prod us-east-1
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                isJob: false
                jobMetrics:
                - additionalData:
                    exitCode: 0
                    status: Succeeded
                  endTime: 2023-01-01T10:05:00Z
                  metricType: cpu_core_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 120.5
                - additionalData:
                    peakMemoryUsage: 512MB
                  endTime: 2023-01-01T10:05:00Z
                  metricType: memory_mb_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 2560
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: primary
                resourceName: Primary MySQL Instance
            externalPayerId: external-payer-id-1234
            gcpProjectID: my-project
            highAvailability: true
            id: instance-abcd1234
            instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            last_modified_at: 2023-01-20T00:00:00Z
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            maxReplicas: "1"
            minReplicas: "1"
            network_type: PUBLIC|INTERNAL
            productTierFeatures:
              LOGS:
                auth:
                  password: px3c4d5f6g7h8i
                  username: abcd1234
                enabled: true
                websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
              METRICS:
                enabled: false
            region: us-east-1
            resourceID: r-abcd1234
            result_params:
              param1: value1
              param2: value2
            serverlessEnabled: true
            status: RUNNING
            subscriptionId: sub-abcd1234
            subscriptionLicense:
              certificateBase64: public-cert
              expirationDate: 2024-01-01T10:00:00Z
              licenseBase64: license-file
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
          defaultSubscription: true
          deploymentCellID: hc-12345678
          environmentId: se-12345678
          gcpProjectID: my-project
          input_params:
            param1: value1
            param2: value2
          instanceDebugCommands:
          - aws eks update-kubeconfig --name my-cluster --region us-west-2
          - kubectl -n instance-12345678 get pods
          integrationsStatus:
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          maintenanceTasks:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          managedResourceType: PortsBasedProxy
          manualOverride:
            setAt: 2020-01-01T00:00:00Z
            setterUserId: user-12345678
            workflowId: wf-12345678
          organizationId: org-12345678
          organizationName: my-org
          portsRegistrationStatus:
            instance-123:
            - 30000
            - 30001
            instance-456:
            - 30002
            - 30003
          productTierId: pt-12345678
          productTierName: premium
          productTierType: OMNISTRATE_DEDICATED
          proxyType: PortsBasedProxy
          resourceVersionSummaries:
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          serviceEnvName: dev
          serviceId: s-12345678
          serviceLogoURL: Velit rerum aut.
          serviceModelId: sm-12345678
          serviceModelName: hosted
          serviceModelType: OMNISTRATE_HOSTED
          serviceName: mysql
          subscriptionId: sub-12345678
          subscriptionOwnerName: John Doe
          subscriptionStatus: ACTIVE
          tierVersion: "1.0"
          tierVersionReleasedAt: 2020-01-01T00:00:00Z
          tierVersionReleasedByUserId: user-12345678
          tierVersionReleasedByUserName: John Doe
          tierVersionStatus: Preferred|Active|Deprecated|Pending
        - adopted: true
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          cloudProvider: aws
          consumptionResourceInstanceResult:
            active: true
            autoscalingEnabled: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            backupStatus:
              backupPeriodInHours: 2
              backupRetentionInDays: 7
              earliestRestoreTime: 2021-09-01T00:00:00Z
              lastBackupTime: 2021-09-01T00:00:00Z
            cloud_provider: aws
            created_at: 2023-01-10T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            currentReplicas: "2"
            customNetworkDetail:
              cidr: 10.177.0.0/16
              id: n-12345678
              name: Prod us-east-1
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                isJob: false
                jobMetrics:
                - additionalData:
                    exitCode: 0
                    status: Succeeded
                  endTime: 2023-01-01T10:05:00Z
                  metricType: cpu_core_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 120.5
                - additionalData:
                    peakMemoryUsage: 512MB
                  endTime: 2023-01-01T10:05:00Z
                  metricType: memory_mb_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 2560
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: primary
                resourceName: Primary MySQL Instance
            externalPayerId: external-payer-id-1234
            gcpProjectID: my-project
            highAvailability: true
            id: instance-abcd1234
            instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            last_modified_at: 2023-01-20T00:00:00Z
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            maxReplicas: "1"
            minReplicas: "1"
            network_type: PUBLIC|INTERNAL
            productTierFeatures:
              LOGS:
                auth:
                  password: px3c4d5f6g7h8i
                  username: abcd1234
                enabled: true
                websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
              METRICS:
                enabled: false
            region: us-east-1
            resourceID: r-abcd1234
            result_params:
              param1: value1
              param2: value2
            serverlessEnabled: true
            status: RUNNING
            subscriptionId: sub-abcd1234
            subscriptionLicense:
              certificateBase64: public-cert
              expirationDate: 2024-01-01T10:00:00Z
              licenseBase64: license-file
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
          defaultSubscription: true
          deploymentCellID: hc-12345678
          environmentId: se-12345678
          gcpProjectID: my-project
          input_params:
            param1: value1
            param2: value2
          instanceDebugCommands:
          - aws eks update-kubeconfig --name my-cluster --region us-west-2
          - kubectl -n instance-12345678 get pods
          integrationsStatus:
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          maintenanceTasks:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          managedResourceType: PortsBasedProxy
          manualOverride:
            setAt: 2020-01-01T00:00:00Z
            setterUserId: user-12345678
            workflowId: wf-12345678
          organizationId: org-12345678
          organizationName: my-org
          portsRegistrationStatus:
            instance-123:
            - 30000
            - 30001
            instance-456:
            - 30002
            - 30003
          productTierId: pt-12345678
          productTierName: premium
          productTierType: OMNISTRATE_DEDICATED
          proxyType: PortsBasedProxy
          resourceVersionSummaries:
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          serviceEnvName: dev
          serviceId: s-12345678
          serviceLogoURL: Velit rerum aut.
          serviceModelId: sm-12345678
          serviceModelName: hosted
          serviceModelType: OMNISTRATE_HOSTED
          serviceName: mysql
          subscriptionId: sub-12345678
          subscriptionOwnerName: John Doe
          subscriptionStatus: ACTIVE
          tierVersion: "1.0"
          tierVersionReleasedAt: 2020-01-01T00:00:00Z
          tierVersionReleasedByUserId: user-12345678
          tierVersionReleasedByUserName: John Doe
          tierVersionStatus: Preferred|Active|Deprecated|Pending
        serviceId: s-12345678
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        resourceInstances:
          description: The list of resource instances.
          example:
          - adopted: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            cloudProvider: aws
            consumptionResourceInstanceResult:
              active: true
              autoscalingEnabled: true
              awsAccountID: "123456789012"
              azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
              backupStatus:
                backupPeriodInHours: 2
                backupRetentionInDays: 7
                earliestRestoreTime: 2021-09-01T00:00:00Z
                lastBackupTime: 2021-09-01T00:00:00Z
              cloud_provider: aws
              created_at: 2023-01-10T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              currentReplicas: "2"
              customNetworkDetail:
                cidr: 10.177.0.0/16
                id: n-12345678
                name: Prod us-east-1
              detailedNetworkTopology:
                r-abcd1234:
                  allowedIPRanges:
                  - 0.0.0.0/0
                  clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  clusterPorts:
                  - 3306
                  isJob: false
                  jobMetrics:
                  - additionalData:
                      exitCode: 0
                      status: Succeeded
                    endTime: 2023-01-01T10:05:00Z
                    metricType: cpu_core_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 120.5
                  - additionalData:
                      peakMemoryUsage: 512MB
                    endTime: 2023-01-01T10:05:00Z
                    metricType: memory_mb_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 2560
                  main: true
                  networkingType: PUBLIC
                  nodes:
                  - availabilityZone: us-east-2a
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    healthStatus: healthy
                    id: primary-0
                    ports:
                    - 3306
                    status: RUNNING
                  privateNetworkCIDR: 10.0.0.2/24
                  privateNetworkID: n-1234abcd
                  publiclyAccessible: true
                  resourceKey: primary
                  resourceName: Primary MySQL Instance
              externalPayerId: external-payer-id-1234
              gcpProjectID: my-project
              highAvailability: true
              id: instance-abcd1234
              instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
              kubernetesDashboardEndpoint:
                dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                deploymentCellID: hc-12345678
              last_modified_at: 2023-01-20T00:00:00Z
              maintenanceTasks:
                backups:
                - backup_id: bk-12345678
                upgrade_paths:
                - upgrade_path_id: up-9876543
                  upgrade_path_instance_status: PENDING
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: IN_PROGRESS
                - upgrade_path_id: up-12345548
                  upgrade_path_instance_status: PENDING
                  upgrade_path_released_at: 2023-01-01T09:00:00Z
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: SCHEDULED
              maxReplicas: "1"
              minReplicas: "1"
              network_type: PUBLIC|INTERNAL
              productTierFeatures:
                LOGS:
                  auth:
                    password: px3c4d5f6g7h8i
                    username: abcd1234
                  enabled: true
                  websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                METRICS:
                  enabled: false
              region: us-east-1
              resourceID: r-abcd1234
              result_params:
                param1: value1
                param2: value2
              serverlessEnabled: true
              status: RUNNING
              subscriptionId: sub-abcd1234
              subscriptionLicense:
                certificateBase64: public-cert
                expirationDate: 2024-01-01T10:00:00Z
                licenseBase64: license-file
              subscriptionStatus: ACTIVE
              tierVersion: "1.0"
            defaultSubscription: true
            deploymentCellID: hc-12345678
            environmentId: se-12345678
            gcpProjectID: my-project
            input_params:
              param1: value1
              param2: value2
            instanceDebugCommands:
            - aws eks update-kubeconfig --name my-cluster --region us-west-2
            - kubectl -n instance-12345678 get pods
            integrationsStatus:
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            managedResourceType: PortsBasedProxy
            manualOverride:
              setAt: 2020-01-01T00:00:00Z
              setterUserId: user-12345678
              workflowId: wf-12345678
            organizationId: org-12345678
            organizationName: my-org
            portsRegistrationStatus:
              instance-123:
              - 30000
              - 30001
              instance-456:
              - 30002
              - 30003
            productTierId: pt-12345678
            productTierName: premium
            productTierType: OMNISTRATE_DEDICATED
            proxyType: PortsBasedProxy
            resourceVersionSummaries:
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            serviceEnvName: dev
            serviceId: s-12345678
            serviceLogoURL: Velit rerum aut.
            serviceModelId: sm-12345678
            serviceModelName: hosted
            serviceModelType: OMNISTRATE_HOSTED
            serviceName: mysql
            subscriptionId: sub-12345678
            subscriptionOwnerName: John Doe
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
            tierVersionReleasedAt: 2020-01-01T00:00:00Z
            tierVersionReleasedByUserId: user-12345678
            tierVersionReleasedByUserName: John Doe
            tierVersionStatus: Preferred|Active|Deprecated|Pending
          - adopted: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            cloudProvider: aws
            consumptionResourceInstanceResult:
              active: true
              autoscalingEnabled: true
              awsAccountID: "123456789012"
              azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
              backupStatus:
                backupPeriodInHours: 2
                backupRetentionInDays: 7
                earliestRestoreTime: 2021-09-01T00:00:00Z
                lastBackupTime: 2021-09-01T00:00:00Z
              cloud_provider: aws
              created_at: 2023-01-10T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              currentReplicas: "2"
              customNetworkDetail:
                cidr: 10.177.0.0/16
                id: n-12345678
                name: Prod us-east-1
              detailedNetworkTopology:
                r-abcd1234:
                  allowedIPRanges:
                  - 0.0.0.0/0
                  clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  clusterPorts:
                  - 3306
                  isJob: false
                  jobMetrics:
                  - additionalData:
                      exitCode: 0
                      status: Succeeded
                    endTime: 2023-01-01T10:05:00Z
                    metricType: cpu_core_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 120.5
                  - additionalData:
                      peakMemoryUsage: 512MB
                    endTime: 2023-01-01T10:05:00Z
                    metricType: memory_mb_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 2560
                  main: true
                  networkingType: PUBLIC
                  nodes:
                  - availabilityZone: us-east-2a
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    healthStatus: healthy
                    id: primary-0
                    ports:
                    - 3306
                    status: RUNNING
                  privateNetworkCIDR: 10.0.0.2/24
                  privateNetworkID: n-1234abcd
                  publiclyAccessible: true
                  resourceKey: primary
                  resourceName: Primary MySQL Instance
              externalPayerId: external-payer-id-1234
              gcpProjectID: my-project
              highAvailability: true
              id: instance-abcd1234
              instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
              kubernetesDashboardEndpoint:
                dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                deploymentCellID: hc-12345678
              last_modified_at: 2023-01-20T00:00:00Z
              maintenanceTasks:
                backups:
                - backup_id: bk-12345678
                upgrade_paths:
                - upgrade_path_id: up-9876543
                  upgrade_path_instance_status: PENDING
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: IN_PROGRESS
                - upgrade_path_id: up-12345548
                  upgrade_path_instance_status: PENDING
                  upgrade_path_released_at: 2023-01-01T09:00:00Z
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: SCHEDULED
              maxReplicas: "1"
              minReplicas: "1"
              network_type: PUBLIC|INTERNAL
              productTierFeatures:
                LOGS:
                  auth:
                    password: px3c4d5f6g7h8i
                    username: abcd1234
                  enabled: true
                  websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                METRICS:
                  enabled: false
              region: us-east-1
              resourceID: r-abcd1234
              result_params:
                param1: value1
                param2: value2
              serverlessEnabled: true
              status: RUNNING
              subscriptionId: sub-abcd1234
              subscriptionLicense:
                certificateBase64: public-cert
                expirationDate: 2024-01-01T10:00:00Z
                licenseBase64: license-file
              subscriptionStatus: ACTIVE
              tierVersion: "1.0"
            defaultSubscription: true
            deploymentCellID: hc-12345678
            environmentId: se-12345678
            gcpProjectID: my-project
            input_params:
              param1: value1
              param2: value2
            instanceDebugCommands:
            - aws eks update-kubeconfig --name my-cluster --region us-west-2
            - kubectl -n instance-12345678 get pods
            integrationsStatus:
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            managedResourceType: PortsBasedProxy
            manualOverride:
              setAt: 2020-01-01T00:00:00Z
              setterUserId: user-12345678
              workflowId: wf-12345678
            organizationId: org-12345678
            organizationName: my-org
            portsRegistrationStatus:
              instance-123:
              - 30000
              - 30001
              instance-456:
              - 30002
              - 30003
            productTierId: pt-12345678
            productTierName: premium
            productTierType: OMNISTRATE_DEDICATED
            proxyType: PortsBasedProxy
            resourceVersionSummaries:
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            serviceEnvName: dev
            serviceId: s-12345678
            serviceLogoURL: Velit rerum aut.
            serviceModelId: sm-12345678
            serviceModelName: hosted
            serviceModelType: OMNISTRATE_HOSTED
            serviceName: mysql
            subscriptionId: sub-12345678
            subscriptionOwnerName: John Doe
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
            tierVersionReleasedAt: 2020-01-01T00:00:00Z
            tierVersionReleasedByUserId: user-12345678
            tierVersionReleasedByUserName: John Doe
            tierVersionStatus: Preferred|Active|Deprecated|Pending
          - adopted: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            cloudProvider: aws
            consumptionResourceInstanceResult:
              active: true
              autoscalingEnabled: true
              awsAccountID: "123456789012"
              azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
              backupStatus:
                backupPeriodInHours: 2
                backupRetentionInDays: 7
                earliestRestoreTime: 2021-09-01T00:00:00Z
                lastBackupTime: 2021-09-01T00:00:00Z
              cloud_provider: aws
              created_at: 2023-01-10T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              currentReplicas: "2"
              customNetworkDetail:
                cidr: 10.177.0.0/16
                id: n-12345678
                name: Prod us-east-1
              detailedNetworkTopology:
                r-abcd1234:
                  allowedIPRanges:
                  - 0.0.0.0/0
                  clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  clusterPorts:
                  - 3306
                  isJob: false
                  jobMetrics:
                  - additionalData:
                      exitCode: 0
                      status: Succeeded
                    endTime: 2023-01-01T10:05:00Z
                    metricType: cpu_core_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 120.5
                  - additionalData:
                      peakMemoryUsage: 512MB
                    endTime: 2023-01-01T10:05:00Z
                    metricType: memory_mb_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 2560
                  main: true
                  networkingType: PUBLIC
                  nodes:
                  - availabilityZone: us-east-2a
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    healthStatus: healthy
                    id: primary-0
                    ports:
                    - 3306
                    status: RUNNING
                  privateNetworkCIDR: 10.0.0.2/24
                  privateNetworkID: n-1234abcd
                  publiclyAccessible: true
                  resourceKey: primary
                  resourceName: Primary MySQL Instance
              externalPayerId: external-payer-id-1234
              gcpProjectID: my-project
              highAvailability: true
              id: instance-abcd1234
              instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
              kubernetesDashboardEndpoint:
                dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                deploymentCellID: hc-12345678
              last_modified_at: 2023-01-20T00:00:00Z
              maintenanceTasks:
                backups:
                - backup_id: bk-12345678
                upgrade_paths:
                - upgrade_path_id: up-9876543
                  upgrade_path_instance_status: PENDING
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: IN_PROGRESS
                - upgrade_path_id: up-12345548
                  upgrade_path_instance_status: PENDING
                  upgrade_path_released_at: 2023-01-01T09:00:00Z
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: SCHEDULED
              maxReplicas: "1"
              minReplicas: "1"
              network_type: PUBLIC|INTERNAL
              productTierFeatures:
                LOGS:
                  auth:
                    password: px3c4d5f6g7h8i
                    username: abcd1234
                  enabled: true
                  websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                METRICS:
                  enabled: false
              region: us-east-1
              resourceID: r-abcd1234
              result_params:
                param1: value1
                param2: value2
              serverlessEnabled: true
              status: RUNNING
              subscriptionId: sub-abcd1234
              subscriptionLicense:
                certificateBase64: public-cert
                expirationDate: 2024-01-01T10:00:00Z
                licenseBase64: license-file
              subscriptionStatus: ACTIVE
              tierVersion: "1.0"
            defaultSubscription: true
            deploymentCellID: hc-12345678
            environmentId: se-12345678
            gcpProjectID: my-project
            input_params:
              param1: value1
              param2: value2
            instanceDebugCommands:
            - aws eks update-kubeconfig --name my-cluster --region us-west-2
            - kubectl -n instance-12345678 get pods
            integrationsStatus:
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            managedResourceType: PortsBasedProxy
            manualOverride:
              setAt: 2020-01-01T00:00:00Z
              setterUserId: user-12345678
              workflowId: wf-12345678
            organizationId: org-12345678
            organizationName: my-org
            portsRegistrationStatus:
              instance-123:
              - 30000
              - 30001
              instance-456:
              - 30002
              - 30003
            productTierId: pt-12345678
            productTierName: premium
            productTierType: OMNISTRATE_DEDICATED
            proxyType: PortsBasedProxy
            resourceVersionSummaries:
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            serviceEnvName: dev
            serviceId: s-12345678
            serviceLogoURL: Velit rerum aut.
            serviceModelId: sm-12345678
            serviceModelName: hosted
            serviceModelType: OMNISTRATE_HOSTED
            serviceName: mysql
            subscriptionId: sub-12345678
            subscriptionOwnerName: John Doe
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
            tierVersionReleasedAt: 2020-01-01T00:00:00Z
            tierVersionReleasedByUserId: user-12345678
            tierVersionReleasedByUserName: John Doe
            tierVersionStatus: Preferred|Active|Deprecated|Pending
          items:
            $ref: "#/components/schemas/ResourceInstance"
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - environmentId
      - resourceInstances
      - serviceId
      type: object
    FleetListServicesOrchestrationsRequest:
      example:
        environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
        token: l0e
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        token:
          description: JWT token used to perform authorization
          example: "631"
          minLength: 1
          type: string
      required:
      - environmentType
      - token
      type: object
    FleetListServicesOrchestrationsResult:
      description: List of service orchestrations
      example:
      - accessServicesOrchestration:
          ServicesTopology:
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Ab veritatis rerum quam voluptates.
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Ab veritatis rerum quam voluptates.
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Ab veritatis rerum quam voluptates.
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Ab veritatis rerum quam voluptates.
          createdAt: 2021-01-01T00:00:00Z
          id: so-12345678
          orchestrationFailedReason: Invalid DSL
          resultParams:
            param1: value1
            param2: value2
          status: PENDING
          updatedAt: 2021-01-01T00:00:00Z
      - accessServicesOrchestration:
          ServicesTopology:
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Ab veritatis rerum quam voluptates.
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Ab veritatis rerum quam voluptates.
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Ab veritatis rerum quam voluptates.
          - dependsOnDeployment:
            - instanceDeploymentAlias1
            - instanceDeploymentAlias2
            failedReason: Invalid inputs
            instanceDeploymentAlias: instanceDeploymentAlias
            instanceId: i-12345678
            serviceId: s-12345678
            status: PENDING
            statusMessage: Creating deployment
            subscriptionId: Ab veritatis rerum quam voluptates.
          createdAt: 2021-01-01T00:00:00Z
          id: so-12345678
          orchestrationFailedReason: Invalid DSL
          resultParams:
            param1: value1
            param2: value2
          status: PENDING
          updatedAt: 2021-01-01T00:00:00Z
      items:
        $ref: "#/components/schemas/FleetDescribeServicesOrchestrationResult"
      type: array
    FleetListSubscriptionRequestsRequest:
      example:
        environmentId: se-12345678
        serviceId: s-12345678
        status: PENDING
        token: sqw
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        status:
          description: The status of the subscription request
          example: PENDING|APPROVED|DENIED|CANCELLED
          type: string
        token:
          description: JWT token used to perform authorization
          example: z1y
          minLength: 1
          type: string
      required:
      - environmentId
      - serviceId
      - token
      type: object
    FleetListSubscriptionsRequest:
      example:
        environmentId: se-12345678
        nextPageToken: token
        pageSize: 10
        productTierId: pt-12345678
        serviceId: s-12345678
        token: k0
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        productTierId:
          description: ID of a Product Tier
          example: Ab impedit.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "2"
          minLength: 1
          type: string
      required:
      - environmentId
      - serviceId
      - token
      type: object
    FleetListSubscriptionsResult:
      example:
        ids:
        - sub-12345678
        - sub-abcdefgh
        - sub-1234efgh
        nextPageToken: token
        subscriptions:
        - allowCreatesWhenPaymentNotConfigured: true
          billingProvider: Stripe | GovPay
          createdAt: 2019-01-01T00:00:00Z
          currentActivePricePerUnit:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          customPrice: true
          externalPayerId: a3df-sdf9-gfn3-4g3f
          id: sub-12345678
          instanceCount: 3
          maxNumberOfInstances: 10
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          rootUserEmail: abc@gmail.com
          rootUserId: user-12345678
          rootUserName: John Doe
          rootUserOrgId: org-12345678
          scheduledSubscriptionPricingList:
          - createdAt: 2019-01-03T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            customPrice: false
            endDate: 2019-02-01T00:00:00Z
            isActiveBillingPrice: true
            pricePerUnit:
              CPU core hours:
                amount: 0.001
                currency: USD
              Memory GiB hours:
                amount: 1.0E-4
                currency: USD
              Storage GiB hours:
                amount: 1.0E-4
                currency: USD
            startDate: 2019-01-01T00:00:00Z
          - createdAt: 2019-01-04T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            customPrice: true
            endDate: null
            isActiveBillingPrice: true
            pricePerUnit:
              CPU core hours:
                amount: 0.01
                currency: USD
              Memory GiB hours:
                amount: 0.001
                currency: USD
              Storage GiB hours:
                amount: 0.001
                currency: USD
            startDate: 2019-02-01T00:00:00Z
          serviceId: s-12345678
          serviceLogoURL: Qui eius quia.
          serviceName: MySQL multi-writer service
          status: ACTIVE
          subscriptionPricingAuditLogs:
          - createdAt: 2019-01-04T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            customPrice: true
            endDate: 2019-02-01T00:00:00Z
            isActiveBillingPrice: false
            pricePerUnit:
              CPU core hours:
                amount: 0.02
                currency: USD
              Memory GiB hours:
                amount: 0.002
                currency: USD
              Storage GiB hours:
                amount: 0.002
                currency: USD
            startDate: 2019-01-01T00:00:00Z
          - createdAt: 2019-01-04T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            customPrice: true
            endDate: 2019-02-01T00:00:00Z
            isActiveBillingPrice: true
            pricePerUnit:
              CPU core hours:
                amount: 0.01
                currency: USD
              Memory GiB hours:
                amount: 0.001
                currency: USD
              Storage GiB hours:
                amount: 0.001
                currency: USD
            startDate: 2019-01-01T00:00:00Z
          - createdAt: 2019-01-05T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            customPrice: true
            endDate: null
            isActiveBillingPrice: true
            pricePerUnit:
              CPU core hours:
                amount: 0.01
                currency: USD
              Memory GiB hours:
                amount: 0.001
                currency: USD
              Storage GiB hours:
                amount: 0.001
                currency: USD
            startDate: 2019-02-01T00:00:00Z
          updatedAt: 2019-01-01T00:00:00Z
          updatedByUserId: user-12345678
          updatedByUserName: John Doe
          updatedByUserOrgId: org-12345678
        - allowCreatesWhenPaymentNotConfigured: true
          billingProvider: Stripe | GovPay
          createdAt: 2019-01-01T00:00:00Z
          currentActivePricePerUnit:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          customPrice: true
          externalPayerId: a3df-sdf9-gfn3-4g3f
          id: sub-12345678
          instanceCount: 3
          maxNumberOfInstances: 10
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          rootUserEmail: abc@gmail.com
          rootUserId: user-12345678
          rootUserName: John Doe
          rootUserOrgId: org-12345678
          scheduledSubscriptionPricingList:
          - createdAt: 2019-01-03T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            customPrice: false
            endDate: 2019-02-01T00:00:00Z
            isActiveBillingPrice: true
            pricePerUnit:
              CPU core hours:
                amount: 0.001
                currency: USD
              Memory GiB hours:
                amount: 1.0E-4
                currency: USD
              Storage GiB hours:
                amount: 1.0E-4
                currency: USD
            startDate: 2019-01-01T00:00:00Z
          - createdAt: 2019-01-04T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            customPrice: true
            endDate: null
            isActiveBillingPrice: true
            pricePerUnit:
              CPU core hours:
                amount: 0.01
                currency: USD
              Memory GiB hours:
                amount: 0.001
                currency: USD
              Storage GiB hours:
                amount: 0.001
                currency: USD
            startDate: 2019-02-01T00:00:00Z
          serviceId: s-12345678
          serviceLogoURL: Qui eius quia.
          serviceName: MySQL multi-writer service
          status: ACTIVE
          subscriptionPricingAuditLogs:
          - createdAt: 2019-01-04T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            customPrice: true
            endDate: 2019-02-01T00:00:00Z
            isActiveBillingPrice: false
            pricePerUnit:
              CPU core hours:
                amount: 0.02
                currency: USD
              Memory GiB hours:
                amount: 0.002
                currency: USD
              Storage GiB hours:
                amount: 0.002
                currency: USD
            startDate: 2019-01-01T00:00:00Z
          - createdAt: 2019-01-04T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            customPrice: true
            endDate: 2019-02-01T00:00:00Z
            isActiveBillingPrice: true
            pricePerUnit:
              CPU core hours:
                amount: 0.01
                currency: USD
              Memory GiB hours:
                amount: 0.001
                currency: USD
              Storage GiB hours:
                amount: 0.001
                currency: USD
            startDate: 2019-01-01T00:00:00Z
          - createdAt: 2019-01-05T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            customPrice: true
            endDate: null
            isActiveBillingPrice: true
            pricePerUnit:
              CPU core hours:
                amount: 0.01
                currency: USD
              Memory GiB hours:
                amount: 0.001
                currency: USD
              Storage GiB hours:
                amount: 0.001
                currency: USD
            startDate: 2019-02-01T00:00:00Z
          updatedAt: 2019-01-01T00:00:00Z
          updatedByUserId: user-12345678
          updatedByUserName: John Doe
          updatedByUserOrgId: org-12345678
      properties:
        ids:
          description: List of subscription IDs
          example:
          - sub-12345678
          - sub-abcdefgh
          - sub-1234efgh
          items:
            description: ID of a Subscription
            example: Dolorem est et aut rerum dolores.
            type: string
          type: array
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        subscriptions:
          description: List of subscriptions
          example:
          - allowCreatesWhenPaymentNotConfigured: true
            billingProvider: Stripe | GovPay
            createdAt: 2019-01-01T00:00:00Z
            currentActivePricePerUnit:
              CPU core hours:
                amount: 0.001
                currency: USD
              Memory GiB hours:
                amount: 1.0E-4
                currency: USD
              Storage GiB hours:
                amount: 1.0E-4
                currency: USD
            customPrice: true
            externalPayerId: a3df-sdf9-gfn3-4g3f
            id: sub-12345678
            instanceCount: 3
            maxNumberOfInstances: 10
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            rootUserEmail: abc@gmail.com
            rootUserId: user-12345678
            rootUserName: John Doe
            rootUserOrgId: org-12345678
            scheduledSubscriptionPricingList:
            - createdAt: 2019-01-03T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              customPrice: false
              endDate: 2019-02-01T00:00:00Z
              isActiveBillingPrice: true
              pricePerUnit:
                CPU core hours:
                  amount: 0.001
                  currency: USD
                Memory GiB hours:
                  amount: 1.0E-4
                  currency: USD
                Storage GiB hours:
                  amount: 1.0E-4
                  currency: USD
              startDate: 2019-01-01T00:00:00Z
            - createdAt: 2019-01-04T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              customPrice: true
              endDate: null
              isActiveBillingPrice: true
              pricePerUnit:
                CPU core hours:
                  amount: 0.01
                  currency: USD
                Memory GiB hours:
                  amount: 0.001
                  currency: USD
                Storage GiB hours:
                  amount: 0.001
                  currency: USD
              startDate: 2019-02-01T00:00:00Z
            serviceId: s-12345678
            serviceLogoURL: Qui eius quia.
            serviceName: MySQL multi-writer service
            status: ACTIVE
            subscriptionPricingAuditLogs:
            - createdAt: 2019-01-04T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              customPrice: true
              endDate: 2019-02-01T00:00:00Z
              isActiveBillingPrice: false
              pricePerUnit:
                CPU core hours:
                  amount: 0.02
                  currency: USD
                Memory GiB hours:
                  amount: 0.002
                  currency: USD
                Storage GiB hours:
                  amount: 0.002
                  currency: USD
              startDate: 2019-01-01T00:00:00Z
            - createdAt: 2019-01-04T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              customPrice: true
              endDate: 2019-02-01T00:00:00Z
              isActiveBillingPrice: true
              pricePerUnit:
                CPU core hours:
                  amount: 0.01
                  currency: USD
                Memory GiB hours:
                  amount: 0.001
                  currency: USD
                Storage GiB hours:
                  amount: 0.001
                  currency: USD
              startDate: 2019-01-01T00:00:00Z
            - createdAt: 2019-01-05T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              customPrice: true
              endDate: null
              isActiveBillingPrice: true
              pricePerUnit:
                CPU core hours:
                  amount: 0.01
                  currency: USD
                Memory GiB hours:
                  amount: 0.001
                  currency: USD
                Storage GiB hours:
                  amount: 0.001
                  currency: USD
              startDate: 2019-02-01T00:00:00Z
            updatedAt: 2019-01-01T00:00:00Z
            updatedByUserId: user-12345678
            updatedByUserName: John Doe
            updatedByUserOrgId: org-12345678
          - allowCreatesWhenPaymentNotConfigured: true
            billingProvider: Stripe | GovPay
            createdAt: 2019-01-01T00:00:00Z
            currentActivePricePerUnit:
              CPU core hours:
                amount: 0.001
                currency: USD
              Memory GiB hours:
                amount: 1.0E-4
                currency: USD
              Storage GiB hours:
                amount: 1.0E-4
                currency: USD
            customPrice: true
            externalPayerId: a3df-sdf9-gfn3-4g3f
            id: sub-12345678
            instanceCount: 3
            maxNumberOfInstances: 10
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            rootUserEmail: abc@gmail.com
            rootUserId: user-12345678
            rootUserName: John Doe
            rootUserOrgId: org-12345678
            scheduledSubscriptionPricingList:
            - createdAt: 2019-01-03T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              customPrice: false
              endDate: 2019-02-01T00:00:00Z
              isActiveBillingPrice: true
              pricePerUnit:
                CPU core hours:
                  amount: 0.001
                  currency: USD
                Memory GiB hours:
                  amount: 1.0E-4
                  currency: USD
                Storage GiB hours:
                  amount: 1.0E-4
                  currency: USD
              startDate: 2019-01-01T00:00:00Z
            - createdAt: 2019-01-04T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              customPrice: true
              endDate: null
              isActiveBillingPrice: true
              pricePerUnit:
                CPU core hours:
                  amount: 0.01
                  currency: USD
                Memory GiB hours:
                  amount: 0.001
                  currency: USD
                Storage GiB hours:
                  amount: 0.001
                  currency: USD
              startDate: 2019-02-01T00:00:00Z
            serviceId: s-12345678
            serviceLogoURL: Qui eius quia.
            serviceName: MySQL multi-writer service
            status: ACTIVE
            subscriptionPricingAuditLogs:
            - createdAt: 2019-01-04T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              customPrice: true
              endDate: 2019-02-01T00:00:00Z
              isActiveBillingPrice: false
              pricePerUnit:
                CPU core hours:
                  amount: 0.02
                  currency: USD
                Memory GiB hours:
                  amount: 0.002
                  currency: USD
                Storage GiB hours:
                  amount: 0.002
                  currency: USD
              startDate: 2019-01-01T00:00:00Z
            - createdAt: 2019-01-04T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              customPrice: true
              endDate: 2019-02-01T00:00:00Z
              isActiveBillingPrice: true
              pricePerUnit:
                CPU core hours:
                  amount: 0.01
                  currency: USD
                Memory GiB hours:
                  amount: 0.001
                  currency: USD
                Storage GiB hours:
                  amount: 0.001
                  currency: USD
              startDate: 2019-01-01T00:00:00Z
            - createdAt: 2019-01-05T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              customPrice: true
              endDate: null
              isActiveBillingPrice: true
              pricePerUnit:
                CPU core hours:
                  amount: 0.01
                  currency: USD
                Memory GiB hours:
                  amount: 0.001
                  currency: USD
                Storage GiB hours:
                  amount: 0.001
                  currency: USD
              startDate: 2019-02-01T00:00:00Z
            updatedAt: 2019-01-01T00:00:00Z
            updatedByUserId: user-12345678
            updatedByUserName: John Doe
            updatedByUserOrgId: org-12345678
          - allowCreatesWhenPaymentNotConfigured: true
            billingProvider: Stripe | GovPay
            createdAt: 2019-01-01T00:00:00Z
            currentActivePricePerUnit:
              CPU core hours:
                amount: 0.001
                currency: USD
              Memory GiB hours:
                amount: 1.0E-4
                currency: USD
              Storage GiB hours:
                amount: 1.0E-4
                currency: USD
            customPrice: true
            externalPayerId: a3df-sdf9-gfn3-4g3f
            id: sub-12345678
            instanceCount: 3
            maxNumberOfInstances: 10
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            rootUserEmail: abc@gmail.com
            rootUserId: user-12345678
            rootUserName: John Doe
            rootUserOrgId: org-12345678
            scheduledSubscriptionPricingList:
            - createdAt: 2019-01-03T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              customPrice: false
              endDate: 2019-02-01T00:00:00Z
              isActiveBillingPrice: true
              pricePerUnit:
                CPU core hours:
                  amount: 0.001
                  currency: USD
                Memory GiB hours:
                  amount: 1.0E-4
                  currency: USD
                Storage GiB hours:
                  amount: 1.0E-4
                  currency: USD
              startDate: 2019-01-01T00:00:00Z
            - createdAt: 2019-01-04T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              customPrice: true
              endDate: null
              isActiveBillingPrice: true
              pricePerUnit:
                CPU core hours:
                  amount: 0.01
                  currency: USD
                Memory GiB hours:
                  amount: 0.001
                  currency: USD
                Storage GiB hours:
                  amount: 0.001
                  currency: USD
              startDate: 2019-02-01T00:00:00Z
            serviceId: s-12345678
            serviceLogoURL: Qui eius quia.
            serviceName: MySQL multi-writer service
            status: ACTIVE
            subscriptionPricingAuditLogs:
            - createdAt: 2019-01-04T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              customPrice: true
              endDate: 2019-02-01T00:00:00Z
              isActiveBillingPrice: false
              pricePerUnit:
                CPU core hours:
                  amount: 0.02
                  currency: USD
                Memory GiB hours:
                  amount: 0.002
                  currency: USD
                Storage GiB hours:
                  amount: 0.002
                  currency: USD
              startDate: 2019-01-01T00:00:00Z
            - createdAt: 2019-01-04T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              customPrice: true
              endDate: 2019-02-01T00:00:00Z
              isActiveBillingPrice: true
              pricePerUnit:
                CPU core hours:
                  amount: 0.01
                  currency: USD
                Memory GiB hours:
                  amount: 0.001
                  currency: USD
                Storage GiB hours:
                  amount: 0.001
                  currency: USD
              startDate: 2019-01-01T00:00:00Z
            - createdAt: 2019-01-05T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              customPrice: true
              endDate: null
              isActiveBillingPrice: true
              pricePerUnit:
                CPU core hours:
                  amount: 0.01
                  currency: USD
                Memory GiB hours:
                  amount: 0.001
                  currency: USD
                Storage GiB hours:
                  amount: 0.001
                  currency: USD
              startDate: 2019-02-01T00:00:00Z
            updatedAt: 2019-01-01T00:00:00Z
            updatedByUserId: user-12345678
            updatedByUserName: John Doe
            updatedByUserOrgId: org-12345678
          items:
            $ref: "#/components/schemas/FleetDescribeSubscriptionResult"
          type: array
      required:
      - ids
      type: object
    FleetListUsers:
      example:
        environmentId: se-12345678
        nextPageToken: token
        pageSize: 10
        serviceId: s-12345678
        subscriptionId: sub-12345678
        token: w
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        subscriptionId:
          description: ID of a Subscription
          example: Quam rerum quaerat repellendus omnis porro est.
          type: string
        token:
          description: JWT token used to perform authorization
          example: dnk
          minLength: 1
          type: string
      required:
      - token
      type: object
    FleetListUsersResult:
      example:
        environmentId: se-12345678
        nextPageToken: next-token
        serviceId: s-12345678
        users:
        - createdAt: 2021-01-01T00:00:00Z
          email: alice@enterprise.com
          enabled: true
          environmentId: se-12345678
          instanceCount: 3
          lastModifiedAt: 2021-01-01T00:00:00Z
          lastModifiedByUserID: user-12345678
          lastModifiedByUserName: Alice
          orgId: org-12345678
          orgName: Enterprise
          orgUrl: https://enterprise.com
          serviceId: s-12345678
          status: ACTIVE
          subscriptionCount: 3
          token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
          userId: user-12345678
          userName: Alice
          userSubscriptionRole: root
        - createdAt: 2021-01-01T00:00:00Z
          email: alice@enterprise.com
          enabled: true
          environmentId: se-12345678
          instanceCount: 3
          lastModifiedAt: 2021-01-01T00:00:00Z
          lastModifiedByUserID: user-12345678
          lastModifiedByUserName: Alice
          orgId: org-12345678
          orgName: Enterprise
          orgUrl: https://enterprise.com
          serviceId: s-12345678
          status: ACTIVE
          subscriptionCount: 3
          token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
          userId: user-12345678
          userName: Alice
          userSubscriptionRole: root
        - createdAt: 2021-01-01T00:00:00Z
          email: alice@enterprise.com
          enabled: true
          environmentId: se-12345678
          instanceCount: 3
          lastModifiedAt: 2021-01-01T00:00:00Z
          lastModifiedByUserID: user-12345678
          lastModifiedByUserName: Alice
          orgId: org-12345678
          orgName: Enterprise
          orgUrl: https://enterprise.com
          serviceId: s-12345678
          status: ACTIVE
          subscriptionCount: 3
          token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
          userId: user-12345678
          userName: Alice
          userSubscriptionRole: root
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        users:
          description: List of active users using the service.
          example:
          - createdAt: 2021-01-01T00:00:00Z
            email: alice@enterprise.com
            enabled: true
            environmentId: se-12345678
            instanceCount: 3
            lastModifiedAt: 2021-01-01T00:00:00Z
            lastModifiedByUserID: user-12345678
            lastModifiedByUserName: Alice
            orgId: org-12345678
            orgName: Enterprise
            orgUrl: https://enterprise.com
            serviceId: s-12345678
            status: ACTIVE
            subscriptionCount: 3
            token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
            userId: user-12345678
            userName: Alice
            userSubscriptionRole: root
          - createdAt: 2021-01-01T00:00:00Z
            email: alice@enterprise.com
            enabled: true
            environmentId: se-12345678
            instanceCount: 3
            lastModifiedAt: 2021-01-01T00:00:00Z
            lastModifiedByUserID: user-12345678
            lastModifiedByUserName: Alice
            orgId: org-12345678
            orgName: Enterprise
            orgUrl: https://enterprise.com
            serviceId: s-12345678
            status: ACTIVE
            subscriptionCount: 3
            token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
            userId: user-12345678
            userName: Alice
            userSubscriptionRole: root
          - createdAt: 2021-01-01T00:00:00Z
            email: alice@enterprise.com
            enabled: true
            environmentId: se-12345678
            instanceCount: 3
            lastModifiedAt: 2021-01-01T00:00:00Z
            lastModifiedByUserID: user-12345678
            lastModifiedByUserName: Alice
            orgId: org-12345678
            orgName: Enterprise
            orgUrl: https://enterprise.com
            serviceId: s-12345678
            status: ACTIVE
            subscriptionCount: 3
            token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
            userId: user-12345678
            userName: Alice
            userSubscriptionRole: root
          items:
            $ref: "#/components/schemas/User"
          type: array
      required:
      - users
      type: object
    FleetModifyServicesOrchestrationRequest:
      example:
        id: so-12345678
        orchestrationModifyDSL: Culpa exercitationem aliquid et animi cumque animi.
        token: ik
      properties:
        id:
          description: ID of a Services Orchestration
          example: Corrupti expedita earum.
          type: string
        orchestrationModifyDSL:
          description: base64 encoded content of services orchestration modify DSL
          example: Praesentium sint hic dolorem id sequi.
          type: string
        token:
          description: JWT token used to perform authorization
          example: db
          minLength: 1
          type: string
      required:
      - id
      - orchestrationModifyDSL
      - token
      type: object
    FleetModifyServicesOrchestrationRequest2:
      example:
        orchestrationModifyDSL: Repudiandae omnis non et repellat itaque.
      properties:
        orchestrationModifyDSL:
          description: base64 encoded content of services orchestration modify DSL
          example: Quia eos corrupti distinctio sit facere mollitia.
          type: string
      required:
      - orchestrationModifyDSL
      type: object
    FleetNetworkFeaturesConfiguration:
      example:
        isPrivateLinkEnabled: false
      properties:
        isPrivateLinkEnabled:
          description: Indicates if PrivateLink is enabled for the network
          example: false
          type: boolean
      type: object
    FleetRemoveCapacityFromResourceInstanceRequest:
      example:
        capacityToBeRemoved: 3
        environmentId: se-12345678
        instanceId: instance-12345678
        resourceId: r-12345678
        serviceId: s-12345678
        token: t
      properties:
        capacityToBeRemoved:
          description: Number of replicas to be removed
          example: 3
          format: int64
          type: integer
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        resourceId:
          description: ID of a resource
          example: Vitae tempora dolores sit est reprehenderit.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: q0
          minLength: 1
          type: string
      required:
      - capacityToBeRemoved
      - environmentId
      - instanceId
      - resourceId
      - serviceId
      - token
      type: object
    FleetRemoveCapacityFromResourceInstanceRequest2:
      example:
        capacityToBeRemoved: 3
        resourceId: r-12345678
      properties:
        capacityToBeRemoved:
          description: Number of replicas to be removed
          example: 3
          format: int64
          type: integer
        resourceId:
          description: The resource ID.
          example: r-12345678
          type: string
      required:
      - capacityToBeRemoved
      - resourceId
      type: object
    FleetRemoveCustomDNSFromResourceInstanceRequest:
      example:
        environmentId: se-12345678
        instanceId: instance-12345678
        resourceKey: http-service
        serviceId: s-12345678
        token: 8de
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        resourceKey:
          description: The resource key
          example: http-service
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: d
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - resourceKey
      - serviceId
      - token
      type: object
    FleetResendInvoiceRequest:
      example:
        id: invoice-1234568
        token: dk
      properties:
        id:
          description: ID of the invoice
          example: invoice-1234568
          type: string
        token:
          description: JWT token used to perform authorization
          example: 8ry
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    FleetRestartResourceInstanceRequest:
      example:
        environmentId: se-12345678
        instanceId: instance-12345678
        resourceId: r-12345678
        serviceId: s-12345678
        token: "7"
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        resourceId:
          description: ID of a resource
          example: Autem et.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: p
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - resourceId
      - serviceId
      - token
      type: object
    FleetRestartResourceInstanceRequest2:
      example:
        resourceId: r-12345678
      properties:
        resourceId:
          description: The resource ID.
          example: r-12345678
          type: string
      required:
      - resourceId
      type: object
    FleetRestoreResourceInstanceFromSnapshotRequest:
      example:
        environmentId: se-12345678
        inputParametersOverride:
          param1: value1
          param2: value2
        network_type: PUBLIC|INTERNAL
        productTierVersionOverride: "1.0"
        serviceId: s-12345678
        snapshotId: instance-ss-12345678
        token: u
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        inputParametersOverride:
          description: Custom input parameters override
          example:
            param1: value1
            param2: value2
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        productTierVersionOverride:
          description: The product tier version
          example: "1.0"
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        snapshotId:
          description: ID of a Resource Instance Snapshot
          example: Quam maxime.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 3q
          minLength: 1
          type: string
      required:
      - environmentId
      - serviceId
      - snapshotId
      - token
      type: object
    FleetRestoreResourceInstanceFromSnapshotRequest2:
      example:
        inputParametersOverride:
          param1: value1
          param2: value2
        network_type: PUBLIC|INTERNAL
        productTierVersionOverride: "1.0"
      properties:
        inputParametersOverride:
          description: Custom input parameters override
          example:
            param1: value1
            param2: value2
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        productTierVersionOverride:
          description: The product tier version
          example: "1.0"
          type: string
      type: object
    FleetRestoreResourceInstanceRequest:
      example:
        environmentId: se-12345678
        instanceId: instance-12345678
        network_type: PUBLIC|INTERNAL
        serviceId: s-12345678
        targetRestoreTime: 2021-09-01T00:00:00Z
        token: 8e
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        targetRestoreTime:
          description: The target restore time
          example: 2021-09-01T00:00:00Z
          type: string
        token:
          description: JWT token used to perform authorization
          example: j93
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - serviceId
      - targetRestoreTime
      - token
      type: object
    FleetRestoreResourceInstanceRequest2:
      example:
        network_type: PUBLIC|INTERNAL
        targetRestoreTime: 2021-09-01T00:00:00Z
      properties:
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        targetRestoreTime:
          description: The target restore time
          example: 2021-09-01T00:00:00Z
          type: string
      required:
      - targetRestoreTime
      type: object
    FleetRestoreResourceInstanceResult:
      example:
        id: Ducimus consectetur ipsam voluptatem impedit.
      properties:
        id:
          description: Restored Resource Instance Id
          example: Dolorem omnis at ratione quia.
          type: string
      type: object
    FleetResumeSubscriptionRequest:
      example:
        environmentId: se-12345678
        id: sub-12345678
        serviceId: s-12345678
        token: xt
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        id:
          description: ID of a Subscription
          example: Velit et ea hic sapiente quos sint.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 7pd
          minLength: 1
          type: string
      required:
      - environmentId
      - id
      - serviceId
      - token
      type: object
    FleetStartResourceInstanceRequest:
      example:
        environmentId: se-12345678
        instanceId: instance-12345678
        resourceId: r-12345678
        serviceId: s-12345678
        token: fxy
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        resourceId:
          description: ID of a resource
          example: Aut voluptas vel delectus nulla magni.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: c
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - resourceId
      - serviceId
      - token
      type: object
    FleetStartResourceInstanceRequest2:
      example:
        resourceId: r-12345678
      properties:
        resourceId:
          description: The resource ID.
          example: r-12345678
          type: string
      required:
      - resourceId
      type: object
    FleetStopResourceInstanceRequest:
      example:
        environmentId: se-12345678
        instanceId: instance-12345678
        resourceId: r-12345678
        serviceId: s-12345678
        token: r
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        resourceId:
          description: ID of a resource
          example: Recusandae accusamus.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: f
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - resourceId
      - serviceId
      - token
      type: object
    FleetStopResourceInstanceRequest2:
      example:
        resourceId: r-12345678
      properties:
        resourceId:
          description: The resource ID.
          example: r-12345678
          type: string
      required:
      - resourceId
      type: object
    FleetSuspendSubscriptionRequest:
      example:
        environmentId: se-12345678
        id: sub-12345678
        serviceId: s-12345678
        token: v0
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        id:
          description: ID of a Subscription
          example: Suscipit quia nostrum modi.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 40u
          minLength: 1
          type: string
      required:
      - environmentId
      - id
      - serviceId
      - token
      type: object
    FleetSuspendUserRequest:
      example:
        token: m
        userId: user-12345678
      properties:
        token:
          description: JWT token used to perform authorization
          example: v5r
          minLength: 1
          type: string
        userId:
          description: ID of a User
          example: Vero et fugiat.
          type: string
      required:
      - token
      - userId
      type: object
    FleetTerminateSubscriptionRequest:
      example:
        environmentId: se-12345678
        id: sub-12345678
        serviceId: s-12345678
        token: "5"
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        id:
          description: ID of a Subscription
          example: Minima veniam.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: wez
          minLength: 1
          type: string
      required:
      - environmentId
      - id
      - serviceId
      - token
      type: object
    FleetUnsuspendUserRequest:
      example:
        token: k25
        userId: user-12345678
      properties:
        token:
          description: JWT token used to perform authorization
          example: ne0
          minLength: 1
          type: string
        userId:
          description: ID of a User
          example: Distinctio vel quasi.
          type: string
      required:
      - token
      - userId
      type: object
    FleetUpdateAccountConfigResourceInstanceRequest:
      example:
        instanceId: instance-12345678
        serviceId: s-12345678
        setConnection: true
        token: 4i8
      properties:
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        setConnection:
          description: set account config instance connection
          example: true
          type: boolean
        token:
          description: JWT token used to perform authorization
          example: j2z
          minLength: 1
          type: string
      required:
      - instanceId
      - serviceId
      - token
      type: object
    FleetUpdateAccountConfigResourceInstanceRequest2:
      example:
        setConnection: true
      properties:
        setConnection:
          description: set account config instance connection
          example: true
          type: boolean
      type: object
    FleetUpdateCustomNetworkRequest:
      example:
        id: n-12345678
        name: Dev us-east-1
        token: gyl
      properties:
        id:
          description: ID of a custom network
          example: Repellendus similique autem delectus aliquam.
          type: string
        name:
          description: User friendly network name to help distinguish networks with
            same CIDRs
          example: Dev us-east-1
          type: string
        token:
          description: JWT token used to perform authorization
          example: 9i
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    FleetUpdateCustomNetworkRequest2:
      example:
        name: Dev us-east-1
      properties:
        name:
          description: User friendly network name to help distinguish networks with
            same CIDRs
          example: Dev us-east-1
          type: string
      type: object
    FleetUpdateResourceInstanceDebugModeRequest:
      example:
        enable: true
        environmentId: se-12345678
        instanceId: instance-12345678
        serviceId: s-12345678
        token: l
      properties:
        enable:
          description: Enable debug mode
          example: true
          type: boolean
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: d
          minLength: 1
          type: string
      required:
      - enable
      - environmentId
      - instanceId
      - serviceId
      - token
      type: object
    FleetUpdateResourceInstanceDebugModeRequest2:
      example:
        enable: true
      properties:
        enable:
          description: Enable debug mode
          example: true
          type: boolean
      required:
      - enable
      type: object
    FleetUpdateResourceInstanceRequest:
      example:
        environmentId: se-12345678
        instanceId: instance-12345678
        network_type: PUBLIC|INTERNAL
        requestParams:
          param1: value1
          param2: value2
        resourceId: r-12345678
        serviceId: s-12345678
        token: 8lb
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        requestParams:
          description: The request parameters
          example:
            param1: value1
            param2: value2
        resourceId:
          description: ID of a resource
          example: Eos est sint illum expedita deleniti.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 0m
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - resourceId
      - serviceId
      - token
      type: object
    FleetUpdateResourceInstanceRequest2:
      example:
        network_type: PUBLIC|INTERNAL
        requestParams:
          param1: value1
          param2: value2
        resourceId: r-12345678
      properties:
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        requestParams:
          description: The request parameters
          example:
            param1: value1
            param2: value2
        resourceId:
          description: The resource ID.
          example: r-12345678
          type: string
      required:
      - resourceId
      type: object
    FleetUpdateSubscriptionRequest:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        billingProvider: STRIPE
        customPrice: true
        customPricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        environmentId: se-12345678
        externalPayerId: a3df-sdf9-gfn3-4g3f
        id: sub-12345678
        maxNumberOfInstances: 10
        priceEffectiveDate: 2019-01-01T00:00:00Z
        serviceId: s-12345678
        token: ho
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Whether to allow creating instances when payment is not configured.
          example: true
          type: boolean
        billingProvider:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        customPrice:
          description: Whether to use a custom price for this subscription
          example: true
          type: boolean
        customPricePerUnit:
          additionalProperties: true
          description: "If custom price is true, provide the price per unit for the\
            \ subscription here."
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        externalPayerId:
          description: The external payer ID to record which customer should pay for
            this subscription.
          example: a3df-sdf9-gfn3-4g3f
          type: string
        id:
          description: ID of a Subscription
          example: Dolores aliquid minima error blanditiis.
          type: string
        maxNumberOfInstances:
          description: The maximum number of instances that can be created for this
            subscription. Use -1 to unset this restriction.
          example: 10
          format: int64
          type: integer
        priceEffectiveDate:
          description: "The effective date of the price, truncated to the first day\
            \ of the month. Only the current or future months may be specified."
          example: 2019-01-01T00:00:00Z
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: fa9
          minLength: 1
          type: string
      required:
      - environmentId
      - id
      - serviceId
      - token
      type: object
    FleetUpdateSubscriptionRequest2:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        billingProvider: STRIPE
        customPrice: true
        customPricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        externalPayerId: a3df-sdf9-gfn3-4g3f
        maxNumberOfInstances: 10
        priceEffectiveDate: 2019-01-01T00:00:00Z
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Whether to allow creating instances when payment is not configured.
          example: true
          type: boolean
        billingProvider:
          description: The billing provider for this subscription
          example: STRIPE
          type: string
        customPrice:
          description: Whether to use a custom price for this subscription
          example: true
          type: boolean
        customPricePerUnit:
          additionalProperties: true
          description: "If custom price is true, provide the price per unit for the\
            \ subscription here."
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        externalPayerId:
          description: The external payer ID to record which customer should pay for
            this subscription.
          example: a3df-sdf9-gfn3-4g3f
          type: string
        maxNumberOfInstances:
          description: The maximum number of instances that can be created for this
            subscription. Use -1 to unset this restriction.
          example: 10
          format: int64
          type: integer
        priceEffectiveDate:
          description: "The effective date of the price, truncated to the first day\
            \ of the month. Only the current or future months may be specified."
          example: 2019-01-01T00:00:00Z
          type: string
      type: object
    FleetUpdateSubscriptionsRequest:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        billingProvider: STRIPE
        customPrice: true
        customPricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        environmentId: se-12345678
        externalPayerId: a3df-sdf9-gfn3-4g3f
        maxNumberOfInstances: 10
        priceEffectiveDate: 2019-01-01T00:00:00Z
        serviceId: s-12345678
        subscriptionIDs:
        - Ab veritatis rerum quam voluptates.
        - Ab veritatis rerum quam voluptates.
        - Ab veritatis rerum quam voluptates.
        token: c61
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Whether to allow creating instances when payment is not configured.
          example: true
          type: boolean
        billingProvider:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        customPrice:
          description: Whether to use a custom price for this subscription
          example: true
          type: boolean
        customPricePerUnit:
          additionalProperties: true
          description: "If customPrice is true, provide the price per unit for the\
            \ subscription here."
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        externalPayerId:
          description: The external payer ID to record which customer should pay for
            this subscription.
          example: a3df-sdf9-gfn3-4g3f
          type: string
        maxNumberOfInstances:
          description: The maximum number of instances that can be created for this
            subscription. Use -1 to unset this restriction.
          example: 10
          format: int64
          type: integer
        priceEffectiveDate:
          description: "The effective date of the price, truncated to the first day\
            \ of the month. Only the current or future months may be specified."
          example: 2019-01-01T00:00:00Z
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        subscriptionIDs:
          description: List of subscription IDs to update
          example:
          - Ab veritatis rerum quam voluptates.
          - Ab veritatis rerum quam voluptates.
          - Ab veritatis rerum quam voluptates.
          - Ab veritatis rerum quam voluptates.
          items:
            description: ID of a Subscription
            example: Magni harum sunt reprehenderit sed similique quia.
            type: string
          type: array
        token:
          description: JWT token used to perform authorization
          example: o
          minLength: 1
          type: string
      required:
      - environmentId
      - serviceId
      - subscriptionIDs
      - token
      type: object
    FleetUpdateSubscriptionsRequest2:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        billingProvider: STRIPE
        customPrice: true
        customPricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        externalPayerId: a3df-sdf9-gfn3-4g3f
        maxNumberOfInstances: 10
        priceEffectiveDate: 2019-01-01T00:00:00Z
        subscriptionIDs:
        - Aut aut laborum qui alias.
        - Totam similique sit odio.
        - Ut inventore quia.
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Whether to allow creating instances when payment is not configured.
          example: true
          type: boolean
        billingProvider:
          description: The billing provider for this subscription
          example: STRIPE
          type: string
        customPrice:
          description: Whether to use a custom price for this subscription
          example: true
          type: boolean
        customPricePerUnit:
          additionalProperties: true
          description: "If customPrice is true, provide the price per unit for the\
            \ subscription here."
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        externalPayerId:
          description: The external payer ID to record which customer should pay for
            this subscription.
          example: a3df-sdf9-gfn3-4g3f
          type: string
        maxNumberOfInstances:
          description: The maximum number of instances that can be created for this
            subscription. Use -1 to unset this restriction.
          example: 10
          format: int64
          type: integer
        priceEffectiveDate:
          description: "The effective date of the price, truncated to the first day\
            \ of the month. Only the current or future months may be specified."
          example: 2019-01-01T00:00:00Z
          type: string
        subscriptionIDs:
          description: List of subscription IDs to update
          example:
          - Cupiditate in praesentium laudantium consequuntur.
          - Consequuntur maxime sit.
          - Cum consequatur ipsa ad cum.
          items:
            example: Debitis omnis accusantium sunt.
            type: string
          type: array
      required:
      - subscriptionIDs
      type: object
    FleetVoidInvoiceRequest:
      example:
        id: invoice-1234568
        token: u5
      properties:
        id:
          description: ID of the invoice
          example: invoice-1234568
          type: string
        token:
          description: JWT token used to perform authorization
          example: l
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    GenerateComposeSpecFromContainerImageRequest:
      example:
        environmentVariables:
        - key: MYSQL_ROOT_PASSWORD
          value: password
        image: library/mysql:5.7
        imageRegistry: docker.io
        password: password
        token: fv8
        username: username
      properties:
        environmentVariables:
          description: Runtime environment variables needed to run the image
          example:
          - key: MYSQL_ROOT_PASSWORD
            value: password
          items:
            $ref: "#/components/schemas/EnvironmentVariable"
          type: array
        image:
          description: Name of the image along with the tag. Include the repository
            name if the image is not from the official repository
          example: library/mysql:5.7
          type: string
        imageRegistry:
          description: Registry where the image is stored
          example: docker.io
          type: string
        password:
          description: Password to access the image registry
          example: password
          type: string
        token:
          description: JWT token used to perform authorization
          example: 2s7
          minLength: 1
          type: string
        username:
          description: Username to access the image registry
          example: username
          type: string
      required:
      - image
      - imageRegistry
      - token
      type: object
    GenerateComposeSpecFromContainerImageResult:
      example:
        fileContent: In provident doloribus quia.
      properties:
        fileContent:
          description: Base64 encoded Compose Spec YAML in docker compose format
          example: Qui at ex et reprehenderit culpa.
          type: string
      required:
      - fileContent
      type: object
    GenerateTokenForDeploymentCellDashboardRequest:
      example:
        id: instance-abcd1234
        subscriptionId: sub-abcd1234
        token: wf
      properties:
        id:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: m
          minLength: 1
          type: string
      required:
      - id
      - subscriptionId
      - token
      type: object
    GenerateTokenForDeploymentCellDashboardResult:
      example:
        deploymentCellID: hc-12345678
        expirationTimestamp: 2021-01-01T00:00:00Z
        token: token
      properties:
        deploymentCellID:
          description: The deployment cell ID
          example: hc-12345678
          type: string
        expirationTimestamp:
          description: The timestamp when the token expires
          example: 2021-01-01T00:00:00Z
          type: string
        token:
          description: The token to access the dashboard
          example: token
          type: string
      required:
      - deploymentCellID
      - expirationTimestamp
      - token
      type: object
    GenerateTokenForHostClusterDashboardRequest:
      example:
        id: hc-12345678
        token: 0vz
      properties:
        id:
          description: ID of a Host Cluster
          example: Ullam unde facere.
          type: string
        token:
          description: JWT token used to perform authorization
          example: d
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    GenerateTokenForHostClusterDashboardResult:
      example:
        expirationTimestamp: 2021-01-01T00:00:00Z
        token: token
      properties:
        expirationTimestamp:
          description: The timestamp when the token expires
          example: 2021-01-01T00:00:00Z
          type: string
        token:
          description: The token to access the dashboard
          example: token
          type: string
      required:
      - expirationTimestamp
      - token
      type: object
    GenericResourceDeploymentConfiguration:
      example:
        Image: nginx:latest
        PodEvents:
          pod1:
          - FirstTimestamp: 2025-10-01T12:00:00Z
            LastTimestamp: 2025-10-01T12:05:00Z
            Message: Pod scheduled successfully
            NumberOfOccurrences: 3
            Reason: Scheduled
          pod2:
          - FirstTimestamp: 2025-10-01T12:06:00Z
            LastTimestamp: 2025-10-01T12:06:00Z
            Message: Insufficient resources
            NumberOfOccurrences: 1
            Reason: FailedScheduling
        PodStatus:
          pod1: Running
          pod2: Pending
          pod3: Failed
        PodToHostMapping:
          pod1: node1
          pod2: node2
          pod3: node1
      properties:
        Image:
          description: Image for the generic resource deployment
          example: nginx:latest
          type: string
        PodEvents:
          additionalProperties:
            example:
            - FirstTimestamp: 2025-10-01T12:00:00Z
              LastTimestamp: 2025-10-01T12:05:00Z
              Message: Pod scheduled successfully
              NumberOfOccurrences: 3
              Reason: Scheduled
            - FirstTimestamp: 2025-10-01T12:00:00Z
              LastTimestamp: 2025-10-01T12:05:00Z
              Message: Pod scheduled successfully
              NumberOfOccurrences: 3
              Reason: Scheduled
            items:
              $ref: "#/components/schemas/PodEvent"
            type: array
          description: Events associated with the pods in the generic resource deployment
          example:
            pod1:
            - FirstTimestamp: 2025-10-01T12:00:00Z
              LastTimestamp: 2025-10-01T12:05:00Z
              Message: Pod scheduled successfully
              NumberOfOccurrences: 3
              Reason: Scheduled
            pod2:
            - FirstTimestamp: 2025-10-01T12:06:00Z
              LastTimestamp: 2025-10-01T12:06:00Z
              Message: Insufficient resources
              NumberOfOccurrences: 1
              Reason: FailedScheduling
          type: object
        PodStatus:
          additionalProperties:
            example: Fuga cupiditate quia et aut culpa.
            type: string
          description: Status of the pods in the generic resource deployment
          example:
            pod1: Running
            pod2: Pending
            pod3: Failed
          type: object
        PodToHostMapping:
          additionalProperties:
            example: Et illum veritatis mollitia.
            type: string
          description: Mapping of pods to k8s node names for the generic resource
            deployment
          example:
            pod1: node1
            pod2: node2
            pod3: node1
          type: object
      type: object
    GetAvailabilityZoneByCodeRequest:
      example:
        cloudProviderName: aws
        code: us-east-1a
        token: wds
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        code:
          description: Cloud-provider native availability zone code
          example: us-east-1a
          type: string
        token:
          description: JWT token used to perform authorization
          example: 59i
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - code
      - token
      type: object
    GetCloudProviderByNameRequest:
      example:
        name: aws
        token: u
      properties:
        name:
          description: Name of the CloudProvider
          example: aws
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: bqt
          minLength: 1
          type: string
      required:
      - name
      - token
      type: object
    GetConsumptionUsageRequest:
      example:
        endDate: 2024-01-01T10:00:00Z
        startDate: 2023-01-01T10:00:00Z
        subscriptionID: sub-12345678
        token: xie
      properties:
        endDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        startDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        subscriptionID:
          description: ID of a Subscription
          example: Eius quasi est enim accusamus tenetur.
          type: string
        token:
          description: JWT token used to perform authorization
          example: k
          minLength: 1
          type: string
      required:
      - token
      type: object
    GetConsumptionUsageResult:
      example:
        endTime: 2021-01-01T00:00:00.000Z
        startTime: 2021-01-01T00:00:00.000Z
        usage:
        - dimension: core/hours
          endTime: 2021-01-01T00:00:00.000Z
          startTime: 2021-01-01T00:00:00.000Z
          total: 0.67
      properties:
        endTime:
          description: End timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        startTime:
          description: Start timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        usage:
          description: Usage for the current plan
          example:
          - dimension: core/hours
            endTime: 2021-01-01T00:00:00.000Z
            startTime: 2021-01-01T00:00:00.000Z
            total: 0.67
          items:
            $ref: "#/components/schemas/UsagePerDimension"
          type: array
      type: object
    GetCurrentConsumptionUsageRequest:
      example:
        subscriptionID: sub-12345678
        token: do
      properties:
        subscriptionID:
          description: ID of a Subscription
          example: Consequatur ad molestias.
          type: string
        token:
          description: JWT token used to perform authorization
          example: j
          minLength: 1
          type: string
      required:
      - token
      type: object
    GetCurrentUsageRequest:
      example:
        token: g0w
      properties:
        token:
          description: JWT token used to perform authorization
          example: cqc
          minLength: 1
          type: string
      required:
      - token
      type: object
    GetRegionByCodeRequest:
      example:
        cloudProviderName: aws
        code: us-east-1
        token: x4h
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        code:
          description: Cloud-provider native region code
          example: us-east-1
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: 7b
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - code
      - token
      type: object
    GetSecretRequest:
      example:
        environmentType: DEV
        name: my-secret
        token: o6
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        name:
          description: Name of the secret
          example: my-secret
          type: string
        token:
          description: JWT token used to perform authorization
          example: fd
          minLength: 1
          type: string
      required:
      - environmentType
      - name
      - token
      type: object
    GetSecretResult:
      example:
        environmentType: DEV
        name: my-secret
        value: super-secret-value
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        name:
          description: Name of the secret
          example: my-secret
          type: string
        value:
          description: The value of the secret
          example: super-secret-value
          type: string
      required:
      - environmentType
      - name
      - value
      type: object
    GetServicePlanRequest:
      example:
        productTierId: pt-12345678
        serviceId: s-12345678
        token: zo
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Id alias quod.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: o
          minLength: 1
          type: string
      required:
      - productTierId
      - serviceId
      - token
      type: object
    GetServicePlanResult:
      example:
        AutoApproveSubscription: false
        accountConfigIds:
        - ac-12345678
        - ac-23456789
        activeAccountConfigIds:
          aws: ac-12345678
          gcp: ac-23456789
        apiVersion: v1
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        deploymentConfigId: dc-12345678
        gcpRegions:
        - us-central1
        hasPendingChanges: true
        isProductTierDisabled: true
        latestMajorVersion: "3.0"
        modelType: CUSTOMER_HOSTED
        privateRegions:
        - n/a
        productTierDescription: A premium product tier
        productTierDocumentation: Any documentation
        productTierFeatures:
          LOGS: true
          METRICS: false
        productTierId: pt-12345678
        productTierKey: premium
        productTierName: Premium
        productTierPlanDescription: A premium plan
        productTierPricing:
          price1: value1
        productTierSupport: Any support
        serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
          clusters for high availability
        serviceApiId: sa-12345678
        serviceEnvironmentId: se-12345678
        serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
          clusters for high availability
        serviceModelFeatures:
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        serviceModelId: sm-12345678
        serviceModelName: MySQL multi-writer service hosted model
        tierType: OMNISTRATE_DEDICATED_TENANCY
        versionSetStatus: Preferred|Active|Deprecated|Pending
      properties:
        AutoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        accountConfigIds:
          description: The infrastructure account configuration ID list
          example:
          - ac-12345678
          - ac-23456789
          items:
            description: ID of an Account Config
            example: Quia labore dignissimos deserunt.
            type: string
          type: array
        activeAccountConfigIds:
          additionalProperties: true
          description: The active infrastructure account configuration IDs per cloud
            provider
          example:
            aws: ac-12345678
            gcp: ac-23456789
          type: object
        apiVersion:
          description: The external version of the API
          example: v1
          type: string
        awsRegions:
          description: The AWS regions that this service plan is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Unde autem.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this service plan is available on
          example:
          - northcentralus
          items:
            example: Quia eum.
            type: string
          type: array
        deploymentConfigId:
          description: ID of a Deployment Config
          example: Enim enim sequi ad ullam expedita.
          type: string
        gcpRegions:
          description: The GCP regions that this service plan is available on
          example:
          - us-central1
          items:
            example: At aut velit velit.
            type: string
          type: array
        hasPendingChanges:
          description: Whether there are any pending changes for the product tier
            configuration
          example: true
          type: boolean
        isProductTierDisabled:
          description: Whether the product tier is disabled
          example: true
          type: boolean
        latestMajorVersion:
          description: The version number for the latest major version set.
          example: "3.0"
          type: string
        modelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        privateRegions:
          description: The Private regions that this service plan is available on
          example:
          - n/a
          items:
            example: Iste aperiam ut.
            type: string
          type: array
        productTierDescription:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        productTierDocumentation:
          description: Documentation
          example: Any documentation
          type: string
        productTierFeatures:
          additionalProperties: true
          description: The features that are enabled / disabled for this product tier
          example:
            LOGS: true
            METRICS: false
          type: object
        productTierId:
          description: ID of a Product Tier
          example: Ut libero nostrum iste nostrum.
          type: string
        productTierKey:
          description: Unique Key of the product tier
          example: premium
          type: string
        productTierName:
          description: Name of the product tier
          example: Premium
          type: string
        productTierPlanDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        productTierPricing:
          description: Pricing
          example:
            price1: value1
        productTierSupport:
          description: Support
          example: Any support
          type: string
        serviceApiDescription:
          description: A brief description of the service API bundle
          example: A MySQL SaaS API specializing in multi-writer multi-tenant clusters
            for high availability
          type: string
        serviceApiId:
          description: ID of a Service API
          example: Est est accusamus tempore itaque ipsam ut.
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceModelDescription:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        serviceModelFeatures:
          description: Enabled service model features
          example:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          items:
            $ref: "#/components/schemas/ServiceModelFeatureDetail"
          type: array
        serviceModelId:
          description: ID of a Service Model
          example: Voluptatem voluptatem mollitia qui aliquam ducimus repellendus.
          type: string
        serviceModelName:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        tierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        versionSetStatus:
          description: The tier version set status.
          example: Preferred|Active|Deprecated|Pending
          type: string
      required:
      - AutoApproveSubscription
      - apiVersion
      - deploymentConfigId
      - isProductTierDisabled
      - latestMajorVersion
      - modelType
      - productTierDescription
      - productTierDocumentation
      - productTierId
      - productTierKey
      - productTierName
      - productTierPlanDescription
      - productTierPricing
      - productTierSupport
      - serviceApiDescription
      - serviceApiId
      - serviceEnvironmentId
      - serviceModelDescription
      - serviceModelId
      - serviceModelName
      - tierType
      - versionSetStatus
      type: object
    GetTenantBillingStatusRequest:
      example:
        token: n1h
      properties:
        token:
          description: JWT token used to perform authorization
          example: o1d
          minLength: 1
          type: string
      required:
      - token
      type: object
    GetTenantBillingStatusResult:
      example:
        billingProviders:
        - connectClientID: ca_1234567890
          status: ENABLED
          stripeCustomerID: cus_1234567890
          type: STRIPE
        - balanceDueLink: https://billing.provider.com/balance-due
          logoURL: https://example.com/logo.png
          name: GovPay
          status: ENABLED
          type: BRING_YOUR_OWN
        enabled: true
      properties:
        billingProviders:
          description: List of billing providers
          example:
          - connectClientID: ca_1234567890
            status: ENABLED
            stripeCustomerID: cus_1234567890
            type: STRIPE
          - balanceDueLink: https://billing.provider.com/balance-due
            logoURL: https://example.com/logo.png
            name: GovPay
            status: ENABLED
            type: BRING_YOUR_OWN
          items:
            $ref: "#/components/schemas/BillingProvider"
          type: array
        enabled:
          description: Whether tenant billing is enabled for the organization
          example: true
          type: boolean
      type: object
    GetUsageRequest:
      example:
        endDate: 2024-01-01T10:00:00Z
        startDate: 2023-01-01T10:00:00Z
        token: r
      properties:
        endDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        startDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        token:
          description: JWT token used to perform authorization
          example: e02
          minLength: 1
          type: string
      required:
      - token
      type: object
    GetUsageResult:
      example:
        endTime: 2021-01-01T00:00:00.000Z
        planName: STARTER
        startTime: 2021-01-01T00:00:00.000Z
        usage:
        - dimension: core/hours
          endTime: 2021-01-01T00:00:00.000Z
          startTime: 2021-01-01T00:00:00.000Z
          total: 0.67
      properties:
        endTime:
          description: End timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        planName:
          description: This parameter is used to select the appropriate Product Plan
          example: STARTER_NO_COMMIT|STARTER|GROWTH|ENTERPRISE
          type: string
        startTime:
          description: Start timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        usage:
          description: Usage for the current plan
          example:
          - dimension: core/hours
            endTime: 2021-01-01T00:00:00.000Z
            startTime: 2021-01-01T00:00:00.000Z
            total: 0.67
          items:
            $ref: "#/components/schemas/UsagePerDimension"
          type: array
      type: object
    GetWorkflowEventsRequest:
      example:
        environmentId: se-12345678
        id: submit-create-instance-plan-instance-50h74sj46
        serviceId: s-12345678
        token: xg2
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        id:
          description: ID of the ServiceWorkflow
          example: submit-create-instance-plan-instance-50h74sj46
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: w8n
          minLength: 1
          type: string
      required:
      - environmentId
      - id
      - serviceId
      - token
      type: object
    GetWorkflowEventsResult:
      example:
        environmentId: se-12345678
        id: submit-create-instance-plan-instance-50h74sj46
        resources:
        - resourceId: r-12345678
          resourceKey: db
          resourceName: Galera
          workflowSteps:
          - events:
            - eventTime: 2020-01-01T00:00:00Z
              eventType: WorkflowStepStarted
              message: Bootstrap started
            - eventTime: 2020-01-01T00:01:00Z
              eventType: WorkflowStepCompleted
              message: Bootstrap completed
            stepName: Bootstrap
          - events:
            - eventTime: 2020-01-01T00:02:00Z
              eventType: WorkflowStepStarted
              message: Compute deployment started
            - eventTime: 2020-01-01T00:03:00Z
              eventType: WorkflowStepCompleted
              message: Compute deployment completed
            stepName: Compute
          - events:
            - eventTime: 2020-01-01T00:04:00Z
              eventType: WorkflowStepStarted
              message: Network deployment started
            - eventTime: 2020-01-01T00:05:00Z
              eventType: WorkflowStepFailed
              message: Details of the failure
            stepName: Network
        serviceId: s-12345678
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        id:
          description: ID of the ServiceWorkflow
          example: submit-create-instance-plan-instance-50h74sj46
          type: string
        resources:
          description: List of resources with workflow events.
          example:
          - resourceId: r-12345678
            resourceKey: db
            resourceName: Galera
            workflowSteps:
            - events:
              - eventTime: 2020-01-01T00:00:00Z
                eventType: WorkflowStepStarted
                message: Bootstrap started
              - eventTime: 2020-01-01T00:01:00Z
                eventType: WorkflowStepCompleted
                message: Bootstrap completed
              stepName: Bootstrap
            - events:
              - eventTime: 2020-01-01T00:02:00Z
                eventType: WorkflowStepStarted
                message: Compute deployment started
              - eventTime: 2020-01-01T00:03:00Z
                eventType: WorkflowStepCompleted
                message: Compute deployment completed
              stepName: Compute
            - events:
              - eventTime: 2020-01-01T00:04:00Z
                eventType: WorkflowStepStarted
                message: Network deployment started
              - eventTime: 2020-01-01T00:05:00Z
                eventType: WorkflowStepFailed
                message: Details of the failure
              stepName: Network
          items:
            $ref: "#/components/schemas/EventsPerResource"
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - environmentId
      - id
      - resources
      - serviceId
      type: object
    GitConfiguration:
      example:
        accessToken: my-token
        commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
        referenceName: tags/v1.0.0
        repositoryUrl: https://github.com/username/myrepo
        userName: my-user
      properties:
        accessToken:
          description: The access token
          example: my-token
          type: string
        commitSHA:
          description: The commit SHA to checkout
          example: 1e386b5f54de9150d336ccfe2e14782b94faf67c
          type: string
        referenceName:
          description: The reference name of the repository
          example: tags/v1.0.0
          type: string
        repositoryUrl:
          description: The URL of the repository
          example: https://github.com/username/myrepo
          type: string
        userName:
          description: The name of github user
          example: my-user
          type: string
      required:
      - referenceName
      - repositoryUrl
      type: object
    HelmAdoptionConfiguration:
      example:
        chartRepoURL: https://charts.example.com
        password: my-password
        releaseName: my-helm-release
        releaseNamespace: default
        runtimeConfiguration:
          timeout: 300s
          waitForJobs: true
          waitForJobsTimeout: 10m
        username: my-user
      properties:
        chartRepoURL:
          description: The Helm chart repository URL
          example: https://charts.example.com
          type: string
        password:
          description: The password to authenticate with the registry
          example: my-password
          type: string
        releaseName:
          description: The Helm release name
          example: my-helm-release
          type: string
        releaseNamespace:
          description: The Helm release namespace
          example: default
          type: string
        runtimeConfiguration:
          $ref: "#/components/schemas/HelmRuntimeConfiguration"
        username:
          description: The username to authenticate with the registry
          example: my-user
          type: string
      required:
      - chartRepoURL
      - releaseName
      - releaseNamespace
      type: object
    HelmDeploymentConfiguration:
      example:
        ChartName: nginx
        ChartVersion: 1.2.3
        DeploymentErrors: Failed to connect to repository
        PodEvents:
          pod1:
          - FirstTimestamp: 2025-10-01T12:00:00Z
            LastTimestamp: 2025-10-01T12:05:00Z
            Message: Pod scheduled successfully
            NumberOfOccurrences: 3
            Reason: Scheduled
          pod2:
          - FirstTimestamp: 2025-10-01T12:06:00Z
            LastTimestamp: 2025-10-01T12:06:00Z
            Message: Insufficient resources
            NumberOfOccurrences: 1
            Reason: FailedScheduling
        PodStatus:
          pod1: Running
          pod2: Pending
          pod3: Failed
        PodToHostMapping:
          pod1: node1
          pod2: node2
          pod3: node1
        ReleaseName: my-nginx-release
        ReleaseNamespace: default
        ReleaseStatus: deployed
        RepositoryURL: https://charts.example.com
        RuntimeConfiguration:
          namespace: default
          timeout: 300s
          waitForJobs: true
          waitForJobsTimeout: 10m
        Values:
          image:
            repository: nginx
            tag: latest
          replicaCount: 3
          service:
            type: LoadBalancer
      properties:
        ChartName:
          description: Name of the Helm chart to be deployed
          example: nginx
          type: string
        ChartVersion:
          description: Version of the Helm chart to be deployed
          example: 1.2.3
          type: string
        DeploymentErrors:
          description: Errors encountered during the Helm deployment
          example: Failed to connect to repository
          type: string
        PodEvents:
          additionalProperties:
            example:
            - FirstTimestamp: 2025-10-01T12:00:00Z
              LastTimestamp: 2025-10-01T12:05:00Z
              Message: Pod scheduled successfully
              NumberOfOccurrences: 3
              Reason: Scheduled
            - FirstTimestamp: 2025-10-01T12:00:00Z
              LastTimestamp: 2025-10-01T12:05:00Z
              Message: Pod scheduled successfully
              NumberOfOccurrences: 3
              Reason: Scheduled
            - FirstTimestamp: 2025-10-01T12:00:00Z
              LastTimestamp: 2025-10-01T12:05:00Z
              Message: Pod scheduled successfully
              NumberOfOccurrences: 3
              Reason: Scheduled
            - FirstTimestamp: 2025-10-01T12:00:00Z
              LastTimestamp: 2025-10-01T12:05:00Z
              Message: Pod scheduled successfully
              NumberOfOccurrences: 3
              Reason: Scheduled
            items:
              $ref: "#/components/schemas/PodEvent"
            type: array
          description: Events associated with the pods in the generic resource deployment
          example:
            pod1:
            - FirstTimestamp: 2025-10-01T12:00:00Z
              LastTimestamp: 2025-10-01T12:05:00Z
              Message: Pod scheduled successfully
              NumberOfOccurrences: 3
              Reason: Scheduled
            pod2:
            - FirstTimestamp: 2025-10-01T12:06:00Z
              LastTimestamp: 2025-10-01T12:06:00Z
              Message: Insufficient resources
              NumberOfOccurrences: 1
              Reason: FailedScheduling
          type: object
        PodStatus:
          additionalProperties:
            example: Voluptas et nihil nemo.
            type: string
          description: Status of the pods in the generic resource deployment
          example:
            pod1: Running
            pod2: Pending
            pod3: Failed
          type: object
        PodToHostMapping:
          additionalProperties:
            example: Vel dolorem inventore.
            type: string
          description: Mapping of pods to k8s node names for the generic resource
            deployment
          example:
            pod1: node1
            pod2: node2
            pod3: node1
          type: object
        ReleaseName:
          description: Name of the Helm release
          example: my-nginx-release
          type: string
        ReleaseNamespace:
          description: Namespace where the Helm release will be deployed
          example: default
          type: string
        ReleaseStatus:
          description: Status of the Helm release
          example: deployed
          type: string
        RepositoryURL:
          description: URL of the Helm chart repository
          example: https://charts.example.com
          type: string
        RuntimeConfiguration:
          additionalProperties: true
          description: Runtime configuration for the Helm deployment
          example:
            namespace: default
            timeout: 300s
            waitForJobs: true
            waitForJobsTimeout: 10m
          type: object
        Values:
          additionalProperties: true
          description: Deployed values for the Helm chart in YAML format
          example:
            image:
              repository: nginx
              tag: latest
            replicaCount: 3
            service:
              type: LoadBalancer
          type: object
      required:
      - ChartName
      - ChartVersion
      - ReleaseName
      - ReleaseNamespace
      - ReleaseStatus
      - RepositoryURL
      type: object
    HelmPackage:
      example:
        chartName: my-chart
        chartRepoName: my-repo
        chartRepoUrl: https://my-repo.com
        chartValues:
          key1: value1
          key2: 3
          key3:
            key4: value4
        chartVersion: 1.0.0
        layeredChartValues:
        - name: my-layer
          scope:
            '{{ $sys.cloudProviderName }}': aws
          values:
            global:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: omnistrate.com/managed-by
                        operator: In
                        values:
                        - omnistrate
          valuesFile:
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            path: helm/values/production.yaml
        - name: my-layer
          scope:
            '{{ $sys.cloudProviderName }}': aws
          values:
            global:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: omnistrate.com/managed-by
                        operator: In
                        values:
                        - omnistrate
          valuesFile:
            gitConfiguration:
              accessToken: my-token
              commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
              referenceName: tags/v1.0.0
              repositoryUrl: https://github.com/username/myrepo
              userName: my-user
            path: helm/values/production.yaml
        namespace: default
      properties:
        chartName:
          description: The chart name of the Helm package
          example: my-chart
          type: string
        chartRepoName:
          description: The chart repository name of the Helm package
          example: my-repo
          type: string
        chartRepoUrl:
          description: The chart repository URL of the Helm package
          example: https://my-repo.com
          type: string
        chartValues:
          additionalProperties: true
          description: The values of the Helm package
          example:
            key1: value1
            key2: 3
            key3:
              key4: value4
          type: object
        chartVersion:
          description: The chart version of the Helm package
          example: 1.0.0
          type: string
        layeredChartValues:
          description: Layered chart values configuration with conditional scoping
            (mutually exclusive with chartValues). Values are processed in order -
            later entries override earlier ones for the same keys.
          example:
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          items:
            $ref: "#/components/schemas/ChartValuesRef"
          type: array
        namespace:
          description: The namespace where the Helm package should be installed
          example: default
          type: string
      required:
      - chartName
      - chartRepoName
      - chartRepoUrl
      - chartVersion
      - namespace
      type: object
    HelmPackageInstallations:
      example:
        helmPackage:
          chartName: my-chart
          chartRepoName: my-repo
          chartRepoUrl: https://my-repo.com
          chartValues:
            key1: value1
            key2: 3
            key3:
              key4: value4
          chartVersion: 1.0.0
          layeredChartValues:
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          - name: my-layer
            scope:
              '{{ $sys.cloudProviderName }}': aws
            values:
              global:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - key: omnistrate.com/managed-by
                          operator: In
                          values:
                          - omnistrate
            valuesFile:
              gitConfiguration:
                accessToken: my-token
                commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                referenceName: tags/v1.0.0
                repositoryUrl: https://github.com/username/myrepo
                userName: my-user
              path: helm/values/production.yaml
          namespace: default
        hostClusterID: hc-12345678
        status: unknown|deployed|uninstalled|superseded|failed|uninstalling|pending-install|pending-upgrade|pending-rollback
      properties:
        helmPackage:
          $ref: "#/components/schemas/HelmPackage"
        hostClusterID:
          description: ID of a Host Cluster
          example: Et qui magni qui ullam aliquam.
          type: string
        status:
          description: The status of the Helm package installation
          example: unknown|deployed|uninstalled|superseded|failed|uninstalling|pending-install|pending-upgrade|pending-rollback
          type: string
      required:
      - helmPackage
      - hostClusterID
      - status
      type: object
    HelmRuntimeConfiguration:
      example:
        disableHooks: true
        recreate: true
        resetThenReuseValues: true
        resetValues: true
        reuseValues: true
        skipCRDs: true
        timeoutNanos: 1000000000
        upgradeCRDs: true
        wait: true
        waitForJobs: true
      properties:
        disableHooks:
          description: Disable Helm hooks
          example: true
          type: boolean
        recreate:
          description: Recreate the Helm package if it already exists
          example: true
          type: boolean
        resetThenReuseValues:
          description: Reset then reuse values for the Helm package before applying
          example: true
          type: boolean
        resetValues:
          description: Reset values for the Helm package before applying
          example: true
          type: boolean
        reuseValues:
          description: Reuse values for the Helm package before applying
          example: true
          type: boolean
        skipCRDs:
          description: Skip CRDs for the Helm package
          example: true
          type: boolean
        timeoutNanos:
          description: Timeout (nanos) for the Helm package to be deployed
          example: 1000000000
          format: int64
          type: integer
        upgradeCRDs:
          description: Upgrade CRDs for the Helm package
          example: true
          type: boolean
        wait:
          description: Wait for the Helm package to be deployed
          example: true
          type: boolean
        waitForJobs:
          description: Wait for all jobs to be completed
          example: true
          type: boolean
      required:
      - disableHooks
      - recreate
      - resetThenReuseValues
      - resetValues
      - reuseValues
      - skipCRDs
      - timeoutNanos
      - upgradeCRDs
      - wait
      - waitForJobs
      type: object
    HostCluster:
      example:
        EnvironmentType: PROD
        accountConfigId: ac-12345678
        accountID: "123456789012"
        amenities:
        - Description: Ensures high availability across multiple zones.
          IsManaged: true
          Name: Prometheus
          Properties:
            Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
            Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
          Type: HelmChart
        - Description: Ensures high availability across multiple zones.
          IsManaged: true
          Name: Prometheus
          Properties:
            Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
            Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
          Type: HelmChart
        - Description: Ensures high availability across multiple zones.
          IsManaged: true
          Name: Prometheus
          Properties:
            Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
            Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
          Type: HelmChart
        - Description: Ensures high availability across multiple zones.
          IsManaged: true
          Name: Prometheus
          Properties:
            Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
            Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
          Type: HelmChart
        cloudProvider: aws
        currentNumberOfDeployments: 2
        customNetworkDetail:
          cidr: 10.177.0.0/16
          id: n-12345678
          name: Prod us-east-1
          orgName: Company TM
        customerEmail: admin@example.com
        customerOrganizationName: My Customer Organization
        description: My Host Cluster
        hasPendingChanges: true
        healthStatus:
          failedEntities:
          - error: Namespace failed to sync because of missing permissions
            identifier: namespace-12345
            syncStatus: FAILED
            type: NAMESPACE
          - error: Service unable to setup load balancer
            identifier: service-67890
            syncStatus: FAILED
            type: SERVICE
        helmPackages:
        - firstDeployed: 2021-01-01T00:00:00Z
          lastDeployed: 2021-01-01T00:00:00Z
          name: my-helm-package
          namespace: my-namespace
          repository: https://my-helm-repo.com
          status: deployed
          values:
            key1: value1
            key2: value2
          version: 1.0.0
        id: hc-12345678
        isCustomDeployment: true
        isInSyncWithOrgTemplate: true
        key: my-host-cluster
        kubernetesDashboardEndpoint: https://my-k8s-dashboard.com
        modelType: BYOA
        pendingAmenities:
        - Description: Ensures high availability across multiple zones.
          IsManaged: true
          Name: Prometheus
          Properties:
            Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
            Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
          Type: HelmChart
        - Description: Ensures high availability across multiple zones.
          IsManaged: true
          Name: Prometheus
          Properties:
            Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
            Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
          Type: HelmChart
        - Description: Ensures high availability across multiple zones.
          IsManaged: true
          Name: Prometheus
          Properties:
            Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
            Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
          Type: HelmChart
        region: us-east-1
        regionId: region-12345678
        role: Provisioner
        status: READY
        type: Kubernetes
      properties:
        EnvironmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        accountConfigId:
          description: ID of an Account Config
          example: Eum blanditiis incidunt mollitia dolores.
          type: string
        accountID:
          description: "The actual account ID (AWS Account ID, GCP Project ID, Azure\
            \ Subscription ID) or 'Omnistrate Hosted' for managed accounts"
          example: "123456789012"
          type: string
        amenities:
          description: The amenities available in the host cluster
          example:
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
              Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
            Type: HelmChart
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
              Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
            Type: HelmChart
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
              Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
            Type: HelmChart
          items:
            $ref: "#/components/schemas/Amenity"
          type: array
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        currentNumberOfDeployments:
          description: The current number of deployments on the host cluster
          example: 2
          format: int64
          type: integer
        customNetworkDetail:
          $ref: "#/components/schemas/CustomNetworkFleetDetail"
        customerEmail:
          description: Email of the customer who owns the host cluster in case this
            is a BYOC / Adopted host cluster
          example: admin@example.com
          type: string
        customerOrganizationName:
          description: Name of the customer organization that owns the host cluster
            in case this is a BYOC / Adopted host cluster
          example: My Customer Organization
          type: string
        description:
          example: My Host Cluster
          minLength: 1
          type: string
        hasPendingChanges:
          description: Whether the host cluster has pending changes
          example: true
          type: boolean
        healthStatus:
          $ref: "#/components/schemas/HostClusterHealthStatus"
        helmPackages:
          description: Helm packages installed on the host cluster
          example:
          - firstDeployed: 2021-01-01T00:00:00Z
            lastDeployed: 2021-01-01T00:00:00Z
            name: my-helm-package
            namespace: my-namespace
            repository: https://my-helm-repo.com
            status: deployed
            values:
              key1: value1
              key2: value2
            version: 1.0.0
          items:
            $ref: "#/components/schemas/HelmPackage"
          type: array
        id:
          description: ID of a Host Cluster
          example: Dolorum consequatur est aliquid.
          type: string
        isCustomDeployment:
          description: Indicates if the host cluster is a custom deployment
          example: true
          type: boolean
        isInSyncWithOrgTemplate:
          description: Whether the host cluster is in sync with the org template
          example: true
          type: boolean
        key:
          description: "Unique key for the host cluster, used for identification"
          example: my-host-cluster
          type: string
        kubernetesDashboardEndpoint:
          description: Endpoint of the Kubernetes dashboard
          example: https://my-k8s-dashboard.com
          type: string
        modelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        pendingAmenities:
          description: The pending amenities for the host cluster
          example:
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
              Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
            Type: HelmChart
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
              Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
            Type: HelmChart
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
              Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
            Type: HelmChart
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
              Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
            Type: HelmChart
          items:
            $ref: "#/components/schemas/Amenity"
          type: array
        region:
          description: The actual region name of the host cluster
          example: us-east-1
          type: string
        regionId:
          description: ID of a Region
          example: Nisi quas reprehenderit.
          type: string
        role:
          example: Dataplane|Provisioner
          type: string
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        type:
          description: Type of the host cluster
          example: Kubernetes
          type: string
      required:
      - accountConfigId
      - accountID
      - cloudProvider
      - currentNumberOfDeployments
      - description
      - id
      - isCustomDeployment
      - key
      - region
      - regionId
      - status
      - type
      type: object
    HostClusterHealthStatus:
      description: Health status of the host cluster
      example:
        failedEntities:
        - error: Namespace failed to sync because of missing permissions
          identifier: namespace-12345
          syncStatus: FAILED
          type: NAMESPACE
        - error: Service unable to setup load balancer
          identifier: service-67890
          syncStatus: FAILED
          type: SERVICE
        kubernetesControlPlaneVersion: 1.32.0
        overallStatus: HEALTHY
        statusMessage: All systems operational
        totalNumberOfEntities: 10
        totalNumberOfEntitiesByType:
          NAMESPACE: 5
          POD: 2
          SERVICE: 3
        totalNumberOfFailedEntities: 2
        totalNumberOfFailedEntitiesByType:
          NAMESPACE: 1
          POD: 0
          SERVICE: 1
        totalNumberOfHealthyEntities: 8
        totalNumberOfHealthyEntitiesByType:
          NAMESPACE: 4
          POD: 1
          SERVICE: 3
      properties:
        failedEntities:
          description: List of entities that have failed health checks
          example:
          - error: Namespace failed to sync because of missing permissions
            identifier: namespace-12345
            syncStatus: FAILED
            type: NAMESPACE
          - error: Service unable to setup load balancer
            identifier: service-67890
            syncStatus: FAILED
            type: SERVICE
          items:
            $ref: "#/components/schemas/EntityHealth"
          type: array
        kubernetesControlPlaneVersion:
          description: Version of the Kubernetes control plane running in the host
            cluster
          example: 1.32.0
          type: string
        overallStatus:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        statusMessage:
          description: Detailed message about the health status of the host cluster
          example: All systems operational
          type: string
        totalNumberOfEntities:
          description: Total number of entities under management in the host cluster
          example: 10
          format: int64
          type: integer
        totalNumberOfEntitiesByType:
          additionalProperties:
            example: 291043209006441358
            format: int64
            type: integer
          description: Map of entity types to their counts
          example:
            NAMESPACE: 5
            POD: 2
            SERVICE: 3
          type: object
        totalNumberOfFailedEntities:
          description: Number of entities that have failed health checks
          example: 2
          format: int64
          type: integer
        totalNumberOfFailedEntitiesByType:
          additionalProperties:
            example: 6994841123208134267
            format: int64
            type: integer
          description: Map of entity types to their counts that have failed health
            checks
          example:
            NAMESPACE: 1
            POD: 0
            SERVICE: 1
          type: object
        totalNumberOfHealthyEntities:
          description: Number of entities that are healthy
          example: 8
          format: int64
          type: integer
        totalNumberOfHealthyEntitiesByType:
          additionalProperties:
            example: 1774852548147306626
            format: int64
            type: integer
          description: Map of entity types to their counts that are healthy
          example:
            NAMESPACE: 4
            POD: 1
            SERVICE: 3
          type: object
      required:
      - kubernetesControlPlaneVersion
      - overallStatus
      - totalNumberOfEntities
      - totalNumberOfEntitiesByType
      - totalNumberOfFailedEntities
      - totalNumberOfFailedEntitiesByType
      - totalNumberOfHealthyEntities
      - totalNumberOfHealthyEntitiesByType
      type: object
    ImageConfigChangeSummary:
      example:
        changeState: PENDING_NEW
        imageConfigId: imgc-12345678
        imageName: mysql
      properties:
        changeState:
          description: State of the configuration change
          example: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
          type: string
        imageConfigId:
          description: ID of an Image Config
          example: Voluptatem omnis aut enim laborum.
          type: string
        imageName:
          description: Name of the container image
          example: mysql
          minLength: 1
          type: string
      type: object
    InfraConfigChangeSummary:
      example:
        changeState: PENDING_NEW
        infraConfigId: ic-12345678
        name: MySQL Writer Infra Config
      properties:
        changeState:
          description: State of the configuration change
          example: PENDING_NEW|PENDING_UPDATE|ACTIVE|PENDING_DELETE|PENDING_DEPRECATE
          type: string
        infraConfigId:
          description: ID of an Infra Config
          example: Saepe aut rem est labore non.
          type: string
        name:
          description: The name of the infra config
          example: MySQL Writer Infra Config
          type: string
      type: object
    InputParameterEntity:
      example:
        custom: false
        defaultValue: option1
        dependentResourceID: r-12345678
        description: The name of the server
        displayName: Server Name
        isList: false
        key: serverName
        modifiable: true
        options:
        - option1
        - option2
        regex: "^[a-zA-Z0-9_-]{3,16}$"
        required: true
        tabIndex: 1
        type: Boolean|Float64|String|JSON|Resource
      properties:
        custom:
          description: Whether the parameter is custom
          example: false
          type: boolean
        defaultValue:
          description: The parameter default value
          example: option1
          type: string
        dependentResourceID:
          description: The parameter dependent resource ID
          example: r-12345678
          type: string
        description:
          description: The parameter description
          example: The name of the server
          type: string
        displayName:
          description: The parameter display name
          example: Server Name
          type: string
        isList:
          description: Whether the parameter is a list
          example: false
          type: boolean
        key:
          description: The parameter key
          example: serverName
          type: string
        modifiable:
          description: Whether the parameter is modifiable
          example: true
          type: boolean
        options:
          description: The parameter options
          example:
          - option1
          - option2
          items:
            example: Rerum eum possimus ipsa.
            type: string
          type: array
        regex:
          description: The parameter regex for validation
          example: "^[a-zA-Z0-9_-]{3,16}$"
          type: string
        required:
          description: Whether the parameter is required
          example: true
          type: boolean
        tabIndex:
          default: 0
          description: Index for parameter ordering in the SaaS portal
          example: 1
          format: int64
          type: integer
        type:
          description: The parameter type
          example: Boolean|Float64|String|JSON|Resource
          type: string
      required:
      - custom
      - description
      - displayName
      - isList
      - key
      - modifiable
      - required
      - type
      type: object
    InstanceHealthSummary:
      example:
        instanceID: instance-12345678
        lifeCycleStatus: RUNNING
        resourcesHealth:
          Sequi est magnam sit assumenda tempora.:
            nodesHealth:
              Delectus beatae quia at neque.:
                availabilityZone: us-east-2a
                connectivityStatus: HEALTHY
                diskHealth: HEALTHY
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                integrationsHealth:
                  CustomerObservabilityHealth: HEALTHY
                  InternalObservabilityHealth: HEALTHY
                loadStatus: LOAD_NORMAL
                nodeHealth: HEALTHY
                nodeName: postgres-0
                ports:
                - 80
                - 443
                processHealth: HEALTHY
                processLiveness: HEALTHY
                status: HEALTHY
              Id architecto rem.:
                availabilityZone: us-east-2a
                connectivityStatus: HEALTHY
                diskHealth: HEALTHY
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                integrationsHealth:
                  CustomerObservabilityHealth: HEALTHY
                  InternalObservabilityHealth: HEALTHY
                loadStatus: LOAD_NORMAL
                nodeHealth: HEALTHY
                nodeName: postgres-0
                ports:
                - 80
                - 443
                processHealth: HEALTHY
                processLiveness: HEALTHY
                status: HEALTHY
            resourceID: resource-12345678
            resourceKey: primary
            resourceType: Kustomize
            status: HEALTHY
          Vel nisi impedit dignissimos corrupti illum omnis.:
            nodesHealth:
              Delectus beatae quia at neque.:
                availabilityZone: us-east-2a
                connectivityStatus: HEALTHY
                diskHealth: HEALTHY
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                integrationsHealth:
                  CustomerObservabilityHealth: HEALTHY
                  InternalObservabilityHealth: HEALTHY
                loadStatus: LOAD_NORMAL
                nodeHealth: HEALTHY
                nodeName: postgres-0
                ports:
                - 80
                - 443
                processHealth: HEALTHY
                processLiveness: HEALTHY
                status: HEALTHY
              Id architecto rem.:
                availabilityZone: us-east-2a
                connectivityStatus: HEALTHY
                diskHealth: HEALTHY
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                integrationsHealth:
                  CustomerObservabilityHealth: HEALTHY
                  InternalObservabilityHealth: HEALTHY
                loadStatus: LOAD_NORMAL
                nodeHealth: HEALTHY
                nodeName: postgres-0
                ports:
                - 80
                - 443
                processHealth: HEALTHY
                processLiveness: HEALTHY
                status: HEALTHY
            resourceID: resource-12345678
            resourceKey: primary
            resourceType: Kustomize
            status: HEALTHY
        status: HEALTHY
      properties:
        instanceID:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        lifeCycleStatus:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        resourcesHealth:
          additionalProperties:
            $ref: "#/components/schemas/ResourceHealthSummary"
          description: The health summary of the resources by resource ID
          example:
            Qui dolorum et.:
              nodesHealth:
                Delectus beatae quia at neque.:
                  availabilityZone: us-east-2a
                  connectivityStatus: HEALTHY
                  diskHealth: HEALTHY
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  integrationsHealth:
                    CustomerObservabilityHealth: HEALTHY
                    InternalObservabilityHealth: HEALTHY
                  loadStatus: LOAD_NORMAL
                  nodeHealth: HEALTHY
                  nodeName: postgres-0
                  ports:
                  - 80
                  - 443
                  processHealth: HEALTHY
                  processLiveness: HEALTHY
                  status: HEALTHY
                Id architecto rem.:
                  availabilityZone: us-east-2a
                  connectivityStatus: HEALTHY
                  diskHealth: HEALTHY
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  integrationsHealth:
                    CustomerObservabilityHealth: HEALTHY
                    InternalObservabilityHealth: HEALTHY
                  loadStatus: LOAD_NORMAL
                  nodeHealth: HEALTHY
                  nodeName: postgres-0
                  ports:
                  - 80
                  - 443
                  processHealth: HEALTHY
                  processLiveness: HEALTHY
                  status: HEALTHY
              resourceID: resource-12345678
              resourceKey: primary
              resourceType: Kustomize
              status: HEALTHY
          type: object
        status:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
      type: object
    InstanceSnapshot:
      example:
        completeTime: 2021-09-01T00:00:00Z
        createdTime: 2021-09-01T00:00:00Z
        encrypted: true
        progress: 99
        snapshotId: instance-ss-12345678
        status: completed
      properties:
        completeTime:
          description: The snapshot time
          example: 2021-09-01T00:00:00Z
          type: string
        createdTime:
          description: The snapshot creation time
          example: 2021-09-01T00:00:00Z
          type: string
        encrypted:
          description: Whether the snapshot is encrypted
          example: true
          type: boolean
        progress:
          description: The backup progress. 0-100
          example: 99
          format: int64
          type: integer
        snapshotId:
          description: ID of a Resource Instance Snapshot
          example: Voluptas quasi iusto cupiditate magni.
          type: string
        status:
          description: The snapshot status
          example: completed
          type: string
      required:
      - completeTime
      - createdTime
      - encrypted
      - progress
      - snapshotId
      - status
      type: object
    InstanceTypeCost:
      example:
        numVMs: 10
        totalCost: 100
        totalUptimeHours: 200
      properties:
        numVMs:
          description: The number of VMs of this type
          example: 10
          format: int64
          type: integer
        totalCost:
          description: The total cost across all VMs of this type
          example: 100
          format: double
          type: number
        totalUptimeHours:
          description: The total uptime hours across all VMs of this type
          example: 200
          format: double
          type: number
      required:
      - numVMs
      - totalCost
      - totalUptimeHours
      type: object
    InstanceUpgrade:
      description: The instance upgrade status in the context of an upgrade path
      example:
        cloudProviderName: aws
        cloudProviderRegion: us-east-1
        createdAt: 2020-01-01T00:00:00Z
        healthStatus: HEALTHY
        instanceId: instance-12345678
        lifecycleStatus: RUNNING
        managedResourceType: PortsBasedProxy
        orgName: Omnistrate
        resourceName: writer
        scheduledAt: 2020-01-01
        status: PAUSED
        updatedAt: 2020-01-01T00:00:00Z
        upgradeEndTime: 2020-01-01T00:00:00Z
        upgradeStartTime: 2020-01-01T00:00:00Z
        workflowID: submit-update-instance-abcdefgh
      properties:
        cloudProviderName:
          description: The name of the cloud provider that the instance is running
            on.
          example: aws
          type: string
        cloudProviderRegion:
          description: The region of the cloud provider that the instance is running
            in.
          example: us-east-1
          type: string
        createdAt:
          description: The timestamp when the instance was created.
          example: 2020-01-01T00:00:00Z
          type: string
        healthStatus:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        lifecycleStatus:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        managedResourceType:
          description: The managed resource type of the top-level resource of the
            instance.
          example: PortsBasedProxy
          type: string
        orgName:
          description: The name of the organization that owns the instance.
          example: Omnistrate
          type: string
        resourceName:
          description: The name of the top-level resource of the instance.
          example: writer
          type: string
        scheduledAt:
          description: The date when the instance is scheduled to be updated.
          example: 2020-01-01
          type: string
        status:
          description: The status of the upgrade path.
          example: IN_PROGRESS|COMPLETE|SCHEDULED|PENDING|FAILED|PAUSED|CANCELLED
          type: string
        updatedAt:
          description: The timestamp when the instance was updated.
          example: 2020-01-01T00:00:00Z
          type: string
        upgradeEndTime:
          description: The timestamp when the upgrade ended.
          example: 2020-01-01T00:00:00Z
          type: string
        upgradeStartTime:
          description: The timestamp when the upgrade started.
          example: 2020-01-01T00:00:00Z
          type: string
        workflowID:
          description: The workflow ID of the instance upgrade.
          example: submit-update-instance-abcdefgh
          type: string
      required:
      - cloudProviderName
      - cloudProviderRegion
      - createdAt
      - instanceId
      - lifecycleStatus
      - orgName
      - resourceName
      - status
      - updatedAt
      - workflowID
      type: object
    IntegrationStatus:
      example:
        Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
        configuration:
          provider: native
        healthStatus: UNHEALTHY
        integrationType: LOGS
        message: missing exporter secret configuration for gcp
        scope: INTERNAL
      properties:
        Url:
          description: Additional URL relevant for integration (optional and integration
            specific)
          example: https://one.newrelic.com/data-exploration/data-explorer/explorer
          type: string
        configuration:
          additionalProperties: true
          description: The configuration of the integration
          example:
            provider: native
          type: object
        healthStatus:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        integrationType:
          description: The name of the integration or feature
          example: LOGS
          type: string
        message:
          description: Additional details regarding integration health
          example: missing exporter secret configuration for gcp
          type: string
        scope:
          description: ProductTierFeatureScope defines scope of the feature within
            product tier
          example: INTERNAL|CUSTOMER
          type: string
      type: object
    IntegrationsHealth:
      example:
        CustomerObservabilityHealth: HEALTHY
        InternalObservabilityHealth: HEALTHY
      properties:
        CustomerObservabilityHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        InternalObservabilityHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
      type: object
    InventoryDescribeServiceOfferingRequest:
      example:
        productTierId: pt-12345678
        productTierVersion: 1.0.0
        serviceId: s-12345678
        token: ykw
        visibility: PRIVATE
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Non accusantium aperiam.
          type: string
        productTierVersion:
          description: The product tier version
          example: 1.0.0
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 24j
          minLength: 1
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - serviceId
      - token
      type: object
    InventoryDescribeServiceOfferingResourceRequest:
      example:
        instanceId: instance-12345678
        productTierId: pt-12345678
        productTierVersion: 1.0.0
        resourceId: r-12345678
        serviceId: s-12345678
        token: "27"
      properties:
        instanceId:
          default: none
          description: The instance ID
          example: instance-12345678
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Consequatur eaque possimus ab autem reprehenderit.
          type: string
        productTierVersion:
          description: The product tier version
          example: 1.0.0
          type: string
        resourceId:
          description: ID of a resource
          example: Magni at esse repellat architecto.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: g
          minLength: 1
          type: string
      required:
      - resourceId
      - serviceId
      - token
      type: object
    InventoryDescribeServiceOfferingResourceResult:
      example:
        ConsumptionDescribeServiceOfferingResourceResult:
          apis:
          - inputParameters:
            - defaultValue: null
              description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              modifiable: true
              options: null
              required: true
              type: string
            - defaultValue: option1
              description: The type of the server
              displayName: Server Type
              isList: false
              key: serverType
              modifiable: true
              options:
              - option1
              - option2
              required: true
              type: string
            outputParameters:
            - description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              type: string
            - description: The type of the server
              displayName: Server Type
              isList: false
              key: serverType
              type: string
            verb: create
          - inputParameters:
            - defaultValue: null
              description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              modifiable: true
              options: null
              required: true
              type: string
            outputParameters:
            - description: The name of the server
              displayName: Server Name
              isList: false
              key: serverName
              type: string
            - description: The type of the server
              displayName: Server Type
              isList: false
              key: serverType
              type: string
            verb: describe
      properties:
        ConsumptionDescribeServiceOfferingResourceResult:
          $ref: "#/components/schemas/DescribeServiceOfferingResourceResult"
      type: object
    InventoryDescribeServiceOfferingResult:
      example:
        ConsumptionDescribeServiceOfferingResult:
          createdAt: 2019-01-01T00:00:00Z
          isDeprecated: false
          offerings:
          - allowCreatesWhenPaymentNotConfigured: true
            assets:
              cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
              cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
            maxNumberOfInstances: 4
            productTierName: Premium
            productTierURLKey: premium
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-12345678
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PRIVATE
            serviceModelName: Bring Your Own Account
            serviceModelURLKey: byoa
          - productTierName: Basic
            productTierURLKey: basic
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-abcdefgh
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PUBLIC
            serviceModelName: Hosted
            serviceModelURLKey: hosted
          serviceDescription: MySQL is a relational database
          serviceId: s-12345678
          serviceName: MySQL
          serviceOrgId: org-12345678
          serviceProviderId: sp-9zrg9W8Are
          serviceProviderName: "Omnistrate, Inc."
          serviceURLKey: mysql
      properties:
        ConsumptionDescribeServiceOfferingResult:
          $ref: "#/components/schemas/DescribeServiceOfferingResult"
      type: object
    InventoryListServiceOfferingsRequest:
      example:
        orgId: org-12345678
        token: c9
        visibility: PRIVATE
      properties:
        orgId:
          description: ID of an Org
          example: Et rem.
          type: string
        token:
          description: JWT token used to perform authorization
          example: uh
          minLength: 1
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - token
      type: object
    InventoryListServiceOfferingsResult:
      example:
        ConsumptionListServiceOfferingsResult:
          nextPageToken: next-token
          serviceIds:
          - s-12345678
          - s-abcdefgh
          services:
          - createdAt: 2019-01-01T00:00:00Z
            isDeprecated: false
            offerings:
            - allowCreatesWhenPaymentNotConfigured: true
              assets:
                cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
              maxNumberOfInstances: 4
              productTierName: Premium
              productTierURLKey: premium
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-12345678
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PRIVATE
              serviceModelName: Bring Your Own Account
              serviceModelURLKey: byoa
            - productTierName: Basic
              productTierURLKey: basic
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-abcdefgh
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PUBLIC
              serviceModelName: Hosted
              serviceModelURLKey: hosted
            serviceDescription: MySQL is a relational database
            serviceId: s-12345678
            serviceName: MySQL
            serviceOrgId: org-12345678
            serviceProviderId: sp-9zrg9W8Are
            serviceProviderName: "Omnistrate, Inc."
            serviceURLKey: mysql
          - createdAt: 2019-01-01T00:00:00Z
            isDeprecated: false
            offerings:
            - allowCreatesWhenPaymentNotConfigured: true
              assets:
                cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
              maxNumberOfInstances: 4
              productTierName: Premium
              productTierURLKey: premium
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-12345678
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PRIVATE
              serviceModelName: Bring Your Own Account
              serviceModelURLKey: byoa
            - productTierName: Basic
              productTierURLKey: basic
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-abcdefgh
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PUBLIC
              serviceModelName: Hosted
              serviceModelURLKey: hosted
            serviceDescription: MySQL is a relational database
            serviceId: s-12345678
            serviceName: MySQL
            serviceOrgId: org-12345678
            serviceProviderId: sp-9zrg9W8Are
            serviceProviderName: "Omnistrate, Inc."
            serviceURLKey: mysql
          - createdAt: 2019-01-01T00:00:00Z
            isDeprecated: false
            offerings:
            - allowCreatesWhenPaymentNotConfigured: true
              assets:
                cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
              maxNumberOfInstances: 4
              productTierName: Premium
              productTierURLKey: premium
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-12345678
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PRIVATE
              serviceModelName: Bring Your Own Account
              serviceModelURLKey: byoa
            - productTierName: Basic
              productTierURLKey: basic
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-abcdefgh
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PUBLIC
              serviceModelName: Hosted
              serviceModelURLKey: hosted
            serviceDescription: MySQL is a relational database
            serviceId: s-12345678
            serviceName: MySQL
            serviceOrgId: org-12345678
            serviceProviderId: sp-9zrg9W8Are
            serviceProviderName: "Omnistrate, Inc."
            serviceURLKey: mysql
      properties:
        ConsumptionListServiceOfferingsResult:
          $ref: "#/components/schemas/ListServiceOfferingsResult"
      type: object
    InviteConsumptionUserRequest:
      example:
        email: abc@gmail.com
        roleType: reader
        subscriptionId: sub-abcd1234
        token: j5y
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: fn
          minLength: 1
          type: string
      required:
      - email
      - roleType
      - subscriptionId
      - token
      type: object
    InviteUserRequest:
      example:
        email: abc@gmail.com
        roleType: reader
        token: s
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        token:
          description: JWT token used to perform authorization
          example: "5"
          minLength: 1
          type: string
      required:
      - email
      - roleType
      - token
      type: object
    Invoice:
      example:
        currency: USD
        dueDate: 2023-10-01T00:00:00Z
        invoiceDate: 2021-01-01T00:00:00.000Z
        invoiceId: in_1234568
        invoiceNumber: 2021-01-01-1234567890
        invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
        invoiceStatus: Open
        invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
        paymentTerms: Net 30
        taxAmount: 10
        totalAmount: 110
        totalAmountWithoutTax: 100
      properties:
        currency:
          description: The currency of the charge
          example: USD
          type: string
        dueDate:
          description: Due date in ISO 8601 format
          example: 2023-10-01T00:00:00Z
          type: string
        invoiceDate:
          description: Date of the invoice
          example: 2021-01-01T00:00:00.000Z
          type: string
        invoiceId:
          description: ID of the invoice
          example: in_1234568
          type: string
        invoiceNumber:
          description: The invoice number
          example: 2021-01-01-1234567890
          type: string
        invoicePdf:
          description: URL for the PDF of the invoice
          example: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
          type: string
        invoiceStatus:
          description: This describes the status of the invoice and is set by the
            payment provider
          example: draft|open|paid|uncollectible|void
          type: string
        invoiceUrl:
          description: URL for this invoice
          example: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
          type: string
        paymentTerms:
          description: Payment terms of the invoice
          example: Net 30
          type: string
        taxAmount:
          description: "Amount of tax, if any"
          example: 10
          format: double
          type: number
        totalAmount:
          description: Amount of Invoice
          example: 110
          format: double
          type: number
        totalAmountWithoutTax:
          description: Amount of Invoice without tax
          example: 100
          format: double
          type: number
      type: object
    JobMetric:
      example:
        additionalData:
          completionStatus: Succeeded
          retries: 2
        endTime: 2021-09-01T01:00:00Z
        metricType: cpu_core_seconds
        startTime: 2021-09-01T00:00:00Z
        value: 120.5
      properties:
        additionalData:
          additionalProperties: true
          description: Additional metadata about the job
          example:
            completionStatus: Succeeded
            retries: 2
          type: object
        endTime:
          description: When the job completed
          example: 2021-09-01T01:00:00Z
          type: string
        metricType:
          description: Type of job metric being tracked
          example: cpu_core_seconds|memory_mb_seconds
          type: string
        startTime:
          description: When the job started running
          example: 2021-09-01T00:00:00Z
          type: string
        value:
          description: Value of the metric
          example: 120.5
          format: double
          type: number
      required:
      - metricType
      - startTime
      - value
      type: object
    KubeConfigHostClusterRequest:
      example:
        id: hc-12345678
        role: cluster-admin|cluster-reader
        token: w1k
      properties:
        id:
          description: ID of a Host Cluster
          example: Minima aut voluptas quis quo.
          type: string
        role:
          default: cluster-reader
          description: Role of the service account to use in the kubeconfig
          example: cluster-admin|cluster-reader
          type: string
        token:
          description: JWT token used to perform authorization
          example: f
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    KubeConfigHostClusterResult:
      example:
        apiServerEndpoint: https://api.my-host-cluster.com
        caDataBase64: base64-encoded-ca-data
        clientCertificateDataBase64: base64-encoded-client-certificate-data
        clientKeyDataBase64: base64-encoded-client-key-data
        id: hc-12345678
        serviceAccountToken: base64-encoded-service-account-token
        userName: omnistrate-user
      properties:
        apiServerEndpoint:
          description: The API server endpoint of the host cluster
          example: https://api.my-host-cluster.com
          type: string
        caDataBase64:
          description: Base64 encoded CA data for the host cluster
          example: base64-encoded-ca-data
          type: string
        clientCertificateDataBase64:
          description: Base64 encoded client certificate data for the host cluster
          example: base64-encoded-client-certificate-data
          type: string
        clientKeyDataBase64:
          description: Base64 encoded client key data for the host cluster
          example: base64-encoded-client-key-data
          type: string
        id:
          description: ID of a Host Cluster
          example: Tempora vitae quasi cupiditate consectetur.
          type: string
        serviceAccountToken:
          description: Service account token for the host cluster
          example: base64-encoded-service-account-token
          type: string
        userName:
          description: The user name to use in the kubeconfig
          example: omnistrate-user
          type: string
      required:
      - apiServerEndpoint
      - caDataBase64
      - clientCertificateDataBase64
      - clientKeyDataBase64
      - id
      - serviceAccountToken
      - userName
      type: object
    KubernetesDashboardEndpoint:
      example:
        dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
        deploymentCellID: hc-12345678
      properties:
        dashboardEndpoint:
          default: ""
          description: The dashboard endpoint
          example: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
          type: string
        deploymentCellID:
          default: ""
          description: The deployment cell ID
          example: hc-12345678
          type: string
      type: object
    KustomizeDeploymentConfiguration:
      example:
        BasePath: /path/to/kustomization
        DeploymentErrors: Failed to apply Kustomize overlays
        Overlays:
          overlay1: /path/to/overlay1
          overlay2: /path/to/overlay2
      properties:
        BasePath:
          description: Base path for Kustomize configuration
          example: /path/to/kustomization
          type: string
        DeploymentErrors:
          description: Errors encountered during the Kustomize deployment
          example: Failed to apply Kustomize overlays
          type: string
        Overlays:
          additionalProperties:
            example: Aut debitis at sed et consequatur.
            type: string
          description: Overlays for Kustomize deployment
          example:
            overlay1: /path/to/overlay1
            overlay2: /path/to/overlay2
          type: object
      required:
      - BasePath
      - Overlays
      type: object
    Limits:
      description: Limit of a parameter
      example:
        max: Illo qui est provident amet et.
        maxLength: Omnis dolores natus ut aut corrupti.
        min: Numquam molestiae autem incidunt minima.
        minLength: Et autem culpa.
      properties:
        max:
          description: Maximum value for an integer or floating-point parameter
          example: Nulla perspiciatis veritatis est alias cumque et.
          type: string
        maxLength:
          description: Maximum length of a string parameter
          example: Vel at enim qui eum voluptas facilis.
          type: string
        min:
          description: Minimum value for an integer or floating-point parameter
          example: Architecto est nihil error.
          type: string
        minLength:
          description: Minimum length of a string parameter
          example: Accusantium esse dolor temporibus reiciendis doloremque.
          type: string
      type: object
    List:
      example:
        token: z7x
      properties:
        token:
          description: JWT token used to perform authorization
          example: nw
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListAccountConfigsResult:
      description: List of Account Config IDs
      example:
        accountConfigs:
        - awsAccountID: "123456789012"
          awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          byoaInstanceIDs:
          - instance-12345678
          - instance-abcdefgh
          cloudProviderId: infra-12345678
          description: An AWS account hosting multiple dev environments
          gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
          id: ac-12345678
          name: Dev AWS account
          status: READY
          statusMessage: Account is ready
        - awsAccountID: "123456789012"
          awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
          awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
          awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
          azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          azureSubscriptionID: 12345678-1234-1234-1234-123456789012
          azureTenantID: 12345678-1234-1234-1234-123456789012
          byoaInstanceIDs:
          - instance-12345678
          - instance-abcdefgh
          cloudProviderId: infra-12345678
          description: An AWS account hosting multiple dev environments
          gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
          gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
          gcpProjectID: my-project
          gcpProjectNumber: "123456789012"
          gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
          id: ac-12345678
          name: Dev AWS account
          status: READY
          statusMessage: Account is ready
        ids:
        - ac-12345678
        - ac-abcdefgh
        - ac-1234efgh
        nextPageToken: next-token
      properties:
        accountConfigs:
          description: The list of account configs
          example:
          - awsAccountID: "123456789012"
            awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
            awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
            azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            byoaInstanceIDs:
            - instance-12345678
            - instance-abcdefgh
            cloudProviderId: infra-12345678
            description: An AWS account hosting multiple dev environments
            gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
            id: ac-12345678
            name: Dev AWS account
            status: READY
            statusMessage: Account is ready
          - awsAccountID: "123456789012"
            awsBootstrapRoleARN: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
            awsCloudFormationNoLBTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template-no-lb-policy.yaml
            awsCloudFormationTemplateURL: https://s3.amazonaws.com/omnistrate-cloudformation/org-EUVvex3bVm/account-config-setup-template.yaml
            azureBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            azureDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/azure-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            azureSubscriptionID: 12345678-1234-1234-1234-123456789012
            azureTenantID: 12345678-1234-1234-1234-123456789012
            byoaInstanceIDs:
            - instance-12345678
            - instance-abcdefgh
            cloudProviderId: infra-12345678
            description: An AWS account hosting multiple dev environments
            gcpBootstrapShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-bootstrap.sh?account_config_id=ac-MOju2uwKM0)"
            gcpDisconnectShellCommand: bash -c "$(curl -fsSL https://omnistrate.com/account-setup/gcp-disconnect.sh?account_config_id=ac-MOju2uwKM0)"
            gcpProjectID: my-project
            gcpProjectNumber: "123456789012"
            gcpServiceAccountEmail: bootstrap@my-project.iam.gserviceaccount.com
            id: ac-12345678
            name: Dev AWS account
            status: READY
            statusMessage: Account is ready
          items:
            $ref: "#/components/schemas/FleetDescribeAccountConfigResult"
          type: array
        ids:
          example:
          - ac-12345678
          - ac-abcdefgh
          - ac-1234efgh
          items:
            description: ID of an Account Config
            example: Accusamus distinctio et eveniet sunt pariatur id.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      type: object
    ListActiveOrganizationsRequest:
      example:
        environmentId: se-12345678
        serviceId: s-12345678
        token: qf
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 8mb
          minLength: 1
          type: string
      required:
      - environmentId
      - serviceId
      - token
      type: object
    ListAllInstancesInHostClusterRequest:
      example:
        hostClusterId: hc-12345678
        nextPageToken: token
        pageSize: 10
        token: 8tr
      properties:
        hostClusterId:
          description: ID of a Host Cluster
          example: Modi perferendis et dolorum sed quo.
          type: string
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        token:
          description: JWT token used to perform authorization
          example: 9w
          minLength: 1
          type: string
      required:
      - hostClusterId
      - token
      type: object
    ListAllInstancesInHostClusterResult:
      example:
        instances:
        - adopted: true
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          cloudProvider: aws
          consumptionResourceInstanceResult:
            active: true
            autoscalingEnabled: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            backupStatus:
              backupPeriodInHours: 2
              backupRetentionInDays: 7
              earliestRestoreTime: 2021-09-01T00:00:00Z
              lastBackupTime: 2021-09-01T00:00:00Z
            cloud_provider: aws
            created_at: 2023-01-10T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            currentReplicas: "2"
            customNetworkDetail:
              cidr: 10.177.0.0/16
              id: n-12345678
              name: Prod us-east-1
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                isJob: false
                jobMetrics:
                - additionalData:
                    exitCode: 0
                    status: Succeeded
                  endTime: 2023-01-01T10:05:00Z
                  metricType: cpu_core_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 120.5
                - additionalData:
                    peakMemoryUsage: 512MB
                  endTime: 2023-01-01T10:05:00Z
                  metricType: memory_mb_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 2560
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: primary
                resourceName: Primary MySQL Instance
            externalPayerId: external-payer-id-1234
            gcpProjectID: my-project
            highAvailability: true
            id: instance-abcd1234
            instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            last_modified_at: 2023-01-20T00:00:00Z
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            maxReplicas: "1"
            minReplicas: "1"
            network_type: PUBLIC|INTERNAL
            productTierFeatures:
              LOGS:
                auth:
                  password: px3c4d5f6g7h8i
                  username: abcd1234
                enabled: true
                websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
              METRICS:
                enabled: false
            region: us-east-1
            resourceID: r-abcd1234
            result_params:
              param1: value1
              param2: value2
            serverlessEnabled: true
            status: RUNNING
            subscriptionId: sub-abcd1234
            subscriptionLicense:
              certificateBase64: public-cert
              expirationDate: 2024-01-01T10:00:00Z
              licenseBase64: license-file
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
          defaultSubscription: true
          deploymentCellID: hc-12345678
          environmentId: se-12345678
          gcpProjectID: my-project
          input_params:
            param1: value1
            param2: value2
          instanceDebugCommands:
          - aws eks update-kubeconfig --name my-cluster --region us-west-2
          - kubectl -n instance-12345678 get pods
          integrationsStatus:
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          maintenanceTasks:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          managedResourceType: PortsBasedProxy
          manualOverride:
            setAt: 2020-01-01T00:00:00Z
            setterUserId: user-12345678
            workflowId: wf-12345678
          organizationId: org-12345678
          organizationName: my-org
          portsRegistrationStatus:
            instance-123:
            - 30000
            - 30001
            instance-456:
            - 30002
            - 30003
          productTierId: pt-12345678
          productTierName: premium
          productTierType: OMNISTRATE_DEDICATED
          proxyType: PortsBasedProxy
          resourceVersionSummaries:
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          serviceEnvName: dev
          serviceId: s-12345678
          serviceLogoURL: Velit rerum aut.
          serviceModelId: sm-12345678
          serviceModelName: hosted
          serviceModelType: OMNISTRATE_HOSTED
          serviceName: mysql
          subscriptionId: sub-12345678
          subscriptionOwnerName: John Doe
          subscriptionStatus: ACTIVE
          tierVersion: "1.0"
          tierVersionReleasedAt: 2020-01-01T00:00:00Z
          tierVersionReleasedByUserId: user-12345678
          tierVersionReleasedByUserName: John Doe
          tierVersionStatus: Preferred|Active|Deprecated|Pending
        - adopted: true
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          cloudProvider: aws
          consumptionResourceInstanceResult:
            active: true
            autoscalingEnabled: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            backupStatus:
              backupPeriodInHours: 2
              backupRetentionInDays: 7
              earliestRestoreTime: 2021-09-01T00:00:00Z
              lastBackupTime: 2021-09-01T00:00:00Z
            cloud_provider: aws
            created_at: 2023-01-10T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            currentReplicas: "2"
            customNetworkDetail:
              cidr: 10.177.0.0/16
              id: n-12345678
              name: Prod us-east-1
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                isJob: false
                jobMetrics:
                - additionalData:
                    exitCode: 0
                    status: Succeeded
                  endTime: 2023-01-01T10:05:00Z
                  metricType: cpu_core_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 120.5
                - additionalData:
                    peakMemoryUsage: 512MB
                  endTime: 2023-01-01T10:05:00Z
                  metricType: memory_mb_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 2560
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: primary
                resourceName: Primary MySQL Instance
            externalPayerId: external-payer-id-1234
            gcpProjectID: my-project
            highAvailability: true
            id: instance-abcd1234
            instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            last_modified_at: 2023-01-20T00:00:00Z
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            maxReplicas: "1"
            minReplicas: "1"
            network_type: PUBLIC|INTERNAL
            productTierFeatures:
              LOGS:
                auth:
                  password: px3c4d5f6g7h8i
                  username: abcd1234
                enabled: true
                websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
              METRICS:
                enabled: false
            region: us-east-1
            resourceID: r-abcd1234
            result_params:
              param1: value1
              param2: value2
            serverlessEnabled: true
            status: RUNNING
            subscriptionId: sub-abcd1234
            subscriptionLicense:
              certificateBase64: public-cert
              expirationDate: 2024-01-01T10:00:00Z
              licenseBase64: license-file
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
          defaultSubscription: true
          deploymentCellID: hc-12345678
          environmentId: se-12345678
          gcpProjectID: my-project
          input_params:
            param1: value1
            param2: value2
          instanceDebugCommands:
          - aws eks update-kubeconfig --name my-cluster --region us-west-2
          - kubectl -n instance-12345678 get pods
          integrationsStatus:
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          maintenanceTasks:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          managedResourceType: PortsBasedProxy
          manualOverride:
            setAt: 2020-01-01T00:00:00Z
            setterUserId: user-12345678
            workflowId: wf-12345678
          organizationId: org-12345678
          organizationName: my-org
          portsRegistrationStatus:
            instance-123:
            - 30000
            - 30001
            instance-456:
            - 30002
            - 30003
          productTierId: pt-12345678
          productTierName: premium
          productTierType: OMNISTRATE_DEDICATED
          proxyType: PortsBasedProxy
          resourceVersionSummaries:
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          serviceEnvName: dev
          serviceId: s-12345678
          serviceLogoURL: Velit rerum aut.
          serviceModelId: sm-12345678
          serviceModelName: hosted
          serviceModelType: OMNISTRATE_HOSTED
          serviceName: mysql
          subscriptionId: sub-12345678
          subscriptionOwnerName: John Doe
          subscriptionStatus: ACTIVE
          tierVersion: "1.0"
          tierVersionReleasedAt: 2020-01-01T00:00:00Z
          tierVersionReleasedByUserId: user-12345678
          tierVersionReleasedByUserName: John Doe
          tierVersionStatus: Preferred|Active|Deprecated|Pending
        - adopted: true
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          cloudProvider: aws
          consumptionResourceInstanceResult:
            active: true
            autoscalingEnabled: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            backupStatus:
              backupPeriodInHours: 2
              backupRetentionInDays: 7
              earliestRestoreTime: 2021-09-01T00:00:00Z
              lastBackupTime: 2021-09-01T00:00:00Z
            cloud_provider: aws
            created_at: 2023-01-10T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            currentReplicas: "2"
            customNetworkDetail:
              cidr: 10.177.0.0/16
              id: n-12345678
              name: Prod us-east-1
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                isJob: false
                jobMetrics:
                - additionalData:
                    exitCode: 0
                    status: Succeeded
                  endTime: 2023-01-01T10:05:00Z
                  metricType: cpu_core_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 120.5
                - additionalData:
                    peakMemoryUsage: 512MB
                  endTime: 2023-01-01T10:05:00Z
                  metricType: memory_mb_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 2560
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: primary
                resourceName: Primary MySQL Instance
            externalPayerId: external-payer-id-1234
            gcpProjectID: my-project
            highAvailability: true
            id: instance-abcd1234
            instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            last_modified_at: 2023-01-20T00:00:00Z
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            maxReplicas: "1"
            minReplicas: "1"
            network_type: PUBLIC|INTERNAL
            productTierFeatures:
              LOGS:
                auth:
                  password: px3c4d5f6g7h8i
                  username: abcd1234
                enabled: true
                websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
              METRICS:
                enabled: false
            region: us-east-1
            resourceID: r-abcd1234
            result_params:
              param1: value1
              param2: value2
            serverlessEnabled: true
            status: RUNNING
            subscriptionId: sub-abcd1234
            subscriptionLicense:
              certificateBase64: public-cert
              expirationDate: 2024-01-01T10:00:00Z
              licenseBase64: license-file
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
          defaultSubscription: true
          deploymentCellID: hc-12345678
          environmentId: se-12345678
          gcpProjectID: my-project
          input_params:
            param1: value1
            param2: value2
          instanceDebugCommands:
          - aws eks update-kubeconfig --name my-cluster --region us-west-2
          - kubectl -n instance-12345678 get pods
          integrationsStatus:
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          maintenanceTasks:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          managedResourceType: PortsBasedProxy
          manualOverride:
            setAt: 2020-01-01T00:00:00Z
            setterUserId: user-12345678
            workflowId: wf-12345678
          organizationId: org-12345678
          organizationName: my-org
          portsRegistrationStatus:
            instance-123:
            - 30000
            - 30001
            instance-456:
            - 30002
            - 30003
          productTierId: pt-12345678
          productTierName: premium
          productTierType: OMNISTRATE_DEDICATED
          proxyType: PortsBasedProxy
          resourceVersionSummaries:
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          serviceEnvName: dev
          serviceId: s-12345678
          serviceLogoURL: Velit rerum aut.
          serviceModelId: sm-12345678
          serviceModelName: hosted
          serviceModelType: OMNISTRATE_HOSTED
          serviceName: mysql
          subscriptionId: sub-12345678
          subscriptionOwnerName: John Doe
          subscriptionStatus: ACTIVE
          tierVersion: "1.0"
          tierVersionReleasedAt: 2020-01-01T00:00:00Z
          tierVersionReleasedByUserId: user-12345678
          tierVersionReleasedByUserName: John Doe
          tierVersionStatus: Preferred|Active|Deprecated|Pending
        - adopted: true
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          cloudProvider: aws
          consumptionResourceInstanceResult:
            active: true
            autoscalingEnabled: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            backupStatus:
              backupPeriodInHours: 2
              backupRetentionInDays: 7
              earliestRestoreTime: 2021-09-01T00:00:00Z
              lastBackupTime: 2021-09-01T00:00:00Z
            cloud_provider: aws
            created_at: 2023-01-10T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            currentReplicas: "2"
            customNetworkDetail:
              cidr: 10.177.0.0/16
              id: n-12345678
              name: Prod us-east-1
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                isJob: false
                jobMetrics:
                - additionalData:
                    exitCode: 0
                    status: Succeeded
                  endTime: 2023-01-01T10:05:00Z
                  metricType: cpu_core_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 120.5
                - additionalData:
                    peakMemoryUsage: 512MB
                  endTime: 2023-01-01T10:05:00Z
                  metricType: memory_mb_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 2560
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: primary
                resourceName: Primary MySQL Instance
            externalPayerId: external-payer-id-1234
            gcpProjectID: my-project
            highAvailability: true
            id: instance-abcd1234
            instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            last_modified_at: 2023-01-20T00:00:00Z
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            maxReplicas: "1"
            minReplicas: "1"
            network_type: PUBLIC|INTERNAL
            productTierFeatures:
              LOGS:
                auth:
                  password: px3c4d5f6g7h8i
                  username: abcd1234
                enabled: true
                websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
              METRICS:
                enabled: false
            region: us-east-1
            resourceID: r-abcd1234
            result_params:
              param1: value1
              param2: value2
            serverlessEnabled: true
            status: RUNNING
            subscriptionId: sub-abcd1234
            subscriptionLicense:
              certificateBase64: public-cert
              expirationDate: 2024-01-01T10:00:00Z
              licenseBase64: license-file
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
          defaultSubscription: true
          deploymentCellID: hc-12345678
          environmentId: se-12345678
          gcpProjectID: my-project
          input_params:
            param1: value1
            param2: value2
          instanceDebugCommands:
          - aws eks update-kubeconfig --name my-cluster --region us-west-2
          - kubectl -n instance-12345678 get pods
          integrationsStatus:
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          maintenanceTasks:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          managedResourceType: PortsBasedProxy
          manualOverride:
            setAt: 2020-01-01T00:00:00Z
            setterUserId: user-12345678
            workflowId: wf-12345678
          organizationId: org-12345678
          organizationName: my-org
          portsRegistrationStatus:
            instance-123:
            - 30000
            - 30001
            instance-456:
            - 30002
            - 30003
          productTierId: pt-12345678
          productTierName: premium
          productTierType: OMNISTRATE_DEDICATED
          proxyType: PortsBasedProxy
          resourceVersionSummaries:
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          serviceEnvName: dev
          serviceId: s-12345678
          serviceLogoURL: Velit rerum aut.
          serviceModelId: sm-12345678
          serviceModelName: hosted
          serviceModelType: OMNISTRATE_HOSTED
          serviceName: mysql
          subscriptionId: sub-12345678
          subscriptionOwnerName: John Doe
          subscriptionStatus: ACTIVE
          tierVersion: "1.0"
          tierVersionReleasedAt: 2020-01-01T00:00:00Z
          tierVersionReleasedByUserId: user-12345678
          tierVersionReleasedByUserName: John Doe
          tierVersionStatus: Preferred|Active|Deprecated|Pending
        nextPageToken: token
      properties:
        instances:
          description: All resource instances in the given host cluster
          example:
          - adopted: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            cloudProvider: aws
            consumptionResourceInstanceResult:
              active: true
              autoscalingEnabled: true
              awsAccountID: "123456789012"
              azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
              backupStatus:
                backupPeriodInHours: 2
                backupRetentionInDays: 7
                earliestRestoreTime: 2021-09-01T00:00:00Z
                lastBackupTime: 2021-09-01T00:00:00Z
              cloud_provider: aws
              created_at: 2023-01-10T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              currentReplicas: "2"
              customNetworkDetail:
                cidr: 10.177.0.0/16
                id: n-12345678
                name: Prod us-east-1
              detailedNetworkTopology:
                r-abcd1234:
                  allowedIPRanges:
                  - 0.0.0.0/0
                  clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  clusterPorts:
                  - 3306
                  isJob: false
                  jobMetrics:
                  - additionalData:
                      exitCode: 0
                      status: Succeeded
                    endTime: 2023-01-01T10:05:00Z
                    metricType: cpu_core_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 120.5
                  - additionalData:
                      peakMemoryUsage: 512MB
                    endTime: 2023-01-01T10:05:00Z
                    metricType: memory_mb_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 2560
                  main: true
                  networkingType: PUBLIC
                  nodes:
                  - availabilityZone: us-east-2a
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    healthStatus: healthy
                    id: primary-0
                    ports:
                    - 3306
                    status: RUNNING
                  privateNetworkCIDR: 10.0.0.2/24
                  privateNetworkID: n-1234abcd
                  publiclyAccessible: true
                  resourceKey: primary
                  resourceName: Primary MySQL Instance
              externalPayerId: external-payer-id-1234
              gcpProjectID: my-project
              highAvailability: true
              id: instance-abcd1234
              instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
              kubernetesDashboardEndpoint:
                dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                deploymentCellID: hc-12345678
              last_modified_at: 2023-01-20T00:00:00Z
              maintenanceTasks:
                backups:
                - backup_id: bk-12345678
                upgrade_paths:
                - upgrade_path_id: up-9876543
                  upgrade_path_instance_status: PENDING
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: IN_PROGRESS
                - upgrade_path_id: up-12345548
                  upgrade_path_instance_status: PENDING
                  upgrade_path_released_at: 2023-01-01T09:00:00Z
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: SCHEDULED
              maxReplicas: "1"
              minReplicas: "1"
              network_type: PUBLIC|INTERNAL
              productTierFeatures:
                LOGS:
                  auth:
                    password: px3c4d5f6g7h8i
                    username: abcd1234
                  enabled: true
                  websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                METRICS:
                  enabled: false
              region: us-east-1
              resourceID: r-abcd1234
              result_params:
                param1: value1
                param2: value2
              serverlessEnabled: true
              status: RUNNING
              subscriptionId: sub-abcd1234
              subscriptionLicense:
                certificateBase64: public-cert
                expirationDate: 2024-01-01T10:00:00Z
                licenseBase64: license-file
              subscriptionStatus: ACTIVE
              tierVersion: "1.0"
            defaultSubscription: true
            deploymentCellID: hc-12345678
            environmentId: se-12345678
            gcpProjectID: my-project
            input_params:
              param1: value1
              param2: value2
            instanceDebugCommands:
            - aws eks update-kubeconfig --name my-cluster --region us-west-2
            - kubectl -n instance-12345678 get pods
            integrationsStatus:
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            managedResourceType: PortsBasedProxy
            manualOverride:
              setAt: 2020-01-01T00:00:00Z
              setterUserId: user-12345678
              workflowId: wf-12345678
            organizationId: org-12345678
            organizationName: my-org
            portsRegistrationStatus:
              instance-123:
              - 30000
              - 30001
              instance-456:
              - 30002
              - 30003
            productTierId: pt-12345678
            productTierName: premium
            productTierType: OMNISTRATE_DEDICATED
            proxyType: PortsBasedProxy
            resourceVersionSummaries:
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            serviceEnvName: dev
            serviceId: s-12345678
            serviceLogoURL: Velit rerum aut.
            serviceModelId: sm-12345678
            serviceModelName: hosted
            serviceModelType: OMNISTRATE_HOSTED
            serviceName: mysql
            subscriptionId: sub-12345678
            subscriptionOwnerName: John Doe
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
            tierVersionReleasedAt: 2020-01-01T00:00:00Z
            tierVersionReleasedByUserId: user-12345678
            tierVersionReleasedByUserName: John Doe
            tierVersionStatus: Preferred|Active|Deprecated|Pending
          - adopted: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            cloudProvider: aws
            consumptionResourceInstanceResult:
              active: true
              autoscalingEnabled: true
              awsAccountID: "123456789012"
              azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
              backupStatus:
                backupPeriodInHours: 2
                backupRetentionInDays: 7
                earliestRestoreTime: 2021-09-01T00:00:00Z
                lastBackupTime: 2021-09-01T00:00:00Z
              cloud_provider: aws
              created_at: 2023-01-10T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              currentReplicas: "2"
              customNetworkDetail:
                cidr: 10.177.0.0/16
                id: n-12345678
                name: Prod us-east-1
              detailedNetworkTopology:
                r-abcd1234:
                  allowedIPRanges:
                  - 0.0.0.0/0
                  clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  clusterPorts:
                  - 3306
                  isJob: false
                  jobMetrics:
                  - additionalData:
                      exitCode: 0
                      status: Succeeded
                    endTime: 2023-01-01T10:05:00Z
                    metricType: cpu_core_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 120.5
                  - additionalData:
                      peakMemoryUsage: 512MB
                    endTime: 2023-01-01T10:05:00Z
                    metricType: memory_mb_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 2560
                  main: true
                  networkingType: PUBLIC
                  nodes:
                  - availabilityZone: us-east-2a
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    healthStatus: healthy
                    id: primary-0
                    ports:
                    - 3306
                    status: RUNNING
                  privateNetworkCIDR: 10.0.0.2/24
                  privateNetworkID: n-1234abcd
                  publiclyAccessible: true
                  resourceKey: primary
                  resourceName: Primary MySQL Instance
              externalPayerId: external-payer-id-1234
              gcpProjectID: my-project
              highAvailability: true
              id: instance-abcd1234
              instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
              kubernetesDashboardEndpoint:
                dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                deploymentCellID: hc-12345678
              last_modified_at: 2023-01-20T00:00:00Z
              maintenanceTasks:
                backups:
                - backup_id: bk-12345678
                upgrade_paths:
                - upgrade_path_id: up-9876543
                  upgrade_path_instance_status: PENDING
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: IN_PROGRESS
                - upgrade_path_id: up-12345548
                  upgrade_path_instance_status: PENDING
                  upgrade_path_released_at: 2023-01-01T09:00:00Z
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: SCHEDULED
              maxReplicas: "1"
              minReplicas: "1"
              network_type: PUBLIC|INTERNAL
              productTierFeatures:
                LOGS:
                  auth:
                    password: px3c4d5f6g7h8i
                    username: abcd1234
                  enabled: true
                  websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                METRICS:
                  enabled: false
              region: us-east-1
              resourceID: r-abcd1234
              result_params:
                param1: value1
                param2: value2
              serverlessEnabled: true
              status: RUNNING
              subscriptionId: sub-abcd1234
              subscriptionLicense:
                certificateBase64: public-cert
                expirationDate: 2024-01-01T10:00:00Z
                licenseBase64: license-file
              subscriptionStatus: ACTIVE
              tierVersion: "1.0"
            defaultSubscription: true
            deploymentCellID: hc-12345678
            environmentId: se-12345678
            gcpProjectID: my-project
            input_params:
              param1: value1
              param2: value2
            instanceDebugCommands:
            - aws eks update-kubeconfig --name my-cluster --region us-west-2
            - kubectl -n instance-12345678 get pods
            integrationsStatus:
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            managedResourceType: PortsBasedProxy
            manualOverride:
              setAt: 2020-01-01T00:00:00Z
              setterUserId: user-12345678
              workflowId: wf-12345678
            organizationId: org-12345678
            organizationName: my-org
            portsRegistrationStatus:
              instance-123:
              - 30000
              - 30001
              instance-456:
              - 30002
              - 30003
            productTierId: pt-12345678
            productTierName: premium
            productTierType: OMNISTRATE_DEDICATED
            proxyType: PortsBasedProxy
            resourceVersionSummaries:
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            serviceEnvName: dev
            serviceId: s-12345678
            serviceLogoURL: Velit rerum aut.
            serviceModelId: sm-12345678
            serviceModelName: hosted
            serviceModelType: OMNISTRATE_HOSTED
            serviceName: mysql
            subscriptionId: sub-12345678
            subscriptionOwnerName: John Doe
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
            tierVersionReleasedAt: 2020-01-01T00:00:00Z
            tierVersionReleasedByUserId: user-12345678
            tierVersionReleasedByUserName: John Doe
            tierVersionStatus: Preferred|Active|Deprecated|Pending
          - adopted: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            cloudProvider: aws
            consumptionResourceInstanceResult:
              active: true
              autoscalingEnabled: true
              awsAccountID: "123456789012"
              azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
              backupStatus:
                backupPeriodInHours: 2
                backupRetentionInDays: 7
                earliestRestoreTime: 2021-09-01T00:00:00Z
                lastBackupTime: 2021-09-01T00:00:00Z
              cloud_provider: aws
              created_at: 2023-01-10T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              currentReplicas: "2"
              customNetworkDetail:
                cidr: 10.177.0.0/16
                id: n-12345678
                name: Prod us-east-1
              detailedNetworkTopology:
                r-abcd1234:
                  allowedIPRanges:
                  - 0.0.0.0/0
                  clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  clusterPorts:
                  - 3306
                  isJob: false
                  jobMetrics:
                  - additionalData:
                      exitCode: 0
                      status: Succeeded
                    endTime: 2023-01-01T10:05:00Z
                    metricType: cpu_core_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 120.5
                  - additionalData:
                      peakMemoryUsage: 512MB
                    endTime: 2023-01-01T10:05:00Z
                    metricType: memory_mb_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 2560
                  main: true
                  networkingType: PUBLIC
                  nodes:
                  - availabilityZone: us-east-2a
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    healthStatus: healthy
                    id: primary-0
                    ports:
                    - 3306
                    status: RUNNING
                  privateNetworkCIDR: 10.0.0.2/24
                  privateNetworkID: n-1234abcd
                  publiclyAccessible: true
                  resourceKey: primary
                  resourceName: Primary MySQL Instance
              externalPayerId: external-payer-id-1234
              gcpProjectID: my-project
              highAvailability: true
              id: instance-abcd1234
              instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
              kubernetesDashboardEndpoint:
                dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                deploymentCellID: hc-12345678
              last_modified_at: 2023-01-20T00:00:00Z
              maintenanceTasks:
                backups:
                - backup_id: bk-12345678
                upgrade_paths:
                - upgrade_path_id: up-9876543
                  upgrade_path_instance_status: PENDING
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: IN_PROGRESS
                - upgrade_path_id: up-12345548
                  upgrade_path_instance_status: PENDING
                  upgrade_path_released_at: 2023-01-01T09:00:00Z
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: SCHEDULED
              maxReplicas: "1"
              minReplicas: "1"
              network_type: PUBLIC|INTERNAL
              productTierFeatures:
                LOGS:
                  auth:
                    password: px3c4d5f6g7h8i
                    username: abcd1234
                  enabled: true
                  websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                METRICS:
                  enabled: false
              region: us-east-1
              resourceID: r-abcd1234
              result_params:
                param1: value1
                param2: value2
              serverlessEnabled: true
              status: RUNNING
              subscriptionId: sub-abcd1234
              subscriptionLicense:
                certificateBase64: public-cert
                expirationDate: 2024-01-01T10:00:00Z
                licenseBase64: license-file
              subscriptionStatus: ACTIVE
              tierVersion: "1.0"
            defaultSubscription: true
            deploymentCellID: hc-12345678
            environmentId: se-12345678
            gcpProjectID: my-project
            input_params:
              param1: value1
              param2: value2
            instanceDebugCommands:
            - aws eks update-kubeconfig --name my-cluster --region us-west-2
            - kubectl -n instance-12345678 get pods
            integrationsStatus:
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            managedResourceType: PortsBasedProxy
            manualOverride:
              setAt: 2020-01-01T00:00:00Z
              setterUserId: user-12345678
              workflowId: wf-12345678
            organizationId: org-12345678
            organizationName: my-org
            portsRegistrationStatus:
              instance-123:
              - 30000
              - 30001
              instance-456:
              - 30002
              - 30003
            productTierId: pt-12345678
            productTierName: premium
            productTierType: OMNISTRATE_DEDICATED
            proxyType: PortsBasedProxy
            resourceVersionSummaries:
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            serviceEnvName: dev
            serviceId: s-12345678
            serviceLogoURL: Velit rerum aut.
            serviceModelId: sm-12345678
            serviceModelName: hosted
            serviceModelType: OMNISTRATE_HOSTED
            serviceName: mysql
            subscriptionId: sub-12345678
            subscriptionOwnerName: John Doe
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
            tierVersionReleasedAt: 2020-01-01T00:00:00Z
            tierVersionReleasedByUserId: user-12345678
            tierVersionReleasedByUserName: John Doe
            tierVersionStatus: Preferred|Active|Deprecated|Pending
          - adopted: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            cloudProvider: aws
            consumptionResourceInstanceResult:
              active: true
              autoscalingEnabled: true
              awsAccountID: "123456789012"
              azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
              backupStatus:
                backupPeriodInHours: 2
                backupRetentionInDays: 7
                earliestRestoreTime: 2021-09-01T00:00:00Z
                lastBackupTime: 2021-09-01T00:00:00Z
              cloud_provider: aws
              created_at: 2023-01-10T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              currentReplicas: "2"
              customNetworkDetail:
                cidr: 10.177.0.0/16
                id: n-12345678
                name: Prod us-east-1
              detailedNetworkTopology:
                r-abcd1234:
                  allowedIPRanges:
                  - 0.0.0.0/0
                  clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  clusterPorts:
                  - 3306
                  isJob: false
                  jobMetrics:
                  - additionalData:
                      exitCode: 0
                      status: Succeeded
                    endTime: 2023-01-01T10:05:00Z
                    metricType: cpu_core_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 120.5
                  - additionalData:
                      peakMemoryUsage: 512MB
                    endTime: 2023-01-01T10:05:00Z
                    metricType: memory_mb_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 2560
                  main: true
                  networkingType: PUBLIC
                  nodes:
                  - availabilityZone: us-east-2a
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    healthStatus: healthy
                    id: primary-0
                    ports:
                    - 3306
                    status: RUNNING
                  privateNetworkCIDR: 10.0.0.2/24
                  privateNetworkID: n-1234abcd
                  publiclyAccessible: true
                  resourceKey: primary
                  resourceName: Primary MySQL Instance
              externalPayerId: external-payer-id-1234
              gcpProjectID: my-project
              highAvailability: true
              id: instance-abcd1234
              instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
              kubernetesDashboardEndpoint:
                dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                deploymentCellID: hc-12345678
              last_modified_at: 2023-01-20T00:00:00Z
              maintenanceTasks:
                backups:
                - backup_id: bk-12345678
                upgrade_paths:
                - upgrade_path_id: up-9876543
                  upgrade_path_instance_status: PENDING
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: IN_PROGRESS
                - upgrade_path_id: up-12345548
                  upgrade_path_instance_status: PENDING
                  upgrade_path_released_at: 2023-01-01T09:00:00Z
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: SCHEDULED
              maxReplicas: "1"
              minReplicas: "1"
              network_type: PUBLIC|INTERNAL
              productTierFeatures:
                LOGS:
                  auth:
                    password: px3c4d5f6g7h8i
                    username: abcd1234
                  enabled: true
                  websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                METRICS:
                  enabled: false
              region: us-east-1
              resourceID: r-abcd1234
              result_params:
                param1: value1
                param2: value2
              serverlessEnabled: true
              status: RUNNING
              subscriptionId: sub-abcd1234
              subscriptionLicense:
                certificateBase64: public-cert
                expirationDate: 2024-01-01T10:00:00Z
                licenseBase64: license-file
              subscriptionStatus: ACTIVE
              tierVersion: "1.0"
            defaultSubscription: true
            deploymentCellID: hc-12345678
            environmentId: se-12345678
            gcpProjectID: my-project
            input_params:
              param1: value1
              param2: value2
            instanceDebugCommands:
            - aws eks update-kubeconfig --name my-cluster --region us-west-2
            - kubectl -n instance-12345678 get pods
            integrationsStatus:
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            managedResourceType: PortsBasedProxy
            manualOverride:
              setAt: 2020-01-01T00:00:00Z
              setterUserId: user-12345678
              workflowId: wf-12345678
            organizationId: org-12345678
            organizationName: my-org
            portsRegistrationStatus:
              instance-123:
              - 30000
              - 30001
              instance-456:
              - 30002
              - 30003
            productTierId: pt-12345678
            productTierName: premium
            productTierType: OMNISTRATE_DEDICATED
            proxyType: PortsBasedProxy
            resourceVersionSummaries:
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            serviceEnvName: dev
            serviceId: s-12345678
            serviceLogoURL: Velit rerum aut.
            serviceModelId: sm-12345678
            serviceModelName: hosted
            serviceModelType: OMNISTRATE_HOSTED
            serviceName: mysql
            subscriptionId: sub-12345678
            subscriptionOwnerName: John Doe
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
            tierVersionReleasedAt: 2020-01-01T00:00:00Z
            tierVersionReleasedByUserId: user-12345678
            tierVersionReleasedByUserName: John Doe
            tierVersionStatus: Preferred|Active|Deprecated|Pending
          items:
            $ref: "#/components/schemas/ResourceInstance"
          type: array
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
      required:
      - instances
      type: object
    ListAllOrganizationsRequest:
      example:
        hasInvoice: true
        hasInvoiceFromDate: 2023-01-01T10:00:00Z
        hasInvoiceToDate: 2024-01-01T10:00:00Z
        hasInvoiceWithStatus: draft|open|paid|uncollectible|void
        token: wep
      properties:
        hasInvoice:
          description: Filter for organizations with invoices
          example: true
          type: boolean
        hasInvoiceFromDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        hasInvoiceToDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        hasInvoiceWithStatus:
          description: This describes the status of the invoice and is set by the
            payment provider
          example: draft|open|paid|uncollectible|void
          type: string
        token:
          description: JWT token used to perform authorization
          example: "1"
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListAllOrganizationsResult:
      example:
        nextPageToken: next-token
        organizations:
        - email: omnistrate-devops@examplecorp.com
          orgId: o-12345678
          orgName: Acme Corp
          orgUrl: omnistrate.com
        - email: omnistrate-devops@examplecorp.com
          orgId: o-12345678
          orgName: Acme Corp
          orgUrl: omnistrate.com
        - email: omnistrate-devops@examplecorp.com
          orgId: o-12345678
          orgName: Acme Corp
          orgUrl: omnistrate.com
      properties:
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        organizations:
          description: List of organizations.
          example:
          - email: omnistrate-devops@examplecorp.com
            orgId: o-12345678
            orgName: Acme Corp
            orgUrl: omnistrate.com
          - email: omnistrate-devops@examplecorp.com
            orgId: o-12345678
            orgName: Acme Corp
            orgUrl: omnistrate.com
          items:
            $ref: "#/components/schemas/Organization"
          type: array
      type: object
    ListAllResourceInstancesRequest:
      example:
        environmentType: DEV
        token: "51"
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        token:
          description: JWT token used to perform authorization
          example: p4
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListAllResourceInstancesResult:
      example:
        nextPageToken: next-token
        resourceInstances:
        - active: true
          autoscalingEnabled: true
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          backupStatus:
            backupPeriodInHours: 2
            backupRetentionInDays: 7
            earliestRestoreTime: 2021-09-01T00:00:00Z
            lastBackupTime: 2021-09-01T00:00:00Z
          cloud_provider: aws
          created_at: 2023-01-10T00:00:00Z
          createdByUserId: user-12345678
          createdByUserName: John Doe
          currentReplicas: "2"
          customNetworkDetail:
            cidr: 10.177.0.0/16
            id: n-12345678
            name: Prod us-east-1
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              isJob: false
              jobMetrics:
              - additionalData:
                  exitCode: 0
                  status: Succeeded
                endTime: 2023-01-01T10:05:00Z
                metricType: cpu_core_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 120.5
              - additionalData:
                  peakMemoryUsage: 512MB
                endTime: 2023-01-01T10:05:00Z
                metricType: memory_mb_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 2560
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: primary
              resourceName: Primary MySQL Instance
          externalPayerId: external-payer-id-1234
          gcpProjectID: my-project
          highAvailability: true
          id: instance-abcd1234
          instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          last_modified_at: 2023-01-20T00:00:00Z
          maintenanceTasks:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          maxReplicas: "1"
          minReplicas: "1"
          network_type: PUBLIC|INTERNAL
          productTierFeatures:
            LOGS:
              auth:
                password: px3c4d5f6g7h8i
                username: abcd1234
              enabled: true
              websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
            METRICS:
              enabled: false
          region: us-east-1
          resourceID: r-abcd1234
          result_params:
            param1: value1
            param2: value2
          serverlessEnabled: true
          status: RUNNING
          subscriptionId: sub-abcd1234
          subscriptionLicense:
            certificateBase64: public-cert
            expirationDate: 2024-01-01T10:00:00Z
            licenseBase64: license-file
          subscriptionStatus: ACTIVE
          tierVersion: "1.0"
        - active: true
          autoscalingEnabled: true
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          backupStatus:
            backupPeriodInHours: 2
            backupRetentionInDays: 7
            earliestRestoreTime: 2021-09-01T00:00:00Z
            lastBackupTime: 2021-09-01T00:00:00Z
          cloud_provider: aws
          created_at: 2023-01-10T00:00:00Z
          createdByUserId: user-12345678
          createdByUserName: John Doe
          currentReplicas: "2"
          customNetworkDetail:
            cidr: 10.177.0.0/16
            id: n-12345678
            name: Prod us-east-1
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              isJob: false
              jobMetrics:
              - additionalData:
                  exitCode: 0
                  status: Succeeded
                endTime: 2023-01-01T10:05:00Z
                metricType: cpu_core_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 120.5
              - additionalData:
                  peakMemoryUsage: 512MB
                endTime: 2023-01-01T10:05:00Z
                metricType: memory_mb_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 2560
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: primary
              resourceName: Primary MySQL Instance
          externalPayerId: external-payer-id-1234
          gcpProjectID: my-project
          highAvailability: true
          id: instance-abcd1234
          instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          last_modified_at: 2023-01-20T00:00:00Z
          maintenanceTasks:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          maxReplicas: "1"
          minReplicas: "1"
          network_type: PUBLIC|INTERNAL
          productTierFeatures:
            LOGS:
              auth:
                password: px3c4d5f6g7h8i
                username: abcd1234
              enabled: true
              websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
            METRICS:
              enabled: false
          region: us-east-1
          resourceID: r-abcd1234
          result_params:
            param1: value1
            param2: value2
          serverlessEnabled: true
          status: RUNNING
          subscriptionId: sub-abcd1234
          subscriptionLicense:
            certificateBase64: public-cert
            expirationDate: 2024-01-01T10:00:00Z
            licenseBase64: license-file
          subscriptionStatus: ACTIVE
          tierVersion: "1.0"
        - active: true
          autoscalingEnabled: true
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          backupStatus:
            backupPeriodInHours: 2
            backupRetentionInDays: 7
            earliestRestoreTime: 2021-09-01T00:00:00Z
            lastBackupTime: 2021-09-01T00:00:00Z
          cloud_provider: aws
          created_at: 2023-01-10T00:00:00Z
          createdByUserId: user-12345678
          createdByUserName: John Doe
          currentReplicas: "2"
          customNetworkDetail:
            cidr: 10.177.0.0/16
            id: n-12345678
            name: Prod us-east-1
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              isJob: false
              jobMetrics:
              - additionalData:
                  exitCode: 0
                  status: Succeeded
                endTime: 2023-01-01T10:05:00Z
                metricType: cpu_core_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 120.5
              - additionalData:
                  peakMemoryUsage: 512MB
                endTime: 2023-01-01T10:05:00Z
                metricType: memory_mb_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 2560
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: primary
              resourceName: Primary MySQL Instance
          externalPayerId: external-payer-id-1234
          gcpProjectID: my-project
          highAvailability: true
          id: instance-abcd1234
          instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          last_modified_at: 2023-01-20T00:00:00Z
          maintenanceTasks:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          maxReplicas: "1"
          minReplicas: "1"
          network_type: PUBLIC|INTERNAL
          productTierFeatures:
            LOGS:
              auth:
                password: px3c4d5f6g7h8i
                username: abcd1234
              enabled: true
              websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
            METRICS:
              enabled: false
          region: us-east-1
          resourceID: r-abcd1234
          result_params:
            param1: value1
            param2: value2
          serverlessEnabled: true
          status: RUNNING
          subscriptionId: sub-abcd1234
          subscriptionLicense:
            certificateBase64: public-cert
            expirationDate: 2024-01-01T10:00:00Z
            licenseBase64: license-file
          subscriptionStatus: ACTIVE
          tierVersion: "1.0"
      properties:
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        resourceInstances:
          description: The list of resource instances
          example:
          - active: true
            autoscalingEnabled: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            backupStatus:
              backupPeriodInHours: 2
              backupRetentionInDays: 7
              earliestRestoreTime: 2021-09-01T00:00:00Z
              lastBackupTime: 2021-09-01T00:00:00Z
            cloud_provider: aws
            created_at: 2023-01-10T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            currentReplicas: "2"
            customNetworkDetail:
              cidr: 10.177.0.0/16
              id: n-12345678
              name: Prod us-east-1
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                isJob: false
                jobMetrics:
                - additionalData:
                    exitCode: 0
                    status: Succeeded
                  endTime: 2023-01-01T10:05:00Z
                  metricType: cpu_core_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 120.5
                - additionalData:
                    peakMemoryUsage: 512MB
                  endTime: 2023-01-01T10:05:00Z
                  metricType: memory_mb_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 2560
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: primary
                resourceName: Primary MySQL Instance
            externalPayerId: external-payer-id-1234
            gcpProjectID: my-project
            highAvailability: true
            id: instance-abcd1234
            instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            last_modified_at: 2023-01-20T00:00:00Z
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            maxReplicas: "1"
            minReplicas: "1"
            network_type: PUBLIC|INTERNAL
            productTierFeatures:
              LOGS:
                auth:
                  password: px3c4d5f6g7h8i
                  username: abcd1234
                enabled: true
                websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
              METRICS:
                enabled: false
            region: us-east-1
            resourceID: r-abcd1234
            result_params:
              param1: value1
              param2: value2
            serverlessEnabled: true
            status: RUNNING
            subscriptionId: sub-abcd1234
            subscriptionLicense:
              certificateBase64: public-cert
              expirationDate: 2024-01-01T10:00:00Z
              licenseBase64: license-file
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
          - active: true
            autoscalingEnabled: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            backupStatus:
              backupPeriodInHours: 2
              backupRetentionInDays: 7
              earliestRestoreTime: 2021-09-01T00:00:00Z
              lastBackupTime: 2021-09-01T00:00:00Z
            cloud_provider: aws
            created_at: 2023-01-10T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            currentReplicas: "2"
            customNetworkDetail:
              cidr: 10.177.0.0/16
              id: n-12345678
              name: Prod us-east-1
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                isJob: false
                jobMetrics:
                - additionalData:
                    exitCode: 0
                    status: Succeeded
                  endTime: 2023-01-01T10:05:00Z
                  metricType: cpu_core_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 120.5
                - additionalData:
                    peakMemoryUsage: 512MB
                  endTime: 2023-01-01T10:05:00Z
                  metricType: memory_mb_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 2560
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: primary
                resourceName: Primary MySQL Instance
            externalPayerId: external-payer-id-1234
            gcpProjectID: my-project
            highAvailability: true
            id: instance-abcd1234
            instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            last_modified_at: 2023-01-20T00:00:00Z
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            maxReplicas: "1"
            minReplicas: "1"
            network_type: PUBLIC|INTERNAL
            productTierFeatures:
              LOGS:
                auth:
                  password: px3c4d5f6g7h8i
                  username: abcd1234
                enabled: true
                websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
              METRICS:
                enabled: false
            region: us-east-1
            resourceID: r-abcd1234
            result_params:
              param1: value1
              param2: value2
            serverlessEnabled: true
            status: RUNNING
            subscriptionId: sub-abcd1234
            subscriptionLicense:
              certificateBase64: public-cert
              expirationDate: 2024-01-01T10:00:00Z
              licenseBase64: license-file
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
          - active: true
            autoscalingEnabled: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            backupStatus:
              backupPeriodInHours: 2
              backupRetentionInDays: 7
              earliestRestoreTime: 2021-09-01T00:00:00Z
              lastBackupTime: 2021-09-01T00:00:00Z
            cloud_provider: aws
            created_at: 2023-01-10T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            currentReplicas: "2"
            customNetworkDetail:
              cidr: 10.177.0.0/16
              id: n-12345678
              name: Prod us-east-1
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                isJob: false
                jobMetrics:
                - additionalData:
                    exitCode: 0
                    status: Succeeded
                  endTime: 2023-01-01T10:05:00Z
                  metricType: cpu_core_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 120.5
                - additionalData:
                    peakMemoryUsage: 512MB
                  endTime: 2023-01-01T10:05:00Z
                  metricType: memory_mb_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 2560
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: primary
                resourceName: Primary MySQL Instance
            externalPayerId: external-payer-id-1234
            gcpProjectID: my-project
            highAvailability: true
            id: instance-abcd1234
            instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            last_modified_at: 2023-01-20T00:00:00Z
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            maxReplicas: "1"
            minReplicas: "1"
            network_type: PUBLIC|INTERNAL
            productTierFeatures:
              LOGS:
                auth:
                  password: px3c4d5f6g7h8i
                  username: abcd1234
                enabled: true
                websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
              METRICS:
                enabled: false
            region: us-east-1
            resourceID: r-abcd1234
            result_params:
              param1: value1
              param2: value2
            serverlessEnabled: true
            status: RUNNING
            subscriptionId: sub-abcd1234
            subscriptionLicense:
              certificateBase64: public-cert
              expirationDate: 2024-01-01T10:00:00Z
              licenseBase64: license-file
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
          items:
            $ref: "#/components/schemas/DescribeResourceInstanceResult"
          type: array
      required:
      - resourceInstances
      type: object
    ListAllSubscriptionUsersRequest:
      example:
        environmentType: DEV
        token: h
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        token:
          description: JWT token used to perform authorization
          example: qwy
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListAllSubscriptionUsersResult:
      example:
        subscriptionUsers:
        - email: abc@gmail.com
          name: John Doe
          roleType: reader
          userId: user-abcd1234
      properties:
        subscriptionUsers:
          description: The users associated with the corresponding subscription
          example:
          - email: abc@gmail.com
            name: John Doe
            roleType: reader
            userId: user-abcd1234
          items:
            $ref: "#/components/schemas/SubscriptionUsers"
          type: array
      required:
      - subscriptionUsers
      type: object
    ListAvailabilityZonesByRegionCodeRequest:
      example:
        cloudProviderName: aws
        regionCode: us-east-1
        token: 4x
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        regionCode:
          example: us-east-1
          type: string
        token:
          description: JWT token used to perform authorization
          example: f
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - regionCode
      - token
      type: object
    ListAvailabilityZonesByRegionCodeResult:
      example:
        ids:
        - az-12345678
        - az-87654321
        nextPageToken: next-token
      properties:
        ids:
          example:
          - az-12345678
          - az-87654321
          items:
            description: ID of an AZ
            example: Ipsa numquam mollitia magnam.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListAvailabilityZonesRequest:
      example:
        cloudProviderName: aws
        token: av5
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        token:
          description: JWT token used to perform authorization
          example: dit
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - token
      type: object
    ListAvailabilityZonesResult:
      example:
        ids:
        - az-12345678
        - az-87654321
        nextPageToken: next-token
      properties:
        ids:
          example:
          - az-12345678
          - az-87654321
          items:
            description: ID of an AZ
            example: Tenetur dolorem neque.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListCloudProvidersRequest:
      example:
        productTierId: pt-12345678
        serviceId: s-12345678
        serviceModelId: sm-12345678
        token: ih
      properties:
        productTierId:
          description: ID of a Product Tier
          example: Consequatur velit ut et et.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Autem quae vero autem accusantium nesciunt eaque.
          type: string
        token:
          description: JWT token used to perform authorization
          example: uc
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListCloudProvidersResult:
      example:
        ids:
        - infra-12345678
        - infra-87654321
        nextPageToken: next-token
      properties:
        ids:
          example:
          - infra-12345678
          - infra-87654321
          items:
            description: ID of an CloudProvider
            example: Eveniet nostrum id quibusdam laborum.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListCustomerOnboardingRequest:
      example:
        pendingOnly: true
        token: "0"
      properties:
        pendingOnly:
          description: Whether to return only pending onboardings.
          example: true
          type: boolean
        token:
          description: JWT token used to perform authorization
          example: w8
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListCustomerOnboardingResult:
      example:
        onboardings:
        - id: onboarding-1234567890
          isCompleted: true
          name: My Onboarding
          orgId: org-1234567890
          serviceId: service-1234567890
          stages:
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          userId: user-1234567890
        - id: onboarding-1234567890
          isCompleted: true
          name: My Onboarding
          orgId: org-1234567890
          serviceId: service-1234567890
          stages:
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          userId: user-1234567890
        - id: onboarding-1234567890
          isCompleted: true
          name: My Onboarding
          orgId: org-1234567890
          serviceId: service-1234567890
          stages:
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          userId: user-1234567890
        - id: onboarding-1234567890
          isCompleted: true
          name: My Onboarding
          orgId: org-1234567890
          serviceId: service-1234567890
          stages:
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          userId: user-1234567890
      properties:
        onboardings:
          description: List of customer onboardings.
          example:
          - id: onboarding-1234567890
            isCompleted: true
            name: My Onboarding
            orgId: org-1234567890
            serviceId: service-1234567890
            stages:
            - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
              status: NOT_STARTED|COMPLETE|SKIPPED
            - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
              status: NOT_STARTED|COMPLETE|SKIPPED
            - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
              status: NOT_STARTED|COMPLETE|SKIPPED
            userId: user-1234567890
          - id: onboarding-1234567890
            isCompleted: true
            name: My Onboarding
            orgId: org-1234567890
            serviceId: service-1234567890
            stages:
            - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
              status: NOT_STARTED|COMPLETE|SKIPPED
            - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
              status: NOT_STARTED|COMPLETE|SKIPPED
            - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
              status: NOT_STARTED|COMPLETE|SKIPPED
            userId: user-1234567890
          - id: onboarding-1234567890
            isCompleted: true
            name: My Onboarding
            orgId: org-1234567890
            serviceId: service-1234567890
            stages:
            - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
              status: NOT_STARTED|COMPLETE|SKIPPED
            - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
              status: NOT_STARTED|COMPLETE|SKIPPED
            - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
              status: NOT_STARTED|COMPLETE|SKIPPED
            userId: user-1234567890
          - id: onboarding-1234567890
            isCompleted: true
            name: My Onboarding
            orgId: org-1234567890
            serviceId: service-1234567890
            stages:
            - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
              status: NOT_STARTED|COMPLETE|SKIPPED
            - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
              status: NOT_STARTED|COMPLETE|SKIPPED
            - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
              status: NOT_STARTED|COMPLETE|SKIPPED
            userId: user-1234567890
          items:
            $ref: "#/components/schemas/CustomerOnboarding"
          type: array
      required:
      - onboardings
      type: object
    ListCustomerOnboardingStagesRequest:
      example:
        token: ea
      properties:
        token:
          description: JWT token used to perform authorization
          example: p
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListCustomerOnboardingStagesResult:
      example:
        stages:
        - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
          status: NOT_STARTED|COMPLETE|SKIPPED
        - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
          status: NOT_STARTED|COMPLETE|SKIPPED
      properties:
        stages:
          description: List of onboarding stages.
          example:
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          - name: ConfigureAccounts|BuildSaaS|LaunchSaaS
            status: NOT_STARTED|COMPLETE|SKIPPED
          items:
            $ref: "#/components/schemas/OnboardingStage"
          type: array
      required:
      - stages
      type: object
    ListEligibleInstancesPerUpgradeRequest:
      example:
        nextPageToken: token
        pageSize: 10
        productTierId: pt-12345678
        serviceId: s-12345678
        token: pmm
        upgradePathId: up-12345678
      properties:
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        productTierId:
          description: ID of a Product Tier
          example: Ex possimus magnam dolorem id ea odio.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "68"
          minLength: 1
          type: string
        upgradePathId:
          description: ID of an Upgrade Path
          example: Et provident reprehenderit qui.
          type: string
      required:
      - productTierId
      - serviceId
      - token
      - upgradePathId
      type: object
    ListEligibleInstancesPerUpgradeResult:
      example:
        instances:
        - cloudProviderName: aws
          cloudProviderRegion: us-east-1
          createdAt: 2020-01-01T00:00:00Z
          instanceId: instance-12345678
          lifecycleStatus: RUNNING
          orgName: Omnistrate
          resourceName: writer
          status: PAUSED
          updatedAt: 2020-01-01T00:00:00Z
          workflowID: submit-update-instance-12345678
        - cloudProviderName: aws
          cloudProviderRegion: eu-west-1
          createdAt: 2020-01-01T00:00:00Z
          instanceId: instance-abcdefgh
          lifecycleStatus: STOPPED
          orgName: Omnistrate
          resourceName: app
          status: FAILED
          updatedAt: 2020-01-01T00:00:00Z
          workflowID: submit-update-instance-abcdefgh
        nextPageToken: next-token
        productTierId: pt-12345678
        serviceId: s-12345678
        upgradePathId: up-12345678
      properties:
        instances:
          description: The list of instances that are in the upgrade path
          example:
          - cloudProviderName: aws
            cloudProviderRegion: us-east-1
            createdAt: 2020-01-01T00:00:00Z
            instanceId: instance-12345678
            lifecycleStatus: RUNNING
            orgName: Omnistrate
            resourceName: writer
            status: PAUSED
            updatedAt: 2020-01-01T00:00:00Z
            workflowID: submit-update-instance-12345678
          - cloudProviderName: aws
            cloudProviderRegion: eu-west-1
            createdAt: 2020-01-01T00:00:00Z
            instanceId: instance-abcdefgh
            lifecycleStatus: STOPPED
            orgName: Omnistrate
            resourceName: app
            status: FAILED
            updatedAt: 2020-01-01T00:00:00Z
            workflowID: submit-update-instance-abcdefgh
          items:
            $ref: "#/components/schemas/InstanceUpgrade"
          type: array
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Similique consequatur.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        upgradePathId:
          description: ID of an Upgrade Path
          example: Eaque rerum amet voluptatem ea consequatur.
          type: string
      required:
      - instances
      - productTierId
      - serviceId
      - upgradePathId
      type: object
    ListEndCustomerEvents:
      example:
        environmentType: DEV
        token: w8
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        token:
          description: JWT token used to perform authorization
          example: o
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListEndCustomerEventsResult:
      example:
        events:
        - eventID: e-123456
          eventPayload:
            eventType: CustomerSignUp
            token: "123456"
          eventType: InviteUser
          orgID: o-123456
          orgName: Acme Corp
          orgURL: https://acme.com
          priority: Critical
          time: 2023-01-10T00:00:00Z
          userEmail: user@example.com
          userID: user-123456
          userName: user
        - eventID: e-123456
          eventPayload:
            eventType: CustomerSignUp
            token: "123456"
          eventType: InviteUser
          orgID: o-123456
          orgName: Acme Corp
          orgURL: https://acme.com
          priority: Critical
          time: 2023-01-10T00:00:00Z
          userEmail: user@example.com
          userID: user-123456
          userName: user
        - eventID: e-123456
          eventPayload:
            eventType: CustomerSignUp
            token: "123456"
          eventType: InviteUser
          orgID: o-123456
          orgName: Acme Corp
          orgURL: https://acme.com
          priority: Critical
          time: 2023-01-10T00:00:00Z
          userEmail: user@example.com
          userID: user-123456
          userName: user
        - eventID: e-123456
          eventPayload:
            eventType: CustomerSignUp
            token: "123456"
          eventType: InviteUser
          orgID: o-123456
          orgName: Acme Corp
          orgURL: https://acme.com
          priority: Critical
          time: 2023-01-10T00:00:00Z
          userEmail: user@example.com
          userID: user-123456
          userName: user
      properties:
        events:
          description: List of events
          example:
          - eventID: e-123456
            eventPayload:
              eventType: CustomerSignUp
              token: "123456"
            eventType: InviteUser
            orgID: o-123456
            orgName: Acme Corp
            orgURL: https://acme.com
            priority: Critical
            time: 2023-01-10T00:00:00Z
            userEmail: user@example.com
            userID: user-123456
            userName: user
          - eventID: e-123456
            eventPayload:
              eventType: CustomerSignUp
              token: "123456"
            eventType: InviteUser
            orgID: o-123456
            orgName: Acme Corp
            orgURL: https://acme.com
            priority: Critical
            time: 2023-01-10T00:00:00Z
            userEmail: user@example.com
            userID: user-123456
            userName: user
          - eventID: e-123456
            eventPayload:
              eventType: CustomerSignUp
              token: "123456"
            eventType: InviteUser
            orgID: o-123456
            orgName: Acme Corp
            orgURL: https://acme.com
            priority: Critical
            time: 2023-01-10T00:00:00Z
            userEmail: user@example.com
            userID: user-123456
            userName: user
          - eventID: e-123456
            eventPayload:
              eventType: CustomerSignUp
              token: "123456"
            eventType: InviteUser
            orgID: o-123456
            orgName: Acme Corp
            orgURL: https://acme.com
            priority: Critical
            time: 2023-01-10T00:00:00Z
            userEmail: user@example.com
            userID: user-123456
            userName: user
          items:
            $ref: "#/components/schemas/EndCustomerEvent"
          type: array
      required:
      - events
      type: object
    ListFleetResourceInstancesRequest:
      example:
        ExcludeDetail: false
        Filter: onlyCloudAccounts
        ProductTierId: Et iusto eos.
        ProductTierVersion: In veritatis.
        SubscriptionId: Ab veritatis rerum quam voluptates.
        environmentId: se-12345678
        nextPageToken: token
        pageSize: 10
        serviceId: s-12345678
        token: 5a
      properties:
        ExcludeDetail:
          default: false
          description: Whether to exclude detailed information about the resource
            instances
          example: false
          type: boolean
        Filter:
          description: Filter to list resources.
          enum:
          - onlyCloudAccounts
          - excludeCloudAccounts
          example: onlyCloudAccounts
          type: string
        ProductTierId:
          description: ID of a Product Tier
          example: Consequatur quia enim aut.
          type: string
        ProductTierVersion:
          description: "The product tier version of the infra config to describe.\
            \ If not specified, the latest version is described."
          example: Dolor qui repudiandae a voluptatum illo.
          type: string
        SubscriptionId:
          description: ID of a Subscription
          example: Ducimus nobis blanditiis explicabo consequatur error quia.
          type: string
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 6f
          minLength: 1
          type: string
      required:
      - environmentId
      - serviceId
      - token
      type: object
    ListFleetResourceInstancesResultInternal:
      example:
        environmentId: se-12345678
        nextPageToken: next-token
        resourceInstances:
        - adopted: true
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          cloudProvider: aws
          consumptionResourceInstanceResult:
            active: true
            autoscalingEnabled: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            backupStatus:
              backupPeriodInHours: 2
              backupRetentionInDays: 7
              earliestRestoreTime: 2021-09-01T00:00:00Z
              lastBackupTime: 2021-09-01T00:00:00Z
            cloud_provider: aws
            created_at: 2023-01-10T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            currentReplicas: "2"
            customNetworkDetail:
              cidr: 10.177.0.0/16
              id: n-12345678
              name: Prod us-east-1
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                isJob: false
                jobMetrics:
                - additionalData:
                    exitCode: 0
                    status: Succeeded
                  endTime: 2023-01-01T10:05:00Z
                  metricType: cpu_core_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 120.5
                - additionalData:
                    peakMemoryUsage: 512MB
                  endTime: 2023-01-01T10:05:00Z
                  metricType: memory_mb_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 2560
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: primary
                resourceName: Primary MySQL Instance
            externalPayerId: external-payer-id-1234
            gcpProjectID: my-project
            highAvailability: true
            id: instance-abcd1234
            instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            last_modified_at: 2023-01-20T00:00:00Z
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            maxReplicas: "1"
            minReplicas: "1"
            network_type: PUBLIC|INTERNAL
            productTierFeatures:
              LOGS:
                auth:
                  password: px3c4d5f6g7h8i
                  username: abcd1234
                enabled: true
                websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
              METRICS:
                enabled: false
            region: us-east-1
            resourceID: r-abcd1234
            result_params:
              param1: value1
              param2: value2
            serverlessEnabled: true
            status: RUNNING
            subscriptionId: sub-abcd1234
            subscriptionLicense:
              certificateBase64: public-cert
              expirationDate: 2024-01-01T10:00:00Z
              licenseBase64: license-file
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
          defaultSubscription: true
          deploymentCellID: hc-12345678
          environmentId: se-12345678
          gcpProjectID: my-project
          input_params:
            param1: value1
            param2: value2
          instanceDebugCommands:
          - aws eks update-kubeconfig --name my-cluster --region us-west-2
          - kubectl -n instance-12345678 get pods
          integrationsStatus:
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          maintenanceTasks:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          managedResourceType: PortsBasedProxy
          manualOverride:
            setAt: 2020-01-01T00:00:00Z
            setterUserId: user-12345678
            workflowId: wf-12345678
          organizationId: org-12345678
          organizationName: my-org
          portsRegistrationStatus:
            instance-123:
            - 30000
            - 30001
            instance-456:
            - 30002
            - 30003
          productTierId: pt-12345678
          productTierName: premium
          productTierType: OMNISTRATE_DEDICATED
          proxyType: PortsBasedProxy
          resourceVersionSummaries:
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          serviceEnvName: dev
          serviceId: s-12345678
          serviceLogoURL: Velit rerum aut.
          serviceModelId: sm-12345678
          serviceModelName: hosted
          serviceModelType: OMNISTRATE_HOSTED
          serviceName: mysql
          subscriptionId: sub-12345678
          subscriptionOwnerName: John Doe
          subscriptionStatus: ACTIVE
          tierVersion: "1.0"
          tierVersionReleasedAt: 2020-01-01T00:00:00Z
          tierVersionReleasedByUserId: user-12345678
          tierVersionReleasedByUserName: John Doe
          tierVersionStatus: Preferred|Active|Deprecated|Pending
        - adopted: true
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          cloudProvider: aws
          consumptionResourceInstanceResult:
            active: true
            autoscalingEnabled: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            backupStatus:
              backupPeriodInHours: 2
              backupRetentionInDays: 7
              earliestRestoreTime: 2021-09-01T00:00:00Z
              lastBackupTime: 2021-09-01T00:00:00Z
            cloud_provider: aws
            created_at: 2023-01-10T00:00:00Z
            createdByUserId: user-12345678
            createdByUserName: John Doe
            currentReplicas: "2"
            customNetworkDetail:
              cidr: 10.177.0.0/16
              id: n-12345678
              name: Prod us-east-1
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                isJob: false
                jobMetrics:
                - additionalData:
                    exitCode: 0
                    status: Succeeded
                  endTime: 2023-01-01T10:05:00Z
                  metricType: cpu_core_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 120.5
                - additionalData:
                    peakMemoryUsage: 512MB
                  endTime: 2023-01-01T10:05:00Z
                  metricType: memory_mb_seconds
                  startTime: 2023-01-01T10:00:00Z
                  value: 2560
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: primary
                resourceName: Primary MySQL Instance
            externalPayerId: external-payer-id-1234
            gcpProjectID: my-project
            highAvailability: true
            id: instance-abcd1234
            instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            last_modified_at: 2023-01-20T00:00:00Z
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            maxReplicas: "1"
            minReplicas: "1"
            network_type: PUBLIC|INTERNAL
            productTierFeatures:
              LOGS:
                auth:
                  password: px3c4d5f6g7h8i
                  username: abcd1234
                enabled: true
                websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
              METRICS:
                enabled: false
            region: us-east-1
            resourceID: r-abcd1234
            result_params:
              param1: value1
              param2: value2
            serverlessEnabled: true
            status: RUNNING
            subscriptionId: sub-abcd1234
            subscriptionLicense:
              certificateBase64: public-cert
              expirationDate: 2024-01-01T10:00:00Z
              licenseBase64: license-file
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
          defaultSubscription: true
          deploymentCellID: hc-12345678
          environmentId: se-12345678
          gcpProjectID: my-project
          input_params:
            param1: value1
            param2: value2
          instanceDebugCommands:
          - aws eks update-kubeconfig --name my-cluster --region us-west-2
          - kubectl -n instance-12345678 get pods
          integrationsStatus:
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          maintenanceTasks:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          managedResourceType: PortsBasedProxy
          manualOverride:
            setAt: 2020-01-01T00:00:00Z
            setterUserId: user-12345678
            workflowId: wf-12345678
          organizationId: org-12345678
          organizationName: my-org
          portsRegistrationStatus:
            instance-123:
            - 30000
            - 30001
            instance-456:
            - 30002
            - 30003
          productTierId: pt-12345678
          productTierName: premium
          productTierType: OMNISTRATE_DEDICATED
          proxyType: PortsBasedProxy
          resourceVersionSummaries:
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          serviceEnvName: dev
          serviceId: s-12345678
          serviceLogoURL: Velit rerum aut.
          serviceModelId: sm-12345678
          serviceModelName: hosted
          serviceModelType: OMNISTRATE_HOSTED
          serviceName: mysql
          subscriptionId: sub-12345678
          subscriptionOwnerName: John Doe
          subscriptionStatus: ACTIVE
          tierVersion: "1.0"
          tierVersionReleasedAt: 2020-01-01T00:00:00Z
          tierVersionReleasedByUserId: user-12345678
          tierVersionReleasedByUserName: John Doe
          tierVersionStatus: Preferred|Active|Deprecated|Pending
        serviceId: s-12345678
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        resourceInstances:
          description: The list of resource instances.
          example:
          - adopted: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            cloudProvider: aws
            consumptionResourceInstanceResult:
              active: true
              autoscalingEnabled: true
              awsAccountID: "123456789012"
              azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
              backupStatus:
                backupPeriodInHours: 2
                backupRetentionInDays: 7
                earliestRestoreTime: 2021-09-01T00:00:00Z
                lastBackupTime: 2021-09-01T00:00:00Z
              cloud_provider: aws
              created_at: 2023-01-10T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              currentReplicas: "2"
              customNetworkDetail:
                cidr: 10.177.0.0/16
                id: n-12345678
                name: Prod us-east-1
              detailedNetworkTopology:
                r-abcd1234:
                  allowedIPRanges:
                  - 0.0.0.0/0
                  clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  clusterPorts:
                  - 3306
                  isJob: false
                  jobMetrics:
                  - additionalData:
                      exitCode: 0
                      status: Succeeded
                    endTime: 2023-01-01T10:05:00Z
                    metricType: cpu_core_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 120.5
                  - additionalData:
                      peakMemoryUsage: 512MB
                    endTime: 2023-01-01T10:05:00Z
                    metricType: memory_mb_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 2560
                  main: true
                  networkingType: PUBLIC
                  nodes:
                  - availabilityZone: us-east-2a
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    healthStatus: healthy
                    id: primary-0
                    ports:
                    - 3306
                    status: RUNNING
                  privateNetworkCIDR: 10.0.0.2/24
                  privateNetworkID: n-1234abcd
                  publiclyAccessible: true
                  resourceKey: primary
                  resourceName: Primary MySQL Instance
              externalPayerId: external-payer-id-1234
              gcpProjectID: my-project
              highAvailability: true
              id: instance-abcd1234
              instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
              kubernetesDashboardEndpoint:
                dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                deploymentCellID: hc-12345678
              last_modified_at: 2023-01-20T00:00:00Z
              maintenanceTasks:
                backups:
                - backup_id: bk-12345678
                upgrade_paths:
                - upgrade_path_id: up-9876543
                  upgrade_path_instance_status: PENDING
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: IN_PROGRESS
                - upgrade_path_id: up-12345548
                  upgrade_path_instance_status: PENDING
                  upgrade_path_released_at: 2023-01-01T09:00:00Z
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: SCHEDULED
              maxReplicas: "1"
              minReplicas: "1"
              network_type: PUBLIC|INTERNAL
              productTierFeatures:
                LOGS:
                  auth:
                    password: px3c4d5f6g7h8i
                    username: abcd1234
                  enabled: true
                  websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                METRICS:
                  enabled: false
              region: us-east-1
              resourceID: r-abcd1234
              result_params:
                param1: value1
                param2: value2
              serverlessEnabled: true
              status: RUNNING
              subscriptionId: sub-abcd1234
              subscriptionLicense:
                certificateBase64: public-cert
                expirationDate: 2024-01-01T10:00:00Z
                licenseBase64: license-file
              subscriptionStatus: ACTIVE
              tierVersion: "1.0"
            defaultSubscription: true
            deploymentCellID: hc-12345678
            environmentId: se-12345678
            gcpProjectID: my-project
            input_params:
              param1: value1
              param2: value2
            instanceDebugCommands:
            - aws eks update-kubeconfig --name my-cluster --region us-west-2
            - kubectl -n instance-12345678 get pods
            integrationsStatus:
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            managedResourceType: PortsBasedProxy
            manualOverride:
              setAt: 2020-01-01T00:00:00Z
              setterUserId: user-12345678
              workflowId: wf-12345678
            organizationId: org-12345678
            organizationName: my-org
            portsRegistrationStatus:
              instance-123:
              - 30000
              - 30001
              instance-456:
              - 30002
              - 30003
            productTierId: pt-12345678
            productTierName: premium
            productTierType: OMNISTRATE_DEDICATED
            proxyType: PortsBasedProxy
            resourceVersionSummaries:
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            serviceEnvName: dev
            serviceId: s-12345678
            serviceLogoURL: Velit rerum aut.
            serviceModelId: sm-12345678
            serviceModelName: hosted
            serviceModelType: OMNISTRATE_HOSTED
            serviceName: mysql
            subscriptionId: sub-12345678
            subscriptionOwnerName: John Doe
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
            tierVersionReleasedAt: 2020-01-01T00:00:00Z
            tierVersionReleasedByUserId: user-12345678
            tierVersionReleasedByUserName: John Doe
            tierVersionStatus: Preferred|Active|Deprecated|Pending
          - adopted: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            cloudProvider: aws
            consumptionResourceInstanceResult:
              active: true
              autoscalingEnabled: true
              awsAccountID: "123456789012"
              azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
              backupStatus:
                backupPeriodInHours: 2
                backupRetentionInDays: 7
                earliestRestoreTime: 2021-09-01T00:00:00Z
                lastBackupTime: 2021-09-01T00:00:00Z
              cloud_provider: aws
              created_at: 2023-01-10T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              currentReplicas: "2"
              customNetworkDetail:
                cidr: 10.177.0.0/16
                id: n-12345678
                name: Prod us-east-1
              detailedNetworkTopology:
                r-abcd1234:
                  allowedIPRanges:
                  - 0.0.0.0/0
                  clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  clusterPorts:
                  - 3306
                  isJob: false
                  jobMetrics:
                  - additionalData:
                      exitCode: 0
                      status: Succeeded
                    endTime: 2023-01-01T10:05:00Z
                    metricType: cpu_core_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 120.5
                  - additionalData:
                      peakMemoryUsage: 512MB
                    endTime: 2023-01-01T10:05:00Z
                    metricType: memory_mb_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 2560
                  main: true
                  networkingType: PUBLIC
                  nodes:
                  - availabilityZone: us-east-2a
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    healthStatus: healthy
                    id: primary-0
                    ports:
                    - 3306
                    status: RUNNING
                  privateNetworkCIDR: 10.0.0.2/24
                  privateNetworkID: n-1234abcd
                  publiclyAccessible: true
                  resourceKey: primary
                  resourceName: Primary MySQL Instance
              externalPayerId: external-payer-id-1234
              gcpProjectID: my-project
              highAvailability: true
              id: instance-abcd1234
              instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
              kubernetesDashboardEndpoint:
                dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                deploymentCellID: hc-12345678
              last_modified_at: 2023-01-20T00:00:00Z
              maintenanceTasks:
                backups:
                - backup_id: bk-12345678
                upgrade_paths:
                - upgrade_path_id: up-9876543
                  upgrade_path_instance_status: PENDING
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: IN_PROGRESS
                - upgrade_path_id: up-12345548
                  upgrade_path_instance_status: PENDING
                  upgrade_path_released_at: 2023-01-01T09:00:00Z
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: SCHEDULED
              maxReplicas: "1"
              minReplicas: "1"
              network_type: PUBLIC|INTERNAL
              productTierFeatures:
                LOGS:
                  auth:
                    password: px3c4d5f6g7h8i
                    username: abcd1234
                  enabled: true
                  websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                METRICS:
                  enabled: false
              region: us-east-1
              resourceID: r-abcd1234
              result_params:
                param1: value1
                param2: value2
              serverlessEnabled: true
              status: RUNNING
              subscriptionId: sub-abcd1234
              subscriptionLicense:
                certificateBase64: public-cert
                expirationDate: 2024-01-01T10:00:00Z
                licenseBase64: license-file
              subscriptionStatus: ACTIVE
              tierVersion: "1.0"
            defaultSubscription: true
            deploymentCellID: hc-12345678
            environmentId: se-12345678
            gcpProjectID: my-project
            input_params:
              param1: value1
              param2: value2
            instanceDebugCommands:
            - aws eks update-kubeconfig --name my-cluster --region us-west-2
            - kubectl -n instance-12345678 get pods
            integrationsStatus:
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            managedResourceType: PortsBasedProxy
            manualOverride:
              setAt: 2020-01-01T00:00:00Z
              setterUserId: user-12345678
              workflowId: wf-12345678
            organizationId: org-12345678
            organizationName: my-org
            portsRegistrationStatus:
              instance-123:
              - 30000
              - 30001
              instance-456:
              - 30002
              - 30003
            productTierId: pt-12345678
            productTierName: premium
            productTierType: OMNISTRATE_DEDICATED
            proxyType: PortsBasedProxy
            resourceVersionSummaries:
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            serviceEnvName: dev
            serviceId: s-12345678
            serviceLogoURL: Velit rerum aut.
            serviceModelId: sm-12345678
            serviceModelName: hosted
            serviceModelType: OMNISTRATE_HOSTED
            serviceName: mysql
            subscriptionId: sub-12345678
            subscriptionOwnerName: John Doe
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
            tierVersionReleasedAt: 2020-01-01T00:00:00Z
            tierVersionReleasedByUserId: user-12345678
            tierVersionReleasedByUserName: John Doe
            tierVersionStatus: Preferred|Active|Deprecated|Pending
          - adopted: true
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            cloudProvider: aws
            consumptionResourceInstanceResult:
              active: true
              autoscalingEnabled: true
              awsAccountID: "123456789012"
              azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
              backupStatus:
                backupPeriodInHours: 2
                backupRetentionInDays: 7
                earliestRestoreTime: 2021-09-01T00:00:00Z
                lastBackupTime: 2021-09-01T00:00:00Z
              cloud_provider: aws
              created_at: 2023-01-10T00:00:00Z
              createdByUserId: user-12345678
              createdByUserName: John Doe
              currentReplicas: "2"
              customNetworkDetail:
                cidr: 10.177.0.0/16
                id: n-12345678
                name: Prod us-east-1
              detailedNetworkTopology:
                r-abcd1234:
                  allowedIPRanges:
                  - 0.0.0.0/0
                  clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  clusterPorts:
                  - 3306
                  isJob: false
                  jobMetrics:
                  - additionalData:
                      exitCode: 0
                      status: Succeeded
                    endTime: 2023-01-01T10:05:00Z
                    metricType: cpu_core_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 120.5
                  - additionalData:
                      peakMemoryUsage: 512MB
                    endTime: 2023-01-01T10:05:00Z
                    metricType: memory_mb_seconds
                    startTime: 2023-01-01T10:00:00Z
                    value: 2560
                  main: true
                  networkingType: PUBLIC
                  nodes:
                  - availabilityZone: us-east-2a
                    endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                    healthStatus: healthy
                    id: primary-0
                    ports:
                    - 3306
                    status: RUNNING
                  privateNetworkCIDR: 10.0.0.2/24
                  privateNetworkID: n-1234abcd
                  publiclyAccessible: true
                  resourceKey: primary
                  resourceName: Primary MySQL Instance
              externalPayerId: external-payer-id-1234
              gcpProjectID: my-project
              highAvailability: true
              id: instance-abcd1234
              instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
              kubernetesDashboardEndpoint:
                dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
                deploymentCellID: hc-12345678
              last_modified_at: 2023-01-20T00:00:00Z
              maintenanceTasks:
                backups:
                - backup_id: bk-12345678
                upgrade_paths:
                - upgrade_path_id: up-9876543
                  upgrade_path_instance_status: PENDING
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: IN_PROGRESS
                - upgrade_path_id: up-12345548
                  upgrade_path_instance_status: PENDING
                  upgrade_path_released_at: 2023-01-01T09:00:00Z
                  upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                  upgrade_path_status: SCHEDULED
              maxReplicas: "1"
              minReplicas: "1"
              network_type: PUBLIC|INTERNAL
              productTierFeatures:
                LOGS:
                  auth:
                    password: px3c4d5f6g7h8i
                    username: abcd1234
                  enabled: true
                  websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
                METRICS:
                  enabled: false
              region: us-east-1
              resourceID: r-abcd1234
              result_params:
                param1: value1
                param2: value2
              serverlessEnabled: true
              status: RUNNING
              subscriptionId: sub-abcd1234
              subscriptionLicense:
                certificateBase64: public-cert
                expirationDate: 2024-01-01T10:00:00Z
                licenseBase64: license-file
              subscriptionStatus: ACTIVE
              tierVersion: "1.0"
            defaultSubscription: true
            deploymentCellID: hc-12345678
            environmentId: se-12345678
            gcpProjectID: my-project
            input_params:
              param1: value1
              param2: value2
            instanceDebugCommands:
            - aws eks update-kubeconfig --name my-cluster --region us-west-2
            - kubectl -n instance-12345678 get pods
            integrationsStatus:
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
              configuration:
                provider: native
              healthStatus: UNHEALTHY
              integrationType: LOGS
              message: missing exporter secret configuration for gcp
              scope: INTERNAL
            maintenanceTasks:
              backups:
              - backup_id: bk-12345678
              upgrade_paths:
              - upgrade_path_id: up-9876543
                upgrade_path_instance_status: PENDING
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: IN_PROGRESS
              - upgrade_path_id: up-12345548
                upgrade_path_instance_status: PENDING
                upgrade_path_released_at: 2023-01-01T09:00:00Z
                upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
                upgrade_path_status: SCHEDULED
            managedResourceType: PortsBasedProxy
            manualOverride:
              setAt: 2020-01-01T00:00:00Z
              setterUserId: user-12345678
              workflowId: wf-12345678
            organizationId: org-12345678
            organizationName: my-org
            portsRegistrationStatus:
              instance-123:
              - 30000
              - 30001
              instance-456:
              - 30002
              - 30003
            productTierId: pt-12345678
            productTierName: premium
            productTierType: OMNISTRATE_DEDICATED
            proxyType: PortsBasedProxy
            resourceVersionSummaries:
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            - capabilities:
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              - capability: SERVERLESS
                configuration:
                  EnableAutoStop: true
                  MinimumNodesInPool: 5
                  PortsMappingProxyConfig:
                    MaxNumberOfClustersPerProxyInstance: 50
                    NumberOfPortsPerCluster: 4
                  ProxyId: r-123456
                  ReferenceProxyKey: resource-proxy
                  TargetPort: 5432
              externalResource: true
              genericResourceDeploymentConfiguration:
                image: nginx:latest
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                podStatus:
                  pod1: Running
                  pod2: Pending
                podToHostMapping:
                  pod1: node1
                  pod2: node2
              helmDeploymentConfiguration:
                chartName: nginx
                chartVersion: 1.2.3
                podEvents:
                  pod1:
                  - FirstTimestamp: 2025-10-01T12:00:00Z
                    LastTimestamp: 2025-10-01T12:05:00Z
                    Message: Pod scheduled successfully
                    NumberOfOccurrences: 3
                    Reason: Scheduled
                  pod2:
                  - FirstTimestamp: 2025-10-01T12:06:00Z
                    LastTimestamp: 2025-10-01T12:06:00Z
                    Message: Insufficient resources
                    NumberOfOccurrences: 1
                    Reason: FailedScheduling
                podStatus:
                  pod1: Running
                  pod2: Pending
                  pod3: Failed
                podToHostMapping:
                  pod1: node1
                  pod2: node2
                  pod3: node1
                releaseName: my-nginx-release
                releaseNamespace: default
                releaseStatus: deployed
                repositoryURL: https://charts.example.com
                runtimeConfiguration:
                  namespace: default
                  timeout: 300s
                  waitForJobs: true
                  waitForJobsTimeout: 10m
                values:
                  mysql:
                    image:
                      repository: mysql
                      tag: "8.0"
                    replicaCount: 3
                    service:
                      type: LoadBalancer
              kustomizeDeploymentConfiguration:
                BasePath: /path/to/kustomization
                DeploymentErrors: Failed to apply Kustomize overlays
                Overlays:
                  overlay1: /path/to/overlay1
                  overlay2: /path/to/overlay2
              latestVersion: "2.0"
              resourceId: r-12345678
              resourceName: asserts-server
              terraformDeploymentConfiguration:
                configurationFiles:
                  main.tf: "resource \"aws_instance\" \"example\" { ... }"
                  variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                    \ }"
                deploymentErrors: Failed to initialize Terraform provider
              version: "1.0"
            serviceEnvName: dev
            serviceId: s-12345678
            serviceLogoURL: Velit rerum aut.
            serviceModelId: sm-12345678
            serviceModelName: hosted
            serviceModelType: OMNISTRATE_HOSTED
            serviceName: mysql
            subscriptionId: sub-12345678
            subscriptionOwnerName: John Doe
            subscriptionStatus: ACTIVE
            tierVersion: "1.0"
            tierVersionReleasedAt: 2020-01-01T00:00:00Z
            tierVersionReleasedByUserId: user-12345678
            tierVersionReleasedByUserName: John Doe
            tierVersionStatus: Preferred|Active|Deprecated|Pending
          items:
            $ref: "#/components/schemas/ResourceInstance"
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - resourceInstances
      type: object
    ListHelmPackageInstallationsRequest:
      example:
        hostClusterID: hc-12345678
        token: "n"
      properties:
        hostClusterID:
          description: ID of a Host Cluster
          example: Aut pariatur.
          type: string
        token:
          description: JWT token used to perform authorization
          example: "2"
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListHelmPackageInstallationsResult:
      example:
        helmPackageInstallations:
        - helmPackage:
            chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            layeredChartValues:
            - name: my-layer
              scope:
                '{{ $sys.cloudProviderName }}': aws
              values:
                global:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                        - matchExpressions:
                          - key: omnistrate.com/managed-by
                            operator: In
                            values:
                            - omnistrate
              valuesFile:
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                path: helm/values/production.yaml
            - name: my-layer
              scope:
                '{{ $sys.cloudProviderName }}': aws
              values:
                global:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                        - matchExpressions:
                          - key: omnistrate.com/managed-by
                            operator: In
                            values:
                            - omnistrate
              valuesFile:
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                path: helm/values/production.yaml
            - name: my-layer
              scope:
                '{{ $sys.cloudProviderName }}': aws
              values:
                global:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                        - matchExpressions:
                          - key: omnistrate.com/managed-by
                            operator: In
                            values:
                            - omnistrate
              valuesFile:
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                path: helm/values/production.yaml
            namespace: default
          hostClusterID: hc-12345678
          status: unknown|deployed|uninstalled|superseded|failed|uninstalling|pending-install|pending-upgrade|pending-rollback
        - helmPackage:
            chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            layeredChartValues:
            - name: my-layer
              scope:
                '{{ $sys.cloudProviderName }}': aws
              values:
                global:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                        - matchExpressions:
                          - key: omnistrate.com/managed-by
                            operator: In
                            values:
                            - omnistrate
              valuesFile:
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                path: helm/values/production.yaml
            - name: my-layer
              scope:
                '{{ $sys.cloudProviderName }}': aws
              values:
                global:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                        - matchExpressions:
                          - key: omnistrate.com/managed-by
                            operator: In
                            values:
                            - omnistrate
              valuesFile:
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                path: helm/values/production.yaml
            - name: my-layer
              scope:
                '{{ $sys.cloudProviderName }}': aws
              values:
                global:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                        - matchExpressions:
                          - key: omnistrate.com/managed-by
                            operator: In
                            values:
                            - omnistrate
              valuesFile:
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                path: helm/values/production.yaml
            namespace: default
          hostClusterID: hc-12345678
          status: unknown|deployed|uninstalled|superseded|failed|uninstalling|pending-install|pending-upgrade|pending-rollback
        - helmPackage:
            chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            layeredChartValues:
            - name: my-layer
              scope:
                '{{ $sys.cloudProviderName }}': aws
              values:
                global:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                        - matchExpressions:
                          - key: omnistrate.com/managed-by
                            operator: In
                            values:
                            - omnistrate
              valuesFile:
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                path: helm/values/production.yaml
            - name: my-layer
              scope:
                '{{ $sys.cloudProviderName }}': aws
              values:
                global:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                        - matchExpressions:
                          - key: omnistrate.com/managed-by
                            operator: In
                            values:
                            - omnistrate
              valuesFile:
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                path: helm/values/production.yaml
            - name: my-layer
              scope:
                '{{ $sys.cloudProviderName }}': aws
              values:
                global:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                        - matchExpressions:
                          - key: omnistrate.com/managed-by
                            operator: In
                            values:
                            - omnistrate
              valuesFile:
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                path: helm/values/production.yaml
            namespace: default
          hostClusterID: hc-12345678
          status: unknown|deployed|uninstalled|superseded|failed|uninstalling|pending-install|pending-upgrade|pending-rollback
        - helmPackage:
            chartName: my-chart
            chartRepoName: my-repo
            chartRepoUrl: https://my-repo.com
            chartValues:
              key1: value1
              key2: 3
              key3:
                key4: value4
            chartVersion: 1.0.0
            layeredChartValues:
            - name: my-layer
              scope:
                '{{ $sys.cloudProviderName }}': aws
              values:
                global:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                        - matchExpressions:
                          - key: omnistrate.com/managed-by
                            operator: In
                            values:
                            - omnistrate
              valuesFile:
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                path: helm/values/production.yaml
            - name: my-layer
              scope:
                '{{ $sys.cloudProviderName }}': aws
              values:
                global:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                        - matchExpressions:
                          - key: omnistrate.com/managed-by
                            operator: In
                            values:
                            - omnistrate
              valuesFile:
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                path: helm/values/production.yaml
            - name: my-layer
              scope:
                '{{ $sys.cloudProviderName }}': aws
              values:
                global:
                  affinity:
                    nodeAffinity:
                      requiredDuringSchedulingIgnoredDuringExecution:
                        nodeSelectorTerms:
                        - matchExpressions:
                          - key: omnistrate.com/managed-by
                            operator: In
                            values:
                            - omnistrate
              valuesFile:
                gitConfiguration:
                  accessToken: my-token
                  commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                  referenceName: tags/v1.0.0
                  repositoryUrl: https://github.com/username/myrepo
                  userName: my-user
                path: helm/values/production.yaml
            namespace: default
          hostClusterID: hc-12345678
          status: unknown|deployed|uninstalled|superseded|failed|uninstalling|pending-install|pending-upgrade|pending-rollback
      properties:
        helmPackageInstallations:
          description: List of Helm package installations
          example:
          - helmPackage:
              chartName: my-chart
              chartRepoName: my-repo
              chartRepoUrl: https://my-repo.com
              chartValues:
                key1: value1
                key2: 3
                key3:
                  key4: value4
              chartVersion: 1.0.0
              layeredChartValues:
              - name: my-layer
                scope:
                  '{{ $sys.cloudProviderName }}': aws
                values:
                  global:
                    affinity:
                      nodeAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          nodeSelectorTerms:
                          - matchExpressions:
                            - key: omnistrate.com/managed-by
                              operator: In
                              values:
                              - omnistrate
                valuesFile:
                  gitConfiguration:
                    accessToken: my-token
                    commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  path: helm/values/production.yaml
              - name: my-layer
                scope:
                  '{{ $sys.cloudProviderName }}': aws
                values:
                  global:
                    affinity:
                      nodeAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          nodeSelectorTerms:
                          - matchExpressions:
                            - key: omnistrate.com/managed-by
                              operator: In
                              values:
                              - omnistrate
                valuesFile:
                  gitConfiguration:
                    accessToken: my-token
                    commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  path: helm/values/production.yaml
              - name: my-layer
                scope:
                  '{{ $sys.cloudProviderName }}': aws
                values:
                  global:
                    affinity:
                      nodeAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          nodeSelectorTerms:
                          - matchExpressions:
                            - key: omnistrate.com/managed-by
                              operator: In
                              values:
                              - omnistrate
                valuesFile:
                  gitConfiguration:
                    accessToken: my-token
                    commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  path: helm/values/production.yaml
              namespace: default
            hostClusterID: hc-12345678
            status: unknown|deployed|uninstalled|superseded|failed|uninstalling|pending-install|pending-upgrade|pending-rollback
          - helmPackage:
              chartName: my-chart
              chartRepoName: my-repo
              chartRepoUrl: https://my-repo.com
              chartValues:
                key1: value1
                key2: 3
                key3:
                  key4: value4
              chartVersion: 1.0.0
              layeredChartValues:
              - name: my-layer
                scope:
                  '{{ $sys.cloudProviderName }}': aws
                values:
                  global:
                    affinity:
                      nodeAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          nodeSelectorTerms:
                          - matchExpressions:
                            - key: omnistrate.com/managed-by
                              operator: In
                              values:
                              - omnistrate
                valuesFile:
                  gitConfiguration:
                    accessToken: my-token
                    commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  path: helm/values/production.yaml
              - name: my-layer
                scope:
                  '{{ $sys.cloudProviderName }}': aws
                values:
                  global:
                    affinity:
                      nodeAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          nodeSelectorTerms:
                          - matchExpressions:
                            - key: omnistrate.com/managed-by
                              operator: In
                              values:
                              - omnistrate
                valuesFile:
                  gitConfiguration:
                    accessToken: my-token
                    commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  path: helm/values/production.yaml
              - name: my-layer
                scope:
                  '{{ $sys.cloudProviderName }}': aws
                values:
                  global:
                    affinity:
                      nodeAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          nodeSelectorTerms:
                          - matchExpressions:
                            - key: omnistrate.com/managed-by
                              operator: In
                              values:
                              - omnistrate
                valuesFile:
                  gitConfiguration:
                    accessToken: my-token
                    commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  path: helm/values/production.yaml
              namespace: default
            hostClusterID: hc-12345678
            status: unknown|deployed|uninstalled|superseded|failed|uninstalling|pending-install|pending-upgrade|pending-rollback
          - helmPackage:
              chartName: my-chart
              chartRepoName: my-repo
              chartRepoUrl: https://my-repo.com
              chartValues:
                key1: value1
                key2: 3
                key3:
                  key4: value4
              chartVersion: 1.0.0
              layeredChartValues:
              - name: my-layer
                scope:
                  '{{ $sys.cloudProviderName }}': aws
                values:
                  global:
                    affinity:
                      nodeAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          nodeSelectorTerms:
                          - matchExpressions:
                            - key: omnistrate.com/managed-by
                              operator: In
                              values:
                              - omnistrate
                valuesFile:
                  gitConfiguration:
                    accessToken: my-token
                    commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  path: helm/values/production.yaml
              - name: my-layer
                scope:
                  '{{ $sys.cloudProviderName }}': aws
                values:
                  global:
                    affinity:
                      nodeAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          nodeSelectorTerms:
                          - matchExpressions:
                            - key: omnistrate.com/managed-by
                              operator: In
                              values:
                              - omnistrate
                valuesFile:
                  gitConfiguration:
                    accessToken: my-token
                    commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  path: helm/values/production.yaml
              - name: my-layer
                scope:
                  '{{ $sys.cloudProviderName }}': aws
                values:
                  global:
                    affinity:
                      nodeAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          nodeSelectorTerms:
                          - matchExpressions:
                            - key: omnistrate.com/managed-by
                              operator: In
                              values:
                              - omnistrate
                valuesFile:
                  gitConfiguration:
                    accessToken: my-token
                    commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  path: helm/values/production.yaml
              namespace: default
            hostClusterID: hc-12345678
            status: unknown|deployed|uninstalled|superseded|failed|uninstalling|pending-install|pending-upgrade|pending-rollback
          - helmPackage:
              chartName: my-chart
              chartRepoName: my-repo
              chartRepoUrl: https://my-repo.com
              chartValues:
                key1: value1
                key2: 3
                key3:
                  key4: value4
              chartVersion: 1.0.0
              layeredChartValues:
              - name: my-layer
                scope:
                  '{{ $sys.cloudProviderName }}': aws
                values:
                  global:
                    affinity:
                      nodeAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          nodeSelectorTerms:
                          - matchExpressions:
                            - key: omnistrate.com/managed-by
                              operator: In
                              values:
                              - omnistrate
                valuesFile:
                  gitConfiguration:
                    accessToken: my-token
                    commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  path: helm/values/production.yaml
              - name: my-layer
                scope:
                  '{{ $sys.cloudProviderName }}': aws
                values:
                  global:
                    affinity:
                      nodeAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          nodeSelectorTerms:
                          - matchExpressions:
                            - key: omnistrate.com/managed-by
                              operator: In
                              values:
                              - omnistrate
                valuesFile:
                  gitConfiguration:
                    accessToken: my-token
                    commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  path: helm/values/production.yaml
              - name: my-layer
                scope:
                  '{{ $sys.cloudProviderName }}': aws
                values:
                  global:
                    affinity:
                      nodeAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          nodeSelectorTerms:
                          - matchExpressions:
                            - key: omnistrate.com/managed-by
                              operator: In
                              values:
                              - omnistrate
                valuesFile:
                  gitConfiguration:
                    accessToken: my-token
                    commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
                    referenceName: tags/v1.0.0
                    repositoryUrl: https://github.com/username/myrepo
                    userName: my-user
                  path: helm/values/production.yaml
              namespace: default
            hostClusterID: hc-12345678
            status: unknown|deployed|uninstalled|superseded|failed|uninstalling|pending-install|pending-upgrade|pending-rollback
          items:
            $ref: "#/components/schemas/HelmPackageInstallations"
          type: array
      required:
      - helmPackageInstallations
      type: object
    ListHostClustersRequest:
      example:
        accountConfigId: ac-12345678
        customerEmail: admin@example.com
        includeProvisionerClusters: true
        regionId: region-12345678
        token: "7"
      properties:
        accountConfigId:
          description: ID of an Account Config
          example: Quasi dicta distinctio nostrum.
          type: string
        customerEmail:
          description: Email of the customer to filter host clusters by (optional)
          example: admin@example.com
          type: string
        includeProvisionerClusters:
          description: Include provisioner clusters in the response
          example: true
          type: boolean
        regionId:
          description: ID of a Region
          example: Aut sint molestias.
          type: string
        token:
          description: JWT token used to perform authorization
          example: me
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListHostClustersResult:
      example:
        hostClusters:
        - accountConfigId: ac-12345678
          accountID: "123456789012"
          cloudProvider: aws
          currentNumberOfDeployments: 2
          customerEmail: admin@example.com
          customerOrganizationName: My Customer Organization
          description: My Host Cluster
          failedEntities:
          - error: Namespace failed to sync because of missing permissions
            identifier: namespace-12345
            syncStatus: FAILED
            type: NAMESPACE
          - error: Service unable to setup load balancer
            identifier: service-67890
            syncStatus: FAILED
            type: SERVICE
          helmPackages:
          - firstDeployed: 2021-01-01T00:00:00Z
            lastDeployed: 2021-01-01T00:00:00Z
            name: my-helm-package
            namespace: my-namespace
            repository: https://my-helm-repo.com
            status: deployed
            values:
              key1: value1
              key2: value2
            version: 1.0.0
          id: hc-12345678
          isCustomDeployment: false
          key: my-host-cluster
          kubernetesDashboardEndpoint: https://my-k8s-dashboard.com
          region: us-east-1
          regionId: region-12345678
          status: READY
          type: Kubernetes
        token: p
      properties:
        hostClusters:
          example:
          - accountConfigId: ac-12345678
            accountID: "123456789012"
            cloudProvider: aws
            currentNumberOfDeployments: 2
            customerEmail: admin@example.com
            customerOrganizationName: My Customer Organization
            description: My Host Cluster
            failedEntities:
            - error: Namespace failed to sync because of missing permissions
              identifier: namespace-12345
              syncStatus: FAILED
              type: NAMESPACE
            - error: Service unable to setup load balancer
              identifier: service-67890
              syncStatus: FAILED
              type: SERVICE
            helmPackages:
            - firstDeployed: 2021-01-01T00:00:00Z
              lastDeployed: 2021-01-01T00:00:00Z
              name: my-helm-package
              namespace: my-namespace
              repository: https://my-helm-repo.com
              status: deployed
              values:
                key1: value1
                key2: value2
              version: 1.0.0
            id: hc-12345678
            isCustomDeployment: false
            key: my-host-cluster
            kubernetesDashboardEndpoint: https://my-k8s-dashboard.com
            region: us-east-1
            regionId: region-12345678
            status: READY
            type: Kubernetes
          items:
            $ref: "#/components/schemas/HostCluster"
          type: array
        token:
          description: JWT token used to perform authorization
          example: "5"
          minLength: 1
          type: string
      required:
      - hostClusters
      - token
      type: object
    ListIdentityProviderTypesRequest:
      example:
        token: "77"
      properties:
        token:
          description: JWT token used to perform authorization
          example: r93
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListIdentityProviderTypesResult:
      example:
        identityProviderTypes:
        - SupportCustomEndpoints: true
          SupportCustomScopes: false
          identityProviderName: Google
        - SupportCustomEndpoints: true
          SupportCustomScopes: false
          identityProviderName: Google
      properties:
        identityProviderTypes:
          description: The list of Identity Provider Types
          example:
          - SupportCustomEndpoints: true
            SupportCustomScopes: false
            identityProviderName: Google
          - SupportCustomEndpoints: true
            SupportCustomScopes: false
            identityProviderName: Google
          items:
            $ref: "#/components/schemas/DescribeIdentityProviderTypeResult"
          type: array
      required:
      - identityProviderTypes
      type: object
    ListIdentityProvidersRequest:
      example:
        token: 9xa
      properties:
        token:
          description: JWT token used to perform authorization
          example: e
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListIdentityProvidersResult:
      example:
        identityProviders:
        - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
          clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          clientSecret: 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
          disabled: false
          emailIdentifiers: company.com
          environmentType: production
          id: idp-12345678
          identityProviderName: Google
          loginButtonIconUrl: https://example.com/icon.png
          loginButtonText: Login with Google
          name: Google for my company
          scopes: openid email profile
          status: Ready
          tokenEndpoint: https://oauth2.googleapis.com/token
          userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
        - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
          clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          clientSecret: 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
          disabled: false
          emailIdentifiers: company.com
          environmentType: production
          id: idp-12345678
          identityProviderName: Google
          loginButtonIconUrl: https://example.com/icon.png
          loginButtonText: Login with Google
          name: Google for my company
          scopes: openid email profile
          status: Ready
          tokenEndpoint: https://oauth2.googleapis.com/token
          userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
        - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
          clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          clientSecret: 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
          disabled: false
          emailIdentifiers: company.com
          environmentType: production
          id: idp-12345678
          identityProviderName: Google
          loginButtonIconUrl: https://example.com/icon.png
          loginButtonText: Login with Google
          name: Google for my company
          scopes: openid email profile
          status: Ready
          tokenEndpoint: https://oauth2.googleapis.com/token
          userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
      properties:
        identityProviders:
          description: The list of Identity Providers
          example:
          - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
            clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
            clientSecret: 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
            disabled: false
            emailIdentifiers: company.com
            environmentType: production
            id: idp-12345678
            identityProviderName: Google
            loginButtonIconUrl: https://example.com/icon.png
            loginButtonText: Login with Google
            name: Google for my company
            scopes: openid email profile
            status: Ready
            tokenEndpoint: https://oauth2.googleapis.com/token
            userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
          - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
            clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
            clientSecret: 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
            disabled: false
            emailIdentifiers: company.com
            environmentType: production
            id: idp-12345678
            identityProviderName: Google
            loginButtonIconUrl: https://example.com/icon.png
            loginButtonText: Login with Google
            name: Google for my company
            scopes: openid email profile
            status: Ready
            tokenEndpoint: https://oauth2.googleapis.com/token
            userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
          - authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
            clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
            clientSecret: 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
            disabled: false
            emailIdentifiers: company.com
            environmentType: production
            id: idp-12345678
            identityProviderName: Google
            loginButtonIconUrl: https://example.com/icon.png
            loginButtonText: Login with Google
            name: Google for my company
            scopes: openid email profile
            status: Ready
            tokenEndpoint: https://oauth2.googleapis.com/token
            userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
          items:
            $ref: "#/components/schemas/DescribeIdentityProviderResult"
          type: array
      required:
      - identityProviders
      type: object
    ListInvoicesRequest:
      example:
        billingProvider: STRIPE
        token: "3"
      properties:
        billingProvider:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        token:
          description: JWT token used to perform authorization
          example: iqe
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListInvoicesResult:
      example:
        invoices:
        - currency: USD
          dueDate: 2023-10-01T00:00:00Z
          invoiceDate: 2021-01-01T00:00:00.000Z
          invoiceId: in_1234568
          invoiceNumber: 2021-01-01-1234567890
          invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
          invoiceStatus: Open
          invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
          paymentTerms: Net 30
          taxAmount: 10
          totalAmount: 110
          totalAmountWithoutTax: 100
        - currency: USD
          dueDate: 2023-10-01T00:00:00Z
          invoiceDate: 2021-01-01T00:00:00.000Z
          invoiceId: in_1234568
          invoiceNumber: 2021-01-01-1234567890
          invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
          invoiceStatus: Open
          invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
          paymentTerms: Net 30
          taxAmount: 10
          totalAmount: 110
          totalAmountWithoutTax: 100
      properties:
        invoices:
          description: List of Invoices
          example:
          - currency: USD
            dueDate: 2023-10-01T00:00:00Z
            invoiceDate: 2021-01-01T00:00:00.000Z
            invoiceId: in_1234568
            invoiceNumber: 2021-01-01-1234567890
            invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
            invoiceStatus: Open
            invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
            paymentTerms: Net 30
            taxAmount: 10
            totalAmount: 110
            totalAmountWithoutTax: 100
          - currency: USD
            dueDate: 2023-10-01T00:00:00Z
            invoiceDate: 2021-01-01T00:00:00.000Z
            invoiceId: in_1234568
            invoiceNumber: 2021-01-01-1234567890
            invoicePdf: https://pay.stripe.com/invoice/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm/pdf?s=ap
            invoiceStatus: Open
            invoiceUrl: https://invoice.stripe.com/i/acct_1M2JTkLkdIwHu7ix/test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LF9OZVp3dVBYNnF0dGlvdXRubGVjSXVOOWhiVWpmUktPLDcxMTgyMTA10200x7P2wMSm?s=ap
            paymentTerms: Net 30
            taxAmount: 10
            totalAmount: 110
            totalAmountWithoutTax: 100
          items:
            $ref: "#/components/schemas/Invoice"
          type: array
      type: object
    ListNotificationChannelsRequest:
      example:
        token: h
      properties:
        token:
          description: JWT token used to perform authorization
          example: kvl
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListNotificationChannelsResult:
      example:
        channels:
        - channelType: EMAIL
          email:
            to: notify@example.com
          id: channel-12345678
        - channelType: SLACK
          id: channel-87654321
          slack:
            webhookUrl: https://hooks.slack.com/services/...
      properties:
        channels:
          description: List of notification channels
          example:
          - channelType: EMAIL
            email:
              to: notify@example.com
            id: channel-12345678
          - channelType: SLACK
            id: channel-87654321
            slack:
              webhookUrl: https://hooks.slack.com/services/...
          items:
            $ref: "#/components/schemas/Channel"
          type: array
      type: object
    ListOrganizationsResult:
      example:
        environmentId: se-12345678
        nextPageToken: next-token
        organizations:
        - email: omnistrate-devops@examplecorp.com
          orgId: o-12345678
          orgName: Acme Corp
          orgUrl: omnistrate.com
        - email: omnistrate-devops@examplecorp.com
          orgId: o-12345678
          orgName: Acme Corp
          orgUrl: omnistrate.com
        - email: omnistrate-devops@examplecorp.com
          orgId: o-12345678
          orgName: Acme Corp
          orgUrl: omnistrate.com
        serviceId: s-12345678
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        organizations:
          description: List of organizations.
          example:
          - email: omnistrate-devops@examplecorp.com
            orgId: o-12345678
            orgName: Acme Corp
            orgUrl: omnistrate.com
          - email: omnistrate-devops@examplecorp.com
            orgId: o-12345678
            orgName: Acme Corp
            orgUrl: omnistrate.com
          - email: omnistrate-devops@examplecorp.com
            orgId: o-12345678
            orgName: Acme Corp
            orgUrl: omnistrate.com
          - email: omnistrate-devops@examplecorp.com
            orgId: o-12345678
            orgName: Acme Corp
            orgUrl: omnistrate.com
          items:
            $ref: "#/components/schemas/Organization"
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - environmentId
      - organizations
      - serviceId
      type: object
    ListPipelinesRequest:
      example:
        serviceId: s-12345678
        token: 1t5
      properties:
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: s
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListPipelinesResult:
      example:
        ids:
        - p-12345678
        - p-23456789
        nextPageToken: next-token
      properties:
        ids:
          description: List of pipeline IDs
          example:
          - p-12345678
          - p-23456789
          items:
            description: ID of a Pipeline
            example: Voluptatem in.
            type: string
          type: array
        nextPageToken:
          description: Next page token
          example: next-token
          type: string
      type: object
    ListProductTiersRequest:
      example:
        serviceId: s-12345678
        serviceModelId: sm-12345678
        token: e
      properties:
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Placeat molestias beatae eveniet inventore ipsa.
          type: string
        token:
          description: JWT token used to perform authorization
          example: ppz
          minLength: 1
          type: string
      required:
      - serviceId
      - serviceModelId
      - token
      type: object
    ListProductTiersResult:
      example:
        ids:
        - Et iusto eos.
        - Et iusto eos.
        - Et iusto eos.
        - Et iusto eos.
        nextPageToken: next-token
      properties:
        ids:
          description: List of product tier IDs
          example:
          - Et iusto eos.
          - Et iusto eos.
          - Et iusto eos.
          items:
            description: ID of a Product Tier
            example: Sit deleniti voluptas et quam necessitatibus accusantium.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListRegionsRequest:
      example:
        cloudProviderName: aws
        modelType: CUSTOMER_HOSTED
        productTierId: pt-12345678
        serviceId: s-12345678
        serviceModelId: sm-12345678
        token: joa
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        modelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Dolore neque suscipit dolor vel.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Quis corrupti voluptatem.
          type: string
        token:
          description: JWT token used to perform authorization
          example: zw
          minLength: 1
          type: string
      required:
      - cloudProviderName
      - token
      type: object
    ListRegionsResult:
      example:
        ids:
        - region-12345678
        - region-87654321
        nextPageToken: next-token
      properties:
        ids:
          example:
          - region-12345678
          - region-87654321
          items:
            description: ID of a Region
            example: Nihil et omnis beatae sint et sint.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListResourceInstanceSnapshotsRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: fh
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service key
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Nemo exercitationem voluptatem ullam rerum praesentium temporibus.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: kum
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    ListResourceInstanceSnapshotsResult:
      example:
        snapshots:
        - completeTime: 2021-09-01T00:00:00Z
          createdTime: 2021-09-01T00:00:00Z
          encrypted: true
          progress: 100
          snapshotId: instance-ss-12345678
          status: completed
      properties:
        snapshots:
          description: The instance snapshots
          example:
          - completeTime: 2021-09-01T00:00:00Z
            createdTime: 2021-09-01T00:00:00Z
            encrypted: true
            progress: 100
            snapshotId: instance-ss-12345678
            status: completed
          items:
            $ref: "#/components/schemas/InstanceSnapshot"
          type: array
      type: object
    ListResourceInstancesRequest:
      example:
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: or
      properties:
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service key
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Dolor itaque necessitatibus quo ut sint suscipit.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: 3b7
          minLength: 1
          type: string
      required:
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    ListResourceInstancesResult:
      example:
        ids:
        - instance-abcd1234
        - instance-abcd1235
        nextPageToken: next-token
      properties:
        ids:
          description: The instance IDs
          example:
          - instance-abcd1234
          - instance-abcd1235
          items:
            example: Inventore asperiores modi culpa est facere.
            type: string
          type: array
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListResourcesRequest:
      example:
        environmentId: se-12345678
        environmentType: PROD
        nextPageToken: next-token
        orgId: org-12345678
        pageSize: 10
        productTierId: pt-12345678
        serviceId: s-12345678
        serviceModelId: sm-12345678
        token: d
        userId: user-12345678
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        orgId:
          description: ID of an Org
          example: Ut quia ut recusandae distinctio accusantium expedita.
          type: string
        pageSize:
          description: The number of resources to return per page.
          example: 10
          format: int64
          type: integer
        productTierId:
          description: ID of a Product Tier
          example: Dolor deserunt tempore expedita ab qui.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Et facilis ad.
          type: string
        token:
          description: JWT token used to perform authorization
          example: m
          minLength: 1
          type: string
        userId:
          description: ID of a User
          example: Delectus a debitis sunt.
          type: string
      required:
      - environmentId
      - productTierId
      - serviceId
      - serviceModelId
      - token
      type: object
    ListResourcesRequest2:
      example:
        environmentType: PROD
        nextPageToken: next-token
        orgId: org-12345678
        pageSize: 10
        userId: user-12345678
      properties:
        environmentType:
          description: Filter resources by environment type.
          example: PROD
          type: string
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        orgId:
          description: Filter resources by organization ID.
          example: org-12345678
          type: string
        pageSize:
          description: The number of resources to return per page.
          example: 10
          format: int64
          type: integer
        userId:
          description: Filter resources by user ID.
          example: user-12345678
          type: string
      type: object
    ListResourcesResult:
      example:
        environmentId: se-12345678
        nextPageToken: next-token
        resources:
        - environmentId: se-12345678
          instanceCount: 2
          name: asserts-server
          perVersionInstanceCount:
            "1.0": 2
            "1.1": 2
            "2.0": 2
          productTierType: OMNISTRATE_DEDICATED
          proxyType: PortsBasedProxy
          resourceId: r-12345678
          serviceId: s-12345678
          serviceModelType: OMNISTRATE_HOSTED
          version: "2.0"
          versionHistory:
          - "1.0"
          - "1.1"
          - "2.0"
        - environmentId: se-12345678
          instanceCount: 2
          name: asserts-server
          perVersionInstanceCount:
            "1.0": 2
            "1.1": 2
            "2.0": 2
          productTierType: OMNISTRATE_DEDICATED
          proxyType: PortsBasedProxy
          resourceId: r-12345678
          serviceId: s-12345678
          serviceModelType: OMNISTRATE_HOSTED
          version: "2.0"
          versionHistory:
          - "1.0"
          - "1.1"
          - "2.0"
        - environmentId: se-12345678
          instanceCount: 2
          name: asserts-server
          perVersionInstanceCount:
            "1.0": 2
            "1.1": 2
            "2.0": 2
          productTierType: OMNISTRATE_DEDICATED
          proxyType: PortsBasedProxy
          resourceId: r-12345678
          serviceId: s-12345678
          serviceModelType: OMNISTRATE_HOSTED
          version: "2.0"
          versionHistory:
          - "1.0"
          - "1.1"
          - "2.0"
        serviceId: s-12345678
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        resources:
          description: List of resources.
          example:
          - environmentId: se-12345678
            instanceCount: 2
            name: asserts-server
            perVersionInstanceCount:
              "1.0": 2
              "1.1": 2
              "2.0": 2
            productTierType: OMNISTRATE_DEDICATED
            proxyType: PortsBasedProxy
            resourceId: r-12345678
            serviceId: s-12345678
            serviceModelType: OMNISTRATE_HOSTED
            version: "2.0"
            versionHistory:
            - "1.0"
            - "1.1"
            - "2.0"
          - environmentId: se-12345678
            instanceCount: 2
            name: asserts-server
            perVersionInstanceCount:
              "1.0": 2
              "1.1": 2
              "2.0": 2
            productTierType: OMNISTRATE_DEDICATED
            proxyType: PortsBasedProxy
            resourceId: r-12345678
            serviceId: s-12345678
            serviceModelType: OMNISTRATE_HOSTED
            version: "2.0"
            versionHistory:
            - "1.0"
            - "1.1"
            - "2.0"
          - environmentId: se-12345678
            instanceCount: 2
            name: asserts-server
            perVersionInstanceCount:
              "1.0": 2
              "1.1": 2
              "2.0": 2
            productTierType: OMNISTRATE_DEDICATED
            proxyType: PortsBasedProxy
            resourceId: r-12345678
            serviceId: s-12345678
            serviceModelType: OMNISTRATE_HOSTED
            version: "2.0"
            versionHistory:
            - "1.0"
            - "1.1"
            - "2.0"
          - environmentId: se-12345678
            instanceCount: 2
            name: asserts-server
            perVersionInstanceCount:
              "1.0": 2
              "1.1": 2
              "2.0": 2
            productTierType: OMNISTRATE_DEDICATED
            proxyType: PortsBasedProxy
            resourceId: r-12345678
            serviceId: s-12345678
            serviceModelType: OMNISTRATE_HOSTED
            version: "2.0"
            versionHistory:
            - "1.0"
            - "1.1"
            - "2.0"
          items:
            $ref: "#/components/schemas/Resource"
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - environmentId
      - resources
      - serviceId
      type: object
    ListSaaSPortalCustomDomainsRequest:
      example:
        token: l
      properties:
        token:
          description: JWT token used to perform authorization
          example: vln
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListSaaSPortalCustomDomainsResult:
      example:
        customDomains:
        - clusterEndpoint: example.com
          customDomain: mycustomdomain.com
          description: My custom domain description
          environmentType: DEV
          name: MyCustomDomain
          status: READY
        - clusterEndpoint: example.com
          customDomain: mycustomdomain.com
          description: My custom domain description
          environmentType: DEV
          name: MyCustomDomain
          status: READY
        - clusterEndpoint: example.com
          customDomain: mycustomdomain.com
          description: My custom domain description
          environmentType: DEV
          name: MyCustomDomain
          status: READY
        - clusterEndpoint: example.com
          customDomain: mycustomdomain.com
          description: My custom domain description
          environmentType: DEV
          name: MyCustomDomain
          status: READY
      properties:
        customDomains:
          description: The list of custom domains
          example:
          - clusterEndpoint: example.com
            customDomain: mycustomdomain.com
            description: My custom domain description
            environmentType: DEV
            name: MyCustomDomain
            status: READY
          - clusterEndpoint: example.com
            customDomain: mycustomdomain.com
            description: My custom domain description
            environmentType: DEV
            name: MyCustomDomain
            status: READY
          - clusterEndpoint: example.com
            customDomain: mycustomdomain.com
            description: My custom domain description
            environmentType: DEV
            name: MyCustomDomain
            status: READY
          - clusterEndpoint: example.com
            customDomain: mycustomdomain.com
            description: My custom domain description
            environmentType: DEV
            name: MyCustomDomain
            status: READY
          items:
            $ref: "#/components/schemas/CustomDomain"
          type: array
      required:
      - customDomains
      type: object
    ListSaaSPortalsRequest:
      example:
        token: e
      properties:
        token:
          description: JWT token used to perform authorization
          example: z
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListSaaSPortalsResult:
      example:
        saasPortals:
        - customDomain: mycustomdomain.com
          customDomainStatus: READY
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: saasportal
              resourceName: SaaS Portal
          disablePasswordLogin: false
          emailConfig:
            smtpFromEmail: example@gmail.com
            smtpHost: smtp.gmail.com
            smtpPassword: password
            smtpPort: 587
            smtpUsername: username
          endpoint: https://saas-portal.example.com
          environmentType: DEV
          googleAnalyticsTagID: G-123456789
          imageConfig:
            imageName: myimage
            imageRegistry: ghcr.io
            imageTag: latest
          status: READY
        - customDomain: mycustomdomain.com
          customDomainStatus: READY
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: saasportal
              resourceName: SaaS Portal
          disablePasswordLogin: false
          emailConfig:
            smtpFromEmail: example@gmail.com
            smtpHost: smtp.gmail.com
            smtpPassword: password
            smtpPort: 587
            smtpUsername: username
          endpoint: https://saas-portal.example.com
          environmentType: DEV
          googleAnalyticsTagID: G-123456789
          imageConfig:
            imageName: myimage
            imageRegistry: ghcr.io
            imageTag: latest
          status: READY
        - customDomain: mycustomdomain.com
          customDomainStatus: READY
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: saasportal
              resourceName: SaaS Portal
          disablePasswordLogin: false
          emailConfig:
            smtpFromEmail: example@gmail.com
            smtpHost: smtp.gmail.com
            smtpPassword: password
            smtpPort: 587
            smtpUsername: username
          endpoint: https://saas-portal.example.com
          environmentType: DEV
          googleAnalyticsTagID: G-123456789
          imageConfig:
            imageName: myimage
            imageRegistry: ghcr.io
            imageTag: latest
          status: READY
        - customDomain: mycustomdomain.com
          customDomainStatus: READY
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: saasportal
              resourceName: SaaS Portal
          disablePasswordLogin: false
          emailConfig:
            smtpFromEmail: example@gmail.com
            smtpHost: smtp.gmail.com
            smtpPassword: password
            smtpPort: 587
            smtpUsername: username
          endpoint: https://saas-portal.example.com
          environmentType: DEV
          googleAnalyticsTagID: G-123456789
          imageConfig:
            imageName: myimage
            imageRegistry: ghcr.io
            imageTag: latest
          status: READY
      properties:
        saasPortals:
          description: The list of saas portals
          example:
          - customDomain: mycustomdomain.com
            customDomainStatus: READY
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: saasportal
                resourceName: SaaS Portal
            disablePasswordLogin: false
            emailConfig:
              smtpFromEmail: example@gmail.com
              smtpHost: smtp.gmail.com
              smtpPassword: password
              smtpPort: 587
              smtpUsername: username
            endpoint: https://saas-portal.example.com
            environmentType: DEV
            googleAnalyticsTagID: G-123456789
            imageConfig:
              imageName: myimage
              imageRegistry: ghcr.io
              imageTag: latest
            status: READY
          - customDomain: mycustomdomain.com
            customDomainStatus: READY
            detailedNetworkTopology:
              r-abcd1234:
                allowedIPRanges:
                - 0.0.0.0/0
                clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                clusterPorts:
                - 3306
                main: true
                networkingType: PUBLIC
                nodes:
                - availabilityZone: us-east-2a
                  endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                  healthStatus: healthy
                  id: primary-0
                  ports:
                  - 3306
                  status: RUNNING
                privateNetworkCIDR: 10.0.0.2/24
                privateNetworkID: n-1234abcd
                publiclyAccessible: true
                resourceKey: saasportal
                resourceName: SaaS Portal
            disablePasswordLogin: false
            emailConfig:
              smtpFromEmail: example@gmail.com
              smtpHost: smtp.gmail.com
              smtpPassword: password
              smtpPort: 587
              smtpUsername: username
            endpoint: https://saas-portal.example.com
            environmentType: DEV
            googleAnalyticsTagID: G-123456789
            imageConfig:
              imageName: myimage
              imageRegistry: ghcr.io
              imageTag: latest
            status: READY
          items:
            $ref: "#/components/schemas/SaaSPortal"
          type: array
      required:
      - saasPortals
      type: object
    ListSecretsRequest:
      example:
        environmentType: DEV
        token: chx
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        token:
          description: JWT token used to perform authorization
          example: 4u
          minLength: 1
          type: string
      required:
      - environmentType
      - token
      type: object
    ListSecretsResult:
      example:
        secrets:
        - environmentType: DEV
          name: my-secret
          value: super-secret-value
        - environmentType: DEV
          name: my-secret
          value: super-secret-value
        - environmentType: DEV
          name: my-secret
          value: super-secret-value
        - environmentType: DEV
          name: my-secret
          value: super-secret-value
      properties:
        secrets:
          description: List of secrets in the service environment
          example:
          - environmentType: DEV
            name: my-secret
            value: super-secret-value
          - environmentType: DEV
            name: my-secret
            value: super-secret-value
          - environmentType: DEV
            name: my-secret
            value: super-secret-value
          - environmentType: DEV
            name: my-secret
            value: super-secret-value
          items:
            $ref: "#/components/schemas/Secret"
          type: array
      type: object
    ListServiceEnvironmentsRequest:
      example:
        serviceId: s-12345678
        token: ft
      properties:
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "3"
          minLength: 1
          type: string
      required:
      - serviceId
      - token
      type: object
    ListServiceEnvironmentsResult:
      example:
        ids:
        - se-12345678
        - se-23456789
        nextPageToken: next-token
      properties:
        ids:
          description: The list of service environment IDs
          example:
          - se-12345678
          - se-23456789
          items:
            description: ID of a Service Environment
            example: se-123456
            type: string
          type: array
        nextPageToken:
          description: The next token to use to retrieve the next page of results
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListServiceModelsRequest:
      example:
        serviceApiId: sa-12345678
        serviceId: s-12345678
        token: wrj
      properties:
        serviceApiId:
          description: ID of a Service API
          example: Optio odio excepturi modi.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: us
          minLength: 1
          type: string
      required:
      - serviceApiId
      - serviceId
      - token
      type: object
    ListServiceModelsResult:
      example:
        ids:
        - sm-12345678
        - sm-87654321
        nextPageToken: next-token
      properties:
        ids:
          description: The service model IDs
          example:
          - sm-12345678
          - sm-87654321
          items:
            description: ID of a Service Model
            example: Amet doloremque.
            type: string
          type: array
        nextPageToken:
          description: The next token to use when listing service models
          example: next-token
          type: string
      required:
      - ids
      type: object
    ListServiceOfferingsRequest:
      example:
        environmentType: DEV
        orgId: org-12345678
        token: u
        visibility: PRIVATE
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        orgId:
          description: ID of an Org
          example: Corporis voluptatibus quo natus rerum.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 6v
          minLength: 1
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - token
      type: object
    ListServiceOfferingsResult:
      example:
        nextPageToken: next-token
        serviceIds:
        - s-12345678
        - s-abcdefgh
        services:
        - createdAt: 2019-01-01T00:00:00Z
          isDeprecated: false
          offerings:
          - allowCreatesWhenPaymentNotConfigured: true
            assets:
              cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
              cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
            maxNumberOfInstances: 4
            productTierName: Premium
            productTierURLKey: premium
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-12345678
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PRIVATE
            serviceModelName: Bring Your Own Account
            serviceModelURLKey: byoa
          - productTierName: Basic
            productTierURLKey: basic
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-abcdefgh
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PUBLIC
            serviceModelName: Hosted
            serviceModelURLKey: hosted
          serviceDescription: MySQL is a relational database
          serviceId: s-12345678
          serviceName: MySQL
          serviceOrgId: org-12345678
          serviceProviderId: sp-9zrg9W8Are
          serviceProviderName: "Omnistrate, Inc."
          serviceURLKey: mysql
        - createdAt: 2019-01-01T00:00:00Z
          isDeprecated: false
          offerings:
          - allowCreatesWhenPaymentNotConfigured: true
            assets:
              cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
              cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
            maxNumberOfInstances: 4
            productTierName: Premium
            productTierURLKey: premium
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-12345678
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PRIVATE
            serviceModelName: Bring Your Own Account
            serviceModelURLKey: byoa
          - productTierName: Basic
            productTierURLKey: basic
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-abcdefgh
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PUBLIC
            serviceModelName: Hosted
            serviceModelURLKey: hosted
          serviceDescription: MySQL is a relational database
          serviceId: s-12345678
          serviceName: MySQL
          serviceOrgId: org-12345678
          serviceProviderId: sp-9zrg9W8Are
          serviceProviderName: "Omnistrate, Inc."
          serviceURLKey: mysql
        - createdAt: 2019-01-01T00:00:00Z
          isDeprecated: false
          offerings:
          - allowCreatesWhenPaymentNotConfigured: true
            assets:
              cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
              cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
            maxNumberOfInstances: 4
            productTierName: Premium
            productTierURLKey: premium
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-12345678
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PRIVATE
            serviceModelName: Bring Your Own Account
            serviceModelURLKey: byoa
          - productTierName: Basic
            productTierURLKey: basic
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-abcdefgh
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PUBLIC
            serviceModelName: Hosted
            serviceModelURLKey: hosted
          serviceDescription: MySQL is a relational database
          serviceId: s-12345678
          serviceName: MySQL
          serviceOrgId: org-12345678
          serviceProviderId: sp-9zrg9W8Are
          serviceProviderName: "Omnistrate, Inc."
          serviceURLKey: mysql
        - createdAt: 2019-01-01T00:00:00Z
          isDeprecated: false
          offerings:
          - allowCreatesWhenPaymentNotConfigured: true
            assets:
              cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
              cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
            maxNumberOfInstances: 4
            productTierName: Premium
            productTierURLKey: premium
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-12345678
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PRIVATE
            serviceModelName: Bring Your Own Account
            serviceModelURLKey: byoa
          - productTierName: Basic
            productTierURLKey: basic
            resourceParameters:
            - name: MySQL
              urlKey: mysql
            - name: Redis
              urlKey: redis
            serviceAPIID: sa-abcdefgh
            serviceAPIVersion: v1
            serviceEnvironmentName: Production
            serviceEnvironmentURLKey: prod
            serviceEnvironmentVisibility: PUBLIC
            serviceModelName: Hosted
            serviceModelURLKey: hosted
          serviceDescription: MySQL is a relational database
          serviceId: s-12345678
          serviceName: MySQL
          serviceOrgId: org-12345678
          serviceProviderId: sp-9zrg9W8Are
          serviceProviderName: "Omnistrate, Inc."
          serviceURLKey: mysql
      properties:
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        serviceIds:
          description: The service IDs
          example:
          - s-12345678
          - s-abcdefgh
          items:
            description: ID of a Service
            example: s-123456
            type: string
          type: array
        services:
          description: List of services
          example:
          - createdAt: 2019-01-01T00:00:00Z
            isDeprecated: false
            offerings:
            - allowCreatesWhenPaymentNotConfigured: true
              assets:
                cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
              maxNumberOfInstances: 4
              productTierName: Premium
              productTierURLKey: premium
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-12345678
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PRIVATE
              serviceModelName: Bring Your Own Account
              serviceModelURLKey: byoa
            - productTierName: Basic
              productTierURLKey: basic
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-abcdefgh
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PUBLIC
              serviceModelName: Hosted
              serviceModelURLKey: hosted
            serviceDescription: MySQL is a relational database
            serviceId: s-12345678
            serviceName: MySQL
            serviceOrgId: org-12345678
            serviceProviderId: sp-9zrg9W8Are
            serviceProviderName: "Omnistrate, Inc."
            serviceURLKey: mysql
          - createdAt: 2019-01-01T00:00:00Z
            isDeprecated: false
            offerings:
            - allowCreatesWhenPaymentNotConfigured: true
              assets:
                cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
              maxNumberOfInstances: 4
              productTierName: Premium
              productTierURLKey: premium
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-12345678
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PRIVATE
              serviceModelName: Bring Your Own Account
              serviceModelURLKey: byoa
            - productTierName: Basic
              productTierURLKey: basic
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-abcdefgh
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PUBLIC
              serviceModelName: Hosted
              serviceModelURLKey: hosted
            serviceDescription: MySQL is a relational database
            serviceId: s-12345678
            serviceName: MySQL
            serviceOrgId: org-12345678
            serviceProviderId: sp-9zrg9W8Are
            serviceProviderName: "Omnistrate, Inc."
            serviceURLKey: mysql
          - createdAt: 2019-01-01T00:00:00Z
            isDeprecated: false
            offerings:
            - allowCreatesWhenPaymentNotConfigured: true
              assets:
                cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
                cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
              maxNumberOfInstances: 4
              productTierName: Premium
              productTierURLKey: premium
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-12345678
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PRIVATE
              serviceModelName: Bring Your Own Account
              serviceModelURLKey: byoa
            - productTierName: Basic
              productTierURLKey: basic
              resourceParameters:
              - name: MySQL
                urlKey: mysql
              - name: Redis
                urlKey: redis
              serviceAPIID: sa-abcdefgh
              serviceAPIVersion: v1
              serviceEnvironmentName: Production
              serviceEnvironmentURLKey: prod
              serviceEnvironmentVisibility: PUBLIC
              serviceModelName: Hosted
              serviceModelURLKey: hosted
            serviceDescription: MySQL is a relational database
            serviceId: s-12345678
            serviceName: MySQL
            serviceOrgId: org-12345678
            serviceProviderId: sp-9zrg9W8Are
            serviceProviderName: "Omnistrate, Inc."
            serviceURLKey: mysql
          items:
            $ref: "#/components/schemas/DescribeServiceOfferingResult"
          type: array
      required:
      - serviceIds
      type: object
    ListServicePlansRequest:
      example:
        nextPageToken: token
        pageSize: 10
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        skipHasPendingChangesCheck: false
        token: "030"
      properties:
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        skipHasPendingChangesCheck:
          description: Whether to skip the check for pending changes in the service
            plans
          example: false
          type: boolean
        token:
          description: JWT token used to perform authorization
          example: "4"
          minLength: 1
          type: string
      required:
      - serviceEnvironmentId
      - serviceId
      - token
      type: object
    ListServicePlansResult:
      example:
        nextPageToken: next-token
        servicePlans:
        - AutoApproveSubscription: false
          accountConfigIds:
          - ac-12345678
          - ac-23456789
          activeAccountConfigIds:
            aws: ac-12345678
            gcp: ac-23456789
          apiVersion: v1
          awsRegions:
          - us-east-2
          - ca-central-1
          azureRegions:
          - northcentralus
          deploymentConfigId: dc-12345678
          gcpRegions:
          - us-central1
          hasPendingChanges: true
          isProductTierDisabled: true
          latestMajorVersion: "3.0"
          modelType: CUSTOMER_HOSTED
          privateRegions:
          - n/a
          productTierDescription: A premium product tier
          productTierDocumentation: Any documentation
          productTierFeatures:
            LOGS: true
            METRICS: false
          productTierId: pt-12345678
          productTierKey: premium
          productTierName: Premium
          productTierPlanDescription: A premium plan
          productTierPricing:
            price1: value1
          productTierSupport: Any support
          serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
            clusters for high availability
          serviceApiId: sa-12345678
          serviceEnvironmentId: se-12345678
          serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
            clusters for high availability
          serviceModelFeatures:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          serviceModelId: sm-12345678
          serviceModelName: MySQL multi-writer service hosted model
          tierType: OMNISTRATE_DEDICATED_TENANCY
          versionSetStatus: Preferred|Active|Deprecated|Pending
        - AutoApproveSubscription: false
          accountConfigIds:
          - ac-12345678
          - ac-23456789
          activeAccountConfigIds:
            aws: ac-12345678
            gcp: ac-23456789
          apiVersion: v1
          awsRegions:
          - us-east-2
          - ca-central-1
          azureRegions:
          - northcentralus
          deploymentConfigId: dc-12345678
          gcpRegions:
          - us-central1
          hasPendingChanges: true
          isProductTierDisabled: true
          latestMajorVersion: "3.0"
          modelType: CUSTOMER_HOSTED
          privateRegions:
          - n/a
          productTierDescription: A premium product tier
          productTierDocumentation: Any documentation
          productTierFeatures:
            LOGS: true
            METRICS: false
          productTierId: pt-12345678
          productTierKey: premium
          productTierName: Premium
          productTierPlanDescription: A premium plan
          productTierPricing:
            price1: value1
          productTierSupport: Any support
          serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
            clusters for high availability
          serviceApiId: sa-12345678
          serviceEnvironmentId: se-12345678
          serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
            clusters for high availability
          serviceModelFeatures:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          serviceModelId: sm-12345678
          serviceModelName: MySQL multi-writer service hosted model
          tierType: OMNISTRATE_DEDICATED_TENANCY
          versionSetStatus: Preferred|Active|Deprecated|Pending
      properties:
        nextPageToken:
          description: Token to use for the next page
          example: next-token
          type: string
        servicePlans:
          description: List of service plans
          example:
          - AutoApproveSubscription: false
            accountConfigIds:
            - ac-12345678
            - ac-23456789
            activeAccountConfigIds:
              aws: ac-12345678
              gcp: ac-23456789
            apiVersion: v1
            awsRegions:
            - us-east-2
            - ca-central-1
            azureRegions:
            - northcentralus
            deploymentConfigId: dc-12345678
            gcpRegions:
            - us-central1
            hasPendingChanges: true
            isProductTierDisabled: true
            latestMajorVersion: "3.0"
            modelType: CUSTOMER_HOSTED
            privateRegions:
            - n/a
            productTierDescription: A premium product tier
            productTierDocumentation: Any documentation
            productTierFeatures:
              LOGS: true
              METRICS: false
            productTierId: pt-12345678
            productTierKey: premium
            productTierName: Premium
            productTierPlanDescription: A premium plan
            productTierPricing:
              price1: value1
            productTierSupport: Any support
            serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
              clusters for high availability
            serviceApiId: sa-12345678
            serviceEnvironmentId: se-12345678
            serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
              clusters for high availability
            serviceModelFeatures:
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            serviceModelId: sm-12345678
            serviceModelName: MySQL multi-writer service hosted model
            tierType: OMNISTRATE_DEDICATED_TENANCY
            versionSetStatus: Preferred|Active|Deprecated|Pending
          - AutoApproveSubscription: false
            accountConfigIds:
            - ac-12345678
            - ac-23456789
            activeAccountConfigIds:
              aws: ac-12345678
              gcp: ac-23456789
            apiVersion: v1
            awsRegions:
            - us-east-2
            - ca-central-1
            azureRegions:
            - northcentralus
            deploymentConfigId: dc-12345678
            gcpRegions:
            - us-central1
            hasPendingChanges: true
            isProductTierDisabled: true
            latestMajorVersion: "3.0"
            modelType: CUSTOMER_HOSTED
            privateRegions:
            - n/a
            productTierDescription: A premium product tier
            productTierDocumentation: Any documentation
            productTierFeatures:
              LOGS: true
              METRICS: false
            productTierId: pt-12345678
            productTierKey: premium
            productTierName: Premium
            productTierPlanDescription: A premium plan
            productTierPricing:
              price1: value1
            productTierSupport: Any support
            serviceApiDescription: A MySQL SaaS API specializing in multi-writer multi-tenant
              clusters for high availability
            serviceApiId: sa-12345678
            serviceEnvironmentId: se-12345678
            serviceModelDescription: A MySQL Hosted SaaS specializing in multi-writer
              clusters for high availability
            serviceModelFeatures:
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            - configuration:
                status: "ON"
              feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
            serviceModelId: sm-12345678
            serviceModelName: MySQL multi-writer service hosted model
            tierType: OMNISTRATE_DEDICATED_TENANCY
            versionSetStatus: Preferred|Active|Deprecated|Pending
          items:
            $ref: "#/components/schemas/GetServicePlanResult"
          type: array
      required:
      - servicePlans
      type: object
    ListServiceProviderEvents:
      example:
        endDate: 2024-01-01T10:00:00Z
        environmentType: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
        eventTypes:
        - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
        - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
        instanceID: instance-12345678
        nextPageToken: token
        pageSize: 10
        productTierID: Et iusto eos.
        serviceEnvironmentID: se-123456
        serviceID: s-123456
        startDate: 2023-01-01T10:00:00Z
        token: 9yo
      properties:
        endDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        eventTypes:
          description: The event types to filter by
          example:
          - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
          - UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
          items:
            description: The type of the service provider specific event
            example: UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
            type: string
          type: array
        instanceID:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        productTierID:
          description: ID of a Product Tier
          example: Illum tempore molestias laudantium.
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        startDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        token:
          description: JWT token used to perform authorization
          example: xyq
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListServiceProviderEventsResult:
      example:
        events:
        - alertType: Alarm
          eventCategory: InstanceEvent
          eventID: e-123456
          eventPayload:
            Iste aut consequatur voluptates quos.: Nemo dolore iure nobis dolor similique.
          eventType: UnhealthyInstance
          expiryTime: 2023-01-10T00:00:00Z
          instanceID: instance-12345678
          planVersion: v1.0
          priority: Critical
          resourceName: Resource-123
          scope: ServiceProvider
          serviceEnvironmentID: se-123456
          serviceID: s-123456
          serviceName: Service-123
          servicePlanName: Basic Plan
          time: 2023-01-10T00:00:00Z
        - alertType: Alarm
          eventCategory: InstanceEvent
          eventID: e-123456
          eventPayload:
            Iste aut consequatur voluptates quos.: Nemo dolore iure nobis dolor similique.
          eventType: UnhealthyInstance
          expiryTime: 2023-01-10T00:00:00Z
          instanceID: instance-12345678
          planVersion: v1.0
          priority: Critical
          resourceName: Resource-123
          scope: ServiceProvider
          serviceEnvironmentID: se-123456
          serviceID: s-123456
          serviceName: Service-123
          servicePlanName: Basic Plan
          time: 2023-01-10T00:00:00Z
        - alertType: Alarm
          eventCategory: InstanceEvent
          eventID: e-123456
          eventPayload:
            Iste aut consequatur voluptates quos.: Nemo dolore iure nobis dolor similique.
          eventType: UnhealthyInstance
          expiryTime: 2023-01-10T00:00:00Z
          instanceID: instance-12345678
          planVersion: v1.0
          priority: Critical
          resourceName: Resource-123
          scope: ServiceProvider
          serviceEnvironmentID: se-123456
          serviceID: s-123456
          serviceName: Service-123
          servicePlanName: Basic Plan
          time: 2023-01-10T00:00:00Z
        - alertType: Alarm
          eventCategory: InstanceEvent
          eventID: e-123456
          eventPayload:
            Iste aut consequatur voluptates quos.: Nemo dolore iure nobis dolor similique.
          eventType: UnhealthyInstance
          expiryTime: 2023-01-10T00:00:00Z
          instanceID: instance-12345678
          planVersion: v1.0
          priority: Critical
          resourceName: Resource-123
          scope: ServiceProvider
          serviceEnvironmentID: se-123456
          serviceID: s-123456
          serviceName: Service-123
          servicePlanName: Basic Plan
          time: 2023-01-10T00:00:00Z
        eventsSummary:
          eventsSummary:
            FailedDeployment: 1
            UnhealthyInstance: 2
        nextPageToken: token
      properties:
        events:
          description: List of events
          example:
          - alertType: Alarm
            eventCategory: InstanceEvent
            eventID: e-123456
            eventPayload:
              Iste aut consequatur voluptates quos.: Nemo dolore iure nobis dolor
                similique.
            eventType: UnhealthyInstance
            expiryTime: 2023-01-10T00:00:00Z
            instanceID: instance-12345678
            planVersion: v1.0
            priority: Critical
            resourceName: Resource-123
            scope: ServiceProvider
            serviceEnvironmentID: se-123456
            serviceID: s-123456
            serviceName: Service-123
            servicePlanName: Basic Plan
            time: 2023-01-10T00:00:00Z
          - alertType: Alarm
            eventCategory: InstanceEvent
            eventID: e-123456
            eventPayload:
              Iste aut consequatur voluptates quos.: Nemo dolore iure nobis dolor
                similique.
            eventType: UnhealthyInstance
            expiryTime: 2023-01-10T00:00:00Z
            instanceID: instance-12345678
            planVersion: v1.0
            priority: Critical
            resourceName: Resource-123
            scope: ServiceProvider
            serviceEnvironmentID: se-123456
            serviceID: s-123456
            serviceName: Service-123
            servicePlanName: Basic Plan
            time: 2023-01-10T00:00:00Z
          items:
            $ref: "#/components/schemas/ServiceProviderEvent"
          type: array
        eventsSummary:
          $ref: "#/components/schemas/ServiceProviderEventSummary"
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
      required:
      - events
      - eventsSummary
      type: object
    ListServiceResult:
      example:
        ids:
        - s-12345678
        - s-abcdefgh
        - s-1234efgh
        nextPageToken: next-token
        services:
        - createdAt: 2019-01-01T00:00:00Z
          description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: s-12345678
          key: mysql
          name: MySQL multi-writer service
          roleType: admin
          serviceEnvironments:
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          serviceLogoURL: Sunt velit.
          serviceProviderID: sp-12345678
          serviceProviderName: "Omnistrate, Inc."
        - createdAt: 2019-01-01T00:00:00Z
          description: A MySQL SaaS specializing in multi-writer clusters for high
            availability
          id: s-12345678
          key: mysql
          name: MySQL multi-writer service
          roleType: admin
          serviceEnvironments:
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          - id: se-12345678
            name: dev
            promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
            saasPortalStatus: READY
            saasPortalUrl: https://saas-portal.example.com
            servicePlans:
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            - description: A Basic product tier
              modelType: CUSTOMER_HOSTED
              name: Basic
              productTierID: pt-12345678
              tierType: OMNISTRATE_DEDICATED_TENANCY
            sourceEnvironmentID: se-12345678
            sourceEnvironmentName: dev
            type: DEV
            visibility: private
          serviceLogoURL: Sunt velit.
          serviceProviderID: sp-12345678
          serviceProviderName: "Omnistrate, Inc."
      properties:
        ids:
          description: List of service IDs
          example:
          - s-12345678
          - s-abcdefgh
          - s-1234efgh
          items:
            description: ID of a Service
            example: s-123456
            type: string
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results
          example: next-token
          type: string
        services:
          description: List of services
          example:
          - createdAt: 2019-01-01T00:00:00Z
            description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: s-12345678
            key: mysql
            name: MySQL multi-writer service
            roleType: admin
            serviceEnvironments:
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            serviceLogoURL: Sunt velit.
            serviceProviderID: sp-12345678
            serviceProviderName: "Omnistrate, Inc."
          - createdAt: 2019-01-01T00:00:00Z
            description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: s-12345678
            key: mysql
            name: MySQL multi-writer service
            roleType: admin
            serviceEnvironments:
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            serviceLogoURL: Sunt velit.
            serviceProviderID: sp-12345678
            serviceProviderName: "Omnistrate, Inc."
          - createdAt: 2019-01-01T00:00:00Z
            description: A MySQL SaaS specializing in multi-writer clusters for high
              availability
            id: s-12345678
            key: mysql
            name: MySQL multi-writer service
            roleType: admin
            serviceEnvironments:
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            - id: se-12345678
              name: dev
              promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
              saasPortalStatus: READY
              saasPortalUrl: https://saas-portal.example.com
              servicePlans:
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              - description: A Basic product tier
                modelType: CUSTOMER_HOSTED
                name: Basic
                productTierID: pt-12345678
                tierType: OMNISTRATE_DEDICATED_TENANCY
              sourceEnvironmentID: se-12345678
              sourceEnvironmentName: dev
              type: DEV
              visibility: private
            serviceLogoURL: Sunt velit.
            serviceProviderID: sp-12345678
            serviceProviderName: "Omnistrate, Inc."
          items:
            $ref: "#/components/schemas/DescribeServiceResult"
          type: array
      required:
      - ids
      type: object
    ListServiceWorkflowsRequest:
      example:
        endDate: 2024-01-01T10:00:00Z
        environmentId: se-12345678
        instanceId: instance-12345678
        nextPageToken: token
        pageSize: 10
        serviceId: s-12345678
        startDate: 2023-01-01T10:00:00Z
        token: oak
      properties:
        endDate:
          description: "End time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2024-01-01T10:00:00Z
          format: date-time
          type: string
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        startDate:
          description: "Start time of the window in RFC 3339 format. If omitted, the\
            \ filter is open-ended at the start."
          example: 2023-01-01T10:00:00Z
          format: date-time
          type: string
        token:
          description: JWT token used to perform authorization
          example: o
          minLength: 1
          type: string
      required:
      - environmentId
      - serviceId
      - token
      type: object
    ListServiceWorkflowsResult:
      example:
        environmentId: se-12345678
        nextPageToken: token
        serviceId: s-12345678
        workflows:
        - ResourceCount: 4448496671015290240
          UpdatedBy: Anonymous
          UpdatedReason: Customer requested termination.
          WorkflowType: Service deployment.
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          cloudProvider: aws
          endTime: 2020-01-01T00:01:00Z
          gcpProjectID: my-project
          id: submit-create-instance-plan-instance-50h74sj46
          manualOverride:
            setAt: 2020-01-01T00:00:00Z
            setterUserId: user-12345678
            workflowId: wf-12345678
          orgName: my-org
          parentId: Itaque ipsa provident nihil cupiditate modi mollitia.
          planType: my-plan
          servicePlanName: my-product-tier-plan
          startTime: 2020-01-01T00:00:00Z
          status: IN_PROGRESS
        - ResourceCount: 4448496671015290240
          UpdatedBy: Anonymous
          UpdatedReason: Customer requested termination.
          WorkflowType: Service deployment.
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          cloudProvider: aws
          endTime: 2020-01-01T00:01:00Z
          gcpProjectID: my-project
          id: submit-create-instance-plan-instance-50h74sj46
          manualOverride:
            setAt: 2020-01-01T00:00:00Z
            setterUserId: user-12345678
            workflowId: wf-12345678
          orgName: my-org
          parentId: Itaque ipsa provident nihil cupiditate modi mollitia.
          planType: my-plan
          servicePlanName: my-product-tier-plan
          startTime: 2020-01-01T00:00:00Z
          status: IN_PROGRESS
        - ResourceCount: 4448496671015290240
          UpdatedBy: Anonymous
          UpdatedReason: Customer requested termination.
          WorkflowType: Service deployment.
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          cloudProvider: aws
          endTime: 2020-01-01T00:01:00Z
          gcpProjectID: my-project
          id: submit-create-instance-plan-instance-50h74sj46
          manualOverride:
            setAt: 2020-01-01T00:00:00Z
            setterUserId: user-12345678
            workflowId: wf-12345678
          orgName: my-org
          parentId: Itaque ipsa provident nihil cupiditate modi mollitia.
          planType: my-plan
          servicePlanName: my-product-tier-plan
          startTime: 2020-01-01T00:00:00Z
          status: IN_PROGRESS
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        workflows:
          description: List of workflows.
          example:
          - ResourceCount: 4448496671015290240
            UpdatedBy: Anonymous
            UpdatedReason: Customer requested termination.
            WorkflowType: Service deployment.
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            cloudProvider: aws
            endTime: 2020-01-01T00:01:00Z
            gcpProjectID: my-project
            id: submit-create-instance-plan-instance-50h74sj46
            manualOverride:
              setAt: 2020-01-01T00:00:00Z
              setterUserId: user-12345678
              workflowId: wf-12345678
            orgName: my-org
            parentId: Itaque ipsa provident nihil cupiditate modi mollitia.
            planType: my-plan
            servicePlanName: my-product-tier-plan
            startTime: 2020-01-01T00:00:00Z
            status: IN_PROGRESS
          - ResourceCount: 4448496671015290240
            UpdatedBy: Anonymous
            UpdatedReason: Customer requested termination.
            WorkflowType: Service deployment.
            awsAccountID: "123456789012"
            azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
            cloudProvider: aws
            endTime: 2020-01-01T00:01:00Z
            gcpProjectID: my-project
            id: submit-create-instance-plan-instance-50h74sj46
            manualOverride:
              setAt: 2020-01-01T00:00:00Z
              setterUserId: user-12345678
              workflowId: wf-12345678
            orgName: my-org
            parentId: Itaque ipsa provident nihil cupiditate modi mollitia.
            planType: my-plan
            servicePlanName: my-product-tier-plan
            startTime: 2020-01-01T00:00:00Z
            status: IN_PROGRESS
          items:
            $ref: "#/components/schemas/ServiceWorkflow"
          type: array
      required:
      - environmentId
      - serviceId
      - workflows
      type: object
    ListServicesOrchestrationsRequest:
      example:
        token: i
      properties:
        token:
          description: JWT token used to perform authorization
          example: l9o
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListServicesOrchestrationsResult:
      description: List of service orchestrations
      example:
      - ServicesTopology:
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        createdAt: 2021-01-01T00:00:00Z
        id: so-12345678
        orchestrationFailedReason: Invalid DSL
        resultParams:
          param1: value1
          param2: value2
        status: PENDING
        updatedAt: 2021-01-01T00:00:00Z
      - ServicesTopology:
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        createdAt: 2021-01-01T00:00:00Z
        id: so-12345678
        orchestrationFailedReason: Invalid DSL
        resultParams:
          param1: value1
          param2: value2
        status: PENDING
        updatedAt: 2021-01-01T00:00:00Z
      - ServicesTopology:
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        createdAt: 2021-01-01T00:00:00Z
        id: so-12345678
        orchestrationFailedReason: Invalid DSL
        resultParams:
          param1: value1
          param2: value2
        status: PENDING
        updatedAt: 2021-01-01T00:00:00Z
      - ServicesTopology:
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        - dependsOnDeployment:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          failedReason: Invalid inputs
          instanceDeploymentAlias: instanceDeploymentAlias
          instanceId: i-12345678
          serviceId: s-12345678
          status: PENDING
          statusMessage: Creating deployment
          subscriptionId: Ab veritatis rerum quam voluptates.
        createdAt: 2021-01-01T00:00:00Z
        id: so-12345678
        orchestrationFailedReason: Invalid DSL
        resultParams:
          param1: value1
          param2: value2
        status: PENDING
        updatedAt: 2021-01-01T00:00:00Z
      items:
        $ref: "#/components/schemas/DescribeServicesOrchestrationResult"
      type: array
    ListSubscriptionRequestsRequest:
      example:
        status: PENDING
        token: od
      properties:
        status:
          description: The status of the subscription request
          example: PENDING|APPROVED|DENIED|CANCELLED
          type: string
        token:
          description: JWT token used to perform authorization
          example: hau
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListSubscriptionRequestsResult:
      example:
        ids:
        - subr-12345678
        - subr-abcdefgh
        - subr-1234efgh
        nextPageToken: next-token
        subscriptionRequests:
        - createdAt: 2019-01-01T00:00:00Z
          id: subr-12345678
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          rootUserEmail: abc@gmail.com
          rootUserId: org-12345678
          rootUserName: John Doe
          serviceId: s-12345678
          serviceLogoURL: Est odit.
          serviceName: MySQL multi-writer service
          status: PENDING
          updatedAt: 2019-01-01T00:00:00Z
          updatedByUserId: user-12345678
          updatedByUserName: John Doe
        - createdAt: 2019-01-01T00:00:00Z
          id: subr-12345678
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          rootUserEmail: abc@gmail.com
          rootUserId: org-12345678
          rootUserName: John Doe
          serviceId: s-12345678
          serviceLogoURL: Est odit.
          serviceName: MySQL multi-writer service
          status: PENDING
          updatedAt: 2019-01-01T00:00:00Z
          updatedByUserId: user-12345678
          updatedByUserName: John Doe
        - createdAt: 2019-01-01T00:00:00Z
          id: subr-12345678
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          rootUserEmail: abc@gmail.com
          rootUserId: org-12345678
          rootUserName: John Doe
          serviceId: s-12345678
          serviceLogoURL: Est odit.
          serviceName: MySQL multi-writer service
          status: PENDING
          updatedAt: 2019-01-01T00:00:00Z
          updatedByUserId: user-12345678
          updatedByUserName: John Doe
      properties:
        ids:
          description: List of subscription request IDs
          example:
          - subr-12345678
          - subr-abcdefgh
          - subr-1234efgh
          items:
            description: ID of a Subscription Request
            example: Magnam qui minus maxime qui quo aperiam.
            type: string
          type: array
        nextPageToken:
          description: The next token to use when listing subscription requests
          example: next-token
          type: string
        subscriptionRequests:
          description: List of subscription requests
          example:
          - createdAt: 2019-01-01T00:00:00Z
            id: subr-12345678
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            rootUserEmail: abc@gmail.com
            rootUserId: org-12345678
            rootUserName: John Doe
            serviceId: s-12345678
            serviceLogoURL: Est odit.
            serviceName: MySQL multi-writer service
            status: PENDING
            updatedAt: 2019-01-01T00:00:00Z
            updatedByUserId: user-12345678
            updatedByUserName: John Doe
          - createdAt: 2019-01-01T00:00:00Z
            id: subr-12345678
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            rootUserEmail: abc@gmail.com
            rootUserId: org-12345678
            rootUserName: John Doe
            serviceId: s-12345678
            serviceLogoURL: Est odit.
            serviceName: MySQL multi-writer service
            status: PENDING
            updatedAt: 2019-01-01T00:00:00Z
            updatedByUserId: user-12345678
            updatedByUserName: John Doe
          - createdAt: 2019-01-01T00:00:00Z
            id: subr-12345678
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            rootUserEmail: abc@gmail.com
            rootUserId: org-12345678
            rootUserName: John Doe
            serviceId: s-12345678
            serviceLogoURL: Est odit.
            serviceName: MySQL multi-writer service
            status: PENDING
            updatedAt: 2019-01-01T00:00:00Z
            updatedByUserId: user-12345678
            updatedByUserName: John Doe
          items:
            $ref: "#/components/schemas/DescribeSubscriptionRequestResult"
          type: array
      required:
      - ids
      type: object
    ListSubscriptionsRequest:
      example:
        environmentType: DEV
        serviceId: service-12345678
        token: "3"
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: nl
          minLength: 1
          type: string
      required:
      - token
      type: object
    ListSubscriptionsResult:
      example:
        ids:
        - sub-12345678
        - sub-abcdefgh
        - sub-1234efgh
        nextPageToken: next-token
        subscriptions:
        - accountConfigIdentityId: org-12345678
          allowCreatesWhenPaymentNotConfigured: true
          cloudProviderNames:
          - aws
          - gcp
          createdAt: 2019-01-01T00:00:00Z
          defaultSubscription: true
          id: sub-12345678
          maxNumberOfInstances: 10
          paymentMethodConfigured: true
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          roleType: root
          rootUserId: user-12345678
          serviceId: s-12345678
          serviceLogoURL: Dolorum odit vero qui atque.
          serviceName: MySQL multi-writer service
          serviceOrgId: org-12345678
          serviceOrgName: Omnistrate
          status: ACTIVE
          subscriptionOwnerName: John Doe
        - accountConfigIdentityId: org-12345678
          allowCreatesWhenPaymentNotConfigured: true
          cloudProviderNames:
          - aws
          - gcp
          createdAt: 2019-01-01T00:00:00Z
          defaultSubscription: true
          id: sub-12345678
          maxNumberOfInstances: 10
          paymentMethodConfigured: true
          productTierId: pt-12345678
          productTierName: Omnistrate Multi Tenancy
          roleType: root
          rootUserId: user-12345678
          serviceId: s-12345678
          serviceLogoURL: Dolorum odit vero qui atque.
          serviceName: MySQL multi-writer service
          serviceOrgId: org-12345678
          serviceOrgName: Omnistrate
          status: ACTIVE
          subscriptionOwnerName: John Doe
      properties:
        ids:
          description: List of subscription IDs
          example:
          - sub-12345678
          - sub-abcdefgh
          - sub-1234efgh
          items:
            description: ID of a Subscription
            example: Et laudantium dolor rerum et et.
            type: string
          type: array
        nextPageToken:
          description: The next token to use when listing subscriptions
          example: next-token
          type: string
        subscriptions:
          description: List of subscriptions
          example:
          - accountConfigIdentityId: org-12345678
            allowCreatesWhenPaymentNotConfigured: true
            cloudProviderNames:
            - aws
            - gcp
            createdAt: 2019-01-01T00:00:00Z
            defaultSubscription: true
            id: sub-12345678
            maxNumberOfInstances: 10
            paymentMethodConfigured: true
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            roleType: root
            rootUserId: user-12345678
            serviceId: s-12345678
            serviceLogoURL: Dolorum odit vero qui atque.
            serviceName: MySQL multi-writer service
            serviceOrgId: org-12345678
            serviceOrgName: Omnistrate
            status: ACTIVE
            subscriptionOwnerName: John Doe
          - accountConfigIdentityId: org-12345678
            allowCreatesWhenPaymentNotConfigured: true
            cloudProviderNames:
            - aws
            - gcp
            createdAt: 2019-01-01T00:00:00Z
            defaultSubscription: true
            id: sub-12345678
            maxNumberOfInstances: 10
            paymentMethodConfigured: true
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            roleType: root
            rootUserId: user-12345678
            serviceId: s-12345678
            serviceLogoURL: Dolorum odit vero qui atque.
            serviceName: MySQL multi-writer service
            serviceOrgId: org-12345678
            serviceOrgName: Omnistrate
            status: ACTIVE
            subscriptionOwnerName: John Doe
          - accountConfigIdentityId: org-12345678
            allowCreatesWhenPaymentNotConfigured: true
            cloudProviderNames:
            - aws
            - gcp
            createdAt: 2019-01-01T00:00:00Z
            defaultSubscription: true
            id: sub-12345678
            maxNumberOfInstances: 10
            paymentMethodConfigured: true
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            roleType: root
            rootUserId: user-12345678
            serviceId: s-12345678
            serviceLogoURL: Dolorum odit vero qui atque.
            serviceName: MySQL multi-writer service
            serviceOrgId: org-12345678
            serviceOrgName: Omnistrate
            status: ACTIVE
            subscriptionOwnerName: John Doe
          - accountConfigIdentityId: org-12345678
            allowCreatesWhenPaymentNotConfigured: true
            cloudProviderNames:
            - aws
            - gcp
            createdAt: 2019-01-01T00:00:00Z
            defaultSubscription: true
            id: sub-12345678
            maxNumberOfInstances: 10
            paymentMethodConfigured: true
            productTierId: pt-12345678
            productTierName: Omnistrate Multi Tenancy
            roleType: root
            rootUserId: user-12345678
            serviceId: s-12345678
            serviceLogoURL: Dolorum odit vero qui atque.
            serviceName: MySQL multi-writer service
            serviceOrgId: org-12345678
            serviceOrgName: Omnistrate
            status: ACTIVE
            subscriptionOwnerName: John Doe
          items:
            $ref: "#/components/schemas/DescribeSubscriptionResult"
          type: array
      required:
      - ids
      type: object
    ListUpgradePathsRequest:
      example:
        nextPageToken: token
        pageSize: 10
        productTierId: pt-12345678
        serviceId: s-12345678
        sourceProductTierVersion: "1.0"
        status: COMPLETE
        targetProductTierVersion: "2.0"
        token: xua
        type: Major
      properties:
        nextPageToken:
          description: The next token to use for pagination
          example: token
          type: string
        pageSize:
          description: The number of resources to return per page
          example: 10
          format: int64
          type: integer
        productTierId:
          description: ID of a Product Tier
          example: Provident hic.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceProductTierVersion:
          description: The source product tier version of the upgrade path.
          example: "1.0"
          type: string
        status:
          description: The status of the upgrade path.
          example: IN_PROGRESS|COMPLETE|SCHEDULED|PENDING|FAILED|PAUSED|CANCELLED
          type: string
        targetProductTierVersion:
          description: The target product tier version of the upgrade path.
          example: "2.0"
          type: string
        token:
          description: JWT token used to perform authorization
          example: guq
          minLength: 1
          type: string
        type:
          description: The type of the upgrade path.
          example: Major|Incremental|UserDefined
          type: string
      required:
      - productTierId
      - serviceId
      - token
      type: object
    ListUpgradePathsResult:
      example:
        nextPageToken: next-token
        upgradePaths:
        - completedAt: 2020-01-01T00:00:00Z
          completedCount: 2
          createdAt: 2020-01-01T00:00:00Z
          createdBy: John Doe
          failedCount: 4
          inProgressCount: 7
          lastModifiedBy: John Doe
          lastRequestedAction: pause|cancel|resume|skip-instances|notify-customer
          notifyCustomer: true
          pendingCount: 3
          plannedExecutionDate: 2020-01-01
          productTierId: pt-12345678
          releasedAt: 2020-01-01T00:00:00Z
          scheduledCount: 10
          serviceId: s-12345678
          skippedCount: 0
          sourceVersion: "1.0"
          sourceVersionName: Aut quibusdam officiis placeat adipisci totam.
          status: COMPLETE
          targetVersion: "2.0"
          targetVersionName: Dolor ipsum quam voluptas minus doloribus.
          totalCount: 16
          type: Major
          updatedAt: 2020-01-01T00:00:00Z
          upgradePathId: up-12345678
        - completedAt: 2020-01-01T00:00:00Z
          completedCount: 2
          createdAt: 2020-01-01T00:00:00Z
          createdBy: John Doe
          failedCount: 4
          inProgressCount: 7
          lastModifiedBy: John Doe
          lastRequestedAction: pause|cancel|resume|skip-instances|notify-customer
          notifyCustomer: true
          pendingCount: 3
          plannedExecutionDate: 2020-01-01
          productTierId: pt-12345678
          releasedAt: 2020-01-01T00:00:00Z
          scheduledCount: 10
          serviceId: s-12345678
          skippedCount: 0
          sourceVersion: "1.0"
          sourceVersionName: Aut quibusdam officiis placeat adipisci totam.
          status: COMPLETE
          targetVersion: "2.0"
          targetVersionName: Dolor ipsum quam voluptas minus doloribus.
          totalCount: 16
          type: Major
          updatedAt: 2020-01-01T00:00:00Z
          upgradePathId: up-12345678
      properties:
        nextPageToken:
          description: Token to use for the next request
          example: next-token
          type: string
        upgradePaths:
          description: The list of upgrade paths.
          example:
          - completedAt: 2020-01-01T00:00:00Z
            completedCount: 2
            createdAt: 2020-01-01T00:00:00Z
            createdBy: John Doe
            failedCount: 4
            inProgressCount: 7
            lastModifiedBy: John Doe
            lastRequestedAction: pause|cancel|resume|skip-instances|notify-customer
            notifyCustomer: true
            pendingCount: 3
            plannedExecutionDate: 2020-01-01
            productTierId: pt-12345678
            releasedAt: 2020-01-01T00:00:00Z
            scheduledCount: 10
            serviceId: s-12345678
            skippedCount: 0
            sourceVersion: "1.0"
            sourceVersionName: Aut quibusdam officiis placeat adipisci totam.
            status: COMPLETE
            targetVersion: "2.0"
            targetVersionName: Dolor ipsum quam voluptas minus doloribus.
            totalCount: 16
            type: Major
            updatedAt: 2020-01-01T00:00:00Z
            upgradePathId: up-12345678
          - completedAt: 2020-01-01T00:00:00Z
            completedCount: 2
            createdAt: 2020-01-01T00:00:00Z
            createdBy: John Doe
            failedCount: 4
            inProgressCount: 7
            lastModifiedBy: John Doe
            lastRequestedAction: pause|cancel|resume|skip-instances|notify-customer
            notifyCustomer: true
            pendingCount: 3
            plannedExecutionDate: 2020-01-01
            productTierId: pt-12345678
            releasedAt: 2020-01-01T00:00:00Z
            scheduledCount: 10
            serviceId: s-12345678
            skippedCount: 0
            sourceVersion: "1.0"
            sourceVersionName: Aut quibusdam officiis placeat adipisci totam.
            status: COMPLETE
            targetVersion: "2.0"
            targetVersionName: Dolor ipsum quam voluptas minus doloribus.
            totalCount: 16
            type: Major
            updatedAt: 2020-01-01T00:00:00Z
            upgradePathId: up-12345678
          - completedAt: 2020-01-01T00:00:00Z
            completedCount: 2
            createdAt: 2020-01-01T00:00:00Z
            createdBy: John Doe
            failedCount: 4
            inProgressCount: 7
            lastModifiedBy: John Doe
            lastRequestedAction: pause|cancel|resume|skip-instances|notify-customer
            notifyCustomer: true
            pendingCount: 3
            plannedExecutionDate: 2020-01-01
            productTierId: pt-12345678
            releasedAt: 2020-01-01T00:00:00Z
            scheduledCount: 10
            serviceId: s-12345678
            skippedCount: 0
            sourceVersion: "1.0"
            sourceVersionName: Aut quibusdam officiis placeat adipisci totam.
            status: COMPLETE
            targetVersion: "2.0"
            targetVersionName: Dolor ipsum quam voluptas minus doloribus.
            totalCount: 16
            type: Major
            updatedAt: 2020-01-01T00:00:00Z
            upgradePathId: up-12345678
          items:
            $ref: "#/components/schemas/UpgradePath"
          type: array
      required:
      - upgradePaths
      type: object
    ListVUnitsRequest:
      example:
        cloudProvider: aws
        region: us-west-2
        serviceId: s-12345678
        serviceModelId: sm-12345678
        token: k0
      properties:
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        region:
          description: Region code specific to the cloud-provider
          example: us-west-2
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Et quis nobis recusandae error sunt.
          type: string
        token:
          description: JWT token used to perform authorization
          example: rk
          minLength: 1
          type: string
      required:
      - cloudProvider
      - region
      - serviceId
      - serviceModelId
      - token
      type: object
    ListVUnitsResult:
      example:
        ids:
          aws:
          - vu-12345678
          - vu-abcdefgh
          gcp:
          - vu-1234efgh
        nextPageToken: next-token
      properties:
        ids:
          additionalProperties: true
          description: List of VUnit IDs per Cloud provider
          example:
            aws:
            - vu-12345678
            - vu-abcdefgh
            gcp:
            - vu-1234efgh
          type: object
        nextPageToken:
          description: Next page token
          example: next-token
          type: string
      type: object
    LoginWithIdentityProviderRequest:
      example:
        authorizationCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        deviceCode: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
        identityProviderName: Google
        invitedEmail: abc@gmail.com
        legalCompanyName: mywebsite
        redirectUri: https://www.example/redirect
      properties:
        authorizationCode:
          description: The authorization code from the Identity Provider
          example: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
          type: string
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        deviceCode:
          description: The device code from the Identity Provider
          example: 4/P7q7W91a-oMsCeLvIaQm6bTrgtp7&
          type: string
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        invitedEmail:
          description: Email address that the user was invited with
          example: abc@gmail.com
          format: email
          type: string
        legalCompanyName:
          example: mywebsite
          minLength: 1
          type: string
        redirectUri:
          description: The redirect URI used to get the authorization code
          example: https://www.example/redirect
          type: string
      required:
      - identityProviderName
      type: object
    LoginWithIdentityProviderResult:
      example:
        jwtToken: ""
      properties:
        jwtToken:
          description: The jwt token
          example: ""
          type: string
      required:
      - jwtToken
      type: object
    LogoutRequest:
      example:
        token: nil
      properties:
        token:
          description: JWT token used to perform authorization
          example: dg
          minLength: 1
          type: string
      required:
      - token
      type: object
    ManageUpgradePathLifecycleRequest:
      example:
        action: pause|cancel|resume|skip-instances|notify-customer
        actionPayload:
          Commodi minus incidunt hic ut totam ipsam.: Fugiat dolor voluptates.
          Rerum illum qui excepturi culpa rerum.: Iste molestias nihil praesentium.
          Ut nulla hic.: Aut ut id.
        productTierId: pt-12345678
        serviceId: s-12345678
        token: g
        upgradePathId: up-12345678
      properties:
        action:
          description: The action to perform on an ongoing resource workflow
          example: pause|cancel|resume|skip-instances|notify-customer
          type: string
        actionPayload:
          additionalProperties: true
          description: The action payload to perform on the upgrade path.
          example:
            Consequatur excepturi nulla earum blanditiis ad.: Quos temporibus expedita
              voluptatibus neque possimus molestias.
            Quibusdam beatae at exercitationem.: Fugit inventore voluptas sunt ipsam
              qui.
          type: object
        productTierId:
          description: ID of a Product Tier
          example: Veniam culpa.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: l
          minLength: 1
          type: string
        upgradePathId:
          description: ID of an Upgrade Path
          example: Corporis pariatur nemo sit saepe illo odio.
          type: string
      required:
      - action
      - productTierId
      - serviceId
      - token
      - upgradePathId
      type: object
    ManageUpgradePathLifecycleRequest2:
      example:
        action: Fuga quia iste autem.
        actionPayload:
          Dicta non et ex.: Eos in praesentium consectetur distinctio.
          Maiores id blanditiis est dolorem.: Adipisci et harum laborum dolores.
      properties:
        action:
          description: The action to perform on the upgrade path.
          example: Et qui.
          type: string
        actionPayload:
          additionalProperties: true
          description: The action payload to perform on the upgrade path.
          example:
            Est ex ad in quos est fuga.: Itaque nisi ratione iusto aut.
            Fuga dolorem error.: Vel possimus sit porro laudantium.
            Mollitia accusantium iusto.: Rerum et quae.
          type: object
      required:
      - action
      type: object
    ManualOverride:
      example:
        setAt: 2020-01-01T00:00:00Z
        setterUserId: user-12345678
        workflowId: wf-12345678
      properties:
        setAt:
          description: The timestamp when the manual override was set.
          example: 2020-01-01T00:00:00Z
          type: string
        setterUserId:
          description: ID of a User
          example: Dolorum fuga dignissimos.
          type: string
        workflowId:
          description: ID of a Workflow
          example: Officia facere inventore unde nihil.
          type: string
      type: object
    ModifyServiceProviderOrganizationRequest:
      example:
        DeploymentCellConfigurations:
          PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL:
            DeploymentCellConfigurationPerCloudProvider:
              aws|azure|gcp|all:
                Amenities:
                - Description: Ensures high availability across multiple zones.
                  IsManaged: true
                  Name: Prometheus
                  Properties:
                    Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
                    Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero
                      et tenetur.
                  Type: HelmChart
                - Description: Ensures high availability across multiple zones.
                  IsManaged: true
                  Name: Prometheus
                  Properties:
                    Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
                    Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero
                      et tenetur.
                  Type: HelmChart
                - Description: Ensures high availability across multiple zones.
                  IsManaged: true
                  Name: Prometheus
                  Properties:
                    Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
                    Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero
                      et tenetur.
                  Type: HelmChart
        token: "0"
      properties:
        DeploymentCellConfigurations:
          additionalProperties: true
          description: The default deployment cell configurations for the organization
            per environment.
          example:
            PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL:
              DeploymentCellConfigurationPerCloudProvider:
                aws|azure|gcp|all:
                  Amenities:
                  - Description: Ensures high availability across multiple zones.
                    IsManaged: true
                    Name: Prometheus
                    Properties:
                      Architecto culpa assumenda.: Est ducimus quis perferendis et
                        sit.
                      Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero
                        et tenetur.
                    Type: HelmChart
                  - Description: Ensures high availability across multiple zones.
                    IsManaged: true
                    Name: Prometheus
                    Properties:
                      Architecto culpa assumenda.: Est ducimus quis perferendis et
                        sit.
                      Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero
                        et tenetur.
                    Type: HelmChart
                  - Description: Ensures high availability across multiple zones.
                    IsManaged: true
                    Name: Prometheus
                    Properties:
                      Architecto culpa assumenda.: Est ducimus quis perferendis et
                        sit.
                      Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero
                        et tenetur.
                    Type: HelmChart
          type: object
        token:
          description: JWT token used to perform authorization
          example: qy
          minLength: 1
          type: string
      required:
      - token
      type: object
    ModifyServicesOrchestrationRequest:
      example:
        id: so-12345678
        orchestrationModifyDSL: Culpa ut impedit quo hic sed.
        token: "1"
      properties:
        id:
          description: ID of a Services Orchestration
          example: Dolor cumque sit voluptatem deleniti.
          type: string
        orchestrationModifyDSL:
          description: base64 encoded content of services orchestration modify DSL
          example: Explicabo aut.
          type: string
        token:
          description: JWT token used to perform authorization
          example: 02v
          minLength: 1
          type: string
      required:
      - id
      - orchestrationModifyDSL
      - token
      type: object
    NodeHealthSummary:
      example:
        availabilityZone: us-east-2a
        connectivityStatus: HEALTHY
        diskHealth: HEALTHY
        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
        integrationsHealth:
          CustomerObservabilityHealth: HEALTHY
          InternalObservabilityHealth: HEALTHY
        loadStatus: LOAD_NORMAL
        nodeHealth: HEALTHY
        nodeName: postgres-0
        ports:
        - 80
        - 443
        processHealth: HEALTHY
        processLiveness: HEALTHY
        status: HEALTHY
      properties:
        availabilityZone:
          description: The availability zone of the node
          example: us-east-2a
          type: string
        connectivityStatus:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        diskHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        endpoint:
          description: The endpoint of the node
          example: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          type: string
        integrationsHealth:
          $ref: "#/components/schemas/IntegrationsHealth"
        loadStatus:
          description: The load status of a pod
          example: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          type: string
        nodeHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        nodeName:
          description: The name of the node
          example: postgres-0
          type: string
        ports:
          description: The ports that this node exposes
          example:
          - 80
          - 443
          items:
            example: 2177908204423866364
            format: int64
            type: integer
          type: array
        processHealth:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        processLiveness:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        status:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
      type: object
    NodeNetworkTopologyResult:
      example:
        availabilityZone: us-east-2a
        detailedHealth:
          ConnectivityStatus: UNHEALTHY
          DiskHealth: UNKNOWN
          LoadStatus: LOAD_NORMAL
          NodeHealth: HEALTHY
          ProcessHealth: HEALTHY
          ProcessLiveness: HEALTHY
        endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
        healthStatus: HEALTHY
        id: primary-0
        kubernetesDashboardEndpoint:
          dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
          deploymentCellID: hc-12345678
        ports:
        - 80
        - 443
        status: RUNNING
        storageSize: 10
        vmInfo:
          architecture: amd64
          azCode: us-east-1a
          azID: use1-az1
          externalIP: 3.44.113.6
          instanceType: t2.small
          internalIP: 192.168.1.4
          k8sNodeName: my-k8s-node
          kernelVersion: 5.10.228
          kubeletVersion: 1.31.3
          os: linux
          providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
      properties:
        availabilityZone:
          description: The availability zone of the node
          example: us-east-2a
          type: string
        detailedHealth:
          $ref: "#/components/schemas/DetailedNodeHealthResult"
        endpoint:
          description: The endpoint of the node
          example: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          type: string
        healthStatus:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
        id:
          description: The ID of the node
          example: primary-0
          type: string
        kubernetesDashboardEndpoint:
          $ref: "#/components/schemas/KubernetesDashboardEndpoint"
        ports:
          description: The ports that this node exposes
          example:
          - 80
          - 443
          items:
            example: 5126846204249772032
            format: int64
            type: integer
          type: array
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        storageSize:
          description: The storage size of the node in GiB
          example: 10
          format: int64
          type: integer
        vmInfo:
          $ref: "#/components/schemas/NodeVMInfoResult"
      type: object
    NodeVMInfoResult:
      example:
        architecture: amd64
        azCode: us-east-1a
        azID: use1-az1
        externalIP: 3.44.53.111
        instanceType: t2.small
        internalIP: 192.168.1.4
        k8sNodeName: my-k8s-node
        kernelVersion: 5.10.228
        kubeletVersion: 1.31.3
        os: linux
        providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
      properties:
        architecture:
          description: The architecture of the VM
          example: amd64
          type: string
        azCode:
          description: The availability zone code of the VM
          example: us-east-1a
          type: string
        azID:
          description: The availability zone ID of the VM
          example: use1-az1
          type: string
        externalIP:
          description: The external IP of the VM
          example: 3.44.53.111
          type: string
        instanceType:
          description: The instance type of the VM
          example: t2.small
          type: string
        internalIP:
          description: The internal IP of the VM
          example: 192.168.1.4
          type: string
        k8sNodeName:
          description: The k8s node name of the VM
          example: my-k8s-node
          type: string
        kernelVersion:
          description: The kernel version of the VM
          example: 5.10.228
          type: string
        kubeletVersion:
          description: The kubelet version of the VM
          example: 1.31.3
          type: string
        os:
          description: The operating system of the VM
          example: linux
          type: string
        providerID:
          description: The provider ID of the VM
          example: aws:///ap-south-1b/i-06h696g4a643ahf01
          type: string
      required:
      - architecture
      - azCode
      - instanceType
      - internalIP
      - k8sNodeName
      - kubeletVersion
      - os
      - providerID
      type: object
    NotificationSearchRecord:
      example:
        description: Deployment completed
        id: event-12345678
        name: Deployment
        priority: Low
        resourceName: postgres
        serviceEnvironmentID: se-12345678
        serviceEnvironmentName: prod
        serviceEnvironmentType: PROD
        serviceID: s-12345678
        serviceName: MyService
        time: 2020-01-01T00:01:00Z
        type: SuccessfulDeployment
      properties:
        description:
          description: The notification description.
          example: Deployment completed
          type: string
        id:
          description: The Event ID of the notification.
          example: event-12345678
          type: string
        name:
          description: The notification name.
          example: Deployment
          type: string
        priority:
          description: The priority of the notification.
          example: Low
          type: string
        resourceName:
          description: The resource name for the notification.
          example: postgres
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceEnvironmentName:
          description: The service environment name of the notification.
          example: prod
          type: string
        serviceEnvironmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        serviceName:
          description: The service name of the notification.
          example: MyService
          type: string
        time:
          description: The event time of the notification.
          example: 2020-01-01T00:01:00Z
          type: string
        type:
          description: The notification type.
          example: SuccessfulDeployment
          type: string
      required:
      - description
      - id
      - name
      - priority
      - resourceName
      - serviceEnvironmentID
      - serviceEnvironmentName
      - serviceID
      - serviceName
      - time
      - type
      type: object
    OmnistrateError:
      example:
        code: 12-999
        message: Required field `x` was not provided in the request
        name: missing_field
      properties:
        code:
          description: Application-specific error code
          example: 12-999
          type: string
        message:
          description: More context on the error that occurred
          example: Required field `x` was not provided in the request
          type: string
        name:
          description: Name of the error
          example: missing_field
          type: string
      required:
      - code
      - message
      - name
      type: object
    OmnistrateServiceHealthResult:
      example:
        status: RUNNING
      properties:
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
      required:
      - status
      type: object
    OmnistrateServiceVersionResult:
      example:
        apiVersion: "1.0"
        buildCommitSHA: 1234567890abcdef1234567890abcdef12345678
        buildTimestamp: 2020-01-01T00:00:00Z
      properties:
        apiVersion:
          description: Version of the Entity to operate on
          example: "1.0"
          minLength: 1
          type: string
        buildCommitSHA:
          description: The commit hash of the build
          example: 1234567890abcdef1234567890abcdef12345678
          type: string
        buildTimestamp:
          description: The timestamp of the build
          example: 2020-01-01T00:00:00Z
          type: string
      required:
      - apiVersion
      - buildCommitSHA
      - buildTimestamp
      type: object
    OnboardingStage:
      example:
        name: ConfigureAccounts|BuildSaaS|LaunchSaaS
        status: NOT_STARTED|COMPLETE|SKIPPED
      properties:
        name:
          description: The name of the stage.
          example: ConfigureAccounts|BuildSaaS|LaunchSaaS
          type: string
        status:
          description: The status of the stage.
          example: NOT_STARTED|COMPLETE|SKIPPED
          type: string
      required:
      - name
      type: object
    OneOffPatchResourceInstanceRequest:
      example:
        environmentId: se-12345678
        instanceId: instance-12345678
        resourceId: r-12345678
        resourceOverrideConfiguration:
          mysql:
            helmChartValues:
              image:
                repository: mysql
                tag: "8.0"
              replicaCount: 3
              service:
                type: LoadBalancer
          redis:
            helmChartValues:
              image:
                repository: redis
                tag: "6.0"
              replicaCount: 2
        serviceId: s-12345678
        targetTierVersion: "2.0"
        token: 9k
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        resourceId:
          description: ID of a resource
          example: Et doloribus asperiores voluptates optio.
          type: string
        resourceOverrideConfiguration:
          additionalProperties:
            $ref: "#/components/schemas/ResourceOneOffPatchConfigurationOverride"
          description: The resource override configuration for one-off patching.
          example:
            mysql:
              helmChartValues:
                image:
                  repository: mysql
                  tag: "8.0"
                replicaCount: 3
                service:
                  type: LoadBalancer
            redis:
              helmChartValues:
                image:
                  repository: redis
                  tag: "6.0"
                replicaCount: 2
          type: object
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        targetTierVersion:
          description: The target resource version.
          example: "2.0"
          type: string
        token:
          description: JWT token used to perform authorization
          example: k4g
          minLength: 1
          type: string
      required:
      - environmentId
      - instanceId
      - resourceId
      - serviceId
      - token
      type: object
    OneOffPatchResourceInstanceRequest2:
      example:
        resourceId: r-12345678
        resourceOverrideConfiguration:
          mysql:
            helmChartValues:
              image:
                repository: mysql
                tag: "8.0"
              replicaCount: 3
              service:
                type: LoadBalancer
          redis:
            helmChartValues:
              image:
                repository: redis
                tag: "6.0"
              replicaCount: 2
        targetTierVersion: "2.0"
      properties:
        resourceId:
          description: The resource ID.
          example: r-12345678
          type: string
        resourceOverrideConfiguration:
          additionalProperties:
            $ref: "#/components/schemas/ResourceOneOffPatchConfigurationOverride"
          description: The resource override configuration for one-off patching.
          example:
            mysql:
              helmChartValues:
                image:
                  repository: mysql
                  tag: "8.0"
                replicaCount: 3
                service:
                  type: LoadBalancer
            redis:
              helmChartValues:
                image:
                  repository: redis
                  tag: "6.0"
                replicaCount: 2
          type: object
        targetTierVersion:
          description: The target resource version.
          example: "2.0"
          type: string
      required:
      - resourceId
      type: object
    OrgUsers:
      example:
        email: abc@gmail.com
        invitedAt: 2023-01-10T00:00:00Z
        name: John Dae
        roleType: reader
        userId: user-abcd1234
      properties:
        email:
          description: The email of the user
          example: abc@gmail.com
          type: string
        invitedAt:
          description: The time when the user was invited
          example: 2023-01-10T00:00:00Z
          type: string
        name:
          description: The name of the user
          example: John Dae
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        userId:
          description: The User ID
          example: user-abcd1234
          type: string
      required:
      - email
      - invitedAt
      - name
      - roleType
      - userId
      type: object
    Organization:
      example:
        email: omnistrate-devops@examplecorp.com
        orgId: o-12345678
        orgName: Acme Corp
        orgUrl: omnistrate.com
      properties:
        email:
          description: Email address to reach for support-related queries.
          example: omnistrate-devops@examplecorp.com
          type: string
        orgId:
          description: ID of an Org
          example: Ratione omnis.
          type: string
        orgName:
          description: The organization name.
          example: Acme Corp
          type: string
        orgUrl:
          description: The organization's URL.
          example: omnistrate.com
          type: string
      type: object
    OutputParameterEntity:
      example:
        custom: false
        description: The name of the server
        displayName: Server Name
        isList: false
        key: serverName
        type: Boolean|Float64|String|JSON|Resource
      properties:
        custom:
          description: Whether the parameter is custom
          example: false
          type: boolean
        description:
          description: The parameter description
          example: The name of the server
          type: string
        displayName:
          description: The parameter display name
          example: Server Name
          type: string
        isList:
          description: Whether the parameter is a list
          example: false
          type: boolean
        key:
          description: The parameter key
          example: serverName
          type: string
        type:
          description: The parameter type
          example: Boolean|Float64|String|JSON|Resource
          type: string
      required:
      - custom
      - description
      - displayName
      - isList
      - key
      - type
      type: object
    PagerDutyConfiguration:
      example:
        integrationKey: e93facc47f2d4b2b88272b3a647afe7d-fictional-integration-key
      properties:
        integrationKey:
          description: PagerDuty API integration key
          example: e93facc47f2d4b2b88272b3a647afe7d-fictional-integration-key
          type: string
      required:
      - integrationKey
      type: object
    PerCloudProviderConfigReadiness:
      additionalProperties:
        example: Ut odio porro.
        type: string
      description: The readiness of the cloud provider configuration
      example:
        resourceA: missing terraform configuration
        resourceB: missing cloudformation configuration
      type: object
    PerCloudProviderCost:
      example:
        cloudProviderName: aws
        cost:
        - cost: 100
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          date: 2023-01-01T10:00:00Z
        - cost: 100
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          date: 2023-01-01T10:00:00Z
        - cost: 100
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          date: 2023-01-01T10:00:00Z
        - cost: 100
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          date: 2023-01-01T10:00:00Z
        totalCost: 100
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        cost:
          example:
          - cost: 100
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            date: 2023-01-01T10:00:00Z
          - cost: 100
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            date: 2023-01-01T10:00:00Z
          items:
            $ref: "#/components/schemas/CostDataPerDate"
          type: array
        totalCost:
          description: The total cost of the fleet on the cloud provider
          example: 100
          format: double
          type: number
      required:
      - cloudProviderName
      - cost
      - totalCost
      type: object
    PerDeploymentCellCost:
      example:
        cloudProviderName: aws
        cost:
        - cost: 100
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          date: 2023-01-01T10:00:00Z
        - cost: 100
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          date: 2023-01-01T10:00:00Z
        instancesCost:
        - cloudProviderName: aws
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          instanceID: instance-12345678
          isDeleted: false
          productTierID: pt-12345678
          productTierName: Standard
          productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
          regionName: us-west-2
          serviceEnvironmentID: se-12345678
          serviceID: s-12345678
          subscriptionID: sub-12345678
          totalCost: 100
          utilization: 50
        - cloudProviderName: aws
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          instanceID: instance-12345678
          isDeleted: false
          productTierID: pt-12345678
          productTierName: Standard
          productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
          regionName: us-west-2
          serviceEnvironmentID: se-12345678
          serviceID: s-12345678
          subscriptionID: sub-12345678
          totalCost: 100
          utilization: 50
        - cloudProviderName: aws
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          instanceID: instance-12345678
          isDeleted: false
          productTierID: pt-12345678
          productTierName: Standard
          productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
          regionName: us-west-2
          serviceEnvironmentID: se-12345678
          serviceID: s-12345678
          subscriptionID: sub-12345678
          totalCost: 100
          utilization: 50
        - cloudProviderName: aws
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          instanceID: instance-12345678
          isDeleted: false
          productTierID: pt-12345678
          productTierName: Standard
          productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
          regionName: us-west-2
          serviceEnvironmentID: se-12345678
          serviceID: s-12345678
          subscriptionID: sub-12345678
          totalCost: 100
          utilization: 50
        regionName: us-west-2
        totalCost: 100
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        cost:
          example:
          - cost: 100
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            date: 2023-01-01T10:00:00Z
          - cost: 100
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            date: 2023-01-01T10:00:00Z
          - cost: 100
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            date: 2023-01-01T10:00:00Z
          - cost: 100
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            date: 2023-01-01T10:00:00Z
          items:
            $ref: "#/components/schemas/CostDataPerDate"
          type: array
        instancesCost:
          example:
          - cloudProviderName: aws
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            instanceID: instance-12345678
            isDeleted: false
            productTierID: pt-12345678
            productTierName: Standard
            productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
            regionName: us-west-2
            serviceEnvironmentID: se-12345678
            serviceID: s-12345678
            subscriptionID: sub-12345678
            totalCost: 100
            utilization: 50
          - cloudProviderName: aws
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            instanceID: instance-12345678
            isDeleted: false
            productTierID: pt-12345678
            productTierName: Standard
            productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
            regionName: us-west-2
            serviceEnvironmentID: se-12345678
            serviceID: s-12345678
            subscriptionID: sub-12345678
            totalCost: 100
            utilization: 50
          - cloudProviderName: aws
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            instanceID: instance-12345678
            isDeleted: false
            productTierID: pt-12345678
            productTierName: Standard
            productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
            regionName: us-west-2
            serviceEnvironmentID: se-12345678
            serviceID: s-12345678
            subscriptionID: sub-12345678
            totalCost: 100
            utilization: 50
          - cloudProviderName: aws
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            instanceID: instance-12345678
            isDeleted: false
            productTierID: pt-12345678
            productTierName: Standard
            productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
            regionName: us-west-2
            serviceEnvironmentID: se-12345678
            serviceID: s-12345678
            subscriptionID: sub-12345678
            totalCost: 100
            utilization: 50
          items:
            $ref: "#/components/schemas/PerInstanceCost"
          type: array
        regionName:
          description: The name of the region
          example: us-west-2
          type: string
        totalCost:
          description: The total cost of the fleet in the deployment cell
          example: 100
          format: double
          type: number
      required:
      - cloudProviderName
      - cost
      - regionName
      - totalCost
      type: object
    PerInstanceCost:
      example:
        cloudProviderName: aws
        costByInstanceType:
          t2.large:
            numVMs: 5
            totalCost: 50
            totalUptimeHours: 100
          t2.micro:
            numVMs: 5
            totalCost: 50
            totalUptimeHours: 100
        instanceID: instance-12345678
        isDeleted: false
        productTierID: pt-12345678
        productTierName: Standard
        productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
        regionName: us-west-2
        serviceEnvironmentID: se-12345678
        serviceID: s-12345678
        subscriptionID: sub-12345678
        totalCost: 100
        utilization: 50
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        costByInstanceType:
          additionalProperties:
            $ref: "#/components/schemas/InstanceTypeCost"
          description: The cost of the fleet by instance type on that date
          example:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          type: object
        instanceID:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        isDeleted:
          description: Whether the instance is deleted
          example: false
          type: boolean
        productTierID:
          description: ID of a Product Tier
          example: Accusantium quo voluptatum et rerum minus alias.
          type: string
        productTierName:
          description: The name of the product tier
          example: Standard
          type: string
        productTierTenancyType:
          description: The tenancy type of the product tier
          example: OMNISTRATE_DEDICATED_TENANCY
          type: string
        regionName:
          description: The name of the region
          example: us-west-2
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        subscriptionID:
          description: ID of a Subscription
          example: Error doloremque vel sed beatae.
          type: string
        totalCost:
          description: The total cost of the instance
          example: 100
          format: double
          type: number
        utilization:
          description: Percentage of the instance resource utilization
          example: 50
          format: double
          type: number
      required:
      - cloudProviderName
      - instanceID
      - isDeleted
      - productTierID
      - productTierName
      - productTierTenancyType
      - regionName
      - serviceEnvironmentID
      - serviceID
      - subscriptionID
      - totalCost
      - utilization
      type: object
    PerRegionCost:
      example:
        cloudProviderName: aws
        cost:
        - cost: 100
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          date: 2023-01-01T10:00:00Z
        - cost: 100
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          date: 2023-01-01T10:00:00Z
        - cost: 100
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          date: 2023-01-01T10:00:00Z
        - cost: 100
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          date: 2023-01-01T10:00:00Z
        regionName: us-west-2
        totalCost: 100
      properties:
        cloudProviderName:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        cost:
          example:
          - cost: 100
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            date: 2023-01-01T10:00:00Z
          - cost: 100
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            date: 2023-01-01T10:00:00Z
          - cost: 100
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            date: 2023-01-01T10:00:00Z
          items:
            $ref: "#/components/schemas/CostDataPerDate"
          type: array
        regionName:
          description: The name of the region
          example: us-west-2
          type: string
        totalCost:
          description: The total cost of the fleet in the region
          example: 100
          format: double
          type: number
      required:
      - cloudProviderName
      - cost
      - regionName
      - totalCost
      type: object
    PerUserCost:
      example:
        cost:
        - cost: 100
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          date: 2023-01-01T10:00:00Z
        - cost: 100
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          date: 2023-01-01T10:00:00Z
        - cost: 100
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          date: 2023-01-01T10:00:00Z
        email: admin@example.com
        instancesCost:
        - cloudProviderName: aws
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          instanceID: instance-12345678
          isDeleted: false
          productTierID: pt-12345678
          productTierName: Standard
          productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
          regionName: us-west-2
          serviceEnvironmentID: se-12345678
          serviceID: s-12345678
          subscriptionID: sub-12345678
          totalCost: 100
          utilization: 50
        - cloudProviderName: aws
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          instanceID: instance-12345678
          isDeleted: false
          productTierID: pt-12345678
          productTierName: Standard
          productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
          regionName: us-west-2
          serviceEnvironmentID: se-12345678
          serviceID: s-12345678
          subscriptionID: sub-12345678
          totalCost: 100
          utilization: 50
        - cloudProviderName: aws
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          instanceID: instance-12345678
          isDeleted: false
          productTierID: pt-12345678
          productTierName: Standard
          productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
          regionName: us-west-2
          serviceEnvironmentID: se-12345678
          serviceID: s-12345678
          subscriptionID: sub-12345678
          totalCost: 100
          utilization: 50
        - cloudProviderName: aws
          costByInstanceType:
            t2.large:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
            t2.micro:
              numVMs: 5
              totalCost: 50
              totalUptimeHours: 100
          instanceID: instance-12345678
          isDeleted: false
          productTierID: pt-12345678
          productTierName: Standard
          productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
          regionName: us-west-2
          serviceEnvironmentID: se-12345678
          serviceID: s-12345678
          subscriptionID: sub-12345678
          totalCost: 100
          utilization: 50
        orgID: org-12345678
        orgName: Acme Corp
        totalCost: 100
        userName: John Doe
      properties:
        cost:
          example:
          - cost: 100
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            date: 2023-01-01T10:00:00Z
          - cost: 100
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            date: 2023-01-01T10:00:00Z
          - cost: 100
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            date: 2023-01-01T10:00:00Z
          items:
            $ref: "#/components/schemas/CostDataPerDate"
          type: array
        email:
          description: The email of the user
          example: admin@example.com
          type: string
        instancesCost:
          example:
          - cloudProviderName: aws
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            instanceID: instance-12345678
            isDeleted: false
            productTierID: pt-12345678
            productTierName: Standard
            productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
            regionName: us-west-2
            serviceEnvironmentID: se-12345678
            serviceID: s-12345678
            subscriptionID: sub-12345678
            totalCost: 100
            utilization: 50
          - cloudProviderName: aws
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            instanceID: instance-12345678
            isDeleted: false
            productTierID: pt-12345678
            productTierName: Standard
            productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
            regionName: us-west-2
            serviceEnvironmentID: se-12345678
            serviceID: s-12345678
            subscriptionID: sub-12345678
            totalCost: 100
            utilization: 50
          - cloudProviderName: aws
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            instanceID: instance-12345678
            isDeleted: false
            productTierID: pt-12345678
            productTierName: Standard
            productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
            regionName: us-west-2
            serviceEnvironmentID: se-12345678
            serviceID: s-12345678
            subscriptionID: sub-12345678
            totalCost: 100
            utilization: 50
          - cloudProviderName: aws
            costByInstanceType:
              t2.large:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
              t2.micro:
                numVMs: 5
                totalCost: 50
                totalUptimeHours: 100
            instanceID: instance-12345678
            isDeleted: false
            productTierID: pt-12345678
            productTierName: Standard
            productTierTenancyType: OMNISTRATE_DEDICATED_TENANCY
            regionName: us-west-2
            serviceEnvironmentID: se-12345678
            serviceID: s-12345678
            subscriptionID: sub-12345678
            totalCost: 100
            utilization: 50
          items:
            $ref: "#/components/schemas/PerInstanceCost"
          type: array
        orgID:
          description: ID of an Org
          example: Consequatur esse.
          type: string
        orgName:
          description: The name of the organization
          example: Acme Corp
          type: string
        totalCost:
          description: The total cost of the user
          example: 100
          format: double
          type: number
        userName:
          description: The name of the user
          example: John Doe
          type: string
      required:
      - cost
      - email
      - orgID
      - orgName
      - totalCost
      - userName
      type: object
    PodEvent:
      example:
        FirstTimestamp: 2025-10-01T12:00:00Z
        LastTimestamp: 2025-10-01T12:05:00Z
        Message: Pod scheduled successfully
        NumberOfOccurrences: 3
        Reason: Scheduled
      properties:
        FirstTimestamp:
          description: The first timestamp when the pod event occurred
          example: 2025-10-01T12:00:00Z
          type: string
        LastTimestamp:
          description: The last timestamp when the pod event occurred
          example: 2025-10-01T12:05:00Z
          type: string
        Message:
          description: The message associated with the pod event
          example: Pod scheduled successfully
          type: string
        NumberOfOccurrences:
          description: The number of occurrences of the pod event
          example: 3
          format: int64
          type: integer
        Reason:
          description: The reason for the pod event
          example: Scheduled
          type: string
      type: object
    ProductTierFeatureDetail:
      example:
        configuration:
          provider: native
        feature: LOGS
        scope: INTERNAL
      properties:
        configuration:
          additionalProperties: true
          description: The configuration parameters of the product tier feature
          example:
            provider: native
          type: object
        feature:
          description: ProductTierFeatureType is to enable / disable features per
            product tier
          example: LOGS|METRICS|CLOUD_INSURANCE|MARKETPLACE|OPERATIONAL_STATUS|COMPLIANCE|APPLICATION_SECURITY
          type: string
        scope:
          description: ProductTierFeatureScope defines scope of the feature within
            product tier
          example: INTERNAL|CUSTOMER
          type: string
      type: object
    PromoteServiceEnvironmentRequest:
      example:
        id: se-12345678
        serviceId: s-12345678
        token: l
      properties:
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: gqr
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    PromoteServiceEnvironmentStatusRequest:
      example:
        id: se-12345678
        serviceId: s-12345678
        token: sbc
      properties:
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: og
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    PromoteServiceEnvironmentStatusResult:
      example:
      - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
        targetEnvironmentID: se-12345678
      - status: IN_SYNC|OUT_OF_SYNC|UNKNOWN
        targetEnvironmentID: se-12345678
      items:
        $ref: "#/components/schemas/EnvironmentPromotionStatus"
      type: array
    ProxyEndpoint:
      example:
        openPorts:
        - "30000"
        - "30001"
        proxyEndpoint: https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
      properties:
        openPorts:
          example:
          - "30000"
          - "30001"
          items:
            example: Provident quas aut eos quis.
            type: string
          type: array
        proxyEndpoint:
          example: https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
          type: string
      type: object
    ProxyInstanceSearchRecord:
      example:
        cloudProvider: aws
        description: The instance is hosted in us-east-2 on aws.
        id: i-12345678
        managed: false
        managedResourceType: PortsBasedProxy
        portsRegistrationStatus:
          instance-123:
          - 30000
          - 30001
          instance-456:
          - 30002
          - 30003
        proxyType: PortsBasedProxy
        regionCode: us-west-1
        serviceEnvironmentId: se-12345678
        serviceEnvironmentName: prod
        serviceEnvironmentType: PROD
        serviceId: s-12345678
        serviceName: mysql
        status: RUNNING
        statusDescription: Instance is running.
        targetResourceName: postgres
      properties:
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        description:
          description: The instance description.
          example: The instance is hosted in us-east-2 on aws.
          type: string
        id:
          description: The proxy instance ID.
          example: i-12345678
          type: string
        managed:
          description: Is the proxy managed by Omnistrate.
          example: false
          type: boolean
        managedResourceType:
          description: The managed resource type of the proxy instance.
          example: PortsBasedProxy
          type: string
        portsRegistrationStatus:
          additionalProperties:
            example:
            - 4382443608860486494
            - 6957136379424557353
            items:
              example: 3153874379861349599
              format: int64
              type: integer
            type: array
          description: The ports registration status of the ports based proxy instance.
          example:
            instance-123:
            - 30000
            - 30001
            instance-456:
            - 30002
            - 30003
          type: object
        proxyType:
          description: The proxy type.
          example: PortsBasedProxy
          type: string
        regionCode:
          description: The region code where the instance is hosted.
          example: us-west-1
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceEnvironmentName:
          description: The service environment name of the instance.
          example: prod
          type: string
        serviceEnvironmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceName:
          description: The service name of the instance.
          example: mysql
          type: string
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        statusDescription:
          description: The instance status description.
          example: Instance is running.
          type: string
        targetResourceName:
          description: The name of the target resource of the proxy instance.
          example: postgres
          type: string
      required:
      - cloudProvider
      - description
      - id
      - managed
      - portsRegistrationStatus
      - regionCode
      - serviceEnvironmentId
      - serviceEnvironmentName
      - serviceId
      - serviceName
      - status
      - statusDescription
      - targetResourceName
      type: object
    ReceiveWebhookRequest:
      example:
        data: Quis id deserunt voluptas.
        id: Occaecati perspiciatis.
      properties:
        data:
          description: The event data
          example: Rem error fuga omnis.
          type: string
        id:
          description: The unique id per producer.
          example: Veritatis ex fuga expedita sit quisquam sunt.
          type: string
      required:
      - id
      type: object
    RecentDeploymentFailureStatus:
      description: The status of the recent deployment failure
      example:
        failedAt: 2021-09-01T00:00:00Z
        failureReason: Failed to connect to the database
      properties:
        failedAt:
          description: The time at which the deployment failed
          example: 2021-09-01T00:00:00Z
          type: string
        failureReason:
          description: The reason for the deployment failure
          example: Failed to connect to the database
          type: string
      type: object
    RegenerateTokenRequest:
      example:
        id: user-abcd1234
      properties:
        id:
          example: user-abcd1234
          minLength: 1
          type: string
      required:
      - id
      type: object
    RegionalHealthSummary:
      example:
        deployingInstances: 2061483515119866227
        deploymentCellHealthSummary:
          Facere voluptatem at alias et molestias beatae.:
            deployingInstances: 140941459220726652
            healthyInstances: 2469040421288542176
            hostClusterID: hc-12345678
            message: Cell is healthy
            status: Healthy
            totalInstances: 3903839146191449670
            unhealthyInstances: 6179807114901378760
            unknownInstances: 7464467265783535263
        healthyInstances: 1696085120045094650
        message: Region is healthy
        region: us-east-1
        status: Healthy
        totalInstances: 310630120896805040
        unhealthyInstances: 7662150061617306393
        unknownInstances: 7101502752615085395
      properties:
        deployingInstances:
          description: The number of instances currently deploying
          example: 2558489060035314222
          format: int64
          type: integer
        deploymentCellHealthSummary:
          additionalProperties: true
          description: The summary of health by deployment cell
          example:
            Facere voluptatem at alias et molestias beatae.:
              deployingInstances: 140941459220726652
              healthyInstances: 2469040421288542176
              hostClusterID: hc-12345678
              message: Cell is healthy
              status: Healthy
              totalInstances: 3903839146191449670
              unhealthyInstances: 6179807114901378760
              unknownInstances: 7464467265783535263
          type: object
        healthyInstances:
          description: The number of healthy instances in the region
          example: 3872009354890602574
          format: int64
          type: integer
        message:
          description: The status message
          example: Region is healthy
          type: string
        region:
          description: The region
          example: us-east-1
          type: string
        status:
          description: The status of the region
          example: Healthy
          type: string
        totalInstances:
          description: The total number of instances in the region
          example: 7247996080056067101
          format: int64
          type: integer
        unhealthyInstances:
          description: The number of unhealthy instances in the region
          example: 1563400479807110813
          format: int64
          type: integer
        unknownInstances:
          description: The number of instances with unknown status
          example: 2437595633194757171
          format: int64
          type: integer
      required:
      - cloudProvider
      - deployingInstances
      - deploymentCellHealthSummary
      - healthyInstances
      - message
      - region
      - status
      - totalInstances
      - unhealthyInstances
      type: object
    ReleaseServiceModelRequest:
      example:
        id: sm-12345678
        serviceId: s-12345678
        token: 0y6
      properties:
        id:
          description: ID of a Service Model
          example: In velit.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: r
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    ReleaseServiceModelResult:
      example:
        status: READY
      properties:
        status:
          description: The release status of the service model
          example: DEPLOYING|READY|PENDING|FAILED|NOT_CONFIGURED
          type: string
      required:
      - status
      type: object
    RemoveAccountConfigFromServiceModelRequest:
      example:
        accountConfigId: ac-12345678
        id: sm-12345678
        serviceId: s-12345678
        token: l0a
      properties:
        accountConfigId:
          description: ID of an Account Config
          example: Quas hic veniam.
          type: string
        id:
          description: ID of a Service Model
          example: Aperiam asperiores omnis praesentium.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 2ev
          minLength: 1
          type: string
      required:
      - accountConfigId
      - id
      - serviceId
      - token
      type: object
    RemoveCapacityFromResourceInstanceRequest:
      example:
        capacityToBeRemoved: 3
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: my
      properties:
        capacityToBeRemoved:
          description: Number of replicas to be removed
          example: 3
          format: int64
          type: integer
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Dolores consequuntur qui ea sit.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: o1z
          minLength: 1
          type: string
      required:
      - capacityToBeRemoved
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    RemoveCustomDNSToResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: http-service
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: p
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: http-service
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Consequatur autem et esse et dolorum.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: bq7
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    RenderIdentityProvidersRequest:
      example:
        environmentType: production
        loginHint: user@domain.com
        redirectUrl: https://example.com/redirect
        token: dvi
      properties:
        environmentType:
          description: The type of environment to filter Identity Providers by
          example: production
          type: string
        loginHint:
          description: The login hint to use for the Identity Provider
          example: user@domain.com
          type: string
        redirectUrl:
          description: The URL to redirect to after login
          example: https://example.com/redirect
          type: string
        token:
          description: JWT token used to perform authorization
          example: q
          minLength: 1
          type: string
      required:
      - token
      type: object
    RenderIdentityProvidersResult:
      example:
        identityProviders:
        - emailIdentifiers: company.com
          id: idp-12345678
          identityProviderName: Google
          loginButtonIconUrl: https://example.com/icon.png
          loginButtonText: Login with Google
          name: Google for my company
          renderedAuthorizationEndpoint: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid
            email profile&state=idpName-guid
          state: state
        - emailIdentifiers: company.com
          id: idp-12345678
          identityProviderName: Google
          loginButtonIconUrl: https://example.com/icon.png
          loginButtonText: Login with Google
          name: Google for my company
          renderedAuthorizationEndpoint: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid
            email profile&state=idpName-guid
          state: state
      properties:
        identityProviders:
          description: The list of Identity Providers
          example:
          - emailIdentifiers: company.com
            id: idp-12345678
            identityProviderName: Google
            loginButtonIconUrl: https://example.com/icon.png
            loginButtonText: Login with Google
            name: Google for my company
            renderedAuthorizationEndpoint: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid
              email profile&state=idpName-guid
            state: state
          - emailIdentifiers: company.com
            id: idp-12345678
            identityProviderName: Google
            loginButtonIconUrl: https://example.com/icon.png
            loginButtonText: Login with Google
            name: Google for my company
            renderedAuthorizationEndpoint: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid
              email profile&state=idpName-guid
            state: state
          - emailIdentifiers: company.com
            id: idp-12345678
            identityProviderName: Google
            loginButtonIconUrl: https://example.com/icon.png
            loginButtonText: Login with Google
            name: Google for my company
            renderedAuthorizationEndpoint: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid
              email profile&state=idpName-guid
            state: state
          - emailIdentifiers: company.com
            id: idp-12345678
            identityProviderName: Google
            loginButtonIconUrl: https://example.com/icon.png
            loginButtonText: Login with Google
            name: Google for my company
            renderedAuthorizationEndpoint: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid
              email profile&state=idpName-guid
            state: state
          items:
            $ref: "#/components/schemas/RenderedIdentityProviderResult"
          type: array
      type: object
    RenderedIdentityProviderResult:
      example:
        emailIdentifiers: company.com
        id: idp-12345678
        identityProviderName: Google
        loginButtonIconUrl: https://example.com/icon.png
        loginButtonText: Login with Google
        name: Google for my company
        renderedAuthorizationEndpoint: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid
          email profile&state=idpName-guid
        state: state
      properties:
        emailIdentifiers:
          description: The email identifiers to use to filter the Identity Provider
            available for login
          example: company.com
          type: string
        id:
          description: ID of an Identity Provider
          example: Perferendis qui enim et.
          type: string
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        loginButtonIconUrl:
          description: The URL of the icon to use for the login button
          example: https://example.com/icon.png
          type: string
        loginButtonText:
          description: The text to use for the login button
          example: Login with Google
          type: string
        name:
          description: The name of the Identity Provider
          example: Google for my company
          type: string
        renderedAuthorizationEndpoint:
          description: The rendered authorization endpoint of the Identity Provider
          example: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com&redirect_uri=https://example.com/redirect&scope=openid
            email profile&state=idpName-guid
          type: string
        state:
          description: The state parameter used to prevent CSRF attacks
          example: state
          type: string
      required:
      - emailIdentifiers
      - id
      - identityProviderName
      - loginButtonIconUrl
      - loginButtonText
      - name
      - renderedAuthorizationEndpoint
      type: object
    ReplayEventRequest:
      example:
        id: event-12345678
        token: fvs
      properties:
        id:
          description: ID of a Event
          example: Nesciunt amet possimus ea laboriosam laborum voluptatem.
          type: string
        token:
          description: JWT token used to perform authorization
          example: z5
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    ReportHealthRequest:
      example:
        id: s-12345678
        token: lc
      properties:
        id:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: 2on
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    ReportHealthResult:
      example:
        health: UP
        id: s-12345678
        report:
          se-12345678:
            sm-12345678:
              vu-11111111: UNKNOWN
              vu-12345678: UP
              vu-87654321: DOWN
      properties:
        health:
          description: Service Health Status
          example: UP|DOWN|UNKNOWN
          type: string
        id:
          description: ID of a Service
          example: s-123456
          type: string
        report:
          additionalProperties: true
          description: The health of each environment under this service
          example:
            se-12345678:
              sm-12345678:
                vu-11111111: UNKNOWN
                vu-12345678: UP
                vu-87654321: DOWN
          type: object
      type: object
    ResetPasswordRequest:
      example:
        email: abc@gmail.com
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
      required:
      - email
      type: object
    Resource:
      example:
        environmentId: se-12345678
        instanceCount: 2
        name: asserts-server
        perVersionInstanceCount:
          "1.0": 2
          "1.1": 2
          "2.0": 2
        productTierType: OMNISTRATE_DEDICATED
        proxyType: PortsBasedProxy
        resourceId: r-12345678
        serviceId: s-12345678
        serviceModelType: OMNISTRATE_HOSTED
        version: "2.0"
        versionHistory:
        - "1.0"
        - "1.1"
        - "2.0"
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceCount:
          description: The number of instances for the specific resource.
          example: 2
          format: int64
          type: integer
        name:
          description: The name of the resource.
          example: asserts-server
          type: string
        perVersionInstanceCount:
          additionalProperties:
            example: 6045299946687733714
            format: int64
            type: integer
          description: The per-version instance count for the resource.
          example:
            "1.0": 2
            "1.1": 2
            "2.0": 2
          type: object
        productTierType:
          description: The product tier type
          example: OMNISTRATE_DEDICATED
          type: string
        proxyType:
          description: The proxy type of instance
          example: PortsBasedProxy
          type: string
        resourceId:
          description: ID of a resource
          example: Omnis dicta eveniet.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelType:
          description: The service model type
          example: OMNISTRATE_HOSTED
          type: string
        version:
          description: The latest version of the resource.
          example: "2.0"
          type: string
        versionHistory:
          description: The version history of the resource.
          example:
          - "1.0"
          - "1.1"
          - "2.0"
          items:
            example: Et aut quis dicta earum est.
            type: string
          type: array
      type: object
    ResourceAdoptionConfiguration:
      example:
        helmAdoptionConfiguration:
          chartRepoURL: https://charts.example.com
          releaseName: my-helm-release
          releaseNamespace: default
          runtimeConfiguration:
            timeout: 300s
            waitForJobs: true
      properties:
        helmAdoptionConfiguration:
          $ref: "#/components/schemas/HelmAdoptionConfiguration"
      type: object
    ResourceCapability:
      description: The capability of a resource
      example:
        capability: SERVERLESS
        configuration:
          EnableAutoStop: true
          MinimumNodesInPool: 5
          PortsMappingProxyConfig:
            MaxNumberOfClustersPerProxyInstance: 50
            NumberOfPortsPerCluster: 4
          ProxyId: r-123456
          ReferenceProxyKey: resource-proxy
          TargetPort: 5432
      properties:
        capability:
          description: The type of capability of a resource
          example: SERVERLESS|SERVICE_ACCOUNT_POLICIES|PROCESS_CORE_DUMP|CUSTOM_DNS|SIDECARS
          type: string
        configuration:
          additionalProperties: true
          description: The configuration parameters of a capability of a resource
          example:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
          type: object
      required:
      - capability
      - configuration
      type: object
    ResourceDeploymentStatus:
      example:
        actionHookDeploymentStatus: IN_PROGRESS
        computeDeploymentStatus: IN_PROGRESS
        configurationStatus: IN_PROGRESS
        infraDeploymentStatus: IN_PROGRESS
        monitoringStatus: IN_PROGRESS
        networkDeploymentStatus: IN_PROGRESS
        resourceName: Galera
        status: IN_PROGRESS
        storageDeploymentStatus: IN_PROGRESS
      properties:
        actionHookDeploymentStatus:
          description: The status of the resource action hook deployment.
          example: IN_PROGRESS
          type: string
        computeDeploymentStatus:
          description: The status of the resource compute deployment.
          example: IN_PROGRESS
          type: string
        configurationStatus:
          description: The status of the resource deployment configuration.
          example: IN_PROGRESS
          type: string
        infraDeploymentStatus:
          description: The status of the resource infrastructure deployment.
          example: IN_PROGRESS
          type: string
        monitoringStatus:
          description: The status of the resource monitoring configuring.
          example: IN_PROGRESS
          type: string
        networkDeploymentStatus:
          description: The status of the resource network deployment.
          example: IN_PROGRESS
          type: string
        resourceName:
          description: Name of the resource
          example: Galera
          type: string
        status:
          description: The status of the resource deployment.
          example: IN_PROGRESS
          type: string
        storageDeploymentStatus:
          description: The status of the resource storage deployment.
          example: IN_PROGRESS
          type: string
      required:
      - actionHookDeploymentStatus
      - computeDeploymentStatus
      - configurationStatus
      - infraDeploymentStatus
      - monitoringStatus
      - networkDeploymentStatus
      - resourceName
      - status
      - storageDeploymentStatus
      type: object
    ResourceEntity:
      example:
        isAutoscalingEnabled: true
        isBackupEnabled: true
        isDeprecated: false
        name: My Resource
        resourceId: r-12345678
        resourceType: Kustomize
        urlKey: myResource
      properties:
        isAutoscalingEnabled:
          description: Whether the resource has autoscaling enabled
          example: true
          type: boolean
        isBackupEnabled:
          description: Whether the resource has backup enabled
          example: true
          type: boolean
        isDeprecated:
          default: false
          description: Whether the service offering is deprecated
          example: false
          type: boolean
        name:
          description: The resource name
          example: My Resource
          type: string
        resourceId:
          description: ID of a resource
          example: Quaerat eaque incidunt voluptatibus molestias.
          type: string
        resourceType:
          description: The resource type
          example: Kustomize
          type: string
        urlKey:
          description: The resource URL key
          example: myResource
          type: string
      required:
      - isBackupEnabled
      - isDeprecated
      - name
      - resourceId
      - urlKey
      type: object
    ResourceHealthSummary:
      example:
        nodesHealth:
          Qui sint.:
            availabilityZone: us-east-2a
            connectivityStatus: HEALTHY
            diskHealth: HEALTHY
            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            integrationsHealth:
              CustomerObservabilityHealth: HEALTHY
              InternalObservabilityHealth: HEALTHY
            loadStatus: LOAD_NORMAL
            nodeHealth: HEALTHY
            nodeName: postgres-0
            ports:
            - 80
            - 443
            processHealth: HEALTHY
            processLiveness: HEALTHY
            status: HEALTHY
        resourceID: resource-12345678
        resourceKey: primary
        resourceType: Kustomize
        status: HEALTHY
      properties:
        nodesHealth:
          additionalProperties:
            $ref: "#/components/schemas/NodeHealthSummary"
          description: The health summary of the nodes by node name
          example:
            Ea ex ad ipsam et.:
              availabilityZone: us-east-2a
              connectivityStatus: HEALTHY
              diskHealth: HEALTHY
              endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              integrationsHealth:
                CustomerObservabilityHealth: HEALTHY
                InternalObservabilityHealth: HEALTHY
              loadStatus: LOAD_NORMAL
              nodeHealth: HEALTHY
              nodeName: postgres-0
              ports:
              - 80
              - 443
              processHealth: HEALTHY
              processLiveness: HEALTHY
              status: HEALTHY
            Et rerum eum aut ab ratione nobis.:
              availabilityZone: us-east-2a
              connectivityStatus: HEALTHY
              diskHealth: HEALTHY
              endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              integrationsHealth:
                CustomerObservabilityHealth: HEALTHY
                InternalObservabilityHealth: HEALTHY
              loadStatus: LOAD_NORMAL
              nodeHealth: HEALTHY
              nodeName: postgres-0
              ports:
              - 80
              - 443
              processHealth: HEALTHY
              processLiveness: HEALTHY
              status: HEALTHY
            Saepe facilis animi quas omnis quae.:
              availabilityZone: us-east-2a
              connectivityStatus: HEALTHY
              diskHealth: HEALTHY
              endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              integrationsHealth:
                CustomerObservabilityHealth: HEALTHY
                InternalObservabilityHealth: HEALTHY
              loadStatus: LOAD_NORMAL
              nodeHealth: HEALTHY
              nodeName: postgres-0
              ports:
              - 80
              - 443
              processHealth: HEALTHY
              processLiveness: HEALTHY
              status: HEALTHY
          type: object
        resourceID:
          description: ID of a resource
          example: Minus perferendis rem dolorem voluptate.
          type: string
        resourceKey:
          description: The key of the resource
          example: primary
          type: string
        resourceType:
          description: The type of the resource
          example: Kustomize
          type: string
        status:
          description: The heath status of a resource
          example: HEALTHY|UNHEALTHY|UNKNOWN|STOPPED|PENDING_ADOPTION|N/A
          type: string
      type: object
    ResourceInstance:
      example:
        adopted: true
        awsAccountID: "123456789012"
        azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
        cloudProvider: aws
        consumptionResourceInstanceResult:
          active: true
          autoscalingEnabled: true
          awsAccountID: "123456789012"
          azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
          backupStatus:
            backupPeriodInHours: 2
            backupRetentionInDays: 7
            earliestRestoreTime: 2021-09-01T00:00:00Z
            lastBackupTime: 2021-09-01T00:00:00Z
          cloud_provider: aws
          created_at: 2023-01-10T00:00:00Z
          createdByUserId: user-12345678
          createdByUserName: John Doe
          currentReplicas: "2"
          customNetworkDetail:
            cidr: 10.177.0.0/16
            id: n-12345678
            name: Prod us-east-1
          detailedNetworkTopology:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              isJob: false
              jobMetrics:
              - additionalData:
                  exitCode: 0
                  status: Succeeded
                endTime: 2023-01-01T10:05:00Z
                metricType: cpu_core_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 120.5
              - additionalData:
                  peakMemoryUsage: 512MB
                endTime: 2023-01-01T10:05:00Z
                metricType: memory_mb_seconds
                startTime: 2023-01-01T10:00:00Z
                value: 2560
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: primary
              resourceName: Primary MySQL Instance
          externalPayerId: external-payer-id-1234
          gcpProjectID: my-project
          highAvailability: true
          id: instance-abcd1234
          instanceLoadStatus: LOAD_NORMAL|LOAD_IDLE|LOAD_OVERLOADED|STOPPED|UNKNOWN|N/A
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          last_modified_at: 2023-01-20T00:00:00Z
          maintenanceTasks:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          maxReplicas: "1"
          minReplicas: "1"
          network_type: PUBLIC|INTERNAL
          productTierFeatures:
            LOGS:
              auth:
                password: px3c4d5f6g7h8i
                username: abcd1234
              enabled: true
              websocketBaseUrl: wss://r-injectedobserve.instance-abcdefgh.us-east-2.aws.omnistrate.cloud/logs
            METRICS:
              enabled: false
          region: us-east-1
          resourceID: r-abcd1234
          result_params:
            param1: value1
            param2: value2
          serverlessEnabled: true
          status: RUNNING
          subscriptionId: sub-abcd1234
          subscriptionLicense:
            certificateBase64: public-cert
            expirationDate: 2024-01-01T10:00:00Z
            licenseBase64: license-file
          subscriptionStatus: ACTIVE
          tierVersion: "1.0"
        defaultSubscription: true
        deploymentCellID: hc-12345678
        environmentId: se-12345678
        gcpProjectID: my-project
        input_params:
          param1: value1
          param2: value2
        instanceDebugCommands:
        - aws eks update-kubeconfig --name my-cluster --region us-west-2
        - kubectl -n instance-12345678 get pods
        integrationsStatus:
        - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
          configuration:
            provider: native
          healthStatus: UNHEALTHY
          integrationType: LOGS
          message: missing exporter secret configuration for gcp
          scope: INTERNAL
        - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
          configuration:
            provider: native
          healthStatus: UNHEALTHY
          integrationType: LOGS
          message: missing exporter secret configuration for gcp
          scope: INTERNAL
        - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
          configuration:
            provider: native
          healthStatus: UNHEALTHY
          integrationType: LOGS
          message: missing exporter secret configuration for gcp
          scope: INTERNAL
        - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
          configuration:
            provider: native
          healthStatus: UNHEALTHY
          integrationType: LOGS
          message: missing exporter secret configuration for gcp
          scope: INTERNAL
        maintenanceTasks:
          backups:
          - backup_id: bk-12345678
          upgrade_paths:
          - upgrade_path_id: up-9876543
            upgrade_path_instance_status: PENDING
            upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
            upgrade_path_status: IN_PROGRESS
          - upgrade_path_id: up-12345548
            upgrade_path_instance_status: PENDING
            upgrade_path_released_at: 2023-01-01T09:00:00Z
            upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
            upgrade_path_status: SCHEDULED
        managedResourceType: PortsBasedProxy
        manualOverride:
          setAt: 2020-01-01T00:00:00Z
          setterUserId: user-12345678
          workflowId: wf-12345678
        organizationId: org-12345678
        organizationName: my-org
        portsRegistrationStatus:
          instance-123:
          - 30000
          - 30001
          instance-456:
          - 30002
          - 30003
        productTierId: pt-12345678
        productTierName: premium
        productTierType: OMNISTRATE_DEDICATED
        proxyType: PortsBasedProxy
        resourceVersionSummaries:
        - capabilities:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          externalResource: true
          genericResourceDeploymentConfiguration:
            image: nginx:latest
            podEvents:
              pod1:
              - FirstTimestamp: 2025-10-01T12:00:00Z
                LastTimestamp: 2025-10-01T12:05:00Z
                Message: Pod scheduled successfully
                NumberOfOccurrences: 3
                Reason: Scheduled
            podStatus:
              pod1: Running
              pod2: Pending
            podToHostMapping:
              pod1: node1
              pod2: node2
          helmDeploymentConfiguration:
            chartName: nginx
            chartVersion: 1.2.3
            podEvents:
              pod1:
              - FirstTimestamp: 2025-10-01T12:00:00Z
                LastTimestamp: 2025-10-01T12:05:00Z
                Message: Pod scheduled successfully
                NumberOfOccurrences: 3
                Reason: Scheduled
              pod2:
              - FirstTimestamp: 2025-10-01T12:06:00Z
                LastTimestamp: 2025-10-01T12:06:00Z
                Message: Insufficient resources
                NumberOfOccurrences: 1
                Reason: FailedScheduling
            podStatus:
              pod1: Running
              pod2: Pending
              pod3: Failed
            podToHostMapping:
              pod1: node1
              pod2: node2
              pod3: node1
            releaseName: my-nginx-release
            releaseNamespace: default
            releaseStatus: deployed
            repositoryURL: https://charts.example.com
            runtimeConfiguration:
              namespace: default
              timeout: 300s
              waitForJobs: true
              waitForJobsTimeout: 10m
            values:
              mysql:
                image:
                  repository: mysql
                  tag: "8.0"
                replicaCount: 3
                service:
                  type: LoadBalancer
          kustomizeDeploymentConfiguration:
            BasePath: /path/to/kustomization
            DeploymentErrors: Failed to apply Kustomize overlays
            Overlays:
              overlay1: /path/to/overlay1
              overlay2: /path/to/overlay2
          latestVersion: "2.0"
          resourceId: r-12345678
          resourceName: asserts-server
          terraformDeploymentConfiguration:
            configurationFiles:
              main.tf: "resource \"aws_instance\" \"example\" { ... }"
              variables.tf: "variable \"instance_type\" { default = \"t2.micro\" }"
            deploymentErrors: Failed to initialize Terraform provider
          version: "1.0"
        - capabilities:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          externalResource: true
          genericResourceDeploymentConfiguration:
            image: nginx:latest
            podEvents:
              pod1:
              - FirstTimestamp: 2025-10-01T12:00:00Z
                LastTimestamp: 2025-10-01T12:05:00Z
                Message: Pod scheduled successfully
                NumberOfOccurrences: 3
                Reason: Scheduled
            podStatus:
              pod1: Running
              pod2: Pending
            podToHostMapping:
              pod1: node1
              pod2: node2
          helmDeploymentConfiguration:
            chartName: nginx
            chartVersion: 1.2.3
            podEvents:
              pod1:
              - FirstTimestamp: 2025-10-01T12:00:00Z
                LastTimestamp: 2025-10-01T12:05:00Z
                Message: Pod scheduled successfully
                NumberOfOccurrences: 3
                Reason: Scheduled
              pod2:
              - FirstTimestamp: 2025-10-01T12:06:00Z
                LastTimestamp: 2025-10-01T12:06:00Z
                Message: Insufficient resources
                NumberOfOccurrences: 1
                Reason: FailedScheduling
            podStatus:
              pod1: Running
              pod2: Pending
              pod3: Failed
            podToHostMapping:
              pod1: node1
              pod2: node2
              pod3: node1
            releaseName: my-nginx-release
            releaseNamespace: default
            releaseStatus: deployed
            repositoryURL: https://charts.example.com
            runtimeConfiguration:
              namespace: default
              timeout: 300s
              waitForJobs: true
              waitForJobsTimeout: 10m
            values:
              mysql:
                image:
                  repository: mysql
                  tag: "8.0"
                replicaCount: 3
                service:
                  type: LoadBalancer
          kustomizeDeploymentConfiguration:
            BasePath: /path/to/kustomization
            DeploymentErrors: Failed to apply Kustomize overlays
            Overlays:
              overlay1: /path/to/overlay1
              overlay2: /path/to/overlay2
          latestVersion: "2.0"
          resourceId: r-12345678
          resourceName: asserts-server
          terraformDeploymentConfiguration:
            configurationFiles:
              main.tf: "resource \"aws_instance\" \"example\" { ... }"
              variables.tf: "variable \"instance_type\" { default = \"t2.micro\" }"
            deploymentErrors: Failed to initialize Terraform provider
          version: "1.0"
        - capabilities:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          externalResource: true
          genericResourceDeploymentConfiguration:
            image: nginx:latest
            podEvents:
              pod1:
              - FirstTimestamp: 2025-10-01T12:00:00Z
                LastTimestamp: 2025-10-01T12:05:00Z
                Message: Pod scheduled successfully
                NumberOfOccurrences: 3
                Reason: Scheduled
            podStatus:
              pod1: Running
              pod2: Pending
            podToHostMapping:
              pod1: node1
              pod2: node2
          helmDeploymentConfiguration:
            chartName: nginx
            chartVersion: 1.2.3
            podEvents:
              pod1:
              - FirstTimestamp: 2025-10-01T12:00:00Z
                LastTimestamp: 2025-10-01T12:05:00Z
                Message: Pod scheduled successfully
                NumberOfOccurrences: 3
                Reason: Scheduled
              pod2:
              - FirstTimestamp: 2025-10-01T12:06:00Z
                LastTimestamp: 2025-10-01T12:06:00Z
                Message: Insufficient resources
                NumberOfOccurrences: 1
                Reason: FailedScheduling
            podStatus:
              pod1: Running
              pod2: Pending
              pod3: Failed
            podToHostMapping:
              pod1: node1
              pod2: node2
              pod3: node1
            releaseName: my-nginx-release
            releaseNamespace: default
            releaseStatus: deployed
            repositoryURL: https://charts.example.com
            runtimeConfiguration:
              namespace: default
              timeout: 300s
              waitForJobs: true
              waitForJobsTimeout: 10m
            values:
              mysql:
                image:
                  repository: mysql
                  tag: "8.0"
                replicaCount: 3
                service:
                  type: LoadBalancer
          kustomizeDeploymentConfiguration:
            BasePath: /path/to/kustomization
            DeploymentErrors: Failed to apply Kustomize overlays
            Overlays:
              overlay1: /path/to/overlay1
              overlay2: /path/to/overlay2
          latestVersion: "2.0"
          resourceId: r-12345678
          resourceName: asserts-server
          terraformDeploymentConfiguration:
            configurationFiles:
              main.tf: "resource \"aws_instance\" \"example\" { ... }"
              variables.tf: "variable \"instance_type\" { default = \"t2.micro\" }"
            deploymentErrors: Failed to initialize Terraform provider
          version: "1.0"
        - capabilities:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          externalResource: true
          genericResourceDeploymentConfiguration:
            image: nginx:latest
            podEvents:
              pod1:
              - FirstTimestamp: 2025-10-01T12:00:00Z
                LastTimestamp: 2025-10-01T12:05:00Z
                Message: Pod scheduled successfully
                NumberOfOccurrences: 3
                Reason: Scheduled
            podStatus:
              pod1: Running
              pod2: Pending
            podToHostMapping:
              pod1: node1
              pod2: node2
          helmDeploymentConfiguration:
            chartName: nginx
            chartVersion: 1.2.3
            podEvents:
              pod1:
              - FirstTimestamp: 2025-10-01T12:00:00Z
                LastTimestamp: 2025-10-01T12:05:00Z
                Message: Pod scheduled successfully
                NumberOfOccurrences: 3
                Reason: Scheduled
              pod2:
              - FirstTimestamp: 2025-10-01T12:06:00Z
                LastTimestamp: 2025-10-01T12:06:00Z
                Message: Insufficient resources
                NumberOfOccurrences: 1
                Reason: FailedScheduling
            podStatus:
              pod1: Running
              pod2: Pending
              pod3: Failed
            podToHostMapping:
              pod1: node1
              pod2: node2
              pod3: node1
            releaseName: my-nginx-release
            releaseNamespace: default
            releaseStatus: deployed
            repositoryURL: https://charts.example.com
            runtimeConfiguration:
              namespace: default
              timeout: 300s
              waitForJobs: true
              waitForJobsTimeout: 10m
            values:
              mysql:
                image:
                  repository: mysql
                  tag: "8.0"
                replicaCount: 3
                service:
                  type: LoadBalancer
          kustomizeDeploymentConfiguration:
            BasePath: /path/to/kustomization
            DeploymentErrors: Failed to apply Kustomize overlays
            Overlays:
              overlay1: /path/to/overlay1
              overlay2: /path/to/overlay2
          latestVersion: "2.0"
          resourceId: r-12345678
          resourceName: asserts-server
          terraformDeploymentConfiguration:
            configurationFiles:
              main.tf: "resource \"aws_instance\" \"example\" { ... }"
              variables.tf: "variable \"instance_type\" { default = \"t2.micro\" }"
            deploymentErrors: Failed to initialize Terraform provider
          version: "1.0"
        serviceEnvName: dev
        serviceId: s-12345678
        serviceLogoURL: Dolorum illum odit vero.
        serviceModelId: sm-12345678
        serviceModelName: hosted
        serviceModelType: OMNISTRATE_HOSTED
        serviceName: mysql
        subscriptionId: sub-12345678
        subscriptionOwnerName: John Doe
        subscriptionStatus: ACTIVE
        tierVersion: "1.0"
        tierVersionReleasedAt: 2020-01-01T00:00:00Z
        tierVersionReleasedByUserId: user-12345678
        tierVersionReleasedByUserName: John Doe
        tierVersionStatus: Preferred|Active|Deprecated|Pending
      properties:
        adopted:
          description: Whether the resource instance is adopted.
          example: true
          type: boolean
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 0fa05079-dd73-4b88-babc-05537817604a
          type: string
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        consumptionResourceInstanceResult:
          $ref: "#/components/schemas/DescribeResourceInstanceResult"
        defaultSubscription:
          description: Whether the subscription is the default subscription
          example: true
          type: boolean
        deploymentCellID:
          description: ID of a Host Cluster
          example: Sed eligendi consequuntur at voluptatem.
          type: string
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        input_params:
          description: Custom input parameters
          example:
            param1: value1
            param2: value2
        instanceDebugCommands:
          description: The debug commands to access the instance
          example:
          - aws eks update-kubeconfig --name my-cluster --region us-west-2
          - kubectl -n instance-12345678 get pods
          items:
            example: Qui et perferendis modi et.
            type: string
          type: array
        integrationsStatus:
          description: List of individual integrations and their statuses for the
            instance
          example:
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          - Url: https://one.newrelic.com/data-exploration/data-explorer/explorer
            configuration:
              provider: native
            healthStatus: UNHEALTHY
            integrationType: LOGS
            message: missing exporter secret configuration for gcp
            scope: INTERNAL
          items:
            $ref: "#/components/schemas/IntegrationStatus"
          type: array
        maintenanceTasks:
          additionalProperties: true
          description: "Pending actions or maintenance tasks for the resource instance,\
            \ with action type as key and reference key as value."
          example:
            backups:
            - backup_id: bk-12345678
            upgrade_paths:
            - upgrade_path_id: up-9876543
              upgrade_path_instance_status: PENDING
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: IN_PROGRESS
            - upgrade_path_id: up-12345548
              upgrade_path_instance_status: PENDING
              upgrade_path_released_at: 2023-01-01T09:00:00Z
              upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
              upgrade_path_status: SCHEDULED
          type: object
        managedResourceType:
          description: The managed resource type of instance
          example: PortsBasedProxy
          type: string
        manualOverride:
          $ref: "#/components/schemas/ManualOverride"
        organizationId:
          description: ID of an Org
          example: Quas sapiente est architecto voluptate.
          type: string
        organizationName:
          description: The organization name of the resource instance.
          example: my-org
          type: string
        portsRegistrationStatus:
          additionalProperties:
            example:
            - 2172693560052554431
            - 3686460069800016100
            - 6805111612595787130
            items:
              example: 23677024015306602
              format: int64
              type: integer
            type: array
          description: The ports registration status of ports based proxy instance
          example:
            instance-123:
            - 30000
            - 30001
            instance-456:
            - 30002
            - 30003
          type: object
        productTierId:
          description: ID of a Product Tier
          example: Voluptatem alias qui omnis labore est soluta.
          type: string
        productTierName:
          description: The product tier name
          example: premium
          type: string
        productTierType:
          description: The product tier type
          example: OMNISTRATE_DEDICATED
          type: string
        proxyType:
          description: The proxy type of instance
          example: PortsBasedProxy
          type: string
        resourceVersionSummaries:
          description: "Associated internal/external resources deployed for the instance,\
            \ the corresponding versions deployed."
          example:
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          - capabilities:
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            - capability: SERVERLESS
              configuration:
                EnableAutoStop: true
                MinimumNodesInPool: 5
                PortsMappingProxyConfig:
                  MaxNumberOfClustersPerProxyInstance: 50
                  NumberOfPortsPerCluster: 4
                ProxyId: r-123456
                ReferenceProxyKey: resource-proxy
                TargetPort: 5432
            externalResource: true
            genericResourceDeploymentConfiguration:
              image: nginx:latest
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
              podStatus:
                pod1: Running
                pod2: Pending
              podToHostMapping:
                pod1: node1
                pod2: node2
            helmDeploymentConfiguration:
              chartName: nginx
              chartVersion: 1.2.3
              podEvents:
                pod1:
                - FirstTimestamp: 2025-10-01T12:00:00Z
                  LastTimestamp: 2025-10-01T12:05:00Z
                  Message: Pod scheduled successfully
                  NumberOfOccurrences: 3
                  Reason: Scheduled
                pod2:
                - FirstTimestamp: 2025-10-01T12:06:00Z
                  LastTimestamp: 2025-10-01T12:06:00Z
                  Message: Insufficient resources
                  NumberOfOccurrences: 1
                  Reason: FailedScheduling
              podStatus:
                pod1: Running
                pod2: Pending
                pod3: Failed
              podToHostMapping:
                pod1: node1
                pod2: node2
                pod3: node1
              releaseName: my-nginx-release
              releaseNamespace: default
              releaseStatus: deployed
              repositoryURL: https://charts.example.com
              runtimeConfiguration:
                namespace: default
                timeout: 300s
                waitForJobs: true
                waitForJobsTimeout: 10m
              values:
                mysql:
                  image:
                    repository: mysql
                    tag: "8.0"
                  replicaCount: 3
                  service:
                    type: LoadBalancer
            kustomizeDeploymentConfiguration:
              BasePath: /path/to/kustomization
              DeploymentErrors: Failed to apply Kustomize overlays
              Overlays:
                overlay1: /path/to/overlay1
                overlay2: /path/to/overlay2
            latestVersion: "2.0"
            resourceId: r-12345678
            resourceName: asserts-server
            terraformDeploymentConfiguration:
              configurationFiles:
                main.tf: "resource \"aws_instance\" \"example\" { ... }"
                variables.tf: "variable \"instance_type\" { default = \"t2.micro\"\
                  \ }"
              deploymentErrors: Failed to initialize Terraform provider
            version: "1.0"
          items:
            $ref: "#/components/schemas/ResourceVersionSummary"
          type: array
        serviceEnvName:
          description: The service environment name
          example: dev
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Similique possimus.
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Laboriosam enim nisi.
          type: string
        serviceModelName:
          description: The service model name
          example: hosted
          type: string
        serviceModelType:
          description: The service model type
          example: OMNISTRATE_HOSTED
          type: string
        serviceName:
          description: The service name
          example: mysql
          type: string
        subscriptionId:
          description: ID of a Subscription
          example: Ad et dolorem.
          type: string
        subscriptionOwnerName:
          description: The subscription owner name
          example: John Doe
          type: string
        subscriptionStatus:
          description: Subscription Status
          example: ACTIVE|SUSPENDED|TERMINATED|CANCELLED
          type: string
        tierVersion:
          description: The tier version of the resource instance.
          example: "1.0"
          type: string
        tierVersionReleasedAt:
          description: The timestamp when the version set was released.
          example: 2020-01-01T00:00:00Z
          type: string
        tierVersionReleasedByUserId:
          description: ID of a User
          example: Odit quod illum.
          type: string
        tierVersionReleasedByUserName:
          description: The name of the user who released the version set.
          example: John Doe
          type: string
        tierVersionStatus:
          description: The tier version set status.
          example: Preferred|Active|Deprecated|Pending
          type: string
      required:
      - adopted
      - cloudProvider
      - consumptionResourceInstanceResult
      - defaultSubscription
      - environmentId
      - input_params
      - instanceDebugCommands
      - integrationsStatus
      - organizationId
      - organizationName
      - productTierId
      - productTierName
      - productTierType
      - resourceVersionSummaries
      - serviceEnvName
      - serviceId
      - serviceModelId
      - serviceModelName
      - serviceModelType
      - serviceName
      - subscriptionId
      - subscriptionOwnerName
      - tierVersion
      - tierVersionReleasedAt
      - tierVersionReleasedByUserId
      - tierVersionReleasedByUserName
      - tierVersionStatus
      type: object
    ResourceInstanceProvisionerSetupKitRequest:
      example:
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: vdu
      properties:
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Distinctio repellat.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: m12
          minLength: 1
          type: string
      required:
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    ResourceInstanceSearchRecord:
      example:
        cloudProvider: aws
        description: The instance is hosted in us-east-2 on aws.
        id: i-12345678
        managed: false
        managedResourceType: PortsBasedProxy
        portsRegistrationStatus:
          instance-123:
          - 30000
          - 30001
          instance-456:
          - 30002
          - 30003
        productTierId: pt-12345678
        productTierName: free
        productTierVersion: "2.0"
        proxyType: PortsBasedProxy
        regionCode: us-west-1
        resourceId: r-12345678
        resourceName: postgres
        serviceEnvironmentId: se-12345678
        serviceEnvironmentName: prod
        serviceEnvironmentType: PROD
        serviceId: s-12345678
        serviceName: mysql
        status: RUNNING
        statusDescription: Instance is running.
        subscriptionId: sub-12345678
      properties:
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        description:
          description: The instance description.
          example: The instance is hosted in us-east-2 on aws.
          type: string
        id:
          description: The resource instance ID.
          example: i-12345678
          type: string
        managed:
          description: Is the proxy managed by Omnistrate.
          example: false
          type: boolean
        managedResourceType:
          description: The managed resource type of the proxy instance.
          example: PortsBasedProxy
          type: string
        portsRegistrationStatus:
          additionalProperties:
            example:
            - 51369834752814448
            - 7072216251879429576
            - 508995251328946781
            items:
              example: 4839792054976955638
              format: int64
              type: integer
            type: array
          description: The ports registration status of the ports based proxy instance.
          example:
            instance-123:
            - 30000
            - 30001
            instance-456:
            - 30002
            - 30003
          type: object
        productTierId:
          description: ID of a Product Tier
          example: Ipsum ut tempora libero itaque.
          type: string
        productTierName:
          description: The product tier name of the instance.
          example: free
          type: string
        productTierVersion:
          description: The product tier version of the instance.
          example: "2.0"
          type: string
        proxyType:
          description: The proxy type.
          example: PortsBasedProxy
          type: string
        regionCode:
          description: The region code where the instance is hosted.
          example: us-west-1
          type: string
        resourceId:
          description: ID of a resource
          example: Et qui quibusdam numquam ut.
          type: string
        resourceName:
          description: The name of the resource for the instance.
          example: postgres
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceEnvironmentName:
          description: The service environment name of the instance.
          example: prod
          type: string
        serviceEnvironmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceName:
          description: The service name of the instance.
          example: mysql
          type: string
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        statusDescription:
          description: The instance status description.
          example: Instance is running.
          type: string
        subscriptionId:
          description: ID of a Subscription
          example: Harum at rem quam autem nisi.
          type: string
      required:
      - cloudProvider
      - description
      - id
      - productTierId
      - regionCode
      - resourceName
      - serviceEnvironmentId
      - serviceEnvironmentName
      - serviceId
      - serviceName
      - status
      - statusDescription
      type: object
    ResourceMaintenanceTasks:
      additionalProperties: true
      description: "Pending actions or maintenance tasks for the resource instance,\
        \ with action type as key and reference key as value."
      example:
        backups:
        - backup_id: bk-12345678
        upgrade_paths:
        - upgrade_path_id: up-9876543
          upgrade_path_instance_status: PENDING
          upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
          upgrade_path_status: IN_PROGRESS
        - upgrade_path_id: up-12345548
          upgrade_path_instance_status: PENDING
          upgrade_path_released_at: 2023-01-01T09:00:00Z
          upgrade_path_scheduled_at: 2023-01-01T10:00:00Z
          upgrade_path_status: SCHEDULED
      type: object
    ResourceNetworkTopologyResult:
      example:
        additionalEndpoints:
          admin:
            endpoint: https://admin.instance-abcdefgh.region.aws.omnistrate.cloud
            healthStatus: HEALTHY
            networkingType: PRIVATE
            openPorts:
            - 30000
            primary: false
          cluster:
            endpoint: https://cluster.instance-abcdefgh.region.aws.omnistrate.cloud
            healthStatus: HEALTHY
            networkingType: PUBLIC
            openPorts:
            - 443
            primary: true
        allowedIPRanges:
        - 0.0.0.0/0
        clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
        clusterPorts:
        - 443
        customDNSEndpoint:
          dnsHost: my-custom-dns.com
          name: DNS to access the dashboard
          status: READY
        hasCompute: true
        isJob: false
        jobMetrics:
        - additionalData:
            exitCode: 0
            status: Succeeded
          endTime: 2023-01-01T10:05:00Z
          metricType: cpu_core_seconds
          startTime: 2023-01-01T10:00:00Z
          value: 120.5
        - additionalData:
            peakMemoryUsage: 512MB
          endTime: 2023-01-01T10:05:00Z
          metricType: memory_mb_seconds
          startTime: 2023-01-01T10:00:00Z
          value: 2560
        main: true
        networkingType: PUBLIC
        nodes:
        - availabilityZone: us-east-2a
          detailedHealth:
            ConnectivityStatus: UNHEALTHY
            DiskHealth: UNKNOWN
            LoadStatus: LOAD_NORMAL
            NodeHealth: HEALTHY
            ProcessHealth: HEALTHY
            ProcessLiveness: HEALTHY
          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          healthStatus: HEALTHY
          id: primary-0
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          ports:
          - 80
          - 443
          status: RUNNING
          storageSize: 10
          vmInfo:
            architecture: amd64
            azCode: us-east-1a
            azID: use1-az1
            externalIP: 3.44.113.6
            instanceType: t2.small
            internalIP: 192.168.1.4
            k8sNodeName: my-k8s-node
            kernelVersion: 5.10.228
            kubeletVersion: 1.31.3
            os: linux
            providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
        - availabilityZone: us-east-2a
          detailedHealth:
            ConnectivityStatus: UNHEALTHY
            DiskHealth: UNKNOWN
            LoadStatus: LOAD_NORMAL
            NodeHealth: HEALTHY
            ProcessHealth: HEALTHY
            ProcessLiveness: HEALTHY
          endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          healthStatus: HEALTHY
          id: primary-0
          kubernetesDashboardEndpoint:
            dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
            deploymentCellID: hc-12345678
          ports:
          - 80
          - 443
          status: RUNNING
          storageSize: 10
          vmInfo:
            architecture: amd64
            azCode: us-east-1a
            azID: use1-az1
            externalIP: 3.44.113.6
            instanceType: t2.small
            internalIP: 192.168.1.4
            k8sNodeName: my-k8s-node
            kernelVersion: 5.10.228
            kubeletVersion: 1.31.3
            os: linux
            providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
        privateNetworkCIDR: 10.0.0.2/24
        privateNetworkID: n-1234abcd
        proxyEndpoint:
          openPorts:
          - "30000"
          - "30001"
          proxyEndpoint: https://r-1234.instance-abcdefgh.region.aws.omnistrate.cloud
        publiclyAccessible: true
        recentDeploymentFailure:
          failedAt: 2021-09-01T00:00:00Z
          failureReason: Failed to connect to the database
        resourceInstanceMetadata:
          KustomizeGeneratedTemplates: template
        resourceKey: primary
        resourceName: Primary MySQL DB Node
        resourceType: Kustomize
      properties:
        additionalEndpoints:
          additionalProperties:
            $ref: "#/components/schemas/ClusterEndpoint"
          description: The additional endpoints for this resource
          example:
            admin:
              endpoint: https://admin.instance-abcdefgh.region.aws.omnistrate.cloud
              healthStatus: HEALTHY
              networkingType: PRIVATE
              openPorts:
              - 30000
              primary: false
            cluster:
              endpoint: https://cluster.instance-abcdefgh.region.aws.omnistrate.cloud
              healthStatus: HEALTHY
              networkingType: PUBLIC
              openPorts:
              - 443
              primary: true
          type: object
        allowedIPRanges:
          description: The allowed IP ranges for this resource
          example:
          - 0.0.0.0/0
          items:
            example: Est sed.
            type: string
          type: array
        clusterEndpoint:
          description: The primary cluster endpoint that load-balances across replicas
            of this resource
          example: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
          type: string
        clusterPorts:
          description: The ports that the whole cluster exposes
          example:
          - 443
          items:
            example: 884707829000471357
            format: int64
            type: integer
          type: array
        customDNSEndpoint:
          $ref: "#/components/schemas/CustomDNSEndpoint"
        hasCompute:
          description: Whether this resource has associated compute
          example: true
          type: boolean
        isJob:
          default: false
          description: Whether this resource is a job
          example: false
          type: boolean
        jobMetrics:
          description: The job metrics for this resource (if it's a job)
          example:
          - additionalData:
              exitCode: 0
              status: Succeeded
            endTime: 2023-01-01T10:05:00Z
            metricType: cpu_core_seconds
            startTime: 2023-01-01T10:00:00Z
            value: 120.5
          - additionalData:
              peakMemoryUsage: 512MB
            endTime: 2023-01-01T10:05:00Z
            metricType: memory_mb_seconds
            startTime: 2023-01-01T10:00:00Z
            value: 2560
          items:
            $ref: "#/components/schemas/JobMetric"
          type: array
        main:
          description: Whether this is the main resource
          example: true
          type: boolean
        networkingType:
          description: The networking type for this resource
          example: PUBLIC
          type: string
        nodes:
          description: The nodes that this resource is deployed on
          example:
          - availabilityZone: us-east-2a
            detailedHealth:
              ConnectivityStatus: UNHEALTHY
              DiskHealth: UNKNOWN
              LoadStatus: LOAD_NORMAL
              NodeHealth: HEALTHY
              ProcessHealth: HEALTHY
              ProcessLiveness: HEALTHY
            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            healthStatus: HEALTHY
            id: primary-0
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            ports:
            - 80
            - 443
            status: RUNNING
            storageSize: 10
            vmInfo:
              architecture: amd64
              azCode: us-east-1a
              azID: use1-az1
              externalIP: 3.44.113.6
              instanceType: t2.small
              internalIP: 192.168.1.4
              k8sNodeName: my-k8s-node
              kernelVersion: 5.10.228
              kubeletVersion: 1.31.3
              os: linux
              providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
          - availabilityZone: us-east-2a
            detailedHealth:
              ConnectivityStatus: UNHEALTHY
              DiskHealth: UNKNOWN
              LoadStatus: LOAD_NORMAL
              NodeHealth: HEALTHY
              ProcessHealth: HEALTHY
              ProcessLiveness: HEALTHY
            endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            healthStatus: HEALTHY
            id: primary-0
            kubernetesDashboardEndpoint:
              dashboardEndpoint: https://kubernetes-dashboard.hc-12345678.region.cloudprovider.f2e0a955bb84.cloud/#/pod/instance-abcdefgh/primary-0?namespace=instance-abcdefgh
              deploymentCellID: hc-12345678
            ports:
            - 80
            - 443
            status: RUNNING
            storageSize: 10
            vmInfo:
              architecture: amd64
              azCode: us-east-1a
              azID: use1-az1
              externalIP: 3.44.113.6
              instanceType: t2.small
              internalIP: 192.168.1.4
              k8sNodeName: my-k8s-node
              kernelVersion: 5.10.228
              kubeletVersion: 1.31.3
              os: linux
              providerID: aws:///ap-south-1b/i-06h696g4a643ahf01
          items:
            $ref: "#/components/schemas/NodeNetworkTopologyResult"
          type: array
        privateNetworkCIDR:
          description: The private network CIDR for this resource
          example: 10.0.0.2/24
          type: string
        privateNetworkID:
          description: ID of a Network
          example: Fuga est optio velit odit.
          type: string
        proxyEndpoint:
          $ref: "#/components/schemas/ProxyEndpoint"
        publiclyAccessible:
          description: Whether this resource is publicly accessible
          example: true
          type: boolean
        recentDeploymentFailure:
          $ref: "#/components/schemas/RecentDeploymentFailureStatus"
        resourceInstanceMetadata:
          description: The resource instance metadata
          example:
            KustomizeGeneratedTemplates: template
        resourceKey:
          description: The key of the resource
          example: primary
          type: string
        resourceName:
          description: The name of the resource
          example: Primary MySQL DB Node
          type: string
        resourceType:
          description: The type of the resource
          example: Kustomize
          type: string
      required:
      - allowedIPRanges
      - clusterEndpoint
      - hasCompute
      - main
      - networkingType
      - nodeEndpoints
      - ports
      - publiclyAccessible
      - resourceKey
      - resourceName
      type: object
    ResourceOneOffPatchConfigurationOverride:
      example:
        helmChartValues:
          image:
            repository: mysql
            tag: "8.0"
          replicaCount: 3
          service:
            type: LoadBalancer
      properties:
        helmChartValues:
          additionalProperties: true
          description: Helm chart values to override for the resource instance.
          example:
            image:
              repository: mysql
              tag: "8.0"
            replicaCount: 3
            service:
              type: LoadBalancer
          type: object
      type: object
    ResourceSearchRecord:
      example:
        description: The PostgresDB for Omnistrate.
        id: r-12345678
        name: postgres
        productTierId: pt-12345678
        productTierName: prod
        resourceType: Operator
        serviceApiId: sa-12345678
        serviceEnvironmentId: se-12345678
        serviceEnvironmentName: prod
        serviceEnvironmentType: PROD
        serviceId: s-12345678
        serviceModelId: sm-12345678
        serviceName: mysql
      properties:
        description:
          description: The resource description.
          example: The PostgresDB for Omnistrate.
          type: string
        id:
          description: The Resource ID.
          example: r-12345678
          type: string
        name:
          description: The resource name.
          example: postgres
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Vel voluptatum officia et rem.
          type: string
        productTierName:
          description: The product tier name of the resource.
          example: prod
          type: string
        resourceType:
          example: Operator
          type: string
        serviceApiId:
          description: ID of a Service API
          example: Modi ex architecto voluptatum incidunt voluptatibus.
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceEnvironmentName:
          description: The service environment name of the resource.
          example: prod
          type: string
        serviceEnvironmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Perferendis harum.
          type: string
        serviceName:
          description: The service name of the resource.
          example: mysql
          type: string
      required:
      - description
      - id
      - name
      - productTierId
      - productTierName
      - serviceApiId
      - serviceEnvironmentId
      - serviceEnvironmentName
      - serviceId
      - serviceModelId
      - serviceName
      type: object
    ResourceVersionSummary:
      example:
        capabilities:
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        - capability: SERVERLESS
          configuration:
            EnableAutoStop: true
            MinimumNodesInPool: 5
            PortsMappingProxyConfig:
              MaxNumberOfClustersPerProxyInstance: 50
              NumberOfPortsPerCluster: 4
            ProxyId: r-123456
            ReferenceProxyKey: resource-proxy
            TargetPort: 5432
        externalResource: true
        genericResourceDeploymentConfiguration:
          image: nginx:latest
          podEvents:
            pod1:
            - FirstTimestamp: 2025-10-01T12:00:00Z
              LastTimestamp: 2025-10-01T12:05:00Z
              Message: Pod scheduled successfully
              NumberOfOccurrences: 3
              Reason: Scheduled
          podStatus:
            pod1: Running
            pod2: Pending
          podToHostMapping:
            pod1: node1
            pod2: node2
        helmDeploymentConfiguration:
          chartName: nginx
          chartVersion: 1.2.3
          podEvents:
            pod1:
            - FirstTimestamp: 2025-10-01T12:00:00Z
              LastTimestamp: 2025-10-01T12:05:00Z
              Message: Pod scheduled successfully
              NumberOfOccurrences: 3
              Reason: Scheduled
            pod2:
            - FirstTimestamp: 2025-10-01T12:06:00Z
              LastTimestamp: 2025-10-01T12:06:00Z
              Message: Insufficient resources
              NumberOfOccurrences: 1
              Reason: FailedScheduling
          podStatus:
            pod1: Running
            pod2: Pending
            pod3: Failed
          podToHostMapping:
            pod1: node1
            pod2: node2
            pod3: node1
          releaseName: my-nginx-release
          releaseNamespace: default
          releaseStatus: deployed
          repositoryURL: https://charts.example.com
          runtimeConfiguration:
            namespace: default
            timeout: 300s
            waitForJobs: true
            waitForJobsTimeout: 10m
          values:
            mysql:
              image:
                repository: mysql
                tag: "8.0"
              replicaCount: 3
              service:
                type: LoadBalancer
        kustomizeDeploymentConfiguration:
          BasePath: /path/to/kustomization
          DeploymentErrors: Failed to apply Kustomize overlays
          Overlays:
            overlay1: /path/to/overlay1
            overlay2: /path/to/overlay2
        latestVersion: "2.0"
        resourceId: r-12345678
        resourceName: asserts-server
        terraformDeploymentConfiguration:
          configurationFiles:
            main.tf: "resource \"aws_instance\" \"example\" { ... }"
            variables.tf: "variable \"instance_type\" { default = \"t2.micro\" }"
          deploymentErrors: Failed to initialize Terraform provider
        version: "1.0"
      properties:
        capabilities:
          description: The capabilities enabled for the resource
          example:
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          - capability: SERVERLESS
            configuration:
              EnableAutoStop: true
              MinimumNodesInPool: 5
              PortsMappingProxyConfig:
                MaxNumberOfClustersPerProxyInstance: 50
                NumberOfPortsPerCluster: 4
              ProxyId: r-123456
              ReferenceProxyKey: resource-proxy
              TargetPort: 5432
          items:
            $ref: "#/components/schemas/ResourceCapability"
          type: array
        externalResource:
          description: Whether the resource is external.
          example: true
          type: boolean
        genericResourceDeploymentConfiguration:
          $ref: "#/components/schemas/GenericResourceDeploymentConfiguration"
        helmDeploymentConfiguration:
          $ref: "#/components/schemas/HelmDeploymentConfiguration"
        kustomizeDeploymentConfiguration:
          $ref: "#/components/schemas/KustomizeDeploymentConfiguration"
        latestVersion:
          description: The latest version of the resource.
          example: "2.0"
          type: string
        resourceId:
          description: ID of a resource
          example: Aperiam odit itaque aut dicta sint illo.
          type: string
        resourceName:
          description: The name of the resource.
          example: asserts-server
          type: string
        terraformDeploymentConfiguration:
          $ref: "#/components/schemas/TerraformDeploymentConfiguration"
        version:
          description: The version of the resource deployed for the instance.
          example: "1.0"
          type: string
      type: object
    RestartResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: c5
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Et sint repellendus soluta inventore reiciendis quia.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: l
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    RestoreResourceInstanceFromSnapshotRequest:
      example:
        network_type: PUBLIC|INTERNAL
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        snapshotId: instance-ss-abcd1234
        subscriptionId: sub-abcd1234
        token: 4b
      properties:
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Vitae autem nostrum.
          type: string
        snapshotId:
          description: ID of a Resource Instance Snapshot
          example: Repellendus aut quo blanditiis voluptatem.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: jo
          minLength: 1
          type: string
      required:
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - snapshotId
      - token
      type: object
    RestoreResourceInstanceRequest:
      example:
        id: instance-abcd1234
        network_type: PUBLIC|INTERNAL
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        targetRestoreTime: 2021-09-01T00:00:00Z
        token: "8"
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Sit blanditiis necessitatibus sit suscipit.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        targetRestoreTime:
          description: The target restore time
          example: 2021-09-01T00:00:00Z
          type: string
        token:
          description: JWT token used to perform authorization
          example: "4"
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - targetRestoreTime
      - token
      type: object
    RevokeConsumptionUserRoleRequest:
      example:
        email: abc@gmail.com
        roleType: reader
        subscriptionId: sub-abcd1234
        token: w
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: d92
          minLength: 1
          type: string
      required:
      - email
      - roleType
      - subscriptionId
      - token
      type: object
    RevokeUserRoleRequest:
      example:
        email: abc@gmail.com
        roleType: reader
        token: fi
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        token:
          description: JWT token used to perform authorization
          example: qy4
          minLength: 1
          type: string
      required:
      - email
      - roleType
      - token
      type: object
    SaaSPortal:
      example:
        customDomain: mycustomdomain.com
        customDomainStatus: READY
        detailedNetworkTopology:
          r-abcd1234:
            allowedIPRanges:
            - 0.0.0.0/0
            clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
            clusterPorts:
            - 3306
            main: true
            networkingType: PUBLIC
            nodes:
            - availabilityZone: us-east-2a
              endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              healthStatus: healthy
              id: primary-0
              ports:
              - 3306
              status: RUNNING
            privateNetworkCIDR: 10.0.0.2/24
            privateNetworkID: n-1234abcd
            publiclyAccessible: true
            resourceKey: saasportal
            resourceName: SaaS Portal
        disablePasswordLogin: false
        emailConfig:
          smtpFromEmail: example@gmail.com
          smtpHost: smtp.gmail.com
          smtpPassword: password
          smtpPort: 587
          smtpUsername: username
        endpoint: https://saas-portal.example.com
        environmentType: DEV
        googleAnalyticsTagID: G-123456789
        imageConfig:
          imageName: myimage
          imageRegistry: ghcr.io
          imageTag: latest
        status: READY
      properties:
        customDomain:
          description: The custom domain of the SaaS portal
          example: mycustomdomain.com
          type: string
        customDomainStatus:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        detailedNetworkTopology:
          additionalProperties: true
          description: The detailed network topology of the SaaS portal
          example:
            r-abcd1234:
              allowedIPRanges:
              - 0.0.0.0/0
              clusterEndpoint: primary.instance-abcd1234.us-east-2.aws.omnistrate.cloud
              clusterPorts:
              - 3306
              main: true
              networkingType: PUBLIC
              nodes:
              - availabilityZone: us-east-2a
                endpoint: primary-0.instance-abcd1234.us-east-2.aws.omnistrate.cloud
                healthStatus: healthy
                id: primary-0
                ports:
                - 3306
                status: RUNNING
              privateNetworkCIDR: 10.0.0.2/24
              privateNetworkID: n-1234abcd
              publiclyAccessible: true
              resourceKey: saasportal
              resourceName: SaaS Portal
          type: object
        disablePasswordLogin:
          description: Whether to disable password login for the SaaS portal
          example: false
          type: boolean
        emailConfig:
          $ref: "#/components/schemas/SaaSPortalEmailConfig"
        endpoint:
          description: The endpoint of the SaaS portal for this environment type
          example: https://saas-portal.example.com
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        googleAnalyticsTagID:
          description: The Google Analytics tag ID for the SaaS portal
          example: G-123456789
          type: string
        imageConfig:
          $ref: "#/components/schemas/SaaSPortalImageConfig"
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
      required:
      - environmentType
      - status
      type: object
    SaaSPortalEmailConfig:
      example:
        smtpFromEmail: example@gmail.com
        smtpHost: smtp.gmail.com
        smtpPassword: password
        smtpPort: 587
        smtpUsername: username
      properties:
        smtpFromEmail:
          description: The SMTP from email
          example: example@gmail.com
          type: string
        smtpHost:
          description: The SMTP host
          example: smtp.gmail.com
          type: string
        smtpPassword:
          description: The SMTP password
          example: password
          type: string
        smtpPort:
          description: The SMTP port
          example: 587
          format: int64
          type: integer
        smtpUsername:
          description: The SMTP username
          example: username
          type: string
      required:
      - smtpFromEmail
      - smtpHost
      - smtpPassword
      - smtpUsername
      type: object
    SaaSPortalImageConfig:
      example:
        imageName: myimage
        imageRegistry: ghcr.io
        imageTag: latest
      properties:
        imageName:
          description: The image name for the SaaS portal
          example: myimage
          type: string
        imageRegistry:
          description: The image registry for the SaaS portal
          example: ghcr.io
          type: string
        imageTag:
          description: The image tag for the SaaS portal
          example: latest
          type: string
      required:
      - imageName
      - imageRegistry
      - imageTag
      type: object
    SearchInventoryRequest:
      example:
        query: foo
        token: mt
      properties:
        query:
          description: The search query.
          example: foo
          type: string
        token:
          description: JWT token used to perform authorization
          example: c1
          minLength: 1
          type: string
      required:
      - query
      - token
      type: object
    SearchInventoryRequest2:
      example:
        query: foo
      properties:
        query:
          description: The search query.
          example: foo
          type: string
      required:
      - query
      type: object
    SearchInventoryResult:
      example:
        deploymentCellResults:
        - cloudProvider: aws
          description: The Deployment Cell is hosted in us-east-2 on aws.
          id: hc-12345
          regionCode: us-east-2
          serviceEnvironmentID: se-12345
          serviceEnvironmentName: MyEnvironment
          serviceEnvironmentType: PROD
          serviceID: s-12345
          serviceName: MyService
        notificationResults:
        - description: Deployment completed
          id: event-12345
          name: Deployment
          priority: Low
          resourceName: postgres
          serviceEnvironmentID: se-12345
          serviceEnvironmentName: MyEnvironment
          serviceEnvironmentType: PROD
          serviceID: s-12345
          serviceName: MyService
          time: 2020-01-01T00:01:00Z
          type: SuccessfulDeployment
        proxyInstanceResults:
        - cloudProvider: aws
          description: My proxy.
          id: i-12345
          managed: true
          managedResourceType: PortsBasedProxy
          portsRegistrationStatus:
            instance-123:
            - 30000
            - 30001
            instance-456:
            - 30002
            - 30003
          proxyType: PortsBasedProxy
          regionCode: us-west-1
          serviceEnvironmentID: se-12345
          serviceEnvironmentName: MyEnvironment
          serviceEnvironmentType: PROD
          serviceID: s-12345
          serviceName: MyService
          status: Running
          statusDescription: Instance is running.
          targetResourceName: postgres
        resourceInstanceResults:
        - cloudProvider: aws
          description: My proxy.
          id: i-12345
          managed: true
          managedResourceType: PortsBasedProxy
          portsRegistrationStatus:
            instance-123:
            - 30000
            - 30001
            instance-456:
            - 30002
            - 30003
          productTierId: pt-12345
          productTierName: free
          productTierVersion: "2.0"
          proxyType: PortsBasedProxy
          regionCode: us-west-1
          resourceName: postgres
          serviceEnvironmentID: se-12345
          serviceEnvironmentName: MyEnvironment
          serviceEnvironmentType: PROD
          serviceID: s-12345
          serviceName: MyService
          status: Running
          statusDescription: Instance is running.
          subscriptionID: sub-12345
        resourceResults:
        - description: The Resource is hosted in us-east-2 on aws.
          id: i-12345
          name: postgres
          productTierId: pt-12345
          productTierName: prod
          serviceApiId: sa-12345
          serviceEnvironmentID: se-12345
          serviceEnvironmentName: MyEnvironment
          serviceEnvironmentType: PROD
          serviceID: s-12345
          serviceModelId: sm-12345
          serviceName: MyService
        serverlessProxyResults:
        - description: My serverless proxy.
          id: r-12345
          managed: false
          managedResourceType: PortsBasedProxy
          name: proxy
          productTierId: pt-12345
          productTierName: prod
          proxyType: PortsBasedProxy
          serviceApiId: sa-12345
          serviceEnvironmentID: se-12345
          serviceEnvironmentName: MyEnvironment
          serviceEnvironmentType: PROD
          serviceID: s-12345
          serviceModelId: sm-12345
          serviceName: MyService
        servicePlanResults:
        - deploymentType: CUSTOMER_HOSTED
          description: The postgres service plan.
          id: pt-12345
          name: postgres
          serviceEnvironmentID: se-12345
          serviceEnvironmentName: MyEnvironment
          serviceEnvironmentType: PROD
          serviceID: s-12345
          serviceName: MyService
          tenancyType: OMNISTRATE_DEDICATED_TENANCY
          version: "2.0"
          versionSetStatus: Active
        serviceResults:
        - description: My Postgres Service
          id: s-12345678
          name: MyService
        subscriptionResults:
        - id: sub-12345
          orgID: org-12345
          productTierID: pt-12345
          rootUserEmail: bob@enterprise.com
          rootUserID: user-12345
          rootUserName: bob
          serviceEnvironmentID: se-12345
          serviceEnvironmentName: MyEnvironment
          serviceEnvironmentType: PROD
          serviceID: s-12345
          serviceName: MyService
          servicePlanName: prod
          status: ACTIVE
        upgradePathResults:
        - id: upgrade-12345
          productTierID: pt-12345
          productTierName: prod
          serviceEnvironmentID: se-12345
          serviceEnvironmentName: MyEnvironment
          serviceEnvironmentType: PROD
          serviceID: s-12345
          serviceName: MyService
          status: IN_PROGRESS
        userResults:
        - email: bob@omnistrate.com
          external: false
          id: user-12345
          name: Bob
          orgName: Bob's Organization
        workflowResults:
        - id: submit-update-instance-abcdefgh
          resourceName: postgres
          serviceEnvironmentID: se-12345
          serviceEnvironmentName: MyEnvironment
          serviceEnvironmentType: PROD
          serviceID: s-12345
          serviceName: MyService
          status: IN_PROGRESS
          type: Service deployment
      properties:
        deploymentCellResults:
          description: The deployment cell search results
          example:
          - cloudProvider: aws
            description: The Deployment Cell is hosted in us-east-2 on aws.
            id: hc-12345
            regionCode: us-east-2
            serviceEnvironmentID: se-12345
            serviceEnvironmentName: MyEnvironment
            serviceEnvironmentType: PROD
            serviceID: s-12345
            serviceName: MyService
          items:
            $ref: "#/components/schemas/DeploymentCellSearchRecord"
          type: array
        notificationResults:
          description: The notification search results
          example:
          - description: Deployment completed
            id: event-12345
            name: Deployment
            priority: Low
            resourceName: postgres
            serviceEnvironmentID: se-12345
            serviceEnvironmentName: MyEnvironment
            serviceEnvironmentType: PROD
            serviceID: s-12345
            serviceName: MyService
            time: 2020-01-01T00:01:00Z
            type: SuccessfulDeployment
          items:
            $ref: "#/components/schemas/NotificationSearchRecord"
          type: array
        proxyInstanceResults:
          description: The proxy instance search results
          example:
          - cloudProvider: aws
            description: My proxy.
            id: i-12345
            managed: true
            managedResourceType: PortsBasedProxy
            portsRegistrationStatus:
              instance-123:
              - 30000
              - 30001
              instance-456:
              - 30002
              - 30003
            proxyType: PortsBasedProxy
            regionCode: us-west-1
            serviceEnvironmentID: se-12345
            serviceEnvironmentName: MyEnvironment
            serviceEnvironmentType: PROD
            serviceID: s-12345
            serviceName: MyService
            status: Running
            statusDescription: Instance is running.
            targetResourceName: postgres
          items:
            $ref: "#/components/schemas/ProxyInstanceSearchRecord"
          type: array
        resourceInstanceResults:
          description: The resource instance search results
          example:
          - cloudProvider: aws
            description: My proxy.
            id: i-12345
            managed: true
            managedResourceType: PortsBasedProxy
            portsRegistrationStatus:
              instance-123:
              - 30000
              - 30001
              instance-456:
              - 30002
              - 30003
            productTierId: pt-12345
            productTierName: free
            productTierVersion: "2.0"
            proxyType: PortsBasedProxy
            regionCode: us-west-1
            resourceName: postgres
            serviceEnvironmentID: se-12345
            serviceEnvironmentName: MyEnvironment
            serviceEnvironmentType: PROD
            serviceID: s-12345
            serviceName: MyService
            status: Running
            statusDescription: Instance is running.
            subscriptionID: sub-12345
          items:
            $ref: "#/components/schemas/ResourceInstanceSearchRecord"
          type: array
        resourceResults:
          description: The resource search results
          example:
          - description: The Resource is hosted in us-east-2 on aws.
            id: i-12345
            name: postgres
            productTierId: pt-12345
            productTierName: prod
            serviceApiId: sa-12345
            serviceEnvironmentID: se-12345
            serviceEnvironmentName: MyEnvironment
            serviceEnvironmentType: PROD
            serviceID: s-12345
            serviceModelId: sm-12345
            serviceName: MyService
          items:
            $ref: "#/components/schemas/ResourceSearchRecord"
          type: array
        serverlessProxyResults:
          description: The serverless proxy search results
          example:
          - description: My serverless proxy.
            id: r-12345
            managed: false
            managedResourceType: PortsBasedProxy
            name: proxy
            productTierId: pt-12345
            productTierName: prod
            proxyType: PortsBasedProxy
            serviceApiId: sa-12345
            serviceEnvironmentID: se-12345
            serviceEnvironmentName: MyEnvironment
            serviceEnvironmentType: PROD
            serviceID: s-12345
            serviceModelId: sm-12345
            serviceName: MyService
          items:
            $ref: "#/components/schemas/ServerlessProxySearchRecord"
          type: array
        servicePlanResults:
          description: The service plan search results
          example:
          - deploymentType: CUSTOMER_HOSTED
            description: The postgres service plan.
            id: pt-12345
            name: postgres
            serviceEnvironmentID: se-12345
            serviceEnvironmentName: MyEnvironment
            serviceEnvironmentType: PROD
            serviceID: s-12345
            serviceName: MyService
            tenancyType: OMNISTRATE_DEDICATED_TENANCY
            version: "2.0"
            versionSetStatus: Active
          items:
            $ref: "#/components/schemas/ServicePlanSearchRecord"
          type: array
        serviceResults:
          description: The service search results
          example:
          - description: My Postgres Service
            id: s-12345678
            name: MyService
          items:
            $ref: "#/components/schemas/ServiceSearchRecord"
          type: array
        subscriptionResults:
          description: The subscription search results
          example:
          - id: sub-12345
            orgID: org-12345
            productTierID: pt-12345
            rootUserEmail: bob@enterprise.com
            rootUserID: user-12345
            rootUserName: bob
            serviceEnvironmentID: se-12345
            serviceEnvironmentName: MyEnvironment
            serviceEnvironmentType: PROD
            serviceID: s-12345
            serviceName: MyService
            servicePlanName: prod
            status: ACTIVE
          items:
            $ref: "#/components/schemas/SubscriptionSearchRecord"
          type: array
        upgradePathResults:
          description: The upgrade path search results
          example:
          - id: upgrade-12345
            productTierID: pt-12345
            productTierName: prod
            serviceEnvironmentID: se-12345
            serviceEnvironmentName: MyEnvironment
            serviceEnvironmentType: PROD
            serviceID: s-12345
            serviceName: MyService
            status: IN_PROGRESS
          items:
            $ref: "#/components/schemas/UpgradePathSearchRecord"
          type: array
        userResults:
          description: The user search results
          example:
          - email: bob@omnistrate.com
            external: false
            id: user-12345
            name: Bob
            orgName: Bob's Organization
          items:
            $ref: "#/components/schemas/UserSearchRecord"
          type: array
        workflowResults:
          description: The workflow search results
          example:
          - id: submit-update-instance-abcdefgh
            resourceName: postgres
            serviceEnvironmentID: se-12345
            serviceEnvironmentName: MyEnvironment
            serviceEnvironmentType: PROD
            serviceID: s-12345
            serviceName: MyService
            status: IN_PROGRESS
            type: Service deployment
          items:
            $ref: "#/components/schemas/WorkflowSearchRecord"
          type: array
      type: object
    SearchRecord:
      example:
        cloudProvider: aws
        description: The PostgresDB for Omnistrate.
        environmentId: se-12345678
        environmentKey: dev
        id: i-12345678
        name: postgres
        orgId: o-12345678
        orgName: Omnistrate
        regionCode: us-west-1
        resourceId: r-U602GZ
        resourceName: postgres
        serviceEnvironmentName: prod
        serviceId: s-12345678
        serviceName: mysql
        servicePlanName: prod
        status: READY
        statusDescription: Maiores quae qui consequatur in omnis veritatis.
        targetResourceName: Galera
        userEmail: bob@enterprise.com
        userID: user-123456
        version: "2.0"
      properties:
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        description:
          description: The description of the record.
          example: The PostgresDB for Omnistrate.
          type: string
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        environmentKey:
          description: The environment key of the record.
          example: dev
          type: string
        id:
          description: The ID of the record.
          example: i-12345678
          type: string
        name:
          description: The name of the record.
          example: postgres
          type: string
        orgId:
          description: ID of an Org
          example: Voluptas nemo mollitia sunt voluptatibus distinctio ex.
          type: string
        orgName:
          description: "The Organization Name of the record, if it's a user."
          example: Omnistrate
          type: string
        regionCode:
          description: "The region code of the record, if it's a deployment cell."
          example: us-west-1
          type: string
        resourceId:
          description: "The resource ID of the record, if it's an instance."
          example: r-U602GZ
          type: string
        resourceName:
          description: "The resource name for this record, if it's a workflow."
          example: postgres
          type: string
        serviceEnvironmentName:
          description: The service environment name of this record.
          example: prod
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceName:
          description: The service name of this record.
          example: mysql
          type: string
        servicePlanName:
          description: "The service plan name of this record, if it's a subscription."
          example: prod
          type: string
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        statusDescription:
          description: The status description of the record.
          example: Ut nostrum eligendi ut recusandae.
          type: string
        targetResourceName:
          description: "The Target Resource Name of the record, if it's a proxy instance."
          example: Galera
          type: string
        userEmail:
          description: "The user email of this record, if it's a subscription."
          example: bob@enterprise.com
          type: string
        userID:
          description: ID of a User
          example: Doloremque tempora.
          type: string
        version:
          description: The version of this record.
          example: "2.0"
          type: string
      required:
      - id
      type: object
    SearchServiceInventoryRequest:
      example:
        environmentId: se-12345678
        query: foo
        serviceId: s-12345678
        token: wjr
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        query:
          description: The search query.
          example: foo
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: on4
          minLength: 1
          type: string
      required:
      - query
      - serviceId
      - token
      type: object
    SearchServiceInventoryRequest2:
      example:
        query: foo
      properties:
        query:
          description: The search query.
          example: foo
          type: string
      required:
      - query
      type: object
    SearchServiceInventoryResult:
      example:
        results:
        - description: The PostgresDB for Omnistrate.
          id: r-12345678
          name: postgres
          status: Ready
          statusDescription: The PostgresDB for Omnistrate is ready.
        serviceId: s-12345678
      properties:
        results:
          description: The search results
          example:
          - description: The PostgresDB for Omnistrate.
            id: r-12345678
            name: postgres
            status: Ready
            statusDescription: The PostgresDB for Omnistrate is ready.
          items:
            $ref: "#/components/schemas/SearchRecord"
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
      required:
      - results
      - serviceId
      type: object
    Secret:
      example:
        environmentType: DEV
        name: my-secret
        value: super-secret-value
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        name:
          description: Name of the secret
          example: my-secret
          type: string
        value:
          description: The value of the secret
          example: super-secret-value
          type: string
      required:
      - environmentType
      - name
      - value
      type: object
    ServerlessProxySearchRecord:
      example:
        description: My proxy.
        id: r-12345678
        managed: false
        managedResourceType: PortsBasedProxy
        name: postgres
        productTierId: pt-12345678
        productTierName: prod
        proxyType: PortsBasedProxy
        serviceApiId: sa-12345678
        serviceEnvironmentId: se-12345678
        serviceEnvironmentName: prod
        serviceEnvironmentType: PROD
        serviceId: s-12345678
        serviceModelId: sm-12345678
        serviceName: mysql
      properties:
        description:
          description: The resource description of the serverless proxy.
          example: My proxy.
          type: string
        id:
          description: The Resource ID of the serverless proxy.
          example: r-12345678
          type: string
        managed:
          description: Is the serverless proxy managed by Omnistrate.
          example: false
          type: boolean
        managedResourceType:
          description: The managed resource type of the serverless proxy.
          example: PortsBasedProxy
          type: string
        name:
          description: The resource name of the serverless proxy.
          example: postgres
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Enim a quia est amet aut magni.
          type: string
        productTierName:
          description: The product tier name of the serverless proxy.
          example: prod
          type: string
        proxyType:
          description: The proxy type of the serverless proxy.
          example: PortsBasedProxy
          type: string
        serviceApiId:
          description: ID of a Service API
          example: Qui fugit praesentium dolores.
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceEnvironmentName:
          description: The service environment name of the serverless proxy.
          example: prod
          type: string
        serviceEnvironmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceModelId:
          description: ID of a Service Model
          example: Ut molestiae beatae laboriosam explicabo soluta.
          type: string
        serviceName:
          description: The service name of the serverless proxy.
          example: mysql
          type: string
      required:
      - description
      - id
      - managed
      - name
      - productTierId
      - productTierName
      - serviceApiId
      - serviceEnvironmentId
      - serviceEnvironmentName
      - serviceId
      - serviceModelId
      - serviceName
      type: object
    ServiceAssets:
      example:
        cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
        cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
      properties:
        cloudFormationURL:
          description: The URL for CloudFormation onboarding
          example: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
          type: string
        cloudFormationURLNoLB:
          description: The URL for CloudFormation onboarding without LoadBalancer
            policy
          example: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
          type: string
      type: object
    ServiceDeploymentDetails:
      example:
        dependsOnDeployment:
        - instanceDeploymentAlias1
        - instanceDeploymentAlias2
        failedReason: Invalid inputs
        instanceDeploymentAlias: instanceDeploymentAlias
        instanceId: i-12345678
        serviceId: s-12345678
        status: PENDING
        statusMessage: Creating deployment
        subscriptionId: Ab veritatis rerum quam voluptates.
      properties:
        dependsOnDeployment:
          description: The deployment keys that this deployment depends on
          example:
          - instanceDeploymentAlias1
          - instanceDeploymentAlias2
          items:
            example: Consequatur reprehenderit.
            type: string
          type: array
        failedReason:
          description: The reason why the deployment failed
          example: Invalid inputs
          type: string
        instanceDeploymentAlias:
          description: The instance deployment alias
          example: instanceDeploymentAlias
          type: string
        instanceId:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        status:
          description: The status of the service deployment
          example: PENDING
          type: string
        statusMessage:
          description: The status message of the service deployment
          example: Creating deployment
          type: string
        subscriptionId:
          description: ID of a Subscription
          example: Sit sit veritatis.
          type: string
      required:
      - instanceDeploymentAlias
      - serviceId
      - subscriptionId
      type: object
    ServiceEnvironment:
      example:
        id: se-12345678
        name: dev
        promoteStatus: IN_SYNC|OUT_OF_SYNC|UNKNOWN
        saasPortalStatus: READY
        saasPortalUrl: https://saas-portal.example.com
        servicePlans:
        - description: A Basic product tier
          modelType: CUSTOMER_HOSTED
          name: Basic
          productTierID: pt-12345678
          tierType: OMNISTRATE_DEDICATED_TENANCY
        - description: A Basic product tier
          modelType: CUSTOMER_HOSTED
          name: Basic
          productTierID: pt-12345678
          tierType: OMNISTRATE_DEDICATED_TENANCY
        - description: A Basic product tier
          modelType: CUSTOMER_HOSTED
          name: Basic
          productTierID: pt-12345678
          tierType: OMNISTRATE_DEDICATED_TENANCY
        - description: A Basic product tier
          modelType: CUSTOMER_HOSTED
          name: Basic
          productTierID: pt-12345678
          tierType: OMNISTRATE_DEDICATED_TENANCY
        sourceEnvironmentID: se-12345678
        sourceEnvironmentName: dev
        type: DEV
        visibility: private
      properties:
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        name:
          description: Name of the Service Environment
          example: dev
          type: string
        promoteStatus:
          description: The status of the promotion
          example: IN_SYNC|OUT_OF_SYNC|UNKNOWN
          type: string
        saasPortalStatus:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        saasPortalUrl:
          description: The URL of the SaaS portal for this environment type
          example: https://saas-portal.example.com
          type: string
        servicePlans:
          description: List of service plans
          example:
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          - description: A Basic product tier
            modelType: CUSTOMER_HOSTED
            name: Basic
            productTierID: pt-12345678
            tierType: OMNISTRATE_DEDICATED_TENANCY
          items:
            $ref: "#/components/schemas/ServicePlan"
          type: array
        sourceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        sourceEnvironmentName:
          description: The source environment name
          example: dev
          type: string
        type:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - id
      - name
      - servicePlans
      - visibility
      type: object
    ServiceHealthRequest:
      example:
        serviceEnvironmentID: se-123456
        serviceID: s-123456
        token: d
      properties:
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "67"
          minLength: 1
          type: string
      required:
      - serviceEnvironmentID
      - serviceID
      - token
      type: object
    ServiceHealthSummary:
      example:
        cloudProviderHealthSummary:
          aws|azure|gcp|all:
            cloudProvider: aws
            deployingInstances: 7584893623494801796
            healthyInstances: 8535360420281263385
            message: Cloud provider is healthy
            regionalHealthSummary:
              Eum consequatur qui in vero vitae.:
                deployingInstances: 5368477830127649303
                deploymentCellHealthSummary:
                  Facere voluptatem at alias et molestias beatae.:
                    deployingInstances: 140941459220726652
                    healthyInstances: 2469040421288542176
                    hostClusterID: hc-12345678
                    message: Cell is healthy
                    status: Healthy
                    totalInstances: 3903839146191449670
                    unhealthyInstances: 6179807114901378760
                    unknownInstances: 7464467265783535263
                healthyInstances: 4906411778649624403
                message: Region is healthy
                region: us-east-1
                status: Healthy
                totalInstances: 7838072593245651223
                unhealthyInstances: 8234245034027001273
                unknownInstances: 7377689956902808442
              Sed eos non.:
                deployingInstances: 5368477830127649303
                deploymentCellHealthSummary:
                  Facere voluptatem at alias et molestias beatae.:
                    deployingInstances: 140941459220726652
                    healthyInstances: 2469040421288542176
                    hostClusterID: hc-12345678
                    message: Cell is healthy
                    status: Healthy
                    totalInstances: 3903839146191449670
                    unhealthyInstances: 6179807114901378760
                    unknownInstances: 7464467265783535263
                healthyInstances: 4906411778649624403
                message: Region is healthy
                region: us-east-1
                status: Healthy
                totalInstances: 7838072593245651223
                unhealthyInstances: 8234245034027001273
                unknownInstances: 7377689956902808442
              Vel velit.:
                deployingInstances: 5368477830127649303
                deploymentCellHealthSummary:
                  Facere voluptatem at alias et molestias beatae.:
                    deployingInstances: 140941459220726652
                    healthyInstances: 2469040421288542176
                    hostClusterID: hc-12345678
                    message: Cell is healthy
                    status: Healthy
                    totalInstances: 3903839146191449670
                    unhealthyInstances: 6179807114901378760
                    unknownInstances: 7464467265783535263
                healthyInstances: 4906411778649624403
                message: Region is healthy
                region: us-east-1
                status: Healthy
                totalInstances: 7838072593245651223
                unhealthyInstances: 8234245034027001273
                unknownInstances: 7377689956902808442
            status: Healthy
            totalInstances: 5483033377600622938
            unhealthyInstances: 3271038130284103322
            unknownInstances: 2590987084562542303
        healthyInstances: 9056704955789906763
        message: Service is healthy
        serviceEnvironmentID: se-123456
        serviceID: s-123456
        status: Healthy
        totalInstances: 1024295563603695415
        unhealthyInstances: 1721116572486806552
        unknownInstances: 5574969432565946486
      properties:
        cloudProviderHealthSummary:
          additionalProperties: true
          description: The summary of health by cloud provider
          example:
            aws|azure|gcp|all:
              cloudProvider: aws
              deployingInstances: 7584893623494801796
              healthyInstances: 8535360420281263385
              message: Cloud provider is healthy
              regionalHealthSummary:
                Eum consequatur qui in vero vitae.:
                  deployingInstances: 5368477830127649303
                  deploymentCellHealthSummary:
                    Facere voluptatem at alias et molestias beatae.:
                      deployingInstances: 140941459220726652
                      healthyInstances: 2469040421288542176
                      hostClusterID: hc-12345678
                      message: Cell is healthy
                      status: Healthy
                      totalInstances: 3903839146191449670
                      unhealthyInstances: 6179807114901378760
                      unknownInstances: 7464467265783535263
                  healthyInstances: 4906411778649624403
                  message: Region is healthy
                  region: us-east-1
                  status: Healthy
                  totalInstances: 7838072593245651223
                  unhealthyInstances: 8234245034027001273
                  unknownInstances: 7377689956902808442
                Sed eos non.:
                  deployingInstances: 5368477830127649303
                  deploymentCellHealthSummary:
                    Facere voluptatem at alias et molestias beatae.:
                      deployingInstances: 140941459220726652
                      healthyInstances: 2469040421288542176
                      hostClusterID: hc-12345678
                      message: Cell is healthy
                      status: Healthy
                      totalInstances: 3903839146191449670
                      unhealthyInstances: 6179807114901378760
                      unknownInstances: 7464467265783535263
                  healthyInstances: 4906411778649624403
                  message: Region is healthy
                  region: us-east-1
                  status: Healthy
                  totalInstances: 7838072593245651223
                  unhealthyInstances: 8234245034027001273
                  unknownInstances: 7377689956902808442
                Vel velit.:
                  deployingInstances: 5368477830127649303
                  deploymentCellHealthSummary:
                    Facere voluptatem at alias et molestias beatae.:
                      deployingInstances: 140941459220726652
                      healthyInstances: 2469040421288542176
                      hostClusterID: hc-12345678
                      message: Cell is healthy
                      status: Healthy
                      totalInstances: 3903839146191449670
                      unhealthyInstances: 6179807114901378760
                      unknownInstances: 7464467265783535263
                  healthyInstances: 4906411778649624403
                  message: Region is healthy
                  region: us-east-1
                  status: Healthy
                  totalInstances: 7838072593245651223
                  unhealthyInstances: 8234245034027001273
                  unknownInstances: 7377689956902808442
              status: Healthy
              totalInstances: 5483033377600622938
              unhealthyInstances: 3271038130284103322
              unknownInstances: 2590987084562542303
          type: object
        healthyInstances:
          description: The number of healthy instances in the region
          example: 2511930961134975554
          format: int64
          type: integer
        message:
          description: The status message
          example: Service is healthy
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        status:
          description: The status of the service
          example: Healthy
          type: string
        totalInstances:
          description: The total number of instances in the region
          example: 8414774334649173973
          format: int64
          type: integer
        unhealthyInstances:
          description: The number of unhealthy instances in the region
          example: 1981211790682882571
          format: int64
          type: integer
        unknownInstances:
          description: The number of instances with unknown status
          example: 2516583022995636758
          format: int64
          type: integer
      required:
      - cloudProviderHealthSummary
      - healthyInstances
      - message
      - serviceEnvironmentID
      - serviceID
      - status
      - totalInstances
      - unhealthyInstances
      type: object
    ServiceModelFeatureConfiguration:
      additionalProperties: true
      description: The configuration parameters of the service model feature
      example:
        status: "ON"
      type: object
    ServiceModelFeatureDetail:
      example:
        configuration:
          status: "ON"
        feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
      properties:
        configuration:
          additionalProperties: true
          description: The configuration parameters of the service model feature
          example:
            status: "ON"
          type: object
        feature:
          description: Name of the service model feature
          example: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          type: string
      required:
      - configuration
      - feature
      type: object
    ServiceOffering:
      example:
        AutoApproveSubscription: false
        allowCreatesWhenPaymentNotConfigured: true
        assets:
          cloudFormationURL: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa
          cloudFormationURLNoLB: https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks/quickcreate?templateURL=https://s3.amazonaws.com/omnistrate-cloudformation-dev/org-EUVvex3bVm/account-config-setup-template.yaml&stackName=AccountConfigSetup&param_AccountConfigIdentityId=org-EUVvex3bVm&param_OIDCIssuerURLWithoutPrefix=oidc.eks.us-east-2.amazonaws.com/id/C339DC3726AD36506FB7ABE55754784F&param_OIDCIssuerThumbprintList=9e99a48a9960b14926bb7f3b02e22da2b0ab7280&param_ServiceAccount=bootstrap-sa&param_CreateLoadBalancerPolicy=false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        cloudProviders:
        - AWS
        - GCP
        - Azure
        gcpRegions:
        - us-central1
        maxNumberOfInstances: 5
        privateRegions:
        - n/a
        productTierDescription: A premium product tier
        productTierDocumentation: Any documentation
        productTierFeatures:
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        - configuration:
            provider: native
          feature: LOGS
          scope: INTERNAL
        productTierID: pt-12345678
        productTierName: Premium
        productTierPlanDescription: A premium plan
        productTierPricing:
          price1: value1
        productTierSupport: Any support
        productTierType: OMNISTRATE_DEDICATED_TENANCY
        productTierURLKey: premium
        productTierVersion: 1.0.0
        resourceParameters:
        - name: MySQL
          resourceId: r-12345678
          urlKey: mysql
        - name: Redis
          resourceId: r-abcdefgh
          urlKey: redis
        serviceAPIID: sa-12345678
        serviceAPIVersion: v1
        serviceEnvironmentID: se-12345678
        serviceEnvironmentName: Development
        serviceEnvironmentType: DEV
        serviceEnvironmentURLKey: dev
        serviceEnvironmentVisibility: PRIVATE
        serviceLogoURL: Aut vitae facilis repellat tenetur ut sed.
        serviceModelFeatures:
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        - configuration:
            status: "ON"
          feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
        serviceModelID: sm-12345678
        serviceModelName: Hosted
        serviceModelStatus: Ready
        serviceModelType: "CUSTOMER_HOSTED, OMNISTRATE_HOSTED, BYOA"
        serviceModelURLKey: hosted
        supportsPublicNetwork: false
      properties:
        AutoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        assets:
          $ref: "#/components/schemas/ServiceAssets"
        awsRegions:
          description: The AWS regions that this service offering is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Ut accusamus.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this service offering is available on
          example:
          - northcentralus
          items:
            example: Exercitationem expedita impedit saepe molestias ducimus.
            type: string
          type: array
        cloudProviders:
          description: List of supported cloud providers for this product tier.
          example:
          - AWS
          - GCP
          - Azure
          items:
            example: Quo doloribus voluptatem est quibusdam.
            type: string
          type: array
        gcpRegions:
          description: The GCP regions that this service offering is available on
          example:
          - us-central1
          items:
            example: Officiis animi.
            type: string
          type: array
        maxNumberOfInstances:
          description: Maximum number of instances
          example: 5
          format: int64
          type: integer
        privateRegions:
          description: The Private regions that this service offering is available
            on
          example:
          - n/a
          items:
            example: Quis occaecati.
            type: string
          type: array
        productTierDescription:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        productTierDocumentation:
          description: Documentation
          example: Any documentation
          type: string
        productTierFeatures:
          description: Enabled product tier features
          example:
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          - configuration:
              provider: native
            feature: LOGS
            scope: INTERNAL
          items:
            $ref: "#/components/schemas/ProductTierFeatureDetail"
          type: array
        productTierID:
          description: ID of a Product Tier
          example: Nobis quibusdam et quo iusto magnam.
          type: string
        productTierName:
          description: The product tier name
          example: Premium
          type: string
        productTierPlanDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        productTierPricing:
          description: Pricing
          example:
            price1: value1
        productTierSupport:
          description: Support
          example: Any support
          type: string
        productTierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        productTierURLKey:
          description: The product tier URL key
          example: premium
          type: string
        productTierVersion:
          description: The product tier version
          example: 1.0.0
          type: string
        resourceParameters:
          description: The resource parameters
          example:
          - name: MySQL
            resourceId: r-12345678
            urlKey: mysql
          - name: Redis
            resourceId: r-abcdefgh
            urlKey: redis
          items:
            $ref: "#/components/schemas/ResourceEntity"
          type: array
        serviceAPIID:
          description: ID of a Service API
          example: Ut repudiandae vel.
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceEnvironmentName:
          description: The service environment name
          example: Development
          type: string
        serviceEnvironmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        serviceEnvironmentURLKey:
          description: The service environment URL key
          example: dev
          type: string
        serviceEnvironmentVisibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Consectetur et.
          type: string
        serviceModelFeatures:
          description: Enabled service model features
          example:
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          - configuration:
              status: "ON"
            feature: CUSTOM_NETWORKS|CUSTOM_TERRAFORM_POLICY
          items:
            $ref: "#/components/schemas/ServiceModelFeatureDetail"
          type: array
        serviceModelID:
          description: ID of a Service Model
          example: Enim est vel ducimus sunt accusantium.
          type: string
        serviceModelName:
          description: The service model name
          example: Hosted
          type: string
        serviceModelStatus:
          description: The service model status
          example: Ready
          type: string
        serviceModelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        serviceModelURLKey:
          description: The service model URL key
          example: hosted
          type: string
        supportsPublicNetwork:
          description: Indicates whether any of the resources in the product tier
            support public network
          example: false
          type: boolean
      required:
      - AutoApproveSubscription
      - productTierDocumentation
      - productTierID
      - productTierName
      - productTierPricing
      - productTierSupport
      - productTierType
      - productTierURLKey
      - productTierVersion
      - resourceParameters
      - serviceAPIID
      - serviceAPIVersion
      - serviceEnvironmentID
      - serviceEnvironmentName
      - serviceEnvironmentType
      - serviceEnvironmentURLKey
      - serviceEnvironmentVisibility
      - serviceLogoURL
      - serviceModelID
      - serviceModelName
      - serviceModelStatus
      - serviceModelType
      - serviceModelURLKey
      type: object
    ServicePlan:
      example:
        description: A Basic product tier
        modelType: CUSTOMER_HOSTED
        name: Basic
        productTierID: pt-12345678
        tierType: OMNISTRATE_DEDICATED_TENANCY
      properties:
        description:
          description: Description of the Product Tier
          example: A Basic product tier
          type: string
        modelType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        name:
          description: Name of the Product Tier
          example: Basic
          type: string
        productTierID:
          description: ID of a Product Tier
          example: Aut repellat porro ut dolore doloremque earum.
          type: string
        tierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
      required:
      - description
      - modelType
      - name
      - productTierID
      - tierType
      type: object
    ServicePlanSearchRecord:
      example:
        deploymentType: CUSTOMER_HOSTED
        description: The PostgresDB for Omnistrate.
        id: pt-12345678
        name: postgres
        releasedAt: 2020-01-01T00:00:00Z
        serviceEnvironmentId: se-12345678
        serviceEnvironmentName: prod
        serviceEnvironmentType: PROD
        serviceId: s-12345678
        serviceName: mysql
        tenancyType: OMNISTRATE_DEDICATED_TENANCY
        version: "2.0"
        versionName: alpha
        versionSetStatus: Active
      properties:
        deploymentType:
          description: The model type encapsulating this service
          example: OMNISTRATE_HOSTED|CUSTOMER_HOSTED|BYOA
          type: string
        description:
          description: The Product Tier description of the service plan.
          example: The PostgresDB for Omnistrate.
          type: string
        id:
          description: The Product Tier ID of the service plan.
          example: pt-12345678
          type: string
        name:
          description: The Product Tier name of the service plan.
          example: postgres
          type: string
        releasedAt:
          description: The timestamp when the service plan was released.
          example: 2020-01-01T00:00:00Z
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceEnvironmentName:
          description: The service environment name of the service plan.
          example: prod
          type: string
        serviceEnvironmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceName:
          description: The service name of the service plan.
          example: mysql
          type: string
        tenancyType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        version:
          description: The Product Tier version of the service plan.
          example: "2.0"
          type: string
        versionName:
          description: The Product Tier version name of the service plan.
          example: alpha
          type: string
        versionSetStatus:
          description: The Product Tier version set status of the service plan.
          example: Active
          type: string
      required:
      - deploymentType
      - description
      - id
      - name
      - serviceEnvironmentId
      - serviceEnvironmentName
      - serviceId
      - serviceName
      - tenancyType
      - version
      - versionSetStatus
      type: object
    ServiceProviderEvent:
      example:
        alertType: Alarm
        eventCategory: InstanceEvent
        eventID: e-123456
        eventPayload:
          Assumenda ut nostrum placeat.: Et dolor qui animi.
          Impedit ipsam ut eius est est nisi.: Perspiciatis sunt ea cupiditate.
        eventType: UnhealthyInstance
        expiryTime: 2023-01-10T00:00:00Z
        instanceID: instance-12345678
        planVersion: v1.0
        priority: Critical
        resourceName: Resource-123
        scope: ServiceProvider
        serviceEnvironmentID: se-123456
        serviceID: s-123456
        serviceName: Service-123
        servicePlanName: Basic Plan
        time: 2023-01-10T00:00:00Z
      properties:
        alertType:
          description: The type of the alert
          example: Alarm|Notification
          type: string
        eventCategory:
          description: The category of the service provider specific event
          example: InstanceEvent|ServiceEvent|UserEvent|IdentityProviderEvent
          type: string
        eventID:
          description: ID of a Event
          example: Commodi vel fuga.
          type: string
        eventPayload:
          additionalProperties: true
          description: The event payload for a service provider
          example:
            Distinctio beatae.: Earum quia corporis fuga laborum voluptas ut.
            Inventore illo doloribus eos soluta laborum.: Libero quaerat at magnam.
            Similique id exercitationem fugit soluta quia.: Impedit eos eum aperiam
              quaerat animi.
          type: object
        eventType:
          description: The type of the service provider specific event
          example: UnhealthyInstance|FailedDeployment|ScaleOut|UserSignUp|UserSubscription
          type: string
        expiryTime:
          description: The expiry time of the event
          example: 2023-01-10T00:00:00Z
          type: string
        instanceID:
          description: ID of a Resource Instance
          example: instance-12345678
          type: string
        planVersion:
          description: The version of the plan
          example: v1.0
          type: string
        priority:
          description: The priority of the event
          example: Critical|High|Medium|Low
          type: string
        resourceName:
          description: The name of the resource
          example: Resource-123
          type: string
        scope:
          description: The scope of the event
          example: ServiceProvider|EndCustomer
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        serviceName:
          description: The name of the service
          example: Service-123
          type: string
        servicePlanName:
          description: The name of the service plan
          example: Basic Plan
          type: string
        time:
          description: The event time
          example: 2023-01-10T00:00:00Z
          type: string
      required:
      - alertType
      - eventCategory
      - eventID
      - eventPayload
      - eventType
      - expiryTime
      - priority
      - scope
      - time
      type: object
    ServiceProviderEventSummary:
      example:
        eventsSummary:
          FailedDeployment: 1
          UnhealthyInstance: 2
      properties:
        eventsSummary:
          additionalProperties: true
          description: The number of outstanding events by type
          example:
            FailedDeployment: 1
            UnhealthyInstance: 2
          type: object
      type: object
    ServiceSearchRecord:
      example:
        description: The PostgresDB for Omnistrate.
        id: s-12345678
        name: postgres
      properties:
        description:
          description: The service description.
          example: The PostgresDB for Omnistrate.
          type: string
        id:
          description: The Service ID.
          example: s-12345678
          type: string
        name:
          description: The service name.
          example: postgres
          type: string
      required:
      - description
      - id
      - name
      type: object
    ServiceWorkflow:
      example:
        ResourceCount: 7893976302812839155
        UpdatedBy: Anonymous
        UpdatedReason: Customer requested termination.
        WorkflowType: Service deployment.
        awsAccountID: "123456789012"
        azureSubscriptionID: 0fa05079-dd73-4b88-babc-05537817604a
        cloudProvider: aws
        endTime: 2020-01-01T00:01:00Z
        gcpProjectID: my-project
        id: submit-create-instance-plan-instance-50h74sj46
        manualOverride:
          setAt: 2020-01-01T00:00:00Z
          setterUserId: user-12345678
          workflowId: wf-12345678
        orgName: my-org
        parentId: Quidem ducimus.
        planType: my-plan
        servicePlanName: my-product-tier-plan
        startTime: 2020-01-01T00:00:00Z
        status: IN_PROGRESS
      properties:
        ResourceCount:
          description: The number of resources updated by the workflow.
          example: 4228459041887350406
          format: int64
          type: integer
        UpdatedBy:
          description: "The user who updated the workflow execution. - Pause, Resume,\
            \ Terminate"
          example: Anonymous
          type: string
        UpdatedReason:
          description: The reason the workflow execution was terminated.
          example: Customer requested termination.
          type: string
        WorkflowType:
          description: The type of workflow execution.
          example: Service deployment.
          type: string
        awsAccountID:
          description: The AWS account ID
          example: "123456789012"
          type: string
        azureSubscriptionID:
          description: The Azure subscription ID
          example: 0fa05079-dd73-4b88-babc-05537817604a
          type: string
        cloudProvider:
          description: Name of the Infra Provider
          example: aws|azure|gcp|all
          type: string
        endTime:
          description: The time the workflow execution ended.
          example: 2020-01-01T00:01:00Z
          type: string
        gcpProjectID:
          description: The GCP project ID
          example: my-project
          type: string
        id:
          description: ID of the ServiceWorkflow
          example: submit-create-instance-plan-instance-50h74sj46
          type: string
        manualOverride:
          $ref: "#/components/schemas/ManualOverride"
        orgName:
          description: The name of the instance owner organization.
          example: my-org
          type: string
        parentId:
          description: The parent workflow's id for the execution.
          example: Totam hic eligendi voluptatibus repudiandae nesciunt.
          type: string
        planType:
          description: The plan type of the instance owner organization.
          example: my-plan
          type: string
        servicePlanName:
          description: The service plan name for the workflow.
          example: my-product-tier-plan
          type: string
        startTime:
          description: The time the workflow execution started.
          example: 2020-01-01T00:00:00Z
          type: string
        status:
          description: The status of the workflow execution.
          example: IN_PROGRESS
          type: string
      required:
      - WorkflowType
      - cloudProvider
      - id
      - orgName
      - startTime
      - status
      type: object
    SetActiveAccountConfigRequest:
      example:
        accountConfigId: ac-12345678
        id: sm-12345678
        serviceId: s-12345678
        token: 9e
      properties:
        accountConfigId:
          description: ID of an Account Config
          example: Ut voluptas quis praesentium asperiores minus reiciendis.
          type: string
        id:
          description: ID of a Service Model
          example: Totam rem nemo velit quas ut praesentium.
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: y9
          minLength: 1
          type: string
      required:
      - accountConfigId
      - id
      - serviceId
      - token
      type: object
    SetSecretRequest:
      example:
        environmentType: DEV
        name: my-secret
        token: s
        value: super-secret-value
      properties:
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        name:
          description: Name of the secret
          example: my-secret
          type: string
        token:
          description: JWT token used to perform authorization
          example: a
          minLength: 1
          type: string
        value:
          description: The value of the secret
          example: super-secret-value
          type: string
      required:
      - environmentType
      - name
      - token
      - value
      type: object
    SigninRequest:
      example:
        email: abc@gmail.com
        hashedPassword: deprecated
        password: password
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        hashedPassword:
          example: deprecated
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
      required:
      - email
      type: object
    SigninResult:
      example:
        jwtToken: ""
      properties:
        jwtToken:
          description: The jwt token
          example: ""
          type: string
      required:
      - jwtToken
      type: object
    SignupRequest:
      example:
        companyDescription: We sell xyz database software
        companyUrl: https://www.mywebsite.com
        email: abc@gmail.com
        legalCompanyName: mywebsite
        name: John Doe
        password: password
      properties:
        companyDescription:
          example: We sell xyz database software
          minLength: 1
          type: string
        companyUrl:
          example: https://www.mywebsite.com
          minLength: 1
          type: string
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        legalCompanyName:
          default: ""
          example: mywebsite
          type: string
        name:
          example: John Doe
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
      required:
      - email
      - name
      - password
      type: object
    SlackConfiguration:
      example:
        webhookUrl: https://hooks.slack.com/services/...
      properties:
        webhookUrl:
          description: URL to send notifications to
          example: https://hooks.slack.com/services/...
          type: string
      required:
      - webhookUrl
      type: object
    StartResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: "3"
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Amet possimus nihil.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: 4s
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    StopResourceInstanceRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: gh
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Optio fugiat quis repudiandae dolores.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: 5h
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    StripeAuthorizeURLRequest:
      example:
        token: yi1
      properties:
        token:
          description: JWT token used to perform authorization
          example: x
          minLength: 1
          type: string
      required:
      - token
      type: object
    StripeAuthorizeURLResult:
      example:
        authorizeURL: https://connect.stripe.com/oauth/authorize?response_type=code&client_id=ca_12345678&scope=read_write&state=12345678
      properties:
        authorizeURL:
          description: URL to authorize Stripe Connect
          example: https://connect.stripe.com/oauth/authorize?response_type=code&client_id=ca_12345678&scope=read_write&state=12345678
          type: string
      type: object
    SubscriptionLicense:
      example:
        certificateBase64: Est et hic.
        expirationDate: 2024-01-01T10:00:00Z
        licenseBase64: Voluptatibus omnis itaque iusto in.
      properties:
        certificateBase64:
          default: ""
          description: Public certificate used to sign the license in Base 64 format
          example: Recusandae ipsum iusto expedita commodi id.
          type: string
        expirationDate:
          description: Current expiration of the license in RFC 3339 format. The license
            will be renewed periodically before this date while the subscription is
            active.
          example: 2024-01-01T10:00:00Z
          type: string
        licenseBase64:
          default: ""
          description: License file in Base 64 format
          example: Ut unde eum quae.
          type: string
      type: object
    SubscriptionPricing:
      example:
        createdAt: 2019-01-01T00:00:00Z
        createdByUserId: user-12345678
        createdByUserName: John Doe
        customPrice: true
        endDate: 2019-01-01T00:00:00Z
        isActiveBillingPrice: true
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        startDate: 2019-01-01T00:00:00Z
      properties:
        createdAt:
          description: The time that this pricing was created
          example: 2019-01-01T00:00:00Z
          type: string
        createdByUserId:
          description: ID of a User
          example: Earum et eum veniam asperiores hic et.
          type: string
        createdByUserName:
          description: The name of the user that created the price
          example: John Doe
          type: string
        customPrice:
          description: Whether this price is a custom price
          example: true
          type: boolean
        endDate:
          description: The end date of the price
          example: 2019-01-01T00:00:00Z
          type: string
        isActiveBillingPrice:
          description: Whether this price should be used for billing
          example: true
          type: boolean
        pricePerUnit:
          additionalProperties: true
          description: The price per unit for the subscription
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        startDate:
          description: The start date of the price
          example: 2019-01-01T00:00:00Z
          type: string
      type: object
    SubscriptionSearchRecord:
      example:
        id: sub-12345678
        orgID: org-12345678
        productTierID: pt-12345678
        rootUserEmail: bob@enterprise.com
        rootUserID: user-123456
        rootUserName: bob
        serviceEnvironmentID: se-12345678
        serviceEnvironmentName: prod
        serviceEnvironmentType: PROD
        serviceID: s-12345678
        serviceName: mysql
        servicePlanName: prod
        status: ACTIVE
      properties:
        id:
          description: The Subscription ID.
          example: sub-12345678
          type: string
        orgID:
          description: ID of an Org
          example: Cumque adipisci soluta id.
          type: string
        productTierID:
          description: ID of a Product Tier
          example: Consequatur et illum.
          type: string
        rootUserEmail:
          description: The root user email of the subscription.
          example: bob@enterprise.com
          type: string
        rootUserID:
          description: ID of a User
          example: Asperiores pariatur.
          type: string
        rootUserName:
          description: The root user name of the subscription.
          example: bob
          type: string
        serviceEnvironmentID:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceEnvironmentName:
          description: The service environment name of the subscription.
          example: prod
          type: string
        serviceEnvironmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        serviceID:
          description: ID of a Service
          example: s-123456
          type: string
        serviceName:
          description: The service name of the subscription.
          example: mysql
          type: string
        servicePlanName:
          description: The service plan name of the subscription.
          example: prod
          type: string
        status:
          description: Subscription Status
          example: ACTIVE|SUSPENDED|TERMINATED|CANCELLED
          type: string
      required:
      - id
      - orgID
      - productTierID
      - rootUserEmail
      - rootUserID
      - rootUserName
      - serviceEnvironmentID
      - serviceEnvironmentName
      - serviceID
      - serviceName
      - servicePlanName
      - status
      type: object
    SubscriptionUsers:
      example:
        email: abc@gmail.com
        name: John Dae
        roleType: reader
        subscriptionId: sub-abcd1234
        userId: user-abcd1234
      properties:
        email:
          description: The email of the user
          example: abc@gmail.com
          type: string
        name:
          description: The name of the user
          example: John Dae
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        userId:
          description: The User ID
          example: user-abcd1234
          type: string
      required:
      - email
      - name
      - roleType
      - subscriptionId
      - userId
      type: object
    TerminateServiceWorkflowRequest:
      example:
        environmentId: se-12345678
        id: submit-create-instance-plan-instance-50h74sj46
        serviceId: s-12345678
        token: z
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        id:
          description: ID of the ServiceWorkflow
          example: submit-create-instance-plan-instance-50h74sj46
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "72"
          minLength: 1
          type: string
      required:
      - environmentId
      - id
      - serviceId
      - token
      type: object
    TerraformDeploymentConfiguration:
      example:
        ConfigurationFiles:
          main.tf: "resource \"aws_instance\" \"example\" { ... }"
          variables.tf: "variable \"instance_type\" { default = \"t2.micro\" }"
        DeploymentErrors: Failed to initialize Terraform provider
      properties:
        ConfigurationFiles:
          additionalProperties:
            example: Sed vel totam corrupti ut.
            type: string
          description: Deployed files for Terraform deployment
          example:
            main.tf: "resource \"aws_instance\" \"example\" { ... }"
            variables.tf: "variable \"instance_type\" { default = \"t2.micro\" }"
          type: object
        DeploymentErrors:
          description: Errors encountered during the Terraform deployment
          example: Failed to initialize Terraform provider
          type: string
      type: object
    UpdateAccountConfigResourceInstanceRequest:
      example:
        id: instance-abcd1234
        serviceId: service-1234
        setConnection: true
        subscriptionId: sub-abcd1234
        token: 9p
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        serviceId:
          description: The service ID
          example: service-1234
          type: string
        setConnection:
          description: set account config instance connection
          example: true
          type: boolean
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: cvs
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - subscriptionId
      - token
      type: object
    UpdateCustomerOnboardingRequest:
      example:
        id: onboarding-1234567890
        serviceId: service-1234567890
        stage:
          name: ConfigureAccounts
          status: Skipped
        token: w7
      properties:
        id:
          description: ID of a Customer Onboarding
          example: Et laudantium accusantium sint aliquid.
          type: string
        serviceId:
          description: The ID of the service associated with this onboarding.
          example: service-1234567890
          type: string
        stage:
          $ref: "#/components/schemas/OnboardingStage"
        token:
          description: JWT token used to perform authorization
          example: fz2
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    UpdateCustomerOnboardingRequest2:
      example:
        serviceId: service-1234567890
        stage:
          name: ConfigureAccounts
          status: Skipped
      properties:
        serviceId:
          description: The ID of the service associated with this onboarding.
          example: service-1234567890
          type: string
        stage:
          $ref: "#/components/schemas/OnboardingStage"
      type: object
    UpdateHostClusterRequest:
      example:
        id: hc-12345678
        pendingAmenities:
        - Description: Ensures high availability across multiple zones.
          IsManaged: true
          Name: Prometheus
          Properties:
            Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
            Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
          Type: HelmChart
        - Description: Ensures high availability across multiple zones.
          IsManaged: true
          Name: Prometheus
          Properties:
            Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
            Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
          Type: HelmChart
        syncWithOrgTemplate: true
        token: l
      properties:
        id:
          description: ID of a Host Cluster
          example: Eos illum quia dicta asperiores dicta vitae.
          type: string
        pendingAmenities:
          description: The pending amenities for the host cluster
          example:
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
              Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
            Type: HelmChart
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
              Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
            Type: HelmChart
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
              Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
            Type: HelmChart
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Architecto culpa assumenda.: Est ducimus quis perferendis et sit.
              Molestiae pariatur fugiat.: Voluptatem beatae magnam qui libero et tenetur.
            Type: HelmChart
          items:
            $ref: "#/components/schemas/Amenity"
          type: array
        syncWithOrgTemplate:
          description: Whether to sync the host cluster with the org template
          example: true
          type: boolean
        token:
          description: JWT token used to perform authorization
          example: m
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    UpdateHostClusterRequest2:
      example:
        pendingAmenities:
        - Description: Ensures high availability across multiple zones.
          IsManaged: true
          Name: Prometheus
          Properties:
            Repellat iure alias aperiam aut.: Commodi velit doloribus hic explicabo
              voluptas ut.
          Type: HelmChart
        - Description: Ensures high availability across multiple zones.
          IsManaged: true
          Name: Prometheus
          Properties:
            Repellat iure alias aperiam aut.: Commodi velit doloribus hic explicabo
              voluptas ut.
          Type: HelmChart
        syncWithOrgTemplate: true
      properties:
        pendingAmenities:
          description: The pending amenities for the host cluster
          example:
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Repellat iure alias aperiam aut.: Commodi velit doloribus hic explicabo
                voluptas ut.
            Type: HelmChart
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Repellat iure alias aperiam aut.: Commodi velit doloribus hic explicabo
                voluptas ut.
            Type: HelmChart
          - Description: Ensures high availability across multiple zones.
            IsManaged: true
            Name: Prometheus
            Properties:
              Repellat iure alias aperiam aut.: Commodi velit doloribus hic explicabo
                voluptas ut.
            Type: HelmChart
          items:
            $ref: "#/components/schemas/Amenity"
          type: array
        syncWithOrgTemplate:
          description: Whether to sync the host cluster with the org template
          example: true
          type: boolean
      type: object
    UpdateIdentityProviderRequest:
      example:
        authorizationEndpoint: https://accounts.google.com/o/oauth2/auth
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
        disabled: false
        emailIdentifiers: company.com
        environmentType: production
        id: idp-12345678
        loginButtonIconUrl: https://example.com/icon.png
        loginButtonText: Login with Google
        name: Google for my company
        scopes: openid email profile
        token: 7e
        tokenEndpoint: https://oauth2.googleapis.com/token
        userInfoEndpoint: https://www.googleapis.com/oauth2/v3/userinfo
      properties:
        authorizationEndpoint:
          description: The authorization endpoint of the Identity Provider
          example: https://accounts.google.com/o/oauth2/auth
          type: string
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
        disabled:
          description: Whether the Identity Provider is disabled
          example: false
          type: boolean
        emailIdentifiers:
          description: The email identifiers to use for the Identity Provider
          example: company.com
          type: string
        environmentType:
          description: The type of environment for the Identity Provider
          example: production
          type: string
        id:
          description: ID of an Identity Provider
          example: Dicta dolore sit veritatis explicabo.
          type: string
        loginButtonIconUrl:
          description: The URL of the icon to use for the login button
          example: https://example.com/icon.png
          type: string
        loginButtonText:
          description: The text to use for the login button
          example: Login with Google
          type: string
        name:
          description: The name of the Identity Provider
          example: Google for my company
          type: string
        scopes:
          description: The scopes to request from the Identity Provider
          example: openid email profile
          type: string
        token:
          description: JWT token used to perform authorization
          example: k
          minLength: 1
          type: string
        tokenEndpoint:
          description: The token endpoint of the Identity Provider
          example: https://oauth2.googleapis.com/token
          type: string
        userInfoEndpoint:
          description: The user info endpoint of the Identity Provider
          example: https://www.googleapis.com/oauth2/v3/userinfo
          type: string
      required:
      - id
      - token
      type: object
    UpdateNotificationChannelRequest:
      example:
        email:
          to: notify@example.com
        id: channel-12345678
        name: My Channel
        pagerDuty:
          APIKey: e93facc47f2d4b2b88272b3a647afe7d-fictional-integration-key
        slack:
          webhookUrl: https://hooks.slack.com/services/...
        subscription:
          alertTypes:
          - Alarm
          - Notification
          environmentTypes:
          - PROD
          - PRIVATE
          - CANARY
          eventCategories:
          - InstanceEvent
          - ServiceEvent
          eventPriorities:
          - Critical
          - High
          eventTypes:
          - UnhealthyInstance
          - UserSignUp
        token: xn
        webhook:
          method: POST
          url: https://example.com/notify
      properties:
        email:
          $ref: "#/components/schemas/EmailConfiguration"
        id:
          description: ID of a Notification Channel
          example: Saepe repudiandae.
          type: string
        name:
          description: Name of the channel
          example: My Channel
          type: string
        pagerDuty:
          $ref: "#/components/schemas/PagerDutyConfiguration"
        slack:
          $ref: "#/components/schemas/SlackConfiguration"
        subscription:
          $ref: "#/components/schemas/ChannelSubscription"
        token:
          description: JWT token used to perform authorization
          example: p
          minLength: 1
          type: string
        webhook:
          $ref: "#/components/schemas/WebhookConfiguration"
      required:
      - id
      - token
      type: object
    UpdateNotificationChannelRequest2:
      example:
        email:
          to: notify@example.com
        name: My Channel
        pagerDuty:
          APIKey: e93facc47f2d4b2b88272b3a647afe7d-fictional-integration-key
        slack:
          webhookUrl: https://hooks.slack.com/services/...
        subscription:
          alertTypes:
          - Alarm
          - Notification
          environmentTypes:
          - PROD
          - PRIVATE
          - CANARY
          eventCategories:
          - InstanceEvent
          - ServiceEvent
          eventPriorities:
          - Critical
          - High
          eventTypes:
          - UnhealthyInstance
          - UserSignUp
        webhook:
          method: POST
          url: https://example.com/notify
      properties:
        email:
          $ref: "#/components/schemas/EmailConfiguration"
        name:
          description: Name of the channel
          example: My Channel
          type: string
        pagerDuty:
          $ref: "#/components/schemas/PagerDutyConfiguration"
        slack:
          $ref: "#/components/schemas/SlackConfiguration"
        subscription:
          $ref: "#/components/schemas/ChannelSubscription"
        webhook:
          $ref: "#/components/schemas/WebhookConfiguration"
      type: object
    UpdatePasswordRequest:
      example:
        currentPassword: currentPassword
        currentPasswordHash: currentPasswordHash
        password: password
        token: rie
      properties:
        currentPassword:
          example: currentPassword
          minLength: 1
          type: string
        currentPasswordHash:
          example: currentPasswordHash
          minLength: 1
          type: string
        password:
          example: password
          minLength: 1
          type: string
        token:
          description: JWT token used to perform authorization
          example: lzo
          minLength: 1
          type: string
      required:
      - password
      - token
      type: object
    UpdatePipelineRequest:
      example:
        description: MySQL SaaS promotion pipeline
        id: p-12345678
        name: my-pipeline
        serviceEnvironmentSequence:
        - se-12345678
        - se-23456789
        serviceId: s-12345678
        token: zdn
      properties:
        description:
          description: Description of the pipeline
          example: MySQL SaaS promotion pipeline
          type: string
        id:
          description: ID of a Pipeline
          example: Nihil cupiditate.
          type: string
        name:
          description: Name of the pipeline
          example: my-pipeline
          type: string
        serviceEnvironmentSequence:
          description: Sequence of service environments to be deployed in the pipeline
          example:
          - se-12345678
          - se-23456789
          items:
            description: ID of a Service Environment
            example: se-123456
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: "4"
          minLength: 1
          type: string
      required:
      - token
      type: object
    UpdateProductTierRequest:
      example:
        allowCreatesWhenPaymentNotConfigured: true
        autoApproveSubscription: false
        awsRegions:
        - us-east-2
        - ca-central-1
        azureRegions:
        - northcentralus
        billingProductID: abc123
        billingProviders:
        - STRIPE
        - BRING_YOUR_OWN
        defaultBillingProvider: STRIPE
        description: A premium product tier
        documentation: Any documentation
        exportUsageMetering: true
        exportUsageMeteringConfig:
          GCS:
            GCSBucketName: my_billing_bucket_name
          S3:
            S3BucketArn: arn:aws:s3:::my_billing_bucket_name
            S3BucketRegion: us-east-1
        gcpRegions:
        - us-central1
        id: pt-12345678
        isDisabled: false
        maxNumberOfInstances: 5
        name: Premium
        planDescription: A premium plan
        pricePerUnit:
          CPU core hours:
            amount: 0.001
            currency: USD
          Memory GiB hours:
            amount: 1.0E-4
            currency: USD
          Storage GiB hours:
            amount: 1.0E-4
            currency: USD
        pricing:
          price1: value1
        privateRegions:
        - n/a
        serviceId: s-12345678
        support: Any support
        tierType: OMNISTRATE_DEDICATED_TENANCY
        token: "3"
      properties:
        allowCreatesWhenPaymentNotConfigured:
          description: Allow creates when payment not configured
          example: true
          type: boolean
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        awsRegions:
          description: The AWS regions that this product tier is available on
          example:
          - us-east-2
          - ca-central-1
          items:
            example: Sit ipsum vel est sed.
            type: string
          type: array
        azureRegions:
          description: The Azure regions that this product tier is available on
          example:
          - northcentralus
          items:
            example: Sunt sint fugit veritatis velit.
            type: string
          type: array
        billingProductID:
          description: Optional billing product ID for tax purposes
          example: abc123
          type: string
        billingProviders:
          description: List of billing providers to be used for the product tier
          example:
          - STRIPE
          - BRING_YOUR_OWN
          items:
            description: The billing provider type
            example: STRIPE|BRING_YOUR_OWN
            type: string
          type: array
        defaultBillingProvider:
          description: The billing provider type
          example: STRIPE|BRING_YOUR_OWN
          type: string
        description:
          description: A brief description of the product tier
          example: A premium product tier
          type: string
        documentation:
          description: Documentation
          example: Any documentation
          type: string
        exportUsageMetering:
          description: Export usage metering data
          example: true
          type: boolean
        exportUsageMeteringConfig:
          additionalProperties: true
          description: Export usage metering data configuration
          example:
            GCS:
              GCSBucketName: my_billing_bucket_name
            S3:
              S3BucketArn: arn:aws:s3:::my_billing_bucket_name
              S3BucketRegion: us-east-1
          type: object
        gcpRegions:
          description: The GCP regions that this product tier is available on
          example:
          - us-central1
          items:
            example: Blanditiis illo at.
            type: string
          type: array
        id:
          description: ID of a Product Tier
          example: Voluptatem laudantium.
          type: string
        isDisabled:
          description: Update the product tier's state as enabled/disabled. Enabling
            the product tier will let end-customers subscribe and use the service
            plan.
          example: false
          type: boolean
        maxNumberOfInstances:
          description: Maximum number of instances. Set to -1 for unlimited.
          example: 5
          format: int64
          type: integer
        name:
          description: Name of the product tier
          example: Premium
          type: string
        planDescription:
          description: A brief description for the end user of the product tier
          example: A premium plan
          type: string
        pricePerUnit:
          additionalProperties: true
          description: Price per unit.
          example:
            CPU core hours:
              amount: 0.001
              currency: USD
            Memory GiB hours:
              amount: 1.0E-4
              currency: USD
            Storage GiB hours:
              amount: 1.0E-4
              currency: USD
          type: object
        pricing:
          description: Pricing
          example:
            price1: value1
        privateRegions:
          description: The private regions that this product tier is available on
          example:
          - n/a
          items:
            example: Rerum ut qui recusandae inventore.
            type: string
          type: array
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        support:
          description: Support
          example: Any support
          type: string
        tierType:
          description: ProductTierType is the type of tier for a product
          example: OMNISTRATE_DEDICATED_TENANCY|OMNISTRATE_MULTI_TENANCY|CUSTOM_TENANCY
          type: string
        token:
          description: JWT token used to perform authorization
          example: g
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateResourceInstanceRequest:
      example:
        id: instance-abcd1234
        network_type: PUBLIC|INTERNAL
        productTierKey: premium
        requestParams:
          param1: value1
          param2: value2
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        token: "4"
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        network_type:
          description: The network type
          example: PUBLIC|INTERNAL
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        requestParams:
          description: The request parameters
          example:
            param1: value1
            param2: value2
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Sed consectetur blanditiis aut voluptas.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        token:
          description: JWT token used to perform authorization
          example: "4"
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    UpdateSaaSPortalCustomDomainRequest:
      example:
        customDomain: mycustomdomain.com
        description: My custom domain description
        environmentType: DEV
        name: MyCustomDomain
        token: c
      properties:
        customDomain:
          description: The custom domain
          example: mycustomdomain.com
          type: string
        description:
          description: The custom domain description
          example: My custom domain description
          type: string
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        name:
          description: The custom domain name
          example: MyCustomDomain
          type: string
        token:
          description: JWT token used to perform authorization
          example: l
          minLength: 1
          type: string
      required:
      - environmentType
      - token
      type: object
    UpdateSaaSPortalRequest:
      example:
        customDomain: mycustomdomain.com
        disablePasswordLogin: false
        emailConfig:
          smtpFromEmail: example@gmail.com
          smtpHost: smtp.gmail.com
          smtpPassword: password
          smtpPort: 587
          smtpUsername: username
        environmentType: DEV
        googleAnalyticsTagID: G-123456789
        imageConfig:
          imageName: myimage
          imageRegistry: ghcr.io
          imageTag: latest
        token: u
      properties:
        customDomain:
          description: The custom domain for the SaaS portal
          example: mycustomdomain.com
          type: string
        disablePasswordLogin:
          description: Whether to disable password login for the SaaS portal
          example: false
          type: boolean
        emailConfig:
          $ref: "#/components/schemas/SaaSPortalEmailConfig"
        environmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        googleAnalyticsTagID:
          description: The Google Analytics tag ID for the SaaS portal
          example: G-123456789
          type: string
        imageConfig:
          $ref: "#/components/schemas/SaaSPortalImageConfig"
        token:
          description: JWT token used to perform authorization
          example: x66
          minLength: 1
          type: string
      required:
      - environmentType
      - token
      type: object
    UpdateServiceEnvironmentRequest:
      example:
        autoApproveSubscription: false
        deploymentConfigId: dc-12345678
        description: The production environment for the MySQL multi-writer service
        id: se-12345678
        name: Production
        serviceAuthPublicKey: |
          -----BEGIN PUBLIC KEY-----
          MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
          7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
          -----END PUBLIC KEY-----
        serviceId: s-12345678
        sourceEnvironmentId: se-12345678
        token: lzn
        visibility: PUBLIC
      properties:
        autoApproveSubscription:
          description: Auto approve subscription or not
          example: false
          type: boolean
        deploymentConfigId:
          description: ID of a Deployment Config
          example: Distinctio et praesentium sequi sit ipsa harum.
          type: string
        description:
          description: A brief description of the service environment
          example: The production environment for the MySQL multi-writer service
          type: string
        id:
          description: ID of a Service Environment
          example: se-123456
          type: string
        name:
          description: Name of the Service Environment
          example: Production
          type: string
        serviceAuthPublicKey:
          description: PEM-encoded Public key part of the key used to sign the JWT
            tokens for the service control plane APIs
          example: |
            -----BEGIN PUBLIC KEY-----
            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAExXBS01nPRugGbKCN8m9sSSTkGvPT
            7a1Jn74No2dTkp+tQ+ZyBa7ClKbEXFaR2mzy06q0ivJAxPi1pixofIXE0Q==
            -----END PUBLIC KEY-----
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        sourceEnvironmentId:
          description: The ID of the service environment to use for promoting changes
            to this environment
          example: se-12345678
          type: string
        token:
          description: JWT token used to perform authorization
          example: j
          minLength: 1
          type: string
        visibility:
          description: This parameter is used to configure the visibility of the service
            control-plane APIs
          example: PUBLIC
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateServiceModelRequest:
      example:
        description: A MySQL Hosted SaaS specializing in multi-writer clusters for
          high availability
        id: sm-12345678
        name: MySQL multi-writer service hosted model
        serviceId: s-12345678
        token: e
      properties:
        description:
          description: A brief description of the service model
          example: A MySQL Hosted SaaS specializing in multi-writer clusters for high
            availability
          type: string
        id:
          description: ID of a Service Model
          example: Inventore eligendi iure accusantium occaecati sit.
          type: string
        name:
          description: Name of the Service Model
          example: MySQL multi-writer service hosted model
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        token:
          description: JWT token used to perform authorization
          example: ou
          minLength: 1
          type: string
      required:
      - id
      - serviceId
      - token
      type: object
    UpdateServiceRequest:
      example:
        description: A MySQL SaaS specializing in multi-writer clusters for high availability
        id: s-12345678
        name: MySQL multi-writer service
        serviceLogoURL: Dicta ut ut.
        token: tj1
      properties:
        description:
          description: A brief description of the service
          example: A MySQL SaaS specializing in multi-writer clusters for high availability
          type: string
        id:
          description: ID of a Service
          example: s-123456
          type: string
        name:
          description: Name of the Service
          example: MySQL multi-writer service
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Quos asperiores quisquam qui sed laudantium.
          type: string
        token:
          description: JWT token used to perform authorization
          example: "0"
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    UpdateServiceWorkflowRequest:
      example:
        environmentId: se-12345678
        id: submit-create-instance-plan-instance-50h74sj46
        serviceId: s-12345678
        status: Pause
        token: f0
      properties:
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        id:
          description: ID of the ServiceWorkflow
          example: submit-create-instance-plan-instance-50h74sj46
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        status:
          description: The status of the workflow execution.
          example: Pause
          type: string
        token:
          description: JWT token used to perform authorization
          example: m
          minLength: 1
          type: string
      required:
      - environmentId
      - id
      - serviceId
      - status
      - token
      type: object
    UpdateServiceWorkflowRequest2:
      example:
        status: Pause
      properties:
        status:
          description: The status of the workflow execution.
          example: Pause
          type: string
      required:
      - status
      type: object
    UpdateUserRequest:
      example:
        address:
          addressLine1: 1234 Main St
          addressLine2: Apt 123
          addressLine3: Building 123
          city: San Francisco
          country: US
          state: CA
          zip: "94123"
        id: user-abcd1234
        name: John Dae
        orgCookiePolicy: Beatae qui saepe et.
        orgDescription: ACME Inc.
        orgFavIconURL: http://granthilpert.info/jerrold
        orgLogoURL: http://gulgowski.com/thea.wyman
        orgName: ACME
        orgPrivacyPolicy: In voluptates autem sit sed.
        orgSupportEmail: support@example.com
        orgTermsOfUse: Molestiae rem at reiciendis.
        orgURL: something.acme
        token: qg
      properties:
        address:
          $ref: "#/components/schemas/Address"
        id:
          description: The User ID
          example: user-abcd1234
          type: string
        name:
          description: The name of the user
          example: John Dae
          type: string
        orgCookiePolicy:
          description: The cookie policy for the org that this user owns in an HTML
            format
          example: Voluptatem iure consectetur sunt vero.
          type: string
        orgDescription:
          description: The description of the org that this user owns
          example: ACME Inc.
          type: string
        orgFavIconURL:
          description: The favicon of the org that this user owns
          example: http://stiedemannhomenick.biz/nakia
          format: uri
          type: string
        orgLogoURL:
          description: The logo of the org that this user owns
          example: http://wintheisershanahan.biz/lucie_mitchell
          format: uri
          type: string
        orgName:
          description: The org name that this user owns
          example: ACME
          type: string
        orgPrivacyPolicy:
          description: The privacy policy for the org that this user owns in an HTML
            format
          example: Laborum non esse veritatis.
          type: string
        orgSupportEmail:
          description: The support email of the org that this user owns
          example: support@example.com
          type: string
        orgTermsOfUse:
          description: The terms of use for the org that this user owns in an HTML
            format
          example: Aliquam et commodi iusto perspiciatis.
          type: string
        orgURL:
          description: The url of the org that this user owns
          example: something.acme
          type: string
        token:
          description: JWT token used to perform authorization
          example: "0"
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    UpgradePath:
      example:
        completedAt: 2020-01-01T00:00:00Z
        completedCount: 2
        createdAt: 2020-01-01T00:00:00Z
        createdBy: John Doe
        failedCount: 4
        inProgressCount: 7
        lastModifiedBy: John Doe
        lastRequestedAction: pause|cancel|resume|skip-instances|notify-customer
        notifyCustomer: true
        pendingCount: 3
        plannedExecutionDate: 2020-01-01
        productTierId: pt-12345678
        releasedAt: 2020-01-01T00:00:00Z
        scheduledCount: 10
        serviceId: s-12345678
        skippedCount: 0
        sourceVersion: "1.0"
        sourceVersionName: Nostrum quas officiis.
        status: COMPLETE
        targetVersion: "2.0"
        targetVersionName: Sunt perferendis eligendi adipisci.
        totalCount: 16
        type: Major
        updatedAt: 2020-01-01T00:00:00Z
        upgradePathId: up-12345678
      properties:
        completedAt:
          description: The timestamp when the upgrade path was completed.
          example: 2020-01-01T00:00:00Z
          type: string
        completedCount:
          description: The number of instances that have completed the upgrade.
          example: 2
          format: int64
          type: integer
        createdAt:
          description: The timestamp when the upgrade path was created.
          example: 2020-01-01T00:00:00Z
          type: string
        createdBy:
          description: The name of the user who created the upgrade path.
          example: John Doe
          type: string
        failedCount:
          description: The number of instances that have failed the upgrade.
          example: 4
          format: int64
          type: integer
        inProgressCount:
          description: The number of instances that are in progress of the upgrade.
          example: 7
          format: int64
          type: integer
        lastModifiedBy:
          description: The name of the user who created the upgrade path.
          example: John Doe
          type: string
        lastRequestedAction:
          description: The action to perform on an ongoing resource workflow
          example: pause|cancel|resume|skip-instances|notify-customer
          type: string
        notifyCustomer:
          description: Whether to notify the end customer about the upgrade progress.
          example: true
          type: boolean
        pendingCount:
          description: The number of instances that are pending the upgrade.
          example: 3
          format: int64
          type: integer
        plannedExecutionDate:
          description: The date when the upgrade was/is planned to be executed.
          example: 2020-01-01
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Reiciendis vitae pariatur doloribus illum.
          type: string
        releasedAt:
          description: The timestamp when the upgrade path was released.
          example: 2020-01-01T00:00:00Z
          type: string
        scheduledCount:
          description: The number of instances that are scheduled to upgrade.
          example: 10
          format: int64
          type: integer
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        skippedCount:
          description: The number of instances that are skipped the upgrade.
          example: 0
          format: int64
          type: integer
        sourceVersion:
          description: The source version of the upgrade path.
          example: "1.0"
          type: string
        sourceVersionName:
          description: The source version name of the upgrade path.
          example: Quas ipsum maiores repudiandae.
          type: string
        status:
          description: The status of the upgrade path.
          example: IN_PROGRESS|COMPLETE|SCHEDULED|PENDING|FAILED|PAUSED|CANCELLED
          type: string
        targetVersion:
          description: The target version of the upgrade path.
          example: "2.0"
          type: string
        targetVersionName:
          description: The target version name of the upgrade path.
          example: Id optio ut labore repellat.
          type: string
        totalCount:
          description: The total number of instances that are eligible for the upgrade.
          example: 16
          format: int64
          type: integer
        type:
          description: The type of the upgrade path.
          example: Major|Incremental|UserDefined
          type: string
        updatedAt:
          description: The timestamp when the upgrade path was updated.
          example: 2020-01-01T00:00:00Z
          type: string
        upgradePathId:
          description: ID of an Upgrade Path
          example: Sed sint natus doloribus nam dolor.
          type: string
      required:
      - completedCount
      - createdAt
      - failedCount
      - inProgressCount
      - pendingCount
      - productTierId
      - releasedAt
      - serviceId
      - skippedCount
      - sourceVersion
      - sourceVersionName
      - status
      - targetVersion
      - targetVersionName
      - totalCount
      - type
      - updatedAt
      - upgradePathId
      type: object
    UpgradePathSearchRecord:
      example:
        id: upgrade-12345678
        notifyCustomer: true
        productTierID: pt-12345678
        productTierName: prod
        serviceEnvironmentId: se-12345678
        serviceEnvironmentName: prod
        serviceEnvironmentType: PROD
        serviceId: s-12345678
        serviceName: mysql
        status: IN_PROGRESS
      properties:
        id:
          description: ID of an Upgrade Path
          example: Quod corporis dolore sit tempore distinctio.
          type: string
        notifyCustomer:
          description: Whether to notify the end customer about the upgrade progress.
          example: true
          type: boolean
        productTierID:
          description: ID of a Product Tier
          example: Placeat at dolor unde accusamus libero eaque.
          type: string
        productTierName:
          description: The product tier name of the upgrade path.
          example: prod
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceEnvironmentName:
          description: The service environment name of the upgrade path.
          example: prod
          type: string
        serviceEnvironmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceName:
          description: The service name of the upgrade path.
          example: mysql
          type: string
        status:
          description: The status of the upgrade path.
          example: IN_PROGRESS|COMPLETE|SCHEDULED|PENDING|FAILED|PAUSED|CANCELLED
          type: string
      required:
      - id
      - notifyCustomer
      - productTierID
      - productTierName
      - serviceEnvironmentId
      - serviceEnvironmentName
      - serviceId
      - serviceName
      - status
      type: object
    UpgradeResourceInstanceVersionRequest:
      example:
        id: instance-abcd1234
        productTierKey: premium
        resourceKey: mysql
        serviceAPIVersion: v1
        serviceEnvironmentKey: dev
        serviceKey: service-orchestration
        serviceModelKey: hosted
        serviceProviderId: omnistrate
        subscriptionId: sub-abcd1234
        targetVersion: "2.0"
        token: yn
      properties:
        id:
          description: The instance ID
          example: instance-abcd1234
          type: string
        productTierKey:
          description: The product tier name
          example: premium
          type: string
        resourceKey:
          description: The resource key
          example: mysql
          type: string
        serviceAPIVersion:
          description: The service API version
          example: v1
          type: string
        serviceEnvironmentKey:
          description: The service environment name
          example: dev
          type: string
        serviceKey:
          description: The service name
          example: service-orchestration
          type: string
        serviceModelKey:
          description: The service model name
          example: hosted
          type: string
        serviceProviderId:
          description: ID of a Service Provider
          example: Consequatur ut et.
          type: string
        subscriptionId:
          description: The subscription ID
          example: sub-abcd1234
          type: string
        targetVersion:
          description: The version to upgrade to
          example: "2.0"
          type: string
        token:
          description: JWT token used to perform authorization
          example: e6o
          minLength: 1
          type: string
      required:
      - id
      - productTierKey
      - resourceKey
      - serviceAPIVersion
      - serviceEnvironmentKey
      - serviceKey
      - serviceModelKey
      - serviceProviderId
      - token
      type: object
    UsagePerDimension:
      example:
        dimension: core/hours
        endTime: 2021-01-01T00:00:00.000Z
        startTime: 2021-01-01T00:00:00.000Z
        total: 0.67
      properties:
        dimension:
          description: Dimension of usage
          example: core/hours
          type: string
        endTime:
          description: End timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        startTime:
          description: Start timestamp of usage
          example: 2021-01-01T00:00:00.000Z
          type: string
        total:
          description: Total amount of usage during the period
          example: 0.67
          format: double
          type: number
      type: object
    User:
      example:
        createdAt: 2021-01-01T00:00:00Z
        email: alice@enterprise.com
        enabled: true
        environmentId: se-12345678
        instanceCount: 3
        lastModifiedAt: 2021-01-01T00:00:00Z
        lastModifiedByUserID: user-12345678
        lastModifiedByUserName: Alice
        orgId: org-12345678
        orgName: Enterprise
        orgUrl: https://enterprise.com
        serviceId: s-12345678
        status: ACTIVE
        subscriptionCount: 3
        token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
        userId: user-12345678
        userName: Alice
        userSubscriptionRole: root
      properties:
        createdAt:
          description: The time the user was created.
          example: 2021-01-01T00:00:00Z
          type: string
        email:
          description: The user email.
          example: alice@enterprise.com
          type: string
        enabled:
          description: Is the user enabled.
          example: true
          type: boolean
        environmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        instanceCount:
          description: The number of active instances the user has.
          example: 3
          format: int64
          type: integer
        lastModifiedAt:
          description: The last modified time of the user.
          example: 2021-01-01T00:00:00Z
          type: string
        lastModifiedByUserID:
          description: ID of a User
          example: Sunt natus aut fugiat tempora rerum.
          type: string
        lastModifiedByUserName:
          description: The user name of the last modifier.
          example: Alice
          type: string
        orgId:
          description: ID of an Org
          example: Non quos ad.
          type: string
        orgName:
          description: The organization name.
          example: Enterprise
          type: string
        orgUrl:
          description: The organization URL.
          example: https://enterprise.com
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        status:
          description: The status of the user.
          example: ACTIVE|NOT_ENABLED
          type: string
        subscriptionCount:
          description: The number of subscriptions the user has.
          example: 3
          format: int64
          type: integer
        token:
          description: "Token to validate the user, if the user is not enabled."
          example: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
          minLength: 1
          type: string
        userId:
          description: ID of a User
          example: Voluptatum perspiciatis delectus suscipit cumque.
          type: string
        userName:
          description: The user name.
          example: Alice
          type: string
        userSubscriptionRole:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
      required:
      - createdAt
      - email
      - environmentId
      - instanceCount
      - lastModifiedAt
      - orgId
      - orgName
      - serviceId
      - status
      - userId
      - userName
      type: object
    UserSearchRecord:
      example:
        email: alice@omnistrate.com
        external: false
        id: user-12345678
        name: Alice
        orgName: Omnistrate
      properties:
        email:
          description: The user email.
          example: alice@omnistrate.com
          type: string
        external:
          description: Is the user an external user.
          example: false
          type: boolean
        id:
          description: The user ID.
          example: user-12345678
          type: string
        name:
          description: The user name.
          example: Alice
          type: string
        orgName:
          description: The organization name.
          example: Omnistrate
          type: string
      required:
      - email
      - external
      - id
      - name
      - orgName
      type: object
    UserSubscription:
      example:
        cloudProviderNames:
        - aws
        - gcp
        defaultSubscription: true
        email: abc@gmail.com
        instanceCount: 3
        name: John Dae
        productTierId: pt-12345678
        productTierName: Omnistrate Multi Tenancy
        roleType: reader
        serviceEnvironmentId: se-12345678
        serviceId: s-12345678
        serviceLogoURL: Distinctio corporis unde.
        serviceName: MySQL multi-writer service
        subscriptionDate: 2019-01-01T00:00:00Z
        subscriptionId: sub-abcd1234
        subscriptionOwnerName: John Doe
        userId: "[]user-abcd1234"
      properties:
        cloudProviderNames:
          description: List of cloud provider names
          example:
          - aws
          - gcp
          items:
            example: Non voluptates laboriosam.
            type: string
          type: array
        defaultSubscription:
          description: Whether this is the default subscription for the user
          example: true
          type: boolean
        email:
          description: "[DEPRECATED] The email of the user"
          example: abc@gmail.com
          type: string
        instanceCount:
          description: The number of active instances in the subscription
          example: 3
          format: int64
          type: integer
        name:
          description: "[DEPRECATED] The name of the user"
          example: John Dae
          type: string
        productTierId:
          description: ID of a Product Tier
          example: Sint et aut impedit.
          type: string
        productTierName:
          description: The name of the product tier
          example: Omnistrate Multi Tenancy
          type: string
        roleType:
          description: Type of the role
          example: root|editor|reader|service_editor|service_reader|admin|service_operator
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceLogoURL:
          description: The logo for the service
          example: Quisquam facere quaerat.
          type: string
        serviceName:
          description: The name of the service
          example: MySQL multi-writer service
          type: string
        subscriptionDate:
          description: The date the user joined the subscription
          example: 2019-01-01T00:00:00Z
          type: string
        subscriptionId:
          description: ID of a Subscription
          example: Quae non nam aut et tempore sint.
          type: string
        subscriptionOwnerName:
          description: The name of the subscription owner user
          example: John Doe
          type: string
        userId:
          description: "[DEPRECATED] The User ID"
          example: "[]user-abcd1234"
          type: string
      type: object
    VUnitHealthReport:
      example:
        vunits:
          vu-11111111: UNKNOWN
          vu-12345678: UP
          vu-87654321: DOWN
      properties:
        vunits:
          additionalProperties: true
          description: The health of each vunit under this service environment
          example:
            vu-11111111: UNKNOWN
            vu-12345678: UP
            vu-87654321: DOWN
          type: object
      type: object
    ValidateTokenRequest:
      example:
        email: abc@gmail.com
        token: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
      properties:
        email:
          example: abc@gmail.com
          format: email
          minLength: 1
          type: string
        token:
          example: fc7b8dea-a50b-4c9a-8864-fc3d845a2be6
          minLength: 1
          type: string
      required:
      - email
      - token
      type: object
    ValuesFile:
      example:
        gitConfiguration:
          accessToken: my-token
          commitSHA: 1e386b5f54de9150d336ccfe2e14782b94faf67c
          referenceName: tags/v1.0.0
          repositoryUrl: https://github.com/username/myrepo
          userName: my-user
        path: helm/values/production.yaml
      properties:
        gitConfiguration:
          $ref: "#/components/schemas/GitConfiguration"
        path:
          description: The relative file path from repository root
          example: helm/values/production.yaml
          type: string
      required:
      - gitConfiguration
      - path
      type: object
    VerifyIdentityProviderRequest:
      example:
        id: idp-12345678
        token: "8"
      properties:
        id:
          description: ID of an Identity Provider
          example: Repellat fuga et inventore incidunt enim.
          type: string
        token:
          description: JWT token used to perform authorization
          example: s4l
          minLength: 1
          type: string
      required:
      - id
      - token
      type: object
    VerifyIdentityProviderResult:
      example:
        clientId: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
        clientSecret: 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
        id: idp-12345678
        identityProviderName: Google
        name: Google for my company
        status: Ready
      properties:
        clientId:
          description: The Client ID of the Identity Provider
          example: 205376496935-vtfpdnseqmjhsynlh0bsufl38k0test.apps.googleusercontent.com
          type: string
        clientSecret:
          description: The Client Secret of the Identity Provider
          example: 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
          type: string
        id:
          description: ID of an Identity Provider
          example: Inventore ea nobis voluptatibus delectus.
          type: string
        identityProviderName:
          description: The name of the identity provider
          example: Google|GitHub|Microsoft Entra|Amazon Cognito|Okta|Auth0|Keycloak|OIDC
          type: string
        name:
          description: The name of the Identity Provider
          example: Google for my company
          type: string
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
      required:
      - clientId
      - id
      - identityProviderName
      - status
      type: object
    WebhookConfiguration:
      example:
        additionalBodyParameters:
          key1: value1
        headers:
          Authorization: Bearer token
        method: POST
        url: https://example.com/notify
      properties:
        additionalBodyParameters:
          additionalProperties: true
          description: Additional parameters to include in the notification body
          example:
            key1: value1
          type: object
        headers:
          additionalProperties:
            example: In doloremque dolor libero delectus itaque.
            type: string
          description: HTTP headers to include in the notification
          example:
            Authorization: Bearer token
          type: object
        method:
          description: HTTP method to use for the notification
          example: POST
          type: string
        url:
          description: URL to send notifications to
          example: https://example.com/notify
          type: string
      required:
      - method
      - url
      type: object
    WorkflowEvent:
      example:
        eventTime: 2020-01-01T00:00:00Z
        eventType: WorkflowStepStarted
        message: Execution started
      properties:
        eventTime:
          description: Time of the event
          example: 2020-01-01T00:00:00Z
          type: string
        eventType:
          description: The type of the workflow event
          example: WorkflowStepStarted|WorkflowStepCompleted|WorkflowStepFailed|WorkflowStepDebug
          type: string
        message:
          description: Details of the event
          example: Execution started
          type: string
      required:
      - eventTime
      - eventType
      - message
      type: object
    WorkflowFailure:
      example:
        eventTime: 2020-01-01T00:00:00Z
        message: Bootstrap failed for reason X
      properties:
        eventTime:
          description: The time of the event
          example: 2020-01-01T00:00:00Z
          type: string
        message:
          description: Details of the event
          example: Bootstrap failed for reason X
          type: string
      required:
      - eventTime
      - message
      type: object
    WorkflowSearchRecord:
      example:
        id: submit-update-instance-abcdefgh
        resourceName: postgres
        serviceEnvironmentId: se-12345678
        serviceEnvironmentName: prod
        serviceEnvironmentType: PROD
        serviceId: s-12345678
        serviceName: mysql
        status: IN_PROGRESS
        type: Service deployment.
      properties:
        id:
          description: The ID of the workflow.
          example: submit-update-instance-abcdefgh
          type: string
        resourceName:
          description: The name of the resource associated with the workflow.
          example: postgres
          type: string
        serviceEnvironmentId:
          description: ID of a Service Environment
          example: se-123456
          type: string
        serviceEnvironmentName:
          description: The service environment name of the workflow.
          example: prod
          type: string
        serviceEnvironmentType:
          description: The type of service environment
          example: PROD|PRIVATE|CANARY|STAGING|QA|DEV|GLOBAL
          type: string
        serviceId:
          description: ID of a Service
          example: s-123456
          type: string
        serviceName:
          description: The service name of the workflow.
          example: mysql
          type: string
        status:
          description: The status of an operation
          example: FAILED|CANCELLED|PENDING_DEPENDENCY|PENDING|RUNNING|DEPLOYING|READY|SUCCESS|COMPLETE|DELETING|DELETED|UNKNOWN|DISCONNECTED|DISCONNECTING|CONNECTING|DEACTIVATED
          type: string
        type:
          description: The workflow type.
          example: Service deployment.
          type: string
      required:
      - id
      - resourceName
      - serviceEnvironmentId
      - serviceEnvironmentName
      - serviceId
      - serviceName
      - status
      - type
      type: object
  securitySchemes:
    api_key_header_Authorization:
      description: Secures endpoints by requiring a JWT token
      scheme: bearer
      type: http
