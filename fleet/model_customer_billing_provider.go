/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the CustomerBillingProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerBillingProvider{}

// CustomerBillingProvider struct for CustomerBillingProvider
type CustomerBillingProvider struct {
	// The URL to the balance due page. Only present when the payment channel is BRING_YOUR_OWN
	BalanceDueLink *string `json:"balanceDueLink,omitempty"`
	// The URL of the logo for the payment channel. Only present when the payment channel is BRING_YOUR_OWN
	LogoURL *string `json:"logoURL,omitempty"`
	// A custom name for the payment channel
	Name *string `json:"name,omitempty"`
	// Whether the payment channel payment information can be configured.
	PaymentConfigurable *bool `json:"paymentConfigurable,omitempty"`
	// Whether the customer has configured their payment information.
	PaymentConfigured *bool `json:"paymentConfigured,omitempty"`
	// The URL from the billing provide to redirect users to so they can enter their payment information.  Only present when first adding payment information
	PaymentInfoPortalURL *string `json:"paymentInfoPortalURL,omitempty"`
	// The billing provider type
	Type string `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _CustomerBillingProvider CustomerBillingProvider

// NewCustomerBillingProvider instantiates a new CustomerBillingProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerBillingProvider(type_ string) *CustomerBillingProvider {
	this := CustomerBillingProvider{}
	this.Type = type_
	return &this
}

// NewCustomerBillingProviderWithDefaults instantiates a new CustomerBillingProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerBillingProviderWithDefaults() *CustomerBillingProvider {
	this := CustomerBillingProvider{}
	return &this
}

// GetBalanceDueLink returns the BalanceDueLink field value if set, zero value otherwise.
func (o *CustomerBillingProvider) GetBalanceDueLink() string {
	if o == nil || IsNil(o.BalanceDueLink) {
		var ret string
		return ret
	}
	return *o.BalanceDueLink
}

// GetBalanceDueLinkOk returns a tuple with the BalanceDueLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerBillingProvider) GetBalanceDueLinkOk() (*string, bool) {
	if o == nil || IsNil(o.BalanceDueLink) {
		return nil, false
	}
	return o.BalanceDueLink, true
}

// HasBalanceDueLink returns a boolean if a field has been set.
func (o *CustomerBillingProvider) HasBalanceDueLink() bool {
	if o != nil && !IsNil(o.BalanceDueLink) {
		return true
	}

	return false
}

// SetBalanceDueLink gets a reference to the given string and assigns it to the BalanceDueLink field.
func (o *CustomerBillingProvider) SetBalanceDueLink(v string) {
	o.BalanceDueLink = &v
}

// GetLogoURL returns the LogoURL field value if set, zero value otherwise.
func (o *CustomerBillingProvider) GetLogoURL() string {
	if o == nil || IsNil(o.LogoURL) {
		var ret string
		return ret
	}
	return *o.LogoURL
}

// GetLogoURLOk returns a tuple with the LogoURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerBillingProvider) GetLogoURLOk() (*string, bool) {
	if o == nil || IsNil(o.LogoURL) {
		return nil, false
	}
	return o.LogoURL, true
}

// HasLogoURL returns a boolean if a field has been set.
func (o *CustomerBillingProvider) HasLogoURL() bool {
	if o != nil && !IsNil(o.LogoURL) {
		return true
	}

	return false
}

// SetLogoURL gets a reference to the given string and assigns it to the LogoURL field.
func (o *CustomerBillingProvider) SetLogoURL(v string) {
	o.LogoURL = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CustomerBillingProvider) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerBillingProvider) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CustomerBillingProvider) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CustomerBillingProvider) SetName(v string) {
	o.Name = &v
}

// GetPaymentConfigurable returns the PaymentConfigurable field value if set, zero value otherwise.
func (o *CustomerBillingProvider) GetPaymentConfigurable() bool {
	if o == nil || IsNil(o.PaymentConfigurable) {
		var ret bool
		return ret
	}
	return *o.PaymentConfigurable
}

// GetPaymentConfigurableOk returns a tuple with the PaymentConfigurable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerBillingProvider) GetPaymentConfigurableOk() (*bool, bool) {
	if o == nil || IsNil(o.PaymentConfigurable) {
		return nil, false
	}
	return o.PaymentConfigurable, true
}

// HasPaymentConfigurable returns a boolean if a field has been set.
func (o *CustomerBillingProvider) HasPaymentConfigurable() bool {
	if o != nil && !IsNil(o.PaymentConfigurable) {
		return true
	}

	return false
}

// SetPaymentConfigurable gets a reference to the given bool and assigns it to the PaymentConfigurable field.
func (o *CustomerBillingProvider) SetPaymentConfigurable(v bool) {
	o.PaymentConfigurable = &v
}

// GetPaymentConfigured returns the PaymentConfigured field value if set, zero value otherwise.
func (o *CustomerBillingProvider) GetPaymentConfigured() bool {
	if o == nil || IsNil(o.PaymentConfigured) {
		var ret bool
		return ret
	}
	return *o.PaymentConfigured
}

// GetPaymentConfiguredOk returns a tuple with the PaymentConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerBillingProvider) GetPaymentConfiguredOk() (*bool, bool) {
	if o == nil || IsNil(o.PaymentConfigured) {
		return nil, false
	}
	return o.PaymentConfigured, true
}

// HasPaymentConfigured returns a boolean if a field has been set.
func (o *CustomerBillingProvider) HasPaymentConfigured() bool {
	if o != nil && !IsNil(o.PaymentConfigured) {
		return true
	}

	return false
}

// SetPaymentConfigured gets a reference to the given bool and assigns it to the PaymentConfigured field.
func (o *CustomerBillingProvider) SetPaymentConfigured(v bool) {
	o.PaymentConfigured = &v
}

// GetPaymentInfoPortalURL returns the PaymentInfoPortalURL field value if set, zero value otherwise.
func (o *CustomerBillingProvider) GetPaymentInfoPortalURL() string {
	if o == nil || IsNil(o.PaymentInfoPortalURL) {
		var ret string
		return ret
	}
	return *o.PaymentInfoPortalURL
}

// GetPaymentInfoPortalURLOk returns a tuple with the PaymentInfoPortalURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerBillingProvider) GetPaymentInfoPortalURLOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentInfoPortalURL) {
		return nil, false
	}
	return o.PaymentInfoPortalURL, true
}

// HasPaymentInfoPortalURL returns a boolean if a field has been set.
func (o *CustomerBillingProvider) HasPaymentInfoPortalURL() bool {
	if o != nil && !IsNil(o.PaymentInfoPortalURL) {
		return true
	}

	return false
}

// SetPaymentInfoPortalURL gets a reference to the given string and assigns it to the PaymentInfoPortalURL field.
func (o *CustomerBillingProvider) SetPaymentInfoPortalURL(v string) {
	o.PaymentInfoPortalURL = &v
}

// GetType returns the Type field value
func (o *CustomerBillingProvider) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CustomerBillingProvider) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CustomerBillingProvider) SetType(v string) {
	o.Type = v
}

func (o CustomerBillingProvider) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerBillingProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BalanceDueLink) {
		toSerialize["balanceDueLink"] = o.BalanceDueLink
	}
	if !IsNil(o.LogoURL) {
		toSerialize["logoURL"] = o.LogoURL
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PaymentConfigurable) {
		toSerialize["paymentConfigurable"] = o.PaymentConfigurable
	}
	if !IsNil(o.PaymentConfigured) {
		toSerialize["paymentConfigured"] = o.PaymentConfigured
	}
	if !IsNil(o.PaymentInfoPortalURL) {
		toSerialize["paymentInfoPortalURL"] = o.PaymentInfoPortalURL
	}
	toSerialize["type"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomerBillingProvider) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomerBillingProvider := _CustomerBillingProvider{}

	err = json.Unmarshal(data, &varCustomerBillingProvider)

	if err != nil {
		return err
	}

	*o = CustomerBillingProvider(varCustomerBillingProvider)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "balanceDueLink")
		delete(additionalProperties, "logoURL")
		delete(additionalProperties, "name")
		delete(additionalProperties, "paymentConfigurable")
		delete(additionalProperties, "paymentConfigured")
		delete(additionalProperties, "paymentInfoPortalURL")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCustomerBillingProvider struct {
	value *CustomerBillingProvider
	isSet bool
}

func (v NullableCustomerBillingProvider) Get() *CustomerBillingProvider {
	return v.value
}

func (v *NullableCustomerBillingProvider) Set(val *CustomerBillingProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerBillingProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerBillingProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerBillingProvider(val *CustomerBillingProvider) *NullableCustomerBillingProvider {
	return &NullableCustomerBillingProvider{value: val, isSet: true}
}

func (v NullableCustomerBillingProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerBillingProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


