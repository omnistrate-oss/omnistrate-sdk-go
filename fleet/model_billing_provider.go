/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the BillingProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingProvider{}

// BillingProvider struct for BillingProvider
type BillingProvider struct {
	// The URL to the balance due page
	BalanceDueLink *string `json:"balanceDueLink,omitempty"`
	// The Stripe Connect Client ID associated with the billing provider. Only present when the billing provider is STRIPE
	ConnectClientID *string `json:"connectClientID,omitempty"`
	// The URL of the logo for the billing provider. Only present when the billing provider is BRING_YOUR_OWN
	LogoURL *string `json:"logoURL,omitempty"`
	// A custom name for the billing provider. Only present when the billing provider is BRING_YOUR_OWN
	Name *string `json:"name,omitempty"`
	// The status of the billing provider
	Status string `json:"status"`
	// The Stripe Customer ID associated with the billing provider. Only present when the billing provider is STRIPE
	StripeCustomerID *string `json:"stripeCustomerID,omitempty"`
	// The billing provider type
	Type string `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _BillingProvider BillingProvider

// NewBillingProvider instantiates a new BillingProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingProvider(status string, type_ string) *BillingProvider {
	this := BillingProvider{}
	this.Status = status
	this.Type = type_
	return &this
}

// NewBillingProviderWithDefaults instantiates a new BillingProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingProviderWithDefaults() *BillingProvider {
	this := BillingProvider{}
	return &this
}

// GetBalanceDueLink returns the BalanceDueLink field value if set, zero value otherwise.
func (o *BillingProvider) GetBalanceDueLink() string {
	if o == nil || IsNil(o.BalanceDueLink) {
		var ret string
		return ret
	}
	return *o.BalanceDueLink
}

// GetBalanceDueLinkOk returns a tuple with the BalanceDueLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingProvider) GetBalanceDueLinkOk() (*string, bool) {
	if o == nil || IsNil(o.BalanceDueLink) {
		return nil, false
	}
	return o.BalanceDueLink, true
}

// HasBalanceDueLink returns a boolean if a field has been set.
func (o *BillingProvider) HasBalanceDueLink() bool {
	if o != nil && !IsNil(o.BalanceDueLink) {
		return true
	}

	return false
}

// SetBalanceDueLink gets a reference to the given string and assigns it to the BalanceDueLink field.
func (o *BillingProvider) SetBalanceDueLink(v string) {
	o.BalanceDueLink = &v
}

// GetConnectClientID returns the ConnectClientID field value if set, zero value otherwise.
func (o *BillingProvider) GetConnectClientID() string {
	if o == nil || IsNil(o.ConnectClientID) {
		var ret string
		return ret
	}
	return *o.ConnectClientID
}

// GetConnectClientIDOk returns a tuple with the ConnectClientID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingProvider) GetConnectClientIDOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectClientID) {
		return nil, false
	}
	return o.ConnectClientID, true
}

// HasConnectClientID returns a boolean if a field has been set.
func (o *BillingProvider) HasConnectClientID() bool {
	if o != nil && !IsNil(o.ConnectClientID) {
		return true
	}

	return false
}

// SetConnectClientID gets a reference to the given string and assigns it to the ConnectClientID field.
func (o *BillingProvider) SetConnectClientID(v string) {
	o.ConnectClientID = &v
}

// GetLogoURL returns the LogoURL field value if set, zero value otherwise.
func (o *BillingProvider) GetLogoURL() string {
	if o == nil || IsNil(o.LogoURL) {
		var ret string
		return ret
	}
	return *o.LogoURL
}

// GetLogoURLOk returns a tuple with the LogoURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingProvider) GetLogoURLOk() (*string, bool) {
	if o == nil || IsNil(o.LogoURL) {
		return nil, false
	}
	return o.LogoURL, true
}

// HasLogoURL returns a boolean if a field has been set.
func (o *BillingProvider) HasLogoURL() bool {
	if o != nil && !IsNil(o.LogoURL) {
		return true
	}

	return false
}

// SetLogoURL gets a reference to the given string and assigns it to the LogoURL field.
func (o *BillingProvider) SetLogoURL(v string) {
	o.LogoURL = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BillingProvider) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingProvider) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BillingProvider) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BillingProvider) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value
func (o *BillingProvider) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *BillingProvider) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *BillingProvider) SetStatus(v string) {
	o.Status = v
}

// GetStripeCustomerID returns the StripeCustomerID field value if set, zero value otherwise.
func (o *BillingProvider) GetStripeCustomerID() string {
	if o == nil || IsNil(o.StripeCustomerID) {
		var ret string
		return ret
	}
	return *o.StripeCustomerID
}

// GetStripeCustomerIDOk returns a tuple with the StripeCustomerID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingProvider) GetStripeCustomerIDOk() (*string, bool) {
	if o == nil || IsNil(o.StripeCustomerID) {
		return nil, false
	}
	return o.StripeCustomerID, true
}

// HasStripeCustomerID returns a boolean if a field has been set.
func (o *BillingProvider) HasStripeCustomerID() bool {
	if o != nil && !IsNil(o.StripeCustomerID) {
		return true
	}

	return false
}

// SetStripeCustomerID gets a reference to the given string and assigns it to the StripeCustomerID field.
func (o *BillingProvider) SetStripeCustomerID(v string) {
	o.StripeCustomerID = &v
}

// GetType returns the Type field value
func (o *BillingProvider) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BillingProvider) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *BillingProvider) SetType(v string) {
	o.Type = v
}

func (o BillingProvider) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BalanceDueLink) {
		toSerialize["balanceDueLink"] = o.BalanceDueLink
	}
	if !IsNil(o.ConnectClientID) {
		toSerialize["connectClientID"] = o.ConnectClientID
	}
	if !IsNil(o.LogoURL) {
		toSerialize["logoURL"] = o.LogoURL
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["status"] = o.Status
	if !IsNil(o.StripeCustomerID) {
		toSerialize["stripeCustomerID"] = o.StripeCustomerID
	}
	toSerialize["type"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BillingProvider) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBillingProvider := _BillingProvider{}

	err = json.Unmarshal(data, &varBillingProvider)

	if err != nil {
		return err
	}

	*o = BillingProvider(varBillingProvider)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "balanceDueLink")
		delete(additionalProperties, "connectClientID")
		delete(additionalProperties, "logoURL")
		delete(additionalProperties, "name")
		delete(additionalProperties, "status")
		delete(additionalProperties, "stripeCustomerID")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBillingProvider struct {
	value *BillingProvider
	isSet bool
}

func (v NullableBillingProvider) Get() *BillingProvider {
	return v.value
}

func (v *NullableBillingProvider) Set(val *BillingProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingProvider(val *BillingProvider) *NullableBillingProvider {
	return &NullableBillingProvider{value: val, isSet: true}
}

func (v NullableBillingProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


