/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateServiceModelRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateServiceModelRequest{}

// CreateServiceModelRequest struct for CreateServiceModelRequest
type CreateServiceModelRequest struct {
	// The infrastructure account configuration ID list
	AccountConfigIds []string `json:"accountConfigIds,omitempty"`
	// A brief description of the service model
	Description string `json:"description"`
	// Enabled service model features
	Features []ServiceModelFeatureDetail `json:"features,omitempty"`
	// The model type encapsulating this service
	ModelType string `json:"modelType"`
	// Name of the Service Model
	Name string `json:"name"`
	// ID of a Service API
	ServiceApiId string `json:"serviceApiId"`
	// ID of a Service
	ServiceId string `json:"serviceId"`
	// JWT token used to perform authorization
	Token string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _CreateServiceModelRequest CreateServiceModelRequest

// NewCreateServiceModelRequest instantiates a new CreateServiceModelRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateServiceModelRequest(description string, modelType string, name string, serviceApiId string, serviceId string, token string) *CreateServiceModelRequest {
	this := CreateServiceModelRequest{}
	this.Description = description
	this.ModelType = modelType
	this.Name = name
	this.ServiceApiId = serviceApiId
	this.ServiceId = serviceId
	this.Token = token
	return &this
}

// NewCreateServiceModelRequestWithDefaults instantiates a new CreateServiceModelRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateServiceModelRequestWithDefaults() *CreateServiceModelRequest {
	this := CreateServiceModelRequest{}
	return &this
}

// GetAccountConfigIds returns the AccountConfigIds field value if set, zero value otherwise.
func (o *CreateServiceModelRequest) GetAccountConfigIds() []string {
	if o == nil || IsNil(o.AccountConfigIds) {
		var ret []string
		return ret
	}
	return o.AccountConfigIds
}

// GetAccountConfigIdsOk returns a tuple with the AccountConfigIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServiceModelRequest) GetAccountConfigIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AccountConfigIds) {
		return nil, false
	}
	return o.AccountConfigIds, true
}

// HasAccountConfigIds returns a boolean if a field has been set.
func (o *CreateServiceModelRequest) HasAccountConfigIds() bool {
	if o != nil && !IsNil(o.AccountConfigIds) {
		return true
	}

	return false
}

// SetAccountConfigIds gets a reference to the given []string and assigns it to the AccountConfigIds field.
func (o *CreateServiceModelRequest) SetAccountConfigIds(v []string) {
	o.AccountConfigIds = v
}

// GetDescription returns the Description field value
func (o *CreateServiceModelRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateServiceModelRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateServiceModelRequest) SetDescription(v string) {
	o.Description = v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *CreateServiceModelRequest) GetFeatures() []ServiceModelFeatureDetail {
	if o == nil || IsNil(o.Features) {
		var ret []ServiceModelFeatureDetail
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateServiceModelRequest) GetFeaturesOk() ([]ServiceModelFeatureDetail, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *CreateServiceModelRequest) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []ServiceModelFeatureDetail and assigns it to the Features field.
func (o *CreateServiceModelRequest) SetFeatures(v []ServiceModelFeatureDetail) {
	o.Features = v
}

// GetModelType returns the ModelType field value
func (o *CreateServiceModelRequest) GetModelType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModelType
}

// GetModelTypeOk returns a tuple with the ModelType field value
// and a boolean to check if the value has been set.
func (o *CreateServiceModelRequest) GetModelTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModelType, true
}

// SetModelType sets field value
func (o *CreateServiceModelRequest) SetModelType(v string) {
	o.ModelType = v
}

// GetName returns the Name field value
func (o *CreateServiceModelRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateServiceModelRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateServiceModelRequest) SetName(v string) {
	o.Name = v
}

// GetServiceApiId returns the ServiceApiId field value
func (o *CreateServiceModelRequest) GetServiceApiId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceApiId
}

// GetServiceApiIdOk returns a tuple with the ServiceApiId field value
// and a boolean to check if the value has been set.
func (o *CreateServiceModelRequest) GetServiceApiIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceApiId, true
}

// SetServiceApiId sets field value
func (o *CreateServiceModelRequest) SetServiceApiId(v string) {
	o.ServiceApiId = v
}

// GetServiceId returns the ServiceId field value
func (o *CreateServiceModelRequest) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *CreateServiceModelRequest) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *CreateServiceModelRequest) SetServiceId(v string) {
	o.ServiceId = v
}

// GetToken returns the Token field value
func (o *CreateServiceModelRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *CreateServiceModelRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *CreateServiceModelRequest) SetToken(v string) {
	o.Token = v
}

func (o CreateServiceModelRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateServiceModelRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountConfigIds) {
		toSerialize["accountConfigIds"] = o.AccountConfigIds
	}
	toSerialize["description"] = o.Description
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	toSerialize["modelType"] = o.ModelType
	toSerialize["name"] = o.Name
	toSerialize["serviceApiId"] = o.ServiceApiId
	toSerialize["serviceId"] = o.ServiceId
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateServiceModelRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"modelType",
		"name",
		"serviceApiId",
		"serviceId",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateServiceModelRequest := _CreateServiceModelRequest{}

	err = json.Unmarshal(data, &varCreateServiceModelRequest)

	if err != nil {
		return err
	}

	*o = CreateServiceModelRequest(varCreateServiceModelRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountConfigIds")
		delete(additionalProperties, "description")
		delete(additionalProperties, "features")
		delete(additionalProperties, "modelType")
		delete(additionalProperties, "name")
		delete(additionalProperties, "serviceApiId")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateServiceModelRequest struct {
	value *CreateServiceModelRequest
	isSet bool
}

func (v NullableCreateServiceModelRequest) Get() *CreateServiceModelRequest {
	return v.value
}

func (v *NullableCreateServiceModelRequest) Set(val *CreateServiceModelRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateServiceModelRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateServiceModelRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateServiceModelRequest(val *CreateServiceModelRequest) *NullableCreateServiceModelRequest {
	return &NullableCreateServiceModelRequest{value: val, isSet: true}
}

func (v NullableCreateServiceModelRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateServiceModelRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


