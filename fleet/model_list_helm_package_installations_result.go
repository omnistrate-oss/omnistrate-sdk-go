/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListHelmPackageInstallationsResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListHelmPackageInstallationsResult{}

// ListHelmPackageInstallationsResult struct for ListHelmPackageInstallationsResult
type ListHelmPackageInstallationsResult struct {
	// List of Helm package installations
	HelmPackageInstallations []HelmPackageInstallations `json:"helmPackageInstallations"`
}

type _ListHelmPackageInstallationsResult ListHelmPackageInstallationsResult

// NewListHelmPackageInstallationsResult instantiates a new ListHelmPackageInstallationsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListHelmPackageInstallationsResult(helmPackageInstallations []HelmPackageInstallations) *ListHelmPackageInstallationsResult {
	this := ListHelmPackageInstallationsResult{}
	this.HelmPackageInstallations = helmPackageInstallations
	return &this
}

// NewListHelmPackageInstallationsResultWithDefaults instantiates a new ListHelmPackageInstallationsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListHelmPackageInstallationsResultWithDefaults() *ListHelmPackageInstallationsResult {
	this := ListHelmPackageInstallationsResult{}
	return &this
}

// GetHelmPackageInstallations returns the HelmPackageInstallations field value
func (o *ListHelmPackageInstallationsResult) GetHelmPackageInstallations() []HelmPackageInstallations {
	if o == nil {
		var ret []HelmPackageInstallations
		return ret
	}

	return o.HelmPackageInstallations
}

// GetHelmPackageInstallationsOk returns a tuple with the HelmPackageInstallations field value
// and a boolean to check if the value has been set.
func (o *ListHelmPackageInstallationsResult) GetHelmPackageInstallationsOk() ([]HelmPackageInstallations, bool) {
	if o == nil {
		return nil, false
	}
	return o.HelmPackageInstallations, true
}

// SetHelmPackageInstallations sets field value
func (o *ListHelmPackageInstallationsResult) SetHelmPackageInstallations(v []HelmPackageInstallations) {
	o.HelmPackageInstallations = v
}

func (o ListHelmPackageInstallationsResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListHelmPackageInstallationsResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["helmPackageInstallations"] = o.HelmPackageInstallations
	return toSerialize, nil
}

func (o *ListHelmPackageInstallationsResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"helmPackageInstallations",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListHelmPackageInstallationsResult := _ListHelmPackageInstallationsResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListHelmPackageInstallationsResult)

	if err != nil {
		return err
	}

	*o = ListHelmPackageInstallationsResult(varListHelmPackageInstallationsResult)

	return err
}

type NullableListHelmPackageInstallationsResult struct {
	value *ListHelmPackageInstallationsResult
	isSet bool
}

func (v NullableListHelmPackageInstallationsResult) Get() *ListHelmPackageInstallationsResult {
	return v.value
}

func (v *NullableListHelmPackageInstallationsResult) Set(val *ListHelmPackageInstallationsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableListHelmPackageInstallationsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableListHelmPackageInstallationsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListHelmPackageInstallationsResult(val *ListHelmPackageInstallationsResult) *NullableListHelmPackageInstallationsResult {
	return &NullableListHelmPackageInstallationsResult{value: val, isSet: true}
}

func (v NullableListHelmPackageInstallationsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListHelmPackageInstallationsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


