/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServicePlanSearchRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicePlanSearchRecord{}

// ServicePlanSearchRecord struct for ServicePlanSearchRecord
type ServicePlanSearchRecord struct {
	// The Service Model type of the service plan.
	DeploymentType string `json:"deploymentType"`
	// The Product Tier description of the service plan.
	Description string `json:"description"`
	// The Product Tier ID of the service plan.
	Id string `json:"id"`
	// The Product Tier name of the service plan.
	Name string `json:"name"`
	// The timestamp when the service plan was released.
	ReleasedAt *string `json:"releasedAt,omitempty"`
	// The service environment ID of the service plan.
	ServiceEnvironmentId string `json:"serviceEnvironmentId"`
	// The service environment name of the service plan.
	ServiceEnvironmentName string `json:"serviceEnvironmentName"`
	// The service environment type of the service plan.
	ServiceEnvironmentType *string `json:"serviceEnvironmentType,omitempty"`
	// The service ID of the service plan.
	ServiceId string `json:"serviceId"`
	// The service name of the service plan.
	ServiceName string `json:"serviceName"`
	// The Product Tier type of the service plan.
	TenancyType string `json:"tenancyType"`
	// The Product Tier version of the service plan.
	Version string `json:"version"`
	// The Product Tier version name of the service plan.
	VersionName *string `json:"versionName,omitempty"`
	// The Product Tier version set status of the service plan.
	VersionSetStatus string `json:"versionSetStatus"`
}

type _ServicePlanSearchRecord ServicePlanSearchRecord

// NewServicePlanSearchRecord instantiates a new ServicePlanSearchRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicePlanSearchRecord(deploymentType string, description string, id string, name string, serviceEnvironmentId string, serviceEnvironmentName string, serviceId string, serviceName string, tenancyType string, version string, versionSetStatus string) *ServicePlanSearchRecord {
	this := ServicePlanSearchRecord{}
	this.DeploymentType = deploymentType
	this.Description = description
	this.Id = id
	this.Name = name
	this.ServiceEnvironmentId = serviceEnvironmentId
	this.ServiceEnvironmentName = serviceEnvironmentName
	this.ServiceId = serviceId
	this.ServiceName = serviceName
	this.TenancyType = tenancyType
	this.Version = version
	this.VersionSetStatus = versionSetStatus
	return &this
}

// NewServicePlanSearchRecordWithDefaults instantiates a new ServicePlanSearchRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicePlanSearchRecordWithDefaults() *ServicePlanSearchRecord {
	this := ServicePlanSearchRecord{}
	return &this
}

// GetDeploymentType returns the DeploymentType field value
func (o *ServicePlanSearchRecord) GetDeploymentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeploymentType
}

// GetDeploymentTypeOk returns a tuple with the DeploymentType field value
// and a boolean to check if the value has been set.
func (o *ServicePlanSearchRecord) GetDeploymentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeploymentType, true
}

// SetDeploymentType sets field value
func (o *ServicePlanSearchRecord) SetDeploymentType(v string) {
	o.DeploymentType = v
}

// GetDescription returns the Description field value
func (o *ServicePlanSearchRecord) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ServicePlanSearchRecord) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ServicePlanSearchRecord) SetDescription(v string) {
	o.Description = v
}

// GetId returns the Id field value
func (o *ServicePlanSearchRecord) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ServicePlanSearchRecord) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ServicePlanSearchRecord) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ServicePlanSearchRecord) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServicePlanSearchRecord) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServicePlanSearchRecord) SetName(v string) {
	o.Name = v
}

// GetReleasedAt returns the ReleasedAt field value if set, zero value otherwise.
func (o *ServicePlanSearchRecord) GetReleasedAt() string {
	if o == nil || IsNil(o.ReleasedAt) {
		var ret string
		return ret
	}
	return *o.ReleasedAt
}

// GetReleasedAtOk returns a tuple with the ReleasedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanSearchRecord) GetReleasedAtOk() (*string, bool) {
	if o == nil || IsNil(o.ReleasedAt) {
		return nil, false
	}
	return o.ReleasedAt, true
}

// HasReleasedAt returns a boolean if a field has been set.
func (o *ServicePlanSearchRecord) HasReleasedAt() bool {
	if o != nil && !IsNil(o.ReleasedAt) {
		return true
	}

	return false
}

// SetReleasedAt gets a reference to the given string and assigns it to the ReleasedAt field.
func (o *ServicePlanSearchRecord) SetReleasedAt(v string) {
	o.ReleasedAt = &v
}

// GetServiceEnvironmentId returns the ServiceEnvironmentId field value
func (o *ServicePlanSearchRecord) GetServiceEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceEnvironmentId
}

// GetServiceEnvironmentIdOk returns a tuple with the ServiceEnvironmentId field value
// and a boolean to check if the value has been set.
func (o *ServicePlanSearchRecord) GetServiceEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceEnvironmentId, true
}

// SetServiceEnvironmentId sets field value
func (o *ServicePlanSearchRecord) SetServiceEnvironmentId(v string) {
	o.ServiceEnvironmentId = v
}

// GetServiceEnvironmentName returns the ServiceEnvironmentName field value
func (o *ServicePlanSearchRecord) GetServiceEnvironmentName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceEnvironmentName
}

// GetServiceEnvironmentNameOk returns a tuple with the ServiceEnvironmentName field value
// and a boolean to check if the value has been set.
func (o *ServicePlanSearchRecord) GetServiceEnvironmentNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceEnvironmentName, true
}

// SetServiceEnvironmentName sets field value
func (o *ServicePlanSearchRecord) SetServiceEnvironmentName(v string) {
	o.ServiceEnvironmentName = v
}

// GetServiceEnvironmentType returns the ServiceEnvironmentType field value if set, zero value otherwise.
func (o *ServicePlanSearchRecord) GetServiceEnvironmentType() string {
	if o == nil || IsNil(o.ServiceEnvironmentType) {
		var ret string
		return ret
	}
	return *o.ServiceEnvironmentType
}

// GetServiceEnvironmentTypeOk returns a tuple with the ServiceEnvironmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanSearchRecord) GetServiceEnvironmentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceEnvironmentType) {
		return nil, false
	}
	return o.ServiceEnvironmentType, true
}

// HasServiceEnvironmentType returns a boolean if a field has been set.
func (o *ServicePlanSearchRecord) HasServiceEnvironmentType() bool {
	if o != nil && !IsNil(o.ServiceEnvironmentType) {
		return true
	}

	return false
}

// SetServiceEnvironmentType gets a reference to the given string and assigns it to the ServiceEnvironmentType field.
func (o *ServicePlanSearchRecord) SetServiceEnvironmentType(v string) {
	o.ServiceEnvironmentType = &v
}

// GetServiceId returns the ServiceId field value
func (o *ServicePlanSearchRecord) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *ServicePlanSearchRecord) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *ServicePlanSearchRecord) SetServiceId(v string) {
	o.ServiceId = v
}

// GetServiceName returns the ServiceName field value
func (o *ServicePlanSearchRecord) GetServiceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value
// and a boolean to check if the value has been set.
func (o *ServicePlanSearchRecord) GetServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceName, true
}

// SetServiceName sets field value
func (o *ServicePlanSearchRecord) SetServiceName(v string) {
	o.ServiceName = v
}

// GetTenancyType returns the TenancyType field value
func (o *ServicePlanSearchRecord) GetTenancyType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenancyType
}

// GetTenancyTypeOk returns a tuple with the TenancyType field value
// and a boolean to check if the value has been set.
func (o *ServicePlanSearchRecord) GetTenancyTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenancyType, true
}

// SetTenancyType sets field value
func (o *ServicePlanSearchRecord) SetTenancyType(v string) {
	o.TenancyType = v
}

// GetVersion returns the Version field value
func (o *ServicePlanSearchRecord) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ServicePlanSearchRecord) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ServicePlanSearchRecord) SetVersion(v string) {
	o.Version = v
}

// GetVersionName returns the VersionName field value if set, zero value otherwise.
func (o *ServicePlanSearchRecord) GetVersionName() string {
	if o == nil || IsNil(o.VersionName) {
		var ret string
		return ret
	}
	return *o.VersionName
}

// GetVersionNameOk returns a tuple with the VersionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanSearchRecord) GetVersionNameOk() (*string, bool) {
	if o == nil || IsNil(o.VersionName) {
		return nil, false
	}
	return o.VersionName, true
}

// HasVersionName returns a boolean if a field has been set.
func (o *ServicePlanSearchRecord) HasVersionName() bool {
	if o != nil && !IsNil(o.VersionName) {
		return true
	}

	return false
}

// SetVersionName gets a reference to the given string and assigns it to the VersionName field.
func (o *ServicePlanSearchRecord) SetVersionName(v string) {
	o.VersionName = &v
}

// GetVersionSetStatus returns the VersionSetStatus field value
func (o *ServicePlanSearchRecord) GetVersionSetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VersionSetStatus
}

// GetVersionSetStatusOk returns a tuple with the VersionSetStatus field value
// and a boolean to check if the value has been set.
func (o *ServicePlanSearchRecord) GetVersionSetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VersionSetStatus, true
}

// SetVersionSetStatus sets field value
func (o *ServicePlanSearchRecord) SetVersionSetStatus(v string) {
	o.VersionSetStatus = v
}

func (o ServicePlanSearchRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicePlanSearchRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deploymentType"] = o.DeploymentType
	toSerialize["description"] = o.Description
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !IsNil(o.ReleasedAt) {
		toSerialize["releasedAt"] = o.ReleasedAt
	}
	toSerialize["serviceEnvironmentId"] = o.ServiceEnvironmentId
	toSerialize["serviceEnvironmentName"] = o.ServiceEnvironmentName
	if !IsNil(o.ServiceEnvironmentType) {
		toSerialize["serviceEnvironmentType"] = o.ServiceEnvironmentType
	}
	toSerialize["serviceId"] = o.ServiceId
	toSerialize["serviceName"] = o.ServiceName
	toSerialize["tenancyType"] = o.TenancyType
	toSerialize["version"] = o.Version
	if !IsNil(o.VersionName) {
		toSerialize["versionName"] = o.VersionName
	}
	toSerialize["versionSetStatus"] = o.VersionSetStatus
	return toSerialize, nil
}

func (o *ServicePlanSearchRecord) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"deploymentType",
		"description",
		"id",
		"name",
		"serviceEnvironmentId",
		"serviceEnvironmentName",
		"serviceId",
		"serviceName",
		"tenancyType",
		"version",
		"versionSetStatus",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServicePlanSearchRecord := _ServicePlanSearchRecord{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServicePlanSearchRecord)

	if err != nil {
		return err
	}

	*o = ServicePlanSearchRecord(varServicePlanSearchRecord)

	return err
}

type NullableServicePlanSearchRecord struct {
	value *ServicePlanSearchRecord
	isSet bool
}

func (v NullableServicePlanSearchRecord) Get() *ServicePlanSearchRecord {
	return v.value
}

func (v *NullableServicePlanSearchRecord) Set(val *ServicePlanSearchRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableServicePlanSearchRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableServicePlanSearchRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicePlanSearchRecord(val *ServicePlanSearchRecord) *NullableServicePlanSearchRecord {
	return &NullableServicePlanSearchRecord{value: val, isSet: true}
}

func (v NullableServicePlanSearchRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicePlanSearchRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


