/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the FleetListUsersResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FleetListUsersResult{}

// FleetListUsersResult struct for FleetListUsersResult
type FleetListUsersResult struct {
	// ID of a Service Environment
	EnvironmentId *string `json:"environmentId,omitempty"`
	// Token to use for the next request
	NextPageToken *string `json:"nextPageToken,omitempty"`
	// ID of a Service
	ServiceId *string `json:"serviceId,omitempty"`
	// List of active users using the service.
	Users []User `json:"users"`
	AdditionalProperties map[string]interface{}
}

type _FleetListUsersResult FleetListUsersResult

// NewFleetListUsersResult instantiates a new FleetListUsersResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleetListUsersResult(users []User) *FleetListUsersResult {
	this := FleetListUsersResult{}
	this.Users = users
	return &this
}

// NewFleetListUsersResultWithDefaults instantiates a new FleetListUsersResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetListUsersResultWithDefaults() *FleetListUsersResult {
	this := FleetListUsersResult{}
	return &this
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *FleetListUsersResult) GetEnvironmentId() string {
	if o == nil || IsNil(o.EnvironmentId) {
		var ret string
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetListUsersResult) GetEnvironmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentId) {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *FleetListUsersResult) HasEnvironmentId() bool {
	if o != nil && !IsNil(o.EnvironmentId) {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given string and assigns it to the EnvironmentId field.
func (o *FleetListUsersResult) SetEnvironmentId(v string) {
	o.EnvironmentId = &v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *FleetListUsersResult) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetListUsersResult) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *FleetListUsersResult) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *FleetListUsersResult) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *FleetListUsersResult) GetServiceId() string {
	if o == nil || IsNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FleetListUsersResult) GetServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *FleetListUsersResult) HasServiceId() bool {
	if o != nil && !IsNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *FleetListUsersResult) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetUsers returns the Users field value
func (o *FleetListUsersResult) GetUsers() []User {
	if o == nil {
		var ret []User
		return ret
	}

	return o.Users
}

// GetUsersOk returns a tuple with the Users field value
// and a boolean to check if the value has been set.
func (o *FleetListUsersResult) GetUsersOk() ([]User, bool) {
	if o == nil {
		return nil, false
	}
	return o.Users, true
}

// SetUsers sets field value
func (o *FleetListUsersResult) SetUsers(v []User) {
	o.Users = v
}

func (o FleetListUsersResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FleetListUsersResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnvironmentId) {
		toSerialize["environmentId"] = o.EnvironmentId
	}
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	if !IsNil(o.ServiceId) {
		toSerialize["serviceId"] = o.ServiceId
	}
	toSerialize["users"] = o.Users

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FleetListUsersResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"users",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFleetListUsersResult := _FleetListUsersResult{}

	err = json.Unmarshal(data, &varFleetListUsersResult)

	if err != nil {
		return err
	}

	*o = FleetListUsersResult(varFleetListUsersResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "environmentId")
		delete(additionalProperties, "nextPageToken")
		delete(additionalProperties, "serviceId")
		delete(additionalProperties, "users")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFleetListUsersResult struct {
	value *FleetListUsersResult
	isSet bool
}

func (v NullableFleetListUsersResult) Get() *FleetListUsersResult {
	return v.value
}

func (v *NullableFleetListUsersResult) Set(val *FleetListUsersResult) {
	v.value = val
	v.isSet = true
}

func (v NullableFleetListUsersResult) IsSet() bool {
	return v.isSet
}

func (v *NullableFleetListUsersResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleetListUsersResult(val *FleetListUsersResult) *NullableFleetListUsersResult {
	return &NullableFleetListUsersResult{value: val, isSet: true}
}

func (v NullableFleetListUsersResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleetListUsersResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


