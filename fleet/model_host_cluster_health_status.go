/*
Omnistrate Fleet API

REST API for Omnistrate Fleet

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fleet

import (
	"encoding/json"
	"fmt"
)

// checks if the HostClusterHealthStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostClusterHealthStatus{}

// HostClusterHealthStatus Health status of the host cluster
type HostClusterHealthStatus struct {
	// List of entities that have failed health checks
	FailedEntities []EntityHealth `json:"failedEntities,omitempty"`
	// The heath status of a resource
	OverallStatus string `json:"overallStatus"`
	// Detailed message about the health status of the host cluster
	StatusMessage *string `json:"statusMessage,omitempty"`
	// Total number of entities under management in the host cluster
	TotalNumberOfEntities int64 `json:"totalNumberOfEntities"`
	// Map of entity types to their counts
	TotalNumberOfEntitiesByType map[string]int64 `json:"totalNumberOfEntitiesByType"`
	// Number of entities that have failed health checks
	TotalNumberOfFailedEntities int64 `json:"totalNumberOfFailedEntities"`
	// Map of entity types to their counts that have failed health checks
	TotalNumberOfFailedEntitiesByType map[string]int64 `json:"totalNumberOfFailedEntitiesByType"`
	// Number of entities that are healthy
	TotalNumberOfHealthyEntities int64 `json:"totalNumberOfHealthyEntities"`
	// Map of entity types to their counts that are healthy
	TotalNumberOfHealthyEntitiesByType map[string]int64 `json:"totalNumberOfHealthyEntitiesByType"`
	AdditionalProperties map[string]interface{}
}

type _HostClusterHealthStatus HostClusterHealthStatus

// NewHostClusterHealthStatus instantiates a new HostClusterHealthStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostClusterHealthStatus(overallStatus string, totalNumberOfEntities int64, totalNumberOfEntitiesByType map[string]int64, totalNumberOfFailedEntities int64, totalNumberOfFailedEntitiesByType map[string]int64, totalNumberOfHealthyEntities int64, totalNumberOfHealthyEntitiesByType map[string]int64) *HostClusterHealthStatus {
	this := HostClusterHealthStatus{}
	this.OverallStatus = overallStatus
	this.TotalNumberOfEntities = totalNumberOfEntities
	this.TotalNumberOfEntitiesByType = totalNumberOfEntitiesByType
	this.TotalNumberOfFailedEntities = totalNumberOfFailedEntities
	this.TotalNumberOfFailedEntitiesByType = totalNumberOfFailedEntitiesByType
	this.TotalNumberOfHealthyEntities = totalNumberOfHealthyEntities
	this.TotalNumberOfHealthyEntitiesByType = totalNumberOfHealthyEntitiesByType
	return &this
}

// NewHostClusterHealthStatusWithDefaults instantiates a new HostClusterHealthStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostClusterHealthStatusWithDefaults() *HostClusterHealthStatus {
	this := HostClusterHealthStatus{}
	return &this
}

// GetFailedEntities returns the FailedEntities field value if set, zero value otherwise.
func (o *HostClusterHealthStatus) GetFailedEntities() []EntityHealth {
	if o == nil || IsNil(o.FailedEntities) {
		var ret []EntityHealth
		return ret
	}
	return o.FailedEntities
}

// GetFailedEntitiesOk returns a tuple with the FailedEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostClusterHealthStatus) GetFailedEntitiesOk() ([]EntityHealth, bool) {
	if o == nil || IsNil(o.FailedEntities) {
		return nil, false
	}
	return o.FailedEntities, true
}

// HasFailedEntities returns a boolean if a field has been set.
func (o *HostClusterHealthStatus) HasFailedEntities() bool {
	if o != nil && !IsNil(o.FailedEntities) {
		return true
	}

	return false
}

// SetFailedEntities gets a reference to the given []EntityHealth and assigns it to the FailedEntities field.
func (o *HostClusterHealthStatus) SetFailedEntities(v []EntityHealth) {
	o.FailedEntities = v
}

// GetOverallStatus returns the OverallStatus field value
func (o *HostClusterHealthStatus) GetOverallStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OverallStatus
}

// GetOverallStatusOk returns a tuple with the OverallStatus field value
// and a boolean to check if the value has been set.
func (o *HostClusterHealthStatus) GetOverallStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OverallStatus, true
}

// SetOverallStatus sets field value
func (o *HostClusterHealthStatus) SetOverallStatus(v string) {
	o.OverallStatus = v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *HostClusterHealthStatus) GetStatusMessage() string {
	if o == nil || IsNil(o.StatusMessage) {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostClusterHealthStatus) GetStatusMessageOk() (*string, bool) {
	if o == nil || IsNil(o.StatusMessage) {
		return nil, false
	}
	return o.StatusMessage, true
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *HostClusterHealthStatus) HasStatusMessage() bool {
	if o != nil && !IsNil(o.StatusMessage) {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *HostClusterHealthStatus) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

// GetTotalNumberOfEntities returns the TotalNumberOfEntities field value
func (o *HostClusterHealthStatus) GetTotalNumberOfEntities() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalNumberOfEntities
}

// GetTotalNumberOfEntitiesOk returns a tuple with the TotalNumberOfEntities field value
// and a boolean to check if the value has been set.
func (o *HostClusterHealthStatus) GetTotalNumberOfEntitiesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNumberOfEntities, true
}

// SetTotalNumberOfEntities sets field value
func (o *HostClusterHealthStatus) SetTotalNumberOfEntities(v int64) {
	o.TotalNumberOfEntities = v
}

// GetTotalNumberOfEntitiesByType returns the TotalNumberOfEntitiesByType field value
func (o *HostClusterHealthStatus) GetTotalNumberOfEntitiesByType() map[string]int64 {
	if o == nil {
		var ret map[string]int64
		return ret
	}

	return o.TotalNumberOfEntitiesByType
}

// GetTotalNumberOfEntitiesByTypeOk returns a tuple with the TotalNumberOfEntitiesByType field value
// and a boolean to check if the value has been set.
func (o *HostClusterHealthStatus) GetTotalNumberOfEntitiesByTypeOk() (*map[string]int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNumberOfEntitiesByType, true
}

// SetTotalNumberOfEntitiesByType sets field value
func (o *HostClusterHealthStatus) SetTotalNumberOfEntitiesByType(v map[string]int64) {
	o.TotalNumberOfEntitiesByType = v
}

// GetTotalNumberOfFailedEntities returns the TotalNumberOfFailedEntities field value
func (o *HostClusterHealthStatus) GetTotalNumberOfFailedEntities() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalNumberOfFailedEntities
}

// GetTotalNumberOfFailedEntitiesOk returns a tuple with the TotalNumberOfFailedEntities field value
// and a boolean to check if the value has been set.
func (o *HostClusterHealthStatus) GetTotalNumberOfFailedEntitiesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNumberOfFailedEntities, true
}

// SetTotalNumberOfFailedEntities sets field value
func (o *HostClusterHealthStatus) SetTotalNumberOfFailedEntities(v int64) {
	o.TotalNumberOfFailedEntities = v
}

// GetTotalNumberOfFailedEntitiesByType returns the TotalNumberOfFailedEntitiesByType field value
func (o *HostClusterHealthStatus) GetTotalNumberOfFailedEntitiesByType() map[string]int64 {
	if o == nil {
		var ret map[string]int64
		return ret
	}

	return o.TotalNumberOfFailedEntitiesByType
}

// GetTotalNumberOfFailedEntitiesByTypeOk returns a tuple with the TotalNumberOfFailedEntitiesByType field value
// and a boolean to check if the value has been set.
func (o *HostClusterHealthStatus) GetTotalNumberOfFailedEntitiesByTypeOk() (*map[string]int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNumberOfFailedEntitiesByType, true
}

// SetTotalNumberOfFailedEntitiesByType sets field value
func (o *HostClusterHealthStatus) SetTotalNumberOfFailedEntitiesByType(v map[string]int64) {
	o.TotalNumberOfFailedEntitiesByType = v
}

// GetTotalNumberOfHealthyEntities returns the TotalNumberOfHealthyEntities field value
func (o *HostClusterHealthStatus) GetTotalNumberOfHealthyEntities() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalNumberOfHealthyEntities
}

// GetTotalNumberOfHealthyEntitiesOk returns a tuple with the TotalNumberOfHealthyEntities field value
// and a boolean to check if the value has been set.
func (o *HostClusterHealthStatus) GetTotalNumberOfHealthyEntitiesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNumberOfHealthyEntities, true
}

// SetTotalNumberOfHealthyEntities sets field value
func (o *HostClusterHealthStatus) SetTotalNumberOfHealthyEntities(v int64) {
	o.TotalNumberOfHealthyEntities = v
}

// GetTotalNumberOfHealthyEntitiesByType returns the TotalNumberOfHealthyEntitiesByType field value
func (o *HostClusterHealthStatus) GetTotalNumberOfHealthyEntitiesByType() map[string]int64 {
	if o == nil {
		var ret map[string]int64
		return ret
	}

	return o.TotalNumberOfHealthyEntitiesByType
}

// GetTotalNumberOfHealthyEntitiesByTypeOk returns a tuple with the TotalNumberOfHealthyEntitiesByType field value
// and a boolean to check if the value has been set.
func (o *HostClusterHealthStatus) GetTotalNumberOfHealthyEntitiesByTypeOk() (*map[string]int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalNumberOfHealthyEntitiesByType, true
}

// SetTotalNumberOfHealthyEntitiesByType sets field value
func (o *HostClusterHealthStatus) SetTotalNumberOfHealthyEntitiesByType(v map[string]int64) {
	o.TotalNumberOfHealthyEntitiesByType = v
}

func (o HostClusterHealthStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostClusterHealthStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FailedEntities) {
		toSerialize["failedEntities"] = o.FailedEntities
	}
	toSerialize["overallStatus"] = o.OverallStatus
	if !IsNil(o.StatusMessage) {
		toSerialize["statusMessage"] = o.StatusMessage
	}
	toSerialize["totalNumberOfEntities"] = o.TotalNumberOfEntities
	toSerialize["totalNumberOfEntitiesByType"] = o.TotalNumberOfEntitiesByType
	toSerialize["totalNumberOfFailedEntities"] = o.TotalNumberOfFailedEntities
	toSerialize["totalNumberOfFailedEntitiesByType"] = o.TotalNumberOfFailedEntitiesByType
	toSerialize["totalNumberOfHealthyEntities"] = o.TotalNumberOfHealthyEntities
	toSerialize["totalNumberOfHealthyEntitiesByType"] = o.TotalNumberOfHealthyEntitiesByType

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HostClusterHealthStatus) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"overallStatus",
		"totalNumberOfEntities",
		"totalNumberOfEntitiesByType",
		"totalNumberOfFailedEntities",
		"totalNumberOfFailedEntitiesByType",
		"totalNumberOfHealthyEntities",
		"totalNumberOfHealthyEntitiesByType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHostClusterHealthStatus := _HostClusterHealthStatus{}

	err = json.Unmarshal(data, &varHostClusterHealthStatus)

	if err != nil {
		return err
	}

	*o = HostClusterHealthStatus(varHostClusterHealthStatus)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "failedEntities")
		delete(additionalProperties, "overallStatus")
		delete(additionalProperties, "statusMessage")
		delete(additionalProperties, "totalNumberOfEntities")
		delete(additionalProperties, "totalNumberOfEntitiesByType")
		delete(additionalProperties, "totalNumberOfFailedEntities")
		delete(additionalProperties, "totalNumberOfFailedEntitiesByType")
		delete(additionalProperties, "totalNumberOfHealthyEntities")
		delete(additionalProperties, "totalNumberOfHealthyEntitiesByType")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHostClusterHealthStatus struct {
	value *HostClusterHealthStatus
	isSet bool
}

func (v NullableHostClusterHealthStatus) Get() *HostClusterHealthStatus {
	return v.value
}

func (v *NullableHostClusterHealthStatus) Set(val *HostClusterHealthStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableHostClusterHealthStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableHostClusterHealthStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostClusterHealthStatus(val *HostClusterHealthStatus) *NullableHostClusterHealthStatus {
	return &NullableHostClusterHealthStatus{value: val, isSet: true}
}

func (v NullableHostClusterHealthStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostClusterHealthStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


