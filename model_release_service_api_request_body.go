/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package omnistrategosdk

import (
	"encoding/json"
)

// checks if the ReleaseServiceAPIRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReleaseServiceAPIRequestBody{}

// ReleaseServiceAPIRequestBody struct for ReleaseServiceAPIRequestBody
type ReleaseServiceAPIRequestBody struct {
	// Indicates whether this version set is preferred.
	IsPreferred *bool `json:"isPreferred,omitempty"`
	// The product tier ID
	ProductTierId *string `json:"productTierId,omitempty"`
	// The name of the version set to release
	VersionSetName *string `json:"versionSetName,omitempty"`
	// The version-set type of the product-tier.
	VersionSetType *string `json:"versionSetType,omitempty"`
}

// NewReleaseServiceAPIRequestBody instantiates a new ReleaseServiceAPIRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReleaseServiceAPIRequestBody() *ReleaseServiceAPIRequestBody {
	this := ReleaseServiceAPIRequestBody{}
	var isPreferred bool = false
	this.IsPreferred = &isPreferred
	return &this
}

// NewReleaseServiceAPIRequestBodyWithDefaults instantiates a new ReleaseServiceAPIRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReleaseServiceAPIRequestBodyWithDefaults() *ReleaseServiceAPIRequestBody {
	this := ReleaseServiceAPIRequestBody{}
	var isPreferred bool = false
	this.IsPreferred = &isPreferred
	return &this
}

// GetIsPreferred returns the IsPreferred field value if set, zero value otherwise.
func (o *ReleaseServiceAPIRequestBody) GetIsPreferred() bool {
	if o == nil || IsNil(o.IsPreferred) {
		var ret bool
		return ret
	}
	return *o.IsPreferred
}

// GetIsPreferredOk returns a tuple with the IsPreferred field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseServiceAPIRequestBody) GetIsPreferredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPreferred) {
		return nil, false
	}
	return o.IsPreferred, true
}

// HasIsPreferred returns a boolean if a field has been set.
func (o *ReleaseServiceAPIRequestBody) HasIsPreferred() bool {
	if o != nil && !IsNil(o.IsPreferred) {
		return true
	}

	return false
}

// SetIsPreferred gets a reference to the given bool and assigns it to the IsPreferred field.
func (o *ReleaseServiceAPIRequestBody) SetIsPreferred(v bool) {
	o.IsPreferred = &v
}

// GetProductTierId returns the ProductTierId field value if set, zero value otherwise.
func (o *ReleaseServiceAPIRequestBody) GetProductTierId() string {
	if o == nil || IsNil(o.ProductTierId) {
		var ret string
		return ret
	}
	return *o.ProductTierId
}

// GetProductTierIdOk returns a tuple with the ProductTierId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseServiceAPIRequestBody) GetProductTierIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTierId) {
		return nil, false
	}
	return o.ProductTierId, true
}

// HasProductTierId returns a boolean if a field has been set.
func (o *ReleaseServiceAPIRequestBody) HasProductTierId() bool {
	if o != nil && !IsNil(o.ProductTierId) {
		return true
	}

	return false
}

// SetProductTierId gets a reference to the given string and assigns it to the ProductTierId field.
func (o *ReleaseServiceAPIRequestBody) SetProductTierId(v string) {
	o.ProductTierId = &v
}

// GetVersionSetName returns the VersionSetName field value if set, zero value otherwise.
func (o *ReleaseServiceAPIRequestBody) GetVersionSetName() string {
	if o == nil || IsNil(o.VersionSetName) {
		var ret string
		return ret
	}
	return *o.VersionSetName
}

// GetVersionSetNameOk returns a tuple with the VersionSetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseServiceAPIRequestBody) GetVersionSetNameOk() (*string, bool) {
	if o == nil || IsNil(o.VersionSetName) {
		return nil, false
	}
	return o.VersionSetName, true
}

// HasVersionSetName returns a boolean if a field has been set.
func (o *ReleaseServiceAPIRequestBody) HasVersionSetName() bool {
	if o != nil && !IsNil(o.VersionSetName) {
		return true
	}

	return false
}

// SetVersionSetName gets a reference to the given string and assigns it to the VersionSetName field.
func (o *ReleaseServiceAPIRequestBody) SetVersionSetName(v string) {
	o.VersionSetName = &v
}

// GetVersionSetType returns the VersionSetType field value if set, zero value otherwise.
func (o *ReleaseServiceAPIRequestBody) GetVersionSetType() string {
	if o == nil || IsNil(o.VersionSetType) {
		var ret string
		return ret
	}
	return *o.VersionSetType
}

// GetVersionSetTypeOk returns a tuple with the VersionSetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseServiceAPIRequestBody) GetVersionSetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VersionSetType) {
		return nil, false
	}
	return o.VersionSetType, true
}

// HasVersionSetType returns a boolean if a field has been set.
func (o *ReleaseServiceAPIRequestBody) HasVersionSetType() bool {
	if o != nil && !IsNil(o.VersionSetType) {
		return true
	}

	return false
}

// SetVersionSetType gets a reference to the given string and assigns it to the VersionSetType field.
func (o *ReleaseServiceAPIRequestBody) SetVersionSetType(v string) {
	o.VersionSetType = &v
}

func (o ReleaseServiceAPIRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReleaseServiceAPIRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsPreferred) {
		toSerialize["isPreferred"] = o.IsPreferred
	}
	if !IsNil(o.ProductTierId) {
		toSerialize["productTierId"] = o.ProductTierId
	}
	if !IsNil(o.VersionSetName) {
		toSerialize["versionSetName"] = o.VersionSetName
	}
	if !IsNil(o.VersionSetType) {
		toSerialize["versionSetType"] = o.VersionSetType
	}
	return toSerialize, nil
}

type NullableReleaseServiceAPIRequestBody struct {
	value *ReleaseServiceAPIRequestBody
	isSet bool
}

func (v NullableReleaseServiceAPIRequestBody) Get() *ReleaseServiceAPIRequestBody {
	return v.value
}

func (v *NullableReleaseServiceAPIRequestBody) Set(val *ReleaseServiceAPIRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableReleaseServiceAPIRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableReleaseServiceAPIRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReleaseServiceAPIRequestBody(val *ReleaseServiceAPIRequestBody) *NullableReleaseServiceAPIRequestBody {
	return &NullableReleaseServiceAPIRequestBody{value: val, isSet: true}
}

func (v NullableReleaseServiceAPIRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReleaseServiceAPIRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


