/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package omnistrategosdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddComputeInstanceTypeRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddComputeInstanceTypeRequestBody{}

// AddComputeInstanceTypeRequestBody struct for AddComputeInstanceTypeRequestBody
type AddComputeInstanceTypeRequestBody struct {
	// The cloud provider for this compute instance type config
	CloudProviderName string `json:"cloudProviderName"`
	// The instance type for this compute instance type config
	InstanceType string `json:"instanceType"`
}

type _AddComputeInstanceTypeRequestBody AddComputeInstanceTypeRequestBody

// NewAddComputeInstanceTypeRequestBody instantiates a new AddComputeInstanceTypeRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddComputeInstanceTypeRequestBody(cloudProviderName string, instanceType string) *AddComputeInstanceTypeRequestBody {
	this := AddComputeInstanceTypeRequestBody{}
	this.CloudProviderName = cloudProviderName
	this.InstanceType = instanceType
	return &this
}

// NewAddComputeInstanceTypeRequestBodyWithDefaults instantiates a new AddComputeInstanceTypeRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddComputeInstanceTypeRequestBodyWithDefaults() *AddComputeInstanceTypeRequestBody {
	this := AddComputeInstanceTypeRequestBody{}
	return &this
}

// GetCloudProviderName returns the CloudProviderName field value
func (o *AddComputeInstanceTypeRequestBody) GetCloudProviderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProviderName
}

// GetCloudProviderNameOk returns a tuple with the CloudProviderName field value
// and a boolean to check if the value has been set.
func (o *AddComputeInstanceTypeRequestBody) GetCloudProviderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProviderName, true
}

// SetCloudProviderName sets field value
func (o *AddComputeInstanceTypeRequestBody) SetCloudProviderName(v string) {
	o.CloudProviderName = v
}

// GetInstanceType returns the InstanceType field value
func (o *AddComputeInstanceTypeRequestBody) GetInstanceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value
// and a boolean to check if the value has been set.
func (o *AddComputeInstanceTypeRequestBody) GetInstanceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceType, true
}

// SetInstanceType sets field value
func (o *AddComputeInstanceTypeRequestBody) SetInstanceType(v string) {
	o.InstanceType = v
}

func (o AddComputeInstanceTypeRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddComputeInstanceTypeRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cloudProviderName"] = o.CloudProviderName
	toSerialize["instanceType"] = o.InstanceType
	return toSerialize, nil
}

func (o *AddComputeInstanceTypeRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloudProviderName",
		"instanceType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddComputeInstanceTypeRequestBody := _AddComputeInstanceTypeRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddComputeInstanceTypeRequestBody)

	if err != nil {
		return err
	}

	*o = AddComputeInstanceTypeRequestBody(varAddComputeInstanceTypeRequestBody)

	return err
}

type NullableAddComputeInstanceTypeRequestBody struct {
	value *AddComputeInstanceTypeRequestBody
	isSet bool
}

func (v NullableAddComputeInstanceTypeRequestBody) Get() *AddComputeInstanceTypeRequestBody {
	return v.value
}

func (v *NullableAddComputeInstanceTypeRequestBody) Set(val *AddComputeInstanceTypeRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableAddComputeInstanceTypeRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableAddComputeInstanceTypeRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddComputeInstanceTypeRequestBody(val *AddComputeInstanceTypeRequestBody) *NullableAddComputeInstanceTypeRequestBody {
	return &NullableAddComputeInstanceTypeRequestBody{value: val, isSet: true}
}

func (v NullableAddComputeInstanceTypeRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddComputeInstanceTypeRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


