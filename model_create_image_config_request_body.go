/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package omnistrategosdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateImageConfigRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateImageConfigRequestBody{}

// CreateImageConfigRequestBody struct for CreateImageConfigRequestBody
type CreateImageConfigRequestBody struct {
	CustomImageCommandsAndArgs *CustomImageCommandsAndArgs `json:"customImageCommandsAndArgs,omitempty"`
	// A brief description of the image configuration
	Description string `json:"description"`
	// Name of the container image
	ImageName string `json:"imageName"`
	// The image registry ID to use for the infra
	ImageRegistryId *string `json:"imageRegistryId,omitempty"`
	// PEM-encoded Public key part of the key used to sign the container image
	ImageSignaturePublicKeyPEM *string `json:"imageSignaturePublicKeyPEM,omitempty"`
	// Tag representing the specific software image version
	ImageTag *string `json:"imageTag,omitempty"`
	// The service environment ID
	ServiceEnvironmentId string `json:"serviceEnvironmentId"`
}

type _CreateImageConfigRequestBody CreateImageConfigRequestBody

// NewCreateImageConfigRequestBody instantiates a new CreateImageConfigRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateImageConfigRequestBody(description string, imageName string, serviceEnvironmentId string) *CreateImageConfigRequestBody {
	this := CreateImageConfigRequestBody{}
	this.Description = description
	this.ImageName = imageName
	var imageTag string = "latest"
	this.ImageTag = &imageTag
	this.ServiceEnvironmentId = serviceEnvironmentId
	return &this
}

// NewCreateImageConfigRequestBodyWithDefaults instantiates a new CreateImageConfigRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateImageConfigRequestBodyWithDefaults() *CreateImageConfigRequestBody {
	this := CreateImageConfigRequestBody{}
	var imageTag string = "latest"
	this.ImageTag = &imageTag
	return &this
}

// GetCustomImageCommandsAndArgs returns the CustomImageCommandsAndArgs field value if set, zero value otherwise.
func (o *CreateImageConfigRequestBody) GetCustomImageCommandsAndArgs() CustomImageCommandsAndArgs {
	if o == nil || IsNil(o.CustomImageCommandsAndArgs) {
		var ret CustomImageCommandsAndArgs
		return ret
	}
	return *o.CustomImageCommandsAndArgs
}

// GetCustomImageCommandsAndArgsOk returns a tuple with the CustomImageCommandsAndArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageConfigRequestBody) GetCustomImageCommandsAndArgsOk() (*CustomImageCommandsAndArgs, bool) {
	if o == nil || IsNil(o.CustomImageCommandsAndArgs) {
		return nil, false
	}
	return o.CustomImageCommandsAndArgs, true
}

// HasCustomImageCommandsAndArgs returns a boolean if a field has been set.
func (o *CreateImageConfigRequestBody) HasCustomImageCommandsAndArgs() bool {
	if o != nil && !IsNil(o.CustomImageCommandsAndArgs) {
		return true
	}

	return false
}

// SetCustomImageCommandsAndArgs gets a reference to the given CustomImageCommandsAndArgs and assigns it to the CustomImageCommandsAndArgs field.
func (o *CreateImageConfigRequestBody) SetCustomImageCommandsAndArgs(v CustomImageCommandsAndArgs) {
	o.CustomImageCommandsAndArgs = &v
}

// GetDescription returns the Description field value
func (o *CreateImageConfigRequestBody) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateImageConfigRequestBody) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateImageConfigRequestBody) SetDescription(v string) {
	o.Description = v
}

// GetImageName returns the ImageName field value
func (o *CreateImageConfigRequestBody) GetImageName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value
// and a boolean to check if the value has been set.
func (o *CreateImageConfigRequestBody) GetImageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageName, true
}

// SetImageName sets field value
func (o *CreateImageConfigRequestBody) SetImageName(v string) {
	o.ImageName = v
}

// GetImageRegistryId returns the ImageRegistryId field value if set, zero value otherwise.
func (o *CreateImageConfigRequestBody) GetImageRegistryId() string {
	if o == nil || IsNil(o.ImageRegistryId) {
		var ret string
		return ret
	}
	return *o.ImageRegistryId
}

// GetImageRegistryIdOk returns a tuple with the ImageRegistryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageConfigRequestBody) GetImageRegistryIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImageRegistryId) {
		return nil, false
	}
	return o.ImageRegistryId, true
}

// HasImageRegistryId returns a boolean if a field has been set.
func (o *CreateImageConfigRequestBody) HasImageRegistryId() bool {
	if o != nil && !IsNil(o.ImageRegistryId) {
		return true
	}

	return false
}

// SetImageRegistryId gets a reference to the given string and assigns it to the ImageRegistryId field.
func (o *CreateImageConfigRequestBody) SetImageRegistryId(v string) {
	o.ImageRegistryId = &v
}

// GetImageSignaturePublicKeyPEM returns the ImageSignaturePublicKeyPEM field value if set, zero value otherwise.
func (o *CreateImageConfigRequestBody) GetImageSignaturePublicKeyPEM() string {
	if o == nil || IsNil(o.ImageSignaturePublicKeyPEM) {
		var ret string
		return ret
	}
	return *o.ImageSignaturePublicKeyPEM
}

// GetImageSignaturePublicKeyPEMOk returns a tuple with the ImageSignaturePublicKeyPEM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageConfigRequestBody) GetImageSignaturePublicKeyPEMOk() (*string, bool) {
	if o == nil || IsNil(o.ImageSignaturePublicKeyPEM) {
		return nil, false
	}
	return o.ImageSignaturePublicKeyPEM, true
}

// HasImageSignaturePublicKeyPEM returns a boolean if a field has been set.
func (o *CreateImageConfigRequestBody) HasImageSignaturePublicKeyPEM() bool {
	if o != nil && !IsNil(o.ImageSignaturePublicKeyPEM) {
		return true
	}

	return false
}

// SetImageSignaturePublicKeyPEM gets a reference to the given string and assigns it to the ImageSignaturePublicKeyPEM field.
func (o *CreateImageConfigRequestBody) SetImageSignaturePublicKeyPEM(v string) {
	o.ImageSignaturePublicKeyPEM = &v
}

// GetImageTag returns the ImageTag field value if set, zero value otherwise.
func (o *CreateImageConfigRequestBody) GetImageTag() string {
	if o == nil || IsNil(o.ImageTag) {
		var ret string
		return ret
	}
	return *o.ImageTag
}

// GetImageTagOk returns a tuple with the ImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageConfigRequestBody) GetImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ImageTag) {
		return nil, false
	}
	return o.ImageTag, true
}

// HasImageTag returns a boolean if a field has been set.
func (o *CreateImageConfigRequestBody) HasImageTag() bool {
	if o != nil && !IsNil(o.ImageTag) {
		return true
	}

	return false
}

// SetImageTag gets a reference to the given string and assigns it to the ImageTag field.
func (o *CreateImageConfigRequestBody) SetImageTag(v string) {
	o.ImageTag = &v
}

// GetServiceEnvironmentId returns the ServiceEnvironmentId field value
func (o *CreateImageConfigRequestBody) GetServiceEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceEnvironmentId
}

// GetServiceEnvironmentIdOk returns a tuple with the ServiceEnvironmentId field value
// and a boolean to check if the value has been set.
func (o *CreateImageConfigRequestBody) GetServiceEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceEnvironmentId, true
}

// SetServiceEnvironmentId sets field value
func (o *CreateImageConfigRequestBody) SetServiceEnvironmentId(v string) {
	o.ServiceEnvironmentId = v
}

func (o CreateImageConfigRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateImageConfigRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomImageCommandsAndArgs) {
		toSerialize["customImageCommandsAndArgs"] = o.CustomImageCommandsAndArgs
	}
	toSerialize["description"] = o.Description
	toSerialize["imageName"] = o.ImageName
	if !IsNil(o.ImageRegistryId) {
		toSerialize["imageRegistryId"] = o.ImageRegistryId
	}
	if !IsNil(o.ImageSignaturePublicKeyPEM) {
		toSerialize["imageSignaturePublicKeyPEM"] = o.ImageSignaturePublicKeyPEM
	}
	if !IsNil(o.ImageTag) {
		toSerialize["imageTag"] = o.ImageTag
	}
	toSerialize["serviceEnvironmentId"] = o.ServiceEnvironmentId
	return toSerialize, nil
}

func (o *CreateImageConfigRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"imageName",
		"serviceEnvironmentId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateImageConfigRequestBody := _CreateImageConfigRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateImageConfigRequestBody)

	if err != nil {
		return err
	}

	*o = CreateImageConfigRequestBody(varCreateImageConfigRequestBody)

	return err
}

type NullableCreateImageConfigRequestBody struct {
	value *CreateImageConfigRequestBody
	isSet bool
}

func (v NullableCreateImageConfigRequestBody) Get() *CreateImageConfigRequestBody {
	return v.value
}

func (v *NullableCreateImageConfigRequestBody) Set(val *CreateImageConfigRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateImageConfigRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateImageConfigRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateImageConfigRequestBody(val *CreateImageConfigRequestBody) *NullableCreateImageConfigRequestBody {
	return &NullableCreateImageConfigRequestBody{value: val, isSet: true}
}

func (v NullableCreateImageConfigRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateImageConfigRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


