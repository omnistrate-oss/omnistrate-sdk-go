/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package registration

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListTierVersionSetsResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListTierVersionSetsResult{}

// ListTierVersionSetsResult struct for ListTierVersionSetsResult
type ListTierVersionSetsResult struct {
	// Token to use for the next request
	NextPageToken *string `json:"nextPageToken,omitempty"`
	// List of product-tier version sets.
	TierVersionSets []TierVersionSet `json:"tierVersionSets"`
}

type _ListTierVersionSetsResult ListTierVersionSetsResult

// NewListTierVersionSetsResult instantiates a new ListTierVersionSetsResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListTierVersionSetsResult(tierVersionSets []TierVersionSet) *ListTierVersionSetsResult {
	this := ListTierVersionSetsResult{}
	this.TierVersionSets = tierVersionSets
	return &this
}

// NewListTierVersionSetsResultWithDefaults instantiates a new ListTierVersionSetsResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListTierVersionSetsResultWithDefaults() *ListTierVersionSetsResult {
	this := ListTierVersionSetsResult{}
	return &this
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ListTierVersionSetsResult) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTierVersionSetsResult) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ListTierVersionSetsResult) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ListTierVersionSetsResult) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetTierVersionSets returns the TierVersionSets field value
func (o *ListTierVersionSetsResult) GetTierVersionSets() []TierVersionSet {
	if o == nil {
		var ret []TierVersionSet
		return ret
	}

	return o.TierVersionSets
}

// GetTierVersionSetsOk returns a tuple with the TierVersionSets field value
// and a boolean to check if the value has been set.
func (o *ListTierVersionSetsResult) GetTierVersionSetsOk() ([]TierVersionSet, bool) {
	if o == nil {
		return nil, false
	}
	return o.TierVersionSets, true
}

// SetTierVersionSets sets field value
func (o *ListTierVersionSetsResult) SetTierVersionSets(v []TierVersionSet) {
	o.TierVersionSets = v
}

func (o ListTierVersionSetsResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListTierVersionSetsResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	toSerialize["tierVersionSets"] = o.TierVersionSets
	return toSerialize, nil
}

func (o *ListTierVersionSetsResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tierVersionSets",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListTierVersionSetsResult := _ListTierVersionSetsResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListTierVersionSetsResult)

	if err != nil {
		return err
	}

	*o = ListTierVersionSetsResult(varListTierVersionSetsResult)

	return err
}

type NullableListTierVersionSetsResult struct {
	value *ListTierVersionSetsResult
	isSet bool
}

func (v NullableListTierVersionSetsResult) Get() *ListTierVersionSetsResult {
	return v.value
}

func (v *NullableListTierVersionSetsResult) Set(val *ListTierVersionSetsResult) {
	v.value = val
	v.isSet = true
}

func (v NullableListTierVersionSetsResult) IsSet() bool {
	return v.isSet
}

func (v *NullableListTierVersionSetsResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTierVersionSetsResult(val *ListTierVersionSetsResult) *NullableListTierVersionSetsResult {
	return &NullableListTierVersionSetsResult{value: val, isSet: true}
}

func (v NullableListTierVersionSetsResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListTierVersionSetsResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


