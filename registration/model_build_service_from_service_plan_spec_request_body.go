/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package registration

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BuildServiceFromServicePlanSpecRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BuildServiceFromServicePlanSpecRequestBody{}

// BuildServiceFromServicePlanSpecRequestBody struct for BuildServiceFromServicePlanSpecRequestBody
type BuildServiceFromServicePlanSpecRequestBody struct {
	// A brief description of the service
	Description *string `json:"description,omitempty"`
	// The environment to build the service in
	Environment *string `json:"environment,omitempty"`
	// The type of the environment
	EnvironmentType *string `json:"environmentType,omitempty"`
	// Base64 encoded Compose Spec YAML in service plan configuration format
	FileContent string `json:"fileContent"`
	// Name of the Service
	Name string `json:"name"`
	// The logo for the service
	ServiceLogoURL *string `json:"serviceLogoURL,omitempty"`
}

type _BuildServiceFromServicePlanSpecRequestBody BuildServiceFromServicePlanSpecRequestBody

// NewBuildServiceFromServicePlanSpecRequestBody instantiates a new BuildServiceFromServicePlanSpecRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildServiceFromServicePlanSpecRequestBody(fileContent string, name string) *BuildServiceFromServicePlanSpecRequestBody {
	this := BuildServiceFromServicePlanSpecRequestBody{}
	this.FileContent = fileContent
	this.Name = name
	return &this
}

// NewBuildServiceFromServicePlanSpecRequestBodyWithDefaults instantiates a new BuildServiceFromServicePlanSpecRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildServiceFromServicePlanSpecRequestBodyWithDefaults() *BuildServiceFromServicePlanSpecRequestBody {
	this := BuildServiceFromServicePlanSpecRequestBody{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BuildServiceFromServicePlanSpecRequestBody) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildServiceFromServicePlanSpecRequestBody) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BuildServiceFromServicePlanSpecRequestBody) SetDescription(v string) {
	o.Description = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *BuildServiceFromServicePlanSpecRequestBody) GetEnvironment() string {
	if o == nil || IsNil(o.Environment) {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildServiceFromServicePlanSpecRequestBody) GetEnvironmentOk() (*string, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *BuildServiceFromServicePlanSpecRequestBody) SetEnvironment(v string) {
	o.Environment = &v
}

// GetEnvironmentType returns the EnvironmentType field value if set, zero value otherwise.
func (o *BuildServiceFromServicePlanSpecRequestBody) GetEnvironmentType() string {
	if o == nil || IsNil(o.EnvironmentType) {
		var ret string
		return ret
	}
	return *o.EnvironmentType
}

// GetEnvironmentTypeOk returns a tuple with the EnvironmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildServiceFromServicePlanSpecRequestBody) GetEnvironmentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentType) {
		return nil, false
	}
	return o.EnvironmentType, true
}

// SetEnvironmentType gets a reference to the given string and assigns it to the EnvironmentType field.
func (o *BuildServiceFromServicePlanSpecRequestBody) SetEnvironmentType(v string) {
	o.EnvironmentType = &v
}

// GetFileContent returns the FileContent field value
func (o *BuildServiceFromServicePlanSpecRequestBody) GetFileContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileContent
}

// GetFileContentOk returns a tuple with the FileContent field value
// and a boolean to check if the value has been set.
func (o *BuildServiceFromServicePlanSpecRequestBody) GetFileContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileContent, true
}

// SetFileContent sets field value
func (o *BuildServiceFromServicePlanSpecRequestBody) SetFileContent(v string) {
	o.FileContent = v
}

// GetName returns the Name field value
func (o *BuildServiceFromServicePlanSpecRequestBody) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BuildServiceFromServicePlanSpecRequestBody) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BuildServiceFromServicePlanSpecRequestBody) SetName(v string) {
	o.Name = v
}

// GetServiceLogoURL returns the ServiceLogoURL field value if set, zero value otherwise.
func (o *BuildServiceFromServicePlanSpecRequestBody) GetServiceLogoURL() string {
	if o == nil || IsNil(o.ServiceLogoURL) {
		var ret string
		return ret
	}
	return *o.ServiceLogoURL
}

// GetServiceLogoURLOk returns a tuple with the ServiceLogoURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildServiceFromServicePlanSpecRequestBody) GetServiceLogoURLOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceLogoURL) {
		return nil, false
	}
	return o.ServiceLogoURL, true
}

// SetServiceLogoURL gets a reference to the given string and assigns it to the ServiceLogoURL field.
func (o *BuildServiceFromServicePlanSpecRequestBody) SetServiceLogoURL(v string) {
	o.ServiceLogoURL = &v
}

func (o BuildServiceFromServicePlanSpecRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuildServiceFromServicePlanSpecRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.EnvironmentType) {
		toSerialize["environmentType"] = o.EnvironmentType
	}
	toSerialize["fileContent"] = o.FileContent
	toSerialize["name"] = o.Name
	if !IsNil(o.ServiceLogoURL) {
		toSerialize["serviceLogoURL"] = o.ServiceLogoURL
	}
	return toSerialize, nil
}

func (o *BuildServiceFromServicePlanSpecRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fileContent",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBuildServiceFromServicePlanSpecRequestBody := _BuildServiceFromServicePlanSpecRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBuildServiceFromServicePlanSpecRequestBody)

	if err != nil {
		return err
	}

	*o = BuildServiceFromServicePlanSpecRequestBody(varBuildServiceFromServicePlanSpecRequestBody)

	return err
}

type NullableBuildServiceFromServicePlanSpecRequestBody struct {
	value *BuildServiceFromServicePlanSpecRequestBody
	isSet bool
}

func (v NullableBuildServiceFromServicePlanSpecRequestBody) Get() *BuildServiceFromServicePlanSpecRequestBody {
	return v.value
}

func (v *NullableBuildServiceFromServicePlanSpecRequestBody) Set(val *BuildServiceFromServicePlanSpecRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildServiceFromServicePlanSpecRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildServiceFromServicePlanSpecRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildServiceFromServicePlanSpecRequestBody(val *BuildServiceFromServicePlanSpecRequestBody) *NullableBuildServiceFromServicePlanSpecRequestBody {
	return &NullableBuildServiceFromServicePlanSpecRequestBody{value: val, isSet: true}
}

func (v NullableBuildServiceFromServicePlanSpecRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildServiceFromServicePlanSpecRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


