/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package registration

import (
	"encoding/json"
)

// checks if the UpdateProductTierBillingPlanRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProductTierBillingPlanRequestBody{}

// UpdateProductTierBillingPlanRequestBody struct for UpdateProductTierBillingPlanRequestBody
type UpdateProductTierBillingPlanRequestBody struct {
	// Allow creates when payment not configured
	AllowCreatesWhenPaymentNotConfigured *bool `json:"allowCreatesWhenPaymentNotConfigured,omitempty"`
	// Maximum number of instances
	MaxNumberofInstances *int64 `json:"maxNumberofInstances,omitempty"`
	// Plan name
	PlanName *string `json:"planName,omitempty"`
	// Pricing in dollars.
	Pricing interface{} `json:"pricing,omitempty"`
}

// NewUpdateProductTierBillingPlanRequestBody instantiates a new UpdateProductTierBillingPlanRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProductTierBillingPlanRequestBody() *UpdateProductTierBillingPlanRequestBody {
	this := UpdateProductTierBillingPlanRequestBody{}
	return &this
}

// NewUpdateProductTierBillingPlanRequestBodyWithDefaults instantiates a new UpdateProductTierBillingPlanRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProductTierBillingPlanRequestBodyWithDefaults() *UpdateProductTierBillingPlanRequestBody {
	this := UpdateProductTierBillingPlanRequestBody{}
	return &this
}

// GetAllowCreatesWhenPaymentNotConfigured returns the AllowCreatesWhenPaymentNotConfigured field value if set, zero value otherwise.
func (o *UpdateProductTierBillingPlanRequestBody) GetAllowCreatesWhenPaymentNotConfigured() bool {
	if o == nil || IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		var ret bool
		return ret
	}
	return *o.AllowCreatesWhenPaymentNotConfigured
}

// GetAllowCreatesWhenPaymentNotConfiguredOk returns a tuple with the AllowCreatesWhenPaymentNotConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProductTierBillingPlanRequestBody) GetAllowCreatesWhenPaymentNotConfiguredOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		return nil, false
	}
	return o.AllowCreatesWhenPaymentNotConfigured, true
}

// HasAllowCreatesWhenPaymentNotConfigured returns a boolean if a field has been set.
func (o *UpdateProductTierBillingPlanRequestBody) HasAllowCreatesWhenPaymentNotConfigured() bool {
	if o != nil && !IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		return true
	}

	return false
}

// SetAllowCreatesWhenPaymentNotConfigured gets a reference to the given bool and assigns it to the AllowCreatesWhenPaymentNotConfigured field.
func (o *UpdateProductTierBillingPlanRequestBody) SetAllowCreatesWhenPaymentNotConfigured(v bool) {
	o.AllowCreatesWhenPaymentNotConfigured = &v
}

// GetMaxNumberofInstances returns the MaxNumberofInstances field value if set, zero value otherwise.
func (o *UpdateProductTierBillingPlanRequestBody) GetMaxNumberofInstances() int64 {
	if o == nil || IsNil(o.MaxNumberofInstances) {
		var ret int64
		return ret
	}
	return *o.MaxNumberofInstances
}

// GetMaxNumberofInstancesOk returns a tuple with the MaxNumberofInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProductTierBillingPlanRequestBody) GetMaxNumberofInstancesOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxNumberofInstances) {
		return nil, false
	}
	return o.MaxNumberofInstances, true
}

// HasMaxNumberofInstances returns a boolean if a field has been set.
func (o *UpdateProductTierBillingPlanRequestBody) HasMaxNumberofInstances() bool {
	if o != nil && !IsNil(o.MaxNumberofInstances) {
		return true
	}

	return false
}

// SetMaxNumberofInstances gets a reference to the given int64 and assigns it to the MaxNumberofInstances field.
func (o *UpdateProductTierBillingPlanRequestBody) SetMaxNumberofInstances(v int64) {
	o.MaxNumberofInstances = &v
}

// GetPlanName returns the PlanName field value if set, zero value otherwise.
func (o *UpdateProductTierBillingPlanRequestBody) GetPlanName() string {
	if o == nil || IsNil(o.PlanName) {
		var ret string
		return ret
	}
	return *o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProductTierBillingPlanRequestBody) GetPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.PlanName) {
		return nil, false
	}
	return o.PlanName, true
}

// HasPlanName returns a boolean if a field has been set.
func (o *UpdateProductTierBillingPlanRequestBody) HasPlanName() bool {
	if o != nil && !IsNil(o.PlanName) {
		return true
	}

	return false
}

// SetPlanName gets a reference to the given string and assigns it to the PlanName field.
func (o *UpdateProductTierBillingPlanRequestBody) SetPlanName(v string) {
	o.PlanName = &v
}

// GetPricing returns the Pricing field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateProductTierBillingPlanRequestBody) GetPricing() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Pricing
}

// GetPricingOk returns a tuple with the Pricing field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateProductTierBillingPlanRequestBody) GetPricingOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Pricing) {
		return nil, false
	}
	return &o.Pricing, true
}

// HasPricing returns a boolean if a field has been set.
func (o *UpdateProductTierBillingPlanRequestBody) HasPricing() bool {
	if o != nil && !IsNil(o.Pricing) {
		return true
	}

	return false
}

// SetPricing gets a reference to the given interface{} and assigns it to the Pricing field.
func (o *UpdateProductTierBillingPlanRequestBody) SetPricing(v interface{}) {
	o.Pricing = v
}

func (o UpdateProductTierBillingPlanRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProductTierBillingPlanRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowCreatesWhenPaymentNotConfigured) {
		toSerialize["allowCreatesWhenPaymentNotConfigured"] = o.AllowCreatesWhenPaymentNotConfigured
	}
	if !IsNil(o.MaxNumberofInstances) {
		toSerialize["maxNumberofInstances"] = o.MaxNumberofInstances
	}
	if !IsNil(o.PlanName) {
		toSerialize["planName"] = o.PlanName
	}
	if o.Pricing != nil {
		toSerialize["pricing"] = o.Pricing
	}
	return toSerialize, nil
}

type NullableUpdateProductTierBillingPlanRequestBody struct {
	value *UpdateProductTierBillingPlanRequestBody
	isSet bool
}

func (v NullableUpdateProductTierBillingPlanRequestBody) Get() *UpdateProductTierBillingPlanRequestBody {
	return v.value
}

func (v *NullableUpdateProductTierBillingPlanRequestBody) Set(val *UpdateProductTierBillingPlanRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProductTierBillingPlanRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProductTierBillingPlanRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProductTierBillingPlanRequestBody(val *UpdateProductTierBillingPlanRequestBody) *NullableUpdateProductTierBillingPlanRequestBody {
	return &NullableUpdateProductTierBillingPlanRequestBody{value: val, isSet: true}
}

func (v NullableUpdateProductTierBillingPlanRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProductTierBillingPlanRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


