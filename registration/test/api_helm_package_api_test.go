/*
Omnistrate Registration API

Testing HelmPackageApiAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package registration

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/omnistrate/omnistrate-sdk-go"
)

func Test_registration_HelmPackageApiAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test HelmPackageApiAPIService HelmPackageApiDeleteHelmPackage", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var chartName string
		var chartVersion string

		httpRes, err := apiClient.HelmPackageApiAPI.HelmPackageApiDeleteHelmPackage(context.Background(), chartName, chartVersion).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test HelmPackageApiAPIService HelmPackageApiDescribeHelmPackage", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var chartName string
		var chartVersion string

		resp, httpRes, err := apiClient.HelmPackageApiAPI.HelmPackageApiDescribeHelmPackage(context.Background(), chartName, chartVersion).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test HelmPackageApiAPIService HelmPackageApiListHelmPackages", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.HelmPackageApiAPI.HelmPackageApiListHelmPackages(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test HelmPackageApiAPIService HelmPackageApiSaveHelmPackage", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		httpRes, err := apiClient.HelmPackageApiAPI.HelmPackageApiSaveHelmPackage(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
