/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package registration

import (
	"encoding/json"
)

// checks if the ImageConfigChangeSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImageConfigChangeSummary{}

// ImageConfigChangeSummary struct for ImageConfigChangeSummary
type ImageConfigChangeSummary struct {
	// The pending change state for the infra configuration
	ChangeState *string `json:"changeState,omitempty"`
	// The ID of the image configuration that this resource refers to
	ImageConfigId *string `json:"imageConfigId,omitempty"`
	// Name of the container image
	ImageName *string `json:"imageName,omitempty"`
}

// NewImageConfigChangeSummary instantiates a new ImageConfigChangeSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageConfigChangeSummary() *ImageConfigChangeSummary {
	this := ImageConfigChangeSummary{}
	return &this
}

// NewImageConfigChangeSummaryWithDefaults instantiates a new ImageConfigChangeSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageConfigChangeSummaryWithDefaults() *ImageConfigChangeSummary {
	this := ImageConfigChangeSummary{}
	return &this
}

// GetChangeState returns the ChangeState field value if set, zero value otherwise.
func (o *ImageConfigChangeSummary) GetChangeState() string {
	if o == nil || IsNil(o.ChangeState) {
		var ret string
		return ret
	}
	return *o.ChangeState
}

// GetChangeStateOk returns a tuple with the ChangeState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageConfigChangeSummary) GetChangeStateOk() (*string, bool) {
	if o == nil || IsNil(o.ChangeState) {
		return nil, false
	}
	return o.ChangeState, true
}

// HasChangeState returns a boolean if a field has been set.
func (o *ImageConfigChangeSummary) HasChangeState() bool {
	if o != nil && !IsNil(o.ChangeState) {
		return true
	}

	return false
}

// SetChangeState gets a reference to the given string and assigns it to the ChangeState field.
func (o *ImageConfigChangeSummary) SetChangeState(v string) {
	o.ChangeState = &v
}

// GetImageConfigId returns the ImageConfigId field value if set, zero value otherwise.
func (o *ImageConfigChangeSummary) GetImageConfigId() string {
	if o == nil || IsNil(o.ImageConfigId) {
		var ret string
		return ret
	}
	return *o.ImageConfigId
}

// GetImageConfigIdOk returns a tuple with the ImageConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageConfigChangeSummary) GetImageConfigIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImageConfigId) {
		return nil, false
	}
	return o.ImageConfigId, true
}

// HasImageConfigId returns a boolean if a field has been set.
func (o *ImageConfigChangeSummary) HasImageConfigId() bool {
	if o != nil && !IsNil(o.ImageConfigId) {
		return true
	}

	return false
}

// SetImageConfigId gets a reference to the given string and assigns it to the ImageConfigId field.
func (o *ImageConfigChangeSummary) SetImageConfigId(v string) {
	o.ImageConfigId = &v
}

// GetImageName returns the ImageName field value if set, zero value otherwise.
func (o *ImageConfigChangeSummary) GetImageName() string {
	if o == nil || IsNil(o.ImageName) {
		var ret string
		return ret
	}
	return *o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageConfigChangeSummary) GetImageNameOk() (*string, bool) {
	if o == nil || IsNil(o.ImageName) {
		return nil, false
	}
	return o.ImageName, true
}

// HasImageName returns a boolean if a field has been set.
func (o *ImageConfigChangeSummary) HasImageName() bool {
	if o != nil && !IsNil(o.ImageName) {
		return true
	}

	return false
}

// SetImageName gets a reference to the given string and assigns it to the ImageName field.
func (o *ImageConfigChangeSummary) SetImageName(v string) {
	o.ImageName = &v
}

func (o ImageConfigChangeSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImageConfigChangeSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChangeState) {
		toSerialize["changeState"] = o.ChangeState
	}
	if !IsNil(o.ImageConfigId) {
		toSerialize["imageConfigId"] = o.ImageConfigId
	}
	if !IsNil(o.ImageName) {
		toSerialize["imageName"] = o.ImageName
	}
	return toSerialize, nil
}

type NullableImageConfigChangeSummary struct {
	value *ImageConfigChangeSummary
	isSet bool
}

func (v NullableImageConfigChangeSummary) Get() *ImageConfigChangeSummary {
	return v.value
}

func (v *NullableImageConfigChangeSummary) Set(val *ImageConfigChangeSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableImageConfigChangeSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableImageConfigChangeSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageConfigChangeSummary(val *ImageConfigChangeSummary) *NullableImageConfigChangeSummary {
	return &NullableImageConfigChangeSummary{value: val, isSet: true}
}

func (v NullableImageConfigChangeSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageConfigChangeSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


