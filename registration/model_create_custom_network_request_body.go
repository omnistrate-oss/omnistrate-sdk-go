/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package registration

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateCustomNetworkRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCustomNetworkRequestBody{}

// CreateCustomNetworkRequestBody struct for CreateCustomNetworkRequestBody
type CreateCustomNetworkRequestBody struct {
	// CIDR block for the network
	Cidr *string `json:"cidr,omitempty"`
	// The name of the cloud provider that the instance is running on.
	CloudProviderName string `json:"cloudProviderName"`
	// The region of the cloud provider that the instance is running in.
	CloudProviderRegion string `json:"cloudProviderRegion"`
	// User friendly network name to help distinguish networks with same CIDRs
	Name *string `json:"name,omitempty"`
	NetworkFeaturesConfiguration *NetworkFeaturesConfiguration `json:"networkFeaturesConfiguration,omitempty"`
}

type _CreateCustomNetworkRequestBody CreateCustomNetworkRequestBody

// NewCreateCustomNetworkRequestBody instantiates a new CreateCustomNetworkRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCustomNetworkRequestBody(cloudProviderName string, cloudProviderRegion string) *CreateCustomNetworkRequestBody {
	this := CreateCustomNetworkRequestBody{}
	var cidr string = "10.0.0.0/16"
	this.Cidr = &cidr
	this.CloudProviderName = cloudProviderName
	this.CloudProviderRegion = cloudProviderRegion
	return &this
}

// NewCreateCustomNetworkRequestBodyWithDefaults instantiates a new CreateCustomNetworkRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCustomNetworkRequestBodyWithDefaults() *CreateCustomNetworkRequestBody {
	this := CreateCustomNetworkRequestBody{}
	var cidr string = "10.0.0.0/16"
	this.Cidr = &cidr
	return &this
}

// GetCidr returns the Cidr field value if set, zero value otherwise.
func (o *CreateCustomNetworkRequestBody) GetCidr() string {
	if o == nil || IsNil(o.Cidr) {
		var ret string
		return ret
	}
	return *o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCustomNetworkRequestBody) GetCidrOk() (*string, bool) {
	if o == nil || IsNil(o.Cidr) {
		return nil, false
	}
	return o.Cidr, true
}

// HasCidr returns a boolean if a field has been set.
func (o *CreateCustomNetworkRequestBody) HasCidr() bool {
	if o != nil && !IsNil(o.Cidr) {
		return true
	}

	return false
}

// SetCidr gets a reference to the given string and assigns it to the Cidr field.
func (o *CreateCustomNetworkRequestBody) SetCidr(v string) {
	o.Cidr = &v
}

// GetCloudProviderName returns the CloudProviderName field value
func (o *CreateCustomNetworkRequestBody) GetCloudProviderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProviderName
}

// GetCloudProviderNameOk returns a tuple with the CloudProviderName field value
// and a boolean to check if the value has been set.
func (o *CreateCustomNetworkRequestBody) GetCloudProviderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProviderName, true
}

// SetCloudProviderName sets field value
func (o *CreateCustomNetworkRequestBody) SetCloudProviderName(v string) {
	o.CloudProviderName = v
}

// GetCloudProviderRegion returns the CloudProviderRegion field value
func (o *CreateCustomNetworkRequestBody) GetCloudProviderRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProviderRegion
}

// GetCloudProviderRegionOk returns a tuple with the CloudProviderRegion field value
// and a boolean to check if the value has been set.
func (o *CreateCustomNetworkRequestBody) GetCloudProviderRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProviderRegion, true
}

// SetCloudProviderRegion sets field value
func (o *CreateCustomNetworkRequestBody) SetCloudProviderRegion(v string) {
	o.CloudProviderRegion = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateCustomNetworkRequestBody) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCustomNetworkRequestBody) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateCustomNetworkRequestBody) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateCustomNetworkRequestBody) SetName(v string) {
	o.Name = &v
}

// GetNetworkFeaturesConfiguration returns the NetworkFeaturesConfiguration field value if set, zero value otherwise.
func (o *CreateCustomNetworkRequestBody) GetNetworkFeaturesConfiguration() NetworkFeaturesConfiguration {
	if o == nil || IsNil(o.NetworkFeaturesConfiguration) {
		var ret NetworkFeaturesConfiguration
		return ret
	}
	return *o.NetworkFeaturesConfiguration
}

// GetNetworkFeaturesConfigurationOk returns a tuple with the NetworkFeaturesConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCustomNetworkRequestBody) GetNetworkFeaturesConfigurationOk() (*NetworkFeaturesConfiguration, bool) {
	if o == nil || IsNil(o.NetworkFeaturesConfiguration) {
		return nil, false
	}
	return o.NetworkFeaturesConfiguration, true
}

// HasNetworkFeaturesConfiguration returns a boolean if a field has been set.
func (o *CreateCustomNetworkRequestBody) HasNetworkFeaturesConfiguration() bool {
	if o != nil && !IsNil(o.NetworkFeaturesConfiguration) {
		return true
	}

	return false
}

// SetNetworkFeaturesConfiguration gets a reference to the given NetworkFeaturesConfiguration and assigns it to the NetworkFeaturesConfiguration field.
func (o *CreateCustomNetworkRequestBody) SetNetworkFeaturesConfiguration(v NetworkFeaturesConfiguration) {
	o.NetworkFeaturesConfiguration = &v
}

func (o CreateCustomNetworkRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCustomNetworkRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cidr) {
		toSerialize["cidr"] = o.Cidr
	}
	toSerialize["cloudProviderName"] = o.CloudProviderName
	toSerialize["cloudProviderRegion"] = o.CloudProviderRegion
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NetworkFeaturesConfiguration) {
		toSerialize["networkFeaturesConfiguration"] = o.NetworkFeaturesConfiguration
	}
	return toSerialize, nil
}

func (o *CreateCustomNetworkRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloudProviderName",
		"cloudProviderRegion",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCustomNetworkRequestBody := _CreateCustomNetworkRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateCustomNetworkRequestBody)

	if err != nil {
		return err
	}

	*o = CreateCustomNetworkRequestBody(varCreateCustomNetworkRequestBody)

	return err
}

type NullableCreateCustomNetworkRequestBody struct {
	value *CreateCustomNetworkRequestBody
	isSet bool
}

func (v NullableCreateCustomNetworkRequestBody) Get() *CreateCustomNetworkRequestBody {
	return v.value
}

func (v *NullableCreateCustomNetworkRequestBody) Set(val *CreateCustomNetworkRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCustomNetworkRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCustomNetworkRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCustomNetworkRequestBody(val *CreateCustomNetworkRequestBody) *NullableCreateCustomNetworkRequestBody {
	return &NullableCreateCustomNetworkRequestBody{value: val, isSet: true}
}

func (v NullableCreateCustomNetworkRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCustomNetworkRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


