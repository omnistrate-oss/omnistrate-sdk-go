/*
Omnistrate Registration API

REST API for Omnistrate Service Registration

API version: 2022-09-01-00
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package registration

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EnableResourceCapabilityRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnableResourceCapabilityRequestBody{}

// EnableResourceCapabilityRequestBody struct for EnableResourceCapabilityRequestBody
type EnableResourceCapabilityRequestBody struct {
	// The type of capability of a resource
	Capability string `json:"capability"`
	// The configuration parameters of a capability of a resource
	Configuration map[string]interface{} `json:"configuration,omitempty"`
}

type _EnableResourceCapabilityRequestBody EnableResourceCapabilityRequestBody

// NewEnableResourceCapabilityRequestBody instantiates a new EnableResourceCapabilityRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnableResourceCapabilityRequestBody(capability string) *EnableResourceCapabilityRequestBody {
	this := EnableResourceCapabilityRequestBody{}
	this.Capability = capability
	return &this
}

// NewEnableResourceCapabilityRequestBodyWithDefaults instantiates a new EnableResourceCapabilityRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnableResourceCapabilityRequestBodyWithDefaults() *EnableResourceCapabilityRequestBody {
	this := EnableResourceCapabilityRequestBody{}
	return &this
}

// GetCapability returns the Capability field value
func (o *EnableResourceCapabilityRequestBody) GetCapability() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Capability
}

// GetCapabilityOk returns a tuple with the Capability field value
// and a boolean to check if the value has been set.
func (o *EnableResourceCapabilityRequestBody) GetCapabilityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Capability, true
}

// SetCapability sets field value
func (o *EnableResourceCapabilityRequestBody) SetCapability(v string) {
	o.Capability = v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *EnableResourceCapabilityRequestBody) GetConfiguration() map[string]interface{} {
	if o == nil || IsNil(o.Configuration) {
		var ret map[string]interface{}
		return ret
	}
	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnableResourceCapabilityRequestBody) GetConfigurationOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Configuration) {
		return map[string]interface{}{}, false
	}
	return o.Configuration, true
}

// SetConfiguration gets a reference to the given map[string]interface{} and assigns it to the Configuration field.
func (o *EnableResourceCapabilityRequestBody) SetConfiguration(v map[string]interface{}) {
	o.Configuration = v
}

func (o EnableResourceCapabilityRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnableResourceCapabilityRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["capability"] = o.Capability
	if !IsNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	return toSerialize, nil
}

func (o *EnableResourceCapabilityRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"capability",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEnableResourceCapabilityRequestBody := _EnableResourceCapabilityRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEnableResourceCapabilityRequestBody)

	if err != nil {
		return err
	}

	*o = EnableResourceCapabilityRequestBody(varEnableResourceCapabilityRequestBody)

	return err
}

type NullableEnableResourceCapabilityRequestBody struct {
	value *EnableResourceCapabilityRequestBody
	isSet bool
}

func (v NullableEnableResourceCapabilityRequestBody) Get() *EnableResourceCapabilityRequestBody {
	return v.value
}

func (v *NullableEnableResourceCapabilityRequestBody) Set(val *EnableResourceCapabilityRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableEnableResourceCapabilityRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableEnableResourceCapabilityRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnableResourceCapabilityRequestBody(val *EnableResourceCapabilityRequestBody) *NullableEnableResourceCapabilityRequestBody {
	return &NullableEnableResourceCapabilityRequestBody{value: val, isSet: true}
}

func (v NullableEnableResourceCapabilityRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnableResourceCapabilityRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


